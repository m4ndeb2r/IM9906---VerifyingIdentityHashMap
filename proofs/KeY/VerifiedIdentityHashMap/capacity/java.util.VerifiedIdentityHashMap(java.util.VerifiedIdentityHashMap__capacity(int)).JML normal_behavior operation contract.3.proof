\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Mar 26 16:11:05 CET 2021
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , javaLoopTreatment-javaLoopTreatment\\:efficient
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\bootclasspath "../../../../jre";

\javaSource "../../../../src";

\include "../../../../functions.key";

\proofObligation "#Proof Obligation Settings
#Fri Mar 26 16:11:05 CET 2021
contract=java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap\\:\\:capacity(int)].JML normal_behavior operation contract.3
name=java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap\\:\\:capacity(int)].JML normal_behavior operation contract.3
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "martindeboer" ) (keyVersion "a6034b00a3"))

(autoModeTime "60924")

(branch "dummy ID"
(rule "expand_inInt" (formula "1") (term "1,0,0,0") (newnames "expectedMaxSize,self,result,exc,heapAtPre,o,f"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "assignment" (formula "9") (term "1"))
(rule "sequentialToParallel2" (formula "9"))
(rule "simplifyUpdate3" (formula "9") (term "1,0"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_capacity,savedHeapBefore_capacity,_expectedMaxSizeBefore_capacity"))
(rule "simplifyUpdate2" (formula "9") (term "1"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "minCapacity"))
(rule "compound_addition_2" (formula "9") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "x"))
(rule "assignmentModulo" (formula "9"))
(branch "Case 1"
   (rule "translateJavaMod" (formula "9") (term "0,0,1"))
   (rule "sequentialToParallel2" (formula "9"))
   (rule "simplifyUpdate3" (formula "9") (term "1,0"))
   (rule "applyOnElementary" (formula "9") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "9") (term "0,1,0"))
   (rule "applyOnPV" (formula "9") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "1,0,1,0"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_1"))
   (rule "compound_multiplication_1" (formula "9") (term "1") (inst "#v=x_2"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_2"))
   (rule "remove_parentheses_right" (formula "9") (term "1"))
   (rule "assignmentDivisionInt" (formula "9"))
   (branch "Case 1"
      (rule "translateJavaDivInt" (formula "9") (term "0,0,1"))
      (rule "sequentialToParallel2" (formula "9"))
      (rule "simplifyUpdate2" (formula "9"))
      (rule "simplifyUpdate3" (formula "9") (term "1,0"))
      (rule "applyOnElementary" (formula "9") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "9") (term "0,1,0"))
      (rule "applyOnPV" (formula "9") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "9") (term "1,0,1,0"))
      (rule "expand_divJint" (formula "9") (term "0,1,0"))
      (rule "expand_moduloInteger" (formula "9") (term "0,1,0"))
      (rule "replace_int_MIN" (formula "9") (term "0,0,1,0"))
      (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0,1,0"))
      (rule "replace_int_RANGE" (formula "9") (term "1,1,0,1,0"))
      (rule "assignmentMultiplicationInt" (formula "9") (term "1"))
      (rule "translateJavaMulInt" (formula "9") (term "0,0,1"))
      (rule "sequentialToParallel2" (formula "9"))
      (rule "simplifyUpdate2" (formula "9"))
      (rule "simplifyUpdate3" (formula "9") (term "1,0"))
      (rule "applyOnElementary" (formula "9") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "9") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "9") (term "1,0,1,0"))
      (rule "applyOnPV" (formula "9") (term "0,0,1,0"))
      (rule "expand_mulJint" (formula "9") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0"))
      (rule "mul_literals" (formula "9") (term "0,0,0,1,0"))
      (rule "expand_moduloInteger" (formula "9") (term "0,1,0"))
      (rule "replace_int_RANGE" (formula "9") (term "1,1,0,1,0"))
      (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0,1,0"))
      (rule "replace_int_MIN" (formula "9") (term "0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,1,0"))
      (rule "add_literals" (formula "9") (term "0,0,1,0,1,0"))
      (rule "assignmentAdditionInt" (formula "9") (term "1"))
      (rule "translateJavaAddInt" (formula "9") (term "0,0,1"))
      (rule "sequentialToParallel2" (formula "9"))
      (rule "simplifyUpdate2" (formula "9"))
      (rule "simplifyUpdate3" (formula "9") (term "1,0"))
      (rule "applyOnElementary" (formula "9") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "9") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "9") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "9") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "9") (term "1,0,1,0"))
      (rule "applyOnPV" (formula "9") (term "0,0,1,0"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "result_1"))
      (rule "expand_addJint" (formula "9") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
      (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1,0"))
      (rule "expand_moduloInteger" (formula "9") (term "0,1,0"))
      (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0,1,0"))
      (rule "replace_int_RANGE" (formula "9") (term "1,1,0,1,0"))
      (rule "replace_int_MIN" (formula "9") (term "0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,1,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,1,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,1,0,1,0"))
      (rule "add_zero_left" (formula "9") (term "0,0,1,0,1,0"))
      (rule "ifElseUnfold" (formula "9") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_3"))
      (rule "compound_assignment_5_nonsimple" (formula "9") (term "1"))
      (rule "ifElseUnfold" (formula "9") (term "1") (inst "#boolv=x_4"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_4"))
      (rule "greater_than_comparison_simple" (formula "9") (term "1"))
      (rule "insert_constant_value" (formula "9") (term "1,0,0,0,1"))
      (rule "sequentialToParallel2" (formula "9"))
      (rule "simplifyUpdate3" (formula "9") (term "1,0"))
      (rule "applyOnElementary" (formula "9") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "9") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "9") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "9") (term "1,0,1,0"))
      (rule "applyOnRigidFormula" (formula "9") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "9") (term "1,0,0,1,0"))
      (rule "applyOnPV" (formula "9") (term "0,0,0,1,0"))
      (rule "ifElseSplit" (formula "9"))
      (branch "if x_4 true"
         (rule "simplifyUpdate2" (formula "10"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "ifElseSkipElse" (formula "10") (term "1"))
         (rule "simplifyUpdate2" (formula "10"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "ifthenelse_concrete3" (formula "1"))
         (rule "boolean_not_equal_2" (formula "1") (term "1"))
         (rule "concrete_or_4" (formula "1"))
         (rule "assignment" (formula "10") (term "1"))
         (rule "simplifyUpdate2" (formula "10") (term "1"))
         (rule "assignment" (formula "10") (term "1"))
         (rule "insert_constant_value" (formula "10") (term "0,0,1"))
         (rule "sequentialToParallel2" (formula "10"))
         (rule "simplifyUpdate3" (formula "10") (term "1,0"))
         (rule "blockEmpty" (formula "10") (term "1"))
         (rule "methodCallReturn" (formula "10") (term "1"))
         (rule "assignment" (formula "10") (term "1"))
         (rule "sequentialToParallel2" (formula "10"))
         (rule "simplifyUpdate2" (formula "10"))
         (rule "simplifyUpdate3" (formula "10") (term "1,0"))
         (rule "applyOnElementary" (formula "10") (term "1,0"))
         (rule "applyOnPV" (formula "10") (term "0,1,0"))
         (rule "methodCallEmpty" (formula "10") (term "1"))
         (rule "tryEmpty" (formula "10") (term "1"))
         (rule "emptyModality" (formula "10") (term "1"))
         (rule "applyOnRigidFormula" (formula "10"))
         (rule "simplifyUpdate2" (formula "10") (term "1"))
         (rule "simplifyUpdate2" (formula "10") (term "0"))
         (rule "applyOnRigidFormula" (formula "10") (term "1"))
         (rule "applyOnRigidFormula" (formula "10") (term "0"))
         (rule "simplifyUpdate2" (formula "10") (term "0,0"))
         (rule "simplifyUpdate2" (formula "10") (term "1,0"))
         (rule "applyOnRigidFormula" (formula "10") (term "0,1"))
         (rule "applyOnRigidFormula" (formula "10") (term "0,0"))
         (rule "simplifyUpdate2" (formula "10") (term "1,0,0"))
         (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "8"))
         (rule "concrete_and_3" (formula "10") (term "0,0"))
         (rule "applyOnRigidFormula" (formula "10") (term "1,0"))
         (rule "applyOnPV" (formula "10") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "10") (term "1,1,0"))
         (rule "eqClose" (formula "10") (term "1,0"))
         (rule "concrete_and_3" (formula "10") (term "0"))
         (rule "applyOnRigidFormula" (formula "10") (term "0,0,1"))
         (rule "applyOnRigidFormula" (formula "10") (term "0"))
         (rule "applyOnRigidFormula" (formula "10") (term "1,0,0,1"))
         (rule "simplifyUpdate1" (formula "10") (term "1,1,0,0,1"))
         (rule "applyOnRigidFormula" (formula "10") (term "0,0,0,1"))
         (rule "simplifyUpdate2" (formula "10") (term "0,0,0,0,1"))
         (rule "applyOnRigidFormula" (formula "10") (term "0,0"))
         (rule "inEqSimp_gtToGeq" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "applyOnRigidTerm" (formula "10") (term "0,1,0,0,1"))
         (rule "simplifyUpdate1" (formula "10") (term "2,0,1,0,0,1"))
         (rule "simplifyUpdate1" (formula "10") (term "1,0,1,0,0,1"))
         (rule "applyOnPV" (formula "10") (term "0,0,1,0,0,1"))
         (rule "eqClose" (formula "10") (term "1,0,0,1"))
         (rule "concrete_or_3" (formula "10") (term "0,0,1"))
         (rule "applyOnRigidFormula" (formula "10") (term "0,0,0"))
         (rule "simplifyUpdate2" (formula "10") (term "0,0,0,0"))
         (rule "applyOnRigidFormula" (formula "10") (term "1,0,0"))
         (rule "applyOnPV" (formula "10") (term "1,1,0,0"))
         (rule "simplifyUpdate1" (formula "10") (term "0,1,0,0"))
         (rule "applyOnRigidFormula" (formula "10") (term "1,0,0,0"))
         (rule "applyOnPV" (formula "10") (term "1,1,0,0,0"))
         (rule "simplifyUpdate1" (formula "10") (term "0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,1,0,0,0"))
         (rule "mod_axiom" (formula "1") (term "1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1,0"))
         (rule "mod_axiom" (formula "1") (term "0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,0"))
         (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
         (rule "jmod_axiom" (formula "1") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,1,0"))
         (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
         (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "polyDiv_pullOut" (formula "1") (term "0,1,0,0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,0,0"))
         (rule "equal_literals" (formula "1") (term "0,0,1,0,0"))
         (rule "ifthenelse_false" (formula "1") (term "0,1,0,0"))
         (rule "mul_literals" (formula "1") (term "1,0,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,1,1,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
         (rule "polyMod_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=mul(div(mul(mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                    jdiv(expectedMaxSize, Z(2(#)))),
                Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
            Z(3(#))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0"))
         (rule "polyMod_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(expectedMaxSize, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(3(#))))"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0"))
         (rule "polyMod_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=Z(1(#))"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,0"))
         (rule "all_unused" (formula "10") (term "0,1"))
         (rule "all_unused" (formula "10") (term "1"))
         (rule "concrete_and_3" (formula "10"))
         (rule "nnf_ex2all" (formula "10"))
         (rule "nnf_notAnd" (formula "1") (term "0"))
         (rule "nnf_notAnd" (formula "1") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
         (rule "mul_literals" (formula "1") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "1,1,0,0"))
         (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "9") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "5"))
         (rule "insert_constant_value" (formula "9") (term "1,1,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "9") (term "0,0,1,1,0,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "9") (term "0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "eqClose" (formula "9") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_3" (formula "9") (term "0,0,1,0,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "eqClose" (formula "9") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_3" (formula "9") (term "0,0,1,0,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "eqClose" (formula "9") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_3" (formula "9") (term "0,0,1,0,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "9"))
         (rule "notLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "notLeft" (formula "10"))
         (rule "notLeft" (formula "10"))
         (rule "exLeft" (formula "17") (inst "sk=i_1_0"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "17"))
         (rule "exLeft" (formula "16") (inst "sk=i_2_0"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "eqSymm" (formula "15"))
         (rule "eqSymm" (formula "13") (term "1,0,1,0,1,0"))
         (rule "eqSymm" (formula "13") (term "1,1,0,1,0"))
         (rule "eqSymm" (formula "18"))
         (rule "polySimp_mulComm0" (formula "23") (term "0,2,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "0,2,0,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "0,2,0,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "0,2,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "0,2,0,0,0,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "0,2,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "0,2,0,0,0,2,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "0,2,0,1,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "0,2,1,1,0,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "12") (term "0,2,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "14"))
         (rule "mul_literals" (formula "14") (term "1,0,0"))
         (rule "add_literals" (formula "14") (term "0,0"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "20"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "20") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "17"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "17") (term "0"))
         (rule "ifthenelse_negated" (formula "15") (term "2,0"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_mulAssoc" (formula "23") (term "1,0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1,1,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
         (rule "inEqSimp_gtToGeq" (formula "22") (term "1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
         (rule "inEqSimp_commuteGeq" (formula "11"))
         (rule "inEqSimp_commuteLeq" (formula "10"))
         (rule "inEqSimp_commuteLeq" (formula "19"))
         (rule "inEqSimp_commuteLeq" (formula "16"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,1,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,1,0"))
         (rule "applyEq" (formula "22") (term "2,0,1,0,0,0,1,1,0") (ifseqformula "18"))
         (rule "applyEq" (formula "23") (term "2,1,0,0,0,0,1,1,0") (ifseqformula "18"))
         (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "18"))
         (rule "applyEq" (formula "11") (term "0") (ifseqformula "18"))
         (rule "applyEq" (formula "23") (term "2,0,1,0,1,0,1,0") (ifseqformula "18"))
         (rule "applyEq" (formula "10") (term "0") (ifseqformula "18"))
         (rule "applyEq" (formula "20") (term "0,0,1,0") (ifseqformula "18"))
         (rule "applyEq" (formula "22") (term "2,0,1,0,1,0,1,0") (ifseqformula "18"))
         (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "18"))
         (rule "applyEq" (formula "22") (term "0,0,1,0,0,1,0,0") (ifseqformula "18"))
         (rule "applyEq" (formula "13") (term "0,0,1,0,0,1,0,0") (ifseqformula "18"))
         (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "18"))
         (rule "applyEq" (formula "12") (term "0,0,1,0,0,1,0,0") (ifseqformula "18"))
         (rule "applyEq" (formula "23") (term "0,0,1,0,0,1,0,0") (ifseqformula "18"))
         (rule "applyEq" (formula "13") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "18"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14"))
         (rule "mul_literals" (formula "14") (term "1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "23") (term "0,1,1,1,0,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "23") (term "0,1,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "20"))
         (rule "polySimp_mulLiterals" (formula "20") (term "0"))
         (rule "polySimp_elimOne" (formula "20") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "22") (term "0,1,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "17"))
         (rule "polySimp_mulLiterals" (formula "17") (term "0"))
         (rule "polySimp_elimOne" (formula "17") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
         (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
         (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0"))
         (rule "nonNull" (formula "9") (inst "i=i"))
         (rule "greater_literals" (formula "9") (term "0,1"))
         (rule "concrete_impl_1" (formula "9") (term "1"))
         (rule "sub_literals" (formula "9") (term "2,1,0,1"))
         (rule "nonNullZero" (formula "9") (term "1,0,1"))
         (rule "andLeft" (formula "9"))
         (rule "notLeft" (formula "9"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
         (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
         (rule "elimGcdLeq" (formula "23") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "23") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
         (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,1,1,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,1,1,0,0,1,1,0"))
         (rule "add_literals" (formula "23") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "23") (term "0,0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,1,1,0,0,1,1,0"))
         (rule "add_literals" (formula "23") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,1,0,1,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "23") (term "0,1,0,1,1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "23") (term "0,0,1,0,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "23") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1,1,0,0,1,1,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,1,1,0,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0,1,1,0,0,1,1,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,1,1,0,0,1,1,0"))
         (rule "add_literals" (formula "23") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,1,0,1,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "23") (term "0,1,0,1,1,0,0,1,1,0"))
         (rule "qeq_literals" (formula "23") (term "1,0,1,1,0,0,1,1,0"))
         (rule "concrete_and_3" (formula "23") (term "0,1,1,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,1,0,0,1,1,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,0,1,1,0,0,1,1,0"))
         (rule "add_zero_left" (formula "23") (term "0,0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,1,1,0,0,1,1,0"))
         (rule "add_literals" (formula "23") (term "1,0,0,1,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "23") (term "0,0,1,1,0,0,1,1,0"))
         (rule "leq_literals" (formula "23") (term "0,1,1,0,0,1,1,0"))
         (rule "ifthenelse_true_for" (formula "23") (term "1,1,0,0,1,1,0"))
         (rule "elimGcdGeq" (formula "23") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,1,0,0,1,1,0"))
         (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
         (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0,1,0,0,1,1,0"))
         (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "23") (term "0,0,0,0,1,0,0,1,1,0"))
         (rule "qeq_literals" (formula "23") (term "0,0,0,1,0,0,1,1,0"))
         (rule "concrete_and_1" (formula "23") (term "0,0,1,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,0,1,0,0,1,1,0"))
         (rule "add_literals" (formula "23") (term "1,0,0,0,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,0,1,1,0"))
         (rule "leq_literals" (formula "23") (term "0,0,1,0,0,1,1,0"))
         (rule "ifthenelse_true_for" (formula "23") (term "0,1,0,0,1,1,0"))
         (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "11"))
         (rule "polySimp_rightDist" (formula "17") (term "0,0"))
         (rule "mul_literals" (formula "17") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "17") (term "0"))
         (rule "add_literals" (formula "17") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "17"))
         (rule "polySimp_mulLiterals" (formula "17") (term "0"))
         (rule "polySimp_elimOne" (formula "17") (term "0"))
         (rule "nnf_imp2or" (formula "12") (term "1,0"))
         (rule "nnf_imp2or" (formula "13") (term "1,0,1,0"))
         (rule "nnf_imp2or" (formula "23") (term "0"))
         (rule "nnf_imp2or" (formula "9") (term "0"))
         (rule "nnf_imp2or" (formula "24") (term "0"))
         (rule "nnf_imp2or" (formula "12") (term "0"))
         (rule "nnf_imp2or" (formula "13") (term "0"))
         (rule "nnf_imp2or" (formula "23") (term "1,0"))
         (rule "nnf_notAnd" (formula "23") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
         (rule "mul_literals" (formula "23") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "9") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
         (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
         (rule "mul_literals" (formula "9") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
         (rule "nnf_imp2or" (formula "24") (term "1,0"))
         (rule "nnf_notAnd" (formula "24") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
         (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
         (rule "mul_literals" (formula "24") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "12") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
         (rule "mul_literals" (formula "12") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "13") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0"))
         (rule "nnf_imp2or" (formula "13") (term "0,1,0"))
         (rule "nnf_notAnd" (formula "23") (term "0,1,0"))
         (rule "double_not" (formula "23") (term "0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "23") (term "1,0,1,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,1,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,0"))
         (rule "add_zero_left" (formula "23") (term "0,0,1,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,0"))
         (rule "nnf_imp2or" (formula "23") (term "0,1,1,0"))
         (rule "nnf_notAnd" (formula "24") (term "0,1,0"))
         (rule "double_not" (formula "24") (term "0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "24") (term "1,0,1,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,1,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,1,0"))
         (rule "add_literals" (formula "24") (term "0,0,0,1,0,1,0"))
         (rule "add_zero_left" (formula "24") (term "0,0,1,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,0"))
         (rule "nnf_imp2or" (formula "24") (term "0,1,1,0"))
         (rule "nnf_notAnd" (formula "13") (term "0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,0"))
         (rule "nnf_notAnd" (formula "13") (term "0,1,0,1,0"))
         (rule "double_not" (formula "13") (term "0,0,1,0,1,0"))
         (rule "nnf_notAnd" (formula "23") (term "0,0,1,1,0"))
         (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,1,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,1,0"))
         (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,1,0"))
         (rule "nnf_notOr" (formula "24") (term "0,0,1,1,0"))
         (rule "nnf_notAnd" (formula "24") (term "0,0,0,1,1,0"))
         (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,1,1,0"))
         (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,1,1,0"))
         (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,1,1,0"))
         (rule "nnf_notAnd" (formula "24") (term "1,0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "24") (term "0,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "24") (term "1,0,0,0,1,0,0,1,1,0"))
         (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "24") (term "1,0,1,0,0,1,1,0"))
         (rule "inEqSimp_notLeq" (formula "24") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1,0,0,1,1,0"))
         (rule "add_literals" (formula "24") (term "0,0,0,1,1,0,0,1,1,0"))
         (rule "add_zero_left" (formula "24") (term "0,0,1,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,1,0"))
         (rule "jdiv_axiom" (formula "2") (term "1,0,0"))
         (rule "eqSymm" (formula "2"))
         (rule "polyDiv_pullOut" (formula "2") (term "0,2,0") (inst "polyDivCoeff=mul(expectedMaxSize, Z(neglit(1(#))))"))
         (rule "equal_literals" (formula "2") (term "0,0,2,0"))
         (rule "ifthenelse_false" (formula "2") (term "0,2,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,2,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,2,0"))
         (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,0,2,0"))
         (rule "add_literals" (formula "2") (term "1,0,0,0,2,0"))
         (rule "polySimp_elimOne" (formula "2") (term "0,0,0,2,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "2,0"))
         (rule "polySimp_addComm0" (formula "2") (term "1,2,0"))
         (rule "polySimp_rightDist" (formula "2") (term "2,0"))
         (rule "polySimp_mulAssoc" (formula "2") (term "0,2,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "0,0,2,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0,2,0"))
         (rule "polySimp_elimOne" (formula "2") (term "0,2,0"))
         (rule "commute_or_2" (formula "10") (term "0"))
         (rule "commute_or_2" (formula "13") (term "0"))
         (rule "jdiv_axiom" (formula "16") (term "1,0"))
         (rule "eqSymm" (formula "16"))
         (rule "inEqSimp_subsumption1" (formula "16") (term "0,0") (ifseqformula "11"))
         (rule "leq_literals" (formula "16") (term "0,0,0"))
         (rule "concrete_or_1" (formula "16") (term "0,0"))
         (rule "ifthenelse_true" (formula "16") (term "0"))
         (rule "eqSymm" (formula "16"))
         (rule "applyEqRigid" (formula "26") (term "1,1,0,0") (ifseqformula "16"))
         (rule "applyEqRigid" (formula "14") (term "1,1,0,0,1,0") (ifseqformula "16"))
         (rule "applyEqRigid" (formula "25") (term "1,1,0,0") (ifseqformula "16"))
         (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "16"))
         (rule "applyEq" (formula "23") (term "0") (ifseqformula "16"))
         (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "16"))
         (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "16"))
         (rule "arrayLengthIsAShort" (formula "21") (term "0"))
         (rule "expand_inShort" (formula "21"))
         (rule "replace_short_MIN" (formula "21") (term "0,1"))
         (rule "replace_short_MAX" (formula "21") (term "1,0"))
         (rule "andLeft" (formula "21"))
         (rule "inEqSimp_commuteLeq" (formula "22"))
         (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
         (rule "applyEq" (formula "21") (term "0") (ifseqformula "23"))
         (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "11"))
         (rule "leq_literals" (formula "22") (term "0"))
         (rule "concrete_or_1" (formula "22"))
         (rule "true_left" (formula "22"))
         (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "21"))
         (rule "leq_literals" (formula "12") (term "0"))
         (rule "concrete_or_1" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
         (rule "polySimp_rightDist" (formula "19") (term "0,0"))
         (rule "mul_literals" (formula "19") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "19") (term "0"))
         (rule "add_literals" (formula "19") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "19"))
         (rule "polySimp_mulLiterals" (formula "19") (term "0"))
         (rule "polySimp_elimOne" (formula "19") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "19"))
         (rule "leq_literals" (formula "18") (term "0"))
         (rule "concrete_or_1" (formula "18"))
         (rule "true_left" (formula "18"))
         (rule "arrayLengthNotNegative" (formula "21") (term "0"))
         (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
         (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "11"))
         (rule "leq_literals" (formula "21") (term "0"))
         (rule "concrete_or_1" (formula "21"))
         (rule "true_left" (formula "21"))
         (rule "commute_or_2" (formula "25") (term "0,1,1,0"))
         (rule "commute_or" (formula "10") (term "0,0"))
         (rule "commute_or" (formula "12") (term "0,0"))
         (rule "commute_or" (formula "26") (term "0,1,1,0"))
         (rule "shift_paren_or" (formula "13") (term "0,1,0"))
         (rule "commute_or_2" (formula "13") (term "0,0,1,0"))
         (rule "commute_or" (formula "25") (term "0,0,1,1,0"))
         (rule "commute_or_2" (formula "25") (term "0,1,1,0"))
         (rule "commute_or" (formula "13") (term "0,0,0,1,0"))
         (rule "commute_or_2" (formula "13") (term "0,0,1,0"))
         (rule "inEqSimp_or_weaken2" (formula "13") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "1,0,1,0,1,0"))
         (rule "add_literals" (formula "13") (term "0,1,0,1,0,1,0"))
         (rule "add_zero_left" (formula "13") (term "1,0,1,0,1,0"))
         (rule "eqClose" (formula "13") (term "0,1,0,1,0"))
         (rule "ifthenelse_true_for" (formula "13") (term "1,0,1,0"))
         (rule "commute_or" (formula "26") (term "0,1,0,1,1,0"))
         (rule "cnf_rightDist" (formula "26") (term "0,1,1,0"))
         (rule "commute_or_2" (formula "26") (term "1,0,1,1,0"))
         (rule "shift_paren_or" (formula "26") (term "0,0,1,1,0"))
         (rule "commute_or" (formula "26") (term "0,1,0,1,1,0"))
         (rule "div_axiom" (formula "2") (term "1,0") (inst "quotient=quotient_0"))
         (rule "equal_literals" (formula "2") (term "0"))
         (rule "concrete_or_2" (formula "2"))
         (rule "qeq_literals" (formula "2") (term "0,1"))
         (rule "ifthenelse_true_for" (formula "2") (term "1"))
         (rule "mul_literals" (formula "2") (term "1,1,1"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "2"))
         (rule "polySimp_addComm1" (formula "4") (term "1"))
         (rule "add_literals" (formula "4") (term "0,1"))
         (rule "inEqSimp_commuteLeq" (formula "3"))
         (rule "inEqSimp_homoInEq1" (formula "4"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
         (rule "polySimp_addComm1" (formula "4") (term "0"))
         (rule "applyEq" (formula "5") (term "0,1,2,0") (ifseqformula "2"))
         (rule "polySimp_addComm0" (formula "5") (term "2,0"))
         (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "2"))
         (rule "inEqSimp_sepPosMonomial0" (formula "4"))
         (rule "polySimp_mulComm0" (formula "4") (term "1"))
         (rule "polySimp_rightDist" (formula "4") (term "1"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
         (rule "mul_literals" (formula "4") (term "0,1"))
         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "10"))
         (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
         (rule "polySimp_addComm0" (formula "3") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
         (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,1,0"))
         (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
         (rule "leq_literals" (formula "3") (term "0,0"))
         (rule "concrete_or_2" (formula "3") (term "0"))
         (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
         (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
         (rule "add_literals" (formula "3") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
         (rule "add_literals" (formula "3") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "3") (term "1,0,0"))
         (rule "add_zero_right" (formula "3") (term "0,0"))
         (rule "qeq_literals" (formula "3") (term "0"))
         (rule "concrete_or_2" (formula "3"))
         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "5"))
         (rule "mul_literals" (formula "12") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0"))
         (rule "add_literals" (formula "12") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12"))
         (rule "mul_literals" (formula "12") (term "1"))
         (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(neglit(4(2(8(1(4(7(3(7(0(1(#))))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1,0"))
         (rule "leq_literals" (formula "12") (term "0,0"))
         (rule "concrete_or_2" (formula "12") (term "0"))
         (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
         (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
         (rule "add_literals" (formula "12") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0"))
         (rule "add_literals" (formula "12") (term "0,0"))
         (rule "leq_literals" (formula "12") (term "0"))
         (rule "concrete_or_2" (formula "12"))
         (rule "div_axiom" (formula "20") (term "1") (inst "quotient=quotient_1"))
         (rule "equal_literals" (formula "20") (term "0"))
         (rule "concrete_or_2" (formula "20"))
         (rule "mul_literals" (formula "20") (term "1,1,1,1"))
         (rule "qeq_literals" (formula "20") (term "0,1"))
         (rule "ifthenelse_true_for" (formula "20") (term "1"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "20"))
         (rule "polySimp_addComm1" (formula "22") (term "1"))
         (rule "add_literals" (formula "22") (term "0,1"))
         (rule "inEqSimp_commuteLeq" (formula "21"))
         (rule "inEqSimp_homoInEq1" (formula "22"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
         (rule "polySimp_addComm1" (formula "22") (term "0"))
         (rule "applyEqRigid" (formula "33") (term "1,1,0,0") (ifseqformula "20"))
         (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "20"))
         (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "20"))
         (rule "applyEqRigid" (formula "18") (term "1,1,0,0") (ifseqformula "20"))
         (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "20"))
         (rule "inEqSimp_homoInEq1" (formula "31"))
         (rule "polySimp_addComm1" (formula "31") (term "0"))
         (rule "applyEq" (formula "34") (term "1,1,0,0") (ifseqformula "20"))
         (rule "applyEq" (formula "18") (term "1,1,0,0,1,0") (ifseqformula "20"))
         (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "20"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22"))
         (rule "polySimp_mulComm0" (formula "22") (term "1"))
         (rule "polySimp_rightDist" (formula "22") (term "1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
         (rule "mul_literals" (formula "22") (term "0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "31"))
         (rule "polySimp_mulComm0" (formula "31") (term "1"))
         (rule "polySimp_rightDist" (formula "31") (term "1"))
         (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
         (rule "mul_literals" (formula "31") (term "0,1"))
         (rule "polySimp_elimOne" (formula "31") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "22"))
         (rule "polySimp_rightDist" (formula "27") (term "0,0"))
         (rule "mul_literals" (formula "27") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "27") (term "0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
         (rule "add_literals" (formula "27") (term "0,0,0"))
         (rule "add_zero_left" (formula "27") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "27"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0"))
         (rule "polySimp_elimOne" (formula "27") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "29"))
         (rule "polySimp_mulAssoc" (formula "21") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
         (rule "polySimp_addComm0" (formula "21") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "21"))
         (rule "polySimp_mulLiterals" (formula "21") (term "0"))
         (rule "elimGcdLeq_antec" (formula "21") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
         (rule "leq_literals" (formula "21") (term "0,0"))
         (rule "concrete_or_2" (formula "21") (term "0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
         (rule "neg_literal" (formula "21") (term "0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
         (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
         (rule "add_literals" (formula "21") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
         (rule "add_literals" (formula "21") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "21") (term "1,0,0"))
         (rule "add_zero_right" (formula "21") (term "0,0"))
         (rule "qeq_literals" (formula "21") (term "0"))
         (rule "concrete_or_2" (formula "21"))
         (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "23"))
         (rule "mul_literals" (formula "16") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0"))
         (rule "add_literals" (formula "16") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16"))
         (rule "mul_literals" (formula "16") (term "1"))
         (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
         (rule "leq_literals" (formula "16") (term "0,0"))
         (rule "concrete_or_2" (formula "16") (term "0"))
         (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
         (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
         (rule "add_literals" (formula "16") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
         (rule "add_literals" (formula "16") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "16") (term "1,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0"))
         (rule "leq_literals" (formula "16") (term "0"))
         (rule "concrete_or_2" (formula "16"))
         (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
         (rule "mul_literals" (formula "33") (term "0,0"))
         (rule "add_zero_left" (formula "33") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "33"))
         (rule "mul_literals" (formula "33") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "16"))
         (rule "leq_literals" (formula "33") (term "0"))
         (rule "concrete_or_1" (formula "33"))
         (rule "true_left" (formula "33"))
         (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "29"))
         (rule "times_zero_1" (formula "27") (term "0,0"))
         (rule "add_zero_left" (formula "27") (term "0"))
         (rule "inEqSimp_subsumption6" (formula "27") (ifseqformula "16"))
         (rule "mul_literals" (formula "27") (term "1,1,0"))
         (rule "greater_literals" (formula "27") (term "0,0"))
         (rule "concrete_and_1" (formula "27") (term "0"))
         (rule "leq_literals" (formula "27") (term "0"))
         (rule "concrete_or_1" (formula "27"))
         (rule "true_left" (formula "27"))
         (rule "all_pull_out3" (formula "36") (term "1,0"))
         (rule "all_pull_out3" (formula "37") (term "1,0"))
         (rule "shift_paren_or" (formula "36") (term "0,1,0"))
         (rule "shift_paren_or" (formula "36") (term "0,0,1,0"))
         (rule "commute_or_2" (formula "36") (term "0,0,0,1,0"))
         (rule "cnf_rightDist" (formula "37") (term "0,1,0"))
         (rule "commute_or_2" (formula "37") (term "1,0,1,0"))
         (rule "shift_paren_or" (formula "37") (term "0,0,1,0"))
         (rule "commute_or_2" (formula "37") (term "0,1,0,1,0"))
         (rule "ifthenelse_split" (formula "6") (term "0"))
         (branch "expectedMaxSize >= 0 TRUE"
            (rule "eqSymm" (formula "7"))
            (rule "applyEq" (formula "8") (term "1,0,0") (ifseqformula "7"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0"))
            (rule "mod_axiom" (formula "8") (term "0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
            (rule "inEqSimp_homoInEq1" (formula "8"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0"))
            (rule "mul_literals" (formula "8") (term "0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8"))
            (rule "polySimp_mulComm0" (formula "8") (term "1"))
            (rule "polySimp_rightDist" (formula "8") (term "1"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1"))
            (rule "polySimp_rightDist" (formula "8") (term "0,1"))
            (rule "mul_literals" (formula "8") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
            (rule "polySimp_elimOne" (formula "8") (term "1,0,1"))
            (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "6"))
            (rule "leq_literals" (formula "14") (term "0"))
            (rule "concrete_or_1" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
            (rule "times_zero_1" (formula "6") (term "0,0"))
            (rule "add_zero_left" (formula "6") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
            (rule "mul_literals" (formula "6") (term "1"))
            (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
            (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "6") (term "0,0"))
            (rule "concrete_or_2" (formula "6") (term "0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "6") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
            (rule "add_literals" (formula "6") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0"))
            (rule "leq_literals" (formula "6") (term "0"))
            (rule "concrete_or_2" (formula "6"))
            (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "6"))
            (rule "leq_literals" (formula "14") (term "0"))
            (rule "concrete_or_1" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "1,0") (ifseqformula "10"))
            (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "39"))
            (rule "concrete_or_2" (formula "35"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "10"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
            (rule "concrete_or_2" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "11"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
            (rule "concrete_or_2" (formula "1"))
            (rule "shift_paren_or" (formula "40") (term "0,0,0,1,0"))
            (rule "all_pull_out3" (formula "21") (term "0"))
            (rule "shift_paren_or" (formula "21") (term "0,0"))
            (rule "shift_paren_or" (formula "40") (term "0,0,1,0,1,0"))
            (rule "shift_paren_or" (formula "21") (term "0,0,0"))
            (rule "allLeft" (formula "3") (inst "t=i_2_0"))
            (rule "inEqSimp_contradEq3" (formula "3") (term "0,1") (ifseqformula "34"))
            (rule "mul_literals" (formula "3") (term "1,0,0,0,1"))
            (rule "add_literals" (formula "3") (term "0,0,0,1"))
            (rule "qeq_literals" (formula "3") (term "0,0,1"))
            (rule "concrete_and_2" (formula "3") (term "0,1"))
            (rule "concrete_not_2" (formula "3") (term "1"))
            (rule "concrete_or_3" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "commute_or_2" (formula "21") (term "0,0,0,0"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0") (ifseqformula "12"))
            (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "39"))
            (rule "concrete_or_1" (formula "38"))
            (rule "true_left" (formula "38"))
            (rule "commute_or" (formula "21") (term "0,0,0,0,0"))
            (rule "commute_or_2" (formula "40") (term "0,0,0,0,1,0"))
            (rule "commute_or" (formula "40") (term "0,0,0,1,0,1,0"))
            (rule "all_pull_out3" (formula "39") (term "0"))
            (rule "shift_paren_or" (formula "39") (term "0,0"))
            (rule "shift_paren_or" (formula "39") (term "0,0,0"))
            (rule "shift_paren_or" (formula "39") (term "0,0,0,0"))
            (rule "commute_or_2" (formula "39") (term "0,0,0,0,0"))
            (rule "commute_or" (formula "39") (term "0,0,0,0,0,0"))
            (rule "div_axiom" (formula "11") (term "0,0") (inst "quotient=quotient_2"))
            (rule "mul_literals" (formula "11") (term "1,1,1,1,1"))
            (rule "qeq_literals" (formula "11") (term "0,1,1"))
            (rule "ifthenelse_true_for" (formula "11") (term "1,1"))
            (rule "equal_literals" (formula "11") (term "0"))
            (rule "concrete_or_2" (formula "11"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "11"))
            (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
            (rule "polySimp_addComm1" (formula "13") (term "1"))
            (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
            (rule "add_literals" (formula "13") (term "0,0,0,1"))
            (rule "polySimp_addComm1" (formula "13") (term "0,1"))
            (rule "add_literals" (formula "13") (term "0,0,1"))
            (rule "inEqSimp_homoInEq0" (formula "12"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0"))
            (rule "inEqSimp_homoInEq1" (formula "13"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
            (rule "polySimp_addComm1" (formula "13") (term "0"))
            (rule "polySimp_addComm1" (formula "13") (term "0,0"))
            (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "11"))
            (rule "inEqSimp_homoInEq0" (formula "14"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12"))
            (rule "polySimp_mulComm0" (formula "12") (term "1"))
            (rule "polySimp_rightDist" (formula "12") (term "1"))
            (rule "polySimp_rightDist" (formula "12") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1"))
            (rule "mul_literals" (formula "12") (term "0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13"))
            (rule "polySimp_mulComm0" (formula "13") (term "1"))
            (rule "polySimp_rightDist" (formula "13") (term "1"))
            (rule "polySimp_rightDist" (formula "13") (term "0,1"))
            (rule "mul_literals" (formula "13") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "14"))
            (rule "polySimp_mulComm0" (formula "14") (term "1"))
            (rule "polySimp_rightDist" (formula "14") (term "1"))
            (rule "polySimp_rightDist" (formula "14") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
            (rule "mul_literals" (formula "14") (term "0,0,1"))
            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "14"))
            (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "12") (term "0,0"))
            (rule "add_literals" (formula "12") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
            (rule "add_literals" (formula "12") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,0"))
            (rule "qeq_literals" (formula "12") (term "0"))
            (rule "concrete_or_1" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "12"))
            (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "6") (term "0"))
            (rule "polySimp_addComm0" (formula "6") (term "0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
            (rule "add_literals" (formula "6") (term "1,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "18"))
            (rule "polySimp_rightDist" (formula "14") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0"))
            (rule "polySimp_rightDist" (formula "14") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
            (rule "mul_literals" (formula "14") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0"))
            (rule "add_literals" (formula "14") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "14"))
            (rule "polySimp_mulComm0" (formula "14") (term "1"))
            (rule "polySimp_rightDist" (formula "14") (term "1"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
            (rule "mul_literals" (formula "14") (term "0,1"))
            (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "13"))
            (rule "times_zero_1" (formula "10") (term "0,0"))
            (rule "add_zero_left" (formula "10") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "10"))
            (rule "polySimp_mulLiterals" (formula "10") (term "0"))
            (rule "polySimp_elimOne" (formula "10") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "8"))
            (rule "polySimp_rightDist" (formula "16") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "0,0,0"))
            (rule "mul_literals" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
            (rule "add_literals" (formula "16") (term "1,1,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0"))
            (rule "add_literals" (formula "16") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16"))
            (rule "polySimp_mulComm0" (formula "16") (term "1"))
            (rule "polySimp_rightDist" (formula "16") (term "1"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
            (rule "mul_literals" (formula "16") (term "0,1"))
            (rule "inEqSimp_exactShadow2" (formula "9") (ifseqformula "6"))
            (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
            (rule "greater_literals" (formula "9") (term "0"))
            (rule "concrete_impl_1" (formula "9"))
            (rule "times_zero_1" (formula "9") (term "0,0"))
            (rule "add_zero_left" (formula "9") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9"))
            (rule "mul_literals" (formula "9") (term "1"))
            (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
            (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "9") (term "0,0"))
            (rule "concrete_or_2" (formula "9") (term "0"))
            (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
            (rule "add_literals" (formula "9") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "9") (term "1,0,0"))
            (rule "add_zero_right" (formula "9") (term "0,0"))
            (rule "leq_literals" (formula "9") (term "0"))
            (rule "concrete_or_2" (formula "9"))
            (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "11"))
            (rule "times_zero_1" (formula "10") (term "0,0"))
            (rule "add_zero_left" (formula "10") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "10"))
            (rule "mul_literals" (formula "10") (term "1"))
            (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "9"))
            (rule "greater_literals" (formula "10") (term "0,0"))
            (rule "concrete_and_1" (formula "10") (term "0"))
            (rule "times_zero_1" (formula "10") (term "1,0"))
            (rule "leq_literals" (formula "10") (term "0"))
            (rule "concrete_or_1" (formula "10"))
            (rule "true_left" (formula "10"))
            (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "5"))
            (rule "polySimp_rightDist" (formula "16") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
            (rule "mul_literals" (formula "16") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0"))
            (rule "add_literals" (formula "16") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "16"))
            (rule "polySimp_mulLiterals" (formula "16") (term "0"))
            (rule "elimGcdLeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
            (rule "leq_literals" (formula "16") (term "0,0"))
            (rule "concrete_or_2" (formula "16") (term "0"))
            (rule "neg_literal" (formula "16") (term "0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
            (rule "add_literals" (formula "16") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,0"))
            (rule "qeq_literals" (formula "16") (term "0"))
            (rule "concrete_or_2" (formula "16"))
            (rule "inEqSimp_exactShadow1" (formula "18") (ifseqformula "11"))
            (rule "greater_literals" (formula "18") (term "0"))
            (rule "concrete_impl_1" (formula "18"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0"))
            (rule "polySimp_rightDist" (formula "18") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "18") (term "0"))
            (rule "add_literals" (formula "18") (term "1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
            (rule "mul_literals" (formula "18") (term "1"))
            (rule "inEqSimp_subsumption6" (formula "18") (ifseqformula "9"))
            (rule "times_zero_1" (formula "18") (term "1,1,0"))
            (rule "greater_literals" (formula "18") (term "0,0"))
            (rule "concrete_and_1" (formula "18") (term "0"))
            (rule "leq_literals" (formula "18") (term "0"))
            (rule "concrete_or_1" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "inEqSimp_exactShadow2" (formula "17") (ifseqformula "6"))
            (rule "greater_literals" (formula "17") (term "0"))
            (rule "concrete_impl_1" (formula "17"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
            (rule "mul_literals" (formula "17") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,0"))
            (rule "add_literals" (formula "17") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "17") (term "0"))
            (rule "add_literals" (formula "17") (term "1,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "17"))
            (rule "polySimp_mulLiterals" (formula "17") (term "0"))
            (rule "inEqSimp_subsumption4" (formula "17") (ifseqformula "16"))
            (rule "greater_literals" (formula "17") (term "0,0"))
            (rule "concrete_and_1" (formula "17") (term "0"))
            (rule "times_zero_1" (formula "17") (term "0,0"))
            (rule "leq_literals" (formula "17") (term "0"))
            (rule "concrete_or_1" (formula "17"))
            (rule "true_left" (formula "17"))
            (rule "inEqSimp_exactShadow1" (formula "18") (ifseqformula "5"))
            (rule "mul_literals" (formula "18") (term "1,0,1"))
            (rule "greater_literals" (formula "18") (term "0"))
            (rule "concrete_impl_1" (formula "18"))
            (rule "polySimp_rightDist" (formula "18") (term "0,0"))
            (rule "mul_literals" (formula "18") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0"))
            (rule "add_literals" (formula "18") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "18"))
            (rule "polySimp_mulLiterals" (formula "18") (term "0"))
            (rule "inEqSimp_subsumption4" (formula "18") (ifseqformula "16"))
            (rule "greater_literals" (formula "18") (term "0,0"))
            (rule "concrete_and_1" (formula "18") (term "0"))
            (rule "times_zero_1" (formula "18") (term "0,0"))
            (rule "leq_literals" (formula "18") (term "0"))
            (rule "concrete_or_1" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "16"))
            (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "9"))
            (rule "qeq_literals" (formula "10"))
            (rule "true_left" (formula "10"))
            (rule "applyEq" (formula "16") (term "0") (ifseqformula "9"))
            (rule "leq_literals" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "applyEqRigid" (formula "16") (term "0,1,1") (ifseqformula "9"))
            (rule "times_zero_2" (formula "16") (term "1,1"))
            (rule "add_zero_right" (formula "16") (term "1"))
            (rule "applyEq" (formula "11") (term "0,1,1") (ifseqformula "9"))
            (rule "times_zero_2" (formula "11") (term "1,1"))
            (rule "add_zero_right" (formula "11") (term "1"))
            (rule "applyEq" (formula "17") (term "0,1,1") (ifseqformula "9"))
            (rule "times_zero_2" (formula "17") (term "1,1"))
            (rule "add_zero_right" (formula "17") (term "1"))
            (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "9"))
            (rule "times_zero_2" (formula "6") (term "1,1"))
            (rule "add_zero_right" (formula "6") (term "1"))
            (rule "applyEqRigid" (formula "15") (term "0,1,0,1") (ifseqformula "9"))
            (rule "times_zero_2" (formula "15") (term "1,0,1"))
            (rule "add_zero_right" (formula "15") (term "0,1"))
            (rule "applyEqRigid" (formula "14") (term "1") (ifseqformula "9"))
            (rule "applyEq" (formula "18") (term "0,1,0,1") (ifseqformula "9"))
            (rule "mul_literals" (formula "18") (term "1,0,1"))
            (rule "add_zero_right" (formula "18") (term "0,1"))
            (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "10"))
            (rule "leq_literals" (formula "16") (term "0"))
            (rule "concrete_or_1" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "5"))
            (rule "leq_literals" (formula "11") (term "0"))
            (rule "concrete_or_1" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(2(8(8(7(2(8(5(1(7(#))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(3(#))"))
            (rule "leq_literals" (formula "6") (term "0,0"))
            (rule "concrete_or_2" (formula "6") (term "0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0"))
            (rule "neg_literal" (formula "6") (term "0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
            (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
            (rule "add_literals" (formula "6") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
            (rule "add_literals" (formula "6") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0"))
            (rule "qeq_literals" (formula "6") (term "0"))
            (rule "concrete_or_2" (formula "6"))
            (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "6"))
            (rule "leq_literals" (formula "5") (term "0"))
            (rule "concrete_or_1" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(1(7(9(6(5(9(8(7(1(#))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(3(#))"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
            (rule "leq_literals" (formula "14") (term "0,0"))
            (rule "concrete_or_2" (formula "14") (term "0"))
            (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
            (rule "add_literals" (formula "14") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
            (rule "add_literals" (formula "14") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "14") (term "1,0,0"))
            (rule "add_zero_right" (formula "14") (term "0,0"))
            (rule "leq_literals" (formula "14") (term "0"))
            (rule "concrete_or_2" (formula "14"))
            (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "14"))
            (rule "leq_literals" (formula "9") (term "0"))
            (rule "concrete_or_1" (formula "9"))
            (rule "true_left" (formula "9"))
            (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "7"))
            (rule "polySimp_rightDist" (formula "14") (term "0,0"))
            (rule "mul_literals" (formula "14") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0"))
            (rule "add_literals" (formula "14") (term "0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
            (rule "add_literals" (formula "14") (term "1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "14"))
            (rule "mul_literals" (formula "14") (term "1"))
            (rule "inEqSimp_subsumption6" (formula "14") (ifseqformula "13"))
            (rule "mul_literals" (formula "14") (term "1,1,0"))
            (rule "greater_literals" (formula "14") (term "0,0"))
            (rule "concrete_and_1" (formula "14") (term "0"))
            (rule "leq_literals" (formula "14") (term "0"))
            (rule "concrete_or_1" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "18"))
            (rule "polySimp_rightDist" (formula "14") (term "0,0"))
            (rule "mul_literals" (formula "14") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0"))
            (rule "add_literals" (formula "14") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "14"))
            (rule "mul_literals" (formula "14") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "13"))
            (rule "leq_literals" (formula "14") (term "0"))
            (rule "concrete_or_1" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "12"))
            (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "6") (term "0"))
            (rule "polySimp_addComm0" (formula "6") (term "0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
            (rule "add_literals" (formula "6") (term "1,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
            (rule "inEqSimp_subsumption4" (formula "6") (ifseqformula "5"))
            (rule "mul_literals" (formula "6") (term "0,1,0"))
            (rule "greater_literals" (formula "6") (term "0,0"))
            (rule "concrete_and_1" (formula "6") (term "0"))
            (rule "leq_literals" (formula "6") (term "0"))
            (rule "concrete_or_1" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "12"))
            (rule "times_zero_1" (formula "9") (term "0,0"))
            (rule "add_zero_left" (formula "9") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "9"))
            (rule "polySimp_mulLiterals" (formula "9") (term "0"))
            (rule "polySimp_elimOne" (formula "9") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "5"))
            (rule "leq_literals" (formula "9") (term "0"))
            (rule "concrete_or_1" (formula "9"))
            (rule "true_left" (formula "9"))
            (rule "all_pull_out3" (formula "43") (term "0"))
            (rule "allLeft" (formula "23") (inst "t=i_1_0"))
            (rule "replace_known_left" (formula "23") (term "0,0,0,0") (ifseqformula "42"))
            (rule "concrete_not_1" (formula "23") (term "0,0,0"))
            (rule "concrete_or_2" (formula "23") (term "0,0"))
            (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "39"))
            (rule "qeq_literals" (formula "23") (term "0,1,0"))
            (rule "concrete_and_2" (formula "23") (term "1,0"))
            (rule "concrete_or_4" (formula "23") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "23") (term "1") (ifseqformula "40"))
            (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
            (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
            (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
            (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "23") (term "0,0,1"))
            (rule "leq_literals" (formula "23") (term "0,1"))
            (rule "concrete_and_2" (formula "23") (term "1"))
            (rule "concrete_or_4" (formula "23"))
            (rule "allLeft" (formula "20") (inst "t=mul(i_1_0, Z(2(#)))"))
            (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "43"))
            (rule "concrete_not_1" (formula "20") (term "0,0"))
            (rule "concrete_or_2" (formula "20") (term "0"))
            (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
            (rule "inEqSimp_contradInEq5" (formula "20") (term "0") (ifseqformula "40"))
            (rule "greater_literals" (formula "20") (term "0,0,0"))
            (rule "concrete_impl_1" (formula "20") (term "0,0"))
            (rule "times_zero_1" (formula "20") (term "1,0,0"))
            (rule "qeq_literals" (formula "20") (term "0,0"))
            (rule "concrete_and_2" (formula "20") (term "0"))
            (rule "concrete_or_2" (formula "20"))
            (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "20"))
            (rule "polySimp_mulAssoc" (formula "30") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "30"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1"))
            (rule "inEqSimp_contradInEq3" (formula "30") (ifseqformula "42"))
            (rule "greater_literals" (formula "30") (term "0,0"))
            (rule "concrete_impl_1" (formula "30") (term "0"))
            (rule "andLeft" (formula "30"))
            (rule "polySimp_rightDist" (formula "30") (term "0"))
            (rule "mul_literals" (formula "30") (term "0,0"))
            (rule "inEqSimp_homoInEq1" (formula "30"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,0"))
            (rule "mul_literals" (formula "30") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0"))
            (rule "polySimp_addAssoc" (formula "30") (term "0"))
            (rule "polySimp_addComm0" (formula "30") (term "0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "30") (term "0"))
            (rule "add_literals" (formula "30") (term "1,1,0"))
            (rule "times_zero_1" (formula "30") (term "1,0"))
            (rule "add_zero_right" (formula "30") (term "0"))
            (rule "leq_literals" (formula "30"))
            (rule "closeFalse" (formula "30"))
         )
         (branch "expectedMaxSize >= 0 FALSE"
            (rule "eqSymm" (formula "6"))
            (rule "inEqSimp_geqRight" (formula "38"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "applyEq" (formula "8") (term "1,0,0") (ifseqformula "7"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
            (rule "polySimp_pullOutFactor3b" (formula "8") (term "0,0"))
            (rule "mod_axiom" (formula "8") (term "0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
            (rule "inEqSimp_homoInEq1" (formula "8"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0"))
            (rule "mul_literals" (formula "8") (term "0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8"))
            (rule "polySimp_mulComm0" (formula "8") (term "1"))
            (rule "polySimp_rightDist" (formula "8") (term "1"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
            (rule "polySimp_rightDist" (formula "8") (term "0,1"))
            (rule "mul_literals" (formula "8") (term "0,0,1"))
            (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "1"))
            (rule "leq_literals" (formula "12") (term "0"))
            (rule "concrete_or_1" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
            (rule "polySimp_mulAssoc" (formula "5") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
            (rule "polySimp_addComm0" (formula "5") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "5"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
            (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
            (rule "neg_literal" (formula "5") (term "0,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "5") (term "0,0"))
            (rule "concrete_or_2" (formula "5") (term "0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0"))
            (rule "add_literals" (formula "5") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
            (rule "add_literals" (formula "5") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "5") (term "1,0,0"))
            (rule "add_zero_right" (formula "5") (term "0,0"))
            (rule "qeq_literals" (formula "5") (term "0"))
            (rule "concrete_or_2" (formula "5"))
            (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "5"))
            (rule "leq_literals" (formula "4") (term "0"))
            (rule "concrete_or_1" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "0,0") (ifseqformula "9"))
            (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "39"))
            (rule "concrete_or_2" (formula "32"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "9"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
            (rule "concrete_or_2" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "10"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
            (rule "concrete_or_2" (formula "1"))
            (rule "shift_paren_or" (formula "40") (term "0,0,0,1,0"))
            (rule "all_pull_out3" (formula "21") (term "0"))
            (rule "shift_paren_or" (formula "21") (term "0,0"))
            (rule "shift_paren_or" (formula "40") (term "0,0,1,0,1,0"))
            (rule "allLeft" (formula "4") (inst "t=i_2_0"))
            (rule "inEqSimp_contradEq3" (formula "4") (term "0,1") (ifseqformula "34"))
            (rule "mul_literals" (formula "4") (term "1,0,0,0,1"))
            (rule "add_literals" (formula "4") (term "0,0,0,1"))
            (rule "qeq_literals" (formula "4") (term "0,0,1"))
            (rule "concrete_and_2" (formula "4") (term "0,1"))
            (rule "concrete_not_2" (formula "4") (term "1"))
            (rule "concrete_or_3" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0") (ifseqformula "11"))
            (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "39"))
            (rule "concrete_or_1" (formula "38"))
            (rule "true_left" (formula "38"))
            (rule "shift_paren_or" (formula "21") (term "0,0,0"))
            (rule "commute_or_2" (formula "21") (term "0,0,0,0"))
            (rule "commute_or" (formula "21") (term "0,0,0,0,0"))
            (rule "commute_or_2" (formula "40") (term "0,0,0,0,1,0"))
            (rule "commute_or" (formula "40") (term "0,0,0,1,0,1,0"))
            (rule "all_pull_out3" (formula "39") (term "0"))
            (rule "shift_paren_or" (formula "39") (term "0,0"))
            (rule "shift_paren_or" (formula "39") (term "0,0,0"))
            (rule "shift_paren_or" (formula "39") (term "0,0,0,0"))
            (rule "commute_or_2" (formula "39") (term "0,0,0,0,0"))
            (rule "commute_or" (formula "39") (term "0,0,0,0,0,0"))
            (rule "div_axiom" (formula "10") (term "0,0") (inst "quotient=quotient_2"))
            (rule "mul_literals" (formula "10") (term "1,1,1,1,1"))
            (rule "qeq_literals" (formula "10") (term "0,1,1"))
            (rule "ifthenelse_true_for" (formula "10") (term "1,1"))
            (rule "equal_literals" (formula "10") (term "0"))
            (rule "concrete_or_2" (formula "10"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "10"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
            (rule "polySimp_addComm1" (formula "12") (term "1"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
            (rule "add_literals" (formula "12") (term "0,0,0,1"))
            (rule "polySimp_addComm1" (formula "12") (term "0,1"))
            (rule "add_literals" (formula "12") (term "0,0,1"))
            (rule "inEqSimp_homoInEq0" (formula "11"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0"))
            (rule "inEqSimp_homoInEq1" (formula "12"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0"))
            (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "10"))
            (rule "inEqSimp_homoInEq0" (formula "13"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
            (rule "polySimp_addComm1" (formula "13") (term "0"))
            (rule "polySimp_addComm1" (formula "13") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11"))
            (rule "polySimp_mulComm0" (formula "11") (term "1"))
            (rule "polySimp_rightDist" (formula "11") (term "1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1"))
            (rule "polySimp_rightDist" (formula "11") (term "0,1"))
            (rule "mul_literals" (formula "11") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12"))
            (rule "polySimp_mulComm0" (formula "12") (term "1"))
            (rule "polySimp_rightDist" (formula "12") (term "1"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1"))
            (rule "polySimp_rightDist" (formula "12") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1"))
            (rule "mul_literals" (formula "12") (term "0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "13"))
            (rule "polySimp_mulComm0" (formula "13") (term "1"))
            (rule "polySimp_rightDist" (formula "13") (term "1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1"))
            (rule "polySimp_rightDist" (formula "13") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
            (rule "mul_literals" (formula "13") (term "0,0,1"))
            (rule "inEqSimp_subsumption5" (formula "11") (ifseqformula "13"))
            (rule "eq_and" (formula "11") (term "0,0"))
            (rule "greater_literals" (formula "11") (term "0,0"))
            (rule "concrete_and_1" (formula "11") (term "0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,1,0"))
            (rule "mul_literals" (formula "11") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0"))
            (rule "mul_literals" (formula "11") (term "0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0"))
            (rule "qeq_literals" (formula "11") (term "0"))
            (rule "concrete_or_1" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "3"))
            (rule "mul_literals" (formula "12") (term "1,0,1"))
            (rule "greater_literals" (formula "12") (term "0"))
            (rule "concrete_impl_1" (formula "12"))
            (rule "polySimp_rightDist" (formula "12") (term "0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0"))
            (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
            (rule "mul_literals" (formula "12") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "12"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
            (rule "polySimp_elimOne" (formula "12") (term "0"))
            (rule "inEqSimp_exactShadow2" (formula "7") (ifseqformula "11"))
            (rule "greater_literals" (formula "7") (term "0"))
            (rule "concrete_impl_1" (formula "7"))
            (rule "polySimp_mulAssoc" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0"))
            (rule "polySimp_addComm0" (formula "7") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
            (rule "add_literals" (formula "7") (term "1,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
            (rule "inEqSimp_exactShadow2" (formula "19") (ifseqformula "12"))
            (rule "greater_literals" (formula "19") (term "0"))
            (rule "concrete_impl_1" (formula "19"))
            (rule "mul_literals" (formula "19") (term "1,0,0"))
            (rule "mul_literals" (formula "19") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
            (rule "add_literals" (formula "19") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "19"))
            (rule "polySimp_mulComm0" (formula "19") (term "1"))
            (rule "polySimp_rightDist" (formula "19") (term "1"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
            (rule "mul_literals" (formula "19") (term "0,1"))
            (rule "inEqSimp_exactShadow1" (formula "14") (ifseqformula "9"))
            (rule "greater_literals" (formula "14") (term "0"))
            (rule "concrete_impl_1" (formula "14"))
            (rule "polySimp_rightDist" (formula "14") (term "0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
            (rule "mul_literals" (formula "14") (term "0,1,0"))
            (rule "polySimp_rightDist" (formula "14") (term "0,0,0"))
            (rule "mul_literals" (formula "14") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "14") (term "0"))
            (rule "add_literals" (formula "14") (term "1,1,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0"))
            (rule "add_literals" (formula "14") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "14"))
            (rule "polySimp_mulComm0" (formula "14") (term "1"))
            (rule "polySimp_rightDist" (formula "14") (term "1"))
            (rule "mul_literals" (formula "14") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "13"))
            (rule "mul_literals" (formula "19") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "add_literals" (formula "19") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "19"))
            (rule "polySimp_mulLiterals" (formula "19") (term "0"))
            (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,0"))
            (rule "concrete_or_2" (formula "19") (term "0"))
            (rule "neg_literal" (formula "19") (term "0,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
            (rule "add_literals" (formula "19") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
            (rule "add_literals" (formula "19") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0"))
            (rule "add_zero_right" (formula "19") (term "0,0"))
            (rule "qeq_literals" (formula "19") (term "0"))
            (rule "concrete_or_2" (formula "19"))
            (rule "inEqSimp_exactShadow2" (formula "20") (ifseqformula "7"))
            (rule "greater_literals" (formula "20") (term "0"))
            (rule "concrete_impl_1" (formula "20"))
            (rule "mul_literals" (formula "20") (term "1,0,0"))
            (rule "mul_literals" (formula "20") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0"))
            (rule "add_literals" (formula "20") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "20"))
            (rule "mul_literals" (formula "20") (term "1"))
            (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
            (rule "leq_literals" (formula "20") (term "0,0"))
            (rule "concrete_or_2" (formula "20") (term "0"))
            (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
            (rule "add_literals" (formula "20") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
            (rule "add_literals" (formula "20") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "20") (term "1,0,0"))
            (rule "add_zero_right" (formula "20") (term "0,0"))
            (rule "leq_literals" (formula "20") (term "0"))
            (rule "concrete_or_2" (formula "20"))
            (rule "inEqSimp_exactShadow2" (formula "22") (ifseqformula "7"))
            (rule "greater_literals" (formula "22") (term "0"))
            (rule "concrete_impl_1" (formula "22"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
            (rule "mul_literals" (formula "22") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0"))
            (rule "polySimp_addComm1" (formula "22") (term "0,0"))
            (rule "add_literals" (formula "22") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "22") (term "0"))
            (rule "add_literals" (formula "22") (term "1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "22"))
            (rule "mul_literals" (formula "22") (term "1"))
            (rule "inEqSimp_subsumption6" (formula "22") (ifseqformula "20"))
            (rule "mul_literals" (formula "22") (term "1,1,0"))
            (rule "greater_literals" (formula "22") (term "0,0"))
            (rule "concrete_and_1" (formula "22") (term "0"))
            (rule "leq_literals" (formula "22") (term "0"))
            (rule "concrete_or_1" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "6"))
            (rule "polySimp_rightDist" (formula "22") (term "0,0"))
            (rule "mul_literals" (formula "22") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "22") (term "0"))
            (rule "add_literals" (formula "22") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "22"))
            (rule "mul_literals" (formula "22") (term "1"))
            (rule "inEqSimp_subsumption6" (formula "22") (ifseqformula "20"))
            (rule "mul_literals" (formula "22") (term "1,1,0"))
            (rule "greater_literals" (formula "22") (term "0,0"))
            (rule "concrete_and_1" (formula "22") (term "0"))
            (rule "leq_literals" (formula "22") (term "0"))
            (rule "concrete_or_1" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "inEqSimp_exactShadow1" (formula "14") (ifseqformula "13"))
            (rule "greater_literals" (formula "14") (term "0"))
            (rule "concrete_impl_1" (formula "14"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
            (rule "mul_literals" (formula "14") (term "0,1,0"))
            (rule "polySimp_rightDist" (formula "14") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
            (rule "mul_literals" (formula "14") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0"))
            (rule "add_literals" (formula "14") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "14") (term "0"))
            (rule "add_literals" (formula "14") (term "1,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "14"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0"))
            (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(4(8(1(9(6(8(9(7(1(7(1(#))))))))))))"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0"))
            (rule "neg_literal" (formula "14") (term "0,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "14") (term "0,0"))
            (rule "concrete_or_2" (formula "14") (term "0"))
            (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
            (rule "add_literals" (formula "14") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
            (rule "add_literals" (formula "14") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "14") (term "1,0,0"))
            (rule "add_zero_right" (formula "14") (term "0,0"))
            (rule "qeq_literals" (formula "14") (term "0"))
            (rule "concrete_or_2" (formula "14"))
            (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "14"))
            (rule "leq_literals" (formula "20") (term "0"))
            (rule "concrete_or_1" (formula "20"))
            (rule "true_left" (formula "20"))
            (rule "inEqSimp_exactShadow1" (formula "15") (ifseqformula "6"))
            (rule "mul_literals" (formula "15") (term "1,0,1"))
            (rule "greater_literals" (formula "15") (term "0"))
            (rule "concrete_impl_1" (formula "15"))
            (rule "polySimp_rightDist" (formula "15") (term "0,0"))
            (rule "mul_literals" (formula "15") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "15") (term "0"))
            (rule "add_literals" (formula "15") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "15"))
            (rule "polySimp_mulLiterals" (formula "15") (term "0"))
            (rule "inEqSimp_subsumption4" (formula "15") (ifseqformula "14"))
            (rule "mul_literals" (formula "15") (term "0,1,0"))
            (rule "greater_literals" (formula "15") (term "0,0"))
            (rule "concrete_and_1" (formula "15") (term "0"))
            (rule "leq_literals" (formula "15") (term "0"))
            (rule "concrete_or_1" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "20"))
            (rule "mul_literals" (formula "13") (term "1,1"))
            (rule "add_literals" (formula "13") (term "1"))
            (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "20"))
            (rule "leq_literals" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "applyEq" (formula "14") (term "0,1,1") (ifseqformula "19"))
            (rule "mul_literals" (formula "14") (term "1,1"))
            (rule "add_literals" (formula "14") (term "1"))
            (rule "applyEq" (formula "22") (term "0,1,1") (ifseqformula "19"))
            (rule "mul_literals" (formula "22") (term "1,1"))
            (rule "add_literals" (formula "22") (term "1"))
            (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "19"))
            (rule "mul_literals" (formula "7") (term "1,1"))
            (rule "add_literals" (formula "7") (term "1"))
            (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "19"))
            (rule "qeq_literals" (formula "20"))
            (rule "true_left" (formula "20"))
            (rule "applyEq" (formula "12") (term "0,1,0,1") (ifseqformula "19"))
            (rule "mul_literals" (formula "12") (term "1,0,1"))
            (rule "add_literals" (formula "12") (term "0,1"))
            (rule "applyEq" (formula "15") (term "0,1,0,1") (ifseqformula "19"))
            (rule "mul_literals" (formula "15") (term "1,0,1"))
            (rule "add_literals" (formula "15") (term "0,1"))
            (rule "applyEq" (formula "11") (term "1") (ifseqformula "19"))
            (rule "inEqSimp_subsumption6" (formula "14") (ifseqformula "20"))
            (rule "mul_literals" (formula "14") (term "1,1,0"))
            (rule "greater_literals" (formula "14") (term "0,0"))
            (rule "concrete_and_1" (formula "14") (term "0"))
            (rule "leq_literals" (formula "14") (term "0"))
            (rule "concrete_or_1" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "6"))
            (rule "leq_literals" (formula "13") (term "0"))
            (rule "concrete_or_1" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "18"))
            (rule "leq_literals" (formula "19") (term "0"))
            (rule "concrete_or_1" (formula "19"))
            (rule "true_left" (formula "19"))
            (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(neglit(3(8(8(7(2(8(5(1(7(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(3(#))"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,0"))
            (rule "neg_literal" (formula "7") (term "0,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "7") (term "0,0"))
            (rule "concrete_or_2" (formula "7") (term "0"))
            (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0"))
            (rule "qeq_literals" (formula "7") (term "0"))
            (rule "concrete_or_2" (formula "7"))
            (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "7"))
            (rule "leq_literals" (formula "6") (term "0"))
            (rule "concrete_or_1" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "3"))
            (rule "mul_literals" (formula "12") (term "1,0,1"))
            (rule "greater_literals" (formula "12") (term "0"))
            (rule "concrete_impl_1" (formula "12"))
            (rule "polySimp_rightDist" (formula "12") (term "0,0"))
            (rule "mul_literals" (formula "12") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0"))
            (rule "add_literals" (formula "12") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "12"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
            (rule "polySimp_elimOne" (formula "12") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "6"))
            (rule "leq_literals" (formula "12") (term "0"))
            (rule "concrete_or_1" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "inEqSimp_exactShadow2" (formula "18") (ifseqformula "11"))
            (rule "mul_literals" (formula "18") (term "1,0,0,1"))
            (rule "greater_literals" (formula "18") (term "0"))
            (rule "concrete_impl_1" (formula "18"))
            (rule "mul_literals" (formula "18") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0"))
            (rule "add_literals" (formula "18") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
            (rule "mul_literals" (formula "18") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "17"))
            (rule "leq_literals" (formula "18") (term "0"))
            (rule "concrete_or_1" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "8"))
            (rule "greater_literals" (formula "12") (term "0"))
            (rule "concrete_impl_1" (formula "12"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "12") (term "0,0"))
            (rule "mul_literals" (formula "12") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "12") (term "0"))
            (rule "add_literals" (formula "12") (term "1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12"))
            (rule "mul_literals" (formula "12") (term "1"))
            (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "18"))
            (rule "mul_literals" (formula "12") (term "1,1,0"))
            (rule "greater_literals" (formula "12") (term "0,0"))
            (rule "concrete_and_1" (formula "12") (term "0"))
            (rule "leq_literals" (formula "12") (term "0"))
            (rule "concrete_or_1" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "inEqSimp_exactShadow2" (formula "7") (ifseqformula "11"))
            (rule "greater_literals" (formula "7") (term "0"))
            (rule "concrete_impl_1" (formula "7"))
            (rule "polySimp_mulAssoc" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0"))
            (rule "polySimp_addComm0" (formula "7") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
            (rule "add_literals" (formula "7") (term "1,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
            (rule "inEqSimp_subsumption4" (formula "7") (ifseqformula "6"))
            (rule "mul_literals" (formula "7") (term "0,1,0"))
            (rule "greater_literals" (formula "7") (term "0,0"))
            (rule "concrete_and_1" (formula "7") (term "0"))
            (rule "leq_literals" (formula "7") (term "0"))
            (rule "concrete_or_1" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "all_pull_out3" (formula "43") (term "0"))
            (rule "allLeft" (formula "23") (inst "t=i_1_0"))
            (rule "replace_known_left" (formula "23") (term "0,0,0,0") (ifseqformula "42"))
            (rule "concrete_not_1" (formula "23") (term "0,0,0"))
            (rule "concrete_or_2" (formula "23") (term "0,0"))
            (rule "inEqSimp_contradInEq0" (formula "23") (term "1") (ifseqformula "41"))
            (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
            (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
            (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
            (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "23") (term "0,0,1"))
            (rule "leq_literals" (formula "23") (term "0,1"))
            (rule "concrete_and_2" (formula "23") (term "1"))
            (rule "concrete_or_4" (formula "23"))
            (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "40"))
            (rule "qeq_literals" (formula "23") (term "0,1"))
            (rule "concrete_and_2" (formula "23") (term "1"))
            (rule "concrete_or_4" (formula "23"))
            (rule "allLeft" (formula "20") (inst "t=mul(i_1_0, Z(2(#)))"))
            (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "43"))
            (rule "concrete_not_1" (formula "20") (term "0,0"))
            (rule "concrete_or_2" (formula "20") (term "0"))
            (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
            (rule "inEqSimp_contradInEq5" (formula "20") (term "0") (ifseqformula "41"))
            (rule "greater_literals" (formula "20") (term "0,0,0"))
            (rule "concrete_impl_1" (formula "20") (term "0,0"))
            (rule "times_zero_1" (formula "20") (term "1,0,0"))
            (rule "qeq_literals" (formula "20") (term "0,0"))
            (rule "concrete_and_2" (formula "20") (term "0"))
            (rule "concrete_or_2" (formula "20"))
            (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "20"))
            (rule "mul_literals" (formula "23") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "23"))
            (rule "mul_literals" (formula "23") (term "1"))
            (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=i_1_0") (inst "elimGcd=Z(2(#))"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "23") (term "0,0"))
            (rule "concrete_or_2" (formula "23") (term "0"))
            (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0"))
            (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
            (rule "add_literals" (formula "23") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "23") (term "1,0,0"))
            (rule "add_zero_right" (formula "23") (term "0,0"))
            (rule "leq_literals" (formula "23") (term "0"))
            (rule "concrete_or_2" (formula "23"))
            (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "23"))
            (rule "leq_literals" (formula "42") (term "0"))
            (rule "concrete_or_1" (formula "42"))
            (rule "true_left" (formula "42"))
            (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "20"))
            (rule "polySimp_mulAssoc" (formula "31") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "31") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "31"))
            (rule "polySimp_mulLiterals" (formula "31") (term "1"))
            (rule "inEqSimp_contradInEq3" (formula "31") (ifseqformula "43"))
            (rule "greater_literals" (formula "31") (term "0,0"))
            (rule "concrete_impl_1" (formula "31") (term "0"))
            (rule "andLeft" (formula "31"))
            (rule "polySimp_rightDist" (formula "31") (term "0"))
            (rule "mul_literals" (formula "31") (term "0,0"))
            (rule "inEqSimp_homoInEq1" (formula "31"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
            (rule "polySimp_rightDist" (formula "31") (term "1,0"))
            (rule "mul_literals" (formula "31") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
            (rule "polySimp_addAssoc" (formula "31") (term "0"))
            (rule "polySimp_addComm0" (formula "31") (term "0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "31") (term "0"))
            (rule "add_literals" (formula "31") (term "1,1,0"))
            (rule "times_zero_1" (formula "31") (term "1,0"))
            (rule "add_zero_right" (formula "31") (term "0"))
            (rule "leq_literals" (formula "31"))
            (rule "closeFalse" (formula "31"))
         )
      )
      (branch "if x_4 false"
         (rule "false_to_not_true" (formula "1") (term "1"))
         (rule "simplifyUpdate2" (formula "10"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "applyOnRigidFormula" (formula "8"))
         (rule "applyOnPV" (formula "8") (term "0"))
         (rule "simplifyUpdate1" (formula "8") (term "1"))
         (rule "ifthenelse_concrete3" (formula "8"))
         (rule "boolean_not_equal_2" (formula "8") (term "1"))
         (rule "concrete_or_4" (formula "8"))
         (rule "less_than_comparison_simple" (formula "10") (term "1"))
         (rule "sequentialToParallel2" (formula "10"))
         (rule "simplifyUpdate3" (formula "10") (term "1,0"))
         (rule "applyOnElementary" (formula "10") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "10") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "10") (term "2,0,1,0"))
         (rule "simplifyUpdate1" (formula "10") (term "1,0,1,0"))
         (rule "applyOnRigidFormula" (formula "10") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "10") (term "1,0,0,1,0"))
         (rule "applyOnPV" (formula "10") (term "0,0,0,1,0"))
         (rule "blockEmpty" (formula "10") (term "1"))
         (rule "ifElseSplit" (formula "10"))
         (branch "if x_3 true"
            (rule "simplifyUpdate2" (formula "11"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "ifthenelse_concrete3" (formula "1"))
            (rule "boolean_not_equal_2" (formula "1") (term "1"))
            (rule "concrete_or_4" (formula "1"))
            (rule "assignment" (formula "11") (term "1"))
            (rule "insert_constant_value" (formula "11") (term "0,0,1"))
            (rule "sequentialToParallel2" (formula "11"))
            (rule "simplifyUpdate3" (formula "11") (term "1,0"))
            (rule "blockEmpty" (formula "11") (term "1"))
            (rule "methodCallReturn" (formula "11") (term "1"))
            (rule "assignment" (formula "11") (term "1"))
            (rule "sequentialToParallel2" (formula "11"))
            (rule "simplifyUpdate2" (formula "11"))
            (rule "simplifyUpdate3" (formula "11") (term "1,0"))
            (rule "applyOnElementary" (formula "11") (term "1,0"))
            (rule "applyOnPV" (formula "11") (term "0,1,0"))
            (rule "methodCallEmpty" (formula "11") (term "1"))
            (rule "tryEmpty" (formula "11") (term "1"))
            (rule "emptyModality" (formula "11") (term "1"))
            (rule "applyOnRigidFormula" (formula "11"))
            (rule "simplifyUpdate2" (formula "11") (term "1"))
            (rule "simplifyUpdate2" (formula "11") (term "0"))
            (rule "applyOnRigidFormula" (formula "11") (term "1"))
            (rule "applyOnRigidFormula" (formula "11") (term "0"))
            (rule "simplifyUpdate2" (formula "11") (term "1,0"))
            (rule "simplifyUpdate2" (formula "11") (term "0,0"))
            (rule "applyOnRigidFormula" (formula "11") (term "0,1"))
            (rule "applyOnRigidFormula" (formula "11") (term "1,0"))
            (rule "simplifyUpdate1" (formula "11") (term "1,1,0"))
            (rule "applyOnPV" (formula "11") (term "0,1,0"))
            (rule "eqClose" (formula "11") (term "1,0"))
            (rule "concrete_and_3" (formula "11") (term "0"))
            (rule "applyOnRigidFormula" (formula "11") (term "0,0,1"))
            (rule "inEqSimp_gtRight" (formula "9"))
            (rule "mul_literals" (formula "1") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "applyOnRigidFormula" (formula "11") (term "0"))
            (rule "simplifyUpdate2" (formula "11") (term "1,0"))
            (rule "replace_known_left" (formula "11") (term "1,0") (ifseqformula "9"))
            (rule "concrete_and_3" (formula "11") (term "0"))
            (rule "applyOnRigidFormula" (formula "11") (term "1,0,0,1"))
            (rule "simplifyUpdate1" (formula "11") (term "1,1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "11") (term "0,0,0,1"))
            (rule "simplifyUpdate2" (formula "11") (term "0,0,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "times_zero_1" (formula "2") (term "1,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0"))
            (rule "add_literals" (formula "2") (term "0,0"))
            (rule "applyOnRigidFormula" (formula "11") (term "0"))
            (rule "applyOnRigidTerm" (formula "11") (term "0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "11") (term "1,0,1,0,0,1"))
            (rule "applyOnPV" (formula "11") (term "0,0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "11") (term "2,0,1,0,0,1"))
            (rule "eqClose" (formula "11") (term "1,0,0,1"))
            (rule "concrete_or_3" (formula "11") (term "0,0,1"))
            (rule "applyOnRigidFormula" (formula "11") (term "0,0"))
            (rule "applyOnRigidFormula" (formula "11") (term "0,0,0"))
            (rule "simplifyUpdate2" (formula "11") (term "0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "11") (term "1,0,0"))
            (rule "applyOnPV" (formula "11") (term "1,1,0,0"))
            (rule "simplifyUpdate1" (formula "11") (term "0,1,0,0"))
            (rule "applyOnRigidFormula" (formula "11") (term "1,0,0,0"))
            (rule "applyOnPV" (formula "11") (term "1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "11") (term "0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0"))
            (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,1,0,0,0"))
            (rule "mod_axiom" (formula "1") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1,0"))
            (rule "jmod_axiom" (formula "2") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,0"))
            (rule "mod_axiom" (formula "2") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,1,0"))
            (rule "mod_axiom" (formula "1") (term "0,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,0"))
            (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
            (rule "mod_axiom" (formula "2") (term "0,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,1,0"))
            (rule "mul_literals" (formula "2") (term "0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1,0"))
            (rule "add_literals" (formula "2") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,1,0"))
            (rule "add_literals" (formula "2") (term "0,0,0,0,0,1,0"))
            (rule "jmod_axiom" (formula "1") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
            (rule "mul_literals" (formula "11") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "2"))
            (rule "leq_literals" (formula "1") (term "0"))
            (rule "concrete_or_1" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "polyMod_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=mul(div(add(Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
            mul(mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                        jdiv(expectedMaxSize, Z(2(#)))),
                    Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
                Z(3(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "polyMod_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(expectedMaxSize, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(3(#))))"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "all_unused" (formula "10") (term "0,1"))
            (rule "all_unused" (formula "10") (term "1"))
            (rule "concrete_and_3" (formula "10"))
            (rule "nnf_ex2all" (formula "10"))
            (rule "nnf_notAnd" (formula "1") (term "0"))
            (rule "nnf_notAnd" (formula "1") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,0,0"))
            (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "9") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "5"))
            (rule "insert_constant_value" (formula "9") (term "1,1,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "9") (term "0,0,1,1,0,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "9") (term "0,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "eqClose" (formula "9") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "concrete_and_3" (formula "9") (term "0,0,1,0,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "eqClose" (formula "9") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "concrete_and_3" (formula "9") (term "0,0,1,0,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "eqClose" (formula "9") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "concrete_and_3" (formula "9") (term "0,0,1,0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "11"))
            (rule "notLeft" (formula "11"))
            (rule "notLeft" (formula "10"))
            (rule "exLeft" (formula "17") (inst "sk=i_1_0"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "exLeft" (formula "16") (inst "sk=i_2_0"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "16"))
            (rule "eqSymm" (formula "15"))
            (rule "eqSymm" (formula "13") (term "1,0,1,0,1,0"))
            (rule "eqSymm" (formula "13") (term "1,1,0,1,0"))
            (rule "eqSymm" (formula "18"))
            (rule "polySimp_mulComm0" (formula "23") (term "0,2,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,0,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "0,2,0,0,1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "0,2,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,0,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "0,2,0,0,1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "0,2,0,0,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "0,2,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "0,2,0,0,0,2,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "0,2,1,1,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "0,2,0,1,0,1,0,1,0"))
            (rule "polySimp_addComm0" (formula "12") (term "0,2,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "14"))
            (rule "mul_literals" (formula "14") (term "1,0,0"))
            (rule "add_literals" (formula "14") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "20"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "17"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0"))
            (rule "ifthenelse_negated" (formula "15") (term "2,0"))
            (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "23") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_mulAssoc" (formula "23") (term "1,0,0,1,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,1,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1,1,0,0,1,1,0"))
            (rule "inEqSimp_gtToGeq" (formula "22") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
            (rule "inEqSimp_commuteGeq" (formula "11"))
            (rule "inEqSimp_commuteLeq" (formula "10"))
            (rule "inEqSimp_commuteLeq" (formula "19"))
            (rule "inEqSimp_commuteLeq" (formula "16"))
            (rule "inEqSimp_commuteLeq" (formula "23") (term "0,1,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,1,0"))
            (rule "applyEq" (formula "23") (term "2,1,0,0,0,0,1,1,0") (ifseqformula "18"))
            (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "18"))
            (rule "applyEq" (formula "22") (term "2,0,1,0,0,0,1,1,0") (ifseqformula "18"))
            (rule "applyEq" (formula "20") (term "0,0,1,0") (ifseqformula "18"))
            (rule "applyEq" (formula "22") (term "2,0,1,0,1,0,1,0") (ifseqformula "18"))
            (rule "applyEq" (formula "23") (term "2,0,1,0,1,0,1,0") (ifseqformula "18"))
            (rule "applyEq" (formula "11") (term "0") (ifseqformula "18"))
            (rule "applyEq" (formula "10") (term "0") (ifseqformula "18"))
            (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "18"))
            (rule "applyEq" (formula "13") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "18"))
            (rule "applyEq" (formula "12") (term "0,0,1,0,0,1,0,0") (ifseqformula "18"))
            (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "18"))
            (rule "applyEq" (formula "22") (term "0,0,1,0,0,1,0,0") (ifseqformula "18"))
            (rule "applyEq" (formula "13") (term "0,0,1,0,0,1,0,0") (ifseqformula "18"))
            (rule "applyEq" (formula "23") (term "0,0,1,0,0,1,0,0") (ifseqformula "18"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14"))
            (rule "mul_literals" (formula "14") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,1,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "23") (term "0,1,1,1,0,0,1,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "17"))
            (rule "polySimp_mulLiterals" (formula "17") (term "0"))
            (rule "polySimp_elimOne" (formula "17") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "20"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0"))
            (rule "polySimp_elimOne" (formula "20") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "22") (term "0,1,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "23") (term "0,1,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
            (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "9") (inst "i=i"))
            (rule "greater_literals" (formula "9") (term "0,1"))
            (rule "concrete_impl_1" (formula "9") (term "1"))
            (rule "sub_literals" (formula "9") (term "2,1,0,1"))
            (rule "nonNullZero" (formula "9") (term "1,0,1"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "9"))
            (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
            (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
            (rule "elimGcdLeq" (formula "23") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "23") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
            (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,1,1,0,0,1,1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,1,1,0,0,1,1,0"))
            (rule "add_literals" (formula "23") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
            (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "23") (term "0,0,0,1,1,0,0,1,1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,1,1,0,0,1,1,0"))
            (rule "add_literals" (formula "23") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
            (rule "times_zero_1" (formula "23") (term "1,0,1,0,1,1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "23") (term "0,1,0,1,1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "23") (term "0,0,1,0,1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "23") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1,1,0,0,1,1,0"))
            (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,1,1,0,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0,1,1,0,0,1,1,0"))
            (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,1,1,0,0,1,1,0"))
            (rule "add_literals" (formula "23") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
            (rule "times_zero_1" (formula "23") (term "1,0,1,0,1,1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "23") (term "0,1,0,1,1,0,0,1,1,0"))
            (rule "qeq_literals" (formula "23") (term "1,0,1,1,0,0,1,1,0"))
            (rule "concrete_and_3" (formula "23") (term "0,1,1,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,1,0,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,1,0,0,1,1,0"))
            (rule "add_literals" (formula "23") (term "0,0,0,0,1,1,0,0,1,1,0"))
            (rule "add_zero_left" (formula "23") (term "0,0,0,1,1,0,0,1,1,0"))
            (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,1,1,0,0,1,1,0"))
            (rule "add_literals" (formula "23") (term "1,0,0,1,1,0,0,1,1,0"))
            (rule "times_zero_1" (formula "23") (term "0,0,1,1,0,0,1,1,0"))
            (rule "leq_literals" (formula "23") (term "0,1,1,0,0,1,1,0"))
            (rule "ifthenelse_true_for" (formula "23") (term "1,1,0,0,1,1,0"))
            (rule "elimGcdGeq" (formula "23") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
            (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,1,0,0,1,1,0"))
            (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,1,0,0,1,1,0"))
            (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
            (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,0,0,1,1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0,1,0,0,1,1,0"))
            (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
            (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "23") (term "0,0,0,0,1,0,0,1,1,0"))
            (rule "qeq_literals" (formula "23") (term "0,0,0,1,0,0,1,1,0"))
            (rule "concrete_and_1" (formula "23") (term "0,0,1,0,0,1,1,0"))
            (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,0,1,0,0,1,1,0"))
            (rule "add_literals" (formula "23") (term "1,0,0,0,1,0,0,1,1,0"))
            (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,0,1,1,0"))
            (rule "leq_literals" (formula "23") (term "0,0,1,0,0,1,1,0"))
            (rule "ifthenelse_true_for" (formula "23") (term "0,1,0,0,1,1,0"))
            (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "11"))
            (rule "polySimp_rightDist" (formula "17") (term "0,0"))
            (rule "mul_literals" (formula "17") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0"))
            (rule "add_literals" (formula "17") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "17"))
            (rule "polySimp_mulLiterals" (formula "17") (term "0"))
            (rule "polySimp_elimOne" (formula "17") (term "0"))
            (rule "nnf_imp2or" (formula "12") (term "1,0"))
            (rule "nnf_imp2or" (formula "13") (term "1,0,1,0"))
            (rule "nnf_imp2or" (formula "23") (term "1,0"))
            (rule "nnf_imp2or" (formula "9") (term "0"))
            (rule "nnf_imp2or" (formula "24") (term "0"))
            (rule "nnf_imp2or" (formula "12") (term "0"))
            (rule "nnf_imp2or" (formula "13") (term "0"))
            (rule "nnf_imp2or" (formula "23") (term "0"))
            (rule "nnf_notAnd" (formula "9") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
            (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
            (rule "mul_literals" (formula "9") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "24") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
            (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
            (rule "mul_literals" (formula "24") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
            (rule "nnf_imp2or" (formula "24") (term "1,0"))
            (rule "nnf_notAnd" (formula "12") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
            (rule "mul_literals" (formula "12") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "13") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
            (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
            (rule "mul_literals" (formula "13") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "23") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
            (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
            (rule "mul_literals" (formula "23") (term "1,0,0,0"))
            (rule "nnf_imp2or" (formula "13") (term "0,1,0"))
            (rule "nnf_notAnd" (formula "23") (term "0,1,0"))
            (rule "double_not" (formula "23") (term "0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "23") (term "1,0,1,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,1,0"))
            (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,0"))
            (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,0"))
            (rule "add_zero_left" (formula "23") (term "0,0,1,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,0"))
            (rule "nnf_imp2or" (formula "23") (term "0,1,1,0"))
            (rule "nnf_notAnd" (formula "24") (term "0,1,0"))
            (rule "double_not" (formula "24") (term "0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "24") (term "1,0,1,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,1,0"))
            (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,1,0"))
            (rule "add_literals" (formula "24") (term "0,0,0,1,0,1,0"))
            (rule "add_zero_left" (formula "24") (term "0,0,1,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,0"))
            (rule "nnf_imp2or" (formula "24") (term "0,1,1,0"))
            (rule "nnf_notAnd" (formula "13") (term "0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,0"))
            (rule "nnf_notAnd" (formula "13") (term "0,1,0,1,0"))
            (rule "double_not" (formula "13") (term "0,0,1,0,1,0"))
            (rule "nnf_notAnd" (formula "23") (term "0,0,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,1,0"))
            (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,1,0"))
            (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,1,0"))
            (rule "nnf_notOr" (formula "24") (term "0,0,1,1,0"))
            (rule "nnf_notAnd" (formula "24") (term "1,0,0,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "24") (term "0,1,0,0,1,1,0"))
            (rule "times_zero_1" (formula "24") (term "1,0,0,0,1,0,0,1,1,0"))
            (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "24") (term "1,0,1,0,0,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "24") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "24") (term "0,1,0,0,1,1,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1,0,0,1,1,0"))
            (rule "add_literals" (formula "24") (term "0,0,0,1,1,0,0,1,1,0"))
            (rule "add_zero_left" (formula "24") (term "0,0,1,1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,1,0"))
            (rule "nnf_notAnd" (formula "24") (term "0,0,0,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,1,1,0"))
            (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,1,1,0"))
            (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,1,0"))
            (rule "jdiv_axiom" (formula "2") (term "1,0,0"))
            (rule "eqSymm" (formula "2"))
            (rule "polyDiv_pullOut" (formula "2") (term "0,2,0") (inst "polyDivCoeff=mul(expectedMaxSize, Z(neglit(1(#))))"))
            (rule "equal_literals" (formula "2") (term "0,0,2,0"))
            (rule "ifthenelse_false" (formula "2") (term "0,2,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,2,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,2,0"))
            (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,0,2,0"))
            (rule "add_literals" (formula "2") (term "1,0,0,0,2,0"))
            (rule "polySimp_elimOne" (formula "2") (term "0,0,0,2,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "2,0"))
            (rule "polySimp_addComm0" (formula "2") (term "1,2,0"))
            (rule "polySimp_rightDist" (formula "2") (term "2,0"))
            (rule "polySimp_mulAssoc" (formula "2") (term "0,2,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,0,2,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,2,0"))
            (rule "polySimp_elimOne" (formula "2") (term "0,2,0"))
            (rule "commute_or_2" (formula "10") (term "0"))
            (rule "commute_or_2" (formula "13") (term "0"))
            (rule "jdiv_axiom" (formula "16") (term "1,0"))
            (rule "eqSymm" (formula "16"))
            (rule "inEqSimp_subsumption1" (formula "16") (term "0,0") (ifseqformula "11"))
            (rule "leq_literals" (formula "16") (term "0,0,0"))
            (rule "concrete_or_1" (formula "16") (term "0,0"))
            (rule "ifthenelse_true" (formula "16") (term "0"))
            (rule "eqSymm" (formula "16"))
            (rule "applyEqRigid" (formula "17") (term "1,0") (ifseqformula "16"))
            (rule "applyEqRigid" (formula "14") (term "1,1,0,0") (ifseqformula "16"))
            (rule "applyEqRigid" (formula "25") (term "1,1,0,0") (ifseqformula "16"))
            (rule "applyEq" (formula "26") (term "1,1,0,0") (ifseqformula "16"))
            (rule "applyEqRigid" (formula "14") (term "1,1,0,0,1,0") (ifseqformula "16"))
            (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "16"))
            (rule "applyEqRigid" (formula "13") (term "1,1,0") (ifseqformula "16"))
            (rule "arrayLengthNotNegative" (formula "21") (term "0"))
            (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
            (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "11"))
            (rule "leq_literals" (formula "21") (term "0"))
            (rule "concrete_or_1" (formula "21"))
            (rule "true_left" (formula "21"))
            (rule "arrayLengthIsAShort" (formula "21") (term "0"))
            (rule "expand_inShort" (formula "21"))
            (rule "replace_short_MIN" (formula "21") (term "0,1"))
            (rule "replace_short_MAX" (formula "21") (term "1,0"))
            (rule "andLeft" (formula "21"))
            (rule "inEqSimp_commuteLeq" (formula "22"))
            (rule "applyEq" (formula "21") (term "0") (ifseqformula "23"))
            (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
            (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "11"))
            (rule "leq_literals" (formula "22") (term "0"))
            (rule "concrete_or_1" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "21"))
            (rule "leq_literals" (formula "12") (term "0"))
            (rule "concrete_or_1" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
            (rule "polySimp_rightDist" (formula "19") (term "0,0"))
            (rule "mul_literals" (formula "19") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0"))
            (rule "add_literals" (formula "19") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "19"))
            (rule "polySimp_mulLiterals" (formula "19") (term "0"))
            (rule "polySimp_elimOne" (formula "19") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "19"))
            (rule "leq_literals" (formula "18") (term "0"))
            (rule "concrete_or_1" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "commute_or_2" (formula "25") (term "0,1,1,0"))
            (rule "commute_or" (formula "10") (term "0,0"))
            (rule "commute_or" (formula "12") (term "0,0"))
            (rule "commute_or" (formula "26") (term "0,1,1,0"))
            (rule "shift_paren_or" (formula "13") (term "0,1,0"))
            (rule "commute_or_2" (formula "13") (term "0,0,1,0"))
            (rule "commute_or" (formula "25") (term "0,0,1,1,0"))
            (rule "commute_or_2" (formula "25") (term "0,1,1,0"))
            (rule "commute_or" (formula "13") (term "0,0,0,1,0"))
            (rule "commute_or_2" (formula "13") (term "0,0,1,0"))
            (rule "inEqSimp_or_weaken2" (formula "13") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "1,0,1,0,1,0"))
            (rule "add_literals" (formula "13") (term "0,1,0,1,0,1,0"))
            (rule "add_zero_left" (formula "13") (term "1,0,1,0,1,0"))
            (rule "eqClose" (formula "13") (term "0,1,0,1,0"))
            (rule "ifthenelse_true_for" (formula "13") (term "1,0,1,0"))
            (rule "commute_or" (formula "26") (term "0,1,0,1,1,0"))
            (rule "cnf_rightDist" (formula "26") (term "0,1,1,0"))
            (rule "commute_or_2" (formula "26") (term "1,0,1,1,0"))
            (rule "shift_paren_or" (formula "26") (term "0,0,1,1,0"))
            (rule "commute_or" (formula "26") (term "0,1,0,1,1,0"))
            (rule "div_axiom" (formula "2") (term "1,0") (inst "quotient=quotient_0"))
            (rule "mul_literals" (formula "2") (term "1,1,1,1,1"))
            (rule "qeq_literals" (formula "2") (term "0,1,1"))
            (rule "ifthenelse_true_for" (formula "2") (term "1,1"))
            (rule "equal_literals" (formula "2") (term "0"))
            (rule "concrete_or_2" (formula "2"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "2"))
            (rule "polySimp_addComm1" (formula "4") (term "1"))
            (rule "add_literals" (formula "4") (term "0,1"))
            (rule "inEqSimp_commuteLeq" (formula "3"))
            (rule "inEqSimp_homoInEq1" (formula "4"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "applyEq" (formula "5") (term "0,1,2,0") (ifseqformula "2"))
            (rule "polySimp_addComm0" (formula "5") (term "2,0"))
            (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "2"))
            (rule "inEqSimp_sepPosMonomial0" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1"))
            (rule "polySimp_rightDist" (formula "4") (term "1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
            (rule "mul_literals" (formula "4") (term "0,1"))
            (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "4"))
            (rule "mul_literals" (formula "11") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0"))
            (rule "add_literals" (formula "11") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11"))
            (rule "mul_literals" (formula "11") (term "1"))
            (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(neglit(4(2(8(1(4(7(3(7(0(1(#))))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
            (rule "leq_literals" (formula "11") (term "0,0"))
            (rule "concrete_or_2" (formula "11") (term "0"))
            (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0"))
            (rule "leq_literals" (formula "11") (term "0"))
            (rule "concrete_or_2" (formula "11"))
            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "10"))
            (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
            (rule "polySimp_addComm0" (formula "3") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,1,0"))
            (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "3") (term "0,0"))
            (rule "concrete_or_2" (formula "3") (term "0"))
            (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
            (rule "add_literals" (formula "3") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_literals" (formula "3") (term "0,0"))
            (rule "qeq_literals" (formula "3") (term "0"))
            (rule "concrete_or_2" (formula "3"))
            (rule "div_axiom" (formula "20") (term "1") (inst "quotient=quotient_1"))
            (rule "mul_literals" (formula "20") (term "1,1,1,1,1"))
            (rule "equal_literals" (formula "20") (term "0"))
            (rule "concrete_or_2" (formula "20"))
            (rule "qeq_literals" (formula "20") (term "0,1"))
            (rule "ifthenelse_true_for" (formula "20") (term "1"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "polySimp_addComm1" (formula "22") (term "1"))
            (rule "add_literals" (formula "22") (term "0,1"))
            (rule "inEqSimp_commuteLeq" (formula "21"))
            (rule "inEqSimp_homoInEq1" (formula "22"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
            (rule "polySimp_addComm1" (formula "22") (term "0"))
            (rule "applyEqRigid" (formula "17") (term "1,1,0") (ifseqformula "20"))
            (rule "applyEqRigid" (formula "34") (term "1,1,0,0") (ifseqformula "20"))
            (rule "applyEq" (formula "33") (term "1,1,0,0") (ifseqformula "20"))
            (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "20"))
            (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "20"))
            (rule "applyEq" (formula "18") (term "1,1,0,0,1,0") (ifseqformula "20"))
            (rule "applyEq" (formula "31") (term "0") (ifseqformula "20"))
            (rule "inEqSimp_homoInEq1" (formula "31"))
            (rule "polySimp_addComm1" (formula "31") (term "0"))
            (rule "applyEq" (formula "23") (term "1") (ifseqformula "20"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22"))
            (rule "polySimp_mulComm0" (formula "22") (term "1"))
            (rule "polySimp_rightDist" (formula "22") (term "1"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
            (rule "mul_literals" (formula "22") (term "0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "31"))
            (rule "polySimp_mulComm0" (formula "31") (term "1"))
            (rule "polySimp_rightDist" (formula "31") (term "1"))
            (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
            (rule "mul_literals" (formula "31") (term "0,1"))
            (rule "polySimp_elimOne" (formula "31") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
            (rule "times_zero_1" (formula "30") (term "0,0"))
            (rule "add_zero_left" (formula "30") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "30"))
            (rule "mul_literals" (formula "30") (term "1"))
            (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "28"))
            (rule "polySimp_mulAssoc" (formula "21") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
            (rule "polySimp_addComm0" (formula "21") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "21"))
            (rule "polySimp_mulLiterals" (formula "21") (term "0"))
            (rule "elimGcdLeq_antec" (formula "21") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
            (rule "neg_literal" (formula "21") (term "0,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "21") (term "0,0"))
            (rule "concrete_or_2" (formula "21") (term "0"))
            (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
            (rule "add_literals" (formula "21") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
            (rule "add_literals" (formula "21") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "21") (term "1,0,0"))
            (rule "add_zero_right" (formula "21") (term "0,0"))
            (rule "qeq_literals" (formula "21") (term "0"))
            (rule "concrete_or_2" (formula "21"))
            (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "23"))
            (rule "mul_literals" (formula "16") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "add_literals" (formula "16") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16"))
            (rule "mul_literals" (formula "16") (term "1"))
            (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
            (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
            (rule "leq_literals" (formula "16") (term "0,0"))
            (rule "concrete_or_2" (formula "16") (term "0"))
            (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
            (rule "add_literals" (formula "16") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,0"))
            (rule "leq_literals" (formula "16") (term "0"))
            (rule "concrete_or_2" (formula "16"))
            (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "16"))
            (rule "leq_literals" (formula "32") (term "0"))
            (rule "concrete_or_1" (formula "32"))
            (rule "true_left" (formula "32"))
            (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "24"))
            (rule "polySimp_rightDist" (formula "29") (term "0,0"))
            (rule "mul_literals" (formula "29") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "29") (term "0"))
            (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
            (rule "add_literals" (formula "29") (term "0,0,0"))
            (rule "add_zero_left" (formula "29") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "29"))
            (rule "polySimp_mulLiterals" (formula "29") (term "0"))
            (rule "polySimp_elimOne" (formula "29") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "29"))
            (rule "times_zero_1" (formula "27") (term "0,0"))
            (rule "add_zero_left" (formula "27") (term "0"))
            (rule "inEqSimp_subsumption6" (formula "27") (ifseqformula "16"))
            (rule "mul_literals" (formula "27") (term "1,1,0"))
            (rule "greater_literals" (formula "27") (term "0,0"))
            (rule "concrete_and_1" (formula "27") (term "0"))
            (rule "leq_literals" (formula "27") (term "0"))
            (rule "concrete_or_1" (formula "27"))
            (rule "true_left" (formula "27"))
            (rule "all_pull_out3" (formula "36") (term "1,0"))
            (rule "all_pull_out3" (formula "37") (term "1,0"))
            (rule "shift_paren_or" (formula "36") (term "0,1,0"))
            (rule "shift_paren_or" (formula "36") (term "0,0,1,0"))
            (rule "commute_or_2" (formula "36") (term "0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "37") (term "0,1,0"))
            (rule "commute_or_2" (formula "37") (term "1,0,1,0"))
            (rule "shift_paren_or" (formula "37") (term "0,0,1,0"))
            (rule "commute_or_2" (formula "37") (term "0,1,0,1,0"))
            (rule "ifthenelse_split" (formula "6") (term "0"))
            (branch "expectedMaxSize >= 0 TRUE"
               (rule "eqSymm" (formula "7"))
               (rule "applyEq" (formula "8") (term "1,0,0") (ifseqformula "7"))
               (rule "polySimp_addComm1" (formula "8") (term "0,0"))
               (rule "mod_axiom" (formula "8") (term "0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
               (rule "inEqSimp_homoInEq0" (formula "8"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
               (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0"))
               (rule "mul_literals" (formula "8") (term "0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
               (rule "add_literals" (formula "8") (term "0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "8"))
               (rule "polySimp_mulComm0" (formula "8") (term "1"))
               (rule "polySimp_rightDist" (formula "8") (term "1"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
               (rule "polySimp_elimOne" (formula "8") (term "1,1"))
               (rule "polySimp_rightDist" (formula "8") (term "0,1"))
               (rule "mul_literals" (formula "8") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
               (rule "polySimp_elimOne" (formula "8") (term "1,0,1"))
               (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "6"))
               (rule "leq_literals" (formula "14") (term "0"))
               (rule "concrete_or_1" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
               (rule "times_zero_1" (formula "6") (term "0,0"))
               (rule "add_zero_left" (formula "6") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
               (rule "mul_literals" (formula "6") (term "1"))
               (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
               (rule "leq_literals" (formula "6") (term "0,0"))
               (rule "concrete_or_2" (formula "6") (term "0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
               (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
               (rule "add_literals" (formula "6") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "6") (term "1,0,0"))
               (rule "add_zero_right" (formula "6") (term "0,0"))
               (rule "leq_literals" (formula "6") (term "0"))
               (rule "concrete_or_2" (formula "6"))
               (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "6"))
               (rule "leq_literals" (formula "14") (term "0"))
               (rule "concrete_or_1" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "0,0") (ifseqformula "10"))
               (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "40"))
               (rule "concrete_or_2" (formula "32"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0") (ifseqformula "10"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
               (rule "concrete_or_2" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "11"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
               (rule "concrete_or_2" (formula "1"))
               (rule "shift_paren_or" (formula "40") (term "0,0,0,1,0"))
               (rule "all_pull_out3" (formula "21") (term "0"))
               (rule "shift_paren_or" (formula "21") (term "0,0"))
               (rule "shift_paren_or" (formula "40") (term "0,0,1,0,1,0"))
               (rule "shift_paren_or" (formula "21") (term "0,0,0"))
               (rule "allLeft" (formula "3") (inst "t=i_2_0"))
               (rule "inEqSimp_contradEq3" (formula "3") (term "0,1") (ifseqformula "34"))
               (rule "mul_literals" (formula "3") (term "1,0,0,0,1"))
               (rule "add_literals" (formula "3") (term "0,0,0,1"))
               (rule "qeq_literals" (formula "3") (term "0,0,1"))
               (rule "concrete_and_2" (formula "3") (term "0,1"))
               (rule "concrete_not_2" (formula "3") (term "1"))
               (rule "concrete_or_3" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "commute_or_2" (formula "21") (term "0,0,0,0"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "39"))
               (rule "concrete_or_1" (formula "38"))
               (rule "true_left" (formula "38"))
               (rule "commute_or" (formula "21") (term "0,0,0,0,0"))
               (rule "commute_or_2" (formula "40") (term "0,0,0,0,1,0"))
               (rule "commute_or" (formula "40") (term "0,0,0,1,0,1,0"))
               (rule "all_pull_out3" (formula "39") (term "0"))
               (rule "shift_paren_or" (formula "39") (term "0,0"))
               (rule "shift_paren_or" (formula "39") (term "0,0,0"))
               (rule "shift_paren_or" (formula "39") (term "0,0,0,0"))
               (rule "commute_or_2" (formula "39") (term "0,0,0,0,0"))
               (rule "commute_or" (formula "39") (term "0,0,0,0,0,0"))
               (rule "div_axiom" (formula "11") (term "0,0") (inst "quotient=quotient_2"))
               (rule "mul_literals" (formula "11") (term "1,1,1,1,1"))
               (rule "qeq_literals" (formula "11") (term "0,1,1"))
               (rule "ifthenelse_true_for" (formula "11") (term "1,1"))
               (rule "equal_literals" (formula "11") (term "0"))
               (rule "concrete_or_2" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
               (rule "polySimp_addComm1" (formula "13") (term "1"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
               (rule "add_literals" (formula "13") (term "0,0,0,1"))
               (rule "polySimp_addComm1" (formula "13") (term "0,1"))
               (rule "add_literals" (formula "13") (term "0,0,1"))
               (rule "inEqSimp_homoInEq0" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
               (rule "polySimp_addComm1" (formula "13") (term "0"))
               (rule "polySimp_addComm1" (formula "13") (term "0,0"))
               (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "11"))
               (rule "inEqSimp_homoInEq1" (formula "14"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "12"))
               (rule "polySimp_mulComm0" (formula "12") (term "1"))
               (rule "polySimp_rightDist" (formula "12") (term "1"))
               (rule "polySimp_rightDist" (formula "12") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1"))
               (rule "mul_literals" (formula "12") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13"))
               (rule "polySimp_mulComm0" (formula "13") (term "1"))
               (rule "polySimp_rightDist" (formula "13") (term "1"))
               (rule "polySimp_rightDist" (formula "13") (term "0,1"))
               (rule "mul_literals" (formula "13") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14"))
               (rule "polySimp_mulComm0" (formula "14") (term "1"))
               (rule "polySimp_rightDist" (formula "14") (term "1"))
               (rule "polySimp_rightDist" (formula "14") (term "0,1"))
               (rule "mul_literals" (formula "14") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
               (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "14"))
               (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0"))
               (rule "mul_literals" (formula "13") (term "0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
               (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0"))
               (rule "add_literals" (formula "13") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
               (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
               (rule "add_literals" (formula "13") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0"))
               (rule "qeq_literals" (formula "13") (term "0"))
               (rule "concrete_or_1" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "17"))
               (rule "polySimp_rightDist" (formula "12") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0"))
               (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
               (rule "mul_literals" (formula "12") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "12"))
               (rule "polySimp_mulComm0" (formula "12") (term "1"))
               (rule "polySimp_rightDist" (formula "12") (term "1"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
               (rule "mul_literals" (formula "12") (term "0,1"))
               (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "14"))
               (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "polySimp_addComm0" (formula "6") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "6"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "15"))
               (rule "times_zero_1" (formula "10") (term "0,0"))
               (rule "add_zero_left" (formula "10") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
               (rule "polySimp_elimOne" (formula "10") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "8"))
               (rule "polySimp_rightDist" (formula "15") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "0,0,0"))
               (rule "mul_literals" (formula "15") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0"))
               (rule "polySimp_addComm1" (formula "15") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
               (rule "add_literals" (formula "15") (term "1,1,0"))
               (rule "polySimp_addComm1" (formula "15") (term "0,0"))
               (rule "add_literals" (formula "15") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "15"))
               (rule "polySimp_mulComm0" (formula "15") (term "1"))
               (rule "polySimp_rightDist" (formula "15") (term "1"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
               (rule "mul_literals" (formula "15") (term "0,1"))
               (rule "inEqSimp_exactShadow2" (formula "14") (ifseqformula "6"))
               (rule "greater_literals" (formula "14") (term "0"))
               (rule "concrete_impl_1" (formula "14"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "0,0"))
               (rule "mul_literals" (formula "14") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "1,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "14"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0"))
               (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(2(9(5(4(3(9(9(8(5(8(#)))))))))))"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0"))
               (rule "neg_literal" (formula "14") (term "0,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "14") (term "0,0"))
               (rule "concrete_or_2" (formula "14") (term "0"))
               (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
               (rule "add_literals" (formula "14") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "14") (term "1,0,0"))
               (rule "add_zero_right" (formula "14") (term "0,0"))
               (rule "qeq_literals" (formula "14") (term "0"))
               (rule "concrete_or_2" (formula "14"))
               (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "5"))
               (rule "polySimp_rightDist" (formula "15") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
               (rule "mul_literals" (formula "15") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "15") (term "0"))
               (rule "add_literals" (formula "15") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "15"))
               (rule "polySimp_mulLiterals" (formula "15") (term "0"))
               (rule "inEqSimp_subsumption4" (formula "15") (ifseqformula "14"))
               (rule "greater_literals" (formula "15") (term "0,0"))
               (rule "concrete_and_1" (formula "15") (term "0"))
               (rule "mul_literals" (formula "15") (term "0,0"))
               (rule "leq_literals" (formula "15") (term "0"))
               (rule "concrete_or_1" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "inEqSimp_exactShadow1" (formula "16") (ifseqformula "10"))
               (rule "greater_literals" (formula "16") (term "0"))
               (rule "concrete_impl_1" (formula "16"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0"))
               (rule "polySimp_rightDist" (formula "16") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
               (rule "mul_literals" (formula "16") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0"))
               (rule "polySimp_addComm1" (formula "16") (term "0,0"))
               (rule "add_literals" (formula "16") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "16") (term "0"))
               (rule "add_literals" (formula "16") (term "1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16"))
               (rule "mul_literals" (formula "16") (term "1"))
               (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(2(9(5(4(3(9(9(8(5(8(#)))))))))))"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "16") (term "0,0"))
               (rule "concrete_or_2" (formula "16") (term "0"))
               (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
               (rule "add_literals" (formula "16") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "16") (term "1,0,0"))
               (rule "add_zero_right" (formula "16") (term "0,0"))
               (rule "leq_literals" (formula "16") (term "0"))
               (rule "concrete_or_2" (formula "16"))
               (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
               (rule "times_zero_1" (formula "9") (term "0,0"))
               (rule "add_zero_left" (formula "9") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9"))
               (rule "mul_literals" (formula "9") (term "1"))
               (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
               (rule "leq_literals" (formula "9") (term "0,0"))
               (rule "concrete_or_2" (formula "9") (term "0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
               (rule "add_literals" (formula "9") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0"))
               (rule "add_zero_right" (formula "9") (term "0,0"))
               (rule "leq_literals" (formula "9") (term "0"))
               (rule "concrete_or_2" (formula "9"))
               (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "9"))
               (rule "leq_literals" (formula "17") (term "0"))
               (rule "concrete_or_1" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "inEqSimp_exactShadow2" (formula "10") (ifseqformula "6"))
               (rule "greater_literals" (formula "10") (term "0"))
               (rule "concrete_impl_1" (formula "10"))
               (rule "times_zero_1" (formula "10") (term "1,0,0"))
               (rule "times_zero_1" (formula "10") (term "0,0"))
               (rule "add_zero_left" (formula "10") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10"))
               (rule "mul_literals" (formula "10") (term "1"))
               (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "9"))
               (rule "greater_literals" (formula "10") (term "0,0"))
               (rule "concrete_and_1" (formula "10") (term "0"))
               (rule "mul_literals" (formula "10") (term "1,0"))
               (rule "leq_literals" (formula "10") (term "0"))
               (rule "concrete_or_1" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "inEqSimp_exactShadow1" (formula "17") (ifseqformula "5"))
               (rule "mul_literals" (formula "17") (term "1,0,1"))
               (rule "greater_literals" (formula "17") (term "0"))
               (rule "concrete_impl_1" (formula "17"))
               (rule "polySimp_rightDist" (formula "17") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
               (rule "mul_literals" (formula "17") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "17") (term "0"))
               (rule "add_literals" (formula "17") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "17"))
               (rule "polySimp_mulLiterals" (formula "17") (term "0"))
               (rule "inEqSimp_subsumption4" (formula "17") (ifseqformula "15"))
               (rule "mul_literals" (formula "17") (term "0,1,0"))
               (rule "greater_literals" (formula "17") (term "0,0"))
               (rule "concrete_and_1" (formula "17") (term "0"))
               (rule "leq_literals" (formula "17") (term "0"))
               (rule "concrete_or_1" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "15"))
               (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "9"))
               (rule "mul_literals" (formula "18") (term "1,1"))
               (rule "add_literals" (formula "18") (term "1"))
               (rule "applyEqRigid" (formula "6") (term "0,1,1") (ifseqformula "9"))
               (rule "mul_literals" (formula "6") (term "1,1"))
               (rule "add_literals" (formula "6") (term "1"))
               (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "9"))
               (rule "qeq_literals" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "applyEqRigid" (formula "16") (term "0,1,1") (ifseqformula "9"))
               (rule "mul_literals" (formula "16") (term "1,1"))
               (rule "add_literals" (formula "16") (term "1"))
               (rule "applyEq" (formula "15") (term "0") (ifseqformula "9"))
               (rule "leq_literals" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "applyEq" (formula "11") (term "0,1,1") (ifseqformula "9"))
               (rule "mul_literals" (formula "11") (term "1,1"))
               (rule "add_literals" (formula "11") (term "1"))
               (rule "applyEq" (formula "14") (term "1") (ifseqformula "9"))
               (rule "applyEqRigid" (formula "17") (term "0,1,0,1") (ifseqformula "9"))
               (rule "mul_literals" (formula "17") (term "1,0,1"))
               (rule "add_literals" (formula "17") (term "0,1"))
               (rule "applyEqRigid" (formula "18") (term "0,1,0,1") (ifseqformula "9"))
               (rule "mul_literals" (formula "18") (term "1,0,1"))
               (rule "add_literals" (formula "18") (term "0,1"))
               (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "15"))
               (rule "leq_literals" (formula "10") (term "0"))
               (rule "concrete_or_1" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "5"))
               (rule "leq_literals" (formula "10") (term "0"))
               (rule "concrete_or_1" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "inEqSimp_subsumption4" (formula "6") (ifseqformula "5"))
               (rule "greater_literals" (formula "6") (term "0,0"))
               (rule "concrete_and_1" (formula "6") (term "0"))
               (rule "mul_literals" (formula "6") (term "0,0"))
               (rule "leq_literals" (formula "6") (term "0"))
               (rule "concrete_or_1" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(3(8(8(7(2(8(5(1(7(#))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(3(#))"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "13") (term "0,0"))
               (rule "concrete_or_2" (formula "13") (term "0"))
               (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
               (rule "add_literals" (formula "13") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0"))
               (rule "leq_literals" (formula "13") (term "0"))
               (rule "concrete_or_2" (formula "13"))
               (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "13"))
               (rule "leq_literals" (formula "12") (term "0"))
               (rule "concrete_or_1" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "7"))
               (rule "polySimp_rightDist" (formula "13") (term "0,0"))
               (rule "mul_literals" (formula "13") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0"))
               (rule "polySimp_addComm1" (formula "13") (term "0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "13"))
               (rule "mul_literals" (formula "13") (term "1"))
               (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "12"))
               (rule "mul_literals" (formula "13") (term "1,1,0"))
               (rule "greater_literals" (formula "13") (term "0,0"))
               (rule "concrete_and_1" (formula "13") (term "0"))
               (rule "leq_literals" (formula "13") (term "0"))
               (rule "concrete_or_1" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "18"))
               (rule "polySimp_rightDist" (formula "13") (term "0,0"))
               (rule "mul_literals" (formula "13") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "13") (term "0"))
               (rule "add_literals" (formula "13") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "13"))
               (rule "mul_literals" (formula "13") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "12"))
               (rule "leq_literals" (formula "13") (term "0"))
               (rule "concrete_or_1" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "14"))
               (rule "times_zero_1" (formula "9") (term "0,0"))
               (rule "add_zero_left" (formula "9") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "9"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
               (rule "polySimp_elimOne" (formula "9") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "5"))
               (rule "leq_literals" (formula "9") (term "0"))
               (rule "concrete_or_1" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "14"))
               (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "polySimp_addComm0" (formula "6") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "6"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0"))
               (rule "inEqSimp_subsumption4" (formula "6") (ifseqformula "5"))
               (rule "greater_literals" (formula "6") (term "0,0"))
               (rule "concrete_and_1" (formula "6") (term "0"))
               (rule "mul_literals" (formula "6") (term "0,0"))
               (rule "leq_literals" (formula "6") (term "0"))
               (rule "concrete_or_1" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "all_pull_out3" (formula "43") (term "0"))
               (rule "allLeft" (formula "23") (inst "t=i_1_0"))
               (rule "replace_known_left" (formula "23") (term "0,0,0,0") (ifseqformula "42"))
               (rule "concrete_not_1" (formula "23") (term "0,0,0"))
               (rule "concrete_or_2" (formula "23") (term "0,0"))
               (rule "inEqSimp_contradInEq0" (formula "23") (term "1") (ifseqformula "41"))
               (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
               (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
               (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
               (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "23") (term "0,0,1"))
               (rule "leq_literals" (formula "23") (term "0,1"))
               (rule "concrete_and_2" (formula "23") (term "1"))
               (rule "concrete_or_4" (formula "23"))
               (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "40"))
               (rule "qeq_literals" (formula "23") (term "0,1"))
               (rule "concrete_and_2" (formula "23") (term "1"))
               (rule "concrete_or_4" (formula "23"))
               (rule "allLeft" (formula "20") (inst "t=mul(i_1_0, Z(2(#)))"))
               (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "43"))
               (rule "concrete_not_1" (formula "20") (term "0,0"))
               (rule "concrete_or_2" (formula "20") (term "0"))
               (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
               (rule "inEqSimp_contradInEq5" (formula "20") (term "0") (ifseqformula "41"))
               (rule "greater_literals" (formula "20") (term "0,0,0"))
               (rule "concrete_impl_1" (formula "20") (term "0,0"))
               (rule "times_zero_1" (formula "20") (term "1,0,0"))
               (rule "qeq_literals" (formula "20") (term "0,0"))
               (rule "concrete_and_2" (formula "20") (term "0"))
               (rule "concrete_or_2" (formula "20"))
               (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "20"))
               (rule "polySimp_rightDist" (formula "37") (term "0,0"))
               (rule "mul_literals" (formula "37") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "37") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "37"))
               (rule "polySimp_mulLiterals" (formula "37") (term "0"))
               (rule "polySimp_elimOne" (formula "37") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "20"))
               (rule "mul_literals" (formula "23") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "23"))
               (rule "mul_literals" (formula "23") (term "1"))
               (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=i_1_0") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
               (rule "leq_literals" (formula "23") (term "0,0"))
               (rule "concrete_or_2" (formula "23") (term "0"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0"))
               (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
               (rule "add_literals" (formula "23") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "23") (term "1,0,0"))
               (rule "add_zero_right" (formula "23") (term "0,0"))
               (rule "leq_literals" (formula "23") (term "0"))
               (rule "concrete_or_2" (formula "23"))
               (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "23"))
               (rule "leq_literals" (formula "43") (term "0"))
               (rule "concrete_or_1" (formula "43"))
               (rule "true_left" (formula "43"))
               (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "20"))
               (rule "polySimp_mulAssoc" (formula "31") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "31"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1"))
               (rule "inEqSimp_contradInEq3" (formula "31") (ifseqformula "44"))
               (rule "greater_literals" (formula "31") (term "0,0"))
               (rule "concrete_impl_1" (formula "31") (term "0"))
               (rule "andLeft" (formula "31"))
               (rule "polySimp_rightDist" (formula "31") (term "0"))
               (rule "mul_literals" (formula "31") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "31"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
               (rule "polySimp_rightDist" (formula "31") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
               (rule "mul_literals" (formula "31") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "31") (term "0"))
               (rule "polySimp_addComm0" (formula "31") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "31") (term "0"))
               (rule "add_literals" (formula "31") (term "1,1,0"))
               (rule "times_zero_1" (formula "31") (term "1,0"))
               (rule "add_zero_right" (formula "31") (term "0"))
               (rule "leq_literals" (formula "31"))
               (rule "closeFalse" (formula "31"))
            )
            (branch "expectedMaxSize >= 0 FALSE"
               (rule "eqSymm" (formula "6"))
               (rule "inEqSimp_geqRight" (formula "38"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "applyEq" (formula "8") (term "1,0,0") (ifseqformula "7"))
               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
               (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
               (rule "polySimp_pullOutFactor3b" (formula "8") (term "0,0"))
               (rule "mod_axiom" (formula "8") (term "0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
               (rule "inEqSimp_homoInEq0" (formula "8"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0"))
               (rule "mul_literals" (formula "8") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
               (rule "add_literals" (formula "8") (term "0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "8"))
               (rule "polySimp_mulComm0" (formula "8") (term "1"))
               (rule "polySimp_rightDist" (formula "8") (term "1"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
               (rule "polySimp_rightDist" (formula "8") (term "0,1"))
               (rule "mul_literals" (formula "8") (term "0,0,1"))
               (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "1"))
               (rule "leq_literals" (formula "12") (term "0"))
               (rule "concrete_or_1" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
               (rule "polySimp_mulAssoc" (formula "5") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
               (rule "polySimp_addComm0" (formula "5") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "5"))
               (rule "polySimp_mulLiterals" (formula "5") (term "0"))
               (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,1,0"))
               (rule "neg_literal" (formula "5") (term "0,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "5") (term "0,0"))
               (rule "concrete_or_2" (formula "5") (term "0"))
               (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0"))
               (rule "add_literals" (formula "5") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
               (rule "add_literals" (formula "5") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "5") (term "1,0,0"))
               (rule "add_zero_right" (formula "5") (term "0,0"))
               (rule "qeq_literals" (formula "5") (term "0"))
               (rule "concrete_or_2" (formula "5"))
               (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "5"))
               (rule "leq_literals" (formula "4") (term "0"))
               (rule "concrete_or_1" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "1,0") (ifseqformula "9"))
               (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "40"))
               (rule "concrete_or_2" (formula "35"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0") (ifseqformula "9"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
               (rule "concrete_or_2" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "10"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
               (rule "concrete_or_2" (formula "1"))
               (rule "shift_paren_or" (formula "40") (term "0,0,0,1,0"))
               (rule "all_pull_out3" (formula "21") (term "0"))
               (rule "shift_paren_or" (formula "21") (term "0,0"))
               (rule "shift_paren_or" (formula "40") (term "0,0,1,0,1,0"))
               (rule "allLeft" (formula "4") (inst "t=i_2_0"))
               (rule "inEqSimp_contradEq3" (formula "4") (term "0,1") (ifseqformula "34"))
               (rule "mul_literals" (formula "4") (term "1,0,0,0,1"))
               (rule "add_literals" (formula "4") (term "0,0,0,1"))
               (rule "qeq_literals" (formula "4") (term "0,0,1"))
               (rule "concrete_and_2" (formula "4") (term "0,1"))
               (rule "concrete_not_2" (formula "4") (term "1"))
               (rule "concrete_or_3" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0") (ifseqformula "11"))
               (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "39"))
               (rule "concrete_or_1" (formula "38"))
               (rule "true_left" (formula "38"))
               (rule "shift_paren_or" (formula "21") (term "0,0,0"))
               (rule "commute_or_2" (formula "21") (term "0,0,0,0"))
               (rule "commute_or" (formula "21") (term "0,0,0,0,0"))
               (rule "commute_or_2" (formula "40") (term "0,0,0,0,1,0"))
               (rule "commute_or" (formula "40") (term "0,0,0,1,0,1,0"))
               (rule "all_pull_out3" (formula "39") (term "0"))
               (rule "shift_paren_or" (formula "39") (term "0,0"))
               (rule "shift_paren_or" (formula "39") (term "0,0,0"))
               (rule "shift_paren_or" (formula "39") (term "0,0,0,0"))
               (rule "commute_or_2" (formula "39") (term "0,0,0,0,0"))
               (rule "commute_or" (formula "39") (term "0,0,0,0,0,0"))
               (rule "div_axiom" (formula "10") (term "0,0") (inst "quotient=quotient_2"))
               (rule "mul_literals" (formula "10") (term "1,1,1,1,1"))
               (rule "qeq_literals" (formula "10") (term "0,1,1"))
               (rule "ifthenelse_true_for" (formula "10") (term "1,1"))
               (rule "equal_literals" (formula "10") (term "0"))
               (rule "concrete_or_2" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
               (rule "polySimp_addComm1" (formula "12") (term "1"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
               (rule "add_literals" (formula "12") (term "0,0,0,1"))
               (rule "polySimp_addComm1" (formula "12") (term "0,1"))
               (rule "add_literals" (formula "12") (term "0,0,1"))
               (rule "inEqSimp_homoInEq0" (formula "11"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
               (rule "polySimp_addComm1" (formula "11") (term "0"))
               (rule "polySimp_addComm1" (formula "11") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0"))
               (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "10"))
               (rule "inEqSimp_homoInEq1" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
               (rule "polySimp_addComm1" (formula "13") (term "0"))
               (rule "polySimp_addComm1" (formula "13") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "11"))
               (rule "polySimp_mulComm0" (formula "11") (term "1"))
               (rule "polySimp_rightDist" (formula "11") (term "1"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1"))
               (rule "polySimp_rightDist" (formula "11") (term "0,1"))
               (rule "mul_literals" (formula "11") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12"))
               (rule "polySimp_mulComm0" (formula "12") (term "1"))
               (rule "polySimp_rightDist" (formula "12") (term "1"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
               (rule "polySimp_elimOne" (formula "12") (term "1,1"))
               (rule "polySimp_rightDist" (formula "12") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1"))
               (rule "mul_literals" (formula "12") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13"))
               (rule "polySimp_mulComm0" (formula "13") (term "1"))
               (rule "polySimp_rightDist" (formula "13") (term "1"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1"))
               (rule "polySimp_rightDist" (formula "13") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
               (rule "mul_literals" (formula "13") (term "0,0,1"))
               (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "13"))
               (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0"))
               (rule "mul_literals" (formula "12") (term "0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
               (rule "add_literals" (formula "12") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
               (rule "add_literals" (formula "12") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0"))
               (rule "qeq_literals" (formula "12") (term "0"))
               (rule "concrete_or_1" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "inEqSimp_exactShadow1" (formula "11") (ifseqformula "3"))
               (rule "greater_literals" (formula "11") (term "0"))
               (rule "concrete_impl_1" (formula "11"))
               (rule "mul_literals" (formula "11") (term "1,0"))
               (rule "polySimp_rightDist" (formula "11") (term "0,0"))
               (rule "polySimp_addComm1" (formula "11") (term "0"))
               (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
               (rule "mul_literals" (formula "11") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
               (rule "polySimp_addComm1" (formula "11") (term "0,0"))
               (rule "add_literals" (formula "11") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "11"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0"))
               (rule "polySimp_elimOne" (formula "11") (term "0"))
               (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "8"))
               (rule "greater_literals" (formula "12") (term "0"))
               (rule "concrete_impl_1" (formula "12"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "12") (term "0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
               (rule "mul_literals" (formula "12") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "12") (term "0"))
               (rule "add_literals" (formula "12") (term "1,1,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "12"))
               (rule "polySimp_mulComm0" (formula "12") (term "1"))
               (rule "polySimp_rightDist" (formula "12") (term "1"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
               (rule "mul_literals" (formula "12") (term "0,1"))
               (rule "inEqSimp_exactShadow2" (formula "19") (ifseqformula "14"))
               (rule "greater_literals" (formula "19") (term "0"))
               (rule "concrete_impl_1" (formula "19"))
               (rule "mul_literals" (formula "19") (term "1,0,0"))
               (rule "mul_literals" (formula "19") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19"))
               (rule "polySimp_mulComm0" (formula "19") (term "1"))
               (rule "polySimp_rightDist" (formula "19") (term "1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
               (rule "mul_literals" (formula "19") (term "0,1"))
               (rule "inEqSimp_exactShadow2" (formula "7") (ifseqformula "14"))
               (rule "greater_literals" (formula "7") (term "0"))
               (rule "concrete_impl_1" (formula "7"))
               (rule "polySimp_mulAssoc" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "polySimp_addComm0" (formula "7") (term "0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "7"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "12"))
               (rule "mul_literals" (formula "19") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0"))
               (rule "add_literals" (formula "19") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "19"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0"))
               (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
               (rule "neg_literal" (formula "19") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "19") (term "0,0"))
               (rule "concrete_or_2" (formula "19") (term "0"))
               (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
               (rule "add_literals" (formula "19") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,0"))
               (rule "add_zero_right" (formula "19") (term "0,0"))
               (rule "qeq_literals" (formula "19") (term "0"))
               (rule "concrete_or_2" (formula "19"))
               (rule "inEqSimp_exactShadow2" (formula "20") (ifseqformula "7"))
               (rule "greater_literals" (formula "20") (term "0"))
               (rule "concrete_impl_1" (formula "20"))
               (rule "mul_literals" (formula "20") (term "1,0,0"))
               (rule "mul_literals" (formula "20") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0"))
               (rule "add_literals" (formula "20") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "20"))
               (rule "mul_literals" (formula "20") (term "1"))
               (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
               (rule "leq_literals" (formula "20") (term "0,0"))
               (rule "concrete_or_2" (formula "20") (term "0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
               (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
               (rule "add_literals" (formula "20") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "20") (term "1,0,0"))
               (rule "add_zero_right" (formula "20") (term "0,0"))
               (rule "leq_literals" (formula "20") (term "0"))
               (rule "concrete_or_2" (formula "20"))
               (rule "inEqSimp_exactShadow1" (formula "13") (ifseqformula "6"))
               (rule "greater_literals" (formula "13") (term "0"))
               (rule "concrete_impl_1" (formula "13"))
               (rule "mul_literals" (formula "13") (term "1,0"))
               (rule "polySimp_rightDist" (formula "13") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
               (rule "mul_literals" (formula "13") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "13") (term "0"))
               (rule "add_literals" (formula "13") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0"))
               (rule "inEqSimp_subsumption4" (formula "13") (ifseqformula "20"))
               (rule "times_zero_1" (formula "13") (term "0,1,0"))
               (rule "greater_literals" (formula "13") (term "0,0"))
               (rule "concrete_and_1" (formula "13") (term "0"))
               (rule "leq_literals" (formula "13") (term "0"))
               (rule "concrete_or_1" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "inEqSimp_exactShadow2" (formula "22") (ifseqformula "7"))
               (rule "greater_literals" (formula "22") (term "0"))
               (rule "concrete_impl_1" (formula "22"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
               (rule "mul_literals" (formula "22") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0"))
               (rule "polySimp_addComm1" (formula "22") (term "0,0"))
               (rule "add_literals" (formula "22") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "22") (term "0"))
               (rule "add_literals" (formula "22") (term "1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "22"))
               (rule "mul_literals" (formula "22") (term "1"))
               (rule "inEqSimp_subsumption6" (formula "22") (ifseqformula "20"))
               (rule "greater_literals" (formula "22") (term "0,0"))
               (rule "concrete_and_1" (formula "22") (term "0"))
               (rule "times_zero_1" (formula "22") (term "1,0"))
               (rule "leq_literals" (formula "22") (term "0"))
               (rule "concrete_or_1" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "6"))
               (rule "polySimp_rightDist" (formula "22") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
               (rule "mul_literals" (formula "22") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "22") (term "0"))
               (rule "add_literals" (formula "22") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "22"))
               (rule "mul_literals" (formula "22") (term "1"))
               (rule "inEqSimp_subsumption6" (formula "22") (ifseqformula "20"))
               (rule "times_zero_1" (formula "22") (term "1,1,0"))
               (rule "greater_literals" (formula "22") (term "0,0"))
               (rule "concrete_and_1" (formula "22") (term "0"))
               (rule "leq_literals" (formula "22") (term "0"))
               (rule "concrete_or_1" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "inEqSimp_exactShadow1" (formula "13") (ifseqformula "12"))
               (rule "greater_literals" (formula "13") (term "0"))
               (rule "concrete_impl_1" (formula "13"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0"))
               (rule "polySimp_rightDist" (formula "13") (term "0,0"))
               (rule "mul_literals" (formula "13") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0"))
               (rule "polySimp_addComm1" (formula "13") (term "0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0"))
               (rule "inEqSimp_subsumption4" (formula "13") (ifseqformula "20"))
               (rule "times_zero_1" (formula "13") (term "0,1,0"))
               (rule "greater_literals" (formula "13") (term "0,0"))
               (rule "concrete_and_1" (formula "13") (term "0"))
               (rule "leq_literals" (formula "13") (term "0"))
               (rule "concrete_or_1" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "19"))
               (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
               (rule "qeq_literals" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
               (rule "leq_literals" (formula "19"))
               (rule "true_left" (formula "19"))
               (rule "applyEqRigid" (formula "13") (term "0,1,1") (ifseqformula "19"))
               (rule "times_zero_2" (formula "13") (term "1,1"))
               (rule "add_zero_right" (formula "13") (term "1"))
               (rule "applyEqRigid" (formula "12") (term "0,1,1") (ifseqformula "19"))
               (rule "times_zero_2" (formula "12") (term "1,1"))
               (rule "add_zero_right" (formula "12") (term "1"))
               (rule "applyEq" (formula "21") (term "0,1,1") (ifseqformula "19"))
               (rule "times_zero_2" (formula "21") (term "1,1"))
               (rule "add_zero_right" (formula "21") (term "1"))
               (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "19"))
               (rule "times_zero_2" (formula "7") (term "1,1"))
               (rule "add_zero_right" (formula "7") (term "1"))
               (rule "applyEq" (formula "15") (term "0,1,0,1") (ifseqformula "19"))
               (rule "times_zero_2" (formula "15") (term "1,0,1"))
               (rule "add_zero_right" (formula "15") (term "0,1"))
               (rule "applyEqRigid" (formula "14") (term "0,1,0,1") (ifseqformula "19"))
               (rule "mul_literals" (formula "14") (term "1,0,1"))
               (rule "add_zero_right" (formula "14") (term "0,1"))
               (rule "applyEqRigid" (formula "11") (term "1") (ifseqformula "19"))
               (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "6"))
               (rule "leq_literals" (formula "12") (term "0"))
               (rule "concrete_or_1" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "19"))
               (rule "leq_literals" (formula "20") (term "0"))
               (rule "concrete_or_1" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "inEqSimp_subsumption4" (formula "7") (ifseqformula "6"))
               (rule "mul_literals" (formula "7") (term "0,1,0"))
               (rule "greater_literals" (formula "7") (term "0,0"))
               (rule "concrete_and_1" (formula "7") (term "0"))
               (rule "leq_literals" (formula "7") (term "0"))
               (rule "concrete_or_1" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(neglit(3(8(8(7(2(8(5(1(7(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(3(#))"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "11") (term "0,0"))
               (rule "concrete_or_2" (formula "11") (term "0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
               (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
               (rule "add_literals" (formula "11") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
               (rule "add_literals" (formula "11") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "11") (term "1,0,0"))
               (rule "add_zero_right" (formula "11") (term "0,0"))
               (rule "leq_literals" (formula "11") (term "0"))
               (rule "concrete_or_2" (formula "11"))
               (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "11"))
               (rule "leq_literals" (formula "18") (term "0"))
               (rule "concrete_or_1" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "inEqSimp_exactShadow2" (formula "7") (ifseqformula "13"))
               (rule "greater_literals" (formula "7") (term "0"))
               (rule "concrete_impl_1" (formula "7"))
               (rule "polySimp_mulAssoc" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "polySimp_addComm0" (formula "7") (term "0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "7"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
               (rule "inEqSimp_subsumption4" (formula "7") (ifseqformula "6"))
               (rule "greater_literals" (formula "7") (term "0,0"))
               (rule "concrete_and_1" (formula "7") (term "0"))
               (rule "mul_literals" (formula "7") (term "0,0"))
               (rule "leq_literals" (formula "7") (term "0"))
               (rule "concrete_or_1" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "3"))
               (rule "mul_literals" (formula "12") (term "1,0,1"))
               (rule "greater_literals" (formula "12") (term "0"))
               (rule "concrete_impl_1" (formula "12"))
               (rule "polySimp_rightDist" (formula "12") (term "0,0"))
               (rule "mul_literals" (formula "12") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0"))
               (rule "add_literals" (formula "12") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
               (rule "polySimp_elimOne" (formula "12") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "6"))
               (rule "leq_literals" (formula "12") (term "0"))
               (rule "concrete_or_1" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "8"))
               (rule "greater_literals" (formula "12") (term "0"))
               (rule "concrete_impl_1" (formula "12"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "12") (term "0,0"))
               (rule "mul_literals" (formula "12") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "12") (term "0"))
               (rule "add_literals" (formula "12") (term "1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "12"))
               (rule "mul_literals" (formula "12") (term "1"))
               (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "11"))
               (rule "mul_literals" (formula "12") (term "1,1,0"))
               (rule "greater_literals" (formula "12") (term "0,0"))
               (rule "concrete_and_1" (formula "12") (term "0"))
               (rule "leq_literals" (formula "12") (term "0"))
               (rule "concrete_or_1" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "inEqSimp_exactShadow2" (formula "18") (ifseqformula "13"))
               (rule "greater_literals" (formula "18") (term "0"))
               (rule "concrete_impl_1" (formula "18"))
               (rule "mul_literals" (formula "18") (term "1,0,0"))
               (rule "mul_literals" (formula "18") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "0"))
               (rule "add_literals" (formula "18") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "18"))
               (rule "mul_literals" (formula "18") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "11"))
               (rule "leq_literals" (formula "18") (term "0"))
               (rule "concrete_or_1" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "all_pull_out3" (formula "43") (term "0"))
               (rule "allLeft" (formula "23") (inst "t=i_1_0"))
               (rule "replace_known_left" (formula "23") (term "0,0,0,0") (ifseqformula "42"))
               (rule "concrete_not_1" (formula "23") (term "0,0,0"))
               (rule "concrete_or_2" (formula "23") (term "0,0"))
               (rule "inEqSimp_contradInEq0" (formula "23") (term "1") (ifseqformula "40"))
               (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
               (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
               (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
               (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "23") (term "0,0,1"))
               (rule "leq_literals" (formula "23") (term "0,1"))
               (rule "concrete_and_2" (formula "23") (term "1"))
               (rule "concrete_or_4" (formula "23"))
               (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "39"))
               (rule "qeq_literals" (formula "23") (term "0,1"))
               (rule "concrete_and_2" (formula "23") (term "1"))
               (rule "concrete_or_4" (formula "23"))
               (rule "allLeft" (formula "20") (inst "t=mul(i_1_0, Z(2(#)))"))
               (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "43"))
               (rule "concrete_not_1" (formula "20") (term "0,0"))
               (rule "concrete_or_2" (formula "20") (term "0"))
               (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
               (rule "inEqSimp_contradInEq5" (formula "20") (term "0") (ifseqformula "40"))
               (rule "times_zero_1" (formula "20") (term "1,1,0,0"))
               (rule "greater_literals" (formula "20") (term "0,0,0"))
               (rule "concrete_impl_1" (formula "20") (term "0,0"))
               (rule "qeq_literals" (formula "20") (term "0,0"))
               (rule "concrete_and_2" (formula "20") (term "0"))
               (rule "concrete_or_2" (formula "20"))
               (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "20"))
               (rule "polySimp_rightDist" (formula "37") (term "0,0"))
               (rule "mul_literals" (formula "37") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "37") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "37"))
               (rule "polySimp_mulLiterals" (formula "37") (term "0"))
               (rule "polySimp_elimOne" (formula "37") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "20"))
               (rule "polySimp_mulAssoc" (formula "30") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "30"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1"))
               (rule "inEqSimp_contradInEq3" (formula "30") (ifseqformula "43"))
               (rule "greater_literals" (formula "30") (term "0,0"))
               (rule "concrete_impl_1" (formula "30") (term "0"))
               (rule "andLeft" (formula "30"))
               (rule "polySimp_rightDist" (formula "30") (term "0"))
               (rule "mul_literals" (formula "30") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "30"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0"))
               (rule "mul_literals" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm0" (formula "30") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "30") (term "0"))
               (rule "add_literals" (formula "30") (term "1,1,0"))
               (rule "times_zero_1" (formula "30") (term "1,0"))
               (rule "add_zero_right" (formula "30") (term "0"))
               (rule "leq_literals" (formula "30"))
               (rule "closeFalse" (formula "30"))
            )
         )
         (branch "if x_3 false"
            (rule "false_to_not_true" (formula "1") (term "1"))
            (rule "simplifyUpdate2" (formula "11"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "applyOnRigidFormula" (formula "8"))
            (rule "applyOnPV" (formula "8") (term "0"))
            (rule "simplifyUpdate1" (formula "8") (term "1"))
            (rule "ifthenelse_concrete3" (formula "8"))
            (rule "boolean_not_equal_2" (formula "8") (term "1"))
            (rule "concrete_or_4" (formula "8"))
            (rule "assignment" (formula "11") (term "1"))
            (rule "insert_constant_value" (formula "11") (term "0,0,1"))
            (rule "sequentialToParallel2" (formula "11"))
            (rule "simplifyUpdate3" (formula "11") (term "1,0"))
            (rule "elim_double_block_3" (formula "11") (term "1"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_2_in_VerifiedIdentityHashMap" (formula "7"))
            (rule "nonNull" (formula "7") (inst "i=i"))
            (rule "sub_literals" (formula "7") (term "2,1,0,1,1"))
            (rule "nonNullZero" (formula "7") (term "1,0,1,1"))
            (rule "greater_literals" (formula "7") (term "0,1"))
            (rule "concrete_impl_1" (formula "7") (term "1"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "7"))
            (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
            (rule "commute_and" (formula "7") (term "0,0"))
            (rule "arrayLengthIsAShort" (formula "7") (term "1,0,0,0"))
            (rule "expand_inShort" (formula "7"))
            (rule "replace_short_MIN" (formula "7") (term "0,1"))
            (rule "replace_short_MAX" (formula "7") (term "1,0"))
            (rule "andLeft" (formula "7"))
            (rule "inEqSimp_commuteLeq" (formula "8"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "1,0,0,1,0") (ifseqformula "1"))
            (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "12"))
            (rule "concrete_or_2" (formula "9"))
            (rule "arrayLengthNotNegative" (formula "10") (term "1,0,0,0"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_3_in_VerifiedIdentityHashMap" (formula "12"))
            (rule "notLeft" (formula "12"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "1"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "14"))
            (rule "concrete_or_2" (formula "1"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_4_in_VerifiedIdentityHashMap" (formula "13"))
            (rule "notLeft" (formula "13"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "15"))
            (rule "concrete_or_2" (formula "1"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_5_in_VerifiedIdentityHashMap" (formula "14"))
            (rule "insert_constant_value" (formula "14") (term "0,0,1"))
            (rule "insert_constant_value" (formula "14") (term "0,0,1,0"))
            (rule "insert_constant_value" (formula "14") (term "0,1,0,0"))
            (rule "eqClose" (formula "14") (term "1,0,0"))
            (rule "concrete_and_3" (formula "14") (term "0,0"))
            (rule "insert_constant_value" (formula "14") (term "0,1,0,0"))
            (rule "eqClose" (formula "14") (term "1,0,0"))
            (rule "concrete_and_3" (formula "14") (term "0,0"))
            (rule "insert_constant_value" (formula "14") (term "0,1,0,0"))
            (rule "eqClose" (formula "14") (term "1,0,0"))
            (rule "concrete_and_3" (formula "14") (term "0,0"))
            (rule "mul_literals" (formula "14") (term "0,1"))
            (rule "mul_literals" (formula "14") (term "0,1,0"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "notLeft" (formula "14"))
            (rule "inEqSimp_commuteGeq" (formula "15"))
            (rule "inEqSimp_commuteLeq" (formula "14"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_VerifiedIdentityHashMap" (formula "16") (inst "i=i"))
            (rule "polySimp_addComm0" (formula "16") (term "0,2,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
            (rule "commute_and" (formula "16") (term "0,0"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_VerifiedIdentityHashMap" (formula "17") (inst "i=i") (inst "j=j"))
            (rule "eqSymm" (formula "17") (term "1,1,0,1,0"))
            (rule "eqSymm" (formula "17") (term "1,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "0,2,0,0,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "0,2,0,1,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "0,2,1,1,0,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
            (rule "commute_and" (formula "17") (term "0,0"))
            (rule "commute_and" (formula "17") (term "0,0,1,0"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_11_in_VerifiedIdentityHashMap" (formula "18"))
            (rule "insert_constant_value" (formula "18") (term "1"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_13_in_VerifiedIdentityHashMap" (formula "19") (inst "i=i"))
            (rule "eqSymm" (formula "19"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,2,0,0,0,2,0"))
            (rule "ifthenelse_negated" (formula "19") (term "2,0"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_15_in_VerifiedIdentityHashMap" (formula "20") (inst "i=i"))
            (rule "exLeft" (formula "20") (inst "sk=i_0"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "eqSymm" (formula "22"))
            (rule "inEqSimp_commuteLeq" (formula "20"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_17_in_VerifiedIdentityHashMap" (formula "23") (inst "i=i"))
            (rule "exLeft" (formula "23") (inst "sk=i_1"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "polySimp_mulComm0" (formula "25") (term "0,2,0"))
            (rule "inEqSimp_commuteLeq" (formula "23"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "3"))
            (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "26"))
            (rule "concrete_or_1" (formula "25"))
            (rule "true_left" (formula "25"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_19_in_VerifiedIdentityHashMap" (formula "26") (inst "i=i") (inst "j=j"))
            (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,0,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,1,0"))
            (rule "commute_and" (formula "26") (term "0,0"))
            (rule "commute_and" (formula "26") (term "0,0,1,1,0"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_21_in_VerifiedIdentityHashMap" (formula "27") (inst "i=i") (inst "j=j"))
            (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "0,2,0,0,1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "0,2,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "0,2,1,0,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "0,1,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "0,2,1,1,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "27") (term "0,1,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0,1,1,0"))
            (rule "commute_and" (formula "27") (term "0,0"))
            (rule "commute_and" (formula "27") (term "1,0,0,1,1,0"))
            (rule "commute_and" (formula "27") (term "0,0,0,1,1,0"))
            (rule "cnf_rightDist" (formula "27") (term "0,0,1,1,0"))
            (rule "commute_or" (formula "27") (term "0,0,0,1,1,0"))
            (rule "cnf_rightDist" (formula "27") (term "1,0,0,1,1,0"))
            (rule "commute_or" (formula "27") (term "0,1,0,0,1,1,0"))
            (rule "commute_or" (formula "27") (term "1,1,0,0,1,1,0"))
            (rule "cnf_rightDist" (formula "27") (term "0,0,0,1,1,0"))
            (rule "commute_or" (formula "27") (term "1,0,0,0,1,1,0"))
            (rule "commute_or" (formula "27") (term "0,0,0,0,1,1,0"))
            (rule "shift_paren_and" (formula "27") (term "0,0,1,1,0"))
            (rule "commute_and_2" (formula "27") (term "0,0,1,1,0"))
            (rule "commute_and_2" (formula "27") (term "0,0,0,1,1,0"))
            (rule "commute_and_2" (formula "27") (term "0,0,1,1,0"))
            (rule "commute_and" (formula "27") (term "0,0,0,0,1,1,0"))
            (rule "commute_and_2" (formula "27") (term "0,0,0,1,1,0"))
             (builtin "Loop Invariant" (formula "35") (newnames "variant,b,heapBefore_LOOP,result_1Before_LOOP,result_1_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
            (branch "Invariant Initially Valid"
               (rule "simplifyUpdate2" (formula "35"))
               (rule "applyOnRigidFormula" (formula "35"))
               (rule "simplifyUpdate2" (formula "35") (term "1"))
               (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "3"))
               (rule "concrete_and_3" (formula "35"))
               (rule "applyOnRigidFormula" (formula "35"))
               (rule "simplifyUpdate2" (formula "35") (term "1"))
               (rule "applyOnRigidFormula" (formula "35") (term "0"))
               (rule "simplifyUpdate1" (formula "35") (term "0,0"))
               (rule "simplifyUpdate1" (formula "35") (term "1,0"))
               (rule "applyOnPV" (formula "35") (term "1,0"))
               (rule "applyOnRigidFormula" (formula "35") (term "1"))
               (rule "applyOnRigidTerm" (formula "35") (term "0,0"))
               (rule "applyOnPV" (formula "35") (term "0,0,0"))
               (rule "simplifyUpdate1" (formula "35") (term "1,0,0"))
               (rule "jdiv_axiom_inline" (formula "35") (term "0,0"))
               (rule "qeq_literals" (formula "35") (term "0,0,0"))
               (rule "ifthenelse_true" (formula "35") (term "0,0"))
               (rule "div_literals" (formula "35") (term "0,0"))
               (rule "inEqSimp_ltRight" (formula "32"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_gtRight" (formula "33"))
               (rule "mul_literals" (formula "1") (term "0,0"))
               (rule "applyOnRigidFormula" (formula "35") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulAssoc" (formula "29") (term "1,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "26"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_gtToGeq" (formula "28") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "28") (term "0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "23"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "23") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "20"))
               (rule "mul_literals" (formula "20") (term "1,0,0"))
               (rule "add_literals" (formula "20") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_mulAssoc" (formula "29") (term "1,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "29") (term "0,1,0,1,0"))
               (rule "applyOnRigidFormula" (formula "35") (term "1,0,1"))
               (rule "simplifyUpdate1" (formula "35") (term "0,1,0,1"))
               (rule "applyOnPV" (formula "35") (term "1,1,0,1"))
               (rule "applyOnRigidFormula" (formula "35") (term "0,0,1"))
               (rule "simplifyUpdate2" (formula "35") (term "0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "35") (term "0"))
               (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
               (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
               (rule "add_literals" (formula "35") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "35") (term "0,0"))
               (rule "add_literals" (formula "35") (term "0,0,0"))
               (rule "applyOnRigidFormula" (formula "35") (term "1,0,0,1"))
               (rule "simplifyUpdate1" (formula "35") (term "0,1,0,0,1"))
               (rule "applyOnPV" (formula "35") (term "1,1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1"))
               (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0,1"))
               (rule "add_literals" (formula "35") (term "0,0,1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1"))
               (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "17") (term "0") (ifseqformula "24"))
               (rule "applyEq" (formula "28") (term "2,0,1,0,1,0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "29") (term "2,1,1,1,0,0,1,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "14") (term "0") (ifseqformula "24"))
               (rule "applyEq" (formula "11") (term "0") (ifseqformula "24"))
               (rule "applyEq" (formula "29") (term "2,0,1,0,1,0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "29") (term "2,1,1,0,0,0,0,0,1,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "28") (term "2,0,1,1,0,0,1,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "12") (term "0") (ifseqformula "24"))
               (rule "applyEq" (formula "16") (term "0") (ifseqformula "24"))
               (rule "applyEq" (formula "18") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
               (rule "applyEq" (formula "28") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
               (rule "applyEq" (formula "29") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "15") (term "0,1,0,0,0,0,0") (ifseqformula "24"))
               (rule "applyEq" (formula "29") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
               (rule "applyEq" (formula "19") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "29") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "19") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
               (rule "mod_axiom" (formula "2") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0,0,1,0"))
               (rule "mod_axiom" (formula "1") (term "0,1,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "0,1,0,1,0,1,0"))
               (rule "mul_literals" (formula "1") (term "0,0,1,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,0"))
               (rule "jmod_axiom" (formula "1") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
               (rule "mod_axiom" (formula "35") (term "0,1,0,1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "35") (term "0,1,0,1,0,0,1,0,0"))
               (rule "mul_literals" (formula "35") (term "0,0,1,0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "35") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1,0,0"))
               (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1,0,0"))
               (rule "jmod_axiom" (formula "35") (term "0,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,0,0"))
               (rule "mod_axiom" (formula "2") (term "0,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,1,0"))
               (rule "mul_literals" (formula "2") (term "0,0,1,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,1,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0,0,1,0"))
               (rule "mod_axiom" (formula "1") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,1,0"))
               (rule "mod_axiom" (formula "35") (term "1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,0,1,0,0"))
               (rule "add_literals" (formula "35") (term "1,1,0,0,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0,1,0,0"))
               (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0,0,1,0,0"))
               (rule "jmod_axiom" (formula "2") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,1,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "29") (term "0,1,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20"))
               (rule "mul_literals" (formula "20") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1"))
               (rule "mul_literals" (formula "35") (term "1,1,0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "26"))
               (rule "polySimp_mulLiterals" (formula "26") (term "0"))
               (rule "polySimp_elimOne" (formula "26") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "28") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "0,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "29") (term "0,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "23"))
               (rule "polySimp_mulLiterals" (formula "23") (term "0"))
               (rule "polySimp_elimOne" (formula "23") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0"))
               (rule "polySimp_mulLiterals" (formula "35") (term "0,0"))
               (rule "polySimp_elimOne" (formula "35") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "16"))
               (rule "leq_literals" (formula "12") (term "0"))
               (rule "concrete_or_1" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "15"))
               (rule "leq_literals" (formula "13") (term "0"))
               (rule "concrete_or_1" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "11"))
               (rule "leq_literals" (formula "15") (term "0"))
               (rule "concrete_or_1" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "elimGcdGeq" (formula "26") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "sub_literals" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "26") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "leq_literals" (formula "26") (term "1,0,0,0,0,0,0,0,1,1,0"))
               (rule "concrete_and_3" (formula "26") (term "0,0,0,0,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,0,0,1,1,0"))
               (rule "qeq_literals" (formula "26") (term "0,0,0,0,0,0,0,1,1,0"))
               (rule "ifthenelse_true_for" (formula "26") (term "0,0,0,0,0,0,1,1,0"))
               (rule "elimGcdGeq" (formula "26") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "sub_literals" (formula "26") (term "0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "26") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,1,0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "qeq_literals" (formula "26") (term "0,0,1,1,0,0,0,0,1,1,0"))
               (rule "concrete_and_1" (formula "26") (term "0,1,1,0,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "26") (term "0,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "0,0,1,1,0,0,0,0,1,1,0"))
               (rule "leq_literals" (formula "26") (term "0,1,1,0,0,0,0,1,1,0"))
               (rule "ifthenelse_true_for" (formula "26") (term "1,1,0,0,0,0,1,1,0"))
               (rule "polyDiv_pullOut" (formula "2") (term "0,1,0,0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0,1,0,0"))
               (rule "equal_literals" (formula "2") (term "0,0,1,0,0"))
               (rule "ifthenelse_false" (formula "2") (term "0,1,0,0"))
               (rule "mul_literals" (formula "2") (term "1,0,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,1,1,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,1,1,0,0"))
               (rule "add_zero_left" (formula "2") (term "0,0,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
               (rule "polyMod_pullOut" (formula "32") (term "0,0") (inst "polyDivCoeff=mul(div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                mul(jdiv(expectedMaxSize, Z(2(#))),
                    Z(3(#)))),
            mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                        jdiv(expectedMaxSize, Z(2(#)))),
                    Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
                Z(neglit(8(8(8(1(0(9(4(8(8(2(1(#))))))))))))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0"))
               (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "32") (term "0,0,0"))
               (rule "polyMod_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=mul(div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                mul(jdiv(expectedMaxSize, Z(2(#))),
                    Z(3(#)))),
            mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                        jdiv(expectedMaxSize, Z(2(#)))),
                    Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
                Z(neglit(8(8(8(1(0(9(4(8(8(2(1(#))))))))))))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "elimGcdLeq" (formula "26") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
               (rule "sub_literals" (formula "26") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,1,0,0,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "26") (term "0,0,1,0,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,1,0,0,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "qeq_literals" (formula "26") (term "1,0,0,1,0,0,1,1,0"))
               (rule "concrete_and_3" (formula "26") (term "0,0,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,0,0,1,1,0"))
               (rule "add_zero_left" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "26") (term "0,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,0,0,0,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "0,0,0,1,0,0,1,1,0"))
               (rule "leq_literals" (formula "26") (term "0,0,1,0,0,1,1,0"))
               (rule "ifthenelse_true_for" (formula "26") (term "0,1,0,0,1,1,0"))
               (rule "elimGcdLeq" (formula "26") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
               (rule "sub_literals" (formula "26") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "26") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
               (rule "qeq_literals" (formula "26") (term "1,0,1,1,0,0,0,1,1,0"))
               (rule "concrete_and_3" (formula "26") (term "0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "26") (term "0,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,0,0,1,1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "0,0,1,1,0,0,0,1,1,0"))
               (rule "leq_literals" (formula "26") (term "0,1,1,0,0,0,1,1,0"))
               (rule "ifthenelse_true_for" (formula "26") (term "1,1,0,0,0,1,1,0"))
               (rule "polyMod_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(expectedMaxSize, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(3(#))))"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "polyMod_pullOut" (formula "32") (term "0,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(expectedMaxSize, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(3(#))))"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0"))
               (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "32") (term "0,0,0"))
               (rule "polyMod_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=mul(div(mul(mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                    jdiv(expectedMaxSize, Z(2(#)))),
                Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
            Z(3(#))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "polyMod_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(expectedMaxSize, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(3(#))))"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "polyMod_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=Z(1(#))"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
               (rule "mul_literals" (formula "2") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0"))
               (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "11"))
               (rule "polySimp_rightDist" (formula "20") (term "0,0"))
               (rule "mul_literals" (formula "20") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0"))
               (rule "add_literals" (formula "20") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "20"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0"))
               (rule "polySimp_elimOne" (formula "20") (term "0"))
               (rule "nnf_imp2or" (formula "15") (term "1,0"))
               (rule "nnf_imp2or" (formula "16") (term "1,0,1,0"))
               (rule "nnf_imp2or" (formula "26") (term "1,0"))
               (rule "nnf_imp2or" (formula "13") (term "0"))
               (rule "nnf_imp2or" (formula "27") (term "0"))
               (rule "nnf_imp2or" (formula "15") (term "0"))
               (rule "nnf_imp2or" (formula "16") (term "0"))
               (rule "nnf_imp2or" (formula "26") (term "0"))
               (rule "nnf_notAnd" (formula "13") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
               (rule "mul_literals" (formula "13") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
               (rule "mul_literals" (formula "27") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "27") (term "1,0"))
               (rule "nnf_notAnd" (formula "15") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
               (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
               (rule "mul_literals" (formula "15") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "16") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
               (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
               (rule "mul_literals" (formula "16") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "26") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
               (rule "mul_literals" (formula "26") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "16") (term "0,1,0"))
               (rule "nnf_notAnd" (formula "26") (term "0,1,0"))
               (rule "double_not" (formula "26") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "26") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1,0,1,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,1,0,1,0"))
               (rule "add_zero_left" (formula "26") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0"))
               (rule "nnf_imp2or" (formula "26") (term "0,1,1,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,1,0"))
               (rule "double_not" (formula "27") (term "0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,1,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,1,0,1,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,1,0"))
               (rule "nnf_imp2or" (formula "27") (term "0,1,1,0"))
               (rule "nnf_notAnd" (formula "16") (term "0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,1,0"))
               (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,1,0"))
               (rule "jdiv_axiom" (formula "18") (term "1,0"))
               (rule "eqSymm" (formula "18"))
               (rule "inEqSimp_subsumption1" (formula "18") (term "0,0") (ifseqformula "14"))
               (rule "leq_literals" (formula "18") (term "0,0,0"))
               (rule "concrete_or_1" (formula "18") (term "0,0"))
               (rule "ifthenelse_true" (formula "18") (term "0"))
               (rule "eqSymm" (formula "18"))
               (rule "applyEq" (formula "27") (term "1,0,0,0") (ifseqformula "18"))
               (rule "applyEq" (formula "28") (term "1,0,0,0") (ifseqformula "18"))
               (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "18"))
               (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "18"))
               (rule "applyEq" (formula "16") (term "1,0,0,0") (ifseqformula "18"))
               (rule "applyEqRigid" (formula "16") (term "1,0,0,0,1,0") (ifseqformula "18"))
               (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "18"))
               (rule "nnf_notAnd" (formula "16") (term "0,1,0,1,0"))
               (rule "double_not" (formula "16") (term "0,0,1,0,1,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0,1,1,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,1,1,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,0,1,1,0"))
               (rule "nnf_notOr" (formula "28") (term "1,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,1,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,1,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,1,0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,1,1,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,1,1,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,0,0,1,1,0"))
               (rule "nnf_notOr" (formula "28") (term "1,0,0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,0,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "1,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,1,1,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,1,1,0"))
               (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "29") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "7"))
               (rule "insert_constant_value" (formula "29") (term "1,1,0,0,0,0,0"))
               (rule "insert_constant_value" (formula "29") (term "0,0,1,1,0,0,0,0,0,0,0,0"))
               (rule "insert_constant_value" (formula "29") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "eqClose" (formula "29") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "concrete_and_3" (formula "29") (term "0,0,1,0,0,0,0,0,0,0,0"))
               (rule "insert_constant_value" (formula "29") (term "0,0,1,0,1,0,0,0,0,0,0,0,0"))
               (rule "insert_constant_value" (formula "29") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "eqClose" (formula "29") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "concrete_and_3" (formula "29") (term "0,0,1,0,0,0,0,0,0,0,0"))
               (rule "insert_constant_value" (formula "29") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "eqClose" (formula "29") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "concrete_and_3" (formula "29") (term "0,0,1,0,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,1,0,0,0,0,0,0,0,0"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "31"))
               (rule "andLeft" (formula "29"))
               (rule "notLeft" (formula "31"))
               (rule "andLeft" (formula "31"))
               (rule "notLeft" (formula "30"))
               (rule "notLeft" (formula "30"))
               (rule "exLeft" (formula "37") (inst "sk=i_1_0"))
               (rule "andLeft" (formula "37"))
               (rule "andLeft" (formula "37"))
               (rule "exLeft" (formula "36") (inst "sk=i_2_0"))
               (rule "andLeft" (formula "36"))
               (rule "andLeft" (formula "36"))
               (rule "eqSymm" (formula "35"))
               (rule "eqSymm" (formula "33") (term "1,0,1,0,1,0"))
               (rule "eqSymm" (formula "33") (term "1,1,0,1,0"))
               (rule "eqSymm" (formula "38"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "0,2,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,1,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "0,2,1,1,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "0,1,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "42") (term "0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "42") (term "0,2,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "42") (term "0,2,1,1,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "0,2,0,0,0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "41") (term "0,2,0"))
               (rule "polySimp_mulComm0" (formula "35") (term "0,2,0,0,0,2,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "0,2,0,1,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "0,2,1,1,0,1,0,1,0"))
               (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "34"))
               (rule "mul_literals" (formula "34") (term "1,0,0"))
               (rule "add_literals" (formula "34") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "40"))
               (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "40") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "37"))
               (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "37") (term "0"))
               (rule "ifthenelse_negated" (formula "35") (term "2,0"))
               (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "43") (term "0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "43") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_mulAssoc" (formula "43") (term "1,0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,1,1,0"))
               (rule "inEqSimp_gtToGeq" (formula "42") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "42") (term "0,1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
               (rule "inEqSimp_commuteGeq" (formula "31"))
               (rule "inEqSimp_commuteLeq" (formula "30"))
               (rule "inEqSimp_commuteLeq" (formula "39"))
               (rule "inEqSimp_commuteLeq" (formula "36"))
               (rule "inEqSimp_commuteLeq" (formula "43") (term "0,1,0,0,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,1,0"))
               (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "40") (term "0,0,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "38") (term "0") (ifseqformula "23"))
               (rule "eqSymm" (formula "38"))
               (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "43") (term "2,0,1,0,1,0,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "30") (term "0") (ifseqformula "23"))
               (rule "applyEq" (formula "30") (term "0") (ifseqformula "23"))
               (rule "applyEq" (formula "42") (term "2,1,0,0,0,0,1,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "41") (term "2,0,1,0,0,0,1,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "41") (term "2,0,1,0,1,0,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "23"))
               (rule "applyEq" (formula "42") (term "0,0,1,0,0,1,0,0") (ifseqformula "23"))
               (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "41") (term "0,0,1,0,0,1,0,0") (ifseqformula "23"))
               (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "23"))
               (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "18"))
               (rule "applyEqRigid" (formula "38") (term "0,1,0") (ifseqformula "18"))
               (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
               (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "18"))
               (rule "applyEq" (formula "40") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
               (rule "applyEqRigid" (formula "41") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
               (rule "applyEqRigid" (formula "32") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
               (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "33"))
               (rule "mul_literals" (formula "33") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "40") (term "1,1,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "40") (term "0,1,1,1,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "34"))
               (rule "polySimp_mulLiterals" (formula "34") (term "0"))
               (rule "polySimp_elimOne" (formula "34") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "40") (term "0,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "39") (term "0,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "37"))
               (rule "polySimp_mulLiterals" (formula "37") (term "0"))
               (rule "polySimp_elimOne" (formula "37") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
               (rule "inEqSimp_subsumption0" (formula "30") (ifseqformula "11"))
               (rule "leq_literals" (formula "30") (term "0"))
               (rule "concrete_or_1" (formula "30"))
               (rule "true_left" (formula "30"))
               (rule "nonNull" (formula "29") (inst "i=i"))
               (rule "sub_literals" (formula "29") (term "2,1,0,1,1"))
               (rule "nonNullZero" (formula "29") (term "1,0,1,1"))
               (rule "greater_literals" (formula "29") (term "0,1"))
               (rule "concrete_impl_1" (formula "29") (term "1"))
               (rule "andLeft" (formula "29"))
               (rule "notLeft" (formula "29"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
               (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "23"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
               (rule "elimGcdLeq" (formula "39") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0,1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
               (rule "sub_literals" (formula "39") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "39") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
               (rule "add_literals" (formula "39") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "39") (term "1,0,0,0,1,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
               (rule "add_literals" (formula "39") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "39") (term "1,0,1,0,1,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "39") (term "0,0,1,0,1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "39") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,1,1,0,0,1,1,0"))
               (rule "add_literals" (formula "39") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "39") (term "0,0,1,0,1,1,0,0,1,1,0"))
               (rule "add_literals" (formula "39") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
               (rule "add_literals" (formula "39") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "39") (term "1,0,1,0,1,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
               (rule "qeq_literals" (formula "39") (term "1,0,1,1,0,0,1,1,0"))
               (rule "concrete_and_3" (formula "39") (term "0,1,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
               (rule "add_literals" (formula "39") (term "0,0,0,0,1,1,0,0,1,1,0"))
               (rule "add_zero_left" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "39") (term "0,0,1,1,0,0,1,1,0"))
               (rule "add_literals" (formula "39") (term "1,0,0,1,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "39") (term "0,0,1,1,0,0,1,1,0"))
               (rule "leq_literals" (formula "39") (term "0,1,1,0,0,1,1,0"))
               (rule "ifthenelse_true_for" (formula "39") (term "1,1,0,0,1,1,0"))
               (rule "elimGcdGeq" (formula "39") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0,0,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "39") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
               (rule "sub_literals" (formula "39") (term "0,0,0,0,0,0,0,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,0,1,0,0,1,1,0"))
               (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "39") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "39") (term "1,0,1,0,0,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "39") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "leq_literals" (formula "39") (term "1,0,0,1,0,0,1,1,0"))
               (rule "concrete_and_3" (formula "39") (term "0,0,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "39") (term "1,1,0,0,0,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "39") (term "1,0,0,0,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,1,1,0"))
               (rule "qeq_literals" (formula "39") (term "0,0,1,0,0,1,1,0"))
               (rule "ifthenelse_true_for" (formula "39") (term "0,1,0,0,1,1,0"))
               (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "11"))
               (rule "polySimp_rightDist" (formula "33") (term "0,0"))
               (rule "mul_literals" (formula "33") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0"))
               (rule "add_literals" (formula "33") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "33"))
               (rule "polySimp_mulLiterals" (formula "33") (term "0"))
               (rule "polySimp_elimOne" (formula "33") (term "0"))
               (rule "nnf_notOr" (formula "28") (term "1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "1,1,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "28") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,1,1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "1,1,1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,0,1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,0,0,1,1,0"))
               (rule "nnf_notOr" (formula "28") (term "0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,0,1,1,0"))
               (rule "nnf_imp2or" (formula "30") (term "1,0"))
               (rule "commute_or_2" (formula "13") (term "0"))
               (rule "nnf_imp2or" (formula "31") (term "1,0,1,0"))
               (rule "nnf_imp2or" (formula "39") (term "1,0"))
               (rule "commute_or_2" (formula "15") (term "0"))
               (rule "commute_or" (formula "27") (term "0,0"))
               (rule "nnf_imp2or" (formula "29") (term "0"))
               (rule "commute_or" (formula "28") (term "0,0"))
               (rule "commute_or" (formula "16") (term "0,0"))
               (rule "jdiv_axiom" (formula "1") (term "1,0,0"))
               (rule "eqSymm" (formula "1"))
               (rule "polyDiv_pullOut" (formula "1") (term "0,2,0") (inst "polyDivCoeff=mul(expectedMaxSize, Z(neglit(1(#))))"))
               (rule "equal_literals" (formula "1") (term "0,0,2,0"))
               (rule "ifthenelse_false" (formula "1") (term "0,2,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
               (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,2,0"))
               (rule "add_literals" (formula "1") (term "1,0,0,0,2,0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,0,0,2,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "2,0"))
               (rule "polySimp_addComm0" (formula "1") (term "1,2,0"))
               (rule "polySimp_rightDist" (formula "1") (term "2,0"))
               (rule "polySimp_mulAssoc" (formula "1") (term "0,2,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0,2,0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,2,0"))
               (rule "shift_paren_or" (formula "17") (term "0,1,0"))
               (rule "nnf_imp2or" (formula "41") (term "0"))
               (rule "commute_or_2" (formula "28") (term "0,1,1,0"))
               (rule "nnf_imp2or" (formula "31") (term "0"))
               (rule "nnf_imp2or" (formula "32") (term "0"))
               (rule "nnf_imp2or" (formula "40") (term "0"))
               (rule "nnf_notAnd" (formula "30") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
               (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
               (rule "mul_literals" (formula "30") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "41") (term "1,0"))
               (rule "nnf_notAnd" (formula "41") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "41") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0"))
               (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "41") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
               (rule "mul_literals" (formula "41") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "31") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
               (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
               (rule "mul_literals" (formula "31") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "32") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
               (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "32") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
               (rule "mul_literals" (formula "32") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "40") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "40") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0"))
               (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
               (rule "mul_literals" (formula "40") (term "1,0,0,0"))
               (rule "cut_direct" (formula "46") (term "0"))
               (branch "CUT: ( 2147483648 + expectedMaxSize + jdiv(expectedMaxSize, 2)) % 4294967296 >= 2147483651 TRUE"
                  (rule "concrete_and_1" (formula "47"))
                  (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                  (rule "leq_literals" (formula "4") (term "0"))
                  (rule "concrete_or_1" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "nnf_ex2all" (formula "46"))
                  (rule "nnf_imp2or" (formula "33") (term "0,1,0"))
                  (rule "nnf_notAnd" (formula "41") (term "0,1,0"))
                  (rule "double_not" (formula "41") (term "0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "41") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,1,0"))
                  (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,1,0"))
                  (rule "add_literals" (formula "41") (term "0,0,0,1,0,1,0"))
                  (rule "add_zero_left" (formula "41") (term "0,0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,0"))
                  (rule "nnf_imp2or" (formula "41") (term "0,1,1,0"))
                  (rule "nnf_notAnd" (formula "42") (term "0,1,0"))
                  (rule "double_not" (formula "42") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "42") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0,1,0"))
                  (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,1,0"))
                  (rule "add_literals" (formula "42") (term "0,0,0,1,0,1,0"))
                  (rule "add_zero_left" (formula "42") (term "0,0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,0"))
                  (rule "nnf_imp2or" (formula "42") (term "0,1,1,0"))
                  (rule "commute_and" (formula "30") (term "1,0,0,0,1,1,0"))
                  (rule "div_axiom" (formula "20") (term "1") (inst "quotient=quotient_0"))
                  (rule "mul_literals" (formula "20") (term "1,1,1,1,1"))
                  (rule "qeq_literals" (formula "20") (term "0,1,1"))
                  (rule "ifthenelse_true_for" (formula "20") (term "1,1"))
                  (rule "equal_literals" (formula "20") (term "0"))
                  (rule "concrete_or_2" (formula "20"))
                  (rule "andLeft" (formula "20"))
                  (rule "andLeft" (formula "20"))
                  (rule "polySimp_addComm1" (formula "22") (term "1"))
                  (rule "add_literals" (formula "22") (term "0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "21"))
                  (rule "inEqSimp_homoInEq1" (formula "22"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0"))
                  (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "20"))
                  (rule "applyEq" (formula "33") (term "1,1,0,0") (ifseqformula "20"))
                  (rule "applyEqRigid" (formula "44") (term "1,1,0,0") (ifseqformula "20"))
                  (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "20"))
                  (rule "inEqSimp_homoInEq1" (formula "30"))
                  (rule "polySimp_addComm1" (formula "30") (term "0"))
                  (rule "applyEqRigid" (formula "45") (term "1,1,0,0") (ifseqformula "20"))
                  (rule "applyEqRigid" (formula "18") (term "1,1,0,0") (ifseqformula "20"))
                  (rule "applyEqRigid" (formula "17") (term "1,0,0,0") (ifseqformula "20"))
                  (rule "applyEq" (formula "36") (term "1,1,0,0") (ifseqformula "20"))
                  (rule "applyEqRigid" (formula "18") (term "1,0,0,0,0,1,0") (ifseqformula "20"))
                  (rule "applyEqRigid" (formula "42") (term "0") (ifseqformula "20"))
                  (rule "inEqSimp_homoInEq1" (formula "42"))
                  (rule "polySimp_addComm1" (formula "42") (term "0"))
                  (rule "applyEqRigid" (formula "35") (term "1,1,0,0") (ifseqformula "20"))
                  (rule "applyEqRigid" (formula "36") (term "1,1,1,0,0,0,1,0") (ifseqformula "20"))
                  (rule "applyEq" (formula "32") (term "1,1,0,0") (ifseqformula "20"))
                  (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "20"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1"))
                  (rule "polySimp_rightDist" (formula "22") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                  (rule "mul_literals" (formula "22") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1"))
                  (rule "polySimp_rightDist" (formula "30") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                  (rule "mul_literals" (formula "30") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "42"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1"))
                  (rule "polySimp_rightDist" (formula "42") (term "1"))
                  (rule "mul_literals" (formula "42") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
                  (rule "mul_literals" (formula "29") (term "0,0"))
                  (rule "add_zero_left" (formula "29") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                  (rule "mul_literals" (formula "29") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "43"))
                  (rule "times_zero_1" (formula "42") (term "0,0"))
                  (rule "add_zero_left" (formula "42") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                  (rule "mul_literals" (formula "42") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "13"))
                  (rule "polySimp_mulAssoc" (formula "21") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "21") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "21") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                  (rule "neg_literal" (formula "21") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "21") (term "0,0"))
                  (rule "concrete_or_2" (formula "21") (term "0"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                  (rule "add_literals" (formula "21") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0"))
                  (rule "qeq_literals" (formula "21") (term "0"))
                  (rule "concrete_or_2" (formula "21"))
                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "23"))
                  (rule "mul_literals" (formula "16") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                  (rule "add_literals" (formula "16") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                  (rule "mul_literals" (formula "16") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "16") (term "0,0"))
                  (rule "concrete_or_2" (formula "16") (term "0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                  (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                  (rule "add_literals" (formula "16") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0"))
                  (rule "leq_literals" (formula "16") (term "0"))
                  (rule "concrete_or_2" (formula "16"))
                  (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "16"))
                  (rule "leq_literals" (formula "31") (term "0"))
                  (rule "concrete_or_1" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "24"))
                  (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                  (rule "mul_literals" (formula "29") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "29") (term "0"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                  (rule "add_literals" (formula "29") (term "0,0,0"))
                  (rule "add_zero_left" (formula "29") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                  (rule "polySimp_elimOne" (formula "29") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "24"))
                  (rule "polySimp_rightDist" (formula "42") (term "0,0"))
                  (rule "mul_literals" (formula "42") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "42") (term "0"))
                  (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                  (rule "add_literals" (formula "42") (term "0,0,0"))
                  (rule "add_zero_left" (formula "42") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                  (rule "polySimp_elimOne" (formula "42") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "42"))
                  (rule "times_zero_1" (formula "40") (term "0,0"))
                  (rule "add_zero_left" (formula "40") (term "0"))
                  (rule "inEqSimp_subsumption6" (formula "40") (ifseqformula "16"))
                  (rule "mul_literals" (formula "40") (term "1,1,0"))
                  (rule "greater_literals" (formula "40") (term "0,0"))
                  (rule "concrete_and_1" (formula "40") (term "0"))
                  (rule "leq_literals" (formula "40") (term "0"))
                  (rule "concrete_or_1" (formula "40"))
                  (rule "true_left" (formula "40"))
                  (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "29"))
                  (rule "times_zero_1" (formula "27") (term "0,0"))
                  (rule "add_zero_left" (formula "27") (term "0"))
                  (rule "inEqSimp_subsumption6" (formula "27") (ifseqformula "16"))
                  (rule "mul_literals" (formula "27") (term "1,1,0"))
                  (rule "greater_literals" (formula "27") (term "0,0"))
                  (rule "concrete_and_1" (formula "27") (term "0"))
                  (rule "leq_literals" (formula "27") (term "0"))
                  (rule "concrete_or_1" (formula "27"))
                  (rule "true_left" (formula "27"))
                  (rule "nnf_notAnd" (formula "1") (term "0"))
                  (rule "nnf_notAnd" (formula "39") (term "0,1,0,1,0"))
                  (rule "double_not" (formula "39") (term "0,0,1,0,1,0"))
                  (rule "nnf_notAnd" (formula "48") (term "0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,1,1,0"))
                  (rule "nnf_notOr" (formula "49") (term "0,0,1,1,0"))
                  (rule "nnf_notAnd" (formula "39") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,0"))
                  (rule "commute_or" (formula "15") (term "0,0"))
                  (rule "nnf_notAnd" (formula "1") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                  (rule "commute_or_2" (formula "37") (term "0"))
                  (rule "nnf_notAnd" (formula "49") (term "0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "49") (term "0,0,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,1,1,0"))
                  (rule "nnf_notAnd" (formula "49") (term "1,0,0,1,1,0"))
                  (rule "inEqSimp_notLeq" (formula "49") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "49") (term "0,1,0,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "49") (term "0,0,0,1,1,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "49") (term "0,0,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "49") (term "0,1,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "49") (term "1,0,0,0,1,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "49") (term "0,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "49") (term "1,0,1,0,0,1,1,0"))
                  (rule "commute_or" (formula "35") (term "0,0,1,1,0"))
                  (rule "commute_and" (formula "36") (term "1,0,0,0,0,1,1,0"))
                  (rule "commute_or_2" (formula "38") (term "0"))
                  (rule "commute_or" (formula "18") (term "0,0"))
                  (rule "commute_or_2" (formula "19") (term "0,0,1,0"))
                  (rule "inEqSimp_or_weaken2" (formula "19") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "1,0,1,0,1,0"))
                  (rule "add_literals" (formula "19") (term "0,1,0,1,0,1,0"))
                  (rule "add_zero_left" (formula "19") (term "1,0,1,0,1,0"))
                  (rule "eqClose" (formula "19") (term "0,1,0,1,0"))
                  (rule "ifthenelse_true_for" (formula "19") (term "1,0,1,0"))
                  (rule "div_axiom" (formula "3") (term "1,0") (inst "quotient=quotient_1"))
                  (rule "mul_literals" (formula "3") (term "1,1,1,1,1"))
                  (rule "qeq_literals" (formula "3") (term "0,1,1"))
                  (rule "ifthenelse_true_for" (formula "3") (term "1,1"))
                  (rule "equal_literals" (formula "3") (term "0"))
                  (rule "concrete_or_2" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "polySimp_addComm1" (formula "5") (term "1"))
                  (rule "add_literals" (formula "5") (term "0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "6") (term "0,1,2,0") (ifseqformula "3"))
                  (rule "polySimp_addComm0" (formula "6") (term "2,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                  (rule "mul_literals" (formula "5") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "5"))
                  (rule "mul_literals" (formula "14") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "add_literals" (formula "14") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                  (rule "mul_literals" (formula "14") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(neglit(4(2(8(1(4(7(3(7(0(1(#))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "14") (term "0,0"))
                  (rule "concrete_or_2" (formula "14") (term "0"))
                  (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                  (rule "add_zero_right" (formula "14") (term "0,0"))
                  (rule "leq_literals" (formula "14") (term "0"))
                  (rule "concrete_or_2" (formula "14"))
                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "13"))
                  (rule "polySimp_mulAssoc" (formula "4") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "4") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                  (rule "neg_literal" (formula "4") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "4") (term "0,0"))
                  (rule "concrete_or_2" (formula "4") (term "0"))
                  (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0"))
                  (rule "qeq_literals" (formula "4") (term "0"))
                  (rule "concrete_or_2" (formula "4"))
                  (rule "commute_or_2" (formula "20") (term "0"))
                  (rule "commute_or" (formula "42") (term "0,0"))
                  (rule "commute_or_2" (formula "52") (term "0,1,1,0"))
                  (rule "commute_or_2" (formula "23") (term "0"))
                  (rule "shift_paren_or" (formula "43") (term "0,1,0"))
                  (rule "commute_or" (formula "42") (term "0,0"))
                  (rule "commute_or" (formula "52") (term "0,1,1,0"))
                  (rule "commute_or" (formula "24") (term "0,0,1,0"))
                  (rule "commute_or_2" (formula "42") (term "0,0,1,0"))
                  (rule "commute_or" (formula "51") (term "0,0,1,1,0"))
                  (rule "commute_or_2" (formula "51") (term "0,1,1,0"))
                  (rule "commute_or" (formula "42") (term "0,0,0,1,0"))
                  (rule "commute_or_2" (formula "42") (term "0,0,1,0"))
                  (rule "inEqSimp_or_weaken2" (formula "42") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "42") (term "1,0,1,0,1,0"))
                  (rule "add_literals" (formula "42") (term "0,1,0,1,0,1,0"))
                  (rule "add_zero_left" (formula "42") (term "1,0,1,0,1,0"))
                  (rule "eqClose" (formula "42") (term "0,1,0,1,0"))
                  (rule "ifthenelse_true_for" (formula "42") (term "1,0,1,0"))
                  (rule "commute_or" (formula "50") (term "0,1,0,1,1,0"))
                  (rule "cnf_rightDist" (formula "41") (term "0,0,0,0,1,1,0"))
                  (rule "cnf_rightDist" (formula "50") (term "0,1,1,0"))
                  (rule "commute_or_2" (formula "50") (term "1,0,1,1,0"))
                  (rule "shift_paren_or" (formula "50") (term "0,0,1,1,0"))
                  (rule "commute_or" (formula "50") (term "0,1,0,1,1,0"))
                  (rule "all_pull_out3" (formula "40") (term "1,0"))
                  (rule "shift_paren_or" (formula "40") (term "0,1,0"))
                  (rule "shift_paren_or" (formula "40") (term "0,0,1,0"))
                  (rule "commute_or_2" (formula "40") (term "0,0,0,1,0"))
                  (rule "commute_or" (formula "41") (term "0,0,0,0,0,1,1,0"))
                  (rule "ifthenelse_split" (formula "7") (term "0"))
                  (branch "expectedMaxSize >= 0 TRUE"
                     (rule "eqSymm" (formula "8"))
                     (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "8"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                     (rule "applyEq" (formula "9") (term "1,0,0") (ifseqformula "8"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                     (rule "mod_axiom" (formula "2") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "2") (term "0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0"))
                     (rule "mod_axiom" (formula "9") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "9") (term "0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                     (rule "mul_literals" (formula "2") (term "0,0,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1"))
                     (rule "polySimp_rightDist" (formula "9") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                     (rule "mul_literals" (formula "9") (term "0,0,1"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,0,1"))
                     (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "7"))
                     (rule "leq_literals" (formula "17") (term "0"))
                     (rule "concrete_or_1" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "7") (term "0,0"))
                     (rule "add_zero_left" (formula "7") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                     (rule "mul_literals" (formula "7") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "7") (term "0,0"))
                     (rule "concrete_or_2" (formula "7") (term "0"))
                     (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0"))
                     (rule "leq_literals" (formula "7") (term "0"))
                     (rule "concrete_or_2" (formula "7"))
                     (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "7"))
                     (rule "leq_literals" (formula "17") (term "0"))
                     (rule "concrete_or_1" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "cnf_rightDist" (formula "41") (term "1,0,0,0,0,1,1,0"))
                     (rule "all_pull_out3" (formula "24") (term "0"))
                     (rule "shift_paren_or" (formula "24") (term "0,0"))
                     (rule "shift_paren_or" (formula "24") (term "0,0,0"))
                     (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
                     (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
                     (rule "cnf_rightDist" (formula "41") (term "0,0,0,0,0,1,1,0"))
                     (rule "eq_or" (formula "41") (term "0,0,0,0,0,0,1,1,0"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "13"))
                     (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "50"))
                     (rule "concrete_or_1" (formula "49"))
                     (rule "true_left" (formula "49"))
                     (rule "all_pull_out3" (formula "50") (term "1,0"))
                     (rule "cnf_rightDist" (formula "50") (term "0,1,0"))
                     (rule "commute_or_2" (formula "50") (term "1,0,1,0"))
                     (rule "shift_paren_or" (formula "50") (term "0,0,1,0"))
                     (rule "commute_or_2" (formula "50") (term "0,1,0,1,0"))
                     (rule "shift_paren_or" (formula "50") (term "0,0,0,1,0"))
                     (rule "commute_or_2" (formula "50") (term "0,0,0,0,1,0"))
                     (rule "all_pull_out3" (formula "40") (term "0"))
                     (rule "shift_paren_or" (formula "40") (term "0,0"))
                     (rule "shift_paren_or" (formula "40") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "40") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "40") (term "0,0,0,0,0"))
                     (rule "commute_or" (formula "40") (term "0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "50") (term "0,0,1,0,1,0"))
                     (rule "commute_or" (formula "50") (term "0,0,0,1,0,1,0"))
                     (rule "commute_or" (formula "41") (term "0,1,0,0,0,0,1,1,0"))
                     (rule "commute_or" (formula "41") (term "1,1,0,0,0,0,1,1,0"))
                     (rule "commute_or" (formula "41") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "div_axiom" (formula "2") (term "0,0") (inst "quotient=quotient_2"))
                     (rule "equal_literals" (formula "2") (term "0"))
                     (rule "concrete_or_2" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1,1,1,1"))
                     (rule "qeq_literals" (formula "2") (term "0,1"))
                     (rule "ifthenelse_true_for" (formula "2") (term "1"))
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "2"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "4") (term "1"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0,1"))
                     (rule "add_literals" (formula "4") (term "0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                     (rule "add_literals" (formula "4") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                     (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq0" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                     (rule "mul_literals" (formula "3") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                     (rule "mul_literals" (formula "4") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1"))
                     (rule "polySimp_rightDist" (formula "13") (term "1"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                     (rule "mul_literals" (formula "13") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                     (rule "mul_literals" (formula "5") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                     (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "qeq_literals" (formula "3") (term "0"))
                     (rule "concrete_or_1" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "qeq_literals" (formula "3") (term "0"))
                     (rule "concrete_or_1" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "11"))
                     (rule "times_zero_1" (formula "9") (term "0,0"))
                     (rule "add_zero_left" (formula "9") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "7"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "mul_literals" (formula "3") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "13"))
                     (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0"))
                     (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
                     (rule "add_literals" (formula "7") (term "1,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "20"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "mul_literals" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
                     (rule "times_zero_1" (formula "11") (term "0,0"))
                     (rule "add_zero_left" (formula "11") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                     (rule "mul_literals" (formula "11") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "11") (term "0,0"))
                     (rule "concrete_or_2" (formula "11") (term "0"))
                     (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                     (rule "add_literals" (formula "11") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0"))
                     (rule "leq_literals" (formula "11") (term "0"))
                     (rule "concrete_or_2" (formula "11"))
                     (rule "inEqSimp_exactShadow2" (formula "12") (ifseqformula "8"))
                     (rule "greater_literals" (formula "12") (term "0"))
                     (rule "concrete_impl_1" (formula "12"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0"))
                     (rule "times_zero_1" (formula "12") (term "0,0"))
                     (rule "add_zero_left" (formula "12") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                     (rule "mul_literals" (formula "12") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "11"))
                     (rule "greater_literals" (formula "12") (term "0,0"))
                     (rule "concrete_and_1" (formula "12") (term "0"))
                     (rule "times_zero_1" (formula "12") (term "1,0"))
                     (rule "leq_literals" (formula "12") (term "0"))
                     (rule "concrete_or_1" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "inEqSimp_exactShadow1" (formula "3") (ifseqformula "7"))
                     (rule "greater_literals" (formula "3") (term "0"))
                     (rule "concrete_impl_1" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                     (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "3") (term "0,0"))
                     (rule "concrete_or_2" (formula "3") (term "0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "qeq_literals" (formula "3") (term "0"))
                     (rule "concrete_or_2" (formula "3"))
                     (rule "inEqSimp_exactShadow1" (formula "4") (ifseqformula "14"))
                     (rule "greater_literals" (formula "4") (term "0"))
                     (rule "concrete_impl_1" (formula "4"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                     (rule "mul_literals" (formula "4") (term "0,1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                     (rule "add_literals" (formula "4") (term "1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "4") (ifseqformula "13"))
                     (rule "times_zero_1" (formula "4") (term "1,1,0"))
                     (rule "greater_literals" (formula "4") (term "0,0"))
                     (rule "concrete_and_1" (formula "4") (term "0"))
                     (rule "leq_literals" (formula "4") (term "0"))
                     (rule "concrete_or_1" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "inEqSimp_exactShadow2" (formula "5") (ifseqformula "9"))
                     (rule "greater_literals" (formula "5") (term "0"))
                     (rule "concrete_impl_1" (formula "5"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                     (rule "mul_literals" (formula "5") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                     (rule "add_literals" (formula "5") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                     (rule "add_literals" (formula "5") (term "1,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "inEqSimp_subsumption4" (formula "5") (ifseqformula "3"))
                     (rule "greater_literals" (formula "5") (term "0,0"))
                     (rule "concrete_and_1" (formula "5") (term "0"))
                     (rule "times_zero_1" (formula "5") (term "0,0"))
                     (rule "leq_literals" (formula "5") (term "0"))
                     (rule "concrete_or_1" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "8"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                     (rule "mul_literals" (formula "5") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                     (rule "add_literals" (formula "5") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "inEqSimp_subsumption4" (formula "5") (ifseqformula "3"))
                     (rule "greater_literals" (formula "5") (term "0,0"))
                     (rule "concrete_and_1" (formula "5") (term "0"))
                     (rule "times_zero_1" (formula "5") (term "0,0"))
                     (rule "leq_literals" (formula "5") (term "0"))
                     (rule "concrete_or_1" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "3"))
                     (rule "applyEqRigid" (formula "15") (term "0,1,1") (ifseqformula "12"))
                     (rule "times_zero_2" (formula "15") (term "1,1"))
                     (rule "add_zero_right" (formula "15") (term "1"))
                     (rule "applyEqRigid" (formula "9") (term "0,1,1") (ifseqformula "12"))
                     (rule "times_zero_2" (formula "9") (term "1,1"))
                     (rule "add_zero_right" (formula "9") (term "1"))
                     (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "12"))
                     (rule "times_zero_2" (formula "4") (term "1,1"))
                     (rule "add_zero_right" (formula "4") (term "1"))
                     (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "12"))
                     (rule "qeq_literals" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "12"))
                     (rule "mul_literals" (formula "5") (term "1,1"))
                     (rule "add_zero_right" (formula "5") (term "1"))
                     (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "12"))
                     (rule "leq_literals" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "applyEqRigid" (formula "16") (term "0,1,0,1") (ifseqformula "11"))
                     (rule "times_zero_2" (formula "16") (term "1,0,1"))
                     (rule "add_zero_right" (formula "16") (term "0,1"))
                     (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "11"))
                     (rule "applyEqRigid" (formula "5") (term "0,1,0,1") (ifseqformula "11"))
                     (rule "times_zero_2" (formula "5") (term "1,0,1"))
                     (rule "add_zero_right" (formula "5") (term "0,1"))
                     (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "12"))
                     (rule "leq_literals" (formula "4") (term "0"))
                     (rule "concrete_or_1" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "12"))
                     (rule "leq_literals" (formula "6") (term "0"))
                     (rule "concrete_or_1" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(3(#))"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "3") (term "0,0"))
                     (rule "concrete_or_2" (formula "3") (term "0"))
                     (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "leq_literals" (formula "3") (term "0"))
                     (rule "concrete_or_2" (formula "3"))
                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "3"))
                     (rule "leq_literals" (formula "10") (term "0"))
                     (rule "concrete_or_1" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(0(7(9(6(5(9(8(7(1(#))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(3(#))"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,1,0"))
                     (rule "neg_literal" (formula "6") (term "0,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "6") (term "0,0"))
                     (rule "concrete_or_2" (formula "6") (term "0"))
                     (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                     (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "qeq_literals" (formula "6") (term "0"))
                     (rule "concrete_or_2" (formula "6"))
                     (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "6"))
                     (rule "leq_literals" (formula "10") (term "0"))
                     (rule "concrete_or_1" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "8"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                     (rule "add_literals" (formula "4") (term "1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "4") (ifseqformula "3"))
                     (rule "greater_literals" (formula "4") (term "0,0"))
                     (rule "concrete_and_1" (formula "4") (term "0"))
                     (rule "mul_literals" (formula "4") (term "1,0"))
                     (rule "leq_literals" (formula "4") (term "0"))
                     (rule "concrete_or_1" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "12"))
                     (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0"))
                     (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
                     (rule "add_literals" (formula "7") (term "1,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "inEqSimp_subsumption4" (formula "7") (ifseqformula "6"))
                     (rule "mul_literals" (formula "7") (term "0,1,0"))
                     (rule "greater_literals" (formula "7") (term "0,0"))
                     (rule "concrete_and_1" (formula "7") (term "0"))
                     (rule "leq_literals" (formula "7") (term "0"))
                     (rule "concrete_or_1" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "18"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "add_literals" (formula "4") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "3"))
                     (rule "leq_literals" (formula "4") (term "0"))
                     (rule "concrete_or_1" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "12"))
                     (rule "times_zero_1" (formula "10") (term "0,0"))
                     (rule "add_zero_left" (formula "10") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "6"))
                     (rule "leq_literals" (formula "10") (term "0"))
                     (rule "concrete_or_1" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "all_pull_out3" (formula "52") (term "0"))
                     (rule "shift_paren_and" (formula "43") (term "0,0,0,0,1,1,0"))
                     (rule "allLeft" (formula "25") (inst "t=i_1_0"))
                     (rule "replace_known_left" (formula "25") (term "0,0,0,0") (ifseqformula "52"))
                     (rule "concrete_not_1" (formula "25") (term "0,0,0"))
                     (rule "concrete_or_2" (formula "25") (term "0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "50"))
                     (rule "qeq_literals" (formula "25") (term "0,1,0"))
                     (rule "concrete_and_2" (formula "25") (term "1,0"))
                     (rule "concrete_or_4" (formula "25") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "51"))
                     (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                     (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "25") (term "0,0,1"))
                     (rule "leq_literals" (formula "25") (term "0,1"))
                     (rule "concrete_and_2" (formula "25") (term "1"))
                     (rule "concrete_or_4" (formula "25"))
                     (rule "allLeft" (formula "26") (inst "t=i_1"))
                     (rule "replace_known_left" (formula "26") (term "0,0,0,0") (ifseqformula "43"))
                     (rule "concrete_not_1" (formula "26") (term "0,0,0"))
                     (rule "concrete_or_2" (formula "26") (term "0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "41"))
                     (rule "qeq_literals" (formula "26") (term "0,1,0"))
                     (rule "concrete_and_2" (formula "26") (term "1,0"))
                     (rule "concrete_or_4" (formula "26") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "26") (term "1") (ifseqformula "42"))
                     (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                     (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "26") (term "0,0,1"))
                     (rule "leq_literals" (formula "26") (term "0,1"))
                     (rule "concrete_and_2" (formula "26") (term "1"))
                     (rule "concrete_or_4" (formula "26"))
                     (rule "allLeft" (formula "1") (inst "t=i_0"))
                     (rule "inEqSimp_contradEq7" (formula "1") (term "0,1") (ifseqformula "25"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,1"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1"))
                     (rule "leq_literals" (formula "1") (term "0,0,1"))
                     (rule "concrete_and_2" (formula "1") (term "0,1"))
                     (rule "concrete_not_2" (formula "1") (term "1"))
                     (rule "concrete_or_3" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                     (rule "applyEq" (formula "1") (term "0,0,1") (ifseqformula "51"))
                     (rule "inEqSimp_contradEq7" (formula "1") (term "0,1") (ifseqformula "25"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,1"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1"))
                     (rule "leq_literals" (formula "1") (term "0,0,1"))
                     (rule "concrete_and_2" (formula "1") (term "0,1"))
                     (rule "concrete_not_2" (formula "1") (term "1"))
                     (rule "concrete_or_3" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "allLeft" (formula "22") (inst "t=mul(i_1_0, Z(2(#)))"))
                     (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "54"))
                     (rule "concrete_not_1" (formula "22") (term "0,0"))
                     (rule "concrete_or_2" (formula "22") (term "0"))
                     (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                     (rule "inEqSimp_contradInEq5" (formula "22") (term "0") (ifseqformula "52"))
                     (rule "greater_literals" (formula "22") (term "0,0,0"))
                     (rule "concrete_impl_1" (formula "22") (term "0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0"))
                     (rule "qeq_literals" (formula "22") (term "0,0"))
                     (rule "concrete_and_2" (formula "22") (term "0"))
                     (rule "concrete_or_2" (formula "22"))
                     (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "22"))
                     (rule "polySimp_rightDist" (formula "50") (term "0,0"))
                     (rule "mul_literals" (formula "50") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "50") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                     (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                     (rule "polySimp_elimOne" (formula "50") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "22"))
                     (rule "polySimp_mulAssoc" (formula "33") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1"))
                     (rule "inEqSimp_contradInEq3" (formula "33") (ifseqformula "55"))
                     (rule "greater_literals" (formula "33") (term "0,0"))
                     (rule "concrete_impl_1" (formula "33") (term "0"))
                     (rule "andLeft" (formula "33"))
                     (rule "polySimp_rightDist" (formula "33") (term "0"))
                     (rule "mul_literals" (formula "33") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "33"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                     (rule "mul_literals" (formula "33") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "33") (term "0"))
                     (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "33") (term "0"))
                     (rule "add_literals" (formula "33") (term "1,1,0"))
                     (rule "times_zero_1" (formula "33") (term "1,0"))
                     (rule "add_zero_right" (formula "33") (term "0"))
                     (rule "leq_literals" (formula "33"))
                     (rule "closeFalse" (formula "33"))
                  )
                  (branch "expectedMaxSize >= 0 FALSE"
                     (rule "eqSymm" (formula "7"))
                     (rule "inEqSimp_geqRight" (formula "51"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "8"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor3b" (formula "3") (term "0,0"))
                     (rule "applyEq" (formula "9") (term "1,0,0") (ifseqformula "8"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor3b" (formula "9") (term "0,0"))
                     (rule "mod_axiom" (formula "3") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "mod_axiom" (formula "9") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "9") (term "0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                     (rule "mul_literals" (formula "3") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1"))
                     (rule "polySimp_rightDist" (formula "9") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                     (rule "mul_literals" (formula "9") (term "0,0,1"))
                     (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "1"))
                     (rule "leq_literals" (formula "15") (term "0"))
                     (rule "concrete_or_1" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                     (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "6") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                     (rule "neg_literal" (formula "6") (term "0,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "6") (term "0,0"))
                     (rule "concrete_or_2" (formula "6") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "qeq_literals" (formula "6") (term "0"))
                     (rule "concrete_or_2" (formula "6"))
                     (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "6"))
                     (rule "leq_literals" (formula "5") (term "0"))
                     (rule "concrete_or_1" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "cnf_rightDist" (formula "41") (term "1,0,0,0,0,1,1,0"))
                     (rule "all_pull_out3" (formula "24") (term "0"))
                     (rule "shift_paren_or" (formula "24") (term "0,0"))
                     (rule "shift_paren_or" (formula "24") (term "0,0,0"))
                     (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
                     (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
                     (rule "cnf_rightDist" (formula "41") (term "0,0,0,0,0,1,1,0"))
                     (rule "eq_or" (formula "41") (term "0,0,0,0,0,0,1,1,0"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "12"))
                     (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "50"))
                     (rule "concrete_or_1" (formula "49"))
                     (rule "true_left" (formula "49"))
                     (rule "all_pull_out3" (formula "50") (term "1,0"))
                     (rule "cnf_rightDist" (formula "50") (term "0,1,0"))
                     (rule "commute_or_2" (formula "50") (term "1,0,1,0"))
                     (rule "shift_paren_or" (formula "50") (term "0,0,1,0"))
                     (rule "commute_or_2" (formula "50") (term "0,1,0,1,0"))
                     (rule "shift_paren_or" (formula "50") (term "0,0,0,1,0"))
                     (rule "commute_or_2" (formula "50") (term "0,0,0,0,1,0"))
                     (rule "all_pull_out3" (formula "40") (term "0"))
                     (rule "shift_paren_or" (formula "40") (term "0,0"))
                     (rule "shift_paren_or" (formula "40") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "40") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "40") (term "0,0,0,0,0"))
                     (rule "commute_or" (formula "40") (term "0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "50") (term "0,0,1,0,1,0"))
                     (rule "commute_or" (formula "50") (term "0,0,0,1,0,1,0"))
                     (rule "commute_or" (formula "41") (term "1,1,0,0,0,0,1,1,0"))
                     (rule "commute_or" (formula "41") (term "0,1,0,0,0,0,1,1,0"))
                     (rule "commute_or" (formula "41") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "div_axiom" (formula "3") (term "0,0") (inst "quotient=quotient_2"))
                     (rule "qeq_literals" (formula "3") (term "0,1,1"))
                     (rule "ifthenelse_true_for" (formula "3") (term "1,1"))
                     (rule "equal_literals" (formula "3") (term "0"))
                     (rule "concrete_or_2" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1,1,1"))
                     (rule "andLeft" (formula "3"))
                     (rule "andLeft" (formula "3"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "5") (term "1"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                     (rule "add_literals" (formula "5") (term "0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                     (rule "add_literals" (formula "5") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                     (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq0" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                     (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "12"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                     (rule "mul_literals" (formula "4") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                     (rule "mul_literals" (formula "5") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1"))
                     (rule "polySimp_rightDist" (formula "6") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
                     (rule "mul_literals" (formula "6") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1"))
                     (rule "polySimp_rightDist" (formula "12") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "12") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1"))
                     (rule "mul_literals" (formula "12") (term "0,0,1"))
                     (rule "inEqSimp_subsumption5" (formula "4") (ifseqformula "6"))
                     (rule "eq_and" (formula "4") (term "0,0"))
                     (rule "greater_literals" (formula "4") (term "0,0"))
                     (rule "concrete_and_1" (formula "4") (term "0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "qeq_literals" (formula "4") (term "0"))
                     (rule "concrete_or_1" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "11"))
                     (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "qeq_literals" (formula "4") (term "0"))
                     (rule "concrete_or_1" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "inEqSimp_exactShadow1" (formula "4") (ifseqformula "1"))
                     (rule "mul_literals" (formula "4") (term "1,0,1"))
                     (rule "greater_literals" (formula "4") (term "0"))
                     (rule "concrete_impl_1" (formula "4"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_exactShadow1" (formula "5") (ifseqformula "9"))
                     (rule "greater_literals" (formula "5") (term "0"))
                     (rule "concrete_impl_1" (formula "5"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                     (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                     (rule "add_literals" (formula "5") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                     (rule "add_literals" (formula "5") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                     (rule "mul_literals" (formula "5") (term "0,1"))
                     (rule "inEqSimp_exactShadow2" (formula "9") (ifseqformula "12"))
                     (rule "greater_literals" (formula "9") (term "0"))
                     (rule "concrete_impl_1" (formula "9"))
                     (rule "polySimp_mulAssoc" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "9") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0"))
                     (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "9") (term "0"))
                     (rule "add_literals" (formula "9") (term "1,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                     (rule "inEqSimp_exactShadow2" (formula "20") (ifseqformula "13"))
                     (rule "mul_literals" (formula "20") (term "1,0,0,1"))
                     (rule "greater_literals" (formula "20") (term "0"))
                     (rule "concrete_impl_1" (formula "20"))
                     (rule "mul_literals" (formula "20") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                     (rule "mul_literals" (formula "20") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "4"))
                     (rule "mul_literals" (formula "19") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0"))
                     (rule "add_literals" (formula "19") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "leq_literals" (formula "19") (term "0,0"))
                     (rule "concrete_or_2" (formula "19") (term "0"))
                     (rule "neg_literal" (formula "19") (term "0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0"))
                     (rule "add_zero_right" (formula "19") (term "0,0"))
                     (rule "qeq_literals" (formula "19") (term "0"))
                     (rule "concrete_or_2" (formula "19"))
                     (rule "inEqSimp_exactShadow2" (formula "20") (ifseqformula "9"))
                     (rule "mul_literals" (formula "20") (term "1,0,0,1"))
                     (rule "greater_literals" (formula "20") (term "0"))
                     (rule "concrete_impl_1" (formula "20"))
                     (rule "mul_literals" (formula "20") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0"))
                     (rule "add_literals" (formula "20") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                     (rule "mul_literals" (formula "20") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "leq_literals" (formula "20") (term "0,0"))
                     (rule "concrete_or_2" (formula "20") (term "0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                     (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0"))
                     (rule "leq_literals" (formula "20") (term "0"))
                     (rule "concrete_or_2" (formula "20"))
                     (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "8"))
                     (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                     (rule "mul_literals" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0"))
                     (rule "add_literals" (formula "22") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                     (rule "mul_literals" (formula "22") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "22") (ifseqformula "20"))
                     (rule "times_zero_1" (formula "22") (term "1,1,0"))
                     (rule "greater_literals" (formula "22") (term "0,0"))
                     (rule "concrete_and_1" (formula "22") (term "0"))
                     (rule "leq_literals" (formula "22") (term "0"))
                     (rule "concrete_or_1" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "inEqSimp_exactShadow1" (formula "5") (ifseqformula "4"))
                     (rule "greater_literals" (formula "5") (term "0"))
                     (rule "concrete_impl_1" (formula "5"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                     (rule "mul_literals" (formula "5") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                     (rule "add_literals" (formula "5") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                     (rule "add_literals" (formula "5") (term "1,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "inEqSimp_contradInEq5" (formula "5") (ifseqformula "21"))
                     (rule "times_zero_1" (formula "5") (term "1,1,0"))
                     (rule "greater_literals" (formula "5") (term "0,0"))
                     (rule "concrete_impl_1" (formula "5") (term "0"))
                     (rule "qeq_literals" (formula "5") (term "0"))
                     (rule "concrete_and_2" (formula "5"))
                     (rule "closeFalse" (formula "5"))
                  )
               )
               (branch "CUT: ( 2147483648 + expectedMaxSize + jdiv(expectedMaxSize, 2)) % 4294967296 >= 2147483651 FALSE"
                  (rule "concrete_and_2" (formula "47"))
                  (rule "false_right" (formula "47"))
                  (rule "inEqSimp_geqRight" (formula "46"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "nnf_imp2or" (formula "32") (term "0,1,0"))
                  (rule "nnf_notAnd" (formula "40") (term "0,1,0"))
                  (rule "double_not" (formula "40") (term "0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "40") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,0,1,0"))
                  (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,1,0"))
                  (rule "add_literals" (formula "40") (term "0,0,0,1,0,1,0"))
                  (rule "add_zero_left" (formula "40") (term "0,0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0"))
                  (rule "nnf_imp2or" (formula "40") (term "0,1,1,0"))
                  (rule "nnf_notAnd" (formula "41") (term "0,1,0"))
                  (rule "double_not" (formula "41") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "41") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,1,0"))
                  (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,1,0"))
                  (rule "add_literals" (formula "41") (term "0,0,0,1,0,1,0"))
                  (rule "add_zero_left" (formula "41") (term "0,0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,0"))
                  (rule "nnf_imp2or" (formula "41") (term "0,1,1,0"))
                  (rule "commute_and" (formula "29") (term "1,0,0,0,1,1,0"))
                  (rule "div_axiom" (formula "19") (term "1") (inst "quotient=quotient_0"))
                  (rule "mul_literals" (formula "19") (term "1,1,1,1,1"))
                  (rule "qeq_literals" (formula "19") (term "0,1,1"))
                  (rule "ifthenelse_true_for" (formula "19") (term "1,1"))
                  (rule "equal_literals" (formula "19") (term "0"))
                  (rule "concrete_or_2" (formula "19"))
                  (rule "andLeft" (formula "19"))
                  (rule "andLeft" (formula "19"))
                  (rule "polySimp_addComm1" (formula "21") (term "1"))
                  (rule "add_literals" (formula "21") (term "0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "20"))
                  (rule "inEqSimp_homoInEq1" (formula "21"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0"))
                  (rule "applyEq" (formula "41") (term "0") (ifseqformula "19"))
                  (rule "inEqSimp_homoInEq1" (formula "41"))
                  (rule "polySimp_addComm1" (formula "41") (term "0"))
                  (rule "applyEqRigid" (formula "35") (term "1,1,0,0") (ifseqformula "19"))
                  (rule "applyEq" (formula "44") (term "1,1,0,0") (ifseqformula "19"))
                  (rule "applyEqRigid" (formula "29") (term "0") (ifseqformula "19"))
                  (rule "inEqSimp_homoInEq1" (formula "29"))
                  (rule "polySimp_addComm1" (formula "29") (term "0"))
                  (rule "applyEqRigid" (formula "17") (term "1,1,0,0") (ifseqformula "19"))
                  (rule "applyEq" (formula "16") (term "1,0,0,0") (ifseqformula "19"))
                  (rule "applyEqRigid" (formula "17") (term "1,0,0,0,0,1,0") (ifseqformula "19"))
                  (rule "applyEqRigid" (formula "35") (term "1,1,1,0,0,0,1,0") (ifseqformula "19"))
                  (rule "applyEqRigid" (formula "43") (term "1,1,0,0") (ifseqformula "19"))
                  (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "19"))
                  (rule "applyEq" (formula "31") (term "1,1,0,0") (ifseqformula "19"))
                  (rule "applyEqRigid" (formula "32") (term "1,1,0,0") (ifseqformula "19"))
                  (rule "applyEq" (formula "34") (term "1,1,0,0") (ifseqformula "19"))
                  (rule "applyEqRigid" (formula "22") (term "1") (ifseqformula "19"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1"))
                  (rule "polySimp_rightDist" (formula "21") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                  (rule "mul_literals" (formula "21") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1"))
                  (rule "polySimp_rightDist" (formula "41") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                  (rule "mul_literals" (formula "41") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1"))
                  (rule "polySimp_rightDist" (formula "29") (term "1"))
                  (rule "mul_literals" (formula "29") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "41"))
                  (rule "times_zero_1" (formula "40") (term "0,0"))
                  (rule "add_zero_left" (formula "40") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                  (rule "mul_literals" (formula "40") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "21"))
                  (rule "mul_literals" (formula "15") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                  (rule "add_literals" (formula "15") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                  (rule "mul_literals" (formula "15") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                  (rule "leq_literals" (formula "15") (term "0,0"))
                  (rule "concrete_or_2" (formula "15") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                  (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                  (rule "add_zero_right" (formula "15") (term "0,0"))
                  (rule "leq_literals" (formula "15") (term "0"))
                  (rule "concrete_or_2" (formula "15"))
                  (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "15"))
                  (rule "leq_literals" (formula "41") (term "0"))
                  (rule "concrete_or_1" (formula "41"))
                  (rule "true_left" (formula "41"))
                  (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "22"))
                  (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                  (rule "mul_literals" (formula "27") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                  (rule "add_literals" (formula "27") (term "0,0,0"))
                  (rule "add_zero_left" (formula "27") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                  (rule "polySimp_elimOne" (formula "27") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "12"))
                  (rule "polySimp_mulAssoc" (formula "21") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "21") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "21") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                  (rule "leq_literals" (formula "21") (term "0,0"))
                  (rule "concrete_or_2" (formula "21") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "neg_literal" (formula "21") (term "0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                  (rule "add_literals" (formula "21") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0"))
                  (rule "qeq_literals" (formula "21") (term "0"))
                  (rule "concrete_or_2" (formula "21"))
                  (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "23"))
                  (rule "polySimp_rightDist" (formula "41") (term "0,0"))
                  (rule "mul_literals" (formula "41") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "41") (term "0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                  (rule "add_literals" (formula "41") (term "0,0,0"))
                  (rule "add_zero_left" (formula "41") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                  (rule "polySimp_elimOne" (formula "41") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
                  (rule "times_zero_1" (formula "31") (term "0,0"))
                  (rule "add_zero_left" (formula "31") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                  (rule "mul_literals" (formula "31") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "15"))
                  (rule "leq_literals" (formula "31") (term "0"))
                  (rule "concrete_or_1" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "28"))
                  (rule "times_zero_1" (formula "26") (term "0,0"))
                  (rule "add_zero_left" (formula "26") (term "0"))
                  (rule "inEqSimp_subsumption6" (formula "26") (ifseqformula "15"))
                  (rule "greater_literals" (formula "26") (term "0,0"))
                  (rule "concrete_and_1" (formula "26") (term "0"))
                  (rule "mul_literals" (formula "26") (term "1,0"))
                  (rule "leq_literals" (formula "26") (term "0"))
                  (rule "concrete_or_1" (formula "26"))
                  (rule "true_left" (formula "26"))
                  (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "41"))
                  (rule "times_zero_1" (formula "39") (term "0,0"))
                  (rule "add_zero_left" (formula "39") (term "0"))
                  (rule "inEqSimp_subsumption6" (formula "39") (ifseqformula "15"))
                  (rule "greater_literals" (formula "39") (term "0,0"))
                  (rule "concrete_and_1" (formula "39") (term "0"))
                  (rule "mul_literals" (formula "39") (term "1,0"))
                  (rule "leq_literals" (formula "39") (term "0"))
                  (rule "concrete_or_1" (formula "39"))
                  (rule "true_left" (formula "39"))
                  (rule "nnf_notAnd" (formula "38") (term "0,1,0,1,0"))
                  (rule "double_not" (formula "38") (term "0,0,1,0,1,0"))
                  (rule "nnf_notAnd" (formula "47") (term "0,0,1,1,0"))
                  (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "47") (term "0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "47") (term "0,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0,1,1,0"))
                  (rule "nnf_notOr" (formula "48") (term "0,0,1,1,0"))
                  (rule "nnf_notAnd" (formula "38") (term "0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,1,0"))
                  (rule "commute_or" (formula "14") (term "0,0"))
                  (rule "commute_or_2" (formula "36") (term "0"))
                  (rule "nnf_notAnd" (formula "48") (term "0,0,0,1,1,0"))
                  (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,0,1,1,0"))
                  (rule "nnf_notAnd" (formula "48") (term "1,0,0,1,1,0"))
                  (rule "inEqSimp_notLeq" (formula "48") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0,1,1,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "48") (term "0,0,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "48") (term "0,1,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "48") (term "1,0,0,0,1,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "48") (term "0,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "48") (term "1,0,1,0,0,1,1,0"))
                  (rule "commute_or" (formula "34") (term "0,0,1,1,0"))
                  (rule "commute_and" (formula "35") (term "1,0,0,0,0,1,1,0"))
                  (rule "commute_or_2" (formula "37") (term "0"))
                  (rule "commute_or" (formula "17") (term "0,0"))
                  (rule "commute_or_2" (formula "18") (term "0,0,1,0"))
                  (rule "inEqSimp_or_weaken2" (formula "18") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "1,0,1,0,1,0"))
                  (rule "add_literals" (formula "18") (term "0,1,0,1,0,1,0"))
                  (rule "add_zero_left" (formula "18") (term "1,0,1,0,1,0"))
                  (rule "eqClose" (formula "18") (term "0,1,0,1,0"))
                  (rule "ifthenelse_true_for" (formula "18") (term "1,0,1,0"))
                  (rule "div_axiom" (formula "2") (term "1,0") (inst "quotient=quotient_1"))
                  (rule "equal_literals" (formula "2") (term "0"))
                  (rule "concrete_or_2" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1,1,1,1"))
                  (rule "qeq_literals" (formula "2") (term "0,1"))
                  (rule "ifthenelse_true_for" (formula "2") (term "1"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "polySimp_addComm1" (formula "4") (term "1"))
                  (rule "add_literals" (formula "4") (term "0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "5") (term "0,1,2,0") (ifseqformula "2"))
                  (rule "polySimp_addComm0" (formula "5") (term "2,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "4"))
                  (rule "mul_literals" (formula "13") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                  (rule "mul_literals" (formula "13") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(neglit(4(2(8(1(4(7(3(7(0(1(#))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "13") (term "0,0"))
                  (rule "concrete_or_2" (formula "13") (term "0"))
                  (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0"))
                  (rule "leq_literals" (formula "13") (term "0"))
                  (rule "concrete_or_2" (formula "13"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
                  (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "3") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                  (rule "leq_literals" (formula "3") (term "0,0"))
                  (rule "concrete_or_2" (formula "3") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,0"))
                  (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                  (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_2" (formula "3"))
                  (rule "commute_or_2" (formula "19") (term "0"))
                  (rule "commute_or" (formula "41") (term "0,0"))
                  (rule "commute_or_2" (formula "22") (term "0"))
                  (rule "commute_or_2" (formula "51") (term "0,1,1,0"))
                  (rule "commute_or" (formula "41") (term "0,0"))
                  (rule "shift_paren_or" (formula "41") (term "0,1,0"))
                  (rule "commute_or" (formula "51") (term "0,1,1,0"))
                  (rule "commute_or" (formula "23") (term "0,0,1,0"))
                  (rule "commute_or_2" (formula "41") (term "0,0,1,0"))
                  (rule "commute_or" (formula "50") (term "0,0,1,1,0"))
                  (rule "commute_or_2" (formula "50") (term "0,1,1,0"))
                  (rule "commute_or" (formula "41") (term "0,0,0,1,0"))
                  (rule "commute_or_2" (formula "41") (term "0,0,1,0"))
                  (rule "inEqSimp_or_weaken2" (formula "41") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "1,0,1,0,1,0"))
                  (rule "add_literals" (formula "41") (term "0,1,0,1,0,1,0"))
                  (rule "add_zero_left" (formula "41") (term "1,0,1,0,1,0"))
                  (rule "eqClose" (formula "41") (term "0,1,0,1,0"))
                  (rule "ifthenelse_true_for" (formula "41") (term "1,0,1,0"))
                  (rule "commute_or" (formula "49") (term "0,1,0,1,1,0"))
                  (rule "cnf_rightDist" (formula "40") (term "0,0,0,0,1,1,0"))
                  (rule "cnf_rightDist" (formula "49") (term "0,1,1,0"))
                  (rule "commute_or_2" (formula "49") (term "1,0,1,1,0"))
                  (rule "shift_paren_or" (formula "49") (term "0,0,1,1,0"))
                  (rule "commute_or" (formula "49") (term "0,1,0,1,1,0"))
                  (rule "all_pull_out3" (formula "39") (term "1,0"))
                  (rule "shift_paren_or" (formula "39") (term "0,1,0"))
                  (rule "shift_paren_or" (formula "39") (term "0,0,1,0"))
                  (rule "commute_or_2" (formula "39") (term "0,0,0,1,0"))
                  (rule "commute_or" (formula "40") (term "0,0,0,0,0,1,1,0"))
                  (rule "ifthenelse_split" (formula "6") (term "0"))
                  (branch "expectedMaxSize >= 0 TRUE"
                     (rule "eqSymm" (formula "7"))
                     (rule "applyEq" (formula "8") (term "1,0,0") (ifseqformula "7"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                     (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "7"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "mod_axiom" (formula "8") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "8"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "8") (term "0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,0"))
                     (rule "add_zero_left" (formula "8") (term "0,0,0"))
                     (rule "mod_axiom" (formula "1") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1"))
                     (rule "polySimp_rightDist" (formula "8") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                     (rule "polySimp_mulAssoc" (formula "8") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                     (rule "mul_literals" (formula "1") (term "0,0,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                     (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "6"))
                     (rule "leq_literals" (formula "16") (term "0"))
                     (rule "concrete_or_1" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                     (rule "times_zero_1" (formula "6") (term "0,0"))
                     (rule "add_zero_left" (formula "6") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                     (rule "mul_literals" (formula "6") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "6") (term "0,0"))
                     (rule "concrete_or_2" (formula "6") (term "0"))
                     (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "leq_literals" (formula "6") (term "0"))
                     (rule "concrete_or_2" (formula "6"))
                     (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "6"))
                     (rule "leq_literals" (formula "16") (term "0"))
                     (rule "concrete_or_1" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "cnf_rightDist" (formula "40") (term "1,0,0,0,0,1,1,0"))
                     (rule "all_pull_out3" (formula "23") (term "0"))
                     (rule "shift_paren_or" (formula "23") (term "0,0"))
                     (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                     (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                     (rule "commute_or" (formula "23") (term "0,0,0,0,0"))
                     (rule "cnf_rightDist" (formula "40") (term "0,0,0,0,0,1,1,0"))
                     (rule "eq_or" (formula "40") (term "0,0,0,0,0,0,1,1,0"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "12"))
                     (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "49"))
                     (rule "concrete_or_1" (formula "48"))
                     (rule "true_left" (formula "48"))
                     (rule "all_pull_out3" (formula "49") (term "1,0"))
                     (rule "cnf_rightDist" (formula "49") (term "0,1,0"))
                     (rule "commute_or_2" (formula "49") (term "1,0,1,0"))
                     (rule "shift_paren_or" (formula "49") (term "0,0,1,0"))
                     (rule "commute_or_2" (formula "49") (term "0,1,0,1,0"))
                     (rule "shift_paren_or" (formula "49") (term "0,0,0,1,0"))
                     (rule "commute_or_2" (formula "49") (term "0,0,0,0,1,0"))
                     (rule "all_pull_out3" (formula "39") (term "0"))
                     (rule "shift_paren_or" (formula "39") (term "0,0"))
                     (rule "shift_paren_or" (formula "39") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "39") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "39") (term "0,0,0,0,0"))
                     (rule "commute_or" (formula "39") (term "0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "49") (term "0,0,1,0,1,0"))
                     (rule "commute_or" (formula "49") (term "0,0,0,1,0,1,0"))
                     (rule "commute_or" (formula "40") (term "1,1,0,0,0,0,1,1,0"))
                     (rule "commute_or" (formula "40") (term "0,1,0,0,0,0,1,1,0"))
                     (rule "commute_or" (formula "40") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "div_axiom" (formula "9") (term "0,0") (inst "quotient=quotient_2"))
                     (rule "qeq_literals" (formula "9") (term "0,1,1"))
                     (rule "ifthenelse_true_for" (formula "9") (term "1,1"))
                     (rule "equal_literals" (formula "9") (term "0"))
                     (rule "concrete_or_2" (formula "9"))
                     (rule "mul_literals" (formula "9") (term "1,1,1"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "11") (term "1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,1"))
                     (rule "add_literals" (formula "11") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                     (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "9"))
                     (rule "inEqSimp_homoInEq0" (formula "12"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0"))
                     (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                     (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "9"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
                     (rule "mul_literals" (formula "10") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                     (rule "mul_literals" (formula "11") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1"))
                     (rule "polySimp_rightDist" (formula "12") (term "1"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                     (rule "mul_literals" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0"))
                     (rule "qeq_literals" (formula "10") (term "0"))
                     (rule "concrete_or_1" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0"))
                     (rule "qeq_literals" (formula "10") (term "0"))
                     (rule "concrete_or_1" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "7") (term "0,0"))
                     (rule "add_zero_left" (formula "7") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "17"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "11") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0"))
                     (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                     (rule "mul_literals" (formula "11") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                     (rule "polySimp_mulAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0"))
                     (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                     (rule "add_literals" (formula "4") (term "1,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "6"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "13") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                     (rule "add_literals" (formula "13") (term "1,1,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1"))
                     (rule "polySimp_rightDist" (formula "13") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                     (rule "mul_literals" (formula "13") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                     (rule "times_zero_1" (formula "7") (term "0,0"))
                     (rule "add_zero_left" (formula "7") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                     (rule "mul_literals" (formula "7") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "7") (term "0,0"))
                     (rule "concrete_or_2" (formula "7") (term "0"))
                     (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0"))
                     (rule "leq_literals" (formula "7") (term "0"))
                     (rule "concrete_or_2" (formula "7"))
                     (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "4"))
                     (rule "greater_literals" (formula "8") (term "0"))
                     (rule "concrete_impl_1" (formula "8"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0"))
                     (rule "times_zero_1" (formula "8") (term "0,0"))
                     (rule "add_zero_left" (formula "8") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                     (rule "mul_literals" (formula "8") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "8") (ifseqformula "7"))
                     (rule "times_zero_1" (formula "8") (term "1,1,0"))
                     (rule "greater_literals" (formula "8") (term "0,0"))
                     (rule "concrete_and_1" (formula "8") (term "0"))
                     (rule "leq_literals" (formula "8") (term "0"))
                     (rule "concrete_or_1" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "inEqSimp_exactShadow1" (formula "14") (ifseqformula "9"))
                     (rule "greater_literals" (formula "14") (term "0"))
                     (rule "concrete_impl_1" (formula "14"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "14") (term "0"))
                     (rule "add_literals" (formula "14") (term "1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                     (rule "mul_literals" (formula "14") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "14") (ifseqformula "7"))
                     (rule "times_zero_1" (formula "14") (term "1,1,0"))
                     (rule "greater_literals" (formula "14") (term "0,0"))
                     (rule "concrete_and_1" (formula "14") (term "0"))
                     (rule "leq_literals" (formula "14") (term "0"))
                     (rule "concrete_or_1" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "inEqSimp_exactShadow2" (formula "13") (ifseqformula "4"))
                     (rule "greater_literals" (formula "13") (term "0"))
                     (rule "concrete_impl_1" (formula "13"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
                     (rule "add_literals" (formula "13") (term "1,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(2(9(5(4(3(9(9(8(5(8(#)))))))))))"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,1,0"))
                     (rule "neg_literal" (formula "13") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "13") (term "0,0"))
                     (rule "concrete_or_2" (formula "13") (term "0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0"))
                     (rule "qeq_literals" (formula "13") (term "0"))
                     (rule "concrete_or_2" (formula "13"))
                     (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "3"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                     (rule "mul_literals" (formula "14") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0"))
                     (rule "add_literals" (formula "14") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                     (rule "inEqSimp_subsumption4" (formula "14") (ifseqformula "13"))
                     (rule "greater_literals" (formula "14") (term "0,0"))
                     (rule "concrete_and_1" (formula "14") (term "0"))
                     (rule "times_zero_1" (formula "14") (term "0,0"))
                     (rule "leq_literals" (formula "14") (term "0"))
                     (rule "concrete_or_1" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "inEqSimp_exactShadow1" (formula "15") (ifseqformula "3"))
                     (rule "mul_literals" (formula "15") (term "1,0,1"))
                     (rule "greater_literals" (formula "15") (term "0"))
                     (rule "concrete_impl_1" (formula "15"))
                     (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                     (rule "mul_literals" (formula "15") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0"))
                     (rule "add_literals" (formula "15") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                     (rule "inEqSimp_subsumption4" (formula "15") (ifseqformula "13"))
                     (rule "times_zero_1" (formula "15") (term "0,1,0"))
                     (rule "greater_literals" (formula "15") (term "0,0"))
                     (rule "concrete_and_1" (formula "15") (term "0"))
                     (rule "leq_literals" (formula "15") (term "0"))
                     (rule "concrete_or_1" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "13"))
                     (rule "applyEqRigid" (formula "16") (term "0,1,1") (ifseqformula "7"))
                     (rule "times_zero_2" (formula "16") (term "1,1"))
                     (rule "add_zero_right" (formula "16") (term "1"))
                     (rule "applyEqRigid" (formula "10") (term "0,1,1") (ifseqformula "7"))
                     (rule "times_zero_2" (formula "10") (term "1,1"))
                     (rule "add_zero_right" (formula "10") (term "1"))
                     (rule "applyEq" (formula "14") (term "0") (ifseqformula "7"))
                     (rule "leq_literals" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "applyEqRigid" (formula "13") (term "0,1,1") (ifseqformula "7"))
                     (rule "times_zero_2" (formula "13") (term "1,1"))
                     (rule "add_zero_right" (formula "13") (term "1"))
                     (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "7"))
                     (rule "times_zero_2" (formula "4") (term "1,1"))
                     (rule "add_zero_right" (formula "4") (term "1"))
                     (rule "applyEqRigid" (formula "1") (term "0,1,0,1") (ifseqformula "7"))
                     (rule "mul_literals" (formula "1") (term "1,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,1"))
                     (rule "applyEq" (formula "12") (term "1") (ifseqformula "7"))
                     (rule "applyEq" (formula "15") (term "0,0,1") (ifseqformula "7"))
                     (rule "mul_literals" (formula "15") (term "0,1"))
                     (rule "add_zero_left" (formula "15") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "8"))
                     (rule "leq_literals" (formula "13") (term "0"))
                     (rule "concrete_or_1" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "9"))
                     (rule "leq_literals" (formula "3") (term "0"))
                     (rule "concrete_or_1" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "7"))
                     (rule "greater_literals" (formula "12") (term "0,0"))
                     (rule "concrete_and_1" (formula "12") (term "0"))
                     (rule "times_zero_1" (formula "12") (term "1,0"))
                     (rule "leq_literals" (formula "12") (term "0"))
                     (rule "concrete_or_1" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(3(#))"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,1,0"))
                     (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "3") (term "0,0"))
                     (rule "concrete_or_2" (formula "3") (term "0"))
                     (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "qeq_literals" (formula "3") (term "0"))
                     (rule "concrete_or_2" (formula "3"))
                     (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "3"))
                     (rule "leq_literals" (formula "8") (term "0"))
                     (rule "concrete_or_1" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "3"))
                     (rule "applyEq" (formula "1") (term "0,1,1") (ifseqformula "7"))
                     (rule "times_zero_2" (formula "1") (term "1,1"))
                     (rule "add_zero_right" (formula "1") (term "1"))
                     (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "7"))
                     (rule "leq_literals" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                     (rule "qeq_literals" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "applyEq" (formula "3") (term "0,1") (ifseqformula "6"))
                     (rule "times_zero_2" (formula "3") (term "1"))
                     (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "5"))
                     (rule "times_zero_2" (formula "3") (term "1,1"))
                     (rule "add_zero_right" (formula "3") (term "1"))
                     (rule "applyEqRigid" (formula "9") (term "0,1") (ifseqformula "5"))
                     (rule "times_zero_2" (formula "9") (term "1"))
                     (rule "applyEq" (formula "2") (term "1") (ifseqformula "5"))
                     (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "5"))
                     (rule "applyEqRigid" (formula "8") (term "1,0,0,0") (ifseqformula "5"))
                     (rule "add_literals" (formula "8") (term "0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "1"))
                     (rule "leq_literals" (formula "14") (term "0"))
                     (rule "concrete_or_1" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "3"))
                     (rule "leq_literals" (formula "1") (term "0"))
                     (rule "concrete_or_1" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "all_pull_out3" (formula "46") (term "0"))
                     (rule "shift_paren_and" (formula "37") (term "0,0,0,0,1,1,0"))
                     (rule "allLeft" (formula "19") (inst "t=i_1_0"))
                     (rule "replace_known_left" (formula "19") (term "0,0,0,0") (ifseqformula "46"))
                     (rule "concrete_not_1" (formula "19") (term "0,0,0"))
                     (rule "concrete_or_2" (formula "19") (term "0,0"))
                     (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "45"))
                     (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "19") (term "0,0,1"))
                     (rule "leq_literals" (formula "19") (term "0,1"))
                     (rule "concrete_and_2" (formula "19") (term "1"))
                     (rule "concrete_or_4" (formula "19"))
                     (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "44"))
                     (rule "qeq_literals" (formula "19") (term "0,1"))
                     (rule "concrete_and_2" (formula "19") (term "1"))
                     (rule "concrete_or_4" (formula "19"))
                     (rule "allLeft" (formula "20") (inst "t=i_1"))
                     (rule "replace_known_left" (formula "20") (term "0,0,0,0") (ifseqformula "37"))
                     (rule "concrete_not_1" (formula "20") (term "0,0,0"))
                     (rule "concrete_or_2" (formula "20") (term "0,0"))
                     (rule "inEqSimp_contradInEq0" (formula "20") (term "1") (ifseqformula "36"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "20") (term "0,0,1"))
                     (rule "leq_literals" (formula "20") (term "0,1"))
                     (rule "concrete_and_2" (formula "20") (term "1"))
                     (rule "concrete_or_4" (formula "20"))
                     (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "35"))
                     (rule "qeq_literals" (formula "20") (term "0,1"))
                     (rule "concrete_and_2" (formula "20") (term "1"))
                     (rule "concrete_or_4" (formula "20"))
                     (rule "allLeft" (formula "16") (inst "t=mul(i_1_0, Z(2(#)))"))
                     (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "48"))
                     (rule "concrete_not_1" (formula "16") (term "0,0"))
                     (rule "concrete_or_2" (formula "16") (term "0"))
                     (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                     (rule "inEqSimp_contradInEq5" (formula "16") (term "0") (ifseqformula "46"))
                     (rule "times_zero_1" (formula "16") (term "1,1,0,0"))
                     (rule "greater_literals" (formula "16") (term "0,0,0"))
                     (rule "concrete_impl_1" (formula "16") (term "0,0"))
                     (rule "qeq_literals" (formula "16") (term "0,0"))
                     (rule "concrete_and_2" (formula "16") (term "0"))
                     (rule "concrete_or_2" (formula "16"))
                     (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "16"))
                     (rule "polySimp_rightDist" (formula "44") (term "0,0"))
                     (rule "mul_literals" (formula "44") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "44") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                     (rule "polySimp_elimOne" (formula "44") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "16"))
                     (rule "mul_literals" (formula "19") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                     (rule "mul_literals" (formula "19") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=i_1_0") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "19") (term "0,0"))
                     (rule "concrete_or_2" (formula "19") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                     (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0"))
                     (rule "add_zero_right" (formula "19") (term "0,0"))
                     (rule "leq_literals" (formula "19") (term "0"))
                     (rule "concrete_or_2" (formula "19"))
                     (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "19"))
                     (rule "leq_literals" (formula "48") (term "0"))
                     (rule "concrete_or_1" (formula "48"))
                     (rule "true_left" (formula "48"))
                     (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "16"))
                     (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                     (rule "mul_literals" (formula "35") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1"))
                     (rule "polySimp_rightDist" (formula "35") (term "1"))
                     (rule "mul_literals" (formula "35") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "16"))
                     (rule "polySimp_mulAssoc" (formula "28") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1"))
                     (rule "inEqSimp_contradInEq3" (formula "28") (ifseqformula "50"))
                     (rule "greater_literals" (formula "28") (term "0,0"))
                     (rule "concrete_impl_1" (formula "28") (term "0"))
                     (rule "andLeft" (formula "28"))
                     (rule "polySimp_rightDist" (formula "28") (term "0"))
                     (rule "mul_literals" (formula "28") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0"))
                     (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "28") (term "0"))
                     (rule "add_literals" (formula "28") (term "1,1,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0"))
                     (rule "add_zero_right" (formula "28") (term "0"))
                     (rule "leq_literals" (formula "28"))
                     (rule "closeFalse" (formula "28"))
                  )
                  (branch "expectedMaxSize >= 0 FALSE"
                     (rule "eqSymm" (formula "6"))
                     (rule "inEqSimp_geqRight" (formula "50"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "7"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor3b" (formula "2") (term "0,0"))
                     (rule "applyEq" (formula "8") (term "1,0,0") (ifseqformula "7"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor3b" (formula "8") (term "0,0"))
                     (rule "mod_axiom" (formula "2") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "2") (term "0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0"))
                     (rule "mod_axiom" (formula "8") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "8"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "8") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,0"))
                     (rule "add_zero_left" (formula "8") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                     (rule "mul_literals" (formula "2") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1"))
                     (rule "polySimp_rightDist" (formula "8") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,1"))
                     (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "1"))
                     (rule "leq_literals" (formula "14") (term "0"))
                     (rule "concrete_or_1" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                     (rule "polySimp_mulAssoc" (formula "5") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "5") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,1,0"))
                     (rule "neg_literal" (formula "5") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "5") (term "0,0"))
                     (rule "concrete_or_2" (formula "5") (term "0"))
                     (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0"))
                     (rule "add_literals" (formula "5") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                     (rule "add_literals" (formula "5") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "5") (term "1,0,0"))
                     (rule "add_zero_right" (formula "5") (term "0,0"))
                     (rule "qeq_literals" (formula "5") (term "0"))
                     (rule "concrete_or_2" (formula "5"))
                     (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "5"))
                     (rule "leq_literals" (formula "4") (term "0"))
                     (rule "concrete_or_1" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "cnf_rightDist" (formula "40") (term "1,0,0,0,0,1,1,0"))
                     (rule "all_pull_out3" (formula "23") (term "0"))
                     (rule "shift_paren_or" (formula "23") (term "0,0"))
                     (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                     (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                     (rule "commute_or" (formula "23") (term "0,0,0,0,0"))
                     (rule "cnf_rightDist" (formula "40") (term "0,0,0,0,0,1,1,0"))
                     (rule "eq_or" (formula "40") (term "0,0,0,0,0,0,1,1,0"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "11"))
                     (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "49"))
                     (rule "concrete_or_1" (formula "48"))
                     (rule "true_left" (formula "48"))
                     (rule "all_pull_out3" (formula "49") (term "1,0"))
                     (rule "cnf_rightDist" (formula "49") (term "0,1,0"))
                     (rule "commute_or_2" (formula "49") (term "1,0,1,0"))
                     (rule "shift_paren_or" (formula "49") (term "0,0,1,0"))
                     (rule "commute_or_2" (formula "49") (term "0,1,0,1,0"))
                     (rule "shift_paren_or" (formula "49") (term "0,0,0,1,0"))
                     (rule "commute_or_2" (formula "49") (term "0,0,0,0,1,0"))
                     (rule "all_pull_out3" (formula "39") (term "0"))
                     (rule "shift_paren_or" (formula "39") (term "0,0"))
                     (rule "shift_paren_or" (formula "39") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "39") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "39") (term "0,0,0,0,0"))
                     (rule "commute_or" (formula "39") (term "0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "49") (term "0,0,1,0,1,0"))
                     (rule "commute_or" (formula "49") (term "0,0,0,1,0,1,0"))
                     (rule "commute_or" (formula "40") (term "1,1,0,0,0,0,1,1,0"))
                     (rule "commute_or" (formula "40") (term "0,1,0,0,0,0,1,1,0"))
                     (rule "commute_or" (formula "40") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "div_axiom" (formula "2") (term "0,0") (inst "quotient=quotient_2"))
                     (rule "qeq_literals" (formula "2") (term "0,1,1"))
                     (rule "ifthenelse_true_for" (formula "2") (term "1,1"))
                     (rule "equal_literals" (formula "2") (term "0"))
                     (rule "concrete_or_2" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1,1,1"))
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "2"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "4") (term "1"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0,1"))
                     (rule "add_literals" (formula "4") (term "0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                     (rule "add_literals" (formula "4") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                     (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                     (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq0" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0"))
                     (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                     (rule "mul_literals" (formula "3") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                     (rule "mul_literals" (formula "4") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                     (rule "mul_literals" (formula "5") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,1"))
                     (rule "inEqSimp_subsumption2" (formula "4") (ifseqformula "5"))
                     (rule "eq_and" (formula "4") (term "0,0"))
                     (rule "greater_literals" (formula "4") (term "0,0"))
                     (rule "concrete_and_1" (formula "4") (term "0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "qeq_literals" (formula "4") (term "0"))
                     (rule "concrete_or_1" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "inEqSimp_subsumption5" (formula "3") (ifseqformula "10"))
                     (rule "eq_and" (formula "3") (term "0,0"))
                     (rule "greater_literals" (formula "3") (term "0,0"))
                     (rule "concrete_and_1" (formula "3") (term "0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "qeq_literals" (formula "3") (term "0"))
                     (rule "concrete_or_1" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "3"))
                     (rule "greater_literals" (formula "6") (term "0"))
                     (rule "concrete_impl_1" (formula "6"))
                     (rule "polySimp_mulAssoc" (formula "6") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0"))
                     (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "6") (term "0"))
                     (rule "add_literals" (formula "6") (term "1,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                     (rule "inEqSimp_exactShadow1" (formula "10") (ifseqformula "1"))
                     (rule "mul_literals" (formula "10") (term "1,0,1"))
                     (rule "greater_literals" (formula "10") (term "0"))
                     (rule "concrete_impl_1" (formula "10"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                     (rule "polySimp_mulAssoc" (formula "10") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0"))
                     (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                     (rule "inEqSimp_exactShadow1" (formula "11") (ifseqformula "8"))
                     (rule "greater_literals" (formula "11") (term "0"))
                     (rule "concrete_impl_1" (formula "11"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                     (rule "polySimp_mulAssoc" (formula "11") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0"))
                     (rule "add_literals" (formula "11") (term "1,1,0"))
                     (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                     (rule "mul_literals" (formula "11") (term "0,1"))
                     (rule "inEqSimp_exactShadow2" (formula "19") (ifseqformula "3"))
                     (rule "mul_literals" (formula "19") (term "1,0,0,1"))
                     (rule "greater_literals" (formula "19") (term "0"))
                     (rule "concrete_impl_1" (formula "19"))
                     (rule "mul_literals" (formula "19") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                     (rule "mul_literals" (formula "19") (term "0,1"))
                     (rule "inEqSimp_exactShadow2" (formula "18") (ifseqformula "6"))
                     (rule "mul_literals" (formula "18") (term "1,0,0,1"))
                     (rule "greater_literals" (formula "18") (term "0"))
                     (rule "concrete_impl_1" (formula "18"))
                     (rule "mul_literals" (formula "18") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0"))
                     (rule "add_literals" (formula "18") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                     (rule "mul_literals" (formula "18") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "18") (term "0,0"))
                     (rule "concrete_or_2" (formula "18") (term "0"))
                     (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                     (rule "add_literals" (formula "18") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0"))
                     (rule "add_zero_right" (formula "18") (term "0,0"))
                     (rule "leq_literals" (formula "18") (term "0"))
                     (rule "concrete_or_2" (formula "18"))
                     (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "10"))
                     (rule "mul_literals" (formula "19") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0"))
                     (rule "add_literals" (formula "19") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                     (rule "neg_literal" (formula "19") (term "0,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "19") (term "0,0"))
                     (rule "concrete_or_2" (formula "19") (term "0"))
                     (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0"))
                     (rule "add_zero_right" (formula "19") (term "0,0"))
                     (rule "qeq_literals" (formula "19") (term "0"))
                     (rule "concrete_or_2" (formula "19"))
                     (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "5"))
                     (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0"))
                     (rule "add_literals" (formula "21") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                     (rule "mul_literals" (formula "21") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "21") (ifseqformula "18"))
                     (rule "times_zero_1" (formula "21") (term "1,1,0"))
                     (rule "greater_literals" (formula "21") (term "0,0"))
                     (rule "concrete_and_1" (formula "21") (term "0"))
                     (rule "leq_literals" (formula "21") (term "0"))
                     (rule "concrete_or_1" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "inEqSimp_exactShadow1" (formula "11") (ifseqformula "5"))
                     (rule "mul_literals" (formula "11") (term "1,0,1"))
                     (rule "greater_literals" (formula "11") (term "0"))
                     (rule "concrete_impl_1" (formula "11"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                     (rule "mul_literals" (formula "11") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0"))
                     (rule "add_literals" (formula "11") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "inEqSimp_contradInEq5" (formula "11") (ifseqformula "19"))
                     (rule "times_zero_1" (formula "11") (term "1,1,0"))
                     (rule "greater_literals" (formula "11") (term "0,0"))
                     (rule "concrete_impl_1" (formula "11") (term "0"))
                     (rule "qeq_literals" (formula "11") (term "0"))
                     (rule "concrete_and_2" (formula "11"))
                     (rule "closeFalse" (formula "11"))
                  )
               )
            )
            (branch "Body Preserves Invariant"
               (rule "elementOfAllLocs" (formula "37") (term "0,0,0,0,1,0,1,1,0,1,1,1,1,1"))
               (rule "concrete_or_1" (formula "37") (term "0,0,0,1,0,1,1,0,1,1,1,1,1"))
               (rule "concrete_or_1" (formula "37") (term "0,0,1,0,1,1,0,1,1,1,1,1"))
               (rule "simplifyUpdate2" (formula "30"))
               (rule "expand_inInt" (formula "30") (term "1,1,1"))
               (rule "replace_int_MAX" (formula "30") (term "1,0,1,1,1"))
               (rule "replace_int_MIN" (formula "30") (term "0,1,1,1,1"))
               (rule "simplifyUpdate2" (formula "37") (term "1"))
               (rule "simplifyUpdate2" (formula "30") (term "1"))
               (rule "translateJavaSubInt" (formula "37") (term "0,1,1,1,0,1,1,1,1"))
               (rule "translateJavaSubInt" (formula "37") (term "0,0,1,1"))
               (rule "sequentialToParallel2" (formula "30"))
               (rule "simplifyUpdate2" (formula "30"))
               (rule "simplifyUpdate3" (formula "30") (term "1,0"))
               (rule "andLeft" (formula "30"))
               (rule "simplifyUpdate2" (formula "31"))
               (rule "andLeft" (formula "30"))
               (rule "simplifyUpdate2" (formula "31"))
               (rule "andLeft" (formula "32"))
               (rule "exLeft" (formula "31") (inst "sk=i_2"))
               (rule "andLeft" (formula "31"))
               (rule "andLeft" (formula "31"))
               (rule "simplifyUpdate2" (formula "31"))
               (rule "sequentialToParallel2" (formula "42"))
               (rule "simplifyUpdate2" (formula "42"))
               (rule "simplifyUpdate3" (formula "42") (term "1,0"))
               (rule "sequentialToParallel2" (formula "42"))
               (rule "simplifyUpdate3" (formula "42") (term "1,0"))
               (rule "impRight" (formula "42"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "applyOnSkip" (formula "1") (term "1,0"))
               (rule "parallelWithSkip2" (formula "1") (term "0"))
               (rule "applyOnElementary" (formula "43") (term "1,0"))
               (rule "inEqSimp_ltRight" (formula "40"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_gtRight" (formula "41"))
               (rule "mul_literals" (formula "1") (term "0,0"))
               (rule "applyOnRigidFormula" (formula "33"))
               (rule "simplifyUpdate1" (formula "33") (term "0"))
               (rule "simplifyUpdate1" (formula "33") (term "1"))
               (rule "applyOnPV" (formula "33") (term "1"))
               (rule "applyOnRigidFormula" (formula "37"))
               (rule "simplifyUpdate1" (formula "37") (term "1"))
               (rule "applyOnPV" (formula "37") (term "0"))
               (rule "applyOnRigidFormula" (formula "38"))
               (rule "applyOnPV" (formula "38") (term "1"))
               (rule "simplifyUpdate1" (formula "38") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "21"))
               (rule "mul_literals" (formula "21") (term "1,0,0"))
               (rule "add_literals" (formula "21") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "30") (term "1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulAssoc" (formula "30") (term "1,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_mulAssoc" (formula "30") (term "1,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "27"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "27") (term "0"))
               (rule "inEqSimp_gtToGeq" (formula "29") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "29") (term "0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "24"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,1,0,1,0"))
               (rule "applyOnRigidFormula" (formula "36"))
               (rule "applyOnPV" (formula "36") (term "1"))
               (rule "simplifyUpdate1" (formula "36") (term "0"))
               (rule "applyOnRigidFormula" (formula "35"))
               (rule "applyOnPV" (formula "35") (term "1"))
               (rule "simplifyUpdate1" (formula "35") (term "0"))
               (rule "polySimp_addComm1" (formula "24") (term "0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "applyOnRigidTerm" (formula "43") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "43") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "43") (term "0,0,1,0"))
               (rule "applyOnPV" (formula "43") (term "1,0,1,0"))
               (rule "applyOnPV" (formula "43") (term "0,0,1,0"))
               (rule "applyOnRigidTerm" (formula "33") (term "0"))
               (rule "simplifyUpdate1" (formula "33") (term "1,0"))
               (rule "applyOnPV" (formula "33") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0,0,0,0,1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,0,0,0,1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "34"))
               (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,1,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "38"))
               (rule "inEqSimp_ltToLeq" (formula "35"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "35") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "33"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
               (rule "mul_literals" (formula "33") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
               (rule "add_literals" (formula "33") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0"))
               (rule "variableDeclarationAssign" (formula "3") (term "1"))
               (rule "variableDeclarationAssign" (formula "43") (term "1"))
               (rule "variableDeclaration" (formula "3") (term "1") (newnames "b_1"))
               (rule "variableDeclaration" (formula "43") (term "1") (newnames "exc_1"))
               (rule "assignment" (formula "43") (term "1"))
               (rule "sequentialToParallel2" (formula "43"))
               (rule "simplifyUpdate3" (formula "43") (term "1,0"))
               (rule "variableDeclaration" (formula "43") (term "1") (newnames "thrownExc"))
               (rule "applyEq" (formula "15") (term "0") (ifseqformula "25"))
               (rule "applyEq" (formula "18") (term "0") (ifseqformula "25"))
               (rule "applyEq" (formula "12") (term "0") (ifseqformula "25"))
               (rule "applyEq" (formula "30") (term "2,1,1,1,0,0,1,1,0") (ifseqformula "25"))
               (rule "applyEq" (formula "30") (term "2,1,1,0,0,0,0,0,1,1,0") (ifseqformula "25"))
               (rule "applyEq" (formula "22") (term "0,1,0") (ifseqformula "25"))
               (rule "applyEq" (formula "17") (term "0") (ifseqformula "25"))
               (rule "applyEq" (formula "13") (term "0") (ifseqformula "25"))
               (rule "applyEq" (formula "29") (term "2,0,1,1,0,0,1,1,0") (ifseqformula "25"))
               (rule "applyEq" (formula "24") (term "0,1,0") (ifseqformula "25"))
               (rule "applyEq" (formula "30") (term "2,0,1,0,1,0,1,0") (ifseqformula "25"))
               (rule "applyEq" (formula "27") (term "0,0,1,0") (ifseqformula "25"))
               (rule "applyEq" (formula "29") (term "2,0,1,0,1,0,1,0") (ifseqformula "25"))
               (rule "applyEq" (formula "30") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "25"))
               (rule "applyEq" (formula "20") (term "0,0,1,0,0,0,0,0") (ifseqformula "25"))
               (rule "applyEq" (formula "20") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "25"))
               (rule "applyEq" (formula "19") (term "0,0,1,0,0,0,0,0") (ifseqformula "25"))
               (rule "applyEq" (formula "29") (term "0,0,1,0,0,0,0,0") (ifseqformula "25"))
               (rule "applyEq" (formula "30") (term "0,0,1,0,0,0,0,0") (ifseqformula "25"))
               (rule "applyEq" (formula "16") (term "0,1,0,0,0,0,0") (ifseqformula "25"))
               (rule "applyEq" (formula "30") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "25"))
               (rule "blockThrow" (formula "43") (term "1,0,0,1"))
               (rule "jmod_axiom" (formula "2") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,0"))
               (rule "mod_axiom" (formula "2") (term "0,1,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "0,1,0,1,0,1,0"))
               (rule "mul_literals" (formula "2") (term "0,0,1,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,1,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,0"))
               (rule "jmod_axiom" (formula "1") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
               (rule "mod_axiom" (formula "1") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,1,0"))
               (rule "mod_axiom" (formula "33") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0,1,0"))
               (rule "mod_axiom" (formula "3") (term "1,0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0"))
               (rule "polySimp_addComm0" (formula "3") (term "0,0,0,1,0,0,0"))
               (rule "mod_axiom" (formula "43") (term "1,0,1,0,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,1,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "43") (term "0,0,0,1,0,1,0,0,0,0"))
               (rule "mod_axiom" (formula "43") (term "1,0,1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,1,0,0"))
               (rule "polySimp_addComm0" (formula "43") (term "0,0,0,1,0,0,1,0,0"))
               (rule "mod_axiom" (formula "2") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,1,0"))
               (rule "mod_axiom" (formula "1") (term "0,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,0"))
               (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,1,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
               (rule "mod_axiom" (formula "33") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "33") (term "0,0,1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "33") (term "0,0,0,0,0,0,1,0"))
               (rule "mod_axiom" (formula "3") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "3") (term "0,0,1,0,0,1,0,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,1,0,0,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
               (rule "mod_axiom" (formula "43") (term "0,1,0,0,1,0,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,0,1,0,1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1,0,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "43") (term "0,1,0,0,1,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "43") (term "0,0,1,0,0,1,0,1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "43") (term "0,0,1,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,1,0,1,0,0,0,0"))
               (rule "add_literals" (formula "43") (term "0,0,0,0,0,1,0,1,0,0,0,0"))
               (rule "mod_axiom" (formula "43") (term "0,1,0,0,1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,0,1,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "43") (term "0,1,0,0,1,0,0,1,0,0"))
               (rule "mul_literals" (formula "43") (term "0,0,1,0,0,1,0,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "43") (term "0,0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,1,0,0,1,0,0"))
               (rule "add_literals" (formula "43") (term "0,0,0,0,0,1,0,0,1,0,0"))
               (rule "jmod_axiom" (formula "33") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0,0,0,1,0"))
               (rule "add_literals" (formula "33") (term "1,1,0,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "33") (term "1,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21"))
               (rule "mul_literals" (formula "21") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,1,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "30") (term "0,1,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "30") (term "0,1,0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "35"))
               (rule "polySimp_mulLiterals" (formula "35") (term "0"))
               (rule "polySimp_elimOne" (formula "35") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0,0,0,1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,0,0,0,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,0,0,0,1,0,0,1"))
               (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0,0,0,0,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0,0,0,0,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0,0,0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,1,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "43") (term "0,1,1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,1,0,1"))
               (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "43") (term "0,1,0,0,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,1,1,0,1"))
               (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,1,1,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "24"))
               (rule "polySimp_mulLiterals" (formula "24") (term "0"))
               (rule "polySimp_elimOne" (formula "24") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "30") (term "0,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "27"))
               (rule "polySimp_mulLiterals" (formula "27") (term "0"))
               (rule "polySimp_elimOne" (formula "27") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "29") (term "0,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "30") (term "0,1,0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "30") (term "0,1,0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "33"))
               (rule "polySimp_mulLiterals" (formula "33") (term "0"))
               (rule "polySimp_elimOne" (formula "33") (term "0"))
               (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "17"))
               (rule "leq_literals" (formula "15") (term "0"))
               (rule "concrete_or_1" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "16"))
               (rule "leq_literals" (formula "13") (term "0"))
               (rule "concrete_or_1" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "12"))
               (rule "leq_literals" (formula "16") (term "0"))
               (rule "concrete_or_1" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "elimGcdGeq" (formula "27") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "27") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "sub_literals" (formula "27") (term "0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "27") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "27") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
               (rule "leq_literals" (formula "27") (term "1,0,1,1,0,0,0,0,1,1,0"))
               (rule "concrete_and_3" (formula "27") (term "0,1,1,0,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "1,1,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,1,1,0,0,0,0,1,1,0"))
               (rule "qeq_literals" (formula "27") (term "0,1,1,0,0,0,0,1,1,0"))
               (rule "ifthenelse_true_for" (formula "27") (term "1,1,0,0,0,0,1,1,0"))
               (rule "elimGcdGeq" (formula "27") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
               (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "sub_literals" (formula "27") (term "0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "27") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "27") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "27") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "leq_literals" (formula "27") (term "1,0,0,0,0,0,0,0,1,1,0"))
               (rule "concrete_and_3" (formula "27") (term "0,0,0,0,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,0,0,0,1,1,0"))
               (rule "qeq_literals" (formula "27") (term "0,0,0,0,0,0,0,1,1,0"))
               (rule "ifthenelse_true_for" (formula "27") (term "0,0,0,0,0,0,1,1,0"))
               (rule "polyDiv_pullOut" (formula "30") (term "0,1,0,0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
               (rule "equal_literals" (formula "30") (term "0,0,1,0,0"))
               (rule "ifthenelse_false" (formula "30") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,1,0,0"))
               (rule "mul_literals" (formula "30") (term "1,0,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,1,1,0,0"))
               (rule "add_literals" (formula "30") (term "0,0,0,1,1,0,0"))
               (rule "add_zero_left" (formula "30") (term "0,0,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
               (rule "mul_literals" (formula "30") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "30") (term "0,0,0,0,0,0"))
               (rule "polyDiv_pullOut" (formula "1") (term "0,1,0,0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0,2,0,1,0,0"))
               (rule "equal_literals" (formula "1") (term "0,0,1,0,0"))
               (rule "ifthenelse_false" (formula "1") (term "0,1,0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,1,1,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
               (rule "polyDiv_pullOut" (formula "2") (term "0,1,0,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(expectedMaxSize, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(3(#))))"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0,1,0,0"))
               (rule "equal_literals" (formula "2") (term "0,0,1,0,0"))
               (rule "ifthenelse_false" (formula "2") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1,0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0,0,1,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0,0,1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
               (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0,0"))
               (rule "elimGcdLeq" (formula "27") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
               (rule "sub_literals" (formula "27") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,1,0,0,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "27") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "0,0,1,0,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "27") (term "0,0,1,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,1,0,0,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "27") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "qeq_literals" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
               (rule "concrete_and_3" (formula "27") (term "0,0,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,0,0,1,1,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "27") (term "0,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "1,0,0,0,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "27") (term "0,0,0,1,0,0,1,1,0"))
               (rule "leq_literals" (formula "27") (term "0,0,1,0,0,1,1,0"))
               (rule "ifthenelse_true_for" (formula "27") (term "0,1,0,0,1,1,0"))
               (rule "elimGcdLeq" (formula "27") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "sub_literals" (formula "27") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,1,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "27") (term "0,1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "27") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,1,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "27") (term "0,1,0,1,1,0,0,0,1,1,0"))
               (rule "qeq_literals" (formula "27") (term "1,0,1,1,0,0,0,1,1,0"))
               (rule "concrete_and_3" (formula "27") (term "0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "27") (term "0,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "1,0,0,1,1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "27") (term "0,0,1,1,0,0,0,1,1,0"))
               (rule "leq_literals" (formula "27") (term "0,1,1,0,0,0,1,1,0"))
               (rule "ifthenelse_true_for" (formula "27") (term "1,1,0,0,0,1,1,0"))
               (rule "polyMod_pullOut" (formula "40") (term "1,0,0,1,0,0") (inst "polyDivCoeff=mul(div(add(Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
            mul(mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                        jdiv(expectedMaxSize, Z(2(#)))),
                    Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
                Z(3(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,0,1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,0,0,1,0,0"))
               (rule "add_literals" (formula "40") (term "1,1,0,1,0,0,1,0,0"))
               (rule "times_zero_1" (formula "40") (term "1,0,1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "40") (term "0,1,0,0,1,0,0"))
               (rule "polyMod_pullOut" (formula "40") (term "1,0,1,0,0,0,0") (inst "polyDivCoeff=mul(div(add(Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
            mul(mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                        jdiv(expectedMaxSize, Z(2(#)))),
                    Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
                Z(3(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,1,0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,0,1,0,0,0,0"))
               (rule "add_literals" (formula "40") (term "1,1,0,1,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "40") (term "1,0,1,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "40") (term "0,1,0,1,0,0,0,0"))
               (rule "polyMod_pullOut" (formula "3") (term "1,0,0,0") (inst "polyDivCoeff=mul(div(add(Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
            mul(mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                        jdiv(expectedMaxSize, Z(2(#)))),
                    Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
                Z(3(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,1,0,0,0"))
               (rule "add_literals" (formula "3") (term "1,1,0,1,0,0,0"))
               (rule "times_zero_1" (formula "3") (term "1,0,1,0,0,0"))
               (rule "add_zero_right" (formula "3") (term "0,1,0,0,0"))
               (rule "polyMod_pullOut" (formula "3") (term "1,0,0,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(expectedMaxSize, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(3(#))))"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0,0"))
               (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "3") (term "0,0,1,0,0,0"))
               (rule "polyMod_pullOut" (formula "40") (term "1,0,1,0,0,0,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(expectedMaxSize, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(3(#))))"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "40") (term "0,1,0,1,0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,1,0,1,0,0,0,0"))
               (rule "add_literals" (formula "40") (term "1,1,0,0,1,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "40") (term "0,0,1,0,1,0,0,0,0"))
               (rule "polyMod_pullOut" (formula "40") (term "1,0,0,1,0,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(expectedMaxSize, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(3(#))))"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,1,0,0,1,0,0"))
               (rule "add_literals" (formula "40") (term "1,1,0,0,1,0,0,1,0,0"))
               (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,1,0,0"))
               (rule "polyMod_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(jdiv(expectedMaxSize, Z(2(#))),
                Z(3(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "polyMod_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=mul(div(mul(mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                    jdiv(expectedMaxSize, Z(2(#)))),
                Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
            Z(3(#))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "polyMod_pullOut" (formula "30") (term "0") (inst "polyDivCoeff=mul(div(mul(mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                    jdiv(expectedMaxSize, Z(2(#)))),
                Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
            Z(3(#))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
               (rule "add_literals" (formula "30") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "30") (term "1,0,0"))
               (rule "add_zero_right" (formula "30") (term "0,0"))
               (rule "polyMod_pullOut" (formula "30") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(expectedMaxSize, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(3(#))))"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
               (rule "add_literals" (formula "30") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "30") (term "1,0,0"))
               (rule "add_zero_right" (formula "30") (term "0,0"))
               (rule "polyMod_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(expectedMaxSize, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(3(#))))"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "polyMod_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=Z(1(#))"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,0"))
               (rule "polyMod_pullOut" (formula "30") (term "0") (inst "polyDivCoeff=Z(1(#))"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
               (rule "mul_literals" (formula "30") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "add_literals" (formula "30") (term "0,0,0,0"))
               (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "34"))
               (rule "polySimp_rightDist" (formula "32") (term "0,0"))
               (rule "mul_literals" (formula "32") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "32") (term "0"))
               (rule "add_literals" (formula "32") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "32"))
               (rule "polySimp_mulLiterals" (formula "32") (term "0"))
               (rule "polySimp_elimOne" (formula "32") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "12"))
               (rule "polySimp_rightDist" (formula "21") (term "0,0"))
               (rule "mul_literals" (formula "21") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "21") (term "0"))
               (rule "add_literals" (formula "21") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "21"))
               (rule "polySimp_mulLiterals" (formula "21") (term "0"))
               (rule "polySimp_elimOne" (formula "21") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "31") (term "0,0"))
               (rule "mul_literals" (formula "31") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "31") (term "0"))
               (rule "add_literals" (formula "31") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "31"))
               (rule "polySimp_mulLiterals" (formula "31") (term "0"))
               (rule "polySimp_elimOne" (formula "31") (term "0"))
               (rule "boxToDiamond" (formula "3") (term "1"))
               (rule "notLeft" (formula "3"))
               (rule "all_unused" (formula "43") (term "1,0,1,1,0,1"))
               (rule "nnf_imp2or" (formula "15") (term "1,0"))
               (rule "nnf_imp2or" (formula "16") (term "1,0,1,0"))
               (rule "expand_subJint" (formula "43") (term "0,1,1,1,0,1"))
               (rule "polySimp_elimSub" (formula "43") (term "0,0,1,1,1,0,1"))
               (rule "all_unused" (formula "43") (term "1,0,1,1,0,1"))
               (rule "concrete_and_3" (formula "43") (term "0,1,1,0,1"))
               (rule "nnf_imp2or" (formula "26") (term "0,1,1,0"))
               (rule "nnf_imp2or" (formula "13") (term "0"))
               (rule "nnf_imp2or" (formula "27") (term "0"))
               (rule "expand_subJint" (formula "43") (term "0,1,0,0"))
               (rule "polySimp_elimSub" (formula "43") (term "0,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "43") (term "0,0,1,0,0"))
               (rule "jdiv_axiom" (formula "18") (term "1,0"))
               (rule "eqSymm" (formula "18"))
               (rule "inEqSimp_subsumption1" (formula "18") (term "0,0") (ifseqformula "14"))
               (rule "leq_literals" (formula "18") (term "0,0,0"))
               (rule "concrete_or_1" (formula "18") (term "0,0"))
               (rule "ifthenelse_true" (formula "18") (term "0"))
               (rule "eqSymm" (formula "18"))
               (rule "applyEqRigid" (formula "19") (term "1,0") (ifseqformula "18"))
               (rule "applyEq" (formula "27") (term "1,1,0,0,0") (ifseqformula "18"))
               (rule "applyEqRigid" (formula "28") (term "1,1,0,0,0,0") (ifseqformula "18"))
               (rule "applyEq" (formula "16") (term "1,1,0,0,0,1,0") (ifseqformula "18"))
               (rule "applyEq" (formula "15") (term "1,1,0,0,0") (ifseqformula "18"))
               (rule "applyEq" (formula "25") (term "0") (ifseqformula "18"))
               (rule "applyEq" (formula "16") (term "1,1,0,0,0") (ifseqformula "18"))
               (rule "expand_moduloInteger" (formula "44") (term "0,1,1,1,0,1"))
               (rule "replace_int_RANGE" (formula "44") (term "1,1,0,1,1,1,0,1"))
               (rule "replace_int_HALFRANGE" (formula "44") (term "0,0,1,0,1,1,1,0,1"))
               (rule "replace_int_MIN" (formula "44") (term "0,0,1,1,1,0,1"))
               (rule "polySimp_addAssoc" (formula "44") (term "0,1,0,1,1,1,0,1"))
               (rule "expand_moduloInteger" (formula "44") (term "0,1,0,0"))
               (rule "replace_int_MIN" (formula "44") (term "0,0,1,0,0"))
               (rule "replace_int_RANGE" (formula "44") (term "1,1,0,1,0,0"))
               (rule "replace_int_HALFRANGE" (formula "44") (term "0,0,1,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "44") (term "0,1,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,1,0,0"))
               (rule "add_literals" (formula "44") (term "0,0,0,1,0,1,0,0"))
               (rule "add_zero_left" (formula "44") (term "0,0,1,0,1,0,0"))
               (rule "mod_axiom" (formula "44") (term "1,0,1,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "44") (term "0,1,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,1,0,0"))
               (rule "polySimp_addComm0" (formula "44") (term "0,0,0,1,0,1,0,0"))
               (rule "polyMod_pullOut" (formula "44") (term "1,0,1,0,0") (inst "polyDivCoeff=mul(div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                mul(jdiv(expectedMaxSize, Z(2(#))),
                    Z(3(#)))),
            jmod(expectedMaxSize, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
               (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,1,0,1,0,0"))
               (rule "add_literals" (formula "44") (term "1,1,0,1,0,1,0,0"))
               (rule "times_zero_1" (formula "44") (term "1,0,1,0,1,0,0"))
               (rule "add_zero_right" (formula "44") (term "0,1,0,1,0,0"))
               (rule "nnf_imp2or" (formula "27") (term "1,0"))
               (rule "nnf_notAnd" (formula "13") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
               (rule "mul_literals" (formula "13") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "28") (term "1,0"))
               (rule "nnf_imp2or" (formula "15") (term "0"))
               (rule "nnf_imp2or" (formula "16") (term "0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
               (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
               (rule "mul_literals" (formula "28") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "27") (term "0"))
               (rule "nnf_notAnd" (formula "15") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
               (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
               (rule "mul_literals" (formula "15") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "16") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
               (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
               (rule "mul_literals" (formula "16") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,1,0"))
               (rule "double_not" (formula "28") (term "0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,1,0,1,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0"))
               (rule "nnf_imp2or" (formula "16") (term "0,1,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
               (rule "mul_literals" (formula "27") (term "1,1,0,0"))
               (rule "nnf_imp2or" (formula "28") (term "0,1,1,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,1,0"))
               (rule "double_not" (formula "27") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,1,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,1,0,1,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,1,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0,1,1,0"))
               (rule "nnf_notAnd" (formula "16") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,1,0"))
               (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
               (rule "nnf_notAnd" (formula "16") (term "0,1,0,1,0"))
               (rule "double_not" (formula "16") (term "0,0,1,0,1,0"))
               (rule "jdiv_axiom" (formula "32") (term "1,1"))
               (rule "eqSymm" (formula "32"))
               (rule "polyDiv_pullOut" (formula "32") (term "0,2,0") (inst "polyDivCoeff=mul(result_1_0, Z(neglit(1(#))))"))
               (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0,2,0,2,0"))
               (rule "equal_literals" (formula "32") (term "0,0,2,0"))
               (rule "ifthenelse_false" (formula "32") (term "0,2,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,2,0"))
               (rule "polySimp_pullOutFactor0" (formula "32") (term "0,0,0,2,0"))
               (rule "add_literals" (formula "32") (term "1,0,0,0,2,0"))
               (rule "polySimp_elimOne" (formula "32") (term "0,0,0,2,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "2,0"))
               (rule "polySimp_addComm0" (formula "32") (term "1,2,0"))
               (rule "polySimp_rightDist" (formula "32") (term "2,0"))
               (rule "polySimp_mulAssoc" (formula "32") (term "0,2,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "0,2,0"))
               (rule "polySimp_elimOne" (formula "32") (term "0,2,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,1,1,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,0,1,1,0"))
               (rule "nnf_notOr" (formula "28") (term "1,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,1,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,1,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,1,0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,1,1,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,1,1,0"))
               (rule "nnf_notOr" (formula "28") (term "1,0,0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "1,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,1,1,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,0,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,0,1,1,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,0,0,1,1,0"))
               (rule "methodCallParamThrow" (formula "45") (term "1,0,0,1"))
               (rule "nnf_notOr" (formula "28") (term "1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,0,1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "1,1,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "28") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "28") (term "0,0,1,1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "1,1,1,0,0,0,0,1,1,0"))
               (rule "nnf_notOr" (formula "28") (term "0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,0,0,1,1,0"))
               (rule "commute_or_2" (formula "13") (term "0"))
               (rule "commute_or_2" (formula "15") (term "0"))
               (rule "commute_or" (formula "28") (term "0,0"))
               (rule "less_than_comparison_simple" (formula "40") (term "1"))
               (rule "sequentialToParallel2" (formula "40"))
               (rule "simplifyUpdate2" (formula "40"))
               (rule "simplifyUpdate3" (formula "40") (term "1,0"))
               (rule "applyOnElementary" (formula "40") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "40") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "40") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "40") (term "2,0,1,0"))
               (rule "applyOnRigidFormula" (formula "40") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "40") (term "0,0,0,1,0"))
               (rule "simplifyUpdate1" (formula "40") (term "1,0,0,1,0"))
               (rule "applyOnPV" (formula "40") (term "0,0,0,1,0"))
               (rule "applyOnPV" (formula "40") (term "1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0"))
               (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,1,0"))
               (rule "add_literals" (formula "40") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "40") (term "0,0,0,1,0"))
               (rule "commute_or" (formula "16") (term "0,0"))
               (rule "commute_or" (formula "27") (term "0,0"))
               (rule "jdiv_axiom" (formula "2") (term "1,0,0"))
               (rule "eqSymm" (formula "2"))
               (rule "polyDiv_pullOut" (formula "2") (term "0,2,0") (inst "polyDivCoeff=mul(expectedMaxSize, Z(neglit(1(#))))"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0,2,0"))
               (rule "equal_literals" (formula "2") (term "0,0,2,0"))
               (rule "ifthenelse_false" (formula "2") (term "0,2,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,2,0"))
               (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,0,2,0"))
               (rule "add_literals" (formula "2") (term "1,0,0,0,2,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,0,0,2,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "2,0"))
               (rule "polySimp_addComm0" (formula "2") (term "1,2,0"))
               (rule "polySimp_rightDist" (formula "2") (term "2,0"))
               (rule "polySimp_mulAssoc" (formula "2") (term "0,2,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,2,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,2,0"))
               (rule "commute_or_2" (formula "28") (term "0,1,1,0"))
               (rule "div_axiom" (formula "19") (term "1") (inst "quotient=quotient_0"))
               (rule "qeq_literals" (formula "19") (term "0,1,1"))
               (rule "ifthenelse_true_for" (formula "19") (term "1,1"))
               (rule "equal_literals" (formula "19") (term "0"))
               (rule "concrete_or_2" (formula "19"))
               (rule "mul_literals" (formula "19") (term "1,1,1"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "19"))
               (rule "polySimp_addComm1" (formula "21") (term "1"))
               (rule "add_literals" (formula "21") (term "0,1"))
               (rule "inEqSimp_commuteLeq" (formula "20"))
               (rule "inEqSimp_homoInEq1" (formula "21"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
               (rule "polySimp_addComm1" (formula "21") (term "0"))
               (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "19"))
               (rule "applyEqRigid" (formula "31") (term "1,1,0,0") (ifseqformula "19"))
               (rule "applyEq" (formula "29") (term "0") (ifseqformula "19"))
               (rule "inEqSimp_homoInEq1" (formula "29"))
               (rule "polySimp_addComm1" (formula "29") (term "0"))
               (rule "applyEqRigid" (formula "32") (term "1,1,0,0") (ifseqformula "19"))
               (rule "applyEq" (formula "17") (term "1,1,0,0") (ifseqformula "19"))
               (rule "applyEqRigid" (formula "17") (term "1,0,0,0,1,0") (ifseqformula "19"))
               (rule "applyEq" (formula "16") (term "1,0,0,0") (ifseqformula "19"))
               (rule "applyEq" (formula "22") (term "1") (ifseqformula "19"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21"))
               (rule "polySimp_mulComm0" (formula "21") (term "1"))
               (rule "polySimp_rightDist" (formula "21") (term "1"))
               (rule "mul_literals" (formula "21") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29"))
               (rule "polySimp_mulComm0" (formula "29") (term "1"))
               (rule "polySimp_rightDist" (formula "29") (term "1"))
               (rule "mul_literals" (formula "29") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "12"))
               (rule "polySimp_mulAssoc" (formula "20") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
               (rule "polySimp_addComm0" (formula "20") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "20"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0"))
               (rule "elimGcdLeq_antec" (formula "20") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,1,0"))
               (rule "neg_literal" (formula "20") (term "0,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "20") (term "0,0"))
               (rule "concrete_or_2" (formula "20") (term "0"))
               (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
               (rule "add_literals" (formula "20") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "20") (term "1,0,0"))
               (rule "add_zero_right" (formula "20") (term "0,0"))
               (rule "qeq_literals" (formula "20") (term "0"))
               (rule "concrete_or_2" (formula "20"))
               (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "22"))
               (rule "polySimp_rightDist" (formula "27") (term "0,0"))
               (rule "mul_literals" (formula "27") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "27") (term "0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0"))
               (rule "add_zero_left" (formula "27") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "27"))
               (rule "polySimp_mulLiterals" (formula "27") (term "0"))
               (rule "polySimp_elimOne" (formula "27") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
               (rule "times_zero_1" (formula "30") (term "0,0"))
               (rule "add_zero_left" (formula "30") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "30"))
               (rule "mul_literals" (formula "30") (term "1"))
               (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "22"))
               (rule "mul_literals" (formula "15") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0"))
               (rule "add_literals" (formula "15") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "15"))
               (rule "mul_literals" (formula "15") (term "1"))
               (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
               (rule "leq_literals" (formula "15") (term "0,0"))
               (rule "concrete_or_2" (formula "15") (term "0"))
               (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
               (rule "add_literals" (formula "15") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
               (rule "add_literals" (formula "15") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "15") (term "1,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0"))
               (rule "leq_literals" (formula "15") (term "0"))
               (rule "concrete_or_2" (formula "15"))
               (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "15"))
               (rule "leq_literals" (formula "31") (term "0"))
               (rule "concrete_or_1" (formula "31"))
               (rule "true_left" (formula "31"))
               (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "28"))
               (rule "times_zero_1" (formula "26") (term "0,0"))
               (rule "add_zero_left" (formula "26") (term "0"))
               (rule "inEqSimp_subsumption6" (formula "26") (ifseqformula "15"))
               (rule "mul_literals" (formula "26") (term "1,1,0"))
               (rule "greater_literals" (formula "26") (term "0,0"))
               (rule "concrete_and_1" (formula "26") (term "0"))
               (rule "leq_literals" (formula "26") (term "0"))
               (rule "concrete_or_1" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "commute_or" (formula "14") (term "0,0"))
               (rule "commute_or" (formula "17") (term "0,0"))
               (rule "commute_or" (formula "34") (term "0,0,1,1,0"))
               (rule "shift_paren_or" (formula "18") (term "0,1,0"))
               (rule "commute_and" (formula "35") (term "1,0,0,0,1,1,0"))
               (rule "methodCallEmpty" (formula "47") (term "1"))
               (rule "simplifyUpdate2" (formula "47"))
               (rule "div_axiom" (formula "39") (term "1,0") (inst "quotient=quotient_1"))
               (rule "qeq_literals" (formula "39") (term "0,1,1"))
               (rule "ifthenelse_true_for" (formula "39") (term "1,1"))
               (rule "equal_literals" (formula "39") (term "0"))
               (rule "concrete_or_2" (formula "39"))
               (rule "mul_literals" (formula "39") (term "1,1,1"))
               (rule "andLeft" (formula "39"))
               (rule "andLeft" (formula "39"))
               (rule "polySimp_addComm1" (formula "41") (term "1"))
               (rule "add_literals" (formula "41") (term "0,1"))
               (rule "inEqSimp_commuteLeq" (formula "40"))
               (rule "inEqSimp_homoInEq1" (formula "41"))
               (rule "polySimp_mulLiterals" (formula "41") (term "1,0"))
               (rule "polySimp_addComm1" (formula "41") (term "0"))
               (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "39"))
               (rule "applyEq" (formula "42") (term "0,1,2,0") (ifseqformula "39"))
               (rule "polySimp_addComm0" (formula "42") (term "2,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "41"))
               (rule "polySimp_mulComm0" (formula "41") (term "1"))
               (rule "polySimp_rightDist" (formula "41") (term "1"))
               (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
               (rule "mul_literals" (formula "41") (term "0,1"))
               (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "41"))
               (rule "mul_literals" (formula "49") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "49") (term "0"))
               (rule "add_literals" (formula "49") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "49"))
               (rule "mul_literals" (formula "49") (term "1"))
               (rule "elimGcdGeq_antec" (formula "49") (inst "elimGcdRightDiv=Z(neglit(4(2(8(1(4(7(3(7(0(1(#))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "49") (term "0,0"))
               (rule "concrete_or_2" (formula "49") (term "0"))
               (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0"))
               (rule "polySimp_addLiterals" (formula "49") (term "0,0,0,0"))
               (rule "add_literals" (formula "49") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0"))
               (rule "add_literals" (formula "49") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "49") (term "1,0,0"))
               (rule "add_zero_right" (formula "49") (term "0,0"))
               (rule "leq_literals" (formula "49") (term "0"))
               (rule "concrete_or_2" (formula "49"))
               (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "41"))
               (rule "polySimp_rightDist" (formula "46") (term "0,0"))
               (rule "mul_literals" (formula "46") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "46") (term "0"))
               (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
               (rule "add_literals" (formula "46") (term "0,0,0"))
               (rule "add_zero_left" (formula "46") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "46"))
               (rule "polySimp_mulLiterals" (formula "46") (term "0"))
               (rule "polySimp_elimOne" (formula "46") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "49"))
               (rule "polySimp_mulAssoc" (formula "40") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "40") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "0,0"))
               (rule "polySimp_addComm0" (formula "40") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "40"))
               (rule "polySimp_mulLiterals" (formula "40") (term "0"))
               (rule "elimGcdLeq_antec" (formula "40") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0,1,0"))
               (rule "neg_literal" (formula "40") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
               (rule "leq_literals" (formula "40") (term "0,0"))
               (rule "concrete_or_2" (formula "40") (term "0"))
               (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "40") (term "0,0,0,0"))
               (rule "add_literals" (formula "40") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
               (rule "add_literals" (formula "40") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "40") (term "1,0,0"))
               (rule "add_zero_right" (formula "40") (term "0,0"))
               (rule "qeq_literals" (formula "40") (term "0"))
               (rule "concrete_or_2" (formula "40"))
               (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "47"))
               (rule "times_zero_1" (formula "45") (term "0,0"))
               (rule "add_zero_left" (formula "45") (term "0"))
               (rule "elimGcdGeq_antec" (formula "45") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
               (rule "leq_literals" (formula "45") (term "0,0"))
               (rule "concrete_or_2" (formula "45") (term "0"))
               (rule "add_zero_right" (formula "45") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
               (rule "times_zero_1" (formula "45") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "45") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
               (rule "add_literals" (formula "45") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "45") (term "1,0,0"))
               (rule "add_zero_right" (formula "45") (term "0,0"))
               (rule "leq_literals" (formula "45") (term "0"))
               (rule "concrete_or_2" (formula "45"))
               (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "45"))
               (rule "leq_literals" (formula "52") (term "0"))
               (rule "concrete_or_1" (formula "52"))
               (rule "true_left" (formula "52"))
               (rule "commute_or_2" (formula "14") (term "0"))
               (rule "commute_or_2" (formula "17") (term "0"))
               (rule "commute_and" (formula "35") (term "1,0,0,0,0,1,1,0"))
               (rule "ifUnfold" (formula "58") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "58") (term "1") (newnames "x_5"))
               (rule "commute_or_2" (formula "18") (term "0,0,1,0"))
               (rule "inEqSimp_or_weaken2" (formula "18") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "1,0,1,0,1,0"))
               (rule "add_literals" (formula "18") (term "0,1,0,1,0,1,0"))
               (rule "add_zero_left" (formula "18") (term "1,0,1,0,1,0"))
               (rule "eqClose" (formula "18") (term "0,1,0,1,0"))
               (rule "ifthenelse_true_for" (formula "18") (term "1,0,1,0"))
               (rule "div_axiom" (formula "2") (term "1,0") (inst "quotient=quotient_2"))
               (rule "mul_literals" (formula "2") (term "1,1,1,1,1"))
               (rule "equal_literals" (formula "2") (term "0"))
               (rule "concrete_or_2" (formula "2"))
               (rule "qeq_literals" (formula "2") (term "0,1"))
               (rule "ifthenelse_true_for" (formula "2") (term "1"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "polySimp_addComm1" (formula "4") (term "1"))
               (rule "add_literals" (formula "4") (term "0,1"))
               (rule "inEqSimp_commuteLeq" (formula "3"))
               (rule "inEqSimp_homoInEq1" (formula "4"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "5") (term "0,1,2,0") (ifseqformula "2"))
               (rule "polySimp_addComm0" (formula "5") (term "2,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1"))
               (rule "polySimp_rightDist" (formula "4") (term "1"))
               (rule "mul_literals" (formula "4") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "4"))
               (rule "mul_literals" (formula "13") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0"))
               (rule "add_literals" (formula "13") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "13"))
               (rule "mul_literals" (formula "13") (term "1"))
               (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(neglit(4(2(8(1(4(7(3(7(0(1(#))))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(2(#))"))
               (rule "leq_literals" (formula "13") (term "0,0"))
               (rule "concrete_or_2" (formula "13") (term "0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
               (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
               (rule "add_literals" (formula "13") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0"))
               (rule "leq_literals" (formula "13") (term "0"))
               (rule "concrete_or_2" (formula "13"))
               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
               (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
               (rule "polySimp_addComm0" (formula "3") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
               (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "3") (term "0,0"))
               (rule "concrete_or_2" (formula "3") (term "0"))
               (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
               (rule "add_literals" (formula "3") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "3") (term "1,0,0"))
               (rule "add_zero_right" (formula "3") (term "0,0"))
               (rule "qeq_literals" (formula "3") (term "0"))
               (rule "concrete_or_2" (formula "3"))
               (rule "emptyModality" (formula "58") (term "1"))
               (rule "notRight" (formula "58"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "simplifyUpdate1" (formula "1") (term "1"))
               (rule "applyOnPV" (formula "1") (term "0"))
               (rule "ifthenelse_concrete3" (formula "1"))
               (rule "boolean_not_equal_2" (formula "1") (term "1"))
               (rule "concrete_or_4" (formula "1"))
               (rule "jmod_axiom" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0"))
               (rule "mul_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "58") (ifseqformula "1"))
               (rule "leq_literals" (formula "58") (term "0"))
               (rule "concrete_or_1" (formula "58"))
               (rule "true_left" (formula "58"))
               (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "1"))
               (rule "polySimp_mulAssoc" (formula "48") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "48") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "48") (term "0,0"))
               (rule "polySimp_addComm0" (formula "48") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "48"))
               (rule "polySimp_mulLiterals" (formula "48") (term "0"))
               (rule "elimGcdLeq_antec" (formula "48") (inst "elimGcdRightDiv=Z(5(5(4(5(3(4(8(6(2(#))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
               (rule "neg_literal" (formula "48") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "48") (term "0,0"))
               (rule "concrete_or_2" (formula "48") (term "0"))
               (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "48") (term "0,0,0,0"))
               (rule "add_literals" (formula "48") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
               (rule "add_literals" (formula "48") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "48") (term "1,0,0"))
               (rule "add_zero_right" (formula "48") (term "0,0"))
               (rule "qeq_literals" (formula "48") (term "0"))
               (rule "concrete_or_2" (formula "48"))
               (rule "inEqSimp_subsumption0" (formula "47") (ifseqformula "48"))
               (rule "leq_literals" (formula "47") (term "0"))
               (rule "concrete_or_1" (formula "47"))
               (rule "true_left" (formula "47"))
               (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "56") (term "0,0"))
               (rule "mul_literals" (formula "56") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "56") (term "0"))
               (rule "add_literals" (formula "56") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "56"))
               (rule "polySimp_mulLiterals" (formula "56") (term "0"))
               (rule "polySimp_elimOne" (formula "56") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "54") (ifseqformula "56"))
               (rule "leq_literals" (formula "54") (term "0"))
               (rule "concrete_or_1" (formula "54"))
               (rule "true_left" (formula "54"))
               (rule "commute_or" (formula "25") (term "0,0,1,0"))
               (rule "all_pull_out3" (formula "41") (term "1,0"))
               (rule "less_than_comparison_simple" (formula "63") (term "1"))
               (rule "sequentialToParallel2" (formula "63"))
               (rule "simplifyUpdate3" (formula "63") (term "1,0"))
               (rule "applyOnElementary" (formula "63") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "63") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "63") (term "2,0,1,0"))
               (rule "simplifyUpdate1" (formula "63") (term "1,0,1,0"))
               (rule "applyOnRigidFormula" (formula "63") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "63") (term "1,0,0,1,0"))
               (rule "simplifyUpdate1" (formula "63") (term "0,0,0,1,0"))
               (rule "applyOnPV" (formula "63") (term "1,0,0,1,0"))
               (rule "applyOnPV" (formula "63") (term "0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,1,0"))
               (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,1,0"))
               (rule "add_literals" (formula "63") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "63") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "63") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "63") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "63") (term "0,0,0,1,0"))
               (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,1,1,0"))
               (rule "shift_paren_or" (formula "41") (term "0,1,0"))
               (rule "shift_paren_or" (formula "41") (term "0,0,1,0"))
               (rule "commute_or_2" (formula "41") (term "0,0,0,1,0"))
               (rule "commute_or" (formula "42") (term "0,0,0,0,0,1,1,0"))
               (rule "all_pull_out3" (formula "25") (term "0"))
               (rule "shift_paren_or" (formula "25") (term "0,0"))
               (rule "shift_paren_or" (formula "25") (term "0,0,0"))
               (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
               (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
               (rule "cnf_rightDist" (formula "42") (term "1,0,0,0,0,1,1,0"))
               (rule "commute_or" (formula "42") (term "1,1,0,0,0,0,1,1,0"))
               (rule "commute_or" (formula "42") (term "0,1,0,0,0,0,1,1,0"))
               (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,0,1,1,0"))
               (rule "eq_or" (formula "42") (term "0,0,0,0,0,0,1,1,0"))
               (rule "commute_or" (formula "42") (term "1,0,0,0,0,0,1,1,0"))
               (rule "all_pull_out3" (formula "41") (term "0"))
               (rule "shift_paren_or" (formula "41") (term "0,0"))
               (rule "shift_paren_or" (formula "41") (term "0,0,0"))
               (rule "shift_paren_or" (formula "41") (term "0,0,0,0"))
               (rule "commute_or_2" (formula "41") (term "0,0,0,0,0"))
               (rule "commute_or" (formula "41") (term "0,0,0,0,0,0"))
               (rule "shift_paren_and" (formula "42") (term "0,0,0,0,1,1,0"))
               (rule "cnf_rightDist" (formula "42") (term "0,0,0,1,1,0"))
               (rule "commute_or" (formula "42") (term "0,0,0,0,1,1,0"))
               (rule "cnf_rightDist" (formula "42") (term "1,0,0,0,1,1,0"))
               (rule "commute_or_2" (formula "42") (term "1,1,0,0,0,1,1,0"))
               (rule "eq_or" (formula "42") (term "0,1,1,0,0,0,1,1,0"))
               (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,1,1,0"))
               (rule "commute_or_2" (formula "42") (term "1,0,0,0,0,1,1,0"))
               (rule "commute_or" (formula "42") (term "0,1,0,0,0,0,1,1,0"))
               (rule "cnf_rightDist" (formula "42") (term "0,1,0,0,0,1,1,0"))
               (rule "eq_or_2" (formula "42") (term "1,0,1,0,0,0,1,1,0"))
               (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,0,1,1,0"))
               (rule "commute_or_2" (formula "42") (term "1,0,0,0,0,0,1,1,0"))
               (rule "cnf_rightDist" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
               (rule "commute_or" (formula "42") (term "0,0,0,1,0,0,0,1,1,0"))
               (rule "commute_or_2" (formula "42") (term "1,0,0,1,0,0,0,1,1,0"))
               (rule "allLeft" (formula "24") (inst "t=i_1"))
               (rule "replace_known_left" (formula "24") (term "0,0,0,0") (ifseqformula "41"))
               (rule "concrete_not_1" (formula "24") (term "0,0,0"))
               (rule "concrete_or_2" (formula "24") (term "0,0"))
               (rule "inEqSimp_contradInEq0" (formula "24") (term "1") (ifseqformula "40"))
               (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
               (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
               (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "24") (term "0,0,1"))
               (rule "leq_literals" (formula "24") (term "0,1"))
               (rule "concrete_and_2" (formula "24") (term "1"))
               (rule "concrete_or_4" (formula "24"))
               (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "39"))
               (rule "qeq_literals" (formula "24") (term "0,1"))
               (rule "concrete_and_2" (formula "24") (term "1"))
               (rule "concrete_or_4" (formula "24"))
               (rule "cnf_rightDist" (formula "43") (term "0,0,0,0,0,0,1,1,0"))
               (rule "commute_or_2" (formula "43") (term "1,0,0,0,0,0,0,1,1,0"))
               (rule "commute_or" (formula "43") (term "0,0,0,0,0,0,0,1,1,0"))
               (rule "shift_paren_and" (formula "43") (term "0,0,0,1,1,0"))
               (rule "shift_paren_and" (formula "43") (term "0,0,0,0,1,1,0"))
               (rule "ifSplit" (formula "64"))
               (branch "if x_5 true"
                  (rule "simplifyUpdate2" (formula "65"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "applyOnPV" (formula "1") (term "0"))
                  (rule "simplifyUpdate1" (formula "1") (term "1"))
                  (rule "ifthenelse_concrete3" (formula "1"))
                  (rule "boolean_not_equal_2" (formula "1") (term "1"))
                  (rule "concrete_or_4" (formula "1"))
                  (rule "jmod_axiom" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                  (rule "compound_assignment_op_shiftleft" (formula "64") (term "1"))
                  (rule "compound_int_cast_expression" (formula "64") (term "1") (inst "#v=x"))
                  (rule "variableDeclarationAssign" (formula "64") (term "1"))
                  (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_6"))
                  (rule "remove_parentheses_right" (formula "64") (term "1"))
                  (rule "compound_shiftleft_2" (formula "64") (term "1") (inst "#v1=x_8") (inst "#v0=x_7"))
                  (rule "variableDeclarationAssign" (formula "64") (term "1"))
                  (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_7"))
                  (rule "assignment" (formula "64") (term "1"))
                  (rule "sequentialToParallel2" (formula "64"))
                  (rule "simplifyUpdate3" (formula "64") (term "1,0"))
                  (rule "applyOnElementary" (formula "64") (term "1,0"))
                  (rule "applyOnPV" (formula "64") (term "0,1,0"))
                  (rule "variableDeclarationAssign" (formula "64") (term "1"))
                  (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_8"))
                  (rule "remove_parentheses_right" (formula "64") (term "1"))
                  (rule "assignment" (formula "64") (term "1"))
                  (rule "sequentialToParallel2" (formula "64"))
                  (rule "simplifyUpdate3" (formula "64") (term "1,0"))
                  (rule "assignmentShiftLeftInt" (formula "64") (term "1"))
                  (rule "translateJavaShiftLeftInt" (formula "64") (term "0,0,1"))
                  (rule "sequentialToParallel2" (formula "64"))
                  (rule "simplifyUpdate2" (formula "64"))
                  (rule "simplifyUpdate3" (formula "64") (term "1,0"))
                  (rule "applyOnElementary" (formula "64") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "64") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "64") (term "0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "64") (term "1,0,1,0"))
                  (rule "applyOnPV" (formula "64") (term "0,0,1,0"))
                  (rule "applyOnPV" (formula "64") (term "1,0,1,0"))
                  (rule "javaShiftLeftIntDef" (formula "64") (term "0,1,0"))
                  (rule "mod_axiom" (formula "64") (term "1,0,0,1,0"))
                  (rule "div_literals" (formula "64") (term "0,0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,1,0"))
                  (rule "times_zero_2" (formula "64") (term "1,1,0,0,1,0"))
                  (rule "add_zero_right" (formula "64") (term "1,0,0,1,0"))
                  (rule "shiftLeftDef" (formula "64") (term "0,0,1,0"))
                  (rule "neg_literal" (formula "64") (term "1,1,0,0,1,0"))
                  (rule "less_literals" (formula "64") (term "0,0,0,1,0"))
                  (rule "ifthenelse_false" (formula "64") (term "0,0,1,0"))
                  (rule "pow_literals" (formula "64") (term "1,0,0,1,0"))
                  (rule "expand_moduloInteger" (formula "64") (term "0,1,0"))
                  (rule "replace_int_HALFRANGE" (formula "64") (term "0,0,1,0,1,0"))
                  (rule "replace_int_MIN" (formula "64") (term "0,0,1,0"))
                  (rule "replace_int_RANGE" (formula "64") (term "1,1,0,1,0"))
                  (rule "widening_identity_cast_5" (formula "64") (term "1"))
                  (rule "assignment" (formula "64") (term "1"))
                  (rule "sequentialToParallel2" (formula "64"))
                  (rule "simplifyUpdate2" (formula "64"))
                  (rule "simplifyUpdate3" (formula "64") (term "1,0"))
                  (rule "applyOnElementary" (formula "64") (term "1,0"))
                  (rule "applyOnPV" (formula "64") (term "0,1,0"))
                  (rule "tryEmpty" (formula "64") (term "1"))
                  (rule "methodCallEmpty" (formula "64") (term "1"))
                  (rule "emptyModality" (formula "64") (term "1"))
                  (rule "applyOnRigidFormula" (formula "64"))
                  (rule "simplifyUpdate2" (formula "64") (term "0"))
                  (rule "simplifyUpdate2" (formula "64") (term "1"))
                  (rule "applyOnRigidFormula" (formula "64") (term "0"))
                  (rule "simplifyUpdate2" (formula "64") (term "1,0"))
                  (rule "simplifyUpdate2" (formula "64") (term "0,0"))
                  (rule "applyOnRigidFormula" (formula "64") (term "1"))
                  (rule "simplifyUpdate2" (formula "64") (term "0,1"))
                  (rule "simplifyUpdate2" (formula "64") (term "1,1"))
                  (rule "applyOnRigidFormula" (formula "64") (term "0,0"))
                  (rule "simplifyUpdate1" (formula "64") (term "1,0,0"))
                  (rule "applyOnPV" (formula "64") (term "0,0,0"))
                  (rule "boolean_not_equal_2" (formula "64") (term "0,0"))
                  (rule "concrete_impl_2" (formula "64") (term "0"))
                  (rule "concrete_and_1" (formula "64"))
                  (rule "impRight" (formula "64"))
                  (rule "notLeft" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "65"))
                  (rule "simplifyUpdate2" (formula "65") (term "0"))
                  (rule "applyOnRigidFormula" (formula "60"))
                  (rule "applyOnPV" (formula "60") (term "0"))
                  (rule "simplifyUpdate1" (formula "60") (term "1"))
                  (rule "boolean_not_equal_2" (formula "60"))
                  (rule "false_right" (formula "60"))
                  (rule "applyOnRigidFormula" (formula "64") (term "1"))
                  (rule "simplifyUpdate1" (formula "64") (term "0,1"))
                  (rule "simplifyUpdate1" (formula "64") (term "1,1"))
                  (rule "applyOnPV" (formula "64") (term "1,1"))
                  (rule "applyOnRigidFormula" (formula "64") (term "0"))
                  (rule "simplifyUpdate2" (formula "64") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "64") (term "0,1"))
                  (rule "simplifyUpdate1" (formula "64") (term "0,0,1"))
                  (rule "applyOnRigidFormula" (formula "64") (term "0,0"))
                  (rule "simplifyUpdate1" (formula "64") (term "1,0,0"))
                  (rule "simplifyUpdate1" (formula "64") (term "0,0,0"))
                  (rule "applyOnRigidFormula" (formula "64") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "64") (term "1,0,1"))
                  (rule "simplifyUpdate1" (formula "64") (term "1,1,0,1"))
                  (rule "applyOnRigidTerm" (formula "64") (term "1,0,0"))
                  (rule "simplifyUpdate1" (formula "64") (term "0,1,0,0"))
                  (rule "applyOnPV" (formula "64") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "64") (term "1,0,0"))
                  (rule "add_literals" (formula "64") (term "0,1,0,0"))
                  (rule "applyOnRigidTerm" (formula "64") (term "0,0,0"))
                  (rule "applyOnPV" (formula "64") (term "0,0,0,0"))
                  (rule "simplifyUpdate1" (formula "64") (term "1,0,0,0"))
                  (rule "applyOnRigidFormula" (formula "64") (term "0,1,0"))
                  (rule "applyOnRigidTerm" (formula "64") (term "0,1,0,1"))
                  (rule "simplifyUpdate1" (formula "64") (term "1,0,1,0,1"))
                  (rule "simplifyUpdate1" (formula "64") (term "0,0,1,0,1"))
                  (rule "applyOnRigidFormula" (formula "64") (term "0,0,1,0"))
                  (rule "simplifyUpdate2" (formula "64") (term "0,0,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "64") (term "1,0,1,0"))
                  (rule "applyOnPV" (formula "64") (term "1,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "64") (term "0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "64") (term "1,0,1,0,1"))
                  (rule "applyOnPV" (formula "64") (term "0,1,0,1,0,1"))
                  (rule "simplifyUpdate1" (formula "64") (term "1,1,0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,1,0,1"))
                  (rule "polySimp_rightDist" (formula "64") (term "1,0,1,0,1"))
                  (rule "mul_literals" (formula "64") (term "0,1,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "64") (term "0,1,0,1"))
                  (rule "applyOnRigidFormula" (formula "64") (term "1,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "64") (term "0,1,0,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "64") (term "1,0,1,0,1"))
                  (rule "simplifyUpdate1" (formula "64") (term "0,1,0,1,0,1"))
                  (rule "applyOnPV" (formula "64") (term "1,1,0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "64") (term "1,0,1,0,1"))
                  (rule "add_literals" (formula "64") (term "0,1,0,1,0,1"))
                  (rule "add_zero_left" (formula "64") (term "1,0,1,0,1"))
                  (rule "applyOnRigidTerm" (formula "64") (term "1,1,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "64") (term "0,1,1,0,0,1,0"))
                  (rule "applyOnPV" (formula "64") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "64") (term "1,1,0,0,1,0"))
                  (rule "add_literals" (formula "64") (term "0,1,1,0,0,1,0"))
                  (rule "precOfInt" (formula "64") (term "1"))
                  (rule "inEqSimp_ltToLeq" (formula "64") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,1"))
                  (rule "mul_literals" (formula "64") (term "0,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,1"))
                  (rule "add_literals" (formula "64") (term "0,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,1,1"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,0,1,1"))
                  (rule "add_literals" (formula "64") (term "0,0,0,1,1"))
                  (rule "inEqSimp_homoInEq0" (formula "64") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "64") (term "0,1"))
                  (rule "times_zero_2" (formula "64") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "64") (term "0,0,1"))
                  (rule "mod_axiom" (formula "64") (term "1,1,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "64") (term "1,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,1,1,0,1,0"))
                  (rule "add_literals" (formula "64") (term "0,0,1,1,0,1,0"))
                  (rule "add_zero_left" (formula "64") (term "0,1,1,0,1,0"))
                  (rule "mod_axiom" (formula "64") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "64") (term "1,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,1,1,0,0,1,0"))
                  (rule "add_literals" (formula "64") (term "0,0,1,1,0,0,1,0"))
                  (rule "jmod_axiom" (formula "64") (term "1,0,1,0,1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,1,0,1,0,1,1"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,1,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,1,0,0,1,0,1,1"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,0,1,0,0,1,0,1,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,1,0,0,1,0,1,1"))
                  (rule "add_literals" (formula "64") (term "1,1,0,1,0,0,1,0,1,1"))
                  (rule "polySimp_elimOne" (formula "64") (term "1,0,1,0,0,1,0,1,1"))
                  (rule "jmod_axiom" (formula "64") (term "1,0,0,1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,0,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,0,0,0,1,0,0,1,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,0,0,1,0,0,1,1"))
                  (rule "add_literals" (formula "64") (term "1,1,0,0,0,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0,1,0,0,1,1"))
                  (rule "mod_axiom" (formula "64") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "64") (term "0,0,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "64") (term "0,0,0,1,0,0,0,0"))
                  (rule "jmod_axiom" (formula "64") (term "1,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,0,1,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,1,0,0,0"))
                  (rule "add_literals" (formula "64") (term "1,1,0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "64") (term "1,0,1,0,0,0"))
                  (rule "jmod_axiom" (formula "64") (term "1,0,1,0,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,1,0,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,1,0,0,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,0,1,0,0,1,0,0,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,1,0,0,1,0,0,1"))
                  (rule "add_literals" (formula "64") (term "1,1,0,1,0,0,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "64") (term "1,0,1,0,0,1,0,0,1"))
                  (rule "mod_axiom" (formula "64") (term "0,1,0,1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0,1,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,1,0,1,1"))
                  (rule "polySimp_rightDist" (formula "64") (term "1,0,1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,1,0,1,1"))
                  (rule "polySimp_rightDist" (formula "64") (term "0,1,0,1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0,1,0,1,1"))
                  (rule "mul_literals" (formula "64") (term "0,0,1,0,1,0,1,1"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,1,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,1,0,1,1"))
                  (rule "add_literals" (formula "64") (term "0,0,0,0,1,0,1,1"))
                  (rule "add_zero_left" (formula "64") (term "0,0,0,1,0,1,1"))
                  (rule "mod_axiom" (formula "64") (term "0,1,0,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "64") (term "1,0,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "64") (term "0,1,0,1,0,0,1"))
                  (rule "mul_literals" (formula "64") (term "0,0,1,0,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,1,0,0,1"))
                  (rule "add_literals" (formula "64") (term "0,0,0,0,1,0,0,1"))
                  (rule "add_zero_left" (formula "64") (term "0,0,0,1,0,0,1"))
                  (rule "mod_axiom" (formula "64") (term "1,0,1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,1,0,1,1"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,1,0,1,1"))
                  (rule "polySimp_addComm0" (formula "64") (term "0,0,1,0,1,1"))
                  (rule "mod_axiom" (formula "64") (term "1,0,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "64") (term "0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "64") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,1,1"))
                  (rule "polySimp_rightDist" (formula "64") (term "1,1,1"))
                  (rule "mul_literals" (formula "64") (term "0,1,1,1"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,1"))
                  (rule "polySimp_elimOne" (formula "64") (term "1,1,1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,1"))
                  (rule "mul_literals" (formula "64") (term "1,0,1"))
                  (rule "polyMod_pullOut" (formula "64") (term "0,0,1") (inst "polyDivCoeff=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
        mul(result_1_0, Z(2(#)))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,0,0,1"))
                  (rule "add_literals" (formula "64") (term "1,1,0,0,0,1"))
                  (rule "times_zero_1" (formula "64") (term "1,0,0,0,1"))
                  (rule "add_zero_right" (formula "64") (term "0,0,0,1"))
                  (rule "polyMod_pullOut" (formula "64") (term "0,1,1") (inst "polyDivCoeff=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
        mul(result_1_0, Z(2(#)))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,1,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,0,1,1"))
                  (rule "add_literals" (formula "64") (term "1,1,0,0,1,1"))
                  (rule "times_zero_1" (formula "64") (term "1,0,0,1,1"))
                  (rule "add_zero_right" (formula "64") (term "0,0,1,1"))
                  (rule "polyMod_pullOut" (formula "64") (term "0,1,1") (inst "polyDivCoeff=mul(div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                expectedMaxSize),
            jdiv(expectedMaxSize, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,0,1,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,0,0,1,1"))
                  (rule "add_literals" (formula "64") (term "1,1,0,0,0,1,1"))
                  (rule "times_zero_1" (formula "64") (term "1,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "64") (term "0,0,0,1,1"))
                  (rule "polyMod_pullOut" (formula "64") (term "0,0,1") (inst "polyDivCoeff=mul(div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                expectedMaxSize),
            jdiv(expectedMaxSize, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,0,0,0,1"))
                  (rule "add_literals" (formula "64") (term "1,1,0,0,0,0,1"))
                  (rule "times_zero_1" (formula "64") (term "1,0,0,0,0,1"))
                  (rule "add_zero_right" (formula "64") (term "0,0,0,0,1"))
                  (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "44") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "14"))
                  (rule "insert_constant_value" (formula "44") (term "1,1,0,0,0,0,0"))
                  (rule "insert_constant_value" (formula "44") (term "0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "insert_constant_value" (formula "44") (term "0,0,1,0,1,0,0,0,0,0,0,0,0"))
                  (rule "insert_constant_value" (formula "44") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "eqClose" (formula "44") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "concrete_and_3" (formula "44") (term "0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "insert_constant_value" (formula "44") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "eqClose" (formula "44") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "concrete_and_3" (formula "44") (term "0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "insert_constant_value" (formula "44") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "eqClose" (formula "44") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "concrete_and_3" (formula "44") (term "0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,0,1,0,0,0,0,0,0,0,0"))
                  (rule "andLeft" (formula "44"))
                  (rule "andLeft" (formula "44"))
                  (rule "andLeft" (formula "44"))
                  (rule "andLeft" (formula "44"))
                  (rule "andLeft" (formula "44"))
                  (rule "andLeft" (formula "44"))
                  (rule "andLeft" (formula "44"))
                  (rule "andLeft" (formula "44"))
                  (rule "andLeft" (formula "44"))
                  (rule "andLeft" (formula "44"))
                  (rule "andLeft" (formula "46"))
                  (rule "andLeft" (formula "44"))
                  (rule "notLeft" (formula "46"))
                  (rule "andLeft" (formula "46"))
                  (rule "notLeft" (formula "45"))
                  (rule "notLeft" (formula "45"))
                  (rule "exLeft" (formula "52") (inst "sk=i_1_0"))
                  (rule "andLeft" (formula "52"))
                  (rule "andLeft" (formula "52"))
                  (rule "exLeft" (formula "51") (inst "sk=i_2_0"))
                  (rule "andLeft" (formula "51"))
                  (rule "andLeft" (formula "51"))
                  (rule "eqSymm" (formula "50"))
                  (rule "eqSymm" (formula "48") (term "1,0,1,0,1,0"))
                  (rule "eqSymm" (formula "48") (term "1,1,0,1,0"))
                  (rule "eqSymm" (formula "53"))
                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "0,2,1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "0,2,1,1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "0,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "0,2,0,0,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "1,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "0,2,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "0,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "57") (term "0,2,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "57") (term "0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "57") (term "0,2,1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "57") (term "0,2,1,1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "57") (term "0,2,0,0,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "0,2,0,0,0,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "0,2,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "0,2,0,0,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "0,2,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "0,2,1,1,0,1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "49"))
                  (rule "mul_literals" (formula "49") (term "1,0,0"))
                  (rule "add_literals" (formula "49") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "55"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "55") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "52"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "52") (term "0"))
                  (rule "ifthenelse_negated" (formula "50") (term "2,0"))
                  (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "58") (term "0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "58") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_mulAssoc" (formula "58") (term "1,0,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "0,1,0,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "57") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "57") (term "0,1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0"))
                  (rule "inEqSimp_commuteGeq" (formula "46"))
                  (rule "inEqSimp_commuteLeq" (formula "45"))
                  (rule "inEqSimp_commuteLeq" (formula "54"))
                  (rule "inEqSimp_commuteLeq" (formula "51"))
                  (rule "inEqSimp_commuteLeq" (formula "58") (term "0,1,0,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,1,1,0"))
                  (rule "applyEq" (formula "57") (term "2,0,1,0,0,0,1,1,0") (ifseqformula "38"))
                  (rule "applyEq" (formula "45") (term "0") (ifseqformula "38"))
                  (rule "applyEq" (formula "56") (term "2,0,1,0,1,0,1,0") (ifseqformula "38"))
                  (rule "applyEq" (formula "51") (term "0,1,0") (ifseqformula "38"))
                  (rule "applyEq" (formula "57") (term "2,1,0,0,0,0,1,1,0") (ifseqformula "38"))
                  (rule "applyEq" (formula "45") (term "0") (ifseqformula "38"))
                  (rule "applyEq" (formula "57") (term "2,0,1,0,1,0,1,0") (ifseqformula "52"))
                  (rule "applyEq" (formula "38") (term "0") (ifseqformula "52"))
                  (rule "applyEq" (formula "49") (term "0,1,0") (ifseqformula "52"))
                  (rule "applyEq" (formula "54") (term "0,0,1,0") (ifseqformula "52"))
                  (rule "applyEq" (formula "47") (term "0,0,1,0,0,1,0,0") (ifseqformula "52"))
                  (rule "applyEq" (formula "57") (term "0,0,1,0,0,1,0,0") (ifseqformula "52"))
                  (rule "applyEq" (formula "56") (term "0,0,1,0,0,1,0,0") (ifseqformula "52"))
                  (rule "applyEq" (formula "46") (term "0,0,1,0,0,1,0,0") (ifseqformula "52"))
                  (rule "applyEq" (formula "57") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "52"))
                  (rule "applyEq" (formula "47") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "52"))
                  (rule "applyEqRigid" (formula "52") (term "1") (ifseqformula "38"))
                  (rule "applyEqRigid" (formula "54") (term "0,0,1,0") (ifseqformula "38"))
                  (rule "applyEqRigid" (formula "57") (term "2,0,1,0,1,0,1,0") (ifseqformula "38"))
                  (rule "applyEqRigid" (formula "49") (term "0,1,0") (ifseqformula "38"))
                  (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "32"))
                  (rule "applyEqRigid" (formula "53") (term "0,1,0") (ifseqformula "32"))
                  (rule "polySimp_addComm1" (formula "53") (term "0"))
                  (rule "applyEq" (formula "47") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                  (rule "applyEq" (formula "56") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                  (rule "applyEqRigid" (formula "47") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "38"))
                  (rule "applyEqRigid" (formula "46") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                  (rule "applyEqRigid" (formula "55") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                  (rule "applyEqRigid" (formula "56") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "38"))
                  (rule "applyEq" (formula "47") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "32"))
                  (rule "applyEq" (formula "56") (term "0,1,0,0,1,0,0") (ifseqformula "32"))
                  (rule "applyEq" (formula "47") (term "0,1,0,0,1,0,0") (ifseqformula "32"))
                  (rule "applyEqRigid" (formula "55") (term "0,1,0,0,1,0,0") (ifseqformula "32"))
                  (rule "applyEqRigid" (formula "46") (term "0,1,0,0,1,0,0") (ifseqformula "32"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "55") (term "0,1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                  (rule "mul_literals" (formula "48") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "55") (term "1,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "55") (term "0,1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "54") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "54") (term "0,1,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                  (rule "polySimp_elimOne" (formula "49") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "55") (term "0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1"))
                  (rule "polySimp_rightDist" (formula "52") (term "1"))
                  (rule "mul_literals" (formula "52") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "47") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "55") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "47") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "54") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "46") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0"))
                  (rule "inEqSimp_subsumption0" (formula "45") (ifseqformula "19"))
                  (rule "leq_literals" (formula "45") (term "0"))
                  (rule "concrete_or_1" (formula "45"))
                  (rule "true_left" (formula "45"))
                  (rule "nonNull" (formula "44") (inst "i=i"))
                  (rule "sub_literals" (formula "44") (term "2,1,0,1,1"))
                  (rule "nonNullZero" (formula "44") (term "1,0,1,1"))
                  (rule "greater_literals" (formula "44") (term "0,1"))
                  (rule "concrete_impl_1" (formula "44") (term "1"))
                  (rule "andLeft" (formula "44"))
                  (rule "notLeft" (formula "44"))
                  (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                  (rule "applyEq" (formula "44") (term "0,1,0,0,1,0,0") (ifseqformula "49"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0"))
                  (rule "elimGcdLeq" (formula "54") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                  (rule "mul_literals" (formula "54") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,0,1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0,1,1,0,0,1,1,0"))
                  (rule "sub_literals" (formula "54") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,1,0,1,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "54") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "54") (term "1,0,1,0,1,1,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "54") (term "0,1,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0,0,1,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "54") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "54") (term "1,0,0,0,1,1,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "54") (term "0,0,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "54") (term "0,0,1,0,1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "54") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "54") (term "0,1,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "54") (term "0,0,1,0,1,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "54") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,1,0,1,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "54") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "54") (term "1,0,1,0,1,1,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "54") (term "0,1,0,1,1,0,0,1,1,0"))
                  (rule "qeq_literals" (formula "54") (term "1,0,1,1,0,0,1,1,0"))
                  (rule "concrete_and_3" (formula "54") (term "0,1,1,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,1,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "54") (term "0,0,0,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "54") (term "0,0,0,1,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "54") (term "0,0,0,0,1,1,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "54") (term "0,0,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0" (formula "54") (term "0,0,1,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "54") (term "1,0,0,1,1,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "54") (term "0,0,1,1,0,0,1,1,0"))
                  (rule "leq_literals" (formula "54") (term "0,1,1,0,0,1,1,0"))
                  (rule "ifthenelse_true_for" (formula "54") (term "1,1,0,0,1,1,0"))
                  (rule "elimGcdGeq" (formula "54") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                  (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0,0,1,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "54") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,0,0,1,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "54") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0,0,1,0,0,1,1,0"))
                  (rule "sub_literals" (formula "54") (term "0,0,0,0,0,0,0,1,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "54") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "54") (term "1,0,0,0,0,0,0,1,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "54") (term "0,0,1,0,0,1,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "54") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0" (formula "54") (term "0,1,0,0,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "54") (term "1,0,1,0,0,1,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "54") (term "0,1,0,0,1,0,0,1,1,0"))
                  (rule "leq_literals" (formula "54") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "concrete_and_3" (formula "54") (term "0,0,1,0,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0,0,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "54") (term "1,1,0,0,0,1,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "54") (term "1,0,0,0,1,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "54") (term "0,0,0,1,0,0,1,1,0"))
                  (rule "qeq_literals" (formula "54") (term "0,0,1,0,0,1,1,0"))
                  (rule "ifthenelse_true_for" (formula "54") (term "0,1,0,0,1,1,0"))
                  (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "31"))
                  (rule "polySimp_rightDist" (formula "48") (term "0,0"))
                  (rule "mul_literals" (formula "48") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "48") (term "0"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0"))
                  (rule "add_zero_left" (formula "48") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                  (rule "polySimp_elimOne" (formula "48") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "52"))
                  (rule "times_zero_1" (formula "51") (term "0,0"))
                  (rule "add_zero_left" (formula "51") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                  (rule "mul_literals" (formula "51") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "51") (ifseqformula "22"))
                  (rule "leq_literals" (formula "51") (term "0"))
                  (rule "concrete_or_1" (formula "51"))
                  (rule "true_left" (formula "51"))
                  (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "19"))
                  (rule "polySimp_rightDist" (formula "49") (term "0,0"))
                  (rule "mul_literals" (formula "49") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "49") (term "0"))
                  (rule "add_literals" (formula "49") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                  (rule "polySimp_elimOne" (formula "49") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "48"))
                  (rule "times_zero_1" (formula "47") (term "0,0"))
                  (rule "add_zero_left" (formula "47") (term "0"))
                  (rule "inEqSimp_subsumption6" (formula "47") (ifseqformula "22"))
                  (rule "mul_literals" (formula "47") (term "1,1,0"))
                  (rule "greater_literals" (formula "47") (term "0,0"))
                  (rule "concrete_and_1" (formula "47") (term "0"))
                  (rule "leq_literals" (formula "47") (term "0"))
                  (rule "concrete_or_1" (formula "47"))
                  (rule "true_left" (formula "47"))
                  (rule "nnf_imp2or" (formula "45") (term "1,0"))
                  (rule "nnf_imp2or" (formula "46") (term "1,0,1,0"))
                  (rule "nnf_imp2or" (formula "55") (term "1,0"))
                  (rule "shift_paren_and" (formula "43") (term "0,0,0,0,0,1,1,0"))
                  (rule "nnf_imp2or" (formula "44") (term "0"))
                  (rule "ifthenelse_split" (formula "8") (term "0"))
                  (branch "expectedMaxSize >= 0 TRUE"
                     (rule "eqSymm" (formula "9"))
                     (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "9"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "9"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                     (rule "applyEq" (formula "77") (term "1,0,0,0,0") (ifseqformula "9"))
                     (rule "polySimp_addComm1" (formula "77") (term "0,0,0,0"))
                     (rule "applyEq" (formula "10") (term "1,0,0") (ifseqformula "9"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                     (rule "applyEq" (formula "65") (term "1,0,0") (ifseqformula "9"))
                     (rule "polySimp_addComm1" (formula "65") (term "0,0"))
                     (rule "applyEq" (formula "77") (term "1,0,0,0,1,1") (ifseqformula "9"))
                     (rule "polySimp_addComm1" (formula "77") (term "0,0,0,1,1"))
                     (rule "applyEq" (formula "77") (term "1,0,0,1,1,1,1") (ifseqformula "9"))
                     (rule "polySimp_addComm1" (formula "77") (term "0,0,1,1,1,1"))
                     (rule "applyEq" (formula "77") (term "1,0,0,0,0,1") (ifseqformula "9"))
                     (rule "polySimp_addComm1" (formula "77") (term "0,0,0,0,1"))
                     (rule "mod_axiom" (formula "3") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "mod_axiom" (formula "2") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "2") (term "0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                     (rule "mod_axiom" (formula "77") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "77") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "77") (term "0,0,0,1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "77") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "77") (term "0,0,0,0,0,0,0"))
                     (rule "mod_axiom" (formula "10") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "10") (term "0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0"))
                     (rule "add_zero_left" (formula "10") (term "0,0,0"))
                     (rule "mod_axiom" (formula "65") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "65") (term "1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "65"))
                     (rule "polySimp_mulComm0" (formula "65") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "65") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "65") (term "0,1,0"))
                     (rule "polySimp_rightDist" (formula "65") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "65") (term "0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "65") (term "0"))
                     (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "65") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0"))
                     (rule "add_literals" (formula "65") (term "0,0,0,0,0"))
                     (rule "mod_axiom" (formula "77") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,1"))
                     (rule "inEqSimp_homoInEq0" (formula "77") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "77") (term "1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,0,1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,0,0,1,0,1,1"))
                     (rule "mul_literals" (formula "77") (term "0,0,0,0,1,0,1,1"))
                     (rule "polySimp_addComm1" (formula "77") (term "0,1,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0,0,1,1"))
                     (rule "add_literals" (formula "77") (term "0,0,0,0,0,0,1,1"))
                     (rule "mod_axiom" (formula "77") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,1"))
                     (rule "inEqSimp_homoInEq1" (formula "77") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,0,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "77") (term "0,0,0,0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0,0,1"))
                     (rule "add_literals" (formula "77") (term "0,0,0,0,0,0,1"))
                     (rule "add_zero_left" (formula "77") (term "0,0,0,0,0,1"))
                     (rule "mod_axiom" (formula "77") (term "1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,1,1"))
                     (rule "polySimp_addComm1" (formula "77") (term "0,1,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "77") (term "0,0,0,0,1,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,0,0,1,1"))
                     (rule "add_literals" (formula "77") (term "1,1,0,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "77") (term "1,0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "77") (term "0,0,0,0,0,1,1"))
                     (rule "polySimp_pullOutFactor2b" (formula "77") (term "0,0,0,0,1,1"))
                     (rule "add_literals" (formula "77") (term "1,1,0,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "77") (term "1,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "77") (term "0,0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "77") (term "0,0,0,0,0,1,1"))
                     (rule "add_literals" (formula "77") (term "0,0,0,0,0,0,1,1"))
                     (rule "polySimp_pullOutFactor2b" (formula "77") (term "0,0,0,0,1,1"))
                     (rule "add_literals" (formula "77") (term "1,1,0,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "77") (term "1,0,0,0,0,1,1"))
                     (rule "add_literals" (formula "77") (term "0,0,0,0,1,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                     (rule "mul_literals" (formula "3") (term "0,0,1"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0,1"))
                     (rule "mul_literals" (formula "2") (term "0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "77") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "77") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "77") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,0,1,0,0"))
                     (rule "mul_literals" (formula "77") (term "0,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "77") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                     (rule "polySimp_mulAssoc" (formula "10") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "65"))
                     (rule "polySimp_mulComm0" (formula "65") (term "1"))
                     (rule "polySimp_rightDist" (formula "65") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "65") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "65") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "65") (term "1,0,1"))
                     (rule "polySimp_elimOne" (formula "65") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "65") (term "0,0,1"))
                     (rule "mul_literals" (formula "65") (term "0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "65") (term "1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "77") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "77") (term "1,0,1,0,1"))
                     (rule "polySimp_mulAssoc" (formula "77") (term "0,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "77") (term "0,0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "0,0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "77") (term "0,0,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "77") (term "1,1,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "1,1,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,1,1,1"))
                     (rule "mul_literals" (formula "77") (term "0,0,1,1,1"))
                     (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "8"))
                     (rule "leq_literals" (formula "18") (term "0"))
                     (rule "concrete_or_1" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "inEqSimp_exactShadow3" (formula "69") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "69") (term "0,0"))
                     (rule "mul_literals" (formula "69") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "69") (term "0"))
                     (rule "polySimp_addComm1" (formula "69") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "69") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0"))
                     (rule "add_literals" (formula "69") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "69"))
                     (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "7"))
                     (rule "times_zero_1" (formula "8") (term "0,0"))
                     (rule "add_zero_left" (formula "8") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                     (rule "mul_literals" (formula "8") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(2(#))"))
                     (rule "leq_literals" (formula "8") (term "0,0"))
                     (rule "concrete_or_2" (formula "8") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0"))
                     (rule "leq_literals" (formula "8") (term "0"))
                     (rule "concrete_or_2" (formula "8"))
                     (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "8"))
                     (rule "leq_literals" (formula "18") (term "0"))
                     (rule "concrete_or_1" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "inEqSimp_exactShadow3" (formula "61") (ifseqformula "2"))
                     (rule "polySimp_mulAssoc" (formula "61") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "61") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "61") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "61") (term "0"))
                     (rule "polySimp_addAssoc" (formula "61") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "61") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "61"))
                     (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "73") (ifseqformula "2"))
                     (rule "mul_literals" (formula "73") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "73") (term "0"))
                     (rule "polySimp_addAssoc" (formula "73") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "73") (term "0,0,0"))
                     (rule "add_literals" (formula "73") (term "0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "73"))
                     (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                     (rule "inEqSimp_subsumption2" (formula "73") (ifseqformula "11"))
                     (rule "eq_and" (formula "73") (term "0,0"))
                     (rule "greater_literals" (formula "73") (term "0,0"))
                     (rule "concrete_and_1" (formula "73") (term "0"))
                     (rule "polySimp_rightDist" (formula "73") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "73") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "73") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "73") (term "0,1,0"))
                     (rule "mul_literals" (formula "73") (term "0,0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "73") (term "0"))
                     (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "73") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "73") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "73") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "73") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "73") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "73") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "73") (term "0,0"))
                     (rule "add_literals" (formula "73") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "73") (term "1,0,0"))
                     (rule "add_zero_right" (formula "73") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "73") (term "0,0"))
                     (rule "add_literals" (formula "73") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "73") (term "1,0,0"))
                     (rule "add_zero_right" (formula "73") (term "0,0"))
                     (rule "qeq_literals" (formula "73") (term "0"))
                     (rule "concrete_or_1" (formula "73"))
                     (rule "true_left" (formula "73"))
                     (rule "inEqSimp_exactShadow0" (formula "3") (ifseqformula "70"))
                     (rule "eq_and" (formula "3") (term "0"))
                     (rule "greater_literals" (formula "3") (term "0"))
                     (rule "concrete_impl_1" (formula "3"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "70"))
                     (rule "mul_literals" (formula "3") (term "0,1,0"))
                     (rule "greater_literals" (formula "3") (term "0,0"))
                     (rule "concrete_and_1" (formula "3") (term "0"))
                     (rule "leq_literals" (formula "3") (term "0"))
                     (rule "concrete_or_1" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_exactShadow0" (formula "3") (ifseqformula "61"))
                     (rule "eq_and" (formula "3") (term "0"))
                     (rule "greater_literals" (formula "3") (term "0"))
                     (rule "concrete_impl_1" (formula "3"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,1,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0"))
                     (rule "add_zero_right" (formula "3") (term "0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "61"))
                     (rule "greater_literals" (formula "3") (term "0,0"))
                     (rule "concrete_and_1" (formula "3") (term "0"))
                     (rule "mul_literals" (formula "3") (term "0,0"))
                     (rule "leq_literals" (formula "3") (term "0"))
                     (rule "concrete_or_1" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "ifthenelse_split" (formula "64") (term "0"))
                     (branch "result_1_0 >= 0 TRUE"
                        (rule "eqSymm" (formula "65"))
                        (rule "applyEqRigid" (formula "58") (term "0") (ifseqformula "65"))
                        (rule "applyEqRigid" (formula "66") (term "0") (ifseqformula "65"))
                        (rule "inEqSimp_homoInEq0" (formula "66"))
                        (rule "polySimp_addComm1" (formula "66") (term "0"))
                        (rule "polySimp_addComm1" (formula "66") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "66"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "74") (ifseqformula "64"))
                        (rule "leq_literals" (formula "74") (term "0"))
                        (rule "concrete_or_1" (formula "74"))
                        (rule "true_left" (formula "74"))
                        (rule "inEqSimp_subsumption0" (formula "58") (ifseqformula "60"))
                        (rule "leq_literals" (formula "58") (term "0"))
                        (rule "concrete_or_1" (formula "58"))
                        (rule "true_left" (formula "58"))
                        (rule "inEqSimp_exactShadow0" (formula "3") (ifseqformula "65"))
                        (rule "eq_and" (formula "3") (term "0"))
                        (rule "greater_literals" (formula "3") (term "0"))
                        (rule "concrete_impl_1" (formula "3"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "3") (term "0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "1,1,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0"))
                        (rule "add_zero_right" (formula "3") (term "0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "60"))
                        (rule "mul_literals" (formula "3") (term "0,1,0"))
                        (rule "greater_literals" (formula "3") (term "0,0"))
                        (rule "concrete_and_1" (formula "3") (term "0"))
                        (rule "leq_literals" (formula "3") (term "0"))
                        (rule "concrete_or_1" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "62"))
                        (rule "times_zero_1" (formula "63") (term "0,0"))
                        (rule "add_zero_left" (formula "63") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "63"))
                        (rule "mul_literals" (formula "63") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "63") (ifseqformula "67"))
                        (rule "times_zero_1" (formula "63") (term "1,1,0"))
                        (rule "greater_literals" (formula "63") (term "0,0"))
                        (rule "concrete_and_1" (formula "63") (term "0"))
                        (rule "leq_literals" (formula "63") (term "0"))
                        (rule "concrete_or_1" (formula "63"))
                        (rule "true_left" (formula "63"))
                        (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "63") (term "0,0"))
                        (rule "add_zero_left" (formula "63") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "63"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "63"))
                        (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                        (rule "add_literals" (formula "11") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "11") (term "1,0,0"))
                        (rule "add_zero_right" (formula "11") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                        (rule "add_literals" (formula "11") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "11") (term "1,0,0"))
                        (rule "add_zero_right" (formula "11") (term "0,0"))
                        (rule "qeq_literals" (formula "11") (term "0"))
                        (rule "concrete_or_1" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "nnf_imp2or" (formula "55") (term "0"))
                        (rule "nnf_imp2or" (formula "44") (term "0"))
                        (rule "nnf_imp2or" (formula "45") (term "0"))
                        (rule "nnf_imp2or" (formula "54") (term "0"))
                        (rule "nnf_notAnd" (formula "43") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0"))
                        (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "43") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                        (rule "mul_literals" (formula "43") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "43") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0"))
                        (rule "div_axiom" (formula "77") (term "0,1,1,1,0,1,0") (inst "quotient=quotient_3"))
                        (rule "equal_literals" (formula "1") (term "0"))
                        (rule "concrete_or_2" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                        (rule "qeq_literals" (formula "1") (term "0,1"))
                        (rule "ifthenelse_true_for" (formula "1") (term "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                        (rule "add_literals" (formula "3") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "3") (term "1"))
                        (rule "add_literals" (formula "3") (term "0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "applyEqRigid" (formula "80") (term "0,1,1,1,0,0,1,0") (ifseqformula "1"))
                        (rule "polySimp_addComm1" (formula "80") (term "1,1,0,0,1,0"))
                        (rule "applyEq" (formula "80") (term "0,1,0,0,0,0") (ifseqformula "1"))
                        (rule "polySimp_addComm0" (formula "80") (term "0,0,0,0"))
                        (rule "applyEq" (formula "80") (term "0,1,1,1,0,1,0") (ifseqformula "1"))
                        (rule "polySimp_addComm0" (formula "80") (term "1,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_3, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=result_1_0") (inst "elimGcd=Z(2(#))"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                        (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "3") (term "0,0"))
                        (rule "concrete_or_2" (formula "3") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0"))
                        (rule "qeq_literals" (formula "3") (term "0"))
                        (rule "concrete_or_2" (formula "3"))
                        (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(neglit(4(2(8(1(4(7(3(7(0(1(#)))))))))))),
    mul(quotient_3, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=result_1_0") (inst "elimGcd=Z(2(#))"))
                        (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "2") (term "0,0"))
                        (rule "concrete_or_2" (formula "2") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "leq_literals" (formula "2") (term "0"))
                        (rule "concrete_or_2" (formula "2"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,0"))
                        (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "2") (term "0,0"))
                        (rule "concrete_or_2" (formula "2") (term "0"))
                        (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                        (rule "concrete_or_2" (formula "2"))
                        (rule "inEqSimp_exactShadow3" (formula "67") (ifseqformula "4"))
                        (rule "times_zero_1" (formula "67") (term "0,0"))
                        (rule "add_zero_left" (formula "67") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "67"))
                        (rule "mul_literals" (formula "67") (term "1"))
                        (rule "elimGcdGeq_antec" (formula "67") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                        (rule "polySimp_mulLiterals" (formula "67") (term "1,0,1,0"))
                        (rule "times_zero_1" (formula "67") (term "1,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "67") (term "0,0"))
                        (rule "concrete_or_2" (formula "67") (term "0"))
                        (rule "polySimp_addLiterals" (formula "67") (term "0,0,0,0"))
                        (rule "add_literals" (formula "67") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "67") (term "0,0"))
                        (rule "add_literals" (formula "67") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "67") (term "1,0,0"))
                        (rule "add_zero_right" (formula "67") (term "0,0"))
                        (rule "leq_literals" (formula "67") (term "0"))
                        (rule "concrete_or_2" (formula "67"))
                        (rule "inEqSimp_exactShadow3" (formula "64") (ifseqformula "4"))
                        (rule "polySimp_mulAssoc" (formula "64") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "64") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "64") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "64"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                        (rule "elimGcdLeq_antec" (formula "64") (inst "elimGcdRightDiv=add(Z(1(1(9(0(7(8(6(3(5(#)))))))))),
    mul(quotient_3, Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                        (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0"))
                        (rule "neg_literal" (formula "64") (term "0,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "64") (term "0,0"))
                        (rule "concrete_or_2" (formula "64") (term "0"))
                        (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,0"))
                        (rule "add_literals" (formula "64") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "64") (term "1,0,0"))
                        (rule "add_zero_right" (formula "64") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "64") (term "0,0,0"))
                        (rule "add_literals" (formula "64") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "64") (term "0,0,0"))
                        (rule "add_literals" (formula "64") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,0"))
                        (rule "add_literals" (formula "64") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "64") (term "1,0,0"))
                        (rule "add_zero_right" (formula "64") (term "0,0"))
                        (rule "qeq_literals" (formula "64") (term "0"))
                        (rule "concrete_or_2" (formula "64"))
                        (rule "inEqSimp_exactShadow3" (formula "77") (ifseqformula "4"))
                        (rule "polySimp_rightDist" (formula "77") (term "0,0"))
                        (rule "mul_literals" (formula "77") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "77") (term "0"))
                        (rule "polySimp_addAssoc" (formula "77") (term "0,0"))
                        (rule "add_literals" (formula "77") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "77"))
                        (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                        (rule "polySimp_elimOne" (formula "77") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "6"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                        (rule "mul_literals" (formula "3") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "67"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=add(Z(neglit(2(1(9(0(7(8(6(3(5(#))))))))))),
    mul(quotient_3, Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                        (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                        (rule "leq_literals" (formula "4") (term "0,0"))
                        (rule "concrete_or_2" (formula "4") (term "0"))
                        (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0"))
                        (rule "add_zero_right" (formula "4") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0"))
                        (rule "add_zero_right" (formula "4") (term "0,0"))
                        (rule "leq_literals" (formula "4") (term "0"))
                        (rule "concrete_or_2" (formula "4"))
                        (rule "inEqSimp_antiSymm" (formula "70") (ifseqformula "2"))
                        (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "70"))
                        (rule "times_zero_2" (formula "6") (term "1,1"))
                        (rule "add_zero_right" (formula "6") (term "1"))
                        (rule "applyEqRigid" (formula "80") (term "0,1,1") (ifseqformula "70"))
                        (rule "mul_literals" (formula "80") (term "1,1"))
                        (rule "add_zero_right" (formula "80") (term "1"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "70"))
                        (rule "leq_literals" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "3") (term "1,1"))
                        (rule "add_zero_right" (formula "3") (term "1"))
                        (rule "applyEqRigid" (formula "70") (term "0") (ifseqformula "69"))
                        (rule "qeq_literals" (formula "70"))
                        (rule "true_left" (formula "70"))
                        (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "69"))
                        (rule "mul_literals" (formula "4") (term "1,1"))
                        (rule "add_zero_right" (formula "4") (term "1"))
                        (rule "applyEqRigid" (formula "65") (term "0,1,1") (ifseqformula "69"))
                        (rule "mul_literals" (formula "65") (term "1,1"))
                        (rule "add_zero_right" (formula "65") (term "1"))
                        (rule "applyEq" (formula "85") (term "0,1,0,1,1,0,0,1,0") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "85") (term "1,0,1,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "85") (term "0,1,1,0,0,1,0"))
                        (rule "applyEqRigid" (formula "85") (term "0,0,0,0,0,0") (ifseqformula "69"))
                        (rule "mul_literals" (formula "85") (term "0,0,0,0,0"))
                        (rule "add_zero_left" (formula "85") (term "0,0,0,0"))
                        (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "69"))
                        (rule "applyEq" (formula "85") (term "0,0,1,1,0,1,0") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "85") (term "0,1,1,0,1,0"))
                        (rule "add_zero_left" (formula "85") (term "1,1,0,1,0"))
                        (rule "applyEqRigid" (formula "2") (term "0,1,0,0,1") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "2") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "2") (term "0,0,1"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "73"))
                        (rule "leq_literals" (formula "3") (term "0"))
                        (rule "concrete_or_1" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "5"))
                        (rule "leq_literals" (formula "4") (term "0"))
                        (rule "concrete_or_1" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "68"))
                        (rule "leq_literals" (formula "3") (term "0"))
                        (rule "concrete_or_1" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "inEqSimp_subsumption0" (formula "62") (ifseqformula "60"))
                        (rule "leq_literals" (formula "62") (term "0"))
                        (rule "concrete_or_1" (formula "62"))
                        (rule "true_left" (formula "62"))
                        (rule "inEqSimp_subsumption2" (formula "2") (ifseqformula "64"))
                        (rule "eq_and" (formula "2") (term "0,0"))
                        (rule "greater_literals" (formula "2") (term "0,0"))
                        (rule "concrete_and_1" (formula "2") (term "0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                        (rule "concrete_or_1" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_subsumption0" (formula "73") (ifseqformula "71"))
                        (rule "leq_literals" (formula "73") (term "0"))
                        (rule "concrete_or_1" (formula "73"))
                        (rule "true_left" (formula "73"))
                        (rule "commute_or_2" (formula "43") (term "0,1,1,0"))
                        (rule "nnf_notAnd" (formula "56") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "56") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "56") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "56") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "56") (term "0,0,0"))
                        (rule "times_zero_1" (formula "56") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "56") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                        (rule "mul_literals" (formula "56") (term "1,0,0,0"))
                        (rule "nnf_imp2or" (formula "56") (term "1,0"))
                        (rule "nnf_notAnd" (formula "45") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "45") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "45") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0"))
                        (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "45") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                        (rule "mul_literals" (formula "45") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "46") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "46") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "46") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0"))
                        (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "46") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                        (rule "mul_literals" (formula "46") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "55") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "55") (term "0,0,0"))
                        (rule "times_zero_1" (formula "55") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "55") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                        (rule "mul_literals" (formula "55") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "55") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "55") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "55") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0"))
                        (rule "nnf_imp2or" (formula "46") (term "0,1,0"))
                        (rule "nnf_notAnd" (formula "55") (term "0,1,0"))
                        (rule "double_not" (formula "55") (term "0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "55") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0,1,0"))
                        (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,1,0"))
                        (rule "add_literals" (formula "55") (term "0,0,0,1,0,1,0"))
                        (rule "add_zero_left" (formula "55") (term "0,0,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,1,0"))
                        (rule "allLeft" (formula "25") (inst "t=i_1_0"))
                        (rule "replace_known_left" (formula "25") (term "0,0,0,0") (ifseqformula "55"))
                        (rule "concrete_not_1" (formula "25") (term "0,0,0"))
                        (rule "concrete_or_2" (formula "25") (term "0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "53"))
                        (rule "qeq_literals" (formula "25") (term "0,1,0"))
                        (rule "concrete_and_2" (formula "25") (term "1,0"))
                        (rule "concrete_or_4" (formula "25") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "54"))
                        (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                        (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "25") (term "0,0,1"))
                        (rule "leq_literals" (formula "25") (term "0,1"))
                        (rule "concrete_and_2" (formula "25") (term "1"))
                        (rule "concrete_or_4" (formula "25"))
                        (rule "nnf_imp2or" (formula "56") (term "0,1,1,0"))
                        (rule "div_axiom" (formula "4") (term "0,0") (inst "quotient=quotient_4"))
                        (rule "mul_literals" (formula "4") (term "1,1,1,1,1"))
                        (rule "equal_literals" (formula "4") (term "0"))
                        (rule "concrete_or_2" (formula "4"))
                        (rule "qeq_literals" (formula "4") (term "0,1"))
                        (rule "ifthenelse_true_for" (formula "4") (term "1"))
                        (rule "andLeft" (formula "4"))
                        (rule "andLeft" (formula "4"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "6") (term "1"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0,1"))
                        (rule "add_literals" (formula "6") (term "0,0,0,1"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                        (rule "add_literals" (formula "6") (term "0,0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "6"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                        (rule "applyEq" (formula "83") (term "0,1,1,0,0") (ifseqformula "4"))
                        (rule "polySimp_addComm1" (formula "83") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "83") (term "0,1,0,0"))
                        (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                        (rule "applyEq" (formula "76") (term "0,0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq0" (formula "76"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "76") (term "0"))
                        (rule "polySimp_addComm1" (formula "76") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "76") (term "0,0,0"))
                        (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "4"))
                        (rule "polySimp_addComm1" (formula "3") (term "1"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                        (rule "applyEq" (formula "64") (term "0,0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq0" (formula "64"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "64") (term "0"))
                        (rule "polySimp_addComm1" (formula "64") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "64") (term "0,0,0"))
                        (rule "applyEq" (formula "71") (term "0,0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq0" (formula "71"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "71") (term "0"))
                        (rule "polySimp_addComm1" (formula "71") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "71") (term "0,0,0"))
                        (rule "applyEq" (formula "67") (term "0,0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq0" (formula "67"))
                        (rule "polySimp_mulLiterals" (formula "67") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "67") (term "0"))
                        (rule "polySimp_addComm1" (formula "67") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                        (rule "mul_literals" (formula "5") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
                        (rule "mul_literals" (formula "6") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1"))
                        (rule "polySimp_rightDist" (formula "7") (term "1"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1"))
                        (rule "mul_literals" (formula "7") (term "0,0,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "76"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                        (rule "polySimp_elimOne" (formula "76") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "64"))
                        (rule "polySimp_mulComm0" (formula "64") (term "1"))
                        (rule "polySimp_rightDist" (formula "64") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "64") (term "0,1"))
                        (rule "polySimp_rightDist" (formula "64") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "64") (term "0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "71"))
                        (rule "polySimp_mulComm0" (formula "71") (term "1"))
                        (rule "polySimp_rightDist" (formula "71") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "71") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "71") (term "0,1"))
                        (rule "polySimp_rightDist" (formula "71") (term "0,0,1"))
                        (rule "mul_literals" (formula "71") (term "0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "67"))
                        (rule "polySimp_mulComm0" (formula "67") (term "1"))
                        (rule "polySimp_rightDist" (formula "67") (term "1"))
                        (rule "polySimp_rightDist" (formula "67") (term "0,1"))
                        (rule "mul_literals" (formula "67") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "67") (term "1,0,1"))
                        (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "qeq_literals" (formula "6") (term "0"))
                        (rule "concrete_or_1" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "66"))
                        (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0"))
                        (rule "add_literals" (formula "5") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0"))
                        (rule "add_zero_right" (formula "5") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                        (rule "add_literals" (formula "5") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                        (rule "add_literals" (formula "5") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0"))
                        (rule "add_zero_right" (formula "5") (term "0,0"))
                        (rule "qeq_literals" (formula "5") (term "0"))
                        (rule "concrete_or_1" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "inEqSimp_exactShadow3" (formula "69") (ifseqformula "5"))
                        (rule "polySimp_rightDist" (formula "69") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "69") (term "0"))
                        (rule "polySimp_rightDist" (formula "69") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "69") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "69") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "69") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "69") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0"))
                        (rule "add_literals" (formula "69") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "69") (term "1,0,0"))
                        (rule "add_zero_right" (formula "69") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "69") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "69") (term "0,0,0"))
                        (rule "add_literals" (formula "69") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "69") (term "0,0"))
                        (rule "add_literals" (formula "69") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "69") (term "1,0,0"))
                        (rule "add_literals" (formula "69") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "69"))
                        (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                        (rule "polySimp_elimOne" (formula "69") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "69") (ifseqformula "61"))
                        (rule "leq_literals" (formula "69") (term "0"))
                        (rule "concrete_or_1" (formula "69"))
                        (rule "true_left" (formula "69"))
                        (rule "inEqSimp_exactShadow3" (formula "65") (ifseqformula "9"))
                        (rule "polySimp_rightDist" (formula "65") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "65") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "65") (term "0,0,0"))
                        (rule "mul_literals" (formula "65") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "65") (term "0"))
                        (rule "polySimp_addComm1" (formula "65") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "65") (term "0"))
                        (rule "add_literals" (formula "65") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "65") (term "0,0"))
                        (rule "add_literals" (formula "65") (term "0,0,0"))
                        (rule "add_zero_left" (formula "65") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "65"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "5"))
                        (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0"))
                        (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                        (rule "add_literals" (formula "8") (term "1,1,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "69") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "69") (term "0,0"))
                        (rule "add_zero_left" (formula "69") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "69"))
                        (rule "polySimp_mulComm0" (formula "69") (term "1"))
                        (rule "polySimp_rightDist" (formula "69") (term "1"))
                        (rule "polySimp_rightDist" (formula "69") (term "0,1"))
                        (rule "mul_literals" (formula "69") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "69") (term "1,0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "71") (ifseqformula "19"))
                        (rule "polySimp_rightDist" (formula "71") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "71") (term "0"))
                        (rule "polySimp_rightDist" (formula "71") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "71") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "71") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "71") (term "0,0,0,0"))
                        (rule "mul_literals" (formula "71") (term "0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "71") (term "0,0,0"))
                        (rule "add_literals" (formula "71") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "71"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                        (rule "polySimp_elimOne" (formula "71") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "10"))
                        (rule "polySimp_rightDist" (formula "63") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "63") (term "0"))
                        (rule "polySimp_rightDist" (formula "63") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "63") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "63") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "63") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0"))
                        (rule "add_literals" (formula "63") (term "1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "63") (term "0,0,0"))
                        (rule "add_literals" (formula "63") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "63") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "63"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "79") (ifseqformula "3"))
                        (rule "polySimp_rightDist" (formula "79") (term "0,0"))
                        (rule "mul_literals" (formula "79") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "79") (term "0"))
                        (rule "polySimp_addAssoc" (formula "79") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "79") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,0"))
                        (rule "add_literals" (formula "79") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "79"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "0"))
                        (rule "polySimp_elimOne" (formula "79") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "65") (ifseqformula "3"))
                        (rule "polySimp_mulAssoc" (formula "65") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "65") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "65") (term "0"))
                        (rule "polySimp_addComm0" (formula "65") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "65"))
                        (rule "polySimp_mulComm0" (formula "65") (term "1"))
                        (rule "polySimp_rightDist" (formula "65") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "65") (term "0,1"))
                        (rule "polySimp_rightDist" (formula "65") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "65") (term "0,0,0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "75") (ifseqformula "78"))
                        (rule "times_zero_1" (formula "75") (term "0,0"))
                        (rule "add_zero_left" (formula "75") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "75"))
                        (rule "polySimp_mulComm0" (formula "75") (term "1"))
                        (rule "polySimp_rightDist" (formula "75") (term "1"))
                        (rule "polySimp_rightDist" (formula "75") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "75") (term "1,0,1"))
                        (rule "mul_literals" (formula "75") (term "0,0,1"))
                        (rule "inEqSimp_subsumption1" (formula "68") (ifseqformula "75"))
                        (rule "inEqSimp_homoInEq0" (formula "68") (term "0"))
                        (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "68") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "68") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "68") (term "1,0,1,0,0"))
                        (rule "mul_literals" (formula "68") (term "0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "68") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "68") (term "0,0"))
                        (rule "add_literals" (formula "68") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "68") (term "1,0,0"))
                        (rule "add_zero_right" (formula "68") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "68") (term "0,0,0"))
                        (rule "add_literals" (formula "68") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0"))
                        (rule "add_literals" (formula "68") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "68") (term "1,0,0"))
                        (rule "add_zero_right" (formula "68") (term "0,0"))
                        (rule "qeq_literals" (formula "68") (term "0"))
                        (rule "concrete_or_1" (formula "68"))
                        (rule "true_left" (formula "68"))
                        (rule "inEqSimp_exactShadow3" (formula "64") (ifseqformula "5"))
                        (rule "polySimp_rightDist" (formula "64") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "64") (term "0"))
                        (rule "polySimp_rightDist" (formula "64") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "64") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "64") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "64") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                        (rule "add_literals" (formula "64") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "64") (term "1,0,0"))
                        (rule "add_zero_right" (formula "64") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "64") (term "0,0,0"))
                        (rule "add_literals" (formula "64") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,0"))
                        (rule "add_literals" (formula "64") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "64") (term "1,0,0"))
                        (rule "add_literals" (formula "64") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "64"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                        (rule "inEqSimp_subsumption4" (formula "64") (ifseqformula "62"))
                        (rule "mul_literals" (formula "64") (term "0,1,0"))
                        (rule "greater_literals" (formula "64") (term "0,0"))
                        (rule "concrete_and_1" (formula "64") (term "0"))
                        (rule "leq_literals" (formula "64") (term "0"))
                        (rule "concrete_or_1" (formula "64"))
                        (rule "true_left" (formula "64"))
                        (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "5"))
                        (rule "times_zero_1" (formula "12") (term "0,0"))
                        (rule "add_zero_left" (formula "12") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                        (rule "polySimp_elimOne" (formula "12") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "65") (ifseqformula "20"))
                        (rule "polySimp_rightDist" (formula "65") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "65") (term "0"))
                        (rule "polySimp_rightDist" (formula "65") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "65") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "65") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "65") (term "0,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "65") (term "0,0,0"))
                        (rule "add_literals" (formula "65") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "65"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "74") (ifseqformula "10"))
                        (rule "polySimp_rightDist" (formula "74") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "74") (term "0"))
                        (rule "polySimp_rightDist" (formula "74") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "74") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "74") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "74") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "74") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0"))
                        (rule "add_literals" (formula "74") (term "1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "74") (term "0,0,0"))
                        (rule "add_literals" (formula "74") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "74") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "74"))
                        (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                        (rule "polySimp_elimOne" (formula "74") (term "0"))
                        (rule "inEqSimp_exactShadow2" (formula "76") (ifseqformula "65"))
                        (rule "times_zero_1" (formula "76") (term "1,0,0,1"))
                        (rule "greater_literals" (formula "76") (term "0"))
                        (rule "concrete_impl_1" (formula "76"))
                        (rule "mul_literals" (formula "76") (term "0,0"))
                        (rule "add_zero_left" (formula "76") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "76"))
                        (rule "polySimp_mulComm0" (formula "76") (term "1"))
                        (rule "polySimp_rightDist" (formula "76") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1,1"))
                        (rule "mul_literals" (formula "76") (term "0,1"))
                        (rule "inEqSimp_exactShadow1" (formula "69") (ifseqformula "12"))
                        (rule "greater_literals" (formula "69") (term "0"))
                        (rule "concrete_impl_1" (formula "69"))
                        (rule "polySimp_mulAssoc" (formula "69") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "69") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "69") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "69") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0"))
                        (rule "mul_literals" (formula "69") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "69") (term "0"))
                        (rule "polySimp_addComm0" (formula "69") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "69") (term "0"))
                        (rule "add_literals" (formula "69") (term "1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "69"))
                        (rule "mul_literals" (formula "69") (term "1"))
                        (rule "elimGcdGeq_antec" (formula "69") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcd=Z(2(9(5(4(3(9(9(8(5(8(#)))))))))))"))
                        (rule "polySimp_mulLiterals" (formula "69") (term "1,0,1,0"))
                        (rule "leq_literals" (formula "69") (term "0,0"))
                        (rule "concrete_or_2" (formula "69") (term "0"))
                        (rule "times_zero_1" (formula "69") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addLiterals" (formula "69") (term "0,0,0,0"))
                        (rule "add_literals" (formula "69") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "69") (term "0,0"))
                        (rule "add_literals" (formula "69") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "69") (term "1,0,0"))
                        (rule "add_zero_right" (formula "69") (term "0,0"))
                        (rule "leq_literals" (formula "69") (term "0"))
                        (rule "concrete_or_2" (formula "69"))
                        (rule "inEqSimp_exactShadow2" (formula "11") (ifseqformula "8"))
                        (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                        (rule "greater_literals" (formula "11") (term "0"))
                        (rule "concrete_impl_1" (formula "11"))
                        (rule "mul_literals" (formula "11") (term "0,0"))
                        (rule "add_zero_left" (formula "11") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                        (rule "mul_literals" (formula "11") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "70"))
                        (rule "times_zero_1" (formula "11") (term "1,1,0"))
                        (rule "greater_literals" (formula "11") (term "0,0"))
                        (rule "concrete_and_1" (formula "11") (term "0"))
                        (rule "leq_literals" (formula "11") (term "0"))
                        (rule "concrete_or_1" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "inEqSimp_exactShadow3" (formula "79") (ifseqformula "20"))
                        (rule "polySimp_rightDist" (formula "79") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "79") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "79") (term "0"))
                        (rule "polySimp_rightDist" (formula "79") (term "0,0,0"))
                        (rule "mul_literals" (formula "79") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "79") (term "0,0"))
                        (rule "add_literals" (formula "79") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "79"))
                        (rule "polySimp_mulComm0" (formula "79") (term "1"))
                        (rule "polySimp_rightDist" (formula "79") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "1,1"))
                        (rule "mul_literals" (formula "79") (term "0,1"))
                        (rule "inEqSimp_subsumption1" (formula "77") (ifseqformula "79"))
                        (rule "inEqSimp_homoInEq0" (formula "77") (term "0"))
                        (rule "polySimp_mulComm0" (formula "77") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "77") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "77") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "77") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "77") (term "0,0,0"))
                        (rule "add_literals" (formula "77") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,0"))
                        (rule "add_literals" (formula "77") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "77") (term "1,0,0"))
                        (rule "add_zero_right" (formula "77") (term "0,0"))
                        (rule "qeq_literals" (formula "77") (term "0"))
                        (rule "concrete_or_1" (formula "77"))
                        (rule "true_left" (formula "77"))
                        (rule "inEqSimp_exactShadow3" (formula "77") (ifseqformula "74"))
                        (rule "times_zero_1" (formula "77") (term "0,0"))
                        (rule "add_zero_left" (formula "77") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "77"))
                        (rule "polySimp_mulComm0" (formula "77") (term "1"))
                        (rule "polySimp_rightDist" (formula "77") (term "1"))
                        (rule "mul_literals" (formula "77") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "77") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "77") (ifseqformula "79"))
                        (rule "inEqSimp_homoInEq0" (formula "77") (term "0"))
                        (rule "polySimp_mulComm0" (formula "77") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "77") (term "1,0,0"))
                        (rule "mul_literals" (formula "77") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "77") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "77") (term "0,0,0"))
                        (rule "add_literals" (formula "77") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,0"))
                        (rule "add_literals" (formula "77") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "77") (term "1,0,0"))
                        (rule "add_zero_right" (formula "77") (term "0,0"))
                        (rule "qeq_literals" (formula "77") (term "0"))
                        (rule "concrete_or_1" (formula "77"))
                        (rule "true_left" (formula "77"))
                        (rule "inEqSimp_exactShadow3" (formula "77") (ifseqformula "75"))
                        (rule "times_zero_1" (formula "77") (term "0,0"))
                        (rule "add_zero_left" (formula "77") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "77"))
                        (rule "polySimp_mulLiterals" (formula "77") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "79") (ifseqformula "10"))
                        (rule "polySimp_rightDist" (formula "79") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "79") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "79") (term "0,0,0"))
                        (rule "mul_literals" (formula "79") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "79") (term "0"))
                        (rule "polySimp_addComm1" (formula "79") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "79") (term "0"))
                        (rule "add_literals" (formula "79") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "79") (term "0,0"))
                        (rule "add_literals" (formula "79") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "79"))
                        (rule "polySimp_mulComm0" (formula "79") (term "1"))
                        (rule "polySimp_rightDist" (formula "79") (term "1"))
                        (rule "mul_literals" (formula "79") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "1,1"))
                        (rule "inEqSimp_subsumption5" (formula "70") (ifseqformula "79"))
                        (rule "eq_and" (formula "70") (term "0,0"))
                        (rule "greater_literals" (formula "70") (term "0,0"))
                        (rule "concrete_and_1" (formula "70") (term "0"))
                        (rule "polySimp_mulComm0" (formula "70") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "70") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "70") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0"))
                        (rule "mul_literals" (formula "70") (term "0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "70") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "70") (term "0,0"))
                        (rule "add_literals" (formula "70") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "70") (term "1,0,0"))
                        (rule "add_zero_right" (formula "70") (term "0,0"))
                        (rule "qeq_literals" (formula "70") (term "0"))
                        (rule "concrete_or_1" (formula "70"))
                        (rule "true_left" (formula "70"))
                        (rule "inEqSimp_exactShadow2" (formula "76") (ifseqformula "64"))
                        (rule "times_zero_1" (formula "76") (term "1,0,0,1"))
                        (rule "greater_literals" (formula "76") (term "0"))
                        (rule "concrete_impl_1" (formula "76"))
                        (rule "times_zero_1" (formula "76") (term "0,0"))
                        (rule "add_zero_left" (formula "76") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "76"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1"))
                        (rule "inEqSimp_subsumption5" (formula "76") (ifseqformula "79"))
                        (rule "eq_and" (formula "76") (term "0,0"))
                        (rule "greater_literals" (formula "76") (term "0,0"))
                        (rule "concrete_and_1" (formula "76") (term "0"))
                        (rule "polySimp_mulComm0" (formula "76") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "76") (term "1,0"))
                        (rule "mul_literals" (formula "76") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "76") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "76") (term "0,0"))
                        (rule "add_literals" (formula "76") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "76") (term "1,0,0"))
                        (rule "add_zero_right" (formula "76") (term "0,0"))
                        (rule "qeq_literals" (formula "76") (term "0"))
                        (rule "concrete_or_1" (formula "76"))
                        (rule "true_left" (formula "76"))
                        (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
                        (rule "times_zero_1" (formula "11") (term "0,0"))
                        (rule "add_zero_left" (formula "11") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                        (rule "mul_literals" (formula "11") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "70"))
                        (rule "greater_literals" (formula "11") (term "0,0"))
                        (rule "concrete_and_1" (formula "11") (term "0"))
                        (rule "mul_literals" (formula "11") (term "1,0"))
                        (rule "leq_literals" (formula "11") (term "0"))
                        (rule "concrete_or_1" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "inEqSimp_exactShadow2" (formula "77") (ifseqformula "8"))
                        (rule "greater_literals" (formula "77") (term "0"))
                        (rule "concrete_impl_1" (formula "77"))
                        (rule "polySimp_rightDist" (formula "77") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "77") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "77") (term "0,0"))
                        (rule "mul_literals" (formula "77") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0"))
                        (rule "polySimp_addAssoc" (formula "77") (term "0"))
                        (rule "polySimp_addComm1" (formula "77") (term "0,0"))
                        (rule "add_literals" (formula "77") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "77") (term "0"))
                        (rule "add_literals" (formula "77") (term "1,1,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "77"))
                        (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                        (rule "elimGcdLeq_antec" (formula "77") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcd=Z(2(9(5(4(3(9(9(8(5(8(#)))))))))))"))
                        (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0"))
                        (rule "times_zero_1" (formula "77") (term "1,0,0,0,0,1,0"))
                        (rule "neg_literal" (formula "77") (term "0,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "77") (term "0,0"))
                        (rule "concrete_or_2" (formula "77") (term "0"))
                        (rule "polySimp_addLiterals" (formula "77") (term "0,0,0,0"))
                        (rule "add_literals" (formula "77") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,0"))
                        (rule "add_literals" (formula "77") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "77") (term "1,0,0"))
                        (rule "add_zero_right" (formula "77") (term "0,0"))
                        (rule "qeq_literals" (formula "77") (term "0"))
                        (rule "concrete_or_2" (formula "77"))
                        (rule "inEqSimp_exactShadow1" (formula "79") (ifseqformula "7"))
                        (rule "mul_literals" (formula "79") (term "1,0,1"))
                        (rule "greater_literals" (formula "79") (term "0"))
                        (rule "concrete_impl_1" (formula "79"))
                        (rule "polySimp_rightDist" (formula "79") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0"))
                        (rule "mul_literals" (formula "79") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "79") (term "0"))
                        (rule "add_literals" (formula "79") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "79"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "0"))
                        (rule "inEqSimp_subsumption4" (formula "79") (ifseqformula "77"))
                        (rule "greater_literals" (formula "79") (term "0,0"))
                        (rule "concrete_and_1" (formula "79") (term "0"))
                        (rule "times_zero_1" (formula "79") (term "0,0"))
                        (rule "leq_literals" (formula "79") (term "0"))
                        (rule "concrete_or_1" (formula "79"))
                        (rule "true_left" (formula "79"))
                        (rule "inEqSimp_exactShadow1" (formula "79") (ifseqformula "12"))
                        (rule "greater_literals" (formula "79") (term "0"))
                        (rule "concrete_impl_1" (formula "79"))
                        (rule "polySimp_rightDist" (formula "79") (term "1,0"))
                        (rule "mul_literals" (formula "79") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "79") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0"))
                        (rule "mul_literals" (formula "79") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "79") (term "0"))
                        (rule "polySimp_addComm1" (formula "79") (term "0,0"))
                        (rule "add_literals" (formula "79") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "79") (term "0"))
                        (rule "add_literals" (formula "79") (term "1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "79"))
                        (rule "mul_literals" (formula "79") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "79") (ifseqformula "69"))
                        (rule "greater_literals" (formula "79") (term "0,0"))
                        (rule "concrete_and_1" (formula "79") (term "0"))
                        (rule "mul_literals" (formula "79") (term "1,0"))
                        (rule "leq_literals" (formula "79") (term "0"))
                        (rule "concrete_or_1" (formula "79"))
                        (rule "true_left" (formula "79"))
                        (rule "inEqSimp_exactShadow3" (formula "78") (ifseqformula "7"))
                        (rule "polySimp_rightDist" (formula "78") (term "0,0"))
                        (rule "mul_literals" (formula "78") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "78") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "78") (term "0"))
                        (rule "add_literals" (formula "78") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "78"))
                        (rule "polySimp_mulLiterals" (formula "78") (term "0"))
                        (rule "inEqSimp_subsumption4" (formula "78") (ifseqformula "77"))
                        (rule "greater_literals" (formula "78") (term "0,0"))
                        (rule "concrete_and_1" (formula "78") (term "0"))
                        (rule "times_zero_1" (formula "78") (term "0,0"))
                        (rule "leq_literals" (formula "78") (term "0"))
                        (rule "concrete_or_1" (formula "78"))
                        (rule "true_left" (formula "78"))
                        (rule "inEqSimp_antiSymm" (formula "69") (ifseqformula "77"))
                        (rule "applyEq" (formula "79") (term "0,1,1") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "79") (term "1,1"))
                        (rule "add_zero_right" (formula "79") (term "1"))
                        (rule "applyEq" (formula "78") (term "0") (ifseqformula "69"))
                        (rule "leq_literals" (formula "78"))
                        (rule "true_left" (formula "78"))
                        (rule "applyEqRigid" (formula "70") (term "0") (ifseqformula "69"))
                        (rule "qeq_literals" (formula "70"))
                        (rule "true_left" (formula "70"))
                        (rule "applyEqRigid" (formula "8") (term "0,1,1") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "8") (term "1,1"))
                        (rule "add_zero_right" (formula "8") (term "1"))
                        (rule "applyEqRigid" (formula "12") (term "0,1,1") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "12") (term "1,1"))
                        (rule "add_zero_right" (formula "12") (term "1"))
                        (rule "applyEq" (formula "78") (term "0,1,1") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "78") (term "1,1"))
                        (rule "add_zero_right" (formula "78") (term "1"))
                        (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "69"))
                        (rule "applyEq" (formula "79") (term "0,1,0,1") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "79") (term "1,0,1"))
                        (rule "add_zero_right" (formula "79") (term "0,1"))
                        (rule "applyEq" (formula "74") (term "0,0,1") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "74") (term "0,1"))
                        (rule "add_zero_left" (formula "74") (term "1"))
                        (rule "applyEq" (formula "5") (term "0,1,0,1") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "5") (term "1,0,1"))
                        (rule "add_zero_right" (formula "5") (term "0,1"))
                        (rule "applyEq" (formula "64") (term "0,0,1") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "64") (term "0,1"))
                        (rule "add_zero_left" (formula "64") (term "1"))
                        (rule "applyEqRigid" (formula "73") (term "0,1,0,1") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "73") (term "1,0,1"))
                        (rule "add_zero_right" (formula "73") (term "0,1"))
                        (rule "applyEqRigid" (formula "65") (term "0,1,0,1") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "65") (term "1,0,1"))
                        (rule "add_zero_right" (formula "65") (term "0,1"))
                        (rule "applyEqRigid" (formula "3") (term "0,1,0,0,1") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "3") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "3") (term "0,0,1"))
                        (rule "applyEqRigid" (formula "66") (term "0,1,0,0,1") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "66") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "66") (term "0,0,1"))
                        (rule "applyEq" (formula "75") (term "0,1,0,0,1") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "75") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "75") (term "0,0,1"))
                        (rule "applyEqRigid" (formula "83") (term "0,1,0,0,1") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "83") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "83") (term "0,0,1"))
                        (rule "applyEqRigid" (formula "90") (term "0,1,0,0,1,0,0") (ifseqformula "69"))
                        (rule "mul_literals" (formula "90") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "90") (term "0,0,1,0,0"))
                        (rule "inEqSimp_subsumption1" (formula "77") (ifseqformula "11"))
                        (rule "leq_literals" (formula "77") (term "0"))
                        (rule "concrete_or_1" (formula "77"))
                        (rule "true_left" (formula "77"))
                        (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "12"))
                        (rule "leq_literals" (formula "7") (term "0"))
                        (rule "concrete_or_1" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "elimGcdGeq_antec" (formula "76") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(3(#))"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "76") (term "0,0"))
                        (rule "concrete_or_2" (formula "76") (term "0"))
                        (rule "mul_literals" (formula "76") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addLiterals" (formula "76") (term "0,0,0,0"))
                        (rule "add_literals" (formula "76") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "76") (term "0,0"))
                        (rule "add_literals" (formula "76") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "76") (term "1,0,0"))
                        (rule "add_zero_right" (formula "76") (term "0,0"))
                        (rule "leq_literals" (formula "76") (term "0"))
                        (rule "concrete_or_2" (formula "76"))
                        (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "76"))
                        (rule "leq_literals" (formula "10") (term "0"))
                        (rule "concrete_or_1" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(0(7(9(6(5(9(8(7(1(#))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(3(#))"))
                        (rule "leq_literals" (formula "7") (term "0,0"))
                        (rule "concrete_or_2" (formula "7") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                        (rule "neg_literal" (formula "7") (term "0,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                        (rule "add_literals" (formula "7") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "7") (term "1,0,0"))
                        (rule "add_zero_right" (formula "7") (term "0,0"))
                        (rule "qeq_literals" (formula "7") (term "0"))
                        (rule "concrete_or_2" (formula "7"))
                        (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "7"))
                        (rule "leq_literals" (formula "10") (term "0"))
                        (rule "concrete_or_1" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "inEqSimp_exactShadow2" (formula "73") (ifseqformula "62"))
                        (rule "times_zero_1" (formula "73") (term "1,0,0,1"))
                        (rule "greater_literals" (formula "73") (term "0"))
                        (rule "concrete_impl_1" (formula "73"))
                        (rule "mul_literals" (formula "73") (term "0,0"))
                        (rule "add_zero_left" (formula "73") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "73"))
                        (rule "mul_literals" (formula "73") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "73") (ifseqformula "75"))
                        (rule "leq_literals" (formula "73") (term "0"))
                        (rule "concrete_or_1" (formula "73"))
                        (rule "true_left" (formula "73"))
                        (rule "inEqSimp_exactShadow3" (formula "73") (ifseqformula "71"))
                        (rule "times_zero_1" (formula "73") (term "0,0"))
                        (rule "add_zero_left" (formula "73") (term "0"))
                        (rule "inEqSimp_subsumption6" (formula "73") (ifseqformula "75"))
                        (rule "mul_literals" (formula "73") (term "1,1,0"))
                        (rule "greater_literals" (formula "73") (term "0,0"))
                        (rule "concrete_and_1" (formula "73") (term "0"))
                        (rule "leq_literals" (formula "73") (term "0"))
                        (rule "concrete_or_1" (formula "73"))
                        (rule "true_left" (formula "73"))
                        (rule "inEqSimp_exactShadow3" (formula "76") (ifseqformula "79"))
                        (rule "times_zero_1" (formula "76") (term "0,0"))
                        (rule "add_zero_left" (formula "76") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "76"))
                        (rule "polySimp_mulComm0" (formula "76") (term "1"))
                        (rule "polySimp_rightDist" (formula "76") (term "1"))
                        (rule "mul_literals" (formula "76") (term "0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "64") (ifseqformula "3"))
                        (rule "polySimp_mulAssoc" (formula "64") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "64") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "64") (term "0"))
                        (rule "polySimp_addComm0" (formula "64") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "64"))
                        (rule "polySimp_mulComm0" (formula "64") (term "1"))
                        (rule "polySimp_rightDist" (formula "64") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "64") (term "0,1"))
                        (rule "mul_literals" (formula "64") (term "0,0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "5"))
                        (rule "times_zero_1" (formula "10") (term "0,0"))
                        (rule "add_zero_left" (formula "10") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                        (rule "polySimp_elimOne" (formula "10") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "7"))
                        (rule "leq_literals" (formula "10") (term "0"))
                        (rule "concrete_or_1" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "inEqSimp_exactShadow3" (formula "68") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "68") (term "0,0"))
                        (rule "add_zero_left" (formula "68") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "68"))
                        (rule "polySimp_mulComm0" (formula "68") (term "1"))
                        (rule "polySimp_rightDist" (formula "68") (term "1"))
                        (rule "mul_literals" (formula "68") (term "0,1"))
                        (rule "inEqSimp_subsumption1" (formula "68") (ifseqformula "76"))
                        (rule "inEqSimp_homoInEq0" (formula "68") (term "0"))
                        (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "68") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "68") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "68") (term "0,0,0"))
                        (rule "add_literals" (formula "68") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "68") (term "0,0"))
                        (rule "add_literals" (formula "68") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "68") (term "1,0,0"))
                        (rule "add_zero_right" (formula "68") (term "0,0"))
                        (rule "qeq_literals" (formula "68") (term "0"))
                        (rule "concrete_or_1" (formula "68"))
                        (rule "true_left" (formula "68"))
                        (rule "inEqSimp_exactShadow2" (formula "73") (ifseqformula "61"))
                        (rule "greater_literals" (formula "73") (term "0"))
                        (rule "concrete_impl_1" (formula "73"))
                        (rule "mul_literals" (formula "73") (term "1,0,0"))
                        (rule "mul_literals" (formula "73") (term "0,0"))
                        (rule "add_zero_left" (formula "73") (term "0"))
                        (rule "inEqSimp_subsumption6" (formula "73") (ifseqformula "75"))
                        (rule "greater_literals" (formula "73") (term "0,0"))
                        (rule "concrete_and_1" (formula "73") (term "0"))
                        (rule "mul_literals" (formula "73") (term "1,0"))
                        (rule "leq_literals" (formula "73") (term "0"))
                        (rule "concrete_or_1" (formula "73"))
                        (rule "true_left" (formula "73"))
                        (rule "inEqSimp_exactShadow3" (formula "73") (ifseqformula "70"))
                        (rule "times_zero_1" (formula "73") (term "0,0"))
                        (rule "add_zero_left" (formula "73") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "73"))
                        (rule "mul_literals" (formula "73") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "73") (ifseqformula "75"))
                        (rule "leq_literals" (formula "73") (term "0"))
                        (rule "concrete_or_1" (formula "73"))
                        (rule "true_left" (formula "73"))
                        (rule "inEqSimp_exactShadow3" (formula "75") (ifseqformula "9"))
                        (rule "polySimp_rightDist" (formula "75") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0"))
                        (rule "mul_literals" (formula "75") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "75") (term "1,0,0"))
                        (rule "polySimp_addAssoc" (formula "75") (term "0"))
                        (rule "polySimp_addComm1" (formula "75") (term "0,0"))
                        (rule "add_literals" (formula "75") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "75") (term "0"))
                        (rule "add_literals" (formula "75") (term "1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "75"))
                        (rule "mul_literals" (formula "75") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "75") (ifseqformula "74"))
                        (rule "mul_literals" (formula "75") (term "1,1,0"))
                        (rule "greater_literals" (formula "75") (term "0,0"))
                        (rule "concrete_and_1" (formula "75") (term "0"))
                        (rule "leq_literals" (formula "75") (term "0"))
                        (rule "concrete_or_1" (formula "75"))
                        (rule "true_left" (formula "75"))
                        (rule "inEqSimp_exactShadow3" (formula "75") (ifseqformula "17"))
                        (rule "polySimp_rightDist" (formula "75") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0"))
                        (rule "mul_literals" (formula "75") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "75") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "75") (term "0"))
                        (rule "add_literals" (formula "75") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "75"))
                        (rule "mul_literals" (formula "75") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "75") (ifseqformula "74"))
                        (rule "leq_literals" (formula "75") (term "0"))
                        (rule "concrete_or_1" (formula "75"))
                        (rule "true_left" (formula "75"))
                        (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "5"))
                        (rule "polySimp_rightDist" (formula "63") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "63") (term "0"))
                        (rule "polySimp_rightDist" (formula "63") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "63") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "63") (term "0,0,0"))
                        (rule "add_literals" (formula "63") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0"))
                        (rule "add_literals" (formula "63") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "63") (term "1,0,0"))
                        (rule "add_literals" (formula "63") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "63"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                        (rule "inEqSimp_subsumption4" (formula "63") (ifseqformula "60"))
                        (rule "greater_literals" (formula "63") (term "0,0"))
                        (rule "concrete_and_1" (formula "63") (term "0"))
                        (rule "mul_literals" (formula "63") (term "0,0"))
                        (rule "leq_literals" (formula "63") (term "0"))
                        (rule "concrete_or_1" (formula "63"))
                        (rule "true_left" (formula "63"))
                        (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "17"))
                        (rule "polySimp_rightDist" (formula "63") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "63") (term "0"))
                        (rule "polySimp_rightDist" (formula "63") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "63") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "63") (term "0,0"))
                        (rule "add_literals" (formula "63") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "63"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "72") (ifseqformula "17"))
                        (rule "polySimp_rightDist" (formula "72") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "72") (term "0"))
                        (rule "polySimp_rightDist" (formula "72") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "72") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "72") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "72") (term "0,0"))
                        (rule "add_literals" (formula "72") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "72"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                        (rule "polySimp_elimOne" (formula "72") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "72") (ifseqformula "9"))
                        (rule "polySimp_rightDist" (formula "72") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "72") (term "0"))
                        (rule "polySimp_rightDist" (formula "72") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "72") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "72") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "72") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "72") (term "0,0,0"))
                        (rule "add_literals" (formula "72") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "72") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1" (formula "72") (term "0,0"))
                        (rule "add_literals" (formula "72") (term "1,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "72"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                        (rule "polySimp_elimOne" (formula "72") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "72") (ifseqformula "5"))
                        (rule "polySimp_rightDist" (formula "72") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "72") (term "0"))
                        (rule "polySimp_rightDist" (formula "72") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "72") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "72") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "72") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "72") (term "0,0,0"))
                        (rule "add_literals" (formula "72") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0"))
                        (rule "add_literals" (formula "72") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "72") (term "1,0,0"))
                        (rule "add_literals" (formula "72") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "72"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                        (rule "polySimp_elimOne" (formula "72") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "72") (ifseqformula "60"))
                        (rule "leq_literals" (formula "72") (term "0"))
                        (rule "concrete_or_1" (formula "72"))
                        (rule "true_left" (formula "72"))
                        (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "5"))
                        (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0"))
                        (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                        (rule "add_literals" (formula "8") (term "1,1,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                        (rule "inEqSimp_subsumption4" (formula "8") (ifseqformula "7"))
                        (rule "mul_literals" (formula "8") (term "0,1,0"))
                        (rule "greater_literals" (formula "8") (term "0,0"))
                        (rule "concrete_and_1" (formula "8") (term "0"))
                        (rule "leq_literals" (formula "8") (term "0"))
                        (rule "concrete_or_1" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "9"))
                        (rule "polySimp_rightDist" (formula "63") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "63") (term "0"))
                        (rule "polySimp_rightDist" (formula "63") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "63") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "63") (term "0,0,0"))
                        (rule "add_literals" (formula "63") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "63") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1" (formula "63") (term "0,0"))
                        (rule "add_literals" (formula "63") (term "1,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "63"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "80") (ifseqformula "3"))
                        (rule "polySimp_rightDist" (formula "80") (term "0,0"))
                        (rule "mul_literals" (formula "80") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "80") (term "0"))
                        (rule "polySimp_addAssoc" (formula "80") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "80") (term "0,0,0"))
                        (rule "add_literals" (formula "80") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "80"))
                        (rule "polySimp_mulLiterals" (formula "80") (term "0"))
                        (rule "polySimp_elimOne" (formula "80") (term "0"))
                        (rule "div_axiom" (formula "86") (term "0,0,0,1") (inst "quotient=quotient_5"))
                        (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                        (rule "qeq_literals" (formula "1") (term "0,1,1"))
                        (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                        (rule "equal_literals" (formula "1") (term "0"))
                        (rule "concrete_or_2" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "3") (term "1"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0,1"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,1"))
                        (rule "add_literals" (formula "3") (term "0,0,0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                        (rule "applyEq" (formula "89") (term "0,0,0,1") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "89") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "89") (term "1,0,0,1"))
                        (rule "polySimp_addComm1" (formula "89") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "89") (term "0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "89") (term "0,0,0,0,1"))
                        (rule "applyEq" (formula "89") (term "0,0,1,1") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "89") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "89") (term "1,0,1,1"))
                        (rule "polySimp_addComm1" (formula "89") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "89") (term "0,0,1,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "89") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "89") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "89") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "89") (term "1,1,1"))
                        (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,1"))
                        (rule "polySimp_elimOne" (formula "89") (term "1,1,1,1"))
                        (rule "polySimp_rightDist" (formula "89") (term "0,1,1,1"))
                        (rule "polySimp_mulLiterals" (formula "89") (term "1,0,1,1,1"))
                        (rule "mul_literals" (formula "89") (term "0,0,1,1,1"))
                        (rule "inEqSimp_exactShadow2" (formula "83") (ifseqformula "2"))
                        (rule "greater_literals" (formula "83") (term "0"))
                        (rule "concrete_impl_1" (formula "83"))
                        (rule "polySimp_rightDist" (formula "83") (term "1,0,0"))
                        (rule "mul_literals" (formula "83") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "83") (term "0,0"))
                        (rule "mul_literals" (formula "83") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "83") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "83") (term "0"))
                        (rule "polySimp_addAssoc" (formula "83") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "83") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "83") (term "0,0,0,0"))
                        (rule "add_literals" (formula "83") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "83"))
                        (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                        (rule "inEqSimp_exactShadow2" (formula "67") (ifseqformula "2"))
                        (rule "greater_literals" (formula "67") (term "0"))
                        (rule "concrete_impl_1" (formula "67"))
                        (rule "polySimp_mulAssoc" (formula "67") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "67") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "67") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "67") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "67") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "67") (term "0"))
                        (rule "polySimp_addComm0" (formula "67") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "67"))
                        (rule "polySimp_mulComm0" (formula "67") (term "1"))
                        (rule "polySimp_rightDist" (formula "67") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "67") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "67") (term "0,1"))
                        (rule "polySimp_rightDist" (formula "67") (term "0,0,1"))
                        (rule "mul_literals" (formula "67") (term "0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,1"))
                        (rule "inEqSimp_exactShadow1" (formula "3") (ifseqformula "69"))
                        (rule "greater_literals" (formula "3") (term "0"))
                        (rule "concrete_impl_1" (formula "3"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_exactShadow2" (formula "73") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "73") (term "1,0,0,1"))
                        (rule "greater_literals" (formula "73") (term "0"))
                        (rule "concrete_impl_1" (formula "73"))
                        (rule "times_zero_1" (formula "73") (term "0,0"))
                        (rule "add_zero_left" (formula "73") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "73"))
                        (rule "polySimp_mulComm0" (formula "73") (term "1"))
                        (rule "polySimp_rightDist" (formula "73") (term "1"))
                        (rule "polySimp_rightDist" (formula "73") (term "0,1"))
                        (rule "mul_literals" (formula "73") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "73") (term "1,0,1"))
                        (rule "inEqSimp_exactShadow1" (formula "4") (ifseqformula "6"))
                        (rule "mul_literals" (formula "4") (term "1,0,1"))
                        (rule "greater_literals" (formula "4") (term "0"))
                        (rule "concrete_impl_1" (formula "4"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_exactShadow1" (formula "5") (ifseqformula "8"))
                        (rule "greater_literals" (formula "5") (term "0"))
                        (rule "concrete_impl_1" (formula "5"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                        (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                        (rule "add_literals" (formula "5") (term "1,1,0"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                        (rule "add_literals" (formula "5") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                        (rule "add_literals" (formula "5") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                        (rule "mul_literals" (formula "5") (term "0,0,1"))
                        (rule "inEqSimp_exactShadow2" (formula "84") (ifseqformula "88"))
                        (rule "greater_literals" (formula "84") (term "0"))
                        (rule "concrete_impl_1" (formula "84"))
                        (rule "times_zero_1" (formula "84") (term "1,0,0"))
                        (rule "mul_literals" (formula "84") (term "0,0"))
                        (rule "add_zero_left" (formula "84") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "84"))
                        (rule "polySimp_mulComm0" (formula "84") (term "1"))
                        (rule "polySimp_rightDist" (formula "84") (term "1"))
                        (rule "polySimp_rightDist" (formula "84") (term "0,1"))
                        (rule "mul_literals" (formula "84") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "84") (term "1,0,1"))
                        (rule "inEqSimp_subsumption1" (formula "75") (ifseqformula "84"))
                        (rule "inEqSimp_homoInEq0" (formula "75") (term "0"))
                        (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "75") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "75") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "75") (term "1,0,1,0,0"))
                        (rule "mul_literals" (formula "75") (term "0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "75") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "75") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "75") (term "0,0"))
                        (rule "add_literals" (formula "75") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "75") (term "1,0,0"))
                        (rule "add_zero_right" (formula "75") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "75") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "75") (term "0,0,0"))
                        (rule "add_literals" (formula "75") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0"))
                        (rule "add_literals" (formula "75") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "75") (term "1,0,0"))
                        (rule "add_zero_right" (formula "75") (term "0,0"))
                        (rule "qeq_literals" (formula "75") (term "0"))
                        (rule "concrete_or_1" (formula "75"))
                        (rule "true_left" (formula "75"))
                        (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "16") (term "0,0"))
                        (rule "add_zero_left" (formula "16") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1"))
                        (rule "polySimp_rightDist" (formula "16") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1"))
                        (rule "mul_literals" (formula "16") (term "0,0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "4"))
                        (rule "polySimp_mulAssoc" (formula "14") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0"))
                        (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "14") (term "0"))
                        (rule "add_literals" (formula "14") (term "1,1,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "84") (ifseqformula "3"))
                        (rule "polySimp_rightDist" (formula "84") (term "0,0"))
                        (rule "mul_literals" (formula "84") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "84") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "84") (term "1,0,0"))
                        (rule "polySimp_addAssoc" (formula "84") (term "0"))
                        (rule "polySimp_addAssoc" (formula "84") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "84") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "84") (term "0,0"))
                        (rule "add_literals" (formula "84") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "84") (term "1,0,0"))
                        (rule "add_zero_right" (formula "84") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "84") (term "0,0"))
                        (rule "add_literals" (formula "84") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "84"))
                        (rule "polySimp_mulComm0" (formula "84") (term "1"))
                        (rule "polySimp_rightDist" (formula "84") (term "1"))
                        (rule "mul_literals" (formula "84") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "84") (term "1,1"))
                        (rule "elimGcdGeq_antec" (formula "84") (inst "elimGcdRightDiv=add(Z(neglit(1(1(9(0(7(8(6(3(5(#))))))))))),
    mul(quotient_5,
        Z(neglit(4(2(8(1(4(7(3(7(0(1(#))))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(4(#))"))
                        (rule "polySimp_mulLiterals" (formula "84") (term "1,0,1,0"))
                        (rule "leq_literals" (formula "84") (term "0,0"))
                        (rule "concrete_or_2" (formula "84") (term "0"))
                        (rule "mul_literals" (formula "84") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "84") (term "0,0"))
                        (rule "add_literals" (formula "84") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "84") (term "1,0,0"))
                        (rule "add_zero_right" (formula "84") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "84") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "84") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "84") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "84") (term "0,0,0"))
                        (rule "add_literals" (formula "84") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "84") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "84") (term "0,0,0"))
                        (rule "add_literals" (formula "84") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "84") (term "0,0"))
                        (rule "add_literals" (formula "84") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "84") (term "1,0,0"))
                        (rule "add_zero_right" (formula "84") (term "0,0"))
                        (rule "leq_literals" (formula "84") (term "0"))
                        (rule "concrete_or_2" (formula "84"))
                        (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "3"))
                        (rule "polySimp_mulAssoc" (formula "15") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "15") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                        (rule "add_literals" (formula "15") (term "1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,1"))
                        (rule "mul_literals" (formula "15") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "72") (ifseqformula "3"))
                        (rule "polySimp_rightDist" (formula "72") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "72") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "72") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "72") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "72") (term "0"))
                        (rule "polySimp_addComm1" (formula "72") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "72") (term "0"))
                        (rule "add_literals" (formula "72") (term "1,1,0"))
                        (rule "polySimp_addAssoc" (formula "72") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "72") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0"))
                        (rule "add_literals" (formula "72") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "72") (term "1,0,0"))
                        (rule "add_zero_right" (formula "72") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "72") (term "0,0"))
                        (rule "add_literals" (formula "72") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "72"))
                        (rule "polySimp_mulComm0" (formula "72") (term "1"))
                        (rule "polySimp_rightDist" (formula "72") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "1,1"))
                        (rule "mul_literals" (formula "72") (term "0,1"))
                        (rule "elimGcdGeq_antec" (formula "72") (inst "elimGcdRightDiv=add(Z(neglit(4(2(8(1(4(7(3(7(0(1(#)))))))))))),
    mul(quotient_5,
        Z(neglit(8(4(6(3(8(4(7(4(1(2(#))))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "72") (term "0,0"))
                        (rule "concrete_or_2" (formula "72") (term "0"))
                        (rule "polySimp_pullOutFactor0b" (formula "72") (term "0,0"))
                        (rule "add_literals" (formula "72") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "72") (term "1,0,0"))
                        (rule "add_zero_right" (formula "72") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "72") (term "0,0,0"))
                        (rule "add_literals" (formula "72") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "72") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "72") (term "0,0,0"))
                        (rule "add_literals" (formula "72") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "72") (term "0,0"))
                        (rule "add_literals" (formula "72") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "72") (term "1,0,0"))
                        (rule "add_zero_right" (formula "72") (term "0,0"))
                        (rule "leq_literals" (formula "72") (term "0"))
                        (rule "concrete_or_2" (formula "72"))
                        (rule "inEqSimp_exactShadow3" (formula "83") (ifseqformula "3"))
                        (rule "polySimp_rightDist" (formula "83") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "83") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "83") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "83") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "83") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "83") (term "0"))
                        (rule "polySimp_addComm1" (formula "83") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "83") (term "0"))
                        (rule "add_literals" (formula "83") (term "1,1,0"))
                        (rule "polySimp_addAssoc" (formula "83") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "83") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "83") (term "0,0"))
                        (rule "add_literals" (formula "83") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "83") (term "1,0,0"))
                        (rule "add_zero_right" (formula "83") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "83") (term "0,0"))
                        (rule "add_literals" (formula "83") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "83"))
                        (rule "polySimp_mulComm0" (formula "83") (term "1"))
                        (rule "polySimp_rightDist" (formula "83") (term "1"))
                        (rule "mul_literals" (formula "83") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "83") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "84") (ifseqformula "4"))
                        (rule "polySimp_rightDist" (formula "84") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "84") (term "0"))
                        (rule "polySimp_rightDist" (formula "84") (term "0,0,0"))
                        (rule "mul_literals" (formula "84") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "84") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "84") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "84") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "84") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "84") (term "0,0"))
                        (rule "add_literals" (formula "84") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "84") (term "1,0,0"))
                        (rule "add_zero_right" (formula "84") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "84") (term "0,0"))
                        (rule "add_literals" (formula "84") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "84"))
                        (rule "polySimp_mulLiterals" (formula "84") (term "0"))
                        (rule "polySimp_elimOne" (formula "84") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "4"))
                        (rule "times_zero_1" (formula "19") (term "0,0"))
                        (rule "add_zero_left" (formula "19") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                        (rule "polySimp_elimOne" (formula "19") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "74") (ifseqformula "4"))
                        (rule "polySimp_rightDist" (formula "74") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "74") (term "0"))
                        (rule "polySimp_rightDist" (formula "74") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "74") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "74") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "74") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0"))
                        (rule "add_literals" (formula "74") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "74") (term "1,0,0"))
                        (rule "add_zero_right" (formula "74") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "74") (term "0,0"))
                        (rule "add_literals" (formula "74") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "74"))
                        (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                        (rule "elimGcdLeq_antec" (formula "74") (inst "elimGcdRightDiv=add(Z(4(3(7(2(1(6(0(1(6(1(#))))))))))),
    mul(quotient_5, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                        (rule "polySimp_mulLiterals" (formula "74") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,1,0"))
                        (rule "neg_literal" (formula "74") (term "0,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "74") (term "0,0"))
                        (rule "concrete_or_2" (formula "74") (term "0"))
                        (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                        (rule "add_literals" (formula "74") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "74") (term "1,0,0"))
                        (rule "add_zero_right" (formula "74") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "74") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "74") (term "0,0,0"))
                        (rule "add_literals" (formula "74") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "74") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "74") (term "0,0,0"))
                        (rule "add_literals" (formula "74") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                        (rule "add_literals" (formula "74") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "74") (term "1,0,0"))
                        (rule "add_zero_right" (formula "74") (term "0,0"))
                        (rule "qeq_literals" (formula "74") (term "0"))
                        (rule "concrete_or_2" (formula "74"))
                        (rule "inEqSimp_exactShadow3" (formula "91") (ifseqformula "4"))
                        (rule "polySimp_rightDist" (formula "91") (term "0,0"))
                        (rule "mul_literals" (formula "91") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "91") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "91") (term "1,0,0"))
                        (rule "polySimp_addAssoc" (formula "91") (term "0"))
                        (rule "polySimp_addComm1" (formula "91") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "91") (term "0"))
                        (rule "add_literals" (formula "91") (term "1,1,0"))
                        (rule "times_zero_1" (formula "91") (term "1,0"))
                        (rule "add_zero_right" (formula "91") (term "0"))
                        (rule "polySimp_addAssoc" (formula "91") (term "0"))
                        (rule "add_literals" (formula "91") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "91"))
                        (rule "mul_literals" (formula "91") (term "1"))
                        (rule "elimGcdGeq_antec" (formula "91") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                        (rule "polySimp_mulLiterals" (formula "91") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "91") (term "0,1,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "91") (term "0,0"))
                        (rule "concrete_or_2" (formula "91") (term "0"))
                        (rule "times_zero_1" (formula "91") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addLiterals" (formula "91") (term "0,0,0,0"))
                        (rule "add_literals" (formula "91") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "91") (term "0,0"))
                        (rule "add_literals" (formula "91") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "91") (term "1,0,0"))
                        (rule "add_zero_right" (formula "91") (term "0,0"))
                        (rule "leq_literals" (formula "91") (term "0"))
                        (rule "concrete_or_2" (formula "91"))
                        (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "11"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                        (rule "add_literals" (formula "5") (term "1,1,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0"))
                        (rule "add_zero_right" (formula "5") (term "0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "add_literals" (formula "5") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "mul_literals" (formula "5") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "5") (ifseqformula "92"))
                        (rule "greater_literals" (formula "5") (term "0,0"))
                        (rule "concrete_and_1" (formula "5") (term "0"))
                        (rule "times_zero_1" (formula "5") (term "1,0"))
                        (rule "leq_literals" (formula "5") (term "0"))
                        (rule "concrete_or_1" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "inEqSimp_exactShadow3" (formula "76") (ifseqformula "27"))
                        (rule "polySimp_rightDist" (formula "76") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "76") (term "0"))
                        (rule "polySimp_rightDist" (formula "76") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "76") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "76") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "76") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "76") (term "0,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "76") (term "0,0,0"))
                        (rule "add_literals" (formula "76") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "76"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "77") (ifseqformula "4"))
                        (rule "polySimp_rightDist" (formula "77") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "77") (term "0"))
                        (rule "polySimp_rightDist" (formula "77") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "77") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "77") (term "0,0,0,0"))
                        (rule "mul_literals" (formula "77") (term "0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "77") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "77") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "77") (term "0,0"))
                        (rule "add_literals" (formula "77") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "77") (term "1,0,0"))
                        (rule "add_zero_right" (formula "77") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "77") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "77") (term "0,0,0"))
                        (rule "add_literals" (formula "77") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,0"))
                        (rule "add_literals" (formula "77") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "77") (term "1,0,0"))
                        (rule "add_literals" (formula "77") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "77"))
                        (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                        (rule "inEqSimp_subsumption4" (formula "77") (ifseqformula "70"))
                        (rule "mul_literals" (formula "77") (term "0,1,0"))
                        (rule "greater_literals" (formula "77") (term "0,0"))
                        (rule "concrete_and_1" (formula "77") (term "0"))
                        (rule "leq_literals" (formula "77") (term "0"))
                        (rule "concrete_or_1" (formula "77"))
                        (rule "true_left" (formula "77"))
                        (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                        (rule "add_literals" (formula "5") (term "1,1,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0"))
                        (rule "add_zero_right" (formula "5") (term "0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                        (rule "add_literals" (formula "5") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                        (rule "add_literals" (formula "5") (term "1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "mul_literals" (formula "5") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "5") (ifseqformula "93"))
                        (rule "times_zero_1" (formula "5") (term "1,1,0"))
                        (rule "greater_literals" (formula "5") (term "0,0"))
                        (rule "concrete_and_1" (formula "5") (term "0"))
                        (rule "leq_literals" (formula "5") (term "0"))
                        (rule "concrete_or_1" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "inEqSimp_exactShadow3" (formula "77") (ifseqformula "17"))
                        (rule "polySimp_rightDist" (formula "77") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "77") (term "0"))
                        (rule "polySimp_rightDist" (formula "77") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "77") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "77") (term "0,0,0,0"))
                        (rule "mul_literals" (formula "77") (term "0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "77") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "77") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "77") (term "0,0"))
                        (rule "add_literals" (formula "77") (term "1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "77") (term "0,0,0"))
                        (rule "add_literals" (formula "77") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "77"))
                        (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "78") (ifseqformula "11"))
                        (rule "polySimp_rightDist" (formula "78") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "78") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "78") (term "0"))
                        (rule "polySimp_rightDist" (formula "78") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "78") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "78") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "78") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "78") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "78") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "78") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "78") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0"))
                        (rule "add_literals" (formula "78") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "78") (term "1,0,0"))
                        (rule "polySimp_addLiterals" (formula "78") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "78") (term "0,0"))
                        (rule "add_literals" (formula "78") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "78"))
                        (rule "polySimp_mulLiterals" (formula "78") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "27"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                        (rule "add_literals" (formula "5") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                        (rule "mul_literals" (formula "5") (term "0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "3"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                        (rule "mul_literals" (formula "6") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "19"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                        (rule "add_literals" (formula "7") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1"))
                        (rule "polySimp_rightDist" (formula "7") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                        (rule "mul_literals" (formula "7") (term "0,1"))
                        (rule "allLeft" (formula "34") (inst "t=mul(i_1_0, Z(2(#)))"))
                        (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "69"))
                        (rule "concrete_not_1" (formula "34") (term "0,0"))
                        (rule "concrete_or_2" (formula "34") (term "0"))
                        (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                        (rule "inEqSimp_contradInEq5" (formula "34") (term "0") (ifseqformula "67"))
                        (rule "times_zero_1" (formula "34") (term "1,1,0,0"))
                        (rule "greater_literals" (formula "34") (term "0,0,0"))
                        (rule "concrete_impl_1" (formula "34") (term "0,0"))
                        (rule "qeq_literals" (formula "34") (term "0,0"))
                        (rule "concrete_and_2" (formula "34") (term "0"))
                        (rule "concrete_or_2" (formula "34"))
                        (rule "allLeft" (formula "35") (inst "t=mul(i_1, Z(2(#)))"))
                        (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "57"))
                        (rule "concrete_not_1" (formula "35") (term "0,0"))
                        (rule "concrete_or_2" (formula "35") (term "0"))
                        (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                        (rule "inEqSimp_contradInEq5" (formula "35") (term "0") (ifseqformula "55"))
                        (rule "greater_literals" (formula "35") (term "0,0,0"))
                        (rule "concrete_impl_1" (formula "35") (term "0,0"))
                        (rule "times_zero_1" (formula "35") (term "1,0,0"))
                        (rule "qeq_literals" (formula "35") (term "0,0"))
                        (rule "concrete_and_2" (formula "35") (term "0"))
                        (rule "concrete_or_2" (formula "35"))
                        (rule "allLeft" (formula "41") (inst "t=quotient_1"))
                        (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "97"))
                        (rule "qeq_literals" (formula "41") (term "0,1,0"))
                        (rule "concrete_and_2" (formula "41") (term "1,0"))
                        (rule "concrete_or_4" (formula "41") (term "0"))
                        (rule "allLeft" (formula "43") (inst "t=quotient_1"))
                        (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0,0,0,0") (ifseqformula "98"))
                        (rule "qeq_literals" (formula "43") (term "0,1,0,0,0,0"))
                        (rule "concrete_and_2" (formula "43") (term "1,0,0,0,0"))
                        (rule "concrete_or_4" (formula "43") (term "0,0,0,0"))
                        (rule "allLeft" (formula "42") (inst "t=result_1_0"))
                        (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "92"))
                        (rule "qeq_literals" (formula "42") (term "0,1,0"))
                        (rule "concrete_and_2" (formula "42") (term "1,0"))
                        (rule "concrete_or_4" (formula "42") (term "0"))
                        (rule "allLeft" (formula "43") (inst "t=quotient_2"))
                        (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "101"))
                        (rule "qeq_literals" (formula "43") (term "0,1,0"))
                        (rule "concrete_and_2" (formula "43") (term "1,0"))
                        (rule "concrete_or_4" (formula "43") (term "0"))
                        (rule "allLeft" (formula "46") (inst "t=quotient_2"))
                        (rule "inEqSimp_commuteGeq" (formula "46") (term "1,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0,0,0,0") (ifseqformula "102"))
                        (rule "qeq_literals" (formula "46") (term "0,1,0,0,0,0"))
                        (rule "concrete_and_2" (formula "46") (term "1,0,0,0,0"))
                        (rule "concrete_or_4" (formula "46") (term "0,0,0,0"))
                        (rule "allLeft" (formula "47") (inst "t=result_1_0"))
                        (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0,0,0,0") (ifseqformula "95"))
                        (rule "qeq_literals" (formula "47") (term "0,1,0,0,0,0"))
                        (rule "concrete_and_2" (formula "47") (term "1,0,0,0,0"))
                        (rule "concrete_or_4" (formula "47") (term "0,0,0,0"))
                        (rule "allLeft" (formula "64") (inst "t=quotient_1"))
                        (rule "inEqSimp_commuteGeq" (formula "64") (term "1,0,0,0,0"))
                        (rule "Query_axiom_for_hash_java_lang_Object_int__in_java_util_VerifiedIdentityHashMap" (formula "64") (term "0,1,0,0,0") (inst "hash_sk=hash_sk_0") (inst "#p1=x_1") (inst "#p0=o") (inst "#res=x"))
                        (rule "expand_inInt" (formula "64") (term "0,0,1"))
                        (rule "replace_int_MIN" (formula "64") (term "0,1,0,0,1"))
                        (rule "replace_int_MAX" (formula "64") (term "1,0,0,0,1"))
                        (rule "eqSymm" (formula "64") (term "1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "64") (term "1,0,0,1"))
                        (rule "Query_axiom_for_hash_java_lang_Object_int__in_java_util_VerifiedIdentityHashMap" (formula "65") (term "0,1,1,1,0") (inst "hash_sk=hash_sk_1") (inst "#p1=x_1") (inst "#p0=o") (inst "#res=x"))
                        (rule "expand_inInt" (formula "65") (term "0,0,1"))
                        (rule "replace_int_MIN" (formula "65") (term "0,1,0,0,1"))
                        (rule "replace_int_MAX" (formula "65") (term "1,0,0,0,1"))
                        (rule "eqSymm" (formula "65") (term "1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "65") (term "1,0,0,1"))
                        (rule "inEqSimp_contradInEq1" (formula "66") (term "1,0,0,0,0,0") (ifseqformula "105"))
                        (rule "qeq_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                        (rule "concrete_and_2" (formula "66") (term "1,0,0,0,0,0"))
                        (rule "concrete_or_4" (formula "66") (term "0,0,0,0,0"))
                        (rule "allLeft" (formula "67") (inst "t=result_1_0"))
                        (rule "Query_axiom_for_hash_java_lang_Object_int__in_java_util_VerifiedIdentityHashMap" (formula "67") (term "0,1,0,0,0") (inst "hash_sk=hash_sk_2") (inst "#p1=x_1") (inst "#p0=o") (inst "#res=x"))
                        (rule "expand_inInt" (formula "67") (term "0,0,1"))
                        (rule "replace_int_MIN" (formula "67") (term "0,1,0,0,1"))
                        (rule "replace_int_MAX" (formula "67") (term "1,0,0,0,1"))
                        (rule "eqSymm" (formula "67") (term "1,0,1"))
                        (rule "inEqSimp_commuteGeq" (formula "68") (term "1,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "67") (term "1,0,0,1"))
                        (rule "Query_axiom_for_hash_java_lang_Object_int__in_java_util_VerifiedIdentityHashMap" (formula "68") (term "0,1,1,1,0") (inst "hash_sk=hash_sk_3") (inst "#p1=x_1") (inst "#p0=o") (inst "#res=x"))
                        (rule "expand_inInt" (formula "68") (term "0,0,1"))
                        (rule "replace_int_MIN" (formula "68") (term "0,1,0,0,1"))
                        (rule "replace_int_MAX" (formula "68") (term "1,0,0,0,1"))
                        (rule "eqSymm" (formula "68") (term "1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "68") (term "1,0,0,1"))
                        (rule "inEqSimp_contradInEq1" (formula "69") (term "1,0,0,0,0,0") (ifseqformula "101"))
                        (rule "qeq_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                        (rule "concrete_and_2" (formula "69") (term "1,0,0,0,0,0"))
                        (rule "concrete_or_4" (formula "69") (term "0,0,0,0,0"))
                        (rule "allLeft" (formula "70") (inst "t=quotient_2"))
                        (rule "inEqSimp_commuteGeq" (formula "70") (term "1,0,0,0,0"))
                        (rule "Query_axiom_for_hash_java_lang_Object_int__in_java_util_VerifiedIdentityHashMap" (formula "70") (term "0,1,0,0,0") (inst "hash_sk=hash_sk_4") (inst "#p1=x_1") (inst "#p0=o") (inst "#res=x"))
                        (rule "expand_inInt" (formula "70") (term "0,0,1"))
                        (rule "replace_int_MIN" (formula "70") (term "0,1,0,0,1"))
                        (rule "replace_int_MAX" (formula "70") (term "1,0,0,0,1"))
                        (rule "eqSymm" (formula "70") (term "1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "70") (term "1,0,0,1"))
                        (rule "Query_axiom_for_hash_java_lang_Object_int__in_java_util_VerifiedIdentityHashMap" (formula "71") (term "0,1,1,1,0") (inst "hash_sk=hash_sk_5") (inst "#p1=x_1") (inst "#p0=o") (inst "#res=x"))
                        (rule "expand_inInt" (formula "71") (term "0,0,1"))
                        (rule "replace_int_MIN" (formula "71") (term "0,1,0,0,1"))
                        (rule "replace_int_MAX" (formula "71") (term "1,0,0,0,1"))
                        (rule "eqSymm" (formula "71") (term "1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "71") (term "1,0,0,1"))
                        (rule "inEqSimp_contradInEq1" (formula "72") (term "1,0,0,0,0,0") (ifseqformula "112"))
                        (rule "qeq_literals" (formula "72") (term "0,1,0,0,0,0,0"))
                        (rule "concrete_and_2" (formula "72") (term "1,0,0,0,0,0"))
                        (rule "concrete_or_4" (formula "72") (term "0,0,0,0,0"))
                        (rule "commute_or_2" (formula "75") (term "0"))
                        (rule "nnf_notAnd" (formula "87") (term "0,1,0"))
                        (rule "double_not" (formula "87") (term "0,0,1,0"))
                        (rule "nnf_imp2or" (formula "87") (term "0,1,1,0"))
                        (rule "nnf_notAnd" (formula "77") (term "0,0,1,0"))
                        (rule "nnf_notAnd" (formula "77") (term "0,1,0,1,0"))
                        (rule "double_not" (formula "77") (term "0,0,1,0,1,0"))
                        (rule "inEqSimp_exactShadow3" (formula "111") (ifseqformula "94"))
                        (rule "times_zero_1" (formula "111") (term "0,0"))
                        (rule "add_zero_left" (formula "111") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "111"))
                        (rule "mul_literals" (formula "111") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "111") (ifseqformula "115"))
                        (rule "times_zero_1" (formula "111") (term "1,1,0"))
                        (rule "greater_literals" (formula "111") (term "0,0"))
                        (rule "concrete_and_1" (formula "111") (term "0"))
                        (rule "leq_literals" (formula "111") (term "0"))
                        (rule "concrete_or_1" (formula "111"))
                        (rule "true_left" (formula "111"))
                        (rule "inEqSimp_exactShadow3" (formula "112") (ifseqformula "22"))
                        (rule "mul_literals" (formula "112") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "112") (term "0"))
                        (rule "add_literals" (formula "112") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "112"))
                        (rule "mul_literals" (formula "112") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "112") (ifseqformula "115"))
                        (rule "greater_literals" (formula "112") (term "0,0"))
                        (rule "concrete_and_1" (formula "112") (term "0"))
                        (rule "times_zero_1" (formula "112") (term "1,0"))
                        (rule "leq_literals" (formula "112") (term "0"))
                        (rule "concrete_or_1" (formula "112"))
                        (rule "true_left" (formula "112"))
                        (rule "inEqSimp_exactShadow2" (formula "112") (ifseqformula "17"))
                        (rule "mul_literals" (formula "112") (term "1,0,0,1"))
                        (rule "greater_literals" (formula "112") (term "0"))
                        (rule "concrete_impl_1" (formula "112"))
                        (rule "mul_literals" (formula "112") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "112") (term "0"))
                        (rule "add_literals" (formula "112") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "112"))
                        (rule "mul_literals" (formula "112") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "112") (ifseqformula "115"))
                        (rule "greater_literals" (formula "112") (term "0,0"))
                        (rule "concrete_and_1" (formula "112") (term "0"))
                        (rule "times_zero_1" (formula "112") (term "1,0"))
                        (rule "leq_literals" (formula "112") (term "0"))
                        (rule "concrete_or_1" (formula "112"))
                        (rule "true_left" (formula "112"))
                        (rule "inEqSimp_exactShadow3" (formula "116") (ifseqformula "3"))
                        (rule "polySimp_rightDist" (formula "116") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "116") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "116") (term "0,0,0"))
                        (rule "mul_literals" (formula "116") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "116") (term "0"))
                        (rule "polySimp_addAssoc" (formula "116") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "116") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "116") (term "0,0"))
                        (rule "add_literals" (formula "116") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "116") (term "1,0,0"))
                        (rule "add_zero_right" (formula "116") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "116") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "116") (term "0,0,0"))
                        (rule "add_literals" (formula "116") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "116") (term "0,0"))
                        (rule "add_literals" (formula "116") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "116") (term "1,0,0"))
                        (rule "add_literals" (formula "116") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "116"))
                        (rule "mul_literals" (formula "116") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "116") (ifseqformula "111"))
                        (rule "greater_literals" (formula "116") (term "0,0"))
                        (rule "concrete_and_1" (formula "116") (term "0"))
                        (rule "times_zero_1" (formula "116") (term "1,0"))
                        (rule "leq_literals" (formula "116") (term "0"))
                        (rule "concrete_or_1" (formula "116"))
                        (rule "true_left" (formula "116"))
                        (rule "inEqSimp_exactShadow3" (formula "111") (ifseqformula "109"))
                        (rule "times_zero_1" (formula "111") (term "0,0"))
                        (rule "add_zero_left" (formula "111") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "111"))
                        (rule "mul_literals" (formula "111") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "111") (ifseqformula "115"))
                        (rule "greater_literals" (formula "111") (term "0,0"))
                        (rule "concrete_and_1" (formula "111") (term "0"))
                        (rule "times_zero_1" (formula "111") (term "1,0"))
                        (rule "leq_literals" (formula "111") (term "0"))
                        (rule "concrete_or_1" (formula "111"))
                        (rule "true_left" (formula "111"))
                        (rule "inEqSimp_exactShadow3" (formula "116") (ifseqformula "14"))
                        (rule "polySimp_rightDist" (formula "116") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "116") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "116") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "116") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "116") (term "0"))
                        (rule "polySimp_addComm1" (formula "116") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "116") (term "0"))
                        (rule "add_literals" (formula "116") (term "1,1,0"))
                        (rule "times_zero_1" (formula "116") (term "1,0"))
                        (rule "add_zero_right" (formula "116") (term "0"))
                        (rule "polySimp_addComm1" (formula "116") (term "0"))
                        (rule "add_literals" (formula "116") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "116"))
                        (rule "polySimp_mulLiterals" (formula "116") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "117") (ifseqformula "20"))
                        (rule "polySimp_rightDist" (formula "117") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "117") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "117") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "117") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "117") (term "0"))
                        (rule "polySimp_addComm1" (formula "117") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "117") (term "0"))
                        (rule "add_literals" (formula "117") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "117") (term "0,0"))
                        (rule "add_literals" (formula "117") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "117"))
                        (rule "polySimp_mulComm0" (formula "117") (term "1"))
                        (rule "polySimp_rightDist" (formula "117") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "117") (term "1,1"))
                        (rule "mul_literals" (formula "117") (term "0,1"))
                        (rule "nnf_notAnd" (formula "86") (term "0,0,1,1,0"))
                        (rule "inEqSimp_exactShadow3" (formula "118") (ifseqformula "30"))
                        (rule "polySimp_rightDist" (formula "118") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "118") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "118") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "118") (term "0"))
                        (rule "polySimp_rightDist" (formula "118") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "118") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "118") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "118") (term "0,0"))
                        (rule "add_literals" (formula "118") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "118"))
                        (rule "polySimp_mulComm0" (formula "118") (term "1"))
                        (rule "polySimp_rightDist" (formula "118") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "118") (term "1,1"))
                        (rule "mul_literals" (formula "118") (term "0,1"))
                        (rule "elimGcdLeq_antec" (formula "98") (inst "elimGcdRightDiv=add(Z(0(4(6(8(8(0(1(7(6(#)))))))))),
    mul(quotient_5,
        Z(neglit(4(2(8(1(4(7(3(7(0(1(#))))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(4(#))"))
                        (rule "polySimp_mulLiterals" (formula "98") (term "1,0,1,0"))
                        (rule "leq_literals" (formula "98") (term "0,0"))
                        (rule "concrete_or_2" (formula "98") (term "0"))
                        (rule "neg_literal" (formula "98") (term "0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "98") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "98") (term "0,0"))
                        (rule "add_literals" (formula "98") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "98") (term "1,0,0"))
                        (rule "add_zero_right" (formula "98") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "98") (term "0,0,0"))
                        (rule "add_literals" (formula "98") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "98") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "98") (term "0,0,0"))
                        (rule "add_literals" (formula "98") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "98") (term "0,0"))
                        (rule "add_literals" (formula "98") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "98") (term "1,0,0"))
                        (rule "add_zero_right" (formula "98") (term "0,0"))
                        (rule "qeq_literals" (formula "98") (term "0"))
                        (rule "concrete_or_2" (formula "98"))
                        (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=add(Z(neglit(3(2(8(1(4(7(3(7(0(1(#)))))))))))),
    mul(quotient_5,
        Z(neglit(8(4(6(3(8(4(7(4(1(2(#))))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(4(#))"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                        (rule "leq_literals" (formula "6") (term "0,0"))
                        (rule "concrete_or_2" (formula "6") (term "0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "leq_literals" (formula "6") (term "0"))
                        (rule "concrete_or_2" (formula "6"))
                        (rule "inEqSimp_subsumption1" (formula "93") (ifseqformula "6"))
                        (rule "inEqSimp_homoInEq0" (formula "93") (term "0"))
                        (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "93") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "93") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "93") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "93") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "93") (term "0,0,0"))
                        (rule "add_literals" (formula "93") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "93") (term "0,0"))
                        (rule "add_literals" (formula "93") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "93") (term "1,0,0"))
                        (rule "add_zero_right" (formula "93") (term "0,0"))
                        (rule "qeq_literals" (formula "93") (term "0"))
                        (rule "concrete_or_1" (formula "93"))
                        (rule "true_left" (formula "93"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0") (ifseqformula "27"))
                        (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "40"))
                        (rule "concrete_or_1" (formula "39"))
                        (rule "true_left" (formula "39"))
                        (rule "commute_or_2" (formula "76") (term "0"))
                        (rule "inEqSimp_exactShadow0" (formula "21") (ifseqformula "91"))
                        (rule "greater_literals" (formula "21") (term "0,0"))
                        (rule "concrete_and_1" (formula "21") (term "0"))
                        (rule "greater_literals" (formula "21") (term "0"))
                        (rule "concrete_impl_1" (formula "21"))
                        (rule "polySimp_mulAssoc" (formula "21") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "21") (term "0"))
                        (rule "add_literals" (formula "21") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                        (rule "mul_literals" (formula "21") (term "0,1"))
                        (rule "inEqSimp_exactShadow0" (formula "22") (ifseqformula "97"))
                        (rule "eq_and" (formula "22") (term "0"))
                        (rule "greater_literals" (formula "22") (term "0"))
                        (rule "concrete_impl_1" (formula "22"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "22") (term "0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "22") (term "0"))
                        (rule "add_literals" (formula "22") (term "1,1,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                        (rule "add_literals" (formula "22") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                        (rule "mul_literals" (formula "22") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "22") (ifseqformula "113"))
                        (rule "mul_literals" (formula "22") (term "1,1,0"))
                        (rule "greater_literals" (formula "22") (term "0,0"))
                        (rule "concrete_and_1" (formula "22") (term "0"))
                        (rule "leq_literals" (formula "22") (term "0"))
                        (rule "concrete_or_1" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "inEqSimp_exactShadow1" (formula "22") (ifseqformula "91"))
                        (rule "greater_literals" (formula "22") (term "0"))
                        (rule "concrete_impl_1" (formula "22"))
                        (rule "mul_literals" (formula "22") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                        (rule "polySimp_elimOne" (formula "22") (term "0"))
                        (rule "inEqSimp_exactShadow1" (formula "22") (ifseqformula "94"))
                        (rule "greater_literals" (formula "22") (term "0"))
                        (rule "concrete_impl_1" (formula "22"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                        (rule "add_literals" (formula "22") (term "1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                        (rule "polySimp_elimOne" (formula "22") (term "0"))
                        (rule "inEqSimp_exactShadow1" (formula "23") (ifseqformula "107"))
                        (rule "greater_literals" (formula "23") (term "0"))
                        (rule "concrete_impl_1" (formula "23"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "23") (term "0"))
                        (rule "add_literals" (formula "23") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1"))
                        (rule "polySimp_rightDist" (formula "23") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                        (rule "mul_literals" (formula "23") (term "0,1"))
                        (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                        (rule "add_literals" (formula "23") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0"))
                        (rule "qeq_literals" (formula "23") (term "0"))
                        (rule "concrete_or_1" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "inEqSimp_exactShadow0" (formula "23") (ifseqformula "94"))
                        (rule "greater_literals" (formula "23") (term "1,0"))
                        (rule "concrete_and_3" (formula "23") (term "0"))
                        (rule "greater_literals" (formula "23") (term "0"))
                        (rule "concrete_impl_1" (formula "23"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "23") (term "0"))
                        (rule "add_literals" (formula "23") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1"))
                        (rule "polySimp_rightDist" (formula "23") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                        (rule "mul_literals" (formula "23") (term "0,1"))
                        (rule "inEqSimp_subsumption6" (formula "23") (ifseqformula "5"))
                        (rule "greater_literals" (formula "23") (term "0,0"))
                        (rule "concrete_and_1" (formula "23") (term "0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                        (rule "add_literals" (formula "23") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0"))
                        (rule "qeq_literals" (formula "23") (term "0"))
                        (rule "concrete_or_1" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "inEqSimp_exactShadow1" (formula "23") (ifseqformula "108"))
                        (rule "greater_literals" (formula "23") (term "0"))
                        (rule "concrete_impl_1" (formula "23"))
                        (rule "polySimp_mulAssoc" (formula "23") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "23") (term "0"))
                        (rule "add_literals" (formula "23") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1"))
                        (rule "polySimp_rightDist" (formula "23") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                        (rule "mul_literals" (formula "23") (term "0,1"))
                        (rule "inEqSimp_exactShadow1" (formula "24") (ifseqformula "111"))
                        (rule "greater_literals" (formula "24") (term "0"))
                        (rule "concrete_impl_1" (formula "24"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                        (rule "add_literals" (formula "24") (term "1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                        (rule "polySimp_elimOne" (formula "24") (term "0"))
                        (rule "commute_or" (formula "78") (term "0,0,1,1,0"))
                        (rule "elimGcdLeq_antec" (formula "119") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                        (rule "times_zero_1" (formula "119") (term "1,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "119") (term "0,0"))
                        (rule "concrete_or_2" (formula "119") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0"))
                        (rule "polySimp_addLiterals" (formula "119") (term "0,0,0,0"))
                        (rule "neg_literal" (formula "119") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "119") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "119") (term "0,0"))
                        (rule "add_literals" (formula "119") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "119") (term "1,0,0"))
                        (rule "add_zero_right" (formula "119") (term "0,0"))
                        (rule "qeq_literals" (formula "119") (term "0"))
                        (rule "concrete_or_2" (formula "119"))
                        (rule "jdiv_axiom" (formula "134") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "108"))
                        (rule "times_zero_1" (formula "1") (term "1,1,0,0,0"))
                        (rule "greater_literals" (formula "1") (term "0,0,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                        (rule "leq_literals" (formula "1") (term "0,0,0"))
                        (rule "concrete_or_1" (formula "1") (term "0,0"))
                        (rule "ifthenelse_true" (formula "1") (term "0"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "135") (term "0,0,0") (ifseqformula "1"))
                        (rule "inEqSimp_exactShadow3" (formula "117") (ifseqformula "95"))
                        (rule "polySimp_rightDist" (formula "117") (term "0,0"))
                        (rule "mul_literals" (formula "117") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "117") (term "0"))
                        (rule "add_literals" (formula "117") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "117"))
                        (rule "mul_literals" (formula "117") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "117") (ifseqformula "119"))
                        (rule "greater_literals" (formula "117") (term "0,0"))
                        (rule "concrete_and_1" (formula "117") (term "0"))
                        (rule "mul_literals" (formula "117") (term "1,0"))
                        (rule "leq_literals" (formula "117") (term "0"))
                        (rule "concrete_or_1" (formula "117"))
                        (rule "true_left" (formula "117"))
                        (rule "inEqSimp_exactShadow3" (formula "117") (ifseqformula "113"))
                        (rule "polySimp_rightDist" (formula "117") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0"))
                        (rule "mul_literals" (formula "117") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "117") (term "0"))
                        (rule "polySimp_addComm1" (formula "117") (term "0,0"))
                        (rule "add_literals" (formula "117") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "117") (term "0"))
                        (rule "add_literals" (formula "117") (term "1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "117"))
                        (rule "mul_literals" (formula "117") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "117") (ifseqformula "119"))
                        (rule "greater_literals" (formula "117") (term "0,0"))
                        (rule "concrete_and_1" (formula "117") (term "0"))
                        (rule "times_zero_1" (formula "117") (term "1,0"))
                        (rule "leq_literals" (formula "117") (term "0"))
                        (rule "concrete_or_1" (formula "117"))
                        (rule "true_left" (formula "117"))
                        (rule "inEqSimp_exactShadow3" (formula "117") (ifseqformula "110"))
                        (rule "polySimp_rightDist" (formula "117") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0"))
                        (rule "mul_literals" (formula "117") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "117") (term "0"))
                        (rule "polySimp_addComm1" (formula "117") (term "0,0"))
                        (rule "add_literals" (formula "117") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "117"))
                        (rule "polySimp_mulComm0" (formula "117") (term "1"))
                        (rule "polySimp_rightDist" (formula "117") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "117") (term "1,1"))
                        (rule "mul_literals" (formula "117") (term "0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "118") (ifseqformula "111"))
                        (rule "polySimp_rightDist" (formula "118") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "118") (term "1,0,0"))
                        (rule "mul_literals" (formula "118") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "118"))
                        (rule "polySimp_mulComm0" (formula "118") (term "1"))
                        (rule "polySimp_rightDist" (formula "118") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "118") (term "1,1"))
                        (rule "mul_literals" (formula "118") (term "0,1"))
                        (rule "inEqSimp_exactShadow2" (formula "119") (ifseqformula "100"))
                        (rule "greater_literals" (formula "119") (term "0"))
                        (rule "concrete_impl_1" (formula "119"))
                        (rule "polySimp_rightDist" (formula "119") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "119") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "119") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "119") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0"))
                        (rule "mul_literals" (formula "119") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "119") (term "0"))
                        (rule "polySimp_addAssoc" (formula "119") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "119") (term "0,0,0"))
                        (rule "add_literals" (formula "119") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "119") (term "0,0"))
                        (rule "add_literals" (formula "119") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "119") (term "1,0,0"))
                        (rule "add_literals" (formula "119") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "119"))
                        (rule "mul_literals" (formula "119") (term "1"))
                        (rule "inEqSimp_exactShadow2" (formula "120") (ifseqformula "97"))
                        (rule "greater_literals" (formula "120") (term "0"))
                        (rule "concrete_impl_1" (formula "120"))
                        (rule "polySimp_rightDist" (formula "120") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "120") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "120") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "120") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "120") (term "1,0,0"))
                        (rule "mul_literals" (formula "120") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "120") (term "0"))
                        (rule "polySimp_addComm1" (formula "120") (term "0,0"))
                        (rule "add_literals" (formula "120") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "120"))
                        (rule "polySimp_mulComm0" (formula "120") (term "1"))
                        (rule "polySimp_rightDist" (formula "120") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "120") (term "1,1"))
                        (rule "mul_literals" (formula "120") (term "0,1"))
                        (rule "inEqSimp_exactShadow2" (formula "121") (ifseqformula "101"))
                        (rule "greater_literals" (formula "121") (term "0"))
                        (rule "concrete_impl_1" (formula "121"))
                        (rule "polySimp_rightDist" (formula "121") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "121") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "121") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "121") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "121") (term "1,0,0"))
                        (rule "mul_literals" (formula "121") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "121") (term "0"))
                        (rule "polySimp_addAssoc" (formula "121") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "121") (term "0,0,0"))
                        (rule "add_literals" (formula "121") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "121") (term "0,0"))
                        (rule "add_literals" (formula "121") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "121") (term "1,0,0"))
                        (rule "add_literals" (formula "121") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "121"))
                        (rule "mul_literals" (formula "121") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "122") (ifseqformula "98"))
                        (rule "polySimp_rightDist" (formula "122") (term "0,0"))
                        (rule "mul_literals" (formula "122") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "122") (term "1,0,0"))
                        (rule "polySimp_addAssoc" (formula "122") (term "0"))
                        (rule "polySimp_addComm1" (formula "122") (term "0,0"))
                        (rule "add_literals" (formula "122") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "122") (term "0"))
                        (rule "add_literals" (formula "122") (term "1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "122"))
                        (rule "mul_literals" (formula "122") (term "1"))
                        (rule "inEqSimp_exactShadow2" (formula "123") (ifseqformula "96"))
                        (rule "greater_literals" (formula "123") (term "0"))
                        (rule "concrete_impl_1" (formula "123"))
                        (rule "polySimp_rightDist" (formula "123") (term "1,0,0"))
                        (rule "mul_literals" (formula "123") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "123") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "123") (term "0,0"))
                        (rule "mul_literals" (formula "123") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "123") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "123"))
                        (rule "polySimp_mulComm0" (formula "123") (term "1"))
                        (rule "polySimp_rightDist" (formula "123") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "123") (term "1,1"))
                        (rule "mul_literals" (formula "123") (term "0,1"))
                        (rule "inEqSimp_exactShadow1" (formula "19") (ifseqformula "98"))
                        (rule "greater_literals" (formula "19") (term "0"))
                        (rule "concrete_impl_1" (formula "19"))
                        (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0"))
                        (rule "polySimp_rightDist" (formula "19") (term "0,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                        (rule "add_literals" (formula "19") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                        (rule "inEqSimp_exactShadow1" (formula "20") (ifseqformula "112"))
                        (rule "greater_literals" (formula "20") (term "0"))
                        (rule "concrete_impl_1" (formula "20"))
                        (rule "polySimp_mulAssoc" (formula "20") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "20") (term "0"))
                        (rule "add_literals" (formula "20") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                        (rule "mul_literals" (formula "20") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1"))
                        (rule "polySimp_rightDist" (formula "20") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                        (rule "mul_literals" (formula "20") (term "0,1"))
                        (rule "inEqSimp_exactShadow0" (formula "21") (ifseqformula "98"))
                        (rule "greater_literals" (formula "21") (term "0,0"))
                        (rule "concrete_and_1" (formula "21") (term "0"))
                        (rule "greater_literals" (formula "21") (term "0"))
                        (rule "concrete_impl_1" (formula "21"))
                        (rule "polySimp_mulAssoc" (formula "21") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "21") (term "0"))
                        (rule "add_literals" (formula "21") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                        (rule "mul_literals" (formula "21") (term "0,1"))
                        (rule "inEqSimp_exactShadow0" (formula "22") (ifseqformula "100"))
                        (rule "greater_literals" (formula "22") (term "0,0"))
                        (rule "concrete_and_1" (formula "22") (term "0"))
                        (rule "greater_literals" (formula "22") (term "0"))
                        (rule "concrete_impl_1" (formula "22"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "22") (term "0"))
                        (rule "add_literals" (formula "22") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                        (rule "inEqSimp_exactShadow0" (formula "23") (ifseqformula "104"))
                        (rule "eq_and" (formula "23") (term "0"))
                        (rule "greater_literals" (formula "23") (term "0"))
                        (rule "concrete_impl_1" (formula "23"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "23") (term "0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "0,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "23") (term "0"))
                        (rule "add_literals" (formula "23") (term "1,1,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                        (rule "add_literals" (formula "23") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0"))
                        (rule "add_literals" (formula "23") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                        (rule "inEqSimp_exactShadow1" (formula "24") (ifseqformula "100"))
                        (rule "greater_literals" (formula "24") (term "0"))
                        (rule "concrete_impl_1" (formula "24"))
                        (rule "mul_literals" (formula "24") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                        (rule "inEqSimp_exactShadow1" (formula "24") (ifseqformula "115"))
                        (rule "greater_literals" (formula "24") (term "0"))
                        (rule "concrete_impl_1" (formula "24"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "24") (term "0"))
                        (rule "add_literals" (formula "24") (term "1,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1"))
                        (rule "polySimp_rightDist" (formula "24") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                        (rule "mul_literals" (formula "24") (term "0,1"))
                        (rule "inEqSimp_exactShadow1" (formula "25") (ifseqformula "119"))
                        (rule "greater_literals" (formula "25") (term "0"))
                        (rule "concrete_impl_1" (formula "25"))
                        (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "polySimp_rightDist" (formula "25") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                        (rule "add_literals" (formula "25") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                        (rule "inEqSimp_exactShadow1" (formula "119") (ifseqformula "102"))
                        (rule "mul_literals" (formula "119") (term "1,0,1"))
                        (rule "greater_literals" (formula "119") (term "0"))
                        (rule "concrete_impl_1" (formula "119"))
                        (rule "polySimp_rightDist" (formula "119") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0"))
                        (rule "mul_literals" (formula "119") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "119") (term "0"))
                        (rule "add_literals" (formula "119") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "119"))
                        (rule "mul_literals" (formula "119") (term "1"))
                        (rule "inEqSimp_exactShadow1" (formula "120") (ifseqformula "117"))
                        (rule "greater_literals" (formula "120") (term "0"))
                        (rule "concrete_impl_1" (formula "120"))
                        (rule "polySimp_rightDist" (formula "120") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "120") (term "1,0,0"))
                        (rule "mul_literals" (formula "120") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "120") (term "1,0"))
                        (rule "mul_literals" (formula "120") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "120") (term "0"))
                        (rule "polySimp_addComm1" (formula "120") (term "0,0"))
                        (rule "add_literals" (formula "120") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "120"))
                        (rule "polySimp_mulComm0" (formula "120") (term "1"))
                        (rule "polySimp_rightDist" (formula "120") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "120") (term "1,1"))
                        (rule "mul_literals" (formula "120") (term "0,1"))
                        (rule "inEqSimp_exactShadow1" (formula "121") (ifseqformula "122"))
                        (rule "greater_literals" (formula "121") (term "0"))
                        (rule "concrete_impl_1" (formula "121"))
                        (rule "polySimp_rightDist" (formula "121") (term "1,0"))
                        (rule "mul_literals" (formula "121") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "121") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "121") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "121") (term "1,0,0"))
                        (rule "mul_literals" (formula "121") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "121") (term "0"))
                        (rule "polySimp_addComm1" (formula "121") (term "0,0"))
                        (rule "add_literals" (formula "121") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "121") (term "0"))
                        (rule "add_literals" (formula "121") (term "1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "121"))
                        (rule "mul_literals" (formula "121") (term "1"))
                        (rule "inEqSimp_exactShadow1" (formula "122") (ifseqformula "105"))
                        (rule "greater_literals" (formula "122") (term "0"))
                        (rule "concrete_impl_1" (formula "122"))
                        (rule "polySimp_rightDist" (formula "122") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "122") (term "1,1,0"))
                        (rule "mul_literals" (formula "122") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "122") (term "0,0"))
                        (rule "mul_literals" (formula "122") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "122") (term "1,0,0"))
                        (rule "polySimp_addAssoc" (formula "122") (term "0"))
                        (rule "polySimp_addComm1" (formula "122") (term "0,0"))
                        (rule "add_literals" (formula "122") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "122") (term "0"))
                        (rule "add_literals" (formula "122") (term "1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "122"))
                        (rule "mul_literals" (formula "122") (term "1"))
                        (rule "inEqSimp_exactShadow1" (formula "123") (ifseqformula "118"))
                        (rule "greater_literals" (formula "123") (term "0"))
                        (rule "concrete_impl_1" (formula "123"))
                        (rule "polySimp_mulAssoc" (formula "123") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "123") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "123") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "123") (term "0,0"))
                        (rule "mul_literals" (formula "123") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "123") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "123"))
                        (rule "polySimp_mulComm0" (formula "123") (term "1"))
                        (rule "polySimp_rightDist" (formula "123") (term "1"))
                        (rule "mul_literals" (formula "123") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "123") (term "1,1"))
                        (rule "inEqSimp_exactShadow0" (formula "124") (ifseqformula "103"))
                        (rule "greater_literals" (formula "124") (term "1,0"))
                        (rule "concrete_and_3" (formula "124") (term "0"))
                        (rule "greater_literals" (formula "124") (term "0"))
                        (rule "concrete_impl_1" (formula "124"))
                        (rule "polySimp_mulAssoc" (formula "124") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "124") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "124") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "124") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "124") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "124") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "124") (term "0,0"))
                        (rule "mul_literals" (formula "124") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "124"))
                        (rule "polySimp_mulComm0" (formula "124") (term "1"))
                        (rule "polySimp_rightDist" (formula "124") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "124") (term "1,1"))
                        (rule "mul_literals" (formula "124") (term "0,1"))
                        (rule "inEqSimp_exactShadow0" (formula "125") (ifseqformula "104"))
                        (rule "greater_literals" (formula "125") (term "0,0"))
                        (rule "concrete_and_1" (formula "125") (term "0"))
                        (rule "greater_literals" (formula "125") (term "0"))
                        (rule "concrete_impl_1" (formula "125"))
                        (rule "polySimp_rightDist" (formula "125") (term "1,0,0"))
                        (rule "mul_literals" (formula "125") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "125") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "125") (term "1,0"))
                        (rule "mul_literals" (formula "125") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "125") (term "0,0"))
                        (rule "mul_literals" (formula "125") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "125") (term "1,0,0"))
                        (rule "polySimp_addAssoc" (formula "125") (term "0"))
                        (rule "polySimp_addComm1" (formula "125") (term "0,0"))
                        (rule "add_literals" (formula "125") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "125"))
                        (rule "polySimp_mulComm0" (formula "125") (term "1"))
                        (rule "polySimp_rightDist" (formula "125") (term "1"))
                        (rule "mul_literals" (formula "125") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "125") (term "1,1"))
                        (rule "inEqSimp_exactShadow0" (formula "126") (ifseqformula "107"))
                        (rule "greater_literals" (formula "126") (term "1,0"))
                        (rule "concrete_and_3" (formula "126") (term "0"))
                        (rule "greater_literals" (formula "126") (term "0"))
                        (rule "concrete_impl_1" (formula "126"))
                        (rule "polySimp_rightDist" (formula "126") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "126") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "126") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "126") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "126") (term "0,1,0"))
                        (rule "mul_literals" (formula "126") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "126") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "126") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0"))
                        (rule "mul_literals" (formula "126") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "126") (term "0"))
                        (rule "polySimp_addAssoc" (formula "126") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "126") (term "0,0,0"))
                        (rule "add_literals" (formula "126") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "126") (term "0,0"))
                        (rule "add_literals" (formula "126") (term "1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "126"))
                        (rule "polySimp_mulComm0" (formula "126") (term "1"))
                        (rule "polySimp_rightDist" (formula "126") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "126") (term "1,1"))
                        (rule "mul_literals" (formula "126") (term "0,1"))
                        (rule "inEqSimp_exactShadow0" (formula "127") (ifseqformula "108"))
                        (rule "greater_literals" (formula "127") (term "0,0"))
                        (rule "concrete_and_1" (formula "127") (term "0"))
                        (rule "greater_literals" (formula "127") (term "0"))
                        (rule "concrete_impl_1" (formula "127"))
                        (rule "polySimp_rightDist" (formula "127") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "127") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "127") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "127") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "127") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "127") (term "0,0"))
                        (rule "mul_literals" (formula "127") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "127") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "127") (term "0,1,0"))
                        (rule "mul_literals" (formula "127") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "127") (term "1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "127") (term "0"))
                        (rule "polySimp_addAssoc" (formula "127") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "127") (term "0,0,0"))
                        (rule "add_literals" (formula "127") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "127") (term "0,0"))
                        (rule "add_literals" (formula "127") (term "1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "127"))
                        (rule "polySimp_mulComm0" (formula "127") (term "1"))
                        (rule "polySimp_rightDist" (formula "127") (term "1"))
                        (rule "mul_literals" (formula "127") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "127") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "46"))
                        (rule "mul_literals" (formula "50") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                        (rule "mul_literals" (formula "50") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "94") (ifseqformula "46"))
                        (rule "polySimp_rightDist" (formula "94") (term "0,0"))
                        (rule "mul_literals" (formula "94") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "94") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "94"))
                        (rule "polySimp_mulLiterals" (formula "94") (term "0"))
                        (rule "polySimp_elimOne" (formula "94") (term "0"))
                        (rule "inEqSimp_exactShadow2" (formula "133") (ifseqformula "109"))
                        (rule "greater_literals" (formula "133") (term "0"))
                        (rule "concrete_impl_1" (formula "133"))
                        (rule "times_zero_1" (formula "133") (term "1,0,0"))
                        (rule "mul_literals" (formula "133") (term "0,0"))
                        (rule "add_zero_left" (formula "133") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "133"))
                        (rule "polySimp_mulComm0" (formula "133") (term "1"))
                        (rule "polySimp_rightDist" (formula "133") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "133") (term "1,1"))
                        (rule "mul_literals" (formula "133") (term "0,1"))
                        (rule "inEqSimp_exactShadow2" (formula "134") (ifseqformula "110"))
                        (rule "times_zero_1" (formula "134") (term "1,0,0,1"))
                        (rule "greater_literals" (formula "134") (term "0"))
                        (rule "concrete_impl_1" (formula "134"))
                        (rule "times_zero_1" (formula "134") (term "0,0"))
                        (rule "add_zero_left" (formula "134") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "134"))
                        (rule "polySimp_mulComm0" (formula "134") (term "1"))
                        (rule "polySimp_rightDist" (formula "134") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "134") (term "1,1"))
                        (rule "mul_literals" (formula "134") (term "0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "72") (ifseqformula "47"))
                        (rule "polySimp_rightDist" (formula "72") (term "0,0"))
                        (rule "mul_literals" (formula "72") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "72"))
                        (rule "polySimp_mulComm0" (formula "72") (term "1"))
                        (rule "polySimp_rightDist" (formula "72") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "1,1"))
                        (rule "mul_literals" (formula "72") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "72") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "73") (ifseqformula "46"))
                        (rule "polySimp_rightDist" (formula "73") (term "0,0"))
                        (rule "mul_literals" (formula "73") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "73"))
                        (rule "polySimp_mulComm0" (formula "73") (term "1"))
                        (rule "polySimp_rightDist" (formula "73") (term "1"))
                        (rule "mul_literals" (formula "73") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "73") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "73") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "47"))
                        (rule "mul_literals" (formula "51") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                        (rule "mul_literals" (formula "51") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "66") (ifseqformula "46"))
                        (rule "polySimp_mulAssoc" (formula "66") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "66") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "66"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "67") (ifseqformula "47"))
                        (rule "polySimp_mulAssoc" (formula "67") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "67") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "67") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "67"))
                        (rule "polySimp_mulLiterals" (formula "67") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "100") (ifseqformula "47"))
                        (rule "polySimp_rightDist" (formula "100") (term "0,0"))
                        (rule "mul_literals" (formula "100") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "100") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "100"))
                        (rule "polySimp_mulLiterals" (formula "100") (term "0"))
                        (rule "polySimp_elimOne" (formula "100") (term "0"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "39"))
                        (rule "replace_known_left" (formula "105") (term "0") (ifseqformula "106"))
                        (rule "concrete_or_1" (formula "105"))
                        (rule "true_left" (formula "105"))
                        (rule "elimGcdGeq_antec" (formula "29") (inst "elimGcdRightDiv=add(Z(neglit(9(4(6(3(8(4(7(4(1(2(#)))))))))))),
    mul(quotient_5,
        Z(neglit(6(9(2(7(6(9(4(9(2(4(#))))))))))))))") (inst "elimGcdLeftDiv=mul(quotient_2, Z(5(#)))") (inst "elimGcd=Z(2(#))"))
                        (rule "leq_literals" (formula "29") (term "0,0"))
                        (rule "concrete_or_2" (formula "29") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                        (rule "add_literals" (formula "29") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "29") (term "1,0,0"))
                        (rule "add_zero_right" (formula "29") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                        (rule "add_literals" (formula "29") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "29") (term "1,0,0"))
                        (rule "add_zero_right" (formula "29") (term "0,0"))
                        (rule "leq_literals" (formula "29") (term "0"))
                        (rule "concrete_or_2" (formula "29"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "17"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                        (rule "add_literals" (formula "6") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "mul_literals" (formula "6") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "35"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
                        (rule "add_literals" (formula "7") (term "1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                        (rule "mul_literals" (formula "7") (term "1"))
                        (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "20"))
                        (rule "greater_literals" (formula "8") (term "0"))
                        (rule "concrete_impl_1" (formula "8"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                        (rule "mul_literals" (formula "8") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0"))
                        (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                        (rule "add_literals" (formula "8") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                        (rule "add_literals" (formula "8") (term "1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                        (rule "mul_literals" (formula "8") (term "1"))
                        (rule "inEqSimp_exactShadow1" (formula "11") (ifseqformula "20"))
                        (rule "greater_literals" (formula "11") (term "0"))
                        (rule "concrete_impl_1" (formula "11"))
                        (rule "mul_literals" (formula "11") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "11") (term "0"))
                        (rule "add_literals" (formula "11") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                        (rule "mul_literals" (formula "11") (term "1"))
                        (rule "inEqSimp_exactShadow1" (formula "37") (ifseqformula "121"))
                        (rule "greater_literals" (formula "37") (term "0"))
                        (rule "concrete_impl_1" (formula "37"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                        (rule "mul_literals" (formula "37") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "37") (term "0"))
                        (rule "polySimp_rightDist" (formula "37") (term "0,0,0"))
                        (rule "mul_literals" (formula "37") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                        (rule "add_literals" (formula "37") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                        (rule "add_literals" (formula "37") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "37") (term "1,0,0"))
                        (rule "add_literals" (formula "37") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                        (rule "polySimp_elimOne" (formula "37") (term "0"))
                        (rule "inEqSimp_exactShadow0" (formula "12") (ifseqformula "22"))
                        (rule "eq_and" (formula "12") (term "0"))
                        (rule "greater_literals" (formula "12") (term "0"))
                        (rule "concrete_impl_1" (formula "12"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                        (rule "mul_literals" (formula "12") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "12") (term "0"))
                        (rule "add_literals" (formula "12") (term "1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                        (rule "mul_literals" (formula "12") (term "1"))
                        (rule "inEqSimp_exactShadow1" (formula "13") (ifseqformula "40"))
                        (rule "greater_literals" (formula "13") (term "0"))
                        (rule "concrete_impl_1" (formula "13"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                        (rule "mul_literals" (formula "13") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0"))
                        (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
                        (rule "add_literals" (formula "13") (term "1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                        (rule "mul_literals" (formula "13") (term "1"))
                        (rule "div_cancel1" (formula "1") (term "1"))
                        (branch
                           (rule "div_cancel1" (formula "175") (term "0,0,0"))
                           (branch
                              (rule "replace_known_left" (formula "175") (term "0,0") (ifseqformula "19"))
                              (rule "concrete_and_1" (formula "175") (term "0"))
                              (rule "inEqSimp_antiSymm" (formula "158") (ifseqformula "160"))
                              (rule "applyEqRigid" (formula "163") (term "0,1,1") (ifseqformula "158"))
                              (rule "times_zero_2" (formula "163") (term "1,1"))
                              (rule "add_zero_right" (formula "163") (term "1"))
                              (rule "applyEq" (formula "136") (term "0,0") (ifseqformula "158"))
                              (rule "times_zero_2" (formula "136") (term "0"))
                              (rule "qeq_literals" (formula "136"))
                              (rule "true_left" (formula "136"))
                              (rule "applyEqRigid" (formula "35") (term "0,1,1") (ifseqformula "157"))
                              (rule "times_zero_2" (formula "35") (term "1,1"))
                              (rule "add_literals" (formula "35") (term "1"))
                              (rule "applyEq" (formula "31") (term "0,1,1") (ifseqformula "157"))
                              (rule "times_zero_2" (formula "31") (term "1,1"))
                              (rule "add_zero_right" (formula "31") (term "1"))
                              (rule "applyEqRigid" (formula "155") (term "0,1,1") (ifseqformula "157"))
                              (rule "times_zero_2" (formula "155") (term "1,1"))
                              (rule "add_literals" (formula "155") (term "1"))
                              (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "157"))
                              (rule "times_zero_2" (formula "8") (term "0"))
                              (rule "qeq_literals" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "applyEq" (formula "136") (term "0,1,1") (ifseqformula "156"))
                              (rule "times_zero_2" (formula "136") (term "1,1"))
                              (rule "add_zero_right" (formula "136") (term "1"))
                              (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "156"))
                              (rule "times_zero_2" (formula "12") (term "0"))
                              (rule "qeq_literals" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "applyEqRigid" (formula "148") (term "0,1,1") (ifseqformula "155"))
                              (rule "times_zero_2" (formula "148") (term "1,1"))
                              (rule "add_zero_right" (formula "148") (term "1"))
                              (rule "applyEqRigid" (formula "35") (term "0,1,1") (ifseqformula "155"))
                              (rule "times_zero_2" (formula "35") (term "1,1"))
                              (rule "add_zero_right" (formula "35") (term "1"))
                              (rule "applyEqRigid" (formula "24") (term "0,1,1") (ifseqformula "155"))
                              (rule "mul_literals" (formula "24") (term "1,1"))
                              (rule "add_zero_right" (formula "24") (term "1"))
                              (rule "applyEq" (formula "137") (term "0,1,1") (ifseqformula "155"))
                              (rule "times_zero_2" (formula "137") (term "1,1"))
                              (rule "add_zero_right" (formula "137") (term "1"))
                              (rule "applyEqRigid" (formula "133") (term "0,1,1") (ifseqformula "155"))
                              (rule "mul_literals" (formula "133") (term "1,1"))
                              (rule "add_zero_right" (formula "133") (term "1"))
                              (rule "applyEq" (formula "139") (term "0,1,1") (ifseqformula "155"))
                              (rule "times_zero_2" (formula "139") (term "1,1"))
                              (rule "add_zero_right" (formula "139") (term "1"))
                              (rule "applyEq" (formula "132") (term "0,0") (ifseqformula "155"))
                              (rule "times_zero_2" (formula "132") (term "0"))
                              (rule "qeq_literals" (formula "132"))
                              (rule "true_left" (formula "132"))
                              (rule "applyEq" (formula "140") (term "0,1,1") (ifseqformula "154"))
                              (rule "times_zero_2" (formula "140") (term "1,1"))
                              (rule "add_literals" (formula "140") (term "1"))
                              (rule "applyEqRigid" (formula "22") (term "0,1,1") (ifseqformula "154"))
                              (rule "times_zero_2" (formula "22") (term "1,1"))
                              (rule "add_zero_right" (formula "22") (term "1"))
                              (rule "applyEqRigid" (formula "146") (term "0,1,1") (ifseqformula "154"))
                              (rule "times_zero_2" (formula "146") (term "1,1"))
                              (rule "add_zero_right" (formula "146") (term "1"))
                              (rule "applyEqRigid" (formula "155") (term "0") (ifseqformula "154"))
                              (rule "qeq_literals" (formula "155"))
                              (rule "true_left" (formula "155"))
                              (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "154"))
                              (rule "times_zero_2" (formula "10") (term "0"))
                              (rule "qeq_literals" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "153"))
                              (rule "times_zero_2" (formula "6") (term "0"))
                              (rule "qeq_literals" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "applyEqRigid" (formula "147") (term "0,1,1") (ifseqformula "152"))
                              (rule "mul_literals" (formula "147") (term "1,1"))
                              (rule "add_zero_right" (formula "147") (term "1"))
                              (rule "applyEq" (formula "34") (term "0,1,1") (ifseqformula "152"))
                              (rule "mul_literals" (formula "34") (term "1,1"))
                              (rule "add_zero_right" (formula "34") (term "1"))
                              (rule "applyEq" (formula "8") (term "0,1,1") (ifseqformula "152"))
                              (rule "times_zero_2" (formula "8") (term "1,1"))
                              (rule "add_zero_right" (formula "8") (term "1"))
                              (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "152"))
                              (rule "mul_literals" (formula "9") (term "0"))
                              (rule "qeq_literals" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "applyEqRigid" (formula "22") (term "0,1,1") (ifseqformula "151"))
                              (rule "mul_literals" (formula "22") (term "1,1"))
                              (rule "add_literals" (formula "22") (term "1"))
                              (rule "applyEqRigid" (formula "119") (term "0,1,1") (ifseqformula "151"))
                              (rule "times_zero_2" (formula "119") (term "1,1"))
                              (rule "add_zero_right" (formula "119") (term "1"))
                              (rule "applyEq" (formula "150") (term "0,1,1") (ifseqformula "151"))
                              (rule "times_zero_2" (formula "150") (term "1,1"))
                              (rule "add_zero_right" (formula "150") (term "1"))
                              (rule "applyEq" (formula "9") (term "0,1,1") (ifseqformula "151"))
                              (rule "mul_literals" (formula "9") (term "1,1"))
                              (rule "add_literals" (formula "9") (term "1"))
                              (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "151"))
                              (rule "mul_literals" (formula "6") (term "0"))
                              (rule "qeq_literals" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "applyEqRigid" (formula "30") (term "0,1,1") (ifseqformula "150"))
                              (rule "times_zero_2" (formula "30") (term "1,1"))
                              (rule "add_zero_right" (formula "30") (term "1"))
                              (rule "applyEqRigid" (formula "135") (term "0,1,1") (ifseqformula "150"))
                              (rule "times_zero_2" (formula "135") (term "1,1"))
                              (rule "add_zero_right" (formula "135") (term "1"))
                              (rule "applyEq" (formula "138") (term "0,1,1") (ifseqformula "150"))
                              (rule "times_zero_2" (formula "138") (term "1,1"))
                              (rule "add_zero_right" (formula "138") (term "1"))
                              (rule "applyEq" (formula "147") (term "0,0") (ifseqformula "150"))
                              (rule "times_zero_2" (formula "147") (term "0"))
                              (rule "qeq_literals" (formula "147"))
                              (rule "true_left" (formula "147"))
                              (rule "applyEqRigid" (formula "35") (term "0,1,1") (ifseqformula "149"))
                              (rule "times_zero_2" (formula "35") (term "1,1"))
                              (rule "add_zero_right" (formula "35") (term "1"))
                              (rule "applyEq" (formula "19") (term "0,1,1") (ifseqformula "149"))
                              (rule "times_zero_2" (formula "19") (term "1,1"))
                              (rule "add_zero_right" (formula "19") (term "1"))
                              (rule "applyEq" (formula "139") (term "0,1,1") (ifseqformula "149"))
                              (rule "times_zero_2" (formula "139") (term "1,1"))
                              (rule "add_zero_right" (formula "139") (term "1"))
                              (rule "applyEq" (formula "133") (term "0,1,1") (ifseqformula "149"))
                              (rule "times_zero_2" (formula "133") (term "1,1"))
                              (rule "add_zero_right" (formula "133") (term "1"))
                              (rule "applyEq" (formula "129") (term "0,0") (ifseqformula "149"))
                              (rule "times_zero_2" (formula "129") (term "0"))
                              (rule "qeq_literals" (formula "129"))
                              (rule "true_left" (formula "129"))
                              (rule "applyEqRigid" (formula "151") (term "0,1,1") (ifseqformula "148"))
                              (rule "times_zero_2" (formula "151") (term "1,1"))
                              (rule "add_zero_right" (formula "151") (term "1"))
                              (rule "applyEqRigid" (formula "130") (term "0,1,1") (ifseqformula "148"))
                              (rule "times_zero_2" (formula "130") (term "1,1"))
                              (rule "add_zero_right" (formula "130") (term "1"))
                              (rule "applyEqRigid" (formula "114") (term "0,1,1") (ifseqformula "148"))
                              (rule "times_zero_2" (formula "114") (term "1,1"))
                              (rule "add_zero_right" (formula "114") (term "1"))
                              (rule "applyEqRigid" (formula "150") (term "0") (ifseqformula "148"))
                              (rule "leq_literals" (formula "150"))
                              (rule "true_left" (formula "150"))
                              (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "148"))
                              (rule "mul_literals" (formula "6") (term "1,1"))
                              (rule "add_zero_right" (formula "6") (term "1"))
                              (rule "applyEq" (formula "22") (term "0,1,1") (ifseqformula "148"))
                              (rule "times_zero_2" (formula "22") (term "1,1"))
                              (rule "add_literals" (formula "22") (term "1"))
                              (rule "applyEq" (formula "24") (term "0,1,1") (ifseqformula "148"))
                              (rule "mul_literals" (formula "24") (term "1,1"))
                              (rule "add_zero_right" (formula "24") (term "1"))
                              (rule "applyEq" (formula "117") (term "0,1,0,1") (ifseqformula "148"))
                              (rule "times_zero_2" (formula "117") (term "1,0,1"))
                              (rule "add_zero_right" (formula "117") (term "0,1"))
                              (rule "applyEq" (formula "116") (term "0,1,0,1") (ifseqformula "148"))
                              (rule "times_zero_2" (formula "116") (term "1,0,1"))
                              (rule "add_zero_right" (formula "116") (term "0,1"))
                              (rule "applyEqRigid" (formula "152") (term "0,1,0,1") (ifseqformula "148"))
                              (rule "times_zero_2" (formula "152") (term "1,0,1"))
                              (rule "add_zero_right" (formula "152") (term "0,1"))
                              (rule "applyEq" (formula "9") (term "0,1,0,1") (ifseqformula "148"))
                              (rule "times_zero_2" (formula "9") (term "1,0,1"))
                              (rule "add_zero_right" (formula "9") (term "0,1"))
                              (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "148"))
                              (rule "applyEqRigid" (formula "5") (term "0,1,0,1") (ifseqformula "148"))
                              (rule "times_zero_2" (formula "5") (term "1,0,1"))
                              (rule "add_zero_right" (formula "5") (term "0,1"))
                              (rule "applyEq" (formula "164") (term "0,1,0,1,1,1") (ifseqformula "148"))
                              (rule "times_zero_2" (formula "164") (term "1,0,1,1,1"))
                              (rule "add_zero_right" (formula "164") (term "0,1,1,1"))
                              (rule "applyEqRigid" (formula "34") (term "0,1,0,1") (ifseqformula "148"))
                              (rule "mul_literals" (formula "34") (term "1,0,1"))
                              (rule "add_zero_right" (formula "34") (term "0,1"))
                              (rule "applyEqRigid" (formula "26") (term "0,1,0,1") (ifseqformula "148"))
                              (rule "mul_literals" (formula "26") (term "1,0,1"))
                              (rule "add_zero_right" (formula "26") (term "0,1"))
                              (rule "applyEqRigid" (formula "4") (term "0,1,0,0,1") (ifseqformula "148"))
                              (rule "times_zero_2" (formula "4") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "4") (term "0,0,1"))
                              (rule "applyEq" (formula "10") (term "0,1,0,0,1") (ifseqformula "148"))
                              (rule "mul_literals" (formula "10") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "10") (term "0,0,1"))
                              (rule "applyEqRigid" (formula "3") (term "0,1,0,0,1") (ifseqformula "148"))
                              (rule "times_zero_2" (formula "3") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "3") (term "0,0,1"))
                              (rule "applyEqRigid" (formula "164") (term "0,0,0,1,0,1") (ifseqformula "148"))
                              (rule "times_zero_2" (formula "164") (term "0,0,1,0,1"))
                              (rule "add_zero_left" (formula "164") (term "0,1,0,1"))
                              (rule "applyEqRigid" (formula "119") (term "0,1,0,0,1") (ifseqformula "148"))
                              (rule "mul_literals" (formula "119") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "119") (term "0,0,1"))
                              (rule "applyEq" (formula "157") (term "0,1,0,0,1") (ifseqformula "148"))
                              (rule "times_zero_2" (formula "157") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "157") (term "0,0,1"))
                              (rule "inEqSimp_subsumption6" (formula "145") (ifseqformula "140"))
                              (rule "mul_literals" (formula "145") (term "1,1,0"))
                              (rule "greater_literals" (formula "145") (term "0,0"))
                              (rule "concrete_and_1" (formula "145") (term "0"))
                              (rule "leq_literals" (formula "145") (term "0"))
                              (rule "concrete_or_1" (formula "145"))
                              (rule "true_left" (formula "145"))
                              (rule "inEqSimp_subsumption1" (formula "143") (ifseqformula "140"))
                              (rule "leq_literals" (formula "143") (term "0"))
                              (rule "concrete_or_1" (formula "143"))
                              (rule "true_left" (formula "143"))
                              (rule "inEqSimp_subsumption4" (formula "23") (ifseqformula "17"))
                              (rule "mul_literals" (formula "23") (term "0,1,0"))
                              (rule "greater_literals" (formula "23") (term "0,0"))
                              (rule "concrete_and_1" (formula "23") (term "0"))
                              (rule "leq_literals" (formula "23") (term "0"))
                              (rule "concrete_or_1" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "inEqSimp_notGeq" (formula "107") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "107") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "107") (term "1,1,0,0,1,0,1,0"))
                              (rule "mul_literals" (formula "107") (term "0,1,0,0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "107") (term "0,0,1,0,1,0"))
                              (rule "add_literals" (formula "107") (term "0,0,0,1,0,1,0"))
                              (rule "add_zero_left" (formula "107") (term "0,0,1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "107") (term "1,1,0,1,0"))
                              (rule "inEqSimp_notGeq" (formula "95") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "95") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_notLeq" (formula "95") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "95") (term "1,0,0,1,0,0,1,0"))
                              (rule "mul_literals" (formula "95") (term "0,1,0,0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "95") (term "0,0,1,0,0,1,0"))
                              (rule "add_literals" (formula "95") (term "0,0,0,1,0,0,1,0"))
                              (rule "add_zero_left" (formula "95") (term "0,0,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "95") (term "1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,1,0"))
                              (rule "inEqSimp_contradInEq3" (formula "66") (ifseqformula "104"))
                              (rule "greater_literals" (formula "66") (term "0,0"))
                              (rule "concrete_impl_1" (formula "66") (term "0"))
                              (rule "andLeft" (formula "66"))
                              (rule "polySimp_rightDist" (formula "66") (term "0"))
                              (rule "mul_literals" (formula "66") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "66"))
                              (rule "polySimp_mulComm0" (formula "66") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "66") (term "1,0"))
                              (rule "mul_literals" (formula "66") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "66") (term "0"))
                              (rule "polySimp_addComm0" (formula "66") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "66") (term "0"))
                              (rule "add_literals" (formula "66") (term "1,1,0"))
                              (rule "times_zero_1" (formula "66") (term "1,0"))
                              (rule "add_zero_right" (formula "66") (term "0"))
                              (rule "leq_literals" (formula "66"))
                              (rule "closeFalse" (formula "66"))
                           )
                           (branch
                              (rule "equal_literals" (formula "175") (term "0"))
                              (rule "concrete_not_2" (formula "175"))
                              (rule "closeTrue" (formula "175"))
                           )
                        )
                        (branch
                           (rule "equal_literals" (formula "171") (term "0"))
                           (rule "concrete_not_2" (formula "171"))
                           (rule "closeTrue" (formula "171"))
                        )
                     )
                     (branch "result_1_0 >= 0 FALSE"
                        (rule "eqSymm" (formula "64"))
                        (rule "inEqSimp_geqRight" (formula "74"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "applyEqRigid" (formula "66") (term "0") (ifseqformula "65"))
                        (rule "inEqSimp_homoInEq0" (formula "66"))
                        (rule "polySimp_mulComm0" (formula "66") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "66") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "66") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "66") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "66") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "66") (term "0"))
                        (rule "polySimp_addComm1" (formula "66") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "66") (term "0,0,0"))
                        (rule "applyEqRigid" (formula "59") (term "0") (ifseqformula "65"))
                        (rule "inEqSimp_homoInEq0" (formula "59"))
                        (rule "polySimp_mulComm0" (formula "59") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "59") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "59") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "59") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "59") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "59") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "59") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "66"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                        (rule "polySimp_elimOne" (formula "66") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "59"))
                        (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                        (rule "polySimp_elimOne" (formula "59") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                        (rule "leq_literals" (formula "2") (term "0"))
                        (rule "concrete_or_1" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_exactShadow3" (formula "71") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "71") (term "0,0"))
                        (rule "mul_literals" (formula "71") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "71") (term "0"))
                        (rule "add_literals" (formula "71") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "71"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                        (rule "polySimp_elimOne" (formula "71") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "67") (ifseqformula "71"))
                        (rule "qeq_literals" (formula "67") (term "0"))
                        (rule "concrete_and_2" (formula "67"))
                        (rule "closeFalse" (formula "67"))
                     )
                  )
                  (branch "expectedMaxSize >= 0 FALSE"
                     (rule "eqSymm" (formula "8"))
                     (rule "inEqSimp_geqRight" (formula "72"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "9"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor3b" (formula "4") (term "0,0"))
                     (rule "applyEq" (formula "10") (term "1,0,0") (ifseqformula "9"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor3b" (formula "10") (term "0,0"))
                     (rule "applyEq" (formula "65") (term "1,0,0") (ifseqformula "9"))
                     (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "65") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor3b" (formula "65") (term "0,0"))
                     (rule "applyEq" (formula "77") (term "1,0,0,0,0") (ifseqformula "9"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "77") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor3b" (formula "77") (term "0,0,0,0"))
                     (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "9"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor3b" (formula "3") (term "0,0"))
                     (rule "applyEq" (formula "77") (term "1,0,0,1,1,1,1") (ifseqformula "9"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,1,1,1"))
                     (rule "polySimp_addComm1" (formula "77") (term "0,0,0,1,1,1,1"))
                     (rule "polySimp_pullOutFactor3b" (formula "77") (term "0,0,1,1,1,1"))
                     (rule "applyEq" (formula "77") (term "1,0,0,0,1,1") (ifseqformula "9"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "77") (term "0,0,0,0,1,1"))
                     (rule "polySimp_pullOutFactor3b" (formula "77") (term "0,0,0,1,1"))
                     (rule "applyEq" (formula "77") (term "1,0,0,0,0,1") (ifseqformula "9"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "77") (term "0,0,0,0,0,1"))
                     (rule "polySimp_pullOutFactor3b" (formula "77") (term "0,0,0,0,1"))
                     (rule "mod_axiom" (formula "4") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0,0"))
                     (rule "mod_axiom" (formula "10") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "10") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0"))
                     (rule "add_zero_left" (formula "10") (term "0,0,0"))
                     (rule "mod_axiom" (formula "65") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "65") (term "1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "65"))
                     (rule "polySimp_mulComm0" (formula "65") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "65") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "65") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "65") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "65") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "65") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "65") (term "1,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "65") (term "0"))
                     (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "65") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0"))
                     (rule "add_literals" (formula "65") (term "0,0,0,0,0"))
                     (rule "mod_axiom" (formula "77") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "77") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "77") (term "0,0,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "77") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "77") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "77") (term "0,0,0,0,0,0,0"))
                     (rule "mod_axiom" (formula "3") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                     (rule "mod_axiom" (formula "77") (term "1,1,1,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,1,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "1,1,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,1,1,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,1,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,1,1,1"))
                     (rule "add_literals" (formula "77") (term "0,0,0,0,1,1,1"))
                     (rule "mod_axiom" (formula "77") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,1"))
                     (rule "inEqSimp_homoInEq0" (formula "77") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "77") (term "1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,0,1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,0,0,1,0,1,1"))
                     (rule "mul_literals" (formula "77") (term "0,0,0,0,1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,0,1,0,1,1"))
                     (rule "polySimp_elimOne" (formula "77") (term "1,0,0,0,1,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "77") (term "0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "77") (term "0,0,0,0,1,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,0,0,1,1"))
                     (rule "add_literals" (formula "77") (term "1,1,0,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "77") (term "1,0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "77") (term "0,0,0,0,0,1,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,0,0,0,1,1"))
                     (rule "add_literals" (formula "77") (term "1,1,0,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "77") (term "1,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "77") (term "0,0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "77") (term "0,0,0,0,0,1,1"))
                     (rule "add_literals" (formula "77") (term "0,0,0,0,0,0,1,1"))
                     (rule "polySimp_pullOutFactor2b" (formula "77") (term "0,0,0,0,1,1"))
                     (rule "add_literals" (formula "77") (term "1,1,0,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "77") (term "1,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "77") (term "0,0,0,0,1,1"))
                     (rule "mod_axiom" (formula "77") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,1"))
                     (rule "inEqSimp_homoInEq1" (formula "77") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "77") (term "0,0,0,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,0,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "77") (term "1,0,0,0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0,0,1"))
                     (rule "add_literals" (formula "77") (term "0,0,0,0,0,0,1"))
                     (rule "add_zero_left" (formula "77") (term "0,0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                     (rule "mul_literals" (formula "4") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "65"))
                     (rule "polySimp_mulComm0" (formula "65") (term "1"))
                     (rule "polySimp_rightDist" (formula "65") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "65") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "65") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "65") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "65") (term "0,0,1"))
                     (rule "mul_literals" (formula "65") (term "0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "77") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "77") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,0,1,0,0"))
                     (rule "mul_literals" (formula "77") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,1"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "77") (term "1,1,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "1,1,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,1,1,1"))
                     (rule "mul_literals" (formula "77") (term "0,0,1,1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "77") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "77") (term "0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "77") (term "0,0,1,0,1"))
                     (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "1"))
                     (rule "leq_literals" (formula "16") (term "0"))
                     (rule "concrete_or_1" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                     (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "7") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "7") (term "0,0"))
                     (rule "concrete_or_2" (formula "7") (term "0"))
                     (rule "neg_literal" (formula "7") (term "0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0"))
                     (rule "qeq_literals" (formula "7") (term "0"))
                     (rule "concrete_or_2" (formula "7"))
                     (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "7"))
                     (rule "leq_literals" (formula "6") (term "0"))
                     (rule "concrete_or_1" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "inEqSimp_exactShadow3" (formula "71") (ifseqformula "3"))
                     (rule "mul_literals" (formula "71") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "71") (term "0"))
                     (rule "polySimp_addAssoc" (formula "71") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "71") (term "0,0,0"))
                     (rule "add_literals" (formula "71") (term "0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "71"))
                     (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "71") (ifseqformula "10"))
                     (rule "inEqSimp_homoInEq0" (formula "71") (term "0"))
                     (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "71") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "71") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "71") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "71") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "71") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "71") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "71") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "71") (term "0,0,0,0"))
                     (rule "add_literals" (formula "71") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "71") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "71") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "71") (term "0,0"))
                     (rule "add_literals" (formula "71") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "71") (term "1,0,0"))
                     (rule "add_zero_right" (formula "71") (term "0,0"))
                     (rule "qeq_literals" (formula "71") (term "0"))
                     (rule "concrete_or_1" (formula "71"))
                     (rule "true_left" (formula "71"))
                     (rule "inEqSimp_exactShadow3" (formula "69") (ifseqformula "3"))
                     (rule "polySimp_rightDist" (formula "69") (term "0,0"))
                     (rule "mul_literals" (formula "69") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "69") (term "0"))
                     (rule "polySimp_addComm1" (formula "69") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "69") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0"))
                     (rule "add_literals" (formula "69") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "69"))
                     (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "61") (ifseqformula "3"))
                     (rule "polySimp_mulAssoc" (formula "61") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "61") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "61") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "61") (term "0"))
                     (rule "polySimp_addAssoc" (formula "61") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "61") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "61"))
                     (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                     (rule "inEqSimp_exactShadow0" (formula "4") (ifseqformula "61"))
                     (rule "eq_and" (formula "4") (term "0"))
                     (rule "greater_literals" (formula "4") (term "0"))
                     (rule "concrete_impl_1" (formula "4"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                     (rule "add_literals" (formula "4") (term "1,1,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0"))
                     (rule "add_zero_right" (formula "4") (term "0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_literals" (formula "4") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "inEqSimp_subsumption4" (formula "4") (ifseqformula "61"))
                     (rule "greater_literals" (formula "4") (term "0,0"))
                     (rule "concrete_and_1" (formula "4") (term "0"))
                     (rule "mul_literals" (formula "4") (term "0,0"))
                     (rule "leq_literals" (formula "4") (term "0"))
                     (rule "concrete_or_1" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "inEqSimp_exactShadow0" (formula "4") (ifseqformula "70"))
                     (rule "eq_and" (formula "4") (term "0"))
                     (rule "greater_literals" (formula "4") (term "0"))
                     (rule "concrete_impl_1" (formula "4"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_literals" (formula "4") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "inEqSimp_subsumption4" (formula "4") (ifseqformula "70"))
                     (rule "greater_literals" (formula "4") (term "0,0"))
                     (rule "concrete_and_1" (formula "4") (term "0"))
                     (rule "mul_literals" (formula "4") (term "0,0"))
                     (rule "leq_literals" (formula "4") (term "0"))
                     (rule "concrete_or_1" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "ifthenelse_split" (formula "64") (term "0"))
                     (branch "result_1_0 >= 0 TRUE"
                        (rule "eqSymm" (formula "65"))
                        (rule "applyEq" (formula "66") (term "0") (ifseqformula "65"))
                        (rule "inEqSimp_homoInEq0" (formula "66"))
                        (rule "polySimp_addComm1" (formula "66") (term "0"))
                        (rule "polySimp_addComm1" (formula "66") (term "0,0"))
                        (rule "applyEq" (formula "58") (term "0") (ifseqformula "65"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "66"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "74") (ifseqformula "64"))
                        (rule "leq_literals" (formula "74") (term "0"))
                        (rule "concrete_or_1" (formula "74"))
                        (rule "true_left" (formula "74"))
                        (rule "inEqSimp_subsumption0" (formula "58") (ifseqformula "60"))
                        (rule "leq_literals" (formula "58") (term "0"))
                        (rule "concrete_or_1" (formula "58"))
                        (rule "true_left" (formula "58"))
                        (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "62"))
                        (rule "times_zero_1" (formula "63") (term "0,0"))
                        (rule "add_zero_left" (formula "63") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "63"))
                        (rule "mul_literals" (formula "63") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "63") (ifseqformula "67"))
                        (rule "times_zero_1" (formula "63") (term "1,1,0"))
                        (rule "greater_literals" (formula "63") (term "0,0"))
                        (rule "concrete_and_1" (formula "63") (term "0"))
                        (rule "leq_literals" (formula "63") (term "0"))
                        (rule "concrete_or_1" (formula "63"))
                        (rule "true_left" (formula "63"))
                        (rule "inEqSimp_exactShadow0" (formula "4") (ifseqformula "65"))
                        (rule "eq_and" (formula "4") (term "0"))
                        (rule "greater_literals" (formula "4") (term "0"))
                        (rule "concrete_impl_1" (formula "4"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "4") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0"))
                        (rule "add_zero_right" (formula "4") (term "0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0"))
                        (rule "add_literals" (formula "4") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "inEqSimp_subsumption4" (formula "4") (ifseqformula "60"))
                        (rule "mul_literals" (formula "4") (term "0,1,0"))
                        (rule "greater_literals" (formula "4") (term "0,0"))
                        (rule "concrete_and_1" (formula "4") (term "0"))
                        (rule "leq_literals" (formula "4") (term "0"))
                        (rule "concrete_or_1" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "3"))
                        (rule "mul_literals" (formula "63") (term "0,0"))
                        (rule "add_zero_left" (formula "63") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "63"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "63"))
                        (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                        (rule "add_literals" (formula "10") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
                        (rule "add_literals" (formula "10") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0"))
                        (rule "qeq_literals" (formula "10") (term "0"))
                        (rule "concrete_or_1" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "nnf_imp2or" (formula "55") (term "0"))
                        (rule "nnf_imp2or" (formula "44") (term "0"))
                        (rule "nnf_imp2or" (formula "45") (term "0"))
                        (rule "nnf_imp2or" (formula "54") (term "0"))
                        (rule "nnf_notAnd" (formula "43") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "43") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0"))
                        (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "43") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                        (rule "mul_literals" (formula "43") (term "1,0,0,0"))
                        (rule "div_axiom" (formula "77") (term "0,1,1,1,0,1,0") (inst "quotient=quotient_3"))
                        (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                        (rule "equal_literals" (formula "1") (term "0"))
                        (rule "concrete_or_2" (formula "1"))
                        (rule "qeq_literals" (formula "1") (term "0,1"))
                        (rule "ifthenelse_true_for" (formula "1") (term "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                        (rule "add_literals" (formula "3") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "3") (term "1"))
                        (rule "add_literals" (formula "3") (term "0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "applyEq" (formula "80") (term "0,1,0,0,0,0") (ifseqformula "1"))
                        (rule "polySimp_addComm0" (formula "80") (term "0,0,0,0"))
                        (rule "applyEqRigid" (formula "80") (term "0,1,1,1,0,0,1,0") (ifseqformula "1"))
                        (rule "polySimp_addComm1" (formula "80") (term "1,1,0,0,1,0"))
                        (rule "applyEq" (formula "80") (term "0,1,1,1,0,1,0") (ifseqformula "1"))
                        (rule "polySimp_addComm0" (formula "80") (term "1,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_3, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=result_1_0") (inst "elimGcd=Z(2(#))"))
                        (rule "leq_literals" (formula "3") (term "0,0"))
                        (rule "concrete_or_2" (formula "3") (term "0"))
                        (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0"))
                        (rule "qeq_literals" (formula "3") (term "0"))
                        (rule "concrete_or_2" (formula "3"))
                        (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(neglit(4(2(8(1(4(7(3(7(0(1(#)))))))))))),
    mul(quotient_3, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=result_1_0") (inst "elimGcd=Z(2(#))"))
                        (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                        (rule "leq_literals" (formula "2") (term "0,0"))
                        (rule "concrete_or_2" (formula "2") (term "0"))
                        (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "leq_literals" (formula "2") (term "0"))
                        (rule "concrete_or_2" (formula "2"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "2") (term "0,0"))
                        (rule "concrete_or_2" (formula "2") (term "0"))
                        (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                        (rule "neg_literal" (formula "2") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                        (rule "concrete_or_2" (formula "2"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "7"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                        (rule "mul_literals" (formula "3") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "76") (ifseqformula "5"))
                        (rule "polySimp_rightDist" (formula "76") (term "0,0"))
                        (rule "mul_literals" (formula "76") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "76") (term "0"))
                        (rule "polySimp_addAssoc" (formula "76") (term "0,0"))
                        (rule "add_literals" (formula "76") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "76"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                        (rule "polySimp_elimOne" (formula "76") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "68") (ifseqformula "5"))
                        (rule "times_zero_1" (formula "68") (term "0,0"))
                        (rule "add_zero_left" (formula "68") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "68"))
                        (rule "mul_literals" (formula "68") (term "1"))
                        (rule "elimGcdGeq_antec" (formula "68") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                        (rule "times_zero_1" (formula "68") (term "1,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "68") (term "1,0,1,0"))
                        (rule "leq_literals" (formula "68") (term "0,0"))
                        (rule "concrete_or_2" (formula "68") (term "0"))
                        (rule "polySimp_addLiterals" (formula "68") (term "0,0,0,0"))
                        (rule "add_literals" (formula "68") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0"))
                        (rule "add_literals" (formula "68") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "68") (term "1,0,0"))
                        (rule "add_zero_right" (formula "68") (term "0,0"))
                        (rule "leq_literals" (formula "68") (term "0"))
                        (rule "concrete_or_2" (formula "68"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "66"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=add(Z(neglit(2(1(9(0(7(8(6(3(5(#))))))))))),
    mul(quotient_3, Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                        (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "4") (term "0,0"))
                        (rule "concrete_or_2" (formula "4") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0"))
                        (rule "add_zero_right" (formula "4") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0"))
                        (rule "add_zero_right" (formula "4") (term "0,0"))
                        (rule "leq_literals" (formula "4") (term "0"))
                        (rule "concrete_or_2" (formula "4"))
                        (rule "inEqSimp_exactShadow3" (formula "66") (ifseqformula "6"))
                        (rule "polySimp_mulAssoc" (formula "66") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "66") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "66") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "66"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                        (rule "elimGcdLeq_antec" (formula "66") (inst "elimGcdRightDiv=add(Z(1(1(9(0(7(8(6(3(5(#)))))))))),
    mul(quotient_3, Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                        (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "1,0,1,0"))
                        (rule "leq_literals" (formula "66") (term "0,0"))
                        (rule "concrete_or_2" (formula "66") (term "0"))
                        (rule "neg_literal" (formula "66") (term "0,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "66") (term "0,0"))
                        (rule "add_literals" (formula "66") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "66") (term "1,0,0"))
                        (rule "add_zero_right" (formula "66") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "66") (term "0,0,0"))
                        (rule "add_literals" (formula "66") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "66") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "66") (term "0,0,0"))
                        (rule "add_literals" (formula "66") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "66") (term "0,0"))
                        (rule "add_literals" (formula "66") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "66") (term "1,0,0"))
                        (rule "add_zero_right" (formula "66") (term "0,0"))
                        (rule "qeq_literals" (formula "66") (term "0"))
                        (rule "concrete_or_2" (formula "66"))
                        (rule "inEqSimp_antiSymm" (formula "70") (ifseqformula "2"))
                        (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "70"))
                        (rule "times_zero_2" (formula "6") (term "1,1"))
                        (rule "add_zero_right" (formula "6") (term "1"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "70"))
                        (rule "leq_literals" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "69"))
                        (rule "mul_literals" (formula "4") (term "1,1"))
                        (rule "add_zero_right" (formula "4") (term "1"))
                        (rule "applyEqRigid" (formula "79") (term "0,1,1") (ifseqformula "69"))
                        (rule "mul_literals" (formula "79") (term "1,1"))
                        (rule "add_zero_right" (formula "79") (term "1"))
                        (rule "applyEqRigid" (formula "65") (term "0,1,1") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "65") (term "1,1"))
                        (rule "add_zero_right" (formula "65") (term "1"))
                        (rule "applyEqRigid" (formula "70") (term "0") (ifseqformula "69"))
                        (rule "qeq_literals" (formula "70"))
                        (rule "true_left" (formula "70"))
                        (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "69"))
                        (rule "mul_literals" (formula "3") (term "1,1"))
                        (rule "add_zero_right" (formula "3") (term "1"))
                        (rule "applyEqRigid" (formula "85") (term "0,0,0,0,0,0") (ifseqformula "69"))
                        (rule "mul_literals" (formula "85") (term "0,0,0,0,0"))
                        (rule "add_zero_left" (formula "85") (term "0,0,0,0"))
                        (rule "applyEq" (formula "85") (term "0,1,0,1,1,0,0,1,0") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "85") (term "1,0,1,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "85") (term "0,1,1,0,0,1,0"))
                        (rule "applyEq" (formula "1") (term "1") (ifseqformula "69"))
                        (rule "applyEq" (formula "2") (term "0,1,0,0,1") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "2") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "2") (term "0,0,1"))
                        (rule "applyEq" (formula "85") (term "0,0,1,1,0,1,0") (ifseqformula "69"))
                        (rule "times_zero_2" (formula "85") (term "0,1,1,0,1,0"))
                        (rule "add_zero_left" (formula "85") (term "1,1,0,1,0"))
                        (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "70"))
                        (rule "leq_literals" (formula "4") (term "0"))
                        (rule "concrete_or_1" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "6"))
                        (rule "leq_literals" (formula "4") (term "0"))
                        (rule "concrete_or_1" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "inEqSimp_subsumption0" (formula "76") (ifseqformula "74"))
                        (rule "leq_literals" (formula "76") (term "0"))
                        (rule "concrete_or_1" (formula "76"))
                        (rule "true_left" (formula "76"))
                        (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "66"))
                        (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                        (rule "concrete_or_1" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "70"))
                        (rule "leq_literals" (formula "2") (term "0"))
                        (rule "concrete_or_1" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_subsumption0" (formula "61") (ifseqformula "59"))
                        (rule "leq_literals" (formula "61") (term "0"))
                        (rule "concrete_or_1" (formula "61"))
                        (rule "true_left" (formula "61"))
                        (rule "commute_or_2" (formula "43") (term "0,1,1,0"))
                        (rule "allLeft" (formula "25") (inst "t=i_1_0"))
                        (rule "replace_known_left" (formula "25") (term "0,0,0,0") (ifseqformula "55"))
                        (rule "concrete_not_1" (formula "25") (term "0,0,0"))
                        (rule "concrete_or_2" (formula "25") (term "0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "53"))
                        (rule "qeq_literals" (formula "25") (term "0,1,0"))
                        (rule "concrete_and_2" (formula "25") (term "1,0"))
                        (rule "concrete_or_4" (formula "25") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "54"))
                        (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                        (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "25") (term "0,0,1"))
                        (rule "leq_literals" (formula "25") (term "0,1"))
                        (rule "concrete_and_2" (formula "25") (term "1"))
                        (rule "concrete_or_4" (formula "25"))
                        (rule "nnf_imp2or" (formula "57") (term "1,0"))
                        (rule "nnf_notAnd" (formula "57") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "57") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "57") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "57") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "57") (term "0,0,0"))
                        (rule "times_zero_1" (formula "57") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "57") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                        (rule "mul_literals" (formula "57") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "46") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0"))
                        (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "46") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                        (rule "mul_literals" (formula "46") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "46") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "46") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "47") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0"))
                        (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "47") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                        (rule "mul_literals" (formula "47") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "47") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "56") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "56") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "56") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "56") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "56") (term "0,0,0"))
                        (rule "times_zero_1" (formula "56") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "56") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                        (rule "mul_literals" (formula "56") (term "1,0,0,0"))
                        (rule "nnf_imp2or" (formula "47") (term "0,1,0"))
                        (rule "nnf_notAnd" (formula "56") (term "0,1,0"))
                        (rule "double_not" (formula "56") (term "0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "56") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,1,0,1,0"))
                        (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,1,0"))
                        (rule "add_literals" (formula "56") (term "0,0,0,1,0,1,0"))
                        (rule "add_zero_left" (formula "56") (term "0,0,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,1,0"))
                        (rule "nnf_imp2or" (formula "56") (term "0,1,1,0"))
                        (rule "div_axiom" (formula "5") (term "0,0") (inst "quotient=quotient_4"))
                        (rule "mul_literals" (formula "5") (term "1,1,1,1,1"))
                        (rule "qeq_literals" (formula "5") (term "0,1,1"))
                        (rule "ifthenelse_true_for" (formula "5") (term "1,1"))
                        (rule "equal_literals" (formula "5") (term "0"))
                        (rule "concrete_or_2" (formula "5"))
                        (rule "andLeft" (formula "5"))
                        (rule "andLeft" (formula "5"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "7") (term "1"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0,1"))
                        (rule "add_literals" (formula "7") (term "0,0,0,1"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,1"))
                        (rule "add_literals" (formula "7") (term "0,0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "6"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                        (rule "applyEq" (formula "67") (term "0,0") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq0" (formula "67"))
                        (rule "polySimp_mulLiterals" (formula "67") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "67") (term "0"))
                        (rule "polySimp_addComm1" (formula "67") (term "0,0"))
                        (rule "applyEq" (formula "76") (term "0,0") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq0" (formula "76"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "76") (term "0"))
                        (rule "polySimp_addComm1" (formula "76") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "76") (term "0,0,0"))
                        (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "5"))
                        (rule "polySimp_addComm1" (formula "4") (term "1"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                        (rule "applyEq" (formula "71") (term "0,0") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq0" (formula "71"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "71") (term "0"))
                        (rule "polySimp_addComm1" (formula "71") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "71") (term "0,0,0"))
                        (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "8"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "8") (term "0"))
                        (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                        (rule "applyEq" (formula "83") (term "0,1,1,0,0") (ifseqformula "5"))
                        (rule "polySimp_addComm1" (formula "83") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "83") (term "0,1,0,0"))
                        (rule "applyEq" (formula "64") (term "0,0") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq0" (formula "64"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "64") (term "0"))
                        (rule "polySimp_addComm1" (formula "64") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "64") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
                        (rule "mul_literals" (formula "6") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1"))
                        (rule "polySimp_rightDist" (formula "7") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1"))
                        (rule "mul_literals" (formula "7") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "67"))
                        (rule "polySimp_mulComm0" (formula "67") (term "1"))
                        (rule "polySimp_rightDist" (formula "67") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "67") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "67") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "67") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "67") (term "1,0,1"))
                        (rule "mul_literals" (formula "67") (term "0,0,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "76"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                        (rule "polySimp_elimOne" (formula "76") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "71"))
                        (rule "polySimp_mulComm0" (formula "71") (term "1"))
                        (rule "polySimp_rightDist" (formula "71") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "71") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "71") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "71") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "71") (term "0,0,1"))
                        (rule "mul_literals" (formula "71") (term "0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1"))
                        (rule "polySimp_rightDist" (formula "8") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
                        (rule "mul_literals" (formula "8") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "64"))
                        (rule "polySimp_mulComm0" (formula "64") (term "1"))
                        (rule "polySimp_rightDist" (formula "64") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "64") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "64") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "64") (term "0,0,1"))
                        (rule "mul_literals" (formula "64") (term "0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,1"))
                        (rule "inEqSimp_subsumption5" (formula "6") (ifseqformula "67"))
                        (rule "eq_and" (formula "6") (term "0,0"))
                        (rule "greater_literals" (formula "6") (term "0,0"))
                        (rule "concrete_and_1" (formula "6") (term "0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "qeq_literals" (formula "6") (term "0"))
                        (rule "concrete_or_1" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "qeq_literals" (formula "6") (term "0"))
                        (rule "concrete_or_1" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_exactShadow3" (formula "71") (ifseqformula "74"))
                        (rule "times_zero_1" (formula "71") (term "0,0"))
                        (rule "add_zero_left" (formula "71") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "71"))
                        (rule "polySimp_mulComm0" (formula "71") (term "1"))
                        (rule "polySimp_rightDist" (formula "71") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "71") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "71") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "1,0,1"))
                        (rule "mul_literals" (formula "71") (term "0,0,1"))
                        (rule "inEqSimp_subsumption5" (formula "65") (ifseqformula "71"))
                        (rule "eq_and" (formula "65") (term "0,0"))
                        (rule "greater_literals" (formula "65") (term "0,0"))
                        (rule "concrete_and_1" (formula "65") (term "0"))
                        (rule "polySimp_rightDist" (formula "65") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "65") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "65") (term "0,0,0"))
                        (rule "mul_literals" (formula "65") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "65") (term "0,1,0"))
                        (rule "mul_literals" (formula "65") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "1,0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "65") (term "0"))
                        (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "65") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "65") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "1,0,1,0,0"))
                        (rule "mul_literals" (formula "65") (term "0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "65") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "65") (term "0,0"))
                        (rule "add_literals" (formula "65") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "65") (term "1,0,0"))
                        (rule "add_zero_right" (formula "65") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "65") (term "0,0,0"))
                        (rule "add_literals" (formula "65") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "65") (term "0,0"))
                        (rule "add_literals" (formula "65") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "65") (term "1,0,0"))
                        (rule "add_zero_right" (formula "65") (term "0,0"))
                        (rule "qeq_literals" (formula "65") (term "0"))
                        (rule "concrete_or_1" (formula "65"))
                        (rule "true_left" (formula "65"))
                        (rule "inEqSimp_exactShadow1" (formula "62") (ifseqformula "2"))
                        (rule "greater_literals" (formula "62") (term "0"))
                        (rule "concrete_impl_1" (formula "62"))
                        (rule "mul_literals" (formula "62") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "62") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "62") (term "0"))
                        (rule "polySimp_rightDist" (formula "62") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "62") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "62") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "62") (term "0,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "62") (term "0,0,0"))
                        (rule "add_literals" (formula "62") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "62"))
                        (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                        (rule "inEqSimp_exactShadow1" (formula "63") (ifseqformula "10"))
                        (rule "greater_literals" (formula "63") (term "0"))
                        (rule "concrete_impl_1" (formula "63"))
                        (rule "polySimp_rightDist" (formula "63") (term "1,0"))
                        (rule "mul_literals" (formula "63") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "63") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "63") (term "0"))
                        (rule "polySimp_rightDist" (formula "63") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "63") (term "0,0,0,0"))
                        (rule "mul_literals" (formula "63") (term "0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "63") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "63") (term "0,0"))
                        (rule "add_literals" (formula "63") (term "1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "63") (term "0,0,0"))
                        (rule "add_literals" (formula "63") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "63"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                        (rule "inEqSimp_exactShadow1" (formula "70") (ifseqformula "10"))
                        (rule "greater_literals" (formula "70") (term "0"))
                        (rule "concrete_impl_1" (formula "70"))
                        (rule "polySimp_rightDist" (formula "70") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0"))
                        (rule "mul_literals" (formula "70") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "70") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "70") (term "0"))
                        (rule "polySimp_rightDist" (formula "70") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "70") (term "0,0,0,0"))
                        (rule "mul_literals" (formula "70") (term "0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "70") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "70") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "70") (term "0,0"))
                        (rule "add_literals" (formula "70") (term "1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "70") (term "0,0,0"))
                        (rule "add_literals" (formula "70") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "70"))
                        (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                        (rule "polySimp_elimOne" (formula "70") (term "0"))
                        (rule "inEqSimp_exactShadow0" (formula "64") (ifseqformula "6"))
                        (rule "eq_and" (formula "64") (term "0"))
                        (rule "greater_literals" (formula "64") (term "0"))
                        (rule "concrete_impl_1" (formula "64"))
                        (rule "polySimp_rightDist" (formula "64") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "64") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "64") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "64") (term "0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "64") (term "0,0,1,0,0"))
                        (rule "mul_literals" (formula "64") (term "0,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "64") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "64") (term "0"))
                        (rule "polySimp_rightDist" (formula "64") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "64") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "64") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "64") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,0"))
                        (rule "add_literals" (formula "64") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "64") (term "1,0,0"))
                        (rule "add_zero_right" (formula "64") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "64") (term "0,0,0"))
                        (rule "add_literals" (formula "64") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,0"))
                        (rule "add_literals" (formula "64") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "64") (term "1,0,0"))
                        (rule "add_literals" (formula "64") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "64"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                        (rule "inEqSimp_subsumption4" (formula "64") (ifseqformula "61"))
                        (rule "mul_literals" (formula "64") (term "0,1,0"))
                        (rule "greater_literals" (formula "64") (term "0,0"))
                        (rule "concrete_and_1" (formula "64") (term "0"))
                        (rule "leq_literals" (formula "64") (term "0"))
                        (rule "concrete_or_1" (formula "64"))
                        (rule "true_left" (formula "64"))
                        (rule "inEqSimp_exactShadow2" (formula "9") (ifseqformula "6"))
                        (rule "greater_literals" (formula "9") (term "0"))
                        (rule "concrete_impl_1" (formula "9"))
                        (rule "polySimp_mulAssoc" (formula "9") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "9") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0"))
                        (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "9") (term "0"))
                        (rule "add_literals" (formula "9") (term "1,1,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                        (rule "inEqSimp_exactShadow1" (formula "72") (ifseqformula "2"))
                        (rule "greater_literals" (formula "72") (term "0"))
                        (rule "concrete_impl_1" (formula "72"))
                        (rule "mul_literals" (formula "72") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "72") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "72") (term "0"))
                        (rule "polySimp_rightDist" (formula "72") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "72") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "72") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "72") (term "0,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "72") (term "0,0,0"))
                        (rule "add_literals" (formula "72") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "72"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                        (rule "polySimp_elimOne" (formula "72") (term "0"))
                        (rule "inEqSimp_exactShadow0" (formula "73") (ifseqformula "6"))
                        (rule "eq_and" (formula "73") (term "0"))
                        (rule "greater_literals" (formula "73") (term "0"))
                        (rule "concrete_impl_1" (formula "73"))
                        (rule "polySimp_rightDist" (formula "73") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "73") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "73") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "73") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "73") (term "0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "73") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "73") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "73") (term "0,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "73") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "73") (term "0"))
                        (rule "polySimp_rightDist" (formula "73") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "73") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "73") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "73") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "73") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "73") (term "0,0"))
                        (rule "add_literals" (formula "73") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "73") (term "1,0,0"))
                        (rule "add_zero_right" (formula "73") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "73") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "73") (term "0,0,0"))
                        (rule "add_literals" (formula "73") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "73") (term "0,0"))
                        (rule "add_literals" (formula "73") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "73") (term "1,0,0"))
                        (rule "add_literals" (formula "73") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "73"))
                        (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                        (rule "inEqSimp_subsumption4" (formula "73") (ifseqformula "62"))
                        (rule "mul_literals" (formula "73") (term "0,1,0"))
                        (rule "greater_literals" (formula "73") (term "0,0"))
                        (rule "concrete_and_1" (formula "73") (term "0"))
                        (rule "leq_literals" (formula "73") (term "0"))
                        (rule "concrete_or_1" (formula "73"))
                        (rule "true_left" (formula "73"))
                        (rule "inEqSimp_exactShadow3" (formula "80") (ifseqformula "4"))
                        (rule "polySimp_rightDist" (formula "80") (term "0,0"))
                        (rule "mul_literals" (formula "80") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "80") (term "0"))
                        (rule "polySimp_addAssoc" (formula "80") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "80") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "80") (term "0,0,0,0"))
                        (rule "add_literals" (formula "80") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "80"))
                        (rule "polySimp_mulLiterals" (formula "80") (term "0"))
                        (rule "polySimp_elimOne" (formula "80") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "66") (ifseqformula "4"))
                        (rule "polySimp_mulAssoc" (formula "66") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "66") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "66") (term "0"))
                        (rule "polySimp_addComm0" (formula "66") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "66"))
                        (rule "polySimp_mulComm0" (formula "66") (term "1"))
                        (rule "polySimp_rightDist" (formula "66") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "66") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "66") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "66") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "66") (term "0,0,0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "69") (ifseqformula "4"))
                        (rule "times_zero_1" (formula "69") (term "0,0"))
                        (rule "add_zero_left" (formula "69") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "69"))
                        (rule "polySimp_mulComm0" (formula "69") (term "1"))
                        (rule "polySimp_rightDist" (formula "69") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "69") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "69") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "69") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "69") (term "1,0,1"))
                        (rule "mul_literals" (formula "69") (term "0,0,1"))
                        (rule "inEqSimp_subsumption1" (formula "69") (ifseqformula "76"))
                        (rule "inEqSimp_homoInEq0" (formula "69") (term "0"))
                        (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "69") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "69") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "69") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "69") (term "1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "69") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "69") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0"))
                        (rule "add_literals" (formula "69") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "69") (term "1,0,0"))
                        (rule "add_zero_right" (formula "69") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "69") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "69") (term "0,0,0"))
                        (rule "add_literals" (formula "69") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "69") (term "0,0"))
                        (rule "add_literals" (formula "69") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "69") (term "1,0,0"))
                        (rule "add_zero_right" (formula "69") (term "0,0"))
                        (rule "qeq_literals" (formula "69") (term "0"))
                        (rule "concrete_or_1" (formula "69"))
                        (rule "true_left" (formula "69"))
                        (rule "inEqSimp_exactShadow2" (formula "19") (ifseqformula "6"))
                        (rule "mul_literals" (formula "19") (term "1,0,0,1"))
                        (rule "greater_literals" (formula "19") (term "0"))
                        (rule "concrete_impl_1" (formula "19"))
                        (rule "mul_literals" (formula "19") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                        (rule "add_literals" (formula "19") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1"))
                        (rule "polySimp_rightDist" (formula "19") (term "1"))
                        (rule "mul_literals" (formula "19") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                        (rule "inEqSimp_exactShadow1" (formula "76") (ifseqformula "2"))
                        (rule "greater_literals" (formula "76") (term "0"))
                        (rule "concrete_impl_1" (formula "76"))
                        (rule "mul_literals" (formula "76") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "76") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "76") (term "0"))
                        (rule "polySimp_rightDist" (formula "76") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "76") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "76") (term "0,0"))
                        (rule "add_literals" (formula "76") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "76"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                        (rule "polySimp_elimOne" (formula "76") (term "0"))
                        (rule "inEqSimp_exactShadow2" (formula "18") (ifseqformula "9"))
                        (rule "greater_literals" (formula "18") (term "0"))
                        (rule "concrete_impl_1" (formula "18"))
                        (rule "mul_literals" (formula "18") (term "1,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0"))
                        (rule "add_literals" (formula "18") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                        (rule "mul_literals" (formula "18") (term "1"))
                        (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                        (rule "leq_literals" (formula "18") (term "0,0"))
                        (rule "concrete_or_2" (formula "18") (term "0"))
                        (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                        (rule "add_literals" (formula "18") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0"))
                        (rule "add_zero_right" (formula "18") (term "0,0"))
                        (rule "leq_literals" (formula "18") (term "0"))
                        (rule "concrete_or_2" (formula "18"))
                        (rule "inEqSimp_exactShadow1" (formula "78") (ifseqformula "11"))
                        (rule "greater_literals" (formula "78") (term "0"))
                        (rule "concrete_impl_1" (formula "78"))
                        (rule "polySimp_rightDist" (formula "78") (term "1,0"))
                        (rule "mul_literals" (formula "78") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "78") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "78") (term "0,0,0"))
                        (rule "mul_literals" (formula "78") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "78") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "78") (term "0"))
                        (rule "polySimp_addComm1" (formula "78") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "78") (term "0"))
                        (rule "add_literals" (formula "78") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "78") (term "0,0"))
                        (rule "add_literals" (formula "78") (term "0,0,0"))
                        (rule "add_zero_left" (formula "78") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "78"))
                        (rule "polySimp_mulLiterals" (formula "78") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "8"))
                        (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                        (rule "mul_literals" (formula "20") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0"))
                        (rule "add_literals" (formula "20") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                        (rule "mul_literals" (formula "20") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "20") (ifseqformula "18"))
                        (rule "greater_literals" (formula "20") (term "0,0"))
                        (rule "concrete_and_1" (formula "20") (term "0"))
                        (rule "times_zero_1" (formula "20") (term "1,0"))
                        (rule "leq_literals" (formula "20") (term "0"))
                        (rule "concrete_or_1" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "inEqSimp_exactShadow2" (formula "20") (ifseqformula "9"))
                        (rule "greater_literals" (formula "20") (term "0"))
                        (rule "concrete_impl_1" (formula "20"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "20") (term "0"))
                        (rule "add_literals" (formula "20") (term "1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                        (rule "mul_literals" (formula "20") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "20") (ifseqformula "18"))
                        (rule "times_zero_1" (formula "20") (term "1,1,0"))
                        (rule "greater_literals" (formula "20") (term "0,0"))
                        (rule "concrete_and_1" (formula "20") (term "0"))
                        (rule "leq_literals" (formula "20") (term "0"))
                        (rule "concrete_or_1" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "inEqSimp_exactShadow3" (formula "76") (ifseqformula "74"))
                        (rule "times_zero_1" (formula "76") (term "0,0"))
                        (rule "add_zero_left" (formula "76") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "76"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                        (rule "polySimp_elimOne" (formula "76") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "76") (ifseqformula "78"))
                        (rule "inEqSimp_homoInEq0" (formula "76") (term "0"))
                        (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "76") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "76") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "76") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "76") (term "0,0,0"))
                        (rule "add_literals" (formula "76") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "76") (term "0,0"))
                        (rule "add_literals" (formula "76") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "76") (term "1,0,0"))
                        (rule "add_zero_right" (formula "76") (term "0,0"))
                        (rule "qeq_literals" (formula "76") (term "0"))
                        (rule "concrete_or_1" (formula "76"))
                        (rule "true_left" (formula "76"))
                        (rule "inEqSimp_exactShadow2" (formula "76") (ifseqformula "65"))
                        (rule "greater_literals" (formula "76") (term "0"))
                        (rule "concrete_impl_1" (formula "76"))
                        (rule "times_zero_1" (formula "76") (term "1,0,0"))
                        (rule "mul_literals" (formula "76") (term "0,0"))
                        (rule "add_zero_left" (formula "76") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "76"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                        (rule "polySimp_elimOne" (formula "76") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "76") (ifseqformula "78"))
                        (rule "inEqSimp_homoInEq0" (formula "76") (term "0"))
                        (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "76") (term "1,0,0"))
                        (rule "mul_literals" (formula "76") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "76") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "76") (term "0,0,0"))
                        (rule "add_literals" (formula "76") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "76") (term "0,0"))
                        (rule "add_literals" (formula "76") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "76") (term "1,0,0"))
                        (rule "add_zero_right" (formula "76") (term "0,0"))
                        (rule "qeq_literals" (formula "76") (term "0"))
                        (rule "concrete_or_1" (formula "76"))
                        (rule "true_left" (formula "76"))
                        (rule "inEqSimp_exactShadow2" (formula "76") (ifseqformula "66"))
                        (rule "times_zero_1" (formula "76") (term "1,0,0,1"))
                        (rule "greater_literals" (formula "76") (term "0"))
                        (rule "concrete_impl_1" (formula "76"))
                        (rule "times_zero_1" (formula "76") (term "0,0"))
                        (rule "add_zero_left" (formula "76") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "76"))
                        (rule "polySimp_mulComm0" (formula "76") (term "1"))
                        (rule "polySimp_rightDist" (formula "76") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1,1"))
                        (rule "mul_literals" (formula "76") (term "0,1"))
                        (rule "inEqSimp_subsumption1" (formula "76") (ifseqformula "79"))
                        (rule "inEqSimp_homoInEq0" (formula "76") (term "0"))
                        (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "76") (term "1,0,0"))
                        (rule "mul_literals" (formula "76") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "76") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "76") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "76") (term "0,0"))
                        (rule "add_literals" (formula "76") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "76") (term "1,0,0"))
                        (rule "add_zero_right" (formula "76") (term "0,0"))
                        (rule "qeq_literals" (formula "76") (term "0"))
                        (rule "concrete_or_1" (formula "76"))
                        (rule "true_left" (formula "76"))
                        (rule "inEqSimp_exactShadow3" (formula "76") (ifseqformula "73"))
                        (rule "times_zero_1" (formula "76") (term "0,0"))
                        (rule "add_zero_left" (formula "76") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "76"))
                        (rule "polySimp_mulComm0" (formula "76") (term "1"))
                        (rule "polySimp_rightDist" (formula "76") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1,1"))
                        (rule "mul_literals" (formula "76") (term "0,1"))
                        (rule "inEqSimp_subsumption1" (formula "76") (ifseqformula "79"))
                        (rule "inEqSimp_homoInEq0" (formula "76") (term "0"))
                        (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "76") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "76") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "76") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "76") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "76") (term "0,0"))
                        (rule "add_literals" (formula "76") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "76") (term "1,0,0"))
                        (rule "add_zero_right" (formula "76") (term "0,0"))
                        (rule "qeq_literals" (formula "76") (term "0"))
                        (rule "concrete_or_1" (formula "76"))
                        (rule "true_left" (formula "76"))
                        (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "77"))
                        (rule "mul_literals" (formula "19") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0"))
                        (rule "add_literals" (formula "19") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                        (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                        (rule "neg_literal" (formula "19") (term "0,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                        (rule "leq_literals" (formula "19") (term "0,0"))
                        (rule "concrete_or_2" (formula "19") (term "0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                        (rule "add_literals" (formula "19") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0"))
                        (rule "qeq_literals" (formula "19") (term "0"))
                        (rule "concrete_or_2" (formula "19"))
                        (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "19"))
                        (rule "applyEq" (formula "22") (term "0,1,1") (ifseqformula "18"))
                        (rule "times_zero_2" (formula "22") (term "1,1"))
                        (rule "add_zero_right" (formula "22") (term "1"))
                        (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "18"))
                        (rule "leq_literals" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "applyEqRigid" (formula "78") (term "0,1,1") (ifseqformula "18"))
                        (rule "times_zero_2" (formula "78") (term "1,1"))
                        (rule "add_zero_right" (formula "78") (term "1"))
                        (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "18"))
                        (rule "qeq_literals" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "applyEq" (formula "78") (term "0,1") (ifseqformula "18"))
                        (rule "times_zero_2" (formula "78") (term "1"))
                        (rule "applyEqRigid" (formula "9") (term "0,1,1") (ifseqformula "18"))
                        (rule "times_zero_2" (formula "9") (term "1,1"))
                        (rule "add_zero_right" (formula "9") (term "1"))
                        (rule "applyEqRigid" (formula "79") (term "0,1,0,1") (ifseqformula "18"))
                        (rule "times_zero_2" (formula "79") (term "1,0,1"))
                        (rule "add_zero_right" (formula "79") (term "0,1"))
                        (rule "applyEqRigid" (formula "65") (term "0,1,0,1") (ifseqformula "18"))
                        (rule "times_zero_2" (formula "65") (term "1,0,1"))
                        (rule "add_zero_right" (formula "65") (term "0,1"))
                        (rule "applyEqRigid" (formula "6") (term "0,1,0,1") (ifseqformula "18"))
                        (rule "times_zero_2" (formula "6") (term "1,0,1"))
                        (rule "add_zero_right" (formula "6") (term "0,1"))
                        (rule "applyEq" (formula "74") (term "0,1,0,1") (ifseqformula "18"))
                        (rule "times_zero_2" (formula "74") (term "1,0,1"))
                        (rule "add_zero_right" (formula "74") (term "0,1"))
                        (rule "applyEq" (formula "73") (term "0,1,0,1") (ifseqformula "18"))
                        (rule "times_zero_2" (formula "73") (term "1,0,1"))
                        (rule "add_zero_right" (formula "73") (term "0,1"))
                        (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "18"))
                        (rule "applyEq" (formula "66") (term "0,1,0,1") (ifseqformula "18"))
                        (rule "times_zero_2" (formula "66") (term "1,0,1"))
                        (rule "add_zero_right" (formula "66") (term "0,1"))
                        (rule "applyEq" (formula "67") (term "0,1,0,0,1") (ifseqformula "18"))
                        (rule "times_zero_2" (formula "67") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "67") (term "0,0,1"))
                        (rule "applyEq" (formula "83") (term "0,1,0,0,1") (ifseqformula "18"))
                        (rule "times_zero_2" (formula "83") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "83") (term "0,0,1"))
                        (rule "applyEq" (formula "4") (term "0,1,0,0,1") (ifseqformula "18"))
                        (rule "times_zero_2" (formula "4") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "4") (term "0,0,1"))
                        (rule "applyEqRigid" (formula "75") (term "0,1,0,0,1") (ifseqformula "18"))
                        (rule "times_zero_2" (formula "75") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "75") (term "0,0,1"))
                        (rule "applyEq" (formula "90") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
                        (rule "times_zero_2" (formula "90") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "90") (term "0,0,1,0,0"))
                        (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "19"))
                        (rule "leq_literals" (formula "20") (term "0"))
                        (rule "concrete_or_1" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "inEqSimp_subsumption4" (formula "9") (ifseqformula "8"))
                        (rule "greater_literals" (formula "9") (term "0,0"))
                        (rule "concrete_and_1" (formula "9") (term "0"))
                        (rule "mul_literals" (formula "9") (term "0,0"))
                        (rule "leq_literals" (formula "9") (term "0"))
                        (rule "concrete_or_1" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "inEqSimp_contradInEq3" (formula "76") (ifseqformula "75"))
                        (rule "mul_literals" (formula "76") (term "0,1,0"))
                        (rule "greater_literals" (formula "76") (term "0,0"))
                        (rule "concrete_impl_1" (formula "76") (term "0"))
                        (rule "qeq_literals" (formula "76") (term "0"))
                        (rule "concrete_and_2" (formula "76"))
                        (rule "closeFalse" (formula "76"))
                     )
                     (branch "result_1_0 >= 0 FALSE"
                        (rule "eqSymm" (formula "64"))
                        (rule "inEqSimp_geqRight" (formula "74"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "applyEq" (formula "59") (term "0") (ifseqformula "65"))
                        (rule "inEqSimp_homoInEq0" (formula "59"))
                        (rule "polySimp_mulComm0" (formula "59") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "59") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "59") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "59") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "59") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "59") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "59") (term "0"))
                        (rule "applyEqRigid" (formula "66") (term "0") (ifseqformula "65"))
                        (rule "inEqSimp_homoInEq0" (formula "66"))
                        (rule "polySimp_mulComm0" (formula "66") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "66") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "66") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "66") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "66") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "66") (term "0"))
                        (rule "polySimp_addComm1" (formula "66") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "66") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "59"))
                        (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                        (rule "polySimp_elimOne" (formula "59") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "66"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                        (rule "polySimp_elimOne" (formula "66") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
                        (rule "leq_literals" (formula "3") (term "0"))
                        (rule "concrete_or_1" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "inEqSimp_exactShadow3" (formula "71") (ifseqformula "65"))
                        (rule "polySimp_rightDist" (formula "71") (term "0,0"))
                        (rule "mul_literals" (formula "71") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "71") (term "0"))
                        (rule "polySimp_addComm1" (formula "71") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "71") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "71") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "71") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "71") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "71"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "72") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "72") (term "0,0"))
                        (rule "mul_literals" (formula "72") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "72") (term "0"))
                        (rule "add_literals" (formula "72") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "72"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                        (rule "polySimp_elimOne" (formula "72") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "69") (ifseqformula "72"))
                        (rule "leq_literals" (formula "69") (term "0"))
                        (rule "concrete_or_1" (formula "69"))
                        (rule "true_left" (formula "69"))
                        (rule "inEqSimp_contradInEq0" (formula "67") (ifseqformula "71"))
                        (rule "qeq_literals" (formula "67") (term "0"))
                        (rule "concrete_and_2" (formula "67"))
                        (rule "closeFalse" (formula "67"))
                     )
                  )
               )
               (branch "if x_5 false"
                  (rule "false_to_not_true" (formula "1") (term "1"))
                  (rule "simplifyUpdate2" (formula "65"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "60"))
                  (rule "applyOnPV" (formula "60") (term "0"))
                  (rule "simplifyUpdate1" (formula "60") (term "1"))
                  (rule "ifthenelse_concrete3" (formula "60"))
                  (rule "boolean_not_equal_2" (formula "60") (term "1"))
                  (rule "concrete_or_4" (formula "60"))
                  (rule "inEqSimp_geqRight" (formula "60"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "jmod_axiom" (formula "1") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                  (rule "andLeft" (formula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,1,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0"))
                  (rule "add_zero_right" (formula "3") (term "0"))
                  (rule "leq_literals" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
            )
            (branch "Use Case"
               (rule "false_to_not_true" (formula "37") (term "0,0,1,1"))
               (rule "simplifyUpdate2" (formula "30"))
               (rule "expand_inInt" (formula "30") (term "1,1,1"))
               (rule "replace_int_MAX" (formula "30") (term "1,0,1,1,1"))
               (rule "replace_int_MIN" (formula "30") (term "0,1,1,1,1"))
               (rule "simplifyUpdate2" (formula "30") (term "1"))
               (rule "sequentialToParallel2" (formula "37"))
               (rule "simplifyUpdate2" (formula "37"))
               (rule "simplifyUpdate3" (formula "37") (term "1,0"))
               (rule "sequentialToParallel2" (formula "30"))
               (rule "simplifyUpdate2" (formula "30"))
               (rule "simplifyUpdate3" (formula "30") (term "1,0"))
               (rule "andLeft" (formula "30"))
               (rule "simplifyUpdate2" (formula "31"))
               (rule "andLeft" (formula "30"))
               (rule "simplifyUpdate2" (formula "31"))
               (rule "andLeft" (formula "32"))
               (rule "exLeft" (formula "31") (inst "sk=i_2"))
               (rule "andLeft" (formula "31"))
               (rule "andLeft" (formula "31"))
               (rule "simplifyUpdate2" (formula "31"))
               (rule "inEqSimp_ltRight" (formula "39"))
               (rule "mul_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_gtRight" (formula "40"))
               (rule "mul_literals" (formula "1") (term "0,0"))
               (rule "applyOnRigidFormula" (formula "32"))
               (rule "simplifyUpdate1" (formula "32") (term "1"))
               (rule "simplifyUpdate1" (formula "32") (term "0"))
               (rule "applyOnPV" (formula "32") (term "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "applyOnRigidFormula" (formula "36"))
               (rule "applyOnPV" (formula "36") (term "0"))
               (rule "simplifyUpdate1" (formula "36") (term "1"))
               (rule "applyOnRigidFormula" (formula "37"))
               (rule "applyOnPV" (formula "37") (term "1"))
               (rule "simplifyUpdate1" (formula "37") (term "0"))
               (rule "applyOnRigidFormula" (formula "35"))
               (rule "applyOnPV" (formula "35") (term "1"))
               (rule "simplifyUpdate1" (formula "35") (term "0"))
               (rule "applyOnRigidFormula" (formula "34"))
               (rule "applyOnPV" (formula "34") (term "1"))
               (rule "simplifyUpdate1" (formula "34") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "29") (term "0,1,0,1,0"))
               (rule "inEqSimp_gtToGeq" (formula "28") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "28") (term "0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "26"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulAssoc" (formula "29") (term "1,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "23"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "23") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_mulAssoc" (formula "29") (term "1,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "20"))
               (rule "mul_literals" (formula "20") (term "1,0,0"))
               (rule "add_literals" (formula "20") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,0,0,0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,0,0,0,1,0,1"))
               (rule "applyOnRigidTerm" (formula "32") (term "0"))
               (rule "simplifyUpdate1" (formula "32") (term "1,0"))
               (rule "applyOnPV" (formula "32") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "34"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "34") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "33"))
               (rule "inEqSimp_commuteLeq" (formula "37"))
               (rule "inEqSimp_ltToLeq" (formula "32"))
               (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
               (rule "mul_literals" (formula "32") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
               (rule "add_literals" (formula "32") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "32") (term "0"))
               (rule "variableDeclarationAssign" (formula "42") (term "1"))
               (rule "variableDeclaration" (formula "42") (term "1") (newnames "b_1"))
               (rule "applyEq" (formula "12") (term "0") (ifseqformula "24"))
               (rule "applyEq" (formula "28") (term "2,0,1,1,0,0,1,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "29") (term "2,1,1,1,0,0,1,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "16") (term "0") (ifseqformula "24"))
               (rule "applyEq" (formula "14") (term "0") (ifseqformula "24"))
               (rule "applyEq" (formula "17") (term "0") (ifseqformula "24"))
               (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "11") (term "0") (ifseqformula "24"))
               (rule "applyEq" (formula "29") (term "2,1,1,0,0,0,0,0,1,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "29") (term "2,0,1,0,1,0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "28") (term "2,0,1,0,1,0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "18") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
               (rule "applyEq" (formula "29") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
               (rule "applyEq" (formula "15") (term "0,1,0,0,0,0,0") (ifseqformula "24"))
               (rule "applyEq" (formula "19") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
               (rule "applyEq" (formula "29") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "19") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "28") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
               (rule "applyEq" (formula "29") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "24"))
               (rule "mod_axiom" (formula "2") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0,0,1,0"))
               (rule "jmod_axiom" (formula "1") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
               (rule "mod_axiom" (formula "1") (term "0,1,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "0,1,0,1,0,1,0"))
               (rule "mul_literals" (formula "1") (term "0,0,1,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,0"))
               (rule "mod_axiom" (formula "32") (term "0,1,0,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "32") (term "0,1,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "32") (term "0,0,1,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "32") (term "0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,1,0"))
               (rule "jmod_axiom" (formula "32") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,1,0"))
               (rule "mod_axiom" (formula "42") (term "0,1,0,1,0,1,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,1,0,1,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0,1,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0,1,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,0,1,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "42") (term "0,1,0,1,0,1,0,1,0,0"))
               (rule "mul_literals" (formula "42") (term "0,0,1,0,1,0,1,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,1,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,1,0,1,0,0"))
               (rule "add_literals" (formula "42") (term "0,0,0,1,0,1,0,1,0,0"))
               (rule "mod_axiom" (formula "2") (term "0,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,1,0"))
               (rule "mul_literals" (formula "2") (term "0,0,1,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,1,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0,0,1,0"))
               (rule "mod_axiom" (formula "1") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,1,0"))
               (rule "mod_axiom" (formula "32") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0,0,1,0"))
               (rule "add_literals" (formula "32") (term "1,1,0,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "32") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0,0,1,0"))
               (rule "mod_axiom" (formula "42") (term "1,0,1,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,0,1,0,0"))
               (rule "polySimp_addComm0" (formula "42") (term "0,1,0,1,0,0"))
               (rule "jmod_axiom" (formula "2") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,1,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "29") (term "0,1,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20"))
               (rule "mul_literals" (formula "20") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "34"))
               (rule "polySimp_mulLiterals" (formula "34") (term "0"))
               (rule "polySimp_elimOne" (formula "34") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0,0,0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,0,0,0,1,0,1"))
               (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,0,0,0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,0,0,0,1,0,1"))
               (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,0,0,0,1,0,1"))
               (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,0,0,0,1,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "29") (term "0,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "23"))
               (rule "polySimp_mulLiterals" (formula "23") (term "0"))
               (rule "polySimp_elimOne" (formula "23") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "26"))
               (rule "polySimp_mulLiterals" (formula "26") (term "0"))
               (rule "polySimp_elimOne" (formula "26") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "28") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "0,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "32"))
               (rule "polySimp_mulLiterals" (formula "32") (term "0"))
               (rule "polySimp_elimOne" (formula "32") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "11"))
               (rule "leq_literals" (formula "17") (term "0"))
               (rule "concrete_or_1" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "16"))
               (rule "leq_literals" (formula "14") (term "0"))
               (rule "concrete_or_1" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "15"))
               (rule "leq_literals" (formula "12") (term "0"))
               (rule "concrete_or_1" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "elimGcdGeq" (formula "26") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
               (rule "sub_literals" (formula "26") (term "0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "26") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "26") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
               (rule "leq_literals" (formula "26") (term "1,0,1,1,0,0,0,0,1,1,0"))
               (rule "concrete_and_3" (formula "26") (term "0,1,1,0,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,1,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,1,1,0,0,0,0,1,1,0"))
               (rule "qeq_literals" (formula "26") (term "0,1,1,0,0,0,0,1,1,0"))
               (rule "ifthenelse_true_for" (formula "26") (term "1,1,0,0,0,0,1,1,0"))
               (rule "elimGcdGeq" (formula "26") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "0,0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "sub_literals" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "26") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
               (rule "leq_literals" (formula "26") (term "1,0,0,0,0,0,0,0,1,1,0"))
               (rule "concrete_and_3" (formula "26") (term "0,0,0,0,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,0,0,1,1,0"))
               (rule "qeq_literals" (formula "26") (term "0,0,0,0,0,0,0,1,1,0"))
               (rule "ifthenelse_true_for" (formula "26") (term "0,0,0,0,0,0,1,1,0"))
               (rule "polyDiv_pullOut" (formula "2") (term "0,1,0,0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0,1,0,0"))
               (rule "equal_literals" (formula "2") (term "0,0,1,0,0"))
               (rule "ifthenelse_false" (formula "2") (term "0,1,0,0"))
               (rule "mul_literals" (formula "2") (term "1,0,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,1,1,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,1,1,0,0"))
               (rule "add_zero_left" (formula "2") (term "0,0,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
               (rule "polyMod_pullOut" (formula "29") (term "0") (inst "polyDivCoeff=mul(div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                mul(jdiv(expectedMaxSize, Z(2(#))),
                    Z(3(#)))),
            mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                        jdiv(expectedMaxSize, Z(2(#)))),
                    Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
                Z(neglit(8(8(8(1(0(9(4(8(8(2(1(#))))))))))))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
               (rule "add_literals" (formula "29") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "29") (term "1,0,0"))
               (rule "add_zero_right" (formula "29") (term "0,0"))
               (rule "polyMod_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=mul(div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                mul(jdiv(expectedMaxSize, Z(2(#))),
                    Z(3(#)))),
            mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                        jdiv(expectedMaxSize, Z(2(#)))),
                    Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
                Z(neglit(8(8(8(1(0(9(4(8(8(2(1(#))))))))))))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "elimGcdLeq" (formula "26") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
               (rule "sub_literals" (formula "26") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,1,0,0,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "26") (term "0,0,1,0,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,1,0,0,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "qeq_literals" (formula "26") (term "1,0,0,1,0,0,1,1,0"))
               (rule "concrete_and_3" (formula "26") (term "0,0,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,0,0,1,1,0"))
               (rule "add_zero_left" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "26") (term "0,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,0,0,0,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "0,0,0,1,0,0,1,1,0"))
               (rule "leq_literals" (formula "26") (term "0,0,1,0,0,1,1,0"))
               (rule "ifthenelse_true_for" (formula "26") (term "0,1,0,0,1,1,0"))
               (rule "elimGcdLeq" (formula "26") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "sub_literals" (formula "26") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "26") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
               (rule "qeq_literals" (formula "26") (term "1,0,1,1,0,0,0,1,1,0"))
               (rule "concrete_and_3" (formula "26") (term "0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "26") (term "0,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "1,0,0,1,1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "0,0,1,1,0,0,0,1,1,0"))
               (rule "leq_literals" (formula "26") (term "0,1,1,0,0,0,1,1,0"))
               (rule "ifthenelse_true_for" (formula "26") (term "1,1,0,0,0,1,1,0"))
               (rule "polyDiv_pullOut" (formula "39") (term "0,1,0,0,1,0,1,0,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(expectedMaxSize, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(3(#))))"))
               (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,2,0,1,0,0,1,0,1,0,0"))
               (rule "equal_literals" (formula "39") (term "0,0,1,0,0,1,0,1,0,0"))
               (rule "ifthenelse_false" (formula "39") (term "0,1,0,0,1,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,0,0,1,0,1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,0,1,0,0,1,0,1,0,0"))
               (rule "add_literals" (formula "39") (term "1,1,0,0,0,1,0,0,1,0,1,0,0"))
               (rule "times_zero_1" (formula "39") (term "1,0,0,0,1,0,0,1,0,1,0,0"))
               (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,1,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,1,0,0"))
               (rule "polySimp_addComm0" (formula "39") (term "1,1,0,0,1,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,1,0,0"))
               (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0,0,1,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,0,1,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,1,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,0,1,0,1,0,0"))
               (rule "add_literals" (formula "39") (term "1,1,0,0,0,1,0,1,0,0"))
               (rule "times_zero_1" (formula "39") (term "1,0,0,0,1,0,1,0,0"))
               (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,1,0,0"))
               (rule "polyMod_pullOut" (formula "39") (term "1,0,1,0,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(jdiv(expectedMaxSize, Z(2(#))),
                Z(3(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
               (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "39") (term "0,1,0,1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,1,0,1,0,0"))
               (rule "add_literals" (formula "39") (term "1,1,0,0,1,0,1,0,0"))
               (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,1,0,0"))
               (rule "add_zero_right" (formula "39") (term "0,0,1,0,1,0,0"))
               (rule "polyMod_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(expectedMaxSize, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(3(#))))"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "polyMod_pullOut" (formula "29") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(expectedMaxSize, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(3(#))))"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
               (rule "add_literals" (formula "29") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "29") (term "1,0,0"))
               (rule "add_zero_right" (formula "29") (term "0,0"))
               (rule "polyMod_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=mul(div(mul(mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                    jdiv(expectedMaxSize, Z(2(#)))),
                Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
            Z(3(#))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "polyMod_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(expectedMaxSize, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(3(#))))"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "polyMod_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=Z(1(#))"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
               (rule "mul_literals" (formula "2") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0"))
               (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "33"))
               (rule "polySimp_rightDist" (formula "31") (term "0,0"))
               (rule "mul_literals" (formula "31") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "31") (term "0"))
               (rule "add_literals" (formula "31") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "31"))
               (rule "polySimp_mulLiterals" (formula "31") (term "0"))
               (rule "polySimp_elimOne" (formula "31") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "11"))
               (rule "polySimp_rightDist" (formula "20") (term "0,0"))
               (rule "mul_literals" (formula "20") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0"))
               (rule "add_literals" (formula "20") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "20"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0"))
               (rule "polySimp_elimOne" (formula "20") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "30") (term "0,0"))
               (rule "mul_literals" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0"))
               (rule "add_literals" (formula "30") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "30"))
               (rule "polySimp_mulLiterals" (formula "30") (term "0"))
               (rule "polySimp_elimOne" (formula "30") (term "0"))
               (rule "nnf_imp2or" (formula "15") (term "1,0"))
               (rule "nnf_imp2or" (formula "16") (term "1,0,1,0"))
               (rule "nnf_imp2or" (formula "26") (term "0,1,1,0"))
               (rule "nnf_imp2or" (formula "13") (term "0"))
               (rule "nnf_imp2or" (formula "27") (term "0"))
               (rule "nnf_imp2or" (formula "15") (term "0"))
               (rule "nnf_imp2or" (formula "16") (term "0"))
               (rule "nnf_imp2or" (formula "26") (term "0"))
               (rule "nnf_notAnd" (formula "13") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
               (rule "mul_literals" (formula "13") (term "1,1,0,0"))
               (rule "nnf_imp2or" (formula "27") (term "1,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
               (rule "mul_literals" (formula "27") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "15") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
               (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
               (rule "mul_literals" (formula "15") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "16") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
               (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
               (rule "mul_literals" (formula "16") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "26") (term "1,0"))
               (rule "nnf_notAnd" (formula "26") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
               (rule "mul_literals" (formula "26") (term "1,1,0,0"))
               (rule "nnf_imp2or" (formula "16") (term "0,1,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,1,0"))
               (rule "double_not" (formula "27") (term "0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,1,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,1,0,1,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,1,0"))
               (rule "jdiv_axiom" (formula "18") (term "1,0"))
               (rule "eqSymm" (formula "18"))
               (rule "inEqSimp_subsumption1" (formula "18") (term "0,0") (ifseqformula "14"))
               (rule "leq_literals" (formula "18") (term "0,0,0"))
               (rule "concrete_or_1" (formula "18") (term "0,0"))
               (rule "ifthenelse_true" (formula "18") (term "0"))
               (rule "eqSymm" (formula "18"))
               (rule "applyEqRigid" (formula "28") (term "1,0,0,0") (ifseqformula "18"))
               (rule "applyEq" (formula "16") (term "1,0,0,0") (ifseqformula "18"))
               (rule "applyEqRigid" (formula "19") (term "1,0") (ifseqformula "18"))
               (rule "applyEq" (formula "27") (term "1,0,0,0") (ifseqformula "18"))
               (rule "applyEq" (formula "16") (term "1,1,0,0,0,0,1,0") (ifseqformula "18"))
               (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "18"))
               (rule "applyEqRigid" (formula "15") (term "1,0,0,0") (ifseqformula "18"))
               (rule "nnf_imp2or" (formula "28") (term "0,1,1,0"))
               (rule "less_than_comparison_simple" (formula "43") (term "1"))
               (rule "sequentialToParallel2" (formula "43"))
               (rule "simplifyUpdate2" (formula "43"))
               (rule "simplifyUpdate3" (formula "43") (term "1,0"))
               (rule "applyOnElementary" (formula "43") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "43") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "43") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "43") (term "2,0,1,0"))
               (rule "applyOnRigidFormula" (formula "43") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "43") (term "0,0,0,1,0"))
               (rule "simplifyUpdate1" (formula "43") (term "1,0,0,1,0"))
               (rule "applyOnPV" (formula "43") (term "0,0,0,1,0"))
               (rule "applyOnPV" (formula "43") (term "1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,1,0"))
               (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,1,0"))
               (rule "add_literals" (formula "43") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "43") (term "0,0,0,1,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,1,0"))
               (rule "double_not" (formula "27") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,1,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,1,0,1,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,1,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,0"))
               (rule "nnf_notAnd" (formula "16") (term "0,1,0,1,0"))
               (rule "double_not" (formula "16") (term "0,0,1,0,1,0"))
               (rule "nnf_notAnd" (formula "16") (term "0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,1,0"))
               (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,1,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,1,1,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,0,1,1,0"))
               (rule "nnf_notOr" (formula "28") (term "1,0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,1,1,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,1,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,1,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,1,0,0,1,1,0"))
               (rule "jdiv_axiom" (formula "32") (term "1,1"))
               (rule "eqSymm" (formula "32"))
               (rule "polyDiv_pullOut" (formula "32") (term "0,2,0") (inst "polyDivCoeff=mul(result_1_0, Z(neglit(1(#))))"))
               (rule "equal_literals" (formula "32") (term "0,0,2,0"))
               (rule "ifthenelse_false" (formula "32") (term "0,2,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,2,0"))
               (rule "polySimp_pullOutFactor0" (formula "32") (term "0,0,0,2,0"))
               (rule "add_literals" (formula "32") (term "1,0,0,0,2,0"))
               (rule "polySimp_elimOne" (formula "32") (term "0,0,0,2,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "2,0"))
               (rule "polySimp_addComm0" (formula "32") (term "1,2,0"))
               (rule "polySimp_rightDist" (formula "32") (term "2,0"))
               (rule "polySimp_mulAssoc" (formula "32") (term "0,2,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "0,2,0"))
               (rule "polySimp_elimOne" (formula "32") (term "0,2,0"))
               (rule "nnf_notOr" (formula "28") (term "1,0,0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,0,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "1,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,1,1,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,1,1,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,0,0,1,1,0"))
               (rule "commute_or_2" (formula "13") (term "0"))
               (rule "nnf_notOr" (formula "28") (term "0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,0,1,1,0"))
               (rule "nnf_notOr" (formula "28") (term "1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "1,1,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "28") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,1,1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "1,1,1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,0,1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,0,0,1,1,0"))
               (rule "commute_or_2" (formula "15") (term "0"))
               (rule "commute_or" (formula "28") (term "0,0"))
               (rule "commute_or" (formula "16") (term "0,0"))
               (rule "commute_or" (formula "27") (term "0,0"))
               (rule "jdiv_axiom" (formula "1") (term "1,0,0"))
               (rule "eqSymm" (formula "1"))
               (rule "polyDiv_pullOut" (formula "1") (term "0,2,0") (inst "polyDivCoeff=mul(expectedMaxSize, Z(neglit(1(#))))"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,2,0"))
               (rule "equal_literals" (formula "1") (term "0,0,2,0"))
               (rule "ifthenelse_false" (formula "1") (term "0,2,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
               (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,2,0"))
               (rule "add_literals" (formula "1") (term "1,0,0,0,2,0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,0,0,2,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "2,0"))
               (rule "polySimp_addComm0" (formula "1") (term "1,2,0"))
               (rule "polySimp_rightDist" (formula "1") (term "2,0"))
               (rule "polySimp_mulAssoc" (formula "1") (term "0,2,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0,2,0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,2,0"))
               (rule "commute_or_2" (formula "28") (term "0,1,1,0"))
               (rule "shift_paren_or" (formula "17") (term "0,1,0"))
               (rule "methodCallEmpty" (formula "45") (term "1"))
               (rule "commute_or" (formula "14") (term "0,0"))
               (rule "commute_or" (formula "16") (term "0,0"))
               (rule "commute_or_2" (formula "14") (term "0"))
               (rule "commute_or_2" (formula "16") (term "0"))
               (rule "div_axiom" (formula "19") (term "1") (inst "quotient=quotient_0"))
               (rule "equal_literals" (formula "19") (term "0"))
               (rule "concrete_or_2" (formula "19"))
               (rule "mul_literals" (formula "19") (term "1,1,1,1"))
               (rule "qeq_literals" (formula "19") (term "0,1"))
               (rule "ifthenelse_true_for" (formula "19") (term "1"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "19"))
               (rule "polySimp_addComm1" (formula "21") (term "1"))
               (rule "add_literals" (formula "21") (term "0,1"))
               (rule "inEqSimp_commuteLeq" (formula "20"))
               (rule "inEqSimp_homoInEq1" (formula "21"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
               (rule "polySimp_addComm1" (formula "21") (term "0"))
               (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "19"))
               (rule "applyEq" (formula "29") (term "0") (ifseqformula "19"))
               (rule "inEqSimp_homoInEq1" (formula "29"))
               (rule "polySimp_addComm1" (formula "29") (term "0"))
               (rule "applyEq" (formula "17") (term "1,0,0,0,0,1,0") (ifseqformula "19"))
               (rule "applyEqRigid" (formula "17") (term "1,1,0,0") (ifseqformula "19"))
               (rule "applyEqRigid" (formula "16") (term "1,1,0") (ifseqformula "19"))
               (rule "applyEqRigid" (formula "31") (term "1,1,0,0") (ifseqformula "19"))
               (rule "applyEq" (formula "32") (term "1,1,0,0") (ifseqformula "19"))
               (rule "applyEqRigid" (formula "22") (term "1") (ifseqformula "19"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21"))
               (rule "polySimp_mulComm0" (formula "21") (term "1"))
               (rule "polySimp_rightDist" (formula "21") (term "1"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
               (rule "mul_literals" (formula "21") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29"))
               (rule "polySimp_mulComm0" (formula "29") (term "1"))
               (rule "polySimp_rightDist" (formula "29") (term "1"))
               (rule "mul_literals" (formula "29") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "12"))
               (rule "polySimp_mulAssoc" (formula "20") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
               (rule "polySimp_addComm0" (formula "20") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "20"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0"))
               (rule "elimGcdLeq_antec" (formula "20") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
               (rule "leq_literals" (formula "20") (term "0,0"))
               (rule "concrete_or_2" (formula "20") (term "0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,0"))
               (rule "neg_literal" (formula "20") (term "0,0,0,0,0,0"))
               (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
               (rule "add_literals" (formula "20") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "20") (term "1,0,0"))
               (rule "add_zero_right" (formula "20") (term "0,0"))
               (rule "qeq_literals" (formula "20") (term "0"))
               (rule "concrete_or_2" (formula "20"))
               (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
               (rule "mul_literals" (formula "29") (term "0,0"))
               (rule "add_zero_left" (formula "29") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "29"))
               (rule "mul_literals" (formula "29") (term "1"))
               (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "22"))
               (rule "mul_literals" (formula "15") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0"))
               (rule "add_literals" (formula "15") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "15"))
               (rule "mul_literals" (formula "15") (term "1"))
               (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
               (rule "leq_literals" (formula "15") (term "0,0"))
               (rule "concrete_or_2" (formula "15") (term "0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
               (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
               (rule "add_literals" (formula "15") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
               (rule "add_literals" (formula "15") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "15") (term "1,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0"))
               (rule "leq_literals" (formula "15") (term "0"))
               (rule "concrete_or_2" (formula "15"))
               (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "15"))
               (rule "leq_literals" (formula "30") (term "0"))
               (rule "concrete_or_1" (formula "30"))
               (rule "true_left" (formula "30"))
               (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "23"))
               (rule "polySimp_rightDist" (formula "28") (term "0,0"))
               (rule "mul_literals" (formula "28") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "28") (term "0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
               (rule "add_literals" (formula "28") (term "0,0,0"))
               (rule "add_zero_left" (formula "28") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "28"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0"))
               (rule "polySimp_elimOne" (formula "28") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "28"))
               (rule "times_zero_1" (formula "26") (term "0,0"))
               (rule "add_zero_left" (formula "26") (term "0"))
               (rule "inEqSimp_subsumption6" (formula "26") (ifseqformula "15"))
               (rule "mul_literals" (formula "26") (term "1,1,0"))
               (rule "greater_literals" (formula "26") (term "0,0"))
               (rule "concrete_and_1" (formula "26") (term "0"))
               (rule "leq_literals" (formula "26") (term "0"))
               (rule "concrete_or_1" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "commute_or" (formula "34") (term "0,0,1,1,0"))
               (rule "commute_or_2" (formula "18") (term "0,0,1,0"))
               (rule "inEqSimp_or_weaken2" (formula "18") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "1,0,1,0,1,0"))
               (rule "add_literals" (formula "18") (term "0,1,0,1,0,1,0"))
               (rule "add_zero_left" (formula "18") (term "1,0,1,0,1,0"))
               (rule "eqClose" (formula "18") (term "0,1,0,1,0"))
               (rule "ifthenelse_true_for" (formula "18") (term "1,0,1,0"))
               (rule "commute_and" (formula "35") (term "1,0,0,0,1,1,0"))
               (rule "emptyModality" (formula "51") (term "1"))
               (rule "impRight" (formula "51"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "simplifyUpdate2" (formula "52"))
               (rule "notLeft" (formula "1"))
               (rule "applyOnRigidFormula" (formula "47"))
               (rule "applyOnPV" (formula "47") (term "0"))
               (rule "simplifyUpdate1" (formula "47") (term "1"))
               (rule "ifthenelse_concrete3" (formula "47"))
               (rule "boolean_not_equal_2" (formula "47") (term "1"))
               (rule "concrete_or_4" (formula "47"))
               (rule "inEqSimp_geqRight" (formula "47"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "jmod_axiom" (formula "1") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
               (rule "mul_literals" (formula "4") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "add_zero_left" (formula "4") (term "0"))
               (rule "replace_known_left" (formula "41") (term "0,0") (ifseqformula "4"))
               (rule "ifthenelse_true" (formula "41") (term "0"))
               (rule "eqSymm" (formula "41"))
               (rule "applyEqRigid" (formula "42") (term "1,1") (ifseqformula "41"))
               (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
               (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "4"))
               (rule "leq_literals" (formula "48") (term "0"))
               (rule "concrete_or_1" (formula "48"))
               (rule "true_left" (formula "48"))
               (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "3"))
               (rule "polySimp_rightDist" (formula "42") (term "0,0"))
               (rule "mul_literals" (formula "42") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "42") (term "0"))
               (rule "add_literals" (formula "42") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "42"))
               (rule "polySimp_mulLiterals" (formula "42") (term "0"))
               (rule "polySimp_elimOne" (formula "42") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "42") (term "0,0"))
               (rule "mul_literals" (formula "42") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "42") (term "0"))
               (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
               (rule "add_literals" (formula "42") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "42"))
               (rule "polySimp_mulLiterals" (formula "42") (term "0"))
               (rule "polySimp_elimOne" (formula "42") (term "0"))
               (rule "commute_and" (formula "37") (term "1,0,0,0,0,1,1,0"))
               (rule "commute_or" (formula "20") (term "0,0,1,0"))
               (rule "div_axiom" (formula "2") (term "1,0") (inst "quotient=quotient_1"))
               (rule "mul_literals" (formula "2") (term "1,1,1,1,1"))
               (rule "qeq_literals" (formula "2") (term "0,1,1"))
               (rule "ifthenelse_true_for" (formula "2") (term "1,1"))
               (rule "equal_literals" (formula "2") (term "0"))
               (rule "concrete_or_2" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "polySimp_addComm1" (formula "4") (term "1"))
               (rule "add_literals" (formula "4") (term "0,1"))
               (rule "inEqSimp_commuteLeq" (formula "3"))
               (rule "inEqSimp_homoInEq1" (formula "4"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "5") (term "0,1,2,0") (ifseqformula "2"))
               (rule "polySimp_addComm0" (formula "5") (term "2,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1"))
               (rule "polySimp_rightDist" (formula "4") (term "1"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
               (rule "mul_literals" (formula "4") (term "0,1"))
               (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "4"))
               (rule "mul_literals" (formula "15") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0"))
               (rule "add_literals" (formula "15") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "15"))
               (rule "mul_literals" (formula "15") (term "1"))
               (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(neglit(4(2(8(1(4(7(3(7(0(1(#))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "15") (term "0,0"))
               (rule "concrete_or_2" (formula "15") (term "0"))
               (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
               (rule "add_literals" (formula "15") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
               (rule "add_literals" (formula "15") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "15") (term "1,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0"))
               (rule "leq_literals" (formula "15") (term "0"))
               (rule "concrete_or_2" (formula "15"))
               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "14"))
               (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
               (rule "polySimp_addComm0" (formula "3") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
               (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "3") (term "0,0"))
               (rule "concrete_or_2" (formula "3") (term "0"))
               (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
               (rule "add_literals" (formula "3") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "3") (term "1,0,0"))
               (rule "add_zero_right" (formula "3") (term "0,0"))
               (rule "qeq_literals" (formula "3") (term "0"))
               (rule "concrete_or_2" (formula "3"))
               (rule "methodCallReturn" (formula "58") (term "1"))
               (rule "assignment" (formula "58") (term "1"))
               (rule "sequentialToParallel2" (formula "58"))
               (rule "simplifyUpdate2" (formula "58"))
               (rule "simplifyUpdate3" (formula "58") (term "1,0"))
               (rule "applyOnElementary" (formula "58") (term "1,0"))
               (rule "applyOnPV" (formula "58") (term "0,1,0"))
               (rule "all_pull_out3" (formula "41") (term "1,0"))
               (rule "shift_paren_or" (formula "41") (term "0,1,0"))
               (rule "shift_paren_or" (formula "41") (term "0,0,1,0"))
               (rule "commute_or_2" (formula "41") (term "0,0,0,1,0"))
               (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,1,1,0"))
               (rule "methodCallEmpty" (formula "58") (term "1"))
               (rule "div_axiom" (formula "46") (term "1") (inst "quotient=quotient_2"))
               (rule "equal_literals" (formula "46") (term "0"))
               (rule "concrete_or_2" (formula "46"))
               (rule "qeq_literals" (formula "46") (term "0,1"))
               (rule "ifthenelse_true_for" (formula "46") (term "1"))
               (rule "mul_literals" (formula "46") (term "1,1,1"))
               (rule "andLeft" (formula "46"))
               (rule "andLeft" (formula "46"))
               (rule "polySimp_addComm1" (formula "48") (term "1"))
               (rule "add_literals" (formula "48") (term "0,1"))
               (rule "inEqSimp_commuteLeq" (formula "47"))
               (rule "inEqSimp_homoInEq1" (formula "48"))
               (rule "polySimp_mulLiterals" (formula "48") (term "1,0"))
               (rule "polySimp_addComm1" (formula "48") (term "0"))
               (rule "applyEq" (formula "50") (term "0") (ifseqformula "46"))
               (rule "inEqSimp_homoInEq0" (formula "50"))
               (rule "polySimp_addComm1" (formula "50") (term "0"))
               (rule "applyEq" (formula "51") (term "1,1") (ifseqformula "46"))
               (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
               (rule "applyEqRigid" (formula "49") (term "1") (ifseqformula "46"))
               (rule "inEqSimp_sepPosMonomial0" (formula "48"))
               (rule "polySimp_mulComm0" (formula "48") (term "1"))
               (rule "polySimp_rightDist" (formula "48") (term "1"))
               (rule "mul_literals" (formula "48") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "50"))
               (rule "polySimp_mulComm0" (formula "50") (term "1"))
               (rule "polySimp_rightDist" (formula "50") (term "1"))
               (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
               (rule "mul_literals" (formula "50") (term "0,1"))
               (rule "polySimp_elimOne" (formula "50") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "48"))
               (rule "polySimp_rightDist" (formula "54") (term "0,0"))
               (rule "mul_literals" (formula "54") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "54") (term "0"))
               (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
               (rule "add_literals" (formula "54") (term "0,0,0"))
               (rule "add_zero_left" (formula "54") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "54"))
               (rule "polySimp_mulLiterals" (formula "54") (term "0"))
               (rule "polySimp_elimOne" (formula "54") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "7"))
               (rule "polySimp_rightDist" (formula "51") (term "0,0"))
               (rule "mul_literals" (formula "51") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "51") (term "0"))
               (rule "add_literals" (formula "51") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "51"))
               (rule "polySimp_mulLiterals" (formula "51") (term "0"))
               (rule "polySimp_elimOne" (formula "51") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "57"))
               (rule "polySimp_mulAssoc" (formula "47") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "47") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "47") (term "0,0"))
               (rule "polySimp_addComm0" (formula "47") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "47"))
               (rule "polySimp_mulLiterals" (formula "47") (term "0"))
               (rule "inEqSimp_subsumption4" (formula "47") (ifseqformula "45"))
               (rule "greater_literals" (formula "47") (term "0,0"))
               (rule "concrete_and_1" (formula "47") (term "0"))
               (rule "mul_literals" (formula "47") (term "0,0"))
               (rule "leq_literals" (formula "47") (term "0"))
               (rule "concrete_or_1" (formula "47"))
               (rule "true_left" (formula "47"))
               (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "57"))
               (rule "polySimp_rightDist" (formula "50") (term "0,0"))
               (rule "mul_literals" (formula "50") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "50") (term "0"))
               (rule "add_literals" (formula "50") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "50"))
               (rule "polySimp_mulLiterals" (formula "50") (term "0"))
               (rule "polySimp_elimOne" (formula "50") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "50") (ifseqformula "45"))
               (rule "leq_literals" (formula "50") (term "0"))
               (rule "concrete_or_1" (formula "50"))
               (rule "true_left" (formula "50"))
               (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "48"))
               (rule "polySimp_rightDist" (formula "50") (term "0,0"))
               (rule "mul_literals" (formula "50") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "50") (term "0"))
               (rule "polySimp_addComm1" (formula "50") (term "0,0"))
               (rule "add_literals" (formula "50") (term "0,0,0"))
               (rule "add_zero_left" (formula "50") (term "0,0"))
               (rule "polySimp_pullOutFactor0" (formula "50") (term "0"))
               (rule "add_literals" (formula "50") (term "1,0"))
               (rule "polySimp_elimOne" (formula "50") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "52") (term "0,0"))
               (rule "mul_literals" (formula "52") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "52") (term "0"))
               (rule "polySimp_addComm1" (formula "52") (term "0,0"))
               (rule "add_literals" (formula "52") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "52"))
               (rule "polySimp_mulComm0" (formula "52") (term "1"))
               (rule "polySimp_rightDist" (formula "52") (term "1"))
               (rule "mul_literals" (formula "52") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "52") (term "1,1"))
               (rule "polySimp_elimOne" (formula "52") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "48"))
               (rule "times_zero_1" (formula "8") (term "0,0"))
               (rule "add_zero_left" (formula "8") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "8"))
               (rule "mul_literals" (formula "8") (term "1"))
               (rule "inEqSimp_subsumption6" (formula "8") (ifseqformula "51"))
               (rule "times_zero_1" (formula "8") (term "1,1,0"))
               (rule "greater_literals" (formula "8") (term "0,0"))
               (rule "concrete_and_1" (formula "8") (term "0"))
               (rule "leq_literals" (formula "8") (term "0"))
               (rule "concrete_or_1" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "55"))
               (rule "times_zero_1" (formula "53") (term "0,0"))
               (rule "add_zero_left" (formula "53") (term "0"))
               (rule "inEqSimp_subsumption6" (formula "53") (ifseqformula "50"))
               (rule "greater_literals" (formula "53") (term "0,0"))
               (rule "concrete_and_1" (formula "53") (term "0"))
               (rule "times_zero_1" (formula "53") (term "1,0"))
               (rule "leq_literals" (formula "53") (term "0"))
               (rule "concrete_or_1" (formula "53"))
               (rule "true_left" (formula "53"))
               (rule "tryEmpty" (formula "63") (term "1"))
               (rule "all_pull_out3" (formula "25") (term "0"))
               (rule "commute_or" (formula "42") (term "0,0,0,0,0,1,1,0"))
               (rule "shift_paren_or" (formula "25") (term "0,0"))
               (rule "shift_paren_or" (formula "25") (term "0,0,0"))
               (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
               (rule "cnf_rightDist" (formula "42") (term "1,0,0,0,0,1,1,0"))
               (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
               (rule "all_pull_out3" (formula "41") (term "0"))
               (rule "shift_paren_or" (formula "41") (term "0,0"))
               (rule "shift_paren_or" (formula "41") (term "0,0,0"))
               (rule "shift_paren_or" (formula "41") (term "0,0,0,0"))
               (rule "commute_or_2" (formula "41") (term "0,0,0,0,0"))
               (rule "commute_or" (formula "41") (term "0,0,0,0,0,0"))
               (rule "allLeft" (formula "24") (inst "t=i_1"))
               (rule "replace_known_left" (formula "24") (term "0,0,0,0") (ifseqformula "41"))
               (rule "concrete_not_1" (formula "24") (term "0,0,0"))
               (rule "concrete_or_2" (formula "24") (term "0,0"))
               (rule "inEqSimp_contradInEq0" (formula "24") (term "1") (ifseqformula "40"))
               (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
               (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
               (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "24") (term "0,0,1"))
               (rule "leq_literals" (formula "24") (term "0,1"))
               (rule "concrete_and_2" (formula "24") (term "1"))
               (rule "concrete_or_4" (formula "24"))
               (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "39"))
               (rule "qeq_literals" (formula "24") (term "0,1"))
               (rule "concrete_and_2" (formula "24") (term "1"))
               (rule "concrete_or_4" (formula "24"))
               (rule "emptyModality" (formula "64") (term "1"))
               (rule "applyOnRigidFormula" (formula "64"))
               (rule "simplifyUpdate2" (formula "64") (term "1"))
               (rule "simplifyUpdate2" (formula "64") (term "0"))
               (rule "applyOnRigidFormula" (formula "64") (term "1"))
               (rule "applyOnRigidFormula" (formula "64") (term "0"))
               (rule "simplifyUpdate2" (formula "64") (term "1,0"))
               (rule "simplifyUpdate2" (formula "64") (term "0,0"))
               (rule "applyOnRigidFormula" (formula "64") (term "0,1"))
               (rule "applyOnRigidFormula" (formula "64") (term "1,0"))
               (rule "applyOnPV" (formula "64") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "64") (term "1,1,0"))
               (rule "eqClose" (formula "64") (term "1,0"))
               (rule "concrete_and_3" (formula "64") (term "0"))
               (rule "applyOnRigidFormula" (formula "64") (term "0,0,1"))
               (rule "simplifyUpdate2" (formula "64") (term "0,0,0,1"))
               (rule "applyOnRigidFormula" (formula "64") (term "0"))
               (rule "simplifyUpdate2" (formula "64") (term "1,0"))
               (rule "simplifyUpdate2" (formula "64") (term "0,0"))
               (rule "applyOnRigidFormula" (formula "64") (term "1,0,0,1"))
               (rule "simplifyUpdate1" (formula "64") (term "1,1,0,0,1"))
               (rule "simplifyUpdate1" (formula "64") (term "0,1,0,0,1"))
               (rule "applyOnRigidFormula" (formula "64") (term "0,0,0,1"))
               (rule "simplifyUpdate2" (formula "64") (term "0,0,0,0,1"))
               (rule "applyOnRigidFormula" (formula "64") (term "1,0"))
               (rule "simplifyUpdate1" (formula "64") (term "1,1,0"))
               (rule "applyOnPV" (formula "64") (term "0,1,0"))
               (rule "applyOnRigidFormula" (formula "64") (term "0,0"))
               (rule "applyOnRigidTerm" (formula "64") (term "1,1,0,0,1"))
               (rule "simplifyUpdate1" (formula "64") (term "2,1,1,0,0,1"))
               (rule "applyOnPV" (formula "64") (term "0,1,1,0,0,1"))
               (rule "simplifyUpdate1" (formula "64") (term "1,1,1,0,0,1"))
               (rule "eqSymm" (formula "64") (term "1,0,0,1"))
               (rule "applyOnRigidFormula" (formula "64") (term "1,0,0,0,1"))
               (rule "applyOnRigidFormula" (formula "64") (term "0,0,0"))
               (rule "applyOnRigidTerm" (formula "64") (term "1,1,0,0,1"))
               (rule "applyOnPV" (formula "64") (term "0,1,1,0,0,1"))
               (rule "simplifyUpdate1" (formula "64") (term "2,1,1,0,0,1"))
               (rule "simplifyUpdate1" (formula "64") (term "1,1,1,0,0,1"))
               (rule "applyOnRigidFormula" (formula "64") (term "0,1,0,0,0,1"))
               (rule "simplifyUpdate1" (formula "64") (term "1,0,1,0,0,0,1"))
               (rule "applyOnRigidFormula" (formula "64") (term "1,0,0,0"))
               (rule "simplifyUpdate1" (formula "64") (term "0,1,0,0,0"))
               (rule "applyOnPV" (formula "64") (term "1,1,0,0,0"))
               (rule "applyOnRigidFormula" (formula "64") (term "0,0,0,0"))
               (rule "simplifyUpdate2" (formula "64") (term "0,0,0,0,0"))
               (rule "applyOnRigidTerm" (formula "64") (term "0,0,1,0,0,0,1"))
               (rule "applyOnPV" (formula "64") (term "0,0,0,1,0,0,0,1"))
               (rule "simplifyUpdate1" (formula "64") (term "2,0,0,1,0,0,0,1"))
               (rule "simplifyUpdate1" (formula "64") (term "1,0,0,1,0,0,0,1"))
               (rule "applyOnRigidFormula" (formula "64") (term "1,0,0,0,0"))
               (rule "simplifyUpdate1" (formula "64") (term "0,1,0,0,0,0"))
               (rule "applyOnRigidTerm" (formula "64") (term "1,1,0,0,0,0"))
               (rule "applyOnPV" (formula "64") (term "1,1,1,0,0,0,0"))
               (rule "simplifyUpdate1" (formula "64") (term "0,1,1,0,0,0,0"))
               (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "44") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "14"))
               (rule "insert_constant_value" (formula "44") (term "1,1,0,0,0,0,0"))
               (rule "insert_constant_value" (formula "44") (term "0,0,1,1,0,0,0,0,0,0,0,0"))
               (rule "insert_constant_value" (formula "44") (term "0,0,1,0,1,0,0,0,0,0,0,0,0"))
               (rule "insert_constant_value" (formula "44") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "eqClose" (formula "44") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "concrete_and_3" (formula "44") (term "0,0,1,0,0,0,0,0,0,0,0"))
               (rule "insert_constant_value" (formula "44") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "eqClose" (formula "44") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "concrete_and_3" (formula "44") (term "0,0,1,0,0,0,0,0,0,0,0"))
               (rule "insert_constant_value" (formula "44") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "eqClose" (formula "44") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "concrete_and_3" (formula "44") (term "0,0,1,0,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "44") (term "0,1,0,1,0,0,0,0,0,0,0,0"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "46"))
               (rule "notLeft" (formula "45"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "46"))
               (rule "notLeft" (formula "45"))
               (rule "notLeft" (formula "45"))
               (rule "exLeft" (formula "52") (inst "sk=i_1_0"))
               (rule "andLeft" (formula "52"))
               (rule "andLeft" (formula "52"))
               (rule "exLeft" (formula "51") (inst "sk=i_2_0"))
               (rule "andLeft" (formula "51"))
               (rule "andLeft" (formula "51"))
               (rule "eqSymm" (formula "50"))
               (rule "eqSymm" (formula "48") (term "1,1,0,1,0"))
               (rule "eqSymm" (formula "48") (term "1,0,1,0,1,0"))
               (rule "eqSymm" (formula "53"))
               (rule "polySimp_mulComm0" (formula "58") (term "0,2,0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "58") (term "1,1,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "58") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "58") (term "0,2,1,1,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "58") (term "0,2,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "58") (term "0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "58") (term "0,1,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "58") (term "0,2,0,0,1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "58") (term "1,0,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "57") (term "0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "57") (term "0,2,1,1,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "57") (term "0,2,0,0,1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "57") (term "0,2,0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "57") (term "0,2,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "48") (term "0,2,0,0,0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "56") (term "0,2,0"))
               (rule "polySimp_mulComm0" (formula "50") (term "0,2,0,0,0,2,0"))
               (rule "polySimp_mulComm0" (formula "48") (term "0,2,1,1,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "48") (term "0,2,0,1,0,1,0,1,0"))
               (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "49"))
               (rule "mul_literals" (formula "49") (term "1,0,0"))
               (rule "add_literals" (formula "49") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "55"))
               (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "55") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "52"))
               (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "52") (term "0"))
               (rule "ifthenelse_negated" (formula "50") (term "2,0"))
               (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "58") (term "0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "58") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_mulAssoc" (formula "58") (term "1,0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "58") (term "0,1,0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,1,1,0,0,1,1,0"))
               (rule "inEqSimp_gtToGeq" (formula "57") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "57") (term "0,1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0"))
               (rule "inEqSimp_commuteGeq" (formula "46"))
               (rule "inEqSimp_commuteLeq" (formula "45"))
               (rule "inEqSimp_commuteLeq" (formula "54"))
               (rule "inEqSimp_commuteLeq" (formula "51"))
               (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0,0,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "58") (term "0,1,0,0,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,1,1,0"))
               (rule "applyEq" (formula "53") (term "0") (ifseqformula "38"))
               (rule "eqSymm" (formula "53"))
               (rule "applyEq" (formula "57") (term "2,0,1,0,0,0,1,1,0") (ifseqformula "38"))
               (rule "applyEq" (formula "58") (term "2,1,0,0,0,0,1,1,0") (ifseqformula "38"))
               (rule "applyEq" (formula "55") (term "0,0,1,0") (ifseqformula "38"))
               (rule "applyEq" (formula "46") (term "0") (ifseqformula "38"))
               (rule "applyEq" (formula "57") (term "2,0,1,0,1,0,1,0") (ifseqformula "38"))
               (rule "applyEq" (formula "45") (term "0") (ifseqformula "38"))
               (rule "applyEq" (formula "51") (term "0,1,0") (ifseqformula "38"))
               (rule "applyEq" (formula "49") (term "0,1,0") (ifseqformula "38"))
               (rule "applyEq" (formula "57") (term "2,0,1,0,1,0,1,0") (ifseqformula "38"))
               (rule "applyEq" (formula "56") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
               (rule "applyEq" (formula "46") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
               (rule "applyEq" (formula "57") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
               (rule "applyEq" (formula "47") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "38"))
               (rule "applyEq" (formula "47") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
               (rule "applyEq" (formula "57") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "38"))
               (rule "applyEq" (formula "54") (term "0,1,0") (ifseqformula "32"))
               (rule "polySimp_addComm1" (formula "54") (term "0"))
               (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "32"))
               (rule "applyEq" (formula "55") (term "0,1,0,0,1,0,0") (ifseqformula "32"))
               (rule "applyEq" (formula "47") (term "0,1,0,0,1,0,0") (ifseqformula "32"))
               (rule "applyEqRigid" (formula "56") (term "0,1,0,0,1,0,0") (ifseqformula "32"))
               (rule "applyEq" (formula "46") (term "0,1,0,0,1,0,0") (ifseqformula "32"))
               (rule "applyEqRigid" (formula "47") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "32"))
               (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "55") (term "0,1,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "48"))
               (rule "mul_literals" (formula "48") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "55") (term "1,1,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "55") (term "1,1,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "55") (term "0,1,1,1,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "54") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "54") (term "0,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "49"))
               (rule "polySimp_mulLiterals" (formula "49") (term "0"))
               (rule "polySimp_elimOne" (formula "49") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "55") (term "0,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "52"))
               (rule "polySimp_mulComm0" (formula "52") (term "1"))
               (rule "polySimp_rightDist" (formula "52") (term "1"))
               (rule "mul_literals" (formula "52") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "52") (term "1,1"))
               (rule "polySimp_elimOne" (formula "52") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "54") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "47") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "55") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "46") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "47") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_subsumption0" (formula "45") (ifseqformula "19"))
               (rule "leq_literals" (formula "45") (term "0"))
               (rule "concrete_or_1" (formula "45"))
               (rule "true_left" (formula "45"))
               (rule "nonNull" (formula "44") (inst "i=i"))
               (rule "sub_literals" (formula "44") (term "2,1,0,1,1"))
               (rule "nonNullZero" (formula "44") (term "1,0,1,1"))
               (rule "greater_literals" (formula "44") (term "0,1"))
               (rule "concrete_impl_1" (formula "44") (term "1"))
               (rule "andLeft" (formula "44"))
               (rule "notLeft" (formula "44"))
               (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
               (rule "applyEq" (formula "44") (term "0,1,0,0,1,0,0") (ifseqformula "38"))
               (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "44") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0"))
               (rule "elimGcdLeq" (formula "54") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
               (rule "mul_literals" (formula "54") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,0,1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
               (rule "sub_literals" (formula "54") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,1,0,1,1,0,0,1,1,0"))
               (rule "add_literals" (formula "54") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "54") (term "1,0,1,0,1,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "54") (term "0,1,0,1,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0,0,1,1,0,0,1,1,0"))
               (rule "add_literals" (formula "54") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "54") (term "1,0,0,0,1,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "54") (term "0,0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "54") (term "0,0,1,0,1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "54") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "54") (term "0,1,0,1,1,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "54") (term "0,0,1,0,1,1,0,0,1,1,0"))
               (rule "add_literals" (formula "54") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,1,0,1,1,0,0,1,1,0"))
               (rule "add_literals" (formula "54") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "54") (term "1,0,1,0,1,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "54") (term "0,1,0,1,1,0,0,1,1,0"))
               (rule "qeq_literals" (formula "54") (term "1,0,1,1,0,0,1,1,0"))
               (rule "concrete_and_3" (formula "54") (term "0,1,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,1,1,0,0,1,1,0"))
               (rule "add_literals" (formula "54") (term "0,0,0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "54") (term "0,0,0,1,1,0,0,1,1,0"))
               (rule "add_literals" (formula "54") (term "0,0,0,0,1,1,0,0,1,1,0"))
               (rule "add_zero_left" (formula "54") (term "0,0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "54") (term "0,0,1,1,0,0,1,1,0"))
               (rule "add_literals" (formula "54") (term "1,0,0,1,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "54") (term "0,0,1,1,0,0,1,1,0"))
               (rule "leq_literals" (formula "54") (term "0,1,1,0,0,1,1,0"))
               (rule "ifthenelse_true_for" (formula "54") (term "1,1,0,0,1,1,0"))
               (rule "elimGcdGeq" (formula "54") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,0,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
               (rule "sub_literals" (formula "54") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0,0,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "54") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "54") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "54") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addLiterals" (formula "54") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
               (rule "add_zero_left" (formula "54") (term "0,0,1,0,0,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "54") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "54") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "54") (term "1,0,1,0,0,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "54") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "leq_literals" (formula "54") (term "1,0,0,1,0,0,1,1,0"))
               (rule "concrete_and_3" (formula "54") (term "0,0,1,0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "54") (term "1,1,0,0,0,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "54") (term "1,0,0,0,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "54") (term "0,0,0,1,0,0,1,1,0"))
               (rule "qeq_literals" (formula "54") (term "0,0,1,0,0,1,1,0"))
               (rule "ifthenelse_true_for" (formula "54") (term "0,1,0,0,1,1,0"))
               (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "51"))
               (rule "times_zero_1" (formula "50") (term "0,0"))
               (rule "add_zero_left" (formula "50") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "50"))
               (rule "mul_literals" (formula "50") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "22"))
               (rule "leq_literals" (formula "50") (term "0"))
               (rule "concrete_or_1" (formula "50"))
               (rule "true_left" (formula "50"))
               (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "19"))
               (rule "polySimp_rightDist" (formula "48") (term "0,0"))
               (rule "mul_literals" (formula "48") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "48") (term "0"))
               (rule "add_literals" (formula "48") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "48"))
               (rule "polySimp_mulLiterals" (formula "48") (term "0"))
               (rule "polySimp_elimOne" (formula "48") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "31"))
               (rule "polySimp_rightDist" (formula "49") (term "0,0"))
               (rule "mul_literals" (formula "49") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "49") (term "0"))
               (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
               (rule "add_literals" (formula "49") (term "0,0,0"))
               (rule "add_zero_left" (formula "49") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "49"))
               (rule "polySimp_mulLiterals" (formula "49") (term "0"))
               (rule "polySimp_elimOne" (formula "49") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "49"))
               (rule "times_zero_1" (formula "47") (term "0,0"))
               (rule "add_zero_left" (formula "47") (term "0"))
               (rule "inEqSimp_subsumption6" (formula "47") (ifseqformula "22"))
               (rule "greater_literals" (formula "47") (term "0,0"))
               (rule "concrete_and_1" (formula "47") (term "0"))
               (rule "mul_literals" (formula "47") (term "1,0"))
               (rule "leq_literals" (formula "47") (term "0"))
               (rule "concrete_or_1" (formula "47"))
               (rule "true_left" (formula "47"))
               (rule "nnf_imp2or" (formula "45") (term "1,0"))
               (rule "nnf_imp2or" (formula "46") (term "1,0,1,0"))
               (rule "nnf_imp2or" (formula "55") (term "1,0"))
               (rule "nnf_imp2or" (formula "44") (term "0"))
               (rule "nnf_imp2or" (formula "56") (term "0"))
               (rule "nnf_imp2or" (formula "45") (term "0"))
               (rule "nnf_imp2or" (formula "46") (term "0"))
               (rule "nnf_imp2or" (formula "55") (term "0"))
               (rule "nnf_notAnd" (formula "44") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "44") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0"))
               (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "44") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
               (rule "mul_literals" (formula "44") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "56") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "56") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "56") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "56") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "56") (term "0,0,0"))
               (rule "times_zero_1" (formula "56") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "56") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
               (rule "mul_literals" (formula "56") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "56") (term "1,0"))
               (rule "nnf_notAnd" (formula "45") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "45") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "45") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0"))
               (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "45") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
               (rule "mul_literals" (formula "45") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "46") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0"))
               (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "46") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
               (rule "mul_literals" (formula "46") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "46") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "46") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "55") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "55") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "55") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "55") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "55") (term "0,0,0"))
               (rule "times_zero_1" (formula "55") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "55") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
               (rule "mul_literals" (formula "55") (term "1,0,0,0"))
               (rule "commute_or" (formula "43") (term "1,1,0,0,0,0,1,1,0"))
               (rule "commute_or" (formula "43") (term "0,1,0,0,0,0,1,1,0"))
               (rule "nnf_imp2or" (formula "46") (term "0,1,0"))
               (rule "nnf_notAnd" (formula "55") (term "0,1,0"))
               (rule "double_not" (formula "55") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "55") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,1,0,1,0"))
               (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,1,0"))
               (rule "add_literals" (formula "55") (term "0,0,0,1,0,1,0"))
               (rule "add_zero_left" (formula "55") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,1,0"))
               (rule "nnf_imp2or" (formula "55") (term "0,1,1,0"))
               (rule "cnf_rightDist" (formula "43") (term "0,0,0,0,0,1,1,0"))
               (rule "eq_or" (formula "43") (term "0,0,0,0,0,0,1,1,0"))
               (rule "nnf_notAnd" (formula "56") (term "0,1,0"))
               (rule "double_not" (formula "56") (term "0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "56") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,1,0,1,0"))
               (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,1,0"))
               (rule "add_literals" (formula "56") (term "0,0,0,1,0,1,0"))
               (rule "add_zero_left" (formula "56") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,1,0"))
               (rule "nnf_imp2or" (formula "56") (term "0,1,1,0"))
               (rule "nnf_notAnd" (formula "46") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "46") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,1,0"))
               (rule "ifthenelse_split" (formula "6") (term "0"))
               (branch "expectedMaxSize >= 0 TRUE"
                  (rule "eqSymm" (formula "7"))
                  (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "7"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "applyEq" (formula "8") (term "1,0,0") (ifseqformula "7"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                  (rule "applyEq" (formula "66") (term "1,0,0") (ifseqformula "7"))
                  (rule "polySimp_addComm1" (formula "66") (term "0,0"))
                  (rule "applyEq" (formula "10") (term "1,0,0") (ifseqformula "7"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                  (rule "mod_axiom" (formula "1") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                  (rule "mod_axiom" (formula "8") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0"))
                  (rule "mul_literals" (formula "8") (term "0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0,0"))
                  (rule "mod_axiom" (formula "66") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "66"))
                  (rule "polySimp_mulComm0" (formula "66") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "66") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "66") (term "0,1,0"))
                  (rule "polySimp_rightDist" (formula "66") (term "0,0,1,0"))
                  (rule "mul_literals" (formula "66") (term "0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "66") (term "0"))
                  (rule "polySimp_addAssoc" (formula "66") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "66") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "66") (term "0,0,0,0"))
                  (rule "add_literals" (formula "66") (term "0,0,0,0,0"))
                  (rule "mod_axiom" (formula "10") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "10"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0"))
                  (rule "mul_literals" (formula "10") (term "0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "10") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                  (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
                  (rule "mul_literals" (formula "8") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "66"))
                  (rule "polySimp_mulComm0" (formula "66") (term "1"))
                  (rule "polySimp_rightDist" (formula "66") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "66") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "66") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "66") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "66") (term "0,0,1"))
                  (rule "mul_literals" (formula "66") (term "0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1"))
                  (rule "polySimp_rightDist" (formula "10") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                  (rule "polySimp_mulAssoc" (formula "10") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "10") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "10") (term "0,1"))
                  (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "6"))
                  (rule "leq_literals" (formula "18") (term "0"))
                  (rule "concrete_or_1" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "71"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                  (rule "mul_literals" (formula "1") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                  (rule "inEqSimp_subsumption5" (formula "1") (ifseqformula "9"))
                  (rule "eq_and" (formula "1") (term "0,0"))
                  (rule "greater_literals" (formula "1") (term "0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                  (rule "concrete_or_1" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "inEqSimp_exactShadow0" (formula "8") (ifseqformula "65"))
                  (rule "eq_and" (formula "8") (term "0"))
                  (rule "greater_literals" (formula "8") (term "0"))
                  (rule "concrete_impl_1" (formula "8"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0"))
                  (rule "mul_literals" (formula "8") (term "0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                  (rule "add_literals" (formula "8") (term "1,1,0"))
                  (rule "times_zero_1" (formula "8") (term "1,0"))
                  (rule "add_zero_right" (formula "8") (term "0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                  (rule "add_literals" (formula "8") (term "1,1,0"))
                  (rule "times_zero_1" (formula "8") (term "1,0"))
                  (rule "add_zero_right" (formula "8") (term "0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "add_literals" (formula "8") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                  (rule "inEqSimp_subsumption4" (formula "8") (ifseqformula "59"))
                  (rule "mul_literals" (formula "8") (term "0,1,0"))
                  (rule "greater_literals" (formula "8") (term "0,0"))
                  (rule "concrete_and_1" (formula "8") (term "0"))
                  (rule "leq_literals" (formula "8") (term "0"))
                  (rule "concrete_or_1" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "61"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,1"))
                  (rule "mul_literals" (formula "1") (term "0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                  (rule "times_zero_1" (formula "7") (term "0,0"))
                  (rule "add_zero_left" (formula "7") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "mul_literals" (formula "7") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "7") (term "0,0"))
                  (rule "concrete_or_2" (formula "7") (term "0"))
                  (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                  (rule "add_literals" (formula "7") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0"))
                  (rule "leq_literals" (formula "7") (term "0"))
                  (rule "concrete_or_2" (formula "7"))
                  (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "7"))
                  (rule "leq_literals" (formula "19") (term "0"))
                  (rule "concrete_or_1" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "inEqSimp_exactShadow0" (formula "1") (ifseqformula "66"))
                  (rule "eq_and" (formula "1") (term "0"))
                  (rule "greater_literals" (formula "1") (term "0"))
                  (rule "concrete_impl_1" (formula "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "polySimp_pullOutFactor0" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,0"))
                  (rule "inEqSimp_subsumption6" (formula "1") (ifseqformula "65"))
                  (rule "times_zero_1" (formula "1") (term "1,1,0"))
                  (rule "greater_literals" (formula "1") (term "0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0"))
                  (rule "leq_literals" (formula "1") (term "0"))
                  (rule "concrete_or_1" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "inEqSimp_exactShadow0" (formula "1") (ifseqformula "12"))
                  (rule "eq_and" (formula "1") (term "0"))
                  (rule "greater_literals" (formula "1") (term "0"))
                  (rule "concrete_impl_1" (formula "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "1") (ifseqformula "65"))
                  (rule "times_zero_1" (formula "1") (term "1,1,0"))
                  (rule "greater_literals" (formula "1") (term "0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0"))
                  (rule "leq_literals" (formula "1") (term "0"))
                  (rule "concrete_or_1" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "nnf_notAnd" (formula "47") (term "0,1,0,1,0"))
                  (rule "double_not" (formula "47") (term "0,0,1,0,1,0"))
                  (rule "nnf_notAnd" (formula "56") (term "0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "56") (term "0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_notLeq" (formula "56") (term "1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,1,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "56") (term "0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,1,1,0"))
                  (rule "nnf_notOr" (formula "57") (term "0,0,1,1,0"))
                  (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "77") (term "1,0") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "17"))
                  (rule "insert_constant_value" (formula "77") (term "1,1,0,0,0,0,0,1,0"))
                  (rule "insert_constant_value" (formula "77") (term "0,0,1,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "insert_constant_value" (formula "77") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "insert_constant_value" (formula "77") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "eqClose" (formula "77") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "concrete_and_3" (formula "77") (term "0,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "insert_constant_value" (formula "77") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "eqClose" (formula "77") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "concrete_and_3" (formula "77") (term "0,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "insert_constant_value" (formula "77") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "eqClose" (formula "77") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "concrete_and_3" (formula "77") (term "0,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "eqSymm" (formula "77") (term "1,0,1,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "eqSymm" (formula "77") (term "1,1,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "eqSymm" (formula "77") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,0,0,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,1,0,0,0,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,0,0,0,0,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,1,1,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,0,0,1,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,0,0,1,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,1,0,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,1,0,0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,1,1,1,0,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,1,0,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,0,1,0,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,0,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,1,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,0,0,0,2,0,1,0,0,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "77") (term "0,2,0,1,1,0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "1,0,0,1,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "77") (term "0,0,1,0,0,0,0,0,1,0"))
                  (rule "ifthenelse_negated" (formula "77") (term "2,0,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "77") (term "1,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "77") (term "0,1,0,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,1,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "77") (term "0,1,0,1,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulAssoc" (formula "77") (term "1,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,1,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,0,1,0"))
                  (rule "inEqSimp_commuteGeq" (formula "77") (term "1,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "1,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,1,0,1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,1,0,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,0,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,1,0,1,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,1,0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "1,1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "77") (term "1,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "0,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "0,1,0,1,0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,0,1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "77") (term "1,0,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "0,1,0,1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "0,1,0,1,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,1,0,0,1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,1,0,0,1,1,0,1,1,0"))
                  (rule "elimGcdLeq" (formula "77") (term "1,1,0,0,1,1,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "sub_literals" (formula "77") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_literals" (formula "77") (term "1,1,0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "times_zero_1" (formula "77") (term "1,0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "77") (term "0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_literals" (formula "77") (term "1,1,0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "times_zero_1" (formula "77") (term "1,0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "77") (term "0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "0,0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,0,0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,0,0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "77") (term "0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "77") (term "0,0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_literals" (formula "77") (term "0,0,0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_literals" (formula "77") (term "1,1,0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "times_zero_1" (formula "77") (term "1,0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "77") (term "0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "qeq_literals" (formula "77") (term "1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "concrete_and_3" (formula "77") (term "0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_literals" (formula "77") (term "0,0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "77") (term "0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_literals" (formula "77") (term "0,0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_zero_left" (formula "77") (term "0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0" (formula "77") (term "0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_literals" (formula "77") (term "1,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "times_zero_1" (formula "77") (term "0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "leq_literals" (formula "77") (term "0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "ifthenelse_true_for" (formula "77") (term "1,1,0,0,1,1,0,1,1,0"))
                  (rule "elimGcdGeq" (formula "77") (term "0,1,0,0,1,1,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "77") (term "0,0,0,1,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "sub_literals" (formula "77") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "times_zero_1" (formula "77") (term "0,0,0,1,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "times_zero_1" (formula "77") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "add_zero_left" (formula "77") (term "0,0,1,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "77") (term "0,0,0,0,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "77") (term "0,0,0,0,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0" (formula "77") (term "0,1,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "add_literals" (formula "77") (term "1,0,1,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "times_zero_1" (formula "77") (term "0,1,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "leq_literals" (formula "77") (term "1,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "concrete_and_3" (formula "77") (term "0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "add_literals" (formula "77") (term "1,1,0,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "times_zero_1" (formula "77") (term "1,0,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "77") (term "0,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "qeq_literals" (formula "77") (term "0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "ifthenelse_true_for" (formula "77") (term "0,1,0,0,1,1,0,1,1,0"))
                  (rule "nonNull" (formula "77") (term "0,0,0,0,0,0,0,0,0,0,0,1,0") (inst "i=i"))
                  (rule "greater_literals" (formula "77") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "concrete_impl_1" (formula "77") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "sub_literals" (formula "77") (term "2,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "nonNullZero" (formula "77") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "pullOutSelect" (formula "77") (term "1,0,0,1,0,1,1,0,1,0,1,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_table_0"))
                  (rule "applyEq" (formula "78") (term "1,1,0,1,0,0,0,1,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,0,1,0,1,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,0,0,0,0,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,1,0,1,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,1,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,0,0,2,0,1,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,2,0,1,0,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,0,0,1,0,1,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,1,1,0,0,0,0,1,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,2,1,0,0,0,0,1,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,1,1,1,0,0,1,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,1,0,1,0,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,1,1,0,1,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,1,0,1,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,1,1,1,0,0,0,1,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,2,0,1,0,0,0,1,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,1,1,1,0,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,0,0,0,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,1,1,1,0,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,2,0,1,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,1,1,1,0,0,1,0,0,1,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                  (rule "elementOfAllLocs" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                  (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "1") (term "0,0"))
                  (rule "ifthenelse_true" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,0,1,0,1,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,1,0,1,0,0,0,1,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,1,0,1,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,0,0,0,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,0,1,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,0,2,0,1,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,2,0,1,0,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,0,1,0,1,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,1,1,0,0,0,0,1,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,2,1,0,0,0,0,1,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,1,1,1,0,0,1,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,1,0,1,0,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,1,1,0,1,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,1,0,1,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,1,1,1,0,0,0,1,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,2,0,1,0,0,0,1,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,1,1,0,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,0,0,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,1,1,0,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,2,0,1,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,1,1,0,0,1,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "77") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,1,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_NULL_KEY_0"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                  (rule "elementOfAllLocs" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                  (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "1") (term "0,0"))
                  (rule "ifthenelse_true" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "77") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_entrySet_0"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                  (rule "elementOfAllLocs" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                  (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "1") (term "0,0"))
                  (rule "ifthenelse_true" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "77") (term "1,1,0,0,0,0,1,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_size_0"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                  (rule "elementOfAllLocs" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                  (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "1") (term "0,0"))
                  (rule "ifthenelse_true" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "78") (term "1,1,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "77") (term "0,1,0,0,0,0,0,1,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_threshold_0"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                  (rule "elementOfAllLocs" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                  (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "1") (term "0,0"))
                  (rule "ifthenelse_true" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "78") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "commute_or_2" (formula "45") (term "0"))
                  (rule "commute_or_2" (formula "46") (term "0"))
                  (rule "commute_or" (formula "47") (term "0,0,1,0"))
                  (rule "allLeft" (formula "26") (inst "t=i_1_0"))
                  (rule "replace_known_left" (formula "26") (term "0,0,0,0") (ifseqformula "56"))
                  (rule "concrete_not_1" (formula "26") (term "0,0,0"))
                  (rule "concrete_or_2" (formula "26") (term "0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "54"))
                  (rule "qeq_literals" (formula "26") (term "0,1,0"))
                  (rule "concrete_and_2" (formula "26") (term "1,0"))
                  (rule "concrete_or_4" (formula "26") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "26") (term "1") (ifseqformula "55"))
                  (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                  (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "26") (term "0,0,1"))
                  (rule "leq_literals" (formula "26") (term "0,1"))
                  (rule "concrete_and_2" (formula "26") (term "1"))
                  (rule "concrete_or_4" (formula "26"))
                  (rule "commute_or" (formula "45") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "nnf_notAnd" (formula "58") (term "1,0,0,1,1,0"))
                  (rule "inEqSimp_notLeq" (formula "58") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "58") (term "0,1,0,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "58") (term "0,0,0,1,1,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "58") (term "0,0,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "58") (term "0,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "58") (term "1,0,0,0,1,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "58") (term "0,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "58") (term "1,0,1,0,0,1,1,0"))
                  (rule "nnf_notAnd" (formula "58") (term "0,0,0,1,1,0"))
                  (rule "inEqSimp_notLeq" (formula "58") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "58") (term "0,0,0,1,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "58") (term "0,0,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "58") (term "0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,0,1,1,0"))
                  (rule "commute_and" (formula "45") (term "1,0,0,0,0,1,1,0"))
                  (rule "div_axiom" (formula "2") (term "0,1,1") (inst "quotient=quotient_3"))
                  (rule "mul_literals" (formula "2") (term "1,1,1,1,1"))
                  (rule "equal_literals" (formula "2") (term "0"))
                  (rule "concrete_or_2" (formula "2"))
                  (rule "qeq_literals" (formula "2") (term "0,1"))
                  (rule "ifthenelse_true_for" (formula "2") (term "1"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "4") (term "1"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,1"))
                  (rule "add_literals" (formula "4") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                  (rule "add_literals" (formula "4") (term "0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                  (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "15"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                  (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                  (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "13"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                  (rule "applyEq" (formula "70") (term "0,0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "70"))
                  (rule "polySimp_mulLiterals" (formula "70") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "70") (term "0"))
                  (rule "polySimp_addComm1" (formula "70") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "70") (term "0,0,0"))
                  (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "2"))
                  (rule "polySimp_addComm1" (formula "5") (term "1"))
                  (rule "polySimp_addComm0" (formula "5") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                  (rule "mul_literals" (formula "3") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                  (rule "mul_literals" (formula "4") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "1") (term "0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1"))
                  (rule "polySimp_rightDist" (formula "15") (term "1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1"))
                  (rule "polySimp_rightDist" (formula "13") (term "1"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                  (rule "mul_literals" (formula "13") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "70"))
                  (rule "polySimp_mulComm0" (formula "70") (term "1"))
                  (rule "polySimp_rightDist" (formula "70") (term "1"))
                  (rule "polySimp_rightDist" (formula "70") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "70") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "70") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "70") (term "0,0,1"))
                  (rule "mul_literals" (formula "70") (term "0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,1"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "12"))
                  (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                  (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                  (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
                  (rule "add_literals" (formula "6") (term "1,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "12"))
                  (rule "mul_literals" (formula "10") (term "0,0"))
                  (rule "add_zero_left" (formula "10") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                  (rule "polySimp_elimOne" (formula "10") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "13"))
                  (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "1,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "77"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "71") (ifseqformula "9"))
                  (rule "polySimp_rightDist" (formula "71") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "71") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "71") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "71") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "71") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "71") (term "0"))
                  (rule "polySimp_addComm1" (formula "71") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "71") (term "0"))
                  (rule "add_literals" (formula "71") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "71") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "71") (term "0,0,0"))
                  (rule "add_literals" (formula "71") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "71") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "71"))
                  (rule "polySimp_mulComm0" (formula "71") (term "1"))
                  (rule "polySimp_rightDist" (formula "71") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "71") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "71") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "71") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "71") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "72") (ifseqformula "22"))
                  (rule "polySimp_rightDist" (formula "72") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "72") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "72") (term "0"))
                  (rule "polySimp_rightDist" (formula "72") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "72") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "72") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "72") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "72") (term "0,0,0"))
                  (rule "add_literals" (formula "72") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "72"))
                  (rule "polySimp_mulComm0" (formula "72") (term "1"))
                  (rule "polySimp_rightDist" (formula "72") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "72") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "72") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "72") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "72") (term "1,0,1"))
                  (rule "mul_literals" (formula "72") (term "0,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                  (rule "mul_literals" (formula "12") (term "0,0"))
                  (rule "add_zero_left" (formula "12") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "74") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "74") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "74") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "74") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "74") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "74") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "74") (term "0"))
                  (rule "polySimp_addComm1" (formula "74") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "74") (term "0"))
                  (rule "add_literals" (formula "74") (term "1,1,0"))
                  (rule "times_zero_1" (formula "74") (term "1,0"))
                  (rule "add_zero_right" (formula "74") (term "0"))
                  (rule "polySimp_addAssoc" (formula "74") (term "0"))
                  (rule "polySimp_addComm1" (formula "74") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "74") (term "0"))
                  (rule "add_literals" (formula "74") (term "1,1,0"))
                  (rule "polySimp_elimOne" (formula "74") (term "1,0"))
                  (rule "polySimp_addAssoc" (formula "74") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "74") (term "0,0,0"))
                  (rule "add_literals" (formula "74") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "74") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0" (formula "74") (term "0,0"))
                  (rule "add_literals" (formula "74") (term "1,0,0"))
                  (rule "times_zero_1" (formula "74") (term "0,0"))
                  (rule "add_zero_left" (formula "74") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "74") (ifseqformula "15"))
                  (rule "polySimp_rightDist" (formula "74") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "74") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "74") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "74") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "74") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "74") (term "0"))
                  (rule "polySimp_addComm1" (formula "74") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "74") (term "0"))
                  (rule "add_literals" (formula "74") (term "1,1,0"))
                  (rule "times_zero_1" (formula "74") (term "1,0"))
                  (rule "add_zero_right" (formula "74") (term "0"))
                  (rule "polySimp_addComm1" (formula "74") (term "0"))
                  (rule "polySimp_addAssoc" (formula "74") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "74") (term "0,0,0"))
                  (rule "add_literals" (formula "74") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                  (rule "add_literals" (formula "74") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "74") (term "1,0,0"))
                  (rule "add_zero_right" (formula "74") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "74"))
                  (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                  (rule "polySimp_elimOne" (formula "74") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "9"))
                  (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "17") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                  (rule "add_literals" (formula "17") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1"))
                  (rule "polySimp_rightDist" (formula "17") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                  (rule "mul_literals" (formula "17") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                  (rule "add_literals" (formula "18") (term "1,1,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0"))
                  (rule "add_zero_right" (formula "18") (term "0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "18") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                  (rule "mul_literals" (formula "18") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "18") (ifseqformula "72"))
                  (rule "mul_literals" (formula "18") (term "1,1,0"))
                  (rule "greater_literals" (formula "18") (term "0,0"))
                  (rule "concrete_and_1" (formula "18") (term "0"))
                  (rule "leq_literals" (formula "18") (term "0"))
                  (rule "concrete_or_1" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "69"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "24"))
                  (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0"))
                  (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1"))
                  (rule "polySimp_rightDist" (formula "18") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                  (rule "mul_literals" (formula "18") (term "0,1"))
                  (rule "inEqSimp_exactShadow2" (formula "10") (ifseqformula "6"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,1"))
                  (rule "greater_literals" (formula "10") (term "0"))
                  (rule "concrete_impl_1" (formula "10"))
                  (rule "mul_literals" (formula "10") (term "0,0"))
                  (rule "add_zero_left" (formula "10") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1"))
                  (rule "polySimp_rightDist" (formula "10") (term "1"))
                  (rule "mul_literals" (formula "10") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                  (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=add(Z(0(#)),
    mul(quotient_3,
        Z(neglit(8(4(6(3(8(4(7(4(1(2(#))))))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(2(#))"))
                  (rule "add_zero_left" (formula "10") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                  (rule "add_zero_left" (formula "10") (term "1,1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "10") (term "0,0"))
                  (rule "concrete_or_2" (formula "10") (term "0"))
                  (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                  (rule "add_literals" (formula "10") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                  (rule "add_literals" (formula "10") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0"))
                  (rule "leq_literals" (formula "10") (term "0"))
                  (rule "concrete_or_2" (formula "10"))
                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
                  (rule "mul_literals" (formula "11") (term "0,0"))
                  (rule "add_zero_left" (formula "11") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                  (rule "mul_literals" (formula "11") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "11") (term "0,0"))
                  (rule "concrete_or_2" (formula "11") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                  (rule "add_literals" (formula "11") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0"))
                  (rule "leq_literals" (formula "11") (term "0"))
                  (rule "concrete_or_2" (formula "11"))
                  (rule "inEqSimp_exactShadow2" (formula "12") (ifseqformula "7"))
                  (rule "greater_literals" (formula "12") (term "0"))
                  (rule "concrete_impl_1" (formula "12"))
                  (rule "mul_literals" (formula "12") (term "1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,0"))
                  (rule "add_zero_left" (formula "12") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                  (rule "mul_literals" (formula "12") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "11"))
                  (rule "greater_literals" (formula "12") (term "0,0"))
                  (rule "concrete_and_1" (formula "12") (term "0"))
                  (rule "mul_literals" (formula "12") (term "1,0"))
                  (rule "leq_literals" (formula "12") (term "0"))
                  (rule "concrete_or_1" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "14"))
                  (rule "mul_literals" (formula "12") (term "0,0"))
                  (rule "add_zero_left" (formula "12") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                  (rule "mul_literals" (formula "12") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                  (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "10"))
                  (rule "greater_literals" (formula "12") (term "0,0"))
                  (rule "concrete_and_1" (formula "12") (term "0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "12") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0"))
                  (rule "qeq_literals" (formula "12") (term "0"))
                  (rule "concrete_or_1" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "inEqSimp_exactShadow1" (formula "19") (ifseqformula "5"))
                  (rule "mul_literals" (formula "19") (term "1,0,1"))
                  (rule "greater_literals" (formula "19") (term "0"))
                  (rule "concrete_impl_1" (formula "19"))
                  (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                  (rule "mul_literals" (formula "19") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0"))
                  (rule "add_literals" (formula "19") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,1,0"))
                  (rule "neg_literal" (formula "19") (term "0,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "19") (term "0,0"))
                  (rule "concrete_or_2" (formula "19") (term "0"))
                  (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                  (rule "add_literals" (formula "19") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "19") (term "1,0,0"))
                  (rule "add_zero_right" (formula "19") (term "0,0"))
                  (rule "qeq_literals" (formula "19") (term "0"))
                  (rule "concrete_or_2" (formula "19"))
                  (rule "inEqSimp_exactShadow1" (formula "20") (ifseqformula "14"))
                  (rule "greater_literals" (formula "20") (term "0"))
                  (rule "concrete_impl_1" (formula "20"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,1,0"))
                  (rule "mul_literals" (formula "20") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                  (rule "add_literals" (formula "20") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1"))
                  (rule "polySimp_rightDist" (formula "20") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                  (rule "mul_literals" (formula "20") (term "0,1"))
                  (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcdRightDiv=add(Z(neglit(2(#))),
    mul(quotient_3,
        Z(neglit(6(9(2(7(6(9(4(9(2(4(#))))))))))))))") (inst "elimGcdLeftDiv=mul(quotient_2, Z(3(#)))") (inst "elimGcd=Z(2(#))"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "20") (term "0,0"))
                  (rule "concrete_or_2" (formula "20") (term "0"))
                  (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                  (rule "add_literals" (formula "20") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0,0"))
                  (rule "add_zero_right" (formula "20") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                  (rule "add_literals" (formula "20") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0,0"))
                  (rule "add_zero_right" (formula "20") (term "0,0"))
                  (rule "leq_literals" (formula "20") (term "0"))
                  (rule "concrete_or_2" (formula "20"))
                  (rule "inEqSimp_exactShadow0" (formula "21") (ifseqformula "6"))
                  (rule "eq_and" (formula "21") (term "0"))
                  (rule "greater_literals" (formula "21") (term "0"))
                  (rule "concrete_impl_1" (formula "21"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                  (rule "mul_literals" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,1,0"))
                  (rule "mul_literals" (formula "21") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                  (rule "add_literals" (formula "21") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                  (rule "mul_literals" (formula "21") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "21") (ifseqformula "77"))
                  (rule "mul_literals" (formula "21") (term "1,1,0"))
                  (rule "greater_literals" (formula "21") (term "0,0"))
                  (rule "concrete_and_1" (formula "21") (term "0"))
                  (rule "leq_literals" (formula "21") (term "0"))
                  (rule "concrete_or_1" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "inEqSimp_exactShadow2" (formula "22") (ifseqformula "6"))
                  (rule "greater_literals" (formula "22") (term "0"))
                  (rule "concrete_impl_1" (formula "22"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                  (rule "mul_literals" (formula "22") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1"))
                  (rule "polySimp_rightDist" (formula "22") (term "1"))
                  (rule "mul_literals" (formula "22") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                  (rule "elimGcdGeq_antec" (formula "22") (inst "elimGcdRightDiv=add(Z(neglit(1(7(4(5(2(2(1(2(2(3(#)))))))))))),
    mul(quotient_3, Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(2(#))"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "22") (term "0,0"))
                  (rule "concrete_or_2" (formula "22") (term "0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0"))
                  (rule "leq_literals" (formula "22") (term "0"))
                  (rule "concrete_or_2" (formula "22"))
                  (rule "inEqSimp_exactShadow2" (formula "23") (ifseqformula "7"))
                  (rule "greater_literals" (formula "23") (term "0"))
                  (rule "concrete_impl_1" (formula "23"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                  (rule "mul_literals" (formula "23") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                  (rule "add_literals" (formula "23") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "23") (term "0"))
                  (rule "add_literals" (formula "23") (term "1,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                  (rule "inEqSimp_subsumption4" (formula "23") (ifseqformula "19"))
                  (rule "times_zero_1" (formula "23") (term "0,1,0"))
                  (rule "greater_literals" (formula "23") (term "0,0"))
                  (rule "concrete_and_1" (formula "23") (term "0"))
                  (rule "leq_literals" (formula "23") (term "0"))
                  (rule "concrete_or_1" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "inEqSimp_exactShadow1" (formula "79") (ifseqformula "5"))
                  (rule "mul_literals" (formula "79") (term "1,0,1"))
                  (rule "greater_literals" (formula "79") (term "0"))
                  (rule "concrete_impl_1" (formula "79"))
                  (rule "polySimp_rightDist" (formula "79") (term "0,0"))
                  (rule "polySimp_mulAssoc" (formula "79") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "79") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "79") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "79") (term "0"))
                  (rule "polySimp_addComm0" (formula "79") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "79"))
                  (rule "polySimp_mulLiterals" (formula "79") (term "0"))
                  (rule "polySimp_elimOne" (formula "79") (term "0"))
                  (rule "inEqSimp_exactShadow1" (formula "80") (ifseqformula "14"))
                  (rule "greater_literals" (formula "80") (term "0"))
                  (rule "concrete_impl_1" (formula "80"))
                  (rule "polySimp_rightDist" (formula "80") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "80") (term "0,0"))
                  (rule "polySimp_mulAssoc" (formula "80") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "80") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "80") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "80") (term "0,1,0"))
                  (rule "mul_literals" (formula "80") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "80") (term "1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "80") (term "0"))
                  (rule "polySimp_addComm1" (formula "80") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "80") (term "0"))
                  (rule "add_literals" (formula "80") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "80") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "80") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "80") (term "0,0"))
                  (rule "add_literals" (formula "80") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "80"))
                  (rule "polySimp_mulComm0" (formula "80") (term "1"))
                  (rule "polySimp_rightDist" (formula "80") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "80") (term "1,1"))
                  (rule "mul_literals" (formula "80") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "14"))
                  (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                  (rule "add_literals" (formula "23") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0"))
                  (rule "add_zero_right" (formula "23") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                  (rule "mul_literals" (formula "23") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "23") (ifseqformula "78"))
                  (rule "mul_literals" (formula "23") (term "1,1,0"))
                  (rule "greater_literals" (formula "23") (term "0,0"))
                  (rule "concrete_and_1" (formula "23") (term "0"))
                  (rule "leq_literals" (formula "23") (term "0"))
                  (rule "concrete_or_1" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "inEqSimp_exactShadow3" (formula "82") (ifseqformula "14"))
                  (rule "polySimp_rightDist" (formula "82") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "82") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "82") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "82") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "82") (term "0"))
                  (rule "polySimp_addComm1" (formula "82") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "82") (term "0"))
                  (rule "add_literals" (formula "82") (term "1,1,0"))
                  (rule "polySimp_elimOne" (formula "82") (term "1,0"))
                  (rule "polySimp_addAssoc" (formula "82") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "82") (term "0,0,0"))
                  (rule "add_literals" (formula "82") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "82") (term "0,0"))
                  (rule "add_literals" (formula "82") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "82") (term "1,0,0"))
                  (rule "add_zero_right" (formula "82") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "82"))
                  (rule "mul_literals" (formula "82") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "82") (ifseqformula "77"))
                  (rule "leq_literals" (formula "82") (term "0"))
                  (rule "concrete_or_1" (formula "82"))
                  (rule "true_left" (formula "82"))
                  (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "5"))
                  (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0"))
                  (rule "add_literals" (formula "23") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                  (rule "inEqSimp_subsumption4" (formula "23") (ifseqformula "19"))
                  (rule "mul_literals" (formula "23") (term "0,1,0"))
                  (rule "greater_literals" (formula "23") (term "0,0"))
                  (rule "concrete_and_1" (formula "23") (term "0"))
                  (rule "leq_literals" (formula "23") (term "0"))
                  (rule "concrete_or_1" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "inEqSimp_exactShadow3" (formula "82") (ifseqformula "5"))
                  (rule "polySimp_rightDist" (formula "82") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "82") (term "0"))
                  (rule "polySimp_rightDist" (formula "82") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "82") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "82") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "82") (term "0,0"))
                  (rule "add_literals" (formula "82") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "82"))
                  (rule "polySimp_mulLiterals" (formula "82") (term "0"))
                  (rule "polySimp_elimOne" (formula "82") (term "0"))
                  (rule "inEqSimp_exactShadow0" (formula "81") (ifseqformula "6"))
                  (rule "eq_and" (formula "81") (term "0"))
                  (rule "greater_literals" (formula "81") (term "0"))
                  (rule "concrete_impl_1" (formula "81"))
                  (rule "polySimp_rightDist" (formula "81") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "81") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "81") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "81") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "81") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "81") (term "1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "81") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "81") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "81") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "81") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "81") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "81") (term "0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "81") (term "0"))
                  (rule "polySimp_addComm1" (formula "81") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "81") (term "0"))
                  (rule "add_literals" (formula "81") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "81") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "81") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "81") (term "0,0"))
                  (rule "add_literals" (formula "81") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "81") (term "1,0,0"))
                  (rule "add_zero_right" (formula "81") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "81"))
                  (rule "mul_literals" (formula "81") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "81") (ifseqformula "77"))
                  (rule "greater_literals" (formula "81") (term "0,0"))
                  (rule "concrete_and_1" (formula "81") (term "0"))
                  (rule "mul_literals" (formula "81") (term "1,0"))
                  (rule "leq_literals" (formula "81") (term "0"))
                  (rule "concrete_or_1" (formula "81"))
                  (rule "true_left" (formula "81"))
                  (rule "inEqSimp_exactShadow2" (formula "82") (ifseqformula "7"))
                  (rule "greater_literals" (formula "82") (term "0"))
                  (rule "concrete_impl_1" (formula "82"))
                  (rule "polySimp_rightDist" (formula "82") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "82") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "82") (term "1,0,1,0,0"))
                  (rule "mul_literals" (formula "82") (term "0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "82") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "82") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "82") (term "0"))
                  (rule "polySimp_rightDist" (formula "82") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "82") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "82") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "82") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "82") (term "0,0,0"))
                  (rule "add_literals" (formula "82") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "82") (term "0,0"))
                  (rule "add_literals" (formula "82") (term "1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "82"))
                  (rule "polySimp_mulLiterals" (formula "82") (term "0"))
                  (rule "inEqSimp_exactShadow2" (formula "83") (ifseqformula "6"))
                  (rule "greater_literals" (formula "83") (term "0"))
                  (rule "concrete_impl_1" (formula "83"))
                  (rule "polySimp_rightDist" (formula "83") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "83") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "83") (term "1,0,1,0,0"))
                  (rule "mul_literals" (formula "83") (term "0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "83") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "83") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "83") (term "0,0,0"))
                  (rule "mul_literals" (formula "83") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "83") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "83") (term "0"))
                  (rule "polySimp_addComm1" (formula "83") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "83") (term "0"))
                  (rule "add_literals" (formula "83") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "83") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "83") (term "0,0,0"))
                  (rule "add_literals" (formula "83") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "83") (term "0,0"))
                  (rule "add_literals" (formula "83") (term "1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "83"))
                  (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                  (rule "polySimp_elimOne" (formula "83") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "84") (ifseqformula "13"))
                  (rule "polySimp_rightDist" (formula "84") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "84") (term "0"))
                  (rule "polySimp_rightDist" (formula "84") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "84") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "84") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "84") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "84") (term "0,0,0"))
                  (rule "add_literals" (formula "84") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "84") (term "0,0"))
                  (rule "add_literals" (formula "84") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "84") (term "1,0,0"))
                  (rule "add_zero_right" (formula "84") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "84"))
                  (rule "polySimp_mulLiterals" (formula "84") (term "0"))
                  (rule "polySimp_elimOne" (formula "84") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "84") (ifseqformula "72"))
                  (rule "leq_literals" (formula "84") (term "0"))
                  (rule "concrete_or_1" (formula "84"))
                  (rule "true_left" (formula "84"))
                  (rule "inEqSimp_exactShadow0" (formula "81") (ifseqformula "7"))
                  (rule "eq_and" (formula "81") (term "0"))
                  (rule "greater_literals" (formula "81") (term "0"))
                  (rule "concrete_impl_1" (formula "81"))
                  (rule "polySimp_rightDist" (formula "81") (term "1,0"))
                  (rule "mul_literals" (formula "81") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "81") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "81") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "81") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "81") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "81") (term "1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "81") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "81") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "81") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "81") (term "0"))
                  (rule "polySimp_addAssoc" (formula "81") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "81") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "81") (term "0,0"))
                  (rule "add_literals" (formula "81") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "81") (term "1,0,0"))
                  (rule "add_zero_right" (formula "81") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "81"))
                  (rule "polySimp_mulLiterals" (formula "81") (term "0"))
                  (rule "inEqSimp_subsumption4" (formula "81") (ifseqformula "72"))
                  (rule "mul_literals" (formula "81") (term "0,1,0"))
                  (rule "greater_literals" (formula "81") (term "0,0"))
                  (rule "concrete_and_1" (formula "81") (term "0"))
                  (rule "leq_literals" (formula "81") (term "0"))
                  (rule "concrete_or_1" (formula "81"))
                  (rule "true_left" (formula "81"))
                  (rule "inEqSimp_exactShadow1" (formula "21") (ifseqformula "13"))
                  (rule "greater_literals" (formula "21") (term "0"))
                  (rule "concrete_impl_1" (formula "21"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "21") (term "0"))
                  (rule "add_literals" (formula "21") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                  (rule "mul_literals" (formula "21") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "21") (ifseqformula "11"))
                  (rule "greater_literals" (formula "21") (term "0,0"))
                  (rule "concrete_and_1" (formula "21") (term "0"))
                  (rule "mul_literals" (formula "21") (term "1,0"))
                  (rule "leq_literals" (formula "21") (term "0"))
                  (rule "concrete_or_1" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "inEqSimp_exactShadow1" (formula "81") (ifseqformula "13"))
                  (rule "greater_literals" (formula "81") (term "0"))
                  (rule "concrete_impl_1" (formula "81"))
                  (rule "polySimp_rightDist" (formula "81") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0"))
                  (rule "mul_literals" (formula "81") (term "0,1,0"))
                  (rule "polySimp_rightDist" (formula "81") (term "0,0"))
                  (rule "polySimp_mulAssoc" (formula "81") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "81") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "81") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "81") (term "0"))
                  (rule "polySimp_addAssoc" (formula "81") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "81") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "81") (term "0,0"))
                  (rule "add_literals" (formula "81") (term "1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "81"))
                  (rule "polySimp_mulLiterals" (formula "81") (term "0"))
                  (rule "polySimp_elimOne" (formula "81") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "72"))
                  (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                  (rule "mul_literals" (formula "10") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "12"))
                  (rule "mul_literals" (formula "10") (term "1,1,0"))
                  (rule "greater_literals" (formula "10") (term "0,0"))
                  (rule "concrete_and_1" (formula "10") (term "0"))
                  (rule "leq_literals" (formula "10") (term "0"))
                  (rule "concrete_or_1" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "19"))
                  (rule "applyEq" (formula "14") (term "0,1,1") (ifseqformula "11"))
                  (rule "mul_literals" (formula "14") (term "1,1"))
                  (rule "add_zero_right" (formula "14") (term "1"))
                  (rule "applyEqRigid" (formula "10") (term "0,1") (ifseqformula "11"))
                  (rule "mul_literals" (formula "10") (term "1"))
                  (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "10"))
                  (rule "qeq_literals" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "applyEq" (formula "22") (term "0,1,1") (ifseqformula "10"))
                  (rule "mul_literals" (formula "22") (term "1,1"))
                  (rule "add_zero_right" (formula "22") (term "1"))
                  (rule "applyEqRigid" (formula "83") (term "0,1,1") (ifseqformula "10"))
                  (rule "mul_literals" (formula "83") (term "1,1"))
                  (rule "add_zero_right" (formula "83") (term "1"))
                  (rule "applyEq" (formula "79") (term "0,1,1") (ifseqformula "10"))
                  (rule "mul_literals" (formula "79") (term "1,1"))
                  (rule "add_zero_right" (formula "79") (term "1"))
                  (rule "applyEqRigid" (formula "19") (term "0,1,1") (ifseqformula "10"))
                  (rule "mul_literals" (formula "19") (term "1,1"))
                  (rule "add_zero_right" (formula "19") (term "1"))
                  (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "10"))
                  (rule "leq_literals" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "applyEq" (formula "20") (term "0,1,1") (ifseqformula "10"))
                  (rule "mul_literals" (formula "20") (term "1,1"))
                  (rule "add_zero_right" (formula "20") (term "1"))
                  (rule "applyEqRigid" (formula "19") (term "0,1,1") (ifseqformula "10"))
                  (rule "mul_literals" (formula "19") (term "1,1"))
                  (rule "add_zero_right" (formula "19") (term "1"))
                  (rule "applyEqRigid" (formula "79") (term "0,1,1") (ifseqformula "10"))
                  (rule "mul_literals" (formula "79") (term "1,1"))
                  (rule "add_zero_right" (formula "79") (term "1"))
                  (rule "applyEq" (formula "81") (term "0,1,1") (ifseqformula "10"))
                  (rule "mul_literals" (formula "81") (term "1,1"))
                  (rule "add_zero_right" (formula "81") (term "1"))
                  (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "10"))
                  (rule "mul_literals" (formula "7") (term "1,1"))
                  (rule "add_zero_right" (formula "7") (term "1"))
                  (rule "applyEqRigid" (formula "77") (term "0,1,1") (ifseqformula "10"))
                  (rule "mul_literals" (formula "77") (term "1,1"))
                  (rule "add_zero_right" (formula "77") (term "1"))
                  (rule "applyEqRigid" (formula "13") (term "0,1,0,1") (ifseqformula "10"))
                  (rule "mul_literals" (formula "13") (term "1,0,1"))
                  (rule "add_zero_right" (formula "13") (term "0,1"))
                  (rule "applyEqRigid" (formula "16") (term "0,1,0,1") (ifseqformula "10"))
                  (rule "times_zero_2" (formula "16") (term "1,0,1"))
                  (rule "add_zero_right" (formula "16") (term "0,1"))
                  (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "10"))
                  (rule "applyEq" (formula "80") (term "0,0,1") (ifseqformula "10"))
                  (rule "mul_literals" (formula "80") (term "0,1"))
                  (rule "add_zero_left" (formula "80") (term "1"))
                  (rule "applyEqRigid" (formula "22") (term "0,0,1") (ifseqformula "10"))
                  (rule "times_zero_2" (formula "22") (term "0,1"))
                  (rule "add_zero_left" (formula "22") (term "1"))
                  (rule "applyEq" (formula "83") (term "0,1,0,1") (ifseqformula "10"))
                  (rule "mul_literals" (formula "83") (term "1,0,1"))
                  (rule "add_zero_right" (formula "83") (term "0,1"))
                  (rule "applyEq" (formula "6") (term "0,1,0,1") (ifseqformula "10"))
                  (rule "times_zero_2" (formula "6") (term "1,0,1"))
                  (rule "add_zero_right" (formula "6") (term "0,1"))
                  (rule "applyEq" (formula "3") (term "0,0,0,1") (ifseqformula "10"))
                  (rule "times_zero_2" (formula "3") (term "0,0,1"))
                  (rule "add_zero_left" (formula "3") (term "0,1"))
                  (rule "applyEqRigid" (formula "84") (term "0,1,0,0,1") (ifseqformula "10"))
                  (rule "mul_literals" (formula "84") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "84") (term "0,0,1"))
                  (rule "applyEq" (formula "1") (term "0,1,0,0,1") (ifseqformula "10"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "12"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (rule "concrete_or_1" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_subsumption6" (formula "18") (ifseqformula "10"))
                  (rule "mul_literals" (formula "18") (term "1,1,0"))
                  (rule "greater_literals" (formula "18") (term "0,0"))
                  (rule "concrete_and_1" (formula "18") (term "0"))
                  (rule "leq_literals" (formula "18") (term "0"))
                  (rule "concrete_or_1" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "73"))
                  (rule "leq_literals" (formula "18") (term "0"))
                  (rule "concrete_or_1" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "inEqSimp_subsumption6" (formula "75") (ifseqformula "72"))
                  (rule "greater_literals" (formula "75") (term "0,0"))
                  (rule "concrete_and_1" (formula "75") (term "0"))
                  (rule "mul_literals" (formula "75") (term "1,0"))
                  (rule "leq_literals" (formula "75") (term "0"))
                  (rule "concrete_or_1" (formula "75"))
                  (rule "true_left" (formula "75"))
                  (rule "inEqSimp_subsumption0" (formula "74") (ifseqformula "75"))
                  (rule "leq_literals" (formula "74") (term "0"))
                  (rule "concrete_or_1" (formula "74"))
                  (rule "true_left" (formula "74"))
                  (rule "inEqSimp_subsumption0" (formula "74") (ifseqformula "67"))
                  (rule "leq_literals" (formula "74") (term "0"))
                  (rule "concrete_or_1" (formula "74"))
                  (rule "true_left" (formula "74"))
                  (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "10"))
                  (rule "leq_literals" (formula "18") (term "0"))
                  (rule "concrete_or_1" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "inEqSimp_subsumption4" (formula "74") (ifseqformula "66"))
                  (rule "greater_literals" (formula "74") (term "0,0"))
                  (rule "concrete_and_1" (formula "74") (term "0"))
                  (rule "mul_literals" (formula "74") (term "0,0"))
                  (rule "leq_literals" (formula "74") (term "0"))
                  (rule "concrete_or_1" (formula "74"))
                  (rule "true_left" (formula "74"))
                  (rule "inEqSimp_subsumption0" (formula "74") (ifseqformula "66"))
                  (rule "leq_literals" (formula "74") (term "0"))
                  (rule "concrete_or_1" (formula "74"))
                  (rule "true_left" (formula "74"))
                  (rule "inEqSimp_subsumption6" (formula "17") (ifseqformula "71"))
                  (rule "mul_literals" (formula "17") (term "1,1,0"))
                  (rule "greater_literals" (formula "17") (term "0,0"))
                  (rule "concrete_and_1" (formula "17") (term "0"))
                  (rule "leq_literals" (formula "17") (term "0"))
                  (rule "concrete_or_1" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(0(7(9(6(5(9(8(7(1(#))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(3(#))"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "6") (term "0,0"))
                  (rule "concrete_or_2" (formula "6") (term "0"))
                  (rule "neg_literal" (formula "6") (term "0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "qeq_literals" (formula "6") (term "0"))
                  (rule "concrete_or_2" (formula "6"))
                  (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "6"))
                  (rule "leq_literals" (formula "11") (term "0"))
                  (rule "concrete_or_1" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "inEqSimp_exactShadow3" (formula "72") (ifseqformula "6"))
                  (rule "polySimp_rightDist" (formula "72") (term "0,0"))
                  (rule "mul_literals" (formula "72") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "72") (term "0"))
                  (rule "add_literals" (formula "72") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "72"))
                  (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                  (rule "polySimp_elimOne" (formula "72") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "72") (ifseqformula "64"))
                  (rule "leq_literals" (formula "72") (term "0"))
                  (rule "concrete_or_1" (formula "72"))
                  (rule "true_left" (formula "72"))
                  (rule "inEqSimp_exactShadow3" (formula "72") (ifseqformula "11"))
                  (rule "polySimp_rightDist" (formula "72") (term "0,0"))
                  (rule "mul_literals" (formula "72") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "72") (term "0"))
                  (rule "polySimp_addComm1" (formula "72") (term "0,0"))
                  (rule "add_literals" (formula "72") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "72") (term "0"))
                  (rule "add_literals" (formula "72") (term "1,1,0"))
                  (rule "polySimp_elimOne" (formula "72") (term "1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "72"))
                  (rule "mul_literals" (formula "72") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "72") (ifseqformula "69"))
                  (rule "leq_literals" (formula "72") (term "0"))
                  (rule "concrete_or_1" (formula "72"))
                  (rule "true_left" (formula "72"))
                  (rule "inEqSimp_exactShadow1" (formula "71") (ifseqformula "11"))
                  (rule "greater_literals" (formula "71") (term "0"))
                  (rule "concrete_impl_1" (formula "71"))
                  (rule "polySimp_mulComm0" (formula "71") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "71") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0"))
                  (rule "mul_literals" (formula "71") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "71") (term "0"))
                  (rule "polySimp_addComm0" (formula "71") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "71") (term "0"))
                  (rule "add_literals" (formula "71") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "71"))
                  (rule "mul_literals" (formula "71") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "71") (ifseqformula "69"))
                  (rule "mul_literals" (formula "71") (term "1,1,0"))
                  (rule "greater_literals" (formula "71") (term "0,0"))
                  (rule "concrete_and_1" (formula "71") (term "0"))
                  (rule "leq_literals" (formula "71") (term "0"))
                  (rule "concrete_or_1" (formula "71"))
                  (rule "true_left" (formula "71"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                  (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "1,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "14"))
                  (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "1,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                  (rule "inEqSimp_subsumption4" (formula "7") (ifseqformula "6"))
                  (rule "mul_literals" (formula "7") (term "0,1,0"))
                  (rule "greater_literals" (formula "7") (term "0,0"))
                  (rule "concrete_and_1" (formula "7") (term "0"))
                  (rule "leq_literals" (formula "7") (term "0"))
                  (rule "concrete_or_1" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "inEqSimp_exactShadow0" (formula "71") (ifseqformula "5"))
                  (rule "eq_and" (formula "71") (term "0"))
                  (rule "greater_literals" (formula "71") (term "0"))
                  (rule "concrete_impl_1" (formula "71"))
                  (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "71") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "71") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "71") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "71") (term "1,0"))
                  (rule "mul_literals" (formula "71") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "71") (term "0"))
                  (rule "polySimp_addComm0" (formula "71") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "71") (term "0"))
                  (rule "add_literals" (formula "71") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "71"))
                  (rule "mul_literals" (formula "71") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "71") (ifseqformula "69"))
                  (rule "mul_literals" (formula "71") (term "1,1,0"))
                  (rule "greater_literals" (formula "71") (term "0,0"))
                  (rule "concrete_and_1" (formula "71") (term "0"))
                  (rule "leq_literals" (formula "71") (term "0"))
                  (rule "concrete_or_1" (formula "71"))
                  (rule "true_left" (formula "71"))
                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                  (rule "polySimp_mulAssoc" (formula "16") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                  (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                  (rule "add_literals" (formula "16") (term "1,1,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0"))
                  (rule "add_zero_right" (formula "16") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                  (rule "mul_literals" (formula "16") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "16") (ifseqformula "70"))
                  (rule "mul_literals" (formula "16") (term "1,1,0"))
                  (rule "greater_literals" (formula "16") (term "0,0"))
                  (rule "concrete_and_1" (formula "16") (term "0"))
                  (rule "leq_literals" (formula "16") (term "0"))
                  (rule "concrete_or_1" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "22"))
                  (rule "polySimp_mulAssoc" (formula "16") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "16") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                  (rule "mul_literals" (formula "16") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "10"))
                  (rule "leq_literals" (formula "16") (term "0"))
                  (rule "concrete_or_1" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "inEqSimp_exactShadow3" (formula "73") (ifseqformula "14"))
                  (rule "polySimp_rightDist" (formula "73") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "73") (term "0,0,0"))
                  (rule "mul_literals" (formula "73") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "73") (term "0"))
                  (rule "polySimp_addComm1" (formula "73") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "73") (term "0"))
                  (rule "add_literals" (formula "73") (term "1,1,0"))
                  (rule "times_zero_1" (formula "73") (term "1,0"))
                  (rule "add_zero_right" (formula "73") (term "0"))
                  (rule "polySimp_addComm1" (formula "73") (term "0"))
                  (rule "add_literals" (formula "73") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "73"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                  (rule "polySimp_elimOne" (formula "73") (term "0"))
                  (rule "inEqSimp_exactShadow2" (formula "10") (ifseqformula "5"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                  (rule "greater_literals" (formula "10") (term "0"))
                  (rule "concrete_impl_1" (formula "10"))
                  (rule "mul_literals" (formula "10") (term "0,0"))
                  (rule "add_zero_left" (formula "10") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                  (rule "mul_literals" (formula "10") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "70"))
                  (rule "greater_literals" (formula "10") (term "0,0"))
                  (rule "concrete_and_1" (formula "10") (term "0"))
                  (rule "mul_literals" (formula "10") (term "1,0"))
                  (rule "leq_literals" (formula "10") (term "0"))
                  (rule "concrete_or_1" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "67"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "79"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "14"))
                  (rule "mul_literals" (formula "12") (term "0,0"))
                  (rule "add_zero_left" (formula "12") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "6"))
                  (rule "leq_literals" (formula "12") (term "0"))
                  (rule "concrete_or_1" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "8"))
                  (rule "polySimp_mulAssoc" (formula "16") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                  (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                  (rule "add_literals" (formula "16") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                  (rule "mul_literals" (formula "16") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "16") (ifseqformula "10"))
                  (rule "mul_literals" (formula "16") (term "1,1,0"))
                  (rule "greater_literals" (formula "16") (term "0,0"))
                  (rule "concrete_and_1" (formula "16") (term "0"))
                  (rule "leq_literals" (formula "16") (term "0"))
                  (rule "concrete_or_1" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "inEqSimp_exactShadow2" (formula "72") (ifseqformula "5"))
                  (rule "greater_literals" (formula "72") (term "0"))
                  (rule "concrete_impl_1" (formula "72"))
                  (rule "polySimp_rightDist" (formula "72") (term "1,0,0"))
                  (rule "mul_literals" (formula "72") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "72") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0"))
                  (rule "mul_literals" (formula "72") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "72") (term "0"))
                  (rule "polySimp_addComm1" (formula "72") (term "0,0"))
                  (rule "add_literals" (formula "72") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "72") (term "0"))
                  (rule "add_literals" (formula "72") (term "1,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "72"))
                  (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                  (rule "polySimp_elimOne" (formula "72") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "72") (ifseqformula "64"))
                  (rule "leq_literals" (formula "72") (term "0"))
                  (rule "concrete_or_1" (formula "72"))
                  (rule "true_left" (formula "72"))
                  (rule "inEqSimp_exactShadow3" (formula "73") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "73") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "73") (term "0,0,0"))
                  (rule "mul_literals" (formula "73") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "73") (term "0"))
                  (rule "polySimp_addComm1" (formula "73") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "73") (term "0"))
                  (rule "add_literals" (formula "73") (term "1,1,0"))
                  (rule "times_zero_1" (formula "73") (term "1,0"))
                  (rule "add_zero_right" (formula "73") (term "0"))
                  (rule "polySimp_addAssoc" (formula "73") (term "0"))
                  (rule "polySimp_addComm1" (formula "73") (term "0,0"))
                  (rule "add_literals" (formula "73") (term "0,0,0"))
                  (rule "add_zero_left" (formula "73") (term "0,0"))
                  (rule "polySimp_pullOutFactor0" (formula "73") (term "0"))
                  (rule "add_literals" (formula "73") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "73") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "73") (ifseqformula "8"))
                  (rule "polySimp_rightDist" (formula "73") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "73") (term "0,0,0"))
                  (rule "mul_literals" (formula "73") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "73") (term "0"))
                  (rule "polySimp_addComm1" (formula "73") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "73") (term "0"))
                  (rule "add_literals" (formula "73") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "73") (term "0,0"))
                  (rule "add_literals" (formula "73") (term "0,0,0"))
                  (rule "add_zero_left" (formula "73") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "73"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1"))
                  (rule "polySimp_elimOne" (formula "73") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                  (rule "mul_literals" (formula "12") (term "0,0"))
                  (rule "add_zero_left" (formula "12") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "73") (ifseqformula "22"))
                  (rule "polySimp_rightDist" (formula "73") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "73") (term "0"))
                  (rule "polySimp_rightDist" (formula "73") (term "0,0,0"))
                  (rule "mul_literals" (formula "73") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "73") (term "0,0"))
                  (rule "add_literals" (formula "73") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "73"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1"))
                  (rule "polySimp_rightDist" (formula "73") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1"))
                  (rule "mul_literals" (formula "73") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "11"))
                  (rule "times_zero_1" (formula "10") (term "0,0"))
                  (rule "add_zero_left" (formula "10") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                  (rule "mul_literals" (formula "10") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "70"))
                  (rule "mul_literals" (formula "10") (term "1,1,0"))
                  (rule "greater_literals" (formula "10") (term "0,0"))
                  (rule "concrete_and_1" (formula "10") (term "0"))
                  (rule "leq_literals" (formula "10") (term "0"))
                  (rule "concrete_or_1" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "inEqSimp_exactShadow1" (formula "71") (ifseqformula "6"))
                  (rule "mul_literals" (formula "71") (term "1,0,1"))
                  (rule "greater_literals" (formula "71") (term "0"))
                  (rule "concrete_impl_1" (formula "71"))
                  (rule "polySimp_mulComm0" (formula "71") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "71") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "71"))
                  (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                  (rule "polySimp_elimOne" (formula "71") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "64") (ifseqformula "71"))
                  (rule "leq_literals" (formula "64") (term "0"))
                  (rule "concrete_or_1" (formula "64"))
                  (rule "true_left" (formula "64"))
                  (rule "allLeft" (formula "26") (inst "t=mul(i_1_0, Z(2(#)))"))
                  (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "61"))
                  (rule "concrete_not_1" (formula "26") (term "0,0"))
                  (rule "concrete_or_2" (formula "26") (term "0"))
                  (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                  (rule "inEqSimp_contradInEq5" (formula "26") (term "0") (ifseqformula "59"))
                  (rule "greater_literals" (formula "26") (term "0,0,0"))
                  (rule "concrete_impl_1" (formula "26") (term "0,0"))
                  (rule "mul_literals" (formula "26") (term "1,0,0"))
                  (rule "qeq_literals" (formula "26") (term "0,0"))
                  (rule "concrete_and_2" (formula "26") (term "0"))
                  (rule "concrete_or_2" (formula "26"))
                  (rule "allLeft" (formula "27") (inst "t=mul(i_1, Z(2(#)))"))
                  (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "49"))
                  (rule "concrete_not_1" (formula "27") (term "0,0"))
                  (rule "concrete_or_2" (formula "27") (term "0"))
                  (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                  (rule "inEqSimp_contradInEq5" (formula "27") (term "0") (ifseqformula "47"))
                  (rule "greater_literals" (formula "27") (term "0,0,0"))
                  (rule "concrete_impl_1" (formula "27") (term "0,0"))
                  (rule "mul_literals" (formula "27") (term "1,0,0"))
                  (rule "qeq_literals" (formula "27") (term "0,0"))
                  (rule "concrete_and_2" (formula "27") (term "0"))
                  (rule "concrete_or_2" (formula "27"))
                  (rule "allLeft" (formula "33") (inst "t=quotient_2"))
                  (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "71"))
                  (rule "qeq_literals" (formula "33") (term "0,1,0"))
                  (rule "concrete_and_2" (formula "33") (term "1,0"))
                  (rule "concrete_or_4" (formula "33") (term "0"))
                  (rule "allLeft" (formula "34") (inst "t=quotient_1"))
                  (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "10"))
                  (rule "qeq_literals" (formula "34") (term "0,1,0"))
                  (rule "concrete_and_2" (formula "34") (term "1,0"))
                  (rule "concrete_or_4" (formula "34") (term "0"))
                  (rule "commute_or_2" (formula "65") (term "0,1,1,0"))
                  (rule "nnf_imp2or" (formula "88") (term "0,1,1,0"))
                  (rule "nnf_imp2or" (formula "88") (term "0,1,0,1,0"))
                  (rule "nnf_imp2or" (formula "88") (term "0,1,0,0,0,0,0,0,1,0"))
                  (rule "nnf_imp2or" (formula "88") (term "0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "nnf_imp2or" (formula "88") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "27"))
                  (rule "polySimp_rightDist" (formula "47") (term "0,0"))
                  (rule "mul_literals" (formula "47") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1"))
                  (rule "polySimp_rightDist" (formula "47") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                  (rule "mul_literals" (formula "47") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "26"))
                  (rule "polySimp_rightDist" (formula "48") (term "0,0"))
                  (rule "mul_literals" (formula "48") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1"))
                  (rule "polySimp_rightDist" (formula "48") (term "1"))
                  (rule "mul_literals" (formula "48") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "27"))
                  (rule "polySimp_rightDist" (formula "62") (term "0,0"))
                  (rule "mul_literals" (formula "62") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "62") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "62"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                  (rule "polySimp_elimOne" (formula "62") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "26"))
                  (rule "polySimp_rightDist" (formula "63") (term "0,0"))
                  (rule "mul_literals" (formula "63") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "63") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "63"))
                  (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                  (rule "polySimp_elimOne" (formula "63") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "27"))
                  (rule "polySimp_mulAssoc" (formula "40") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1"))
                  (rule "inEqSimp_contradInEq3" (formula "40") (ifseqformula "53"))
                  (rule "greater_literals" (formula "40") (term "0,0"))
                  (rule "concrete_impl_1" (formula "40") (term "0"))
                  (rule "andLeft" (formula "40"))
                  (rule "polySimp_rightDist" (formula "40") (term "0"))
                  (rule "mul_literals" (formula "40") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "40"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0"))
                  (rule "mul_literals" (formula "40") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0"))
                  (rule "polySimp_addComm0" (formula "40") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "40") (term "0"))
                  (rule "add_literals" (formula "40") (term "1,1,0"))
                  (rule "times_zero_1" (formula "40") (term "1,0"))
                  (rule "add_zero_right" (formula "40") (term "0"))
                  (rule "leq_literals" (formula "40"))
                  (rule "closeFalse" (formula "40"))
               )
               (branch "expectedMaxSize >= 0 FALSE"
                  (rule "eqSymm" (formula "6"))
                  (rule "inEqSimp_geqRight" (formula "72"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "applyEq" (formula "10") (term "1,0,0") (ifseqformula "7"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor3b" (formula "10") (term "0,0"))
                  (rule "applyEq" (formula "8") (term "1,0,0") (ifseqformula "7"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor3b" (formula "8") (term "0,0"))
                  (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "7"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor3b" (formula "2") (term "0,0"))
                  (rule "applyEq" (formula "66") (term "1,0,0") (ifseqformula "7"))
                  (rule "polySimp_addAssoc" (formula "66") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "66") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor3b" (formula "66") (term "0,0"))
                  (rule "mod_axiom" (formula "10") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "10"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1,0"))
                  (rule "mul_literals" (formula "10") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "10") (term "0,0,0"))
                  (rule "mod_axiom" (formula "8") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0"))
                  (rule "mul_literals" (formula "8") (term "0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0,0"))
                  (rule "mod_axiom" (formula "2") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                  (rule "add_zero_left" (formula "2") (term "0,0,0,0"))
                  (rule "mod_axiom" (formula "66") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "66"))
                  (rule "polySimp_mulComm0" (formula "66") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "66") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "66") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "66") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,1,0"))
                  (rule "mul_literals" (formula "66") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "66") (term "1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "66") (term "0"))
                  (rule "polySimp_addAssoc" (formula "66") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "66") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "66") (term "0,0,0,0"))
                  (rule "add_literals" (formula "66") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1"))
                  (rule "polySimp_rightDist" (formula "10") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "10") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                  (rule "mul_literals" (formula "8") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "66"))
                  (rule "polySimp_mulComm0" (formula "66") (term "1"))
                  (rule "polySimp_rightDist" (formula "66") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "66") (term "0,1"))
                  (rule "polySimp_rightDist" (formula "66") (term "0,0,1"))
                  (rule "mul_literals" (formula "66") (term "0,0,0,1"))
                  (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "1"))
                  (rule "leq_literals" (formula "16") (term "0"))
                  (rule "concrete_or_1" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "inEqSimp_exactShadow0" (formula "8") (ifseqformula "65"))
                  (rule "eq_and" (formula "8") (term "0"))
                  (rule "greater_literals" (formula "8") (term "0"))
                  (rule "concrete_impl_1" (formula "8"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0"))
                  (rule "mul_literals" (formula "8") (term "0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                  (rule "add_literals" (formula "8") (term "1,1,0"))
                  (rule "times_zero_1" (formula "8") (term "1,0"))
                  (rule "add_zero_right" (formula "8") (term "0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                  (rule "add_literals" (formula "8") (term "1,1,0"))
                  (rule "times_zero_1" (formula "8") (term "1,0"))
                  (rule "add_zero_right" (formula "8") (term "0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "add_literals" (formula "8") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                  (rule "inEqSimp_subsumption4" (formula "8") (ifseqformula "59"))
                  (rule "mul_literals" (formula "8") (term "0,1,0"))
                  (rule "greater_literals" (formula "8") (term "0,0"))
                  (rule "concrete_and_1" (formula "8") (term "0"))
                  (rule "leq_literals" (formula "8") (term "0"))
                  (rule "concrete_or_1" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                  (rule "polySimp_mulAssoc" (formula "5") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "5") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                  (rule "neg_literal" (formula "5") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "5") (term "0,0"))
                  (rule "concrete_or_2" (formula "5") (term "0"))
                  (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "5") (term "1,0,0"))
                  (rule "add_zero_right" (formula "5") (term "0,0"))
                  (rule "qeq_literals" (formula "5") (term "0"))
                  (rule "concrete_or_2" (formula "5"))
                  (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "5"))
                  (rule "leq_literals" (formula "4") (term "0"))
                  (rule "concrete_or_1" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "61"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_mulAssoc" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,1"))
                  (rule "mul_literals" (formula "2") (term "0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "72"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_mulAssoc" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                  (rule "mul_literals" (formula "3") (term "0,0,1"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "10"))
                  (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_exactShadow0" (formula "2") (ifseqformula "11"))
                  (rule "eq_and" (formula "2") (term "0"))
                  (rule "greater_literals" (formula "2") (term "0"))
                  (rule "concrete_impl_1" (formula "2"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,1,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0"))
                  (rule "add_zero_right" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "2") (ifseqformula "65"))
                  (rule "times_zero_1" (formula "2") (term "1,1,0"))
                  (rule "greater_literals" (formula "2") (term "0,0"))
                  (rule "concrete_and_1" (formula "2") (term "0"))
                  (rule "leq_literals" (formula "2") (term "0"))
                  (rule "concrete_or_1" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_exactShadow0" (formula "2") (ifseqformula "66"))
                  (rule "eq_and" (formula "2") (term "0"))
                  (rule "greater_literals" (formula "2") (term "0"))
                  (rule "concrete_impl_1" (formula "2"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,1,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0"))
                  (rule "add_zero_right" (formula "2") (term "0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,1,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0"))
                  (rule "add_zero_right" (formula "2") (term "0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0"))
                  (rule "add_zero_left" (formula "2") (term "0,0"))
                  (rule "polySimp_pullOutFactor0" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,0"))
                  (rule "inEqSimp_subsumption6" (formula "2") (ifseqformula "65"))
                  (rule "greater_literals" (formula "2") (term "0,0"))
                  (rule "concrete_and_1" (formula "2") (term "0"))
                  (rule "times_zero_1" (formula "2") (term "1,0"))
                  (rule "leq_literals" (formula "2") (term "0"))
                  (rule "concrete_or_1" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "nnf_notAnd" (formula "47") (term "0,1,0,1,0"))
                  (rule "double_not" (formula "47") (term "0,0,1,0,1,0"))
                  (rule "nnf_notAnd" (formula "56") (term "0,0,1,1,0"))
                  (rule "inEqSimp_notLeq" (formula "56") (term "1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,1,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "56") (term "0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "56") (term "0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,1,0"))
                  (rule "nnf_notOr" (formula "57") (term "0,0,1,1,0"))
                  (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "77") (term "1,0") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "16"))
                  (rule "insert_constant_value" (formula "77") (term "1,1,0,0,0,0,0,1,0"))
                  (rule "insert_constant_value" (formula "77") (term "0,0,1,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "insert_constant_value" (formula "77") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "insert_constant_value" (formula "77") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "eqClose" (formula "77") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "concrete_and_3" (formula "77") (term "0,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "insert_constant_value" (formula "77") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "eqClose" (formula "77") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "concrete_and_3" (formula "77") (term "0,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "insert_constant_value" (formula "77") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "eqClose" (formula "77") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "concrete_and_3" (formula "77") (term "0,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "eqSymm" (formula "77") (term "1,0,1,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "eqSymm" (formula "77") (term "1,0,0,0,0,1,0"))
                  (rule "eqSymm" (formula "77") (term "1,1,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,1,0,0,0,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,0,0,1,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,1,0,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,1,0,0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,0,0,1,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,0,0,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,0,0,0,0,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,1,1,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,1,1,1,0,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,1,0,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,0,1,0,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,0,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,1,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,2,0,0,0,2,0,1,0,0,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "77") (term "0,2,0,1,1,0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "1,0,0,1,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "77") (term "0,0,1,0,0,0,0,0,1,0"))
                  (rule "ifthenelse_negated" (formula "77") (term "2,0,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "77") (term "1,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "77") (term "0,1,0,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,1,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "77") (term "0,1,0,1,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulAssoc" (formula "77") (term "1,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "0,1,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteGeq" (formula "77") (term "1,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "1,0,1,0,0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,1,0,1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,1,0,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,0,1,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,1,0,1,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,1,0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,0,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "1,1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,0,1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "77") (term "1,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "0,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "0,1,0,1,0,1,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "77") (term "1,0,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "0,1,0,1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "0,1,0,1,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,1,0,0,1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,1,0,0,1,1,0,1,1,0"))
                  (rule "elimGcdLeq" (formula "77") (term "1,1,0,0,1,1,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                  (rule "mul_literals" (formula "77") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "sub_literals" (formula "77") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_literals" (formula "77") (term "1,1,0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "times_zero_1" (formula "77") (term "1,0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "77") (term "0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_literals" (formula "77") (term "1,1,0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "times_zero_1" (formula "77") (term "1,0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "77") (term "0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,0,0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "0,0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,0,0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_literals" (formula "77") (term "0,0,0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "77") (term "0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "77") (term "0,0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_literals" (formula "77") (term "0,0,0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_literals" (formula "77") (term "1,1,0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "times_zero_1" (formula "77") (term "1,0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "77") (term "0,1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "qeq_literals" (formula "77") (term "1,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "concrete_and_3" (formula "77") (term "0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "77") (term "0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_literals" (formula "77") (term "0,0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_zero_left" (formula "77") (term "0,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0" (formula "77") (term "0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "add_literals" (formula "77") (term "1,0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "times_zero_1" (formula "77") (term "0,0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "leq_literals" (formula "77") (term "0,1,1,0,0,1,1,0,1,1,0"))
                  (rule "ifthenelse_true_for" (formula "77") (term "1,1,0,0,1,1,0,1,1,0"))
                  (rule "elimGcdGeq" (formula "77") (term "0,1,0,0,1,1,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "77") (term "0,0,0,1,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "77") (term "0,0,0,0,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "times_zero_1" (formula "77") (term "0,0,0,1,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "sub_literals" (formula "77") (term "0,0,0,0,0,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "times_zero_1" (formula "77") (term "1,0,0,0,0,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "add_zero_left" (formula "77") (term "0,0,1,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "77") (term "0,0,0,0,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0" (formula "77") (term "0,1,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "add_literals" (formula "77") (term "1,0,1,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "times_zero_1" (formula "77") (term "0,1,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "leq_literals" (formula "77") (term "1,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "concrete_and_3" (formula "77") (term "0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "add_literals" (formula "77") (term "1,1,0,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "times_zero_1" (formula "77") (term "1,0,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "77") (term "0,0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "qeq_literals" (formula "77") (term "0,0,1,0,0,1,1,0,1,1,0"))
                  (rule "ifthenelse_true_for" (formula "77") (term "0,1,0,0,1,1,0,1,1,0"))
                  (rule "nonNull" (formula "77") (term "0,0,0,0,0,0,0,0,0,0,0,1,0") (inst "i=i"))
                  (rule "greater_literals" (formula "77") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "concrete_impl_1" (formula "77") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "sub_literals" (formula "77") (term "2,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "nonNullZero" (formula "77") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "pullOutSelect" (formula "77") (term "1,0,0,0,0,1,0,1,0,1,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_table_0"))
                  (rule "applyEq" (formula "78") (term "1,1,1,0,0,0,0,1,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,2,1,0,0,0,0,1,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,2,0,1,0,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,0,1,0,1,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,2,0,1,0,0,0,1,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,0,0,0,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,1,0,1,0,0,0,1,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,2,0,1,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,1,0,1,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,1,0,1,0,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,1,1,1,0,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,0,0,1,0,1,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,1,1,1,0,0,0,1,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,1,1,1,0,0,1,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,1,1,1,0,0,1,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,1,1,0,1,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,1,1,1,0,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,1,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,0,0,2,0,1,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,1,0,1,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,0,0,1,0,1,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                  (rule "elementOfAllLocs" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                  (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "1") (term "0,0"))
                  (rule "ifthenelse_true" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,0,0,0,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,1,1,0,0,0,0,1,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,2,1,0,0,0,0,1,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,2,0,1,0,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,1,0,1,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,2,0,1,0,0,0,1,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,0,0,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,1,0,1,0,0,0,1,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,2,0,1,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,0,1,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,1,0,1,0,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,1,1,0,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,0,1,0,1,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,1,1,1,0,0,0,1,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,1,1,0,0,1,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,1,1,1,0,0,1,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,1,1,0,1,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,1,1,0,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,0,2,0,1,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,1,0,1,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,0,1,0,1,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "78") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "77") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_entrySet_0"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                  (rule "elementOfAllLocs" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                  (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "1") (term "0,0"))
                  (rule "ifthenelse_true" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "77") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,1,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_NULL_KEY_0"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                  (rule "elementOfAllLocs" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                  (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "1") (term "0,0"))
                  (rule "ifthenelse_true" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "77") (term "1,1,0,0,0,0,1,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_size_0"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                  (rule "elementOfAllLocs" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                  (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "1") (term "0,0"))
                  (rule "ifthenelse_true" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "78") (term "1,1,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "77") (term "0,1,0,0,0,0,0,1,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_threshold_0"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                  (rule "elementOfAllLocs" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                  (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "1") (term "0,0"))
                  (rule "ifthenelse_true" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "78") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "commute_or_2" (formula "45") (term "0"))
                  (rule "commute_or_2" (formula "46") (term "0"))
                  (rule "commute_or" (formula "47") (term "0,0,1,0"))
                  (rule "allLeft" (formula "26") (inst "t=i_1_0"))
                  (rule "replace_known_left" (formula "26") (term "0,0,0,0") (ifseqformula "56"))
                  (rule "concrete_not_1" (formula "26") (term "0,0,0"))
                  (rule "concrete_or_2" (formula "26") (term "0,0"))
                  (rule "inEqSimp_contradInEq0" (formula "26") (term "1") (ifseqformula "55"))
                  (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                  (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "26") (term "0,0,1"))
                  (rule "leq_literals" (formula "26") (term "0,1"))
                  (rule "concrete_and_2" (formula "26") (term "1"))
                  (rule "concrete_or_4" (formula "26"))
                  (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "54"))
                  (rule "qeq_literals" (formula "26") (term "0,1"))
                  (rule "concrete_and_2" (formula "26") (term "1"))
                  (rule "concrete_or_4" (formula "26"))
                  (rule "commute_or" (formula "45") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "nnf_notAnd" (formula "58") (term "0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "58") (term "0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_notLeq" (formula "58") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "58") (term "0,0,0,1,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "58") (term "0,0,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,1,1,0"))
                  (rule "nnf_notAnd" (formula "58") (term "1,0,0,1,1,0"))
                  (rule "inEqSimp_notLeq" (formula "58") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "58") (term "0,1,0,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "58") (term "0,0,0,1,1,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "58") (term "0,0,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "58") (term "0,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "58") (term "1,0,0,0,1,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "58") (term "0,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "58") (term "1,0,1,0,0,1,1,0"))
                  (rule "commute_and" (formula "45") (term "1,0,0,0,0,1,1,0"))
                  (rule "allLeft" (formula "22") (inst "t=mul(i_1_0, Z(2(#)))"))
                  (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "57"))
                  (rule "concrete_not_1" (formula "22") (term "0,0"))
                  (rule "concrete_or_2" (formula "22") (term "0"))
                  (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                  (rule "inEqSimp_contradInEq5" (formula "22") (term "0") (ifseqformula "55"))
                  (rule "greater_literals" (formula "22") (term "0,0,0"))
                  (rule "concrete_impl_1" (formula "22") (term "0,0"))
                  (rule "mul_literals" (formula "22") (term "1,0,0"))
                  (rule "qeq_literals" (formula "22") (term "0,0"))
                  (rule "concrete_and_2" (formula "22") (term "0"))
                  (rule "concrete_or_2" (formula "22"))
                  (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "22"))
                  (rule "polySimp_rightDist" (formula "53") (term "0,0"))
                  (rule "mul_literals" (formula "53") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "53") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                  (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                  (rule "polySimp_elimOne" (formula "53") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "22"))
                  (rule "polySimp_mulAssoc" (formula "33") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1"))
                  (rule "inEqSimp_contradInEq3" (formula "33") (ifseqformula "58"))
                  (rule "greater_literals" (formula "33") (term "0,0"))
                  (rule "concrete_impl_1" (formula "33") (term "0"))
                  (rule "andLeft" (formula "33"))
                  (rule "polySimp_rightDist" (formula "33") (term "0"))
                  (rule "mul_literals" (formula "33") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "33"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                  (rule "mul_literals" (formula "33") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0"))
                  (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "33") (term "0"))
                  (rule "add_literals" (formula "33") (term "1,1,0"))
                  (rule "times_zero_1" (formula "33") (term "1,0"))
                  (rule "add_zero_right" (formula "33") (term "0"))
                  (rule "leq_literals" (formula "33"))
                  (rule "closeFalse" (formula "33"))
               )
            )
         )
      )
   )
   (branch "Case 2"
      (rule "equal_literals" (formula "9") (term "0,1"))
      (rule "concrete_not_2" (formula "9") (term "1"))
      (rule "closeTrue" (formula "9"))
   )
)
(branch "Case 2"
   (rule "equal_literals" (formula "9") (term "0,1"))
   (rule "concrete_not_2" (formula "9") (term "1"))
   (rule "closeTrue" (formula "9"))
)
)
}
