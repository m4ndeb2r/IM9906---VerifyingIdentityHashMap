\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Mar 21 17:15:10 CET 2021
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , javaLoopTreatment-javaLoopTreatment\\:efficient
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=5000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\bootclasspath "../../../../jre";

\javaSource "../../../../src";

\include "../../../../functions.key";

\proofObligation "#Proof Obligation Settings
#Sun Mar 21 17:15:10 CET 2021
contract=java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap\\:\\:init(int)].JML normal_behavior operation contract.0
name=java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap\\:\\:init(int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "martindeboer" ) (keyVersion "a6034b00a3"))

(autoModeTime "14077")

(branch "dummy ID"
(rule "insert_constant_value" (formula "1") (term "1,1,0,0,1,0") (newnames "initCapacity,self,exc,heapAtPre,o,f"))
(rule "insert_constant_value" (formula "1") (term "1,1,0,0,0,1,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "2"))
(rule "notLeft" (formula "7"))
(rule "exLeft" (formula "7") (inst "sk=i_0"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "eqSymm" (formula "16") (term "1,0,0,1,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "0,1,1,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "8"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "8") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "assignment" (formula "16") (term "1"))
(rule "sequentialToParallel2" (formula "16"))
(rule "simplifyUpdate3" (formula "16") (term "1,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "8"))
(rule "polySimp_mulLiterals" (formula "8") (term "0"))
(rule "polySimp_elimOne" (formula "8") (term "0"))
(rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "10"))
(rule "leq_literals" (formula "5") (term "0"))
(rule "concrete_or_1" (formula "5"))
(rule "true_left" (formula "5"))
(rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "10"))
(rule "leq_literals" (formula "4") (term "0"))
(rule "concrete_or_1" (formula "4"))
(rule "true_left" (formula "4"))
(rule "elementOfUnion" (formula "14") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "14") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "14") (term "0,0,0,0,0,1,0,1"))
(rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "9"))
(rule "polySimp_rightDist" (formula "6") (term "0,0"))
(rule "mul_literals" (formula "6") (term "0,0,0"))
(rule "polySimp_addComm1" (formula "6") (term "0"))
(rule "add_literals" (formula "6") (term "0,0"))
(rule "inEqSimp_sepNegMonomial1" (formula "6"))
(rule "polySimp_mulLiterals" (formula "6") (term "0"))
(rule "polySimp_elimOne" (formula "6") (term "0"))
(rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_init,savedHeapBefore_init"))
(rule "simplifyUpdate2" (formula "15") (term "1"))
(rule "eval_order_access4_this" (formula "15") (term "1") (inst "#v1=x"))
(rule "variableDeclarationAssign" (formula "15") (term "1"))
(rule "variableDeclaration" (formula "15") (term "1") (newnames "x"))
(rule "compound_division_1" (formula "15") (term "1") (inst "#v=x_1"))
(rule "variableDeclarationAssign" (formula "15") (term "1"))
(rule "variableDeclaration" (formula "15") (term "1") (newnames "x_1"))
(rule "remove_parentheses_right" (formula "15") (term "1"))
(rule "assignmentMultiplicationInt" (formula "15") (term "1"))
(rule "translateJavaMulInt" (formula "15") (term "0,0,1"))
(rule "sequentialToParallel2" (formula "15"))
(rule "simplifyUpdate3" (formula "15") (term "1,0"))
(rule "applyOnElementary" (formula "15") (term "1,0"))
(rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
(rule "applyOnPV" (formula "15") (term "0,0,1,0"))
(rule "expand_mulJint" (formula "15") (term "0,1,0"))
(rule "expand_moduloInteger" (formula "15") (term "0,1,0"))
(rule "replace_int_RANGE" (formula "15") (term "1,1,0,1,0"))
(rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0,1,0"))
(rule "replace_int_MIN" (formula "15") (term "0,0,1,0"))
(rule "assignmentDivisionInt" (formula "15"))
(branch
   (rule "translateJavaDivInt" (formula "15") (term "0,0,1"))
   (rule "sequentialToParallel2" (formula "15"))
   (rule "simplifyUpdate2" (formula "15"))
   (rule "simplifyUpdate3" (formula "15") (term "1,0"))
   (rule "applyOnElementary" (formula "15") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
   (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
   (rule "assignment_write_attribute_this" (formula "15"))
   (rule "sequentialToParallel2" (formula "15"))
   (rule "simplifyUpdate2" (formula "15"))
   (rule "simplifyUpdate3" (formula "15") (term "1,0"))
   (rule "applyOnElementary" (formula "15") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
   (rule "applyOnPV" (formula "15") (term "3,0,1,0"))
   (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
   (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
   (rule "simplifyUpdate1" (formula "15") (term "0,0,1,0"))
   (rule "eval_order_access4_this" (formula "15") (term "1") (inst "#v1=o_arr"))
   (rule "variableDeclarationAssign" (formula "15") (term "1"))
   (rule "variableDeclaration" (formula "15") (term "1") (newnames "o_arr"))
   (rule "expand_divJint" (formula "15") (term "3,0,1,0"))
   (rule "expand_moduloInteger" (formula "15") (term "3,0,1,0"))
   (rule "replace_int_RANGE" (formula "15") (term "1,1,3,0,1,0"))
   (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,3,0,1,0"))
   (rule "replace_int_MIN" (formula "15") (term "0,3,0,1,0"))
   (rule "arrayCreation" (formula "15") (term "1") (inst "#v0=o_arr_1"))
   (rule "variableDeclaration" (formula "15") (term "1") (newnames "o_arr_1"))
   (rule "variableDeclarationAssign" (formula "15") (term "1"))
   (rule "variableDeclaration" (formula "15") (term "1") (newnames "dim0"))
   (rule "assignmentMultiplicationInt" (formula "15") (term "1"))
   (rule "translateJavaMulInt" (formula "15") (term "0,0,1"))
   (rule "sequentialToParallel2" (formula "15"))
   (rule "simplifyUpdate2" (formula "15"))
   (rule "simplifyUpdate3" (formula "15") (term "1,0"))
   (rule "applyOnElementary" (formula "15") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "15") (term "0,0,1,0"))
   (rule "applyOnPV" (formula "15") (term "1,0,1,0"))
   (rule "expand_mulJint" (formula "15") (term "0,1,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0"))
   (rule "expand_moduloInteger" (formula "15") (term "0,1,0"))
   (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0,1,0"))
   (rule "replace_int_MIN" (formula "15") (term "0,0,1,0"))
   (rule "replace_int_RANGE" (formula "15") (term "1,1,0,1,0"))
   (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_2"))
   (rule "less_than_comparison_simple" (formula "15") (term "1"))
   (rule "sequentialToParallel2" (formula "15"))
   (rule "simplifyUpdate3" (formula "15") (term "1,0"))
   (rule "applyOnElementary" (formula "15") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
   (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
   (rule "applyOnRigidFormula" (formula "15") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "15") (term "1,0,0,1,0"))
   (rule "applyOnPV" (formula "15") (term "0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1,0"))
   (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,1,0"))
   (rule "add_zero_right" (formula "15") (term "0,0,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,0"))
   (rule "add_literals" (formula "15") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,1,0"))
   (rule "mul_literals" (formula "15") (term "1,0,0,1,0"))
   (rule "ifSplit" (formula "15"))
   (branch "if x_2 true"
      (rule "simplifyUpdate2" (formula "16"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "ifthenelse_concrete3" (formula "1"))
      (rule "boolean_not_equal_2" (formula "1") (term "1"))
      (rule "concrete_or_4" (formula "1"))
      (rule "blockThrow" (formula "16") (term "1"))
      (rule "simplifyUpdate2" (formula "16"))
      (rule "mod_axiom" (formula "1") (term "0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
      (rule "inEqSimp_homoInEq0" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
      (rule "mul_literals" (formula "1") (term "0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=add(Z(1(#)), initCapacity)") (inst "elimGcdLeftDiv=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(initCapacity, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "leq_literals" (formula "1") (term "0,0"))
      (rule "concrete_or_2" (formula "1") (term "0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "leq_literals" (formula "1") (term "0"))
      (rule "concrete_or_2" (formula "1"))
      (rule "throwUnfold" (formula "16") (term "1") (inst "#v0=n"))
      (rule "variableDeclarationAssign" (formula "16") (term "1"))
      (rule "variableDeclaration" (formula "16") (term "1") (newnames "n"))
       (builtin "Use Operation Contract" (formula "16") (newnames "heapBefore_NegativeArraySizeException,self_0,exc_0,heapAfter_NegativeArraySizeException,anon_heap_NegativeArraySizeException") (contract "java.lang.NegativeArraySizeException[java.lang.NegativeArraySizeException::NegativeArraySizeException()].JML behavior operation contract.0"))
      (branch "Post (NegativeArraySizeException)"
         (rule "instanceof_static_type" (formula "15") (term "0,0,0,1,1,1,1,1,1,1"))
         (rule "boolean_equal" (formula "15") (term "0,0,1,1,1,1,1,1,1"))
         (rule "concrete_impl_1" (formula "15") (term "0,1,1,1,1,1,1,1"))
         (rule "simplifyUpdate2" (formula "15"))
         (rule "sequentialToParallel2" (formula "18"))
         (rule "simplifyUpdate2" (formula "18"))
         (rule "simplifyUpdate3" (formula "18") (term "1,0"))
         (rule "sequentialToParallel2" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "simplifyUpdate2" (formula "15"))
         (rule "applyOnSkip" (formula "15") (term "1,0"))
         (rule "parallelWithSkip2" (formula "15") (term "0"))
         (rule "applyOnElementary" (formula "16") (term "1,0"))
         (rule "applyOnPV" (formula "16") (term "0,1,0"))
         (rule "sequentialToParallel2" (formula "16"))
         (rule "simplifyUpdate2" (formula "16"))
         (rule "simplifyUpdate3" (formula "16") (term "1,0"))
         (rule "andLeft" (formula "16"))
         (rule "simplifyUpdate2" (formula "17"))
         (rule "andLeft" (formula "16"))
         (rule "simplifyUpdate2" (formula "16"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "17"))
         (rule "simplifyUpdate2" (formula "18"))
         (rule "andLeft" (formula "17"))
         (rule "simplifyUpdate2" (formula "17"))
         (rule "andLeft" (formula "18"))
         (rule "simplifyUpdate2" (formula "18"))
         (rule "simplifyUpdate2" (formula "19"))
         (rule "notLeft" (formula "17"))
         (rule "notLeft" (formula "17"))
         (rule "applyOnRigidFormula" (formula "15"))
         (rule "simplifyUpdate1" (formula "15") (term "1"))
         (rule "applyOnRigidFormula" (formula "19"))
         (rule "simplifyUpdate2" (formula "19") (term "0"))
         (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "16"))
         (rule "concrete_impl_1" (formula "19"))
         (rule "replace_known_left" (formula "20") (term "0,1,1") (ifseqformula "19"))
         (rule "concrete_and_1" (formula "20") (term "1,1"))
         (rule "simplifyUpdate2" (formula "20"))
         (rule "typeEqDerived" (formula "20") (term "0,0,1") (ifseqformula "16"))
         (rule "typeEqDerived" (formula "20") (term "0,1,1") (ifseqformula "16"))
         (rule "boolean_equal" (formula "20") (term "0,1"))
         (rule "boolean_equal" (formula "20") (term "1,1"))
         (rule "concrete_or_1" (formula "20") (term "1"))
         (rule "concrete_impl_4" (formula "20"))
         (rule "true_left" (formula "20"))
         (rule "applyOnRigidFormula" (formula "17"))
         (rule "simplifyUpdate1" (formula "17") (term "1"))
         (rule "applyOnRigidFormula" (formula "20"))
         (rule "simplifyUpdate1" (formula "20") (term "1"))
         (rule "applyOnRigidTerm" (formula "15") (term "0"))
         (rule "applyOnPV" (formula "15") (term "0,0"))
         (rule "simplifyUpdate1" (formula "15") (term "2,0"))
         (rule "applyOnRigidFormula" (formula "19"))
         (rule "applyOnPV" (formula "19") (term "0"))
         (rule "simplifyUpdate1" (formula "19") (term "1"))
         (rule "applyOnRigidTerm" (formula "17") (term "0"))
         (rule "applyOnPV" (formula "17") (term "0,0"))
         (rule "simplifyUpdate1" (formula "17") (term "1,0"))
         (rule "simplifyUpdate1" (formula "17") (term "2,0"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (ifseqformula "15"))
         (rule "applyOnRigidTerm" (formula "20") (term "0"))
         (rule "applyOnPV" (formula "20") (term "0,0"))
         (rule "simplifyUpdate1" (formula "20") (term "1,0"))
         (rule "simplifyUpdate1" (formula "20") (term "2,0"))
         (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "20"))
         (rule "concrete_or_2" (formula "17"))
         (rule "applyOnRigidTerm" (formula "15") (term "1,0"))
         (rule "simplifyUpdate1" (formula "15") (term "0,1,0"))
         (rule "dismissNonSelectedField" (formula "20") (term "0"))
         (rule "applyOnRigidTerm" (formula "15") (term "1,1,0"))
         (rule "applyOnPV" (formula "15") (term "0,1,1,0"))
         (rule "assignment" (formula "24") (term "1"))
         (rule "sequentialToParallel2" (formula "24"))
         (rule "simplifyUpdate3" (formula "24") (term "1,0"))
         (rule "mod_axiom" (formula "15") (term "1,0,1,0,1,3,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0,1,3,0,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,1,3,0,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,3,0,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,1,0,1,3,0,0"))
         (rule "add_zero_left" (formula "15") (term "0,0,1,0,1,3,0,0"))
         (rule "mod_axiom" (formula "15") (term "1,0,1,0,1,3,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0,1,3,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,1,3,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,3,0,1,1,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,1,0,1,3,0,1,1,0"))
         (rule "add_zero_left" (formula "15") (term "0,0,1,0,1,3,0,1,1,0"))
         (rule "methodCallThrow" (formula "24") (term "1"))
         (rule "tryCatchThrow" (formula "24") (term "1"))
         (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
         (rule "qeq_literals" (formula "1") (term "0,1,1"))
         (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
         (rule "equal_literals" (formula "1") (term "0"))
         (rule "concrete_or_2" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1,1,1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
         (rule "add_literals" (formula "3") (term "0,0,1"))
         (rule "polySimp_addComm1" (formula "3") (term "1"))
         (rule "add_literals" (formula "3") (term "0,1"))
         (rule "inEqSimp_homoInEq0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0"))
         (rule "inEqSimp_homoInEq1" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0"))
         (rule "applyEq" (formula "18") (term "0,1,0,1,0,1,3,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm0" (formula "18") (term "0,1,0,1,3,0,0"))
         (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "4"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
         (rule "polySimp_addComm1" (formula "4") (term "0"))
         (rule "applyEq" (formula "18") (term "0,1,0,1,0,1,3,0,1,1,0") (ifseqformula "1"))
         (rule "polySimp_addComm0" (formula "18") (term "0,1,0,1,3,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1"))
         (rule "polySimp_rightDist" (formula "2") (term "1"))
         (rule "mul_literals" (formula "2") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1"))
         (rule "polySimp_rightDist" (formula "3") (term "1"))
         (rule "mul_literals" (formula "3") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "4"))
         (rule "polySimp_mulComm0" (formula "4") (term "1"))
         (rule "polySimp_rightDist" (formula "4") (term "1"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
         (rule "mul_literals" (formula "4") (term "0,1"))
         (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "4"))
         (rule "greater_literals" (formula "3") (term "0,0"))
         (rule "concrete_and_1" (formula "3") (term "0"))
         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
         (rule "mul_literals" (formula "3") (term "0,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
         (rule "mul_literals" (formula "3") (term "0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
         (rule "add_literals" (formula "3") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
         (rule "add_literals" (formula "3") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "3") (term "1,0,0"))
         (rule "add_zero_right" (formula "3") (term "0,0"))
         (rule "qeq_literals" (formula "3") (term "0"))
         (rule "concrete_or_1" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(neglit(4(2(8(1(4(7(3(7(0(1(#)))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=initCapacity") (inst "elimGcd=Z(2(#))"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
         (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
         (rule "leq_literals" (formula "2") (term "0,0"))
         (rule "concrete_or_2" (formula "2") (term "0"))
         (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
         (rule "add_literals" (formula "2") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "2") (term "1,0,0"))
         (rule "add_zero_right" (formula "2") (term "0,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
         (rule "add_literals" (formula "2") (term "0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
         (rule "add_literals" (formula "2") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
         (rule "add_literals" (formula "2") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "2") (term "1,0,0"))
         (rule "add_zero_right" (formula "2") (term "0,0"))
         (rule "leq_literals" (formula "2") (term "0"))
         (rule "concrete_or_2" (formula "2"))
         (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "3"))
         (rule "polySimp_rightDist" (formula "10") (term "0,0"))
         (rule "mul_literals" (formula "10") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "10") (term "0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
         (rule "add_literals" (formula "10") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "10"))
         (rule "polySimp_mulLiterals" (formula "10") (term "0"))
         (rule "polySimp_elimOne" (formula "10") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "3"))
         (rule "mul_literals" (formula "13") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0"))
         (rule "add_literals" (formula "13") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13"))
         (rule "mul_literals" (formula "13") (term "1"))
         (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
         (rule "leq_literals" (formula "13") (term "0,0"))
         (rule "concrete_or_2" (formula "13") (term "0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
         (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
         (rule "add_literals" (formula "13") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "13") (term "1,0,0"))
         (rule "add_zero_right" (formula "13") (term "0,0"))
         (rule "leq_literals" (formula "13") (term "0"))
         (rule "concrete_or_2" (formula "13"))
         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "15"))
         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
         (rule "mul_literals" (formula "2") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0"))
         (rule "add_literals" (formula "2") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "14"))
         (rule "mul_literals" (formula "2") (term "1,1,0"))
         (rule "greater_literals" (formula "2") (term "0,0"))
         (rule "concrete_impl_1" (formula "2") (term "0"))
         (rule "qeq_literals" (formula "2") (term "0"))
         (rule "concrete_and_2" (formula "2"))
         (rule "closeFalse" (formula "2"))
      )
      (branch "Exceptional Post (NegativeArraySizeException)"
         (rule "instanceof_static_type" (formula "15") (term "0,0,0,1,1,1,1,1,1,1"))
         (rule "boolean_equal" (formula "15") (term "0,0,1,1,1,1,1,1,1"))
         (rule "concrete_impl_1" (formula "15") (term "0,1,1,1,1,1,1,1"))
         (rule "simplifyUpdate2" (formula "15"))
         (rule "sequentialToParallel2" (formula "18"))
         (rule "simplifyUpdate2" (formula "18"))
         (rule "simplifyUpdate3" (formula "18") (term "1,0"))
         (rule "sequentialToParallel2" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "simplifyUpdate2" (formula "15"))
         (rule "applyOnSkip" (formula "15") (term "1,0"))
         (rule "parallelWithSkip2" (formula "15") (term "0"))
         (rule "applyOnElementary" (formula "16") (term "1,0"))
         (rule "applyOnPV" (formula "16") (term "0,1,0"))
         (rule "sequentialToParallel2" (formula "16"))
         (rule "simplifyUpdate2" (formula "16"))
         (rule "simplifyUpdate3" (formula "16") (term "1,0"))
         (rule "andLeft" (formula "16"))
         (rule "simplifyUpdate2" (formula "17"))
         (rule "andLeft" (formula "16"))
         (rule "simplifyUpdate2" (formula "16"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "17"))
         (rule "simplifyUpdate2" (formula "18"))
         (rule "andLeft" (formula "16"))
         (rule "simplifyUpdate2" (formula "16"))
         (rule "andLeft" (formula "18"))
         (rule "simplifyUpdate2" (formula "18"))
         (rule "notLeft" (formula "16"))
         (rule "andLeft" (formula "18"))
         (rule "simplifyUpdate2" (formula "19"))
         (rule "simplifyUpdate2" (formula "18"))
         (rule "notLeft" (formula "17"))
         (rule "notLeft" (formula "17"))
         (rule "applyOnRigidFormula" (formula "15"))
         (rule "simplifyUpdate1" (formula "15") (term "1"))
         (rule "applyOnRigidFormula" (formula "19"))
         (rule "simplifyUpdate2" (formula "19") (term "0"))
         (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "23"))
         (rule "concrete_impl_2" (formula "19"))
         (rule "true_left" (formula "19"))
         (rule "applyOnRigidFormula" (formula "19"))
         (rule "simplifyUpdate2" (formula "19") (term "0"))
         (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "22"))
         (rule "concrete_not_2" (formula "19") (term "0"))
         (rule "concrete_impl_1" (formula "19"))
         (rule "andLeft" (formula "19"))
         (rule "simplifyUpdate2" (formula "20"))
         (rule "applyOnRigidFormula" (formula "16"))
         (rule "simplifyUpdate1" (formula "16") (term "1"))
         (rule "applyOnRigidFormula" (formula "17"))
         (rule "simplifyUpdate1" (formula "17") (term "1"))
         (rule "applyOnRigidFormula" (formula "21"))
         (rule "simplifyUpdate1" (formula "21") (term "1"))
         (rule "applyOnRigidTerm" (formula "15") (term "0"))
         (rule "simplifyUpdate1" (formula "15") (term "2,0"))
         (rule "applyOnPV" (formula "15") (term "0,0"))
         (rule "applyOnRigidFormula" (formula "19"))
         (rule "simplifyUpdate1" (formula "19") (term "1"))
         (rule "applyOnPV" (formula "19") (term "0"))
         (rule "applyOnRigidTerm" (formula "16") (term "0"))
         (rule "simplifyUpdate1" (formula "16") (term "1,0"))
         (rule "simplifyUpdate1" (formula "16") (term "2,0"))
         (rule "applyOnPV" (formula "16") (term "0,0"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (ifseqformula "15"))
         (rule "applyOnRigidTerm" (formula "17") (term "0"))
         (rule "applyOnPV" (formula "17") (term "0,0"))
         (rule "simplifyUpdate1" (formula "17") (term "1,0"))
         (rule "simplifyUpdate1" (formula "17") (term "2,0"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (ifseqformula "15"))
         (rule "applyOnRigidTerm" (formula "21") (term "0"))
         (rule "simplifyUpdate1" (formula "21") (term "1,0"))
         (rule "applyOnPV" (formula "21") (term "0,0"))
         (rule "simplifyUpdate1" (formula "21") (term "2,0"))
         (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "21"))
         (rule "concrete_or_2" (formula "17"))
         (rule "applyOnRigidTerm" (formula "15") (term "1,0"))
         (rule "simplifyUpdate1" (formula "15") (term "0,1,0"))
         (rule "dismissNonSelectedField" (formula "16") (term "0,0"))
         (rule "dismissNonSelectedField" (formula "21") (term "0"))
         (rule "applyOnRigidTerm" (formula "15") (term "1,1,0"))
         (rule "applyOnPV" (formula "15") (term "0,1,1,0"))
         (rule "mod_axiom" (formula "15") (term "1,0,1,0,1,3,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0,1,3,0,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,1,3,0,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,3,0,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,1,0,1,3,0,0"))
         (rule "add_zero_left" (formula "15") (term "0,0,1,0,1,3,0,0"))
         (rule "mod_axiom" (formula "15") (term "1,0,1,0,1,3,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0,1,3,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,1,3,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,3,0,1,1,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,1,0,1,3,0,1,1,0"))
         (rule "add_zero_left" (formula "15") (term "0,0,1,0,1,3,0,1,1,0"))
         (rule "methodCallThrow" (formula "26") (term "1"))
         (rule "tryCatchThrow" (formula "26") (term "1"))
         (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
         (rule "qeq_literals" (formula "1") (term "0,1,1"))
         (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
         (rule "equal_literals" (formula "1") (term "0"))
         (rule "concrete_or_2" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1,1,1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
         (rule "add_literals" (formula "3") (term "0,0,1"))
         (rule "polySimp_addComm1" (formula "3") (term "1"))
         (rule "add_literals" (formula "3") (term "0,1"))
         (rule "inEqSimp_homoInEq0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0"))
         (rule "inEqSimp_homoInEq1" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0"))
         (rule "applyEq" (formula "18") (term "0,1,0,1,0,1,3,0,1,1,0") (ifseqformula "1"))
         (rule "polySimp_addComm0" (formula "18") (term "0,1,0,1,3,0,1,1,0"))
         (rule "applyEq" (formula "18") (term "0,1,0,1,0,1,3,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm0" (formula "18") (term "0,1,0,1,3,0,0"))
         (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "4"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
         (rule "polySimp_addComm1" (formula "4") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1"))
         (rule "polySimp_rightDist" (formula "2") (term "1"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
         (rule "mul_literals" (formula "2") (term "0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1"))
         (rule "polySimp_rightDist" (formula "3") (term "1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
         (rule "mul_literals" (formula "3") (term "0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "4"))
         (rule "polySimp_mulComm0" (formula "4") (term "1"))
         (rule "polySimp_rightDist" (formula "4") (term "1"))
         (rule "mul_literals" (formula "4") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
         (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "4"))
         (rule "greater_literals" (formula "3") (term "0,0"))
         (rule "concrete_and_1" (formula "3") (term "0"))
         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
         (rule "mul_literals" (formula "3") (term "0,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
         (rule "mul_literals" (formula "3") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
         (rule "add_literals" (formula "3") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
         (rule "add_literals" (formula "3") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "3") (term "1,0,0"))
         (rule "add_zero_right" (formula "3") (term "0,0"))
         (rule "qeq_literals" (formula "3") (term "0"))
         (rule "concrete_or_1" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(neglit(4(2(8(1(4(7(3(7(0(1(#)))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=initCapacity") (inst "elimGcd=Z(2(#))"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
         (rule "leq_literals" (formula "2") (term "0,0"))
         (rule "concrete_or_2" (formula "2") (term "0"))
         (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
         (rule "add_literals" (formula "2") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "2") (term "1,0,0"))
         (rule "add_zero_right" (formula "2") (term "0,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
         (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
         (rule "add_literals" (formula "2") (term "0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
         (rule "add_literals" (formula "2") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
         (rule "add_literals" (formula "2") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "2") (term "1,0,0"))
         (rule "add_zero_right" (formula "2") (term "0,0"))
         (rule "leq_literals" (formula "2") (term "0"))
         (rule "concrete_or_2" (formula "2"))
         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "13"))
         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
         (rule "mul_literals" (formula "2") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0"))
         (rule "add_literals" (formula "2") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
         (rule "leq_literals" (formula "2") (term "0,0"))
         (rule "concrete_or_2" (formula "2") (term "0"))
         (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
         (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
         (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
         (rule "add_literals" (formula "2") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
         (rule "add_literals" (formula "2") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "2") (term "1,0,0"))
         (rule "add_zero_right" (formula "2") (term "0,0"))
         (rule "qeq_literals" (formula "2") (term "0"))
         (rule "concrete_or_2" (formula "2"))
         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "4"))
         (rule "polySimp_rightDist" (formula "11") (term "0,0"))
         (rule "mul_literals" (formula "11") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "11") (term "0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "11"))
         (rule "polySimp_mulLiterals" (formula "11") (term "0"))
         (rule "polySimp_elimOne" (formula "11") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "4"))
         (rule "mul_literals" (formula "14") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0"))
         (rule "add_literals" (formula "14") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14"))
         (rule "mul_literals" (formula "14") (term "1"))
         (rule "inEqSimp_contradInEq3" (formula "14") (ifseqformula "2"))
         (rule "greater_literals" (formula "14") (term "0,0"))
         (rule "concrete_impl_1" (formula "14") (term "0"))
         (rule "times_zero_1" (formula "14") (term "0,0"))
         (rule "qeq_literals" (formula "14") (term "0"))
         (rule "concrete_and_2" (formula "14"))
         (rule "closeFalse" (formula "14"))
      )
      (branch "Pre (NegativeArraySizeException)"
         (rule "simplifyUpdate2" (formula "16"))
         (rule "simplifyUpdate2" (formula "16") (term "1"))
         (rule "applyOnRigidFormula" (formula "16"))
         (rule "applyOnPV" (formula "16") (term "0"))
         (rule "wellFormedStorePrimitive" (formula "16"))
         (rule "close" (formula "16") (ifseqformula "2"))
      )
   )
   (branch "if x_2 false"
      (rule "false_to_not_true" (formula "1") (term "1"))
      (rule "simplifyUpdate2" (formula "16"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "applyOnRigidFormula" (formula "13"))
      (rule "applyOnPV" (formula "13") (term "0"))
      (rule "simplifyUpdate1" (formula "13") (term "1"))
      (rule "ifthenelse_concrete3" (formula "13"))
      (rule "boolean_not_equal_2" (formula "13") (term "1"))
      (rule "concrete_or_4" (formula "13"))
      (rule "inEqSimp_leqRight" (formula "13"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "mod_axiom" (formula "1") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=initCapacity") (inst "elimGcdLeftDiv=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(initCapacity, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
      (rule "neg_literal" (formula "1") (term "0,0,0,0,0,1,0"))
      (rule "leq_literals" (formula "1") (term "0,0"))
      (rule "concrete_or_2" (formula "1") (term "0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "qeq_literals" (formula "1") (term "0"))
      (rule "concrete_or_2" (formula "1"))
      (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
      (rule "qeq_literals" (formula "1") (term "0,1,1"))
      (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
      (rule "equal_literals" (formula "1") (term "0"))
      (rule "concrete_or_2" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1,1,1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
      (rule "add_literals" (formula "3") (term "0,0,1"))
      (rule "polySimp_addComm1" (formula "3") (term "1"))
      (rule "add_literals" (formula "3") (term "0,1"))
      (rule "inEqSimp_homoInEq0" (formula "2"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
      (rule "polySimp_addComm1" (formula "2") (term "0"))
      (rule "inEqSimp_homoInEq1" (formula "3"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
      (rule "polySimp_addComm1" (formula "3") (term "0"))
      (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
      (rule "inEqSimp_commuteLeq" (formula "4"))
      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1"))
      (rule "polySimp_rightDist" (formula "2") (term "1"))
      (rule "mul_literals" (formula "2") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
      (rule "polySimp_mulComm0" (formula "3") (term "1"))
      (rule "polySimp_rightDist" (formula "3") (term "1"))
      (rule "mul_literals" (formula "3") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
      (rule "inEqSimp_subsumption6" (formula "2") (ifseqformula "4"))
      (rule "greater_literals" (formula "2") (term "0,0"))
      (rule "concrete_and_1" (formula "2") (term "0"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
      (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
      (rule "mul_literals" (formula "2") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
      (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
      (rule "add_literals" (formula "2") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "2") (term "1,0,0"))
      (rule "add_zero_right" (formula "2") (term "0,0"))
      (rule "qeq_literals" (formula "2") (term "0"))
      (rule "concrete_or_1" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=initCapacity") (inst "elimGcd=Z(2(#))"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
      (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
      (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
      (rule "leq_literals" (formula "2") (term "0,0"))
      (rule "concrete_or_2" (formula "2") (term "0"))
      (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
      (rule "add_literals" (formula "2") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "2") (term "1,0,0"))
      (rule "add_zero_right" (formula "2") (term "0,0"))
      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
      (rule "add_literals" (formula "2") (term "0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
      (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
      (rule "add_literals" (formula "2") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
      (rule "add_literals" (formula "2") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "2") (term "1,0,0"))
      (rule "add_zero_right" (formula "2") (term "0,0"))
      (rule "qeq_literals" (formula "2") (term "0"))
      (rule "concrete_or_2" (formula "2"))
      (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "2"))
      (rule "mul_literals" (formula "12") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0"))
      (rule "add_literals" (formula "12") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12"))
      (rule "mul_literals" (formula "12") (term "1"))
      (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
      (rule "leq_literals" (formula "12") (term "0,0"))
      (rule "concrete_or_2" (formula "12") (term "0"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
      (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
      (rule "add_literals" (formula "12") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "12") (term "1,0,0"))
      (rule "add_zero_right" (formula "12") (term "0,0"))
      (rule "leq_literals" (formula "12") (term "0"))
      (rule "concrete_or_2" (formula "12"))
      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "14"))
      (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
      (rule "polySimp_addComm0" (formula "3") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "3"))
      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
      (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
      (rule "leq_literals" (formula "3") (term "0,0"))
      (rule "concrete_or_2" (formula "3") (term "0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
      (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
      (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
      (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
      (rule "add_literals" (formula "3") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
      (rule "add_literals" (formula "3") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "3") (term "1,0,0"))
      (rule "add_zero_right" (formula "3") (term "0,0"))
      (rule "qeq_literals" (formula "3") (term "0"))
      (rule "concrete_or_2" (formula "3"))
      (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
      (rule "polySimp_rightDist" (formula "11") (term "0,0"))
      (rule "mul_literals" (formula "11") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "11"))
      (rule "polySimp_mulLiterals" (formula "11") (term "0"))
      (rule "polySimp_elimOne" (formula "11") (term "0"))
      (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "3"))
      (rule "applyEq" (formula "11") (term "0,1,1") (ifseqformula "14"))
      (rule "times_zero_2" (formula "11") (term "1,1"))
      (rule "add_zero_right" (formula "11") (term "1"))
      (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "14"))
      (rule "qeq_literals" (formula "15"))
      (rule "true_left" (formula "15"))
      (rule "applyEqRigid" (formula "4") (term "0,1") (ifseqformula "14"))
      (rule "mul_literals" (formula "4") (term "1"))
      (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "14"))
      (rule "times_zero_2" (formula "2") (term "1,1"))
      (rule "add_zero_right" (formula "2") (term "1"))
      (rule "applyEq" (formula "3") (term "0") (ifseqformula "14"))
      (rule "leq_literals" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "applyEq" (formula "1") (term "1") (ifseqformula "13"))
      (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "9"))
      (rule "leq_literals" (formula "10") (term "0"))
      (rule "concrete_or_1" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "14"))
      (rule "leq_literals" (formula "2") (term "0"))
      (rule "concrete_or_1" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "12"))
      (rule "leq_literals" (formula "2") (term "0"))
      (rule "concrete_or_1" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "17") (term "1") (inst "#v0=o_arr_2"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "o_arr_2"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "length_1"))
      (rule "assignment" (formula "17") (term "1"))
      (rule "sequentialToParallel2" (formula "17"))
      (rule "simplifyUpdate2" (formula "17"))
      (rule "simplifyUpdate3" (formula "17") (term "1,0"))
      (rule "applyOnElementary" (formula "17") (term "1,0"))
      (rule "applyOnPV" (formula "17") (term "0,1,0"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
      (rule "simplifyUpdate2" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "newObject"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "17") (term "1") (inst "#v0=o_arr_3"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "o_arr_3"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "length_2"))
      (rule "assignment" (formula "17") (term "1"))
      (rule "sequentialToParallel2" (formula "17"))
      (rule "simplifyUpdate2" (formula "17"))
      (rule "simplifyUpdate3" (formula "17") (term "1,0"))
      (rule "applyOnElementary" (formula "17") (term "1,0"))
      (rule "applyOnPV" (formula "17") (term "0,1,0"))
      (rule "allocateInstanceWithLength" (formula "17"))
      (rule "false_to_not_true" (formula "1") (term "0,1,1,0,1"))
      (rule "simplifyUpdate2" (formula "18"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "simplifyUpdate2" (formula "2"))
      (rule "andLeft" (formula "1"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "sequentialToParallel2" (formula "20"))
      (rule "simplifyUpdate2" (formula "20"))
      (rule "simplifyUpdate3" (formula "20") (term "1,0"))
      (rule "applyOnElementary" (formula "20") (term "1,0"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "simplifyUpdate2" (formula "1") (term "0"))
      (rule "applyOnRigidTerm" (formula "20") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "20") (term "3,0,1,0"))
      (rule "simplifyUpdate1" (formula "20") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "20") (term "1,0,1,0"))
      (rule "applyOnRigidFormula" (formula "1") (term "1"))
      (rule "simplifyUpdate2" (formula "1") (term "1,1"))
      (rule "simplifyUpdate2" (formula "1") (term "0,1"))
      (rule "applyOnRigidFormula" (formula "1") (term "0"))
      (rule "applyOnPV" (formula "1") (term "0,0"))
      (rule "wellFormedStorePrimitive" (formula "1") (term "0"))
      (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "4"))
      (rule "concrete_impl_1" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "applyOnRigidTerm" (formula "21") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "21") (term "3,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "21") (term "2,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "21") (term "1,0,0,1,0"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "simplifyUpdate1" (formula "1") (term "0"))
      (rule "applyOnPV" (formula "1") (term "1"))
      (rule "applyOnRigidFormula" (formula "17"))
      (rule "simplifyUpdate1" (formula "17") (term "1"))
      (rule "applyOnRigidTerm" (formula "21") (term "0,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "21") (term "1,0,0,0,1,0"))
      (rule "applyOnPV" (formula "21") (term "0,0,0,0,1,0"))
      (rule "applyOnRigidTerm" (formula "17") (term "0"))
      (rule "simplifyUpdate1" (formula "17") (term "1,0"))
      (rule "simplifyUpdate1" (formula "17") (term "2,0"))
      (rule "applyOnPV" (formula "17") (term "0,0"))
      (rule "dismissNonSelectedField" (formula "17") (term "0"))
      (rule "blockEmpty" (formula "21") (term "1"))
      (rule "assignment" (formula "21") (term "1"))
      (rule "sequentialToParallel2" (formula "21"))
      (rule "simplifyUpdate3" (formula "21") (term "1,0"))
      (rule "mod_axiom" (formula "1") (term "1,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
      (rule "polySimp_addAssoc" (formula "1") (term "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "add_zero_left" (formula "1") (term "0,1"))
      (rule "applyEq" (formula "1") (term "0,1,1") (ifseqformula "3"))
      (rule "times_zero_2" (formula "1") (term "1,1"))
      (rule "add_zero_right" (formula "1") (term "1"))
      (rule "arrayLengthIsAShort" (formula "1") (term "0"))
      (rule "expand_inShort" (formula "1"))
      (rule "replace_short_MIN" (formula "1") (term "0,1"))
      (rule "replace_short_MAX" (formula "1") (term "1,0"))
      (rule "andLeft" (formula "1"))
      (rule "inEqSimp_commuteLeq" (formula "2"))
      (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
      (rule "inEqSimp_subsumption6" (formula "2") (ifseqformula "15"))
      (rule "mul_literals" (formula "2") (term "1,1,0"))
      (rule "greater_literals" (formula "2") (term "0,0"))
      (rule "concrete_and_1" (formula "2") (term "0"))
      (rule "leq_literals" (formula "2") (term "0"))
      (rule "concrete_or_1" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=initCapacity") (inst "elimGcd=Z(2(#))"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
      (rule "leq_literals" (formula "1") (term "0,0"))
      (rule "concrete_or_2" (formula "1") (term "0"))
      (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
      (rule "neg_literal" (formula "1") (term "0,0,0,0,0,0"))
      (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "qeq_literals" (formula "1") (term "0"))
      (rule "concrete_or_2" (formula "1"))
      (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "1"))
      (rule "leq_literals" (formula "15") (term "0"))
      (rule "concrete_or_1" (formula "15"))
      (rule "true_left" (formula "15"))
      (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
      (rule "polySimp_rightDist" (formula "11") (term "0,0"))
      (rule "mul_literals" (formula "11") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "11"))
      (rule "polySimp_mulLiterals" (formula "11") (term "0"))
      (rule "polySimp_elimOne" (formula "11") (term "0"))
      (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "11"))
      (rule "leq_literals" (formula "10") (term "0"))
      (rule "concrete_or_1" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "arrayLengthNotNegative" (formula "2") (term "0"))
      (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
      (rule "inEqSimp_subsumption6" (formula "2") (ifseqformula "15"))
      (rule "greater_literals" (formula "2") (term "0,0"))
      (rule "concrete_and_1" (formula "2") (term "0"))
      (rule "mul_literals" (formula "2") (term "1,0"))
      (rule "leq_literals" (formula "2") (term "0"))
      (rule "concrete_or_1" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "methodCall" (formula "21"))
      (branch "Normal Execution (newObject != null )"
         (rule "methodBodyExpand" (formula "21") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
         (rule "simplifyUpdate2" (formula "21") (term "1"))
         (rule "assignment_write_attribute_this" (formula "21"))
         (rule "sequentialToParallel2" (formula "21"))
         (rule "simplifyUpdate2" (formula "21"))
         (rule "simplifyUpdate3" (formula "21") (term "1,0"))
         (rule "applyOnElementary" (formula "21") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "21") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "1,0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "3,0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "2,0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "0,0,1,0"))
         (rule "applyOnPV" (formula "21") (term "1,0,1,0"))
         (rule "applyOnPV" (formula "21") (term "0,0,1,0"))
         (rule "methodCallWithinClass" (formula "21") (term "1"))
         (rule "methodBodyExpand" (formula "21") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
         (rule "simplifyUpdate2" (formula "21") (term "1"))
         (rule "arrayInitialisation" (formula "21") (term "1"))
         (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,1"))
         (rule "mul_literals" (formula "21") (term "1,2,1,0,0,1"))
         (rule "sequentialToParallel2" (formula "21"))
         (rule "simplifyUpdate2" (formula "21"))
         (rule "simplifyUpdate3" (formula "21") (term "1,0"))
         (rule "applyOnElementary" (formula "21") (term "1,0"))
         (rule "polySimp_addComm0" (formula "21") (term "2,1,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "21") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "1,0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "2,0,1,0"))
         (rule "applyOnPV" (formula "21") (term "0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "21") (term "1,0,1,0"))
         (rule "applyOnPV" (formula "21") (term "0,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "1,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "21") (term "2,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "0,2,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "21") (term "1,2,1,0,1,0"))
         (rule "applyOnPV" (formula "21") (term "0,1,2,1,0,1,0"))
         (rule "applyEq" (formula "21") (term "1,2,1,0,1,0") (ifseqformula "2"))
         (rule "methodCallEmpty" (formula "21") (term "1"))
         (rule "blockEmpty" (formula "21") (term "1"))
         (rule "assignment_write_attribute_this" (formula "21"))
         (rule "sequentialToParallel2" (formula "21"))
         (rule "simplifyUpdate2" (formula "21"))
         (rule "simplifyUpdate3" (formula "21") (term "1,0"))
         (rule "applyOnElementary" (formula "21") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "21") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "3,0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "2,0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "1,0,1,0"))
         (rule "applyOnPV" (formula "21") (term "0,0,1,0"))
         (rule "applyOnPV" (formula "21") (term "1,0,1,0"))
         (rule "methodCallReturnIgnoreResult" (formula "21") (term "1"))
         (rule "blockEmpty" (formula "21") (term "1"))
         (rule "methodCallReturn" (formula "21") (term "1"))
         (rule "assignment" (formula "21") (term "1"))
         (rule "sequentialToParallel2" (formula "21"))
         (rule "simplifyUpdate2" (formula "21"))
         (rule "simplifyUpdate3" (formula "21") (term "1,0"))
         (rule "applyOnElementary" (formula "21") (term "1,0"))
         (rule "applyOnPV" (formula "21") (term "0,1,0"))
         (rule "methodCallEmpty" (formula "21") (term "1"))
         (rule "blockEmpty" (formula "21") (term "1"))
         (rule "assignment" (formula "21") (term "1"))
         (rule "sequentialToParallel2" (formula "21"))
         (rule "simplifyUpdate2" (formula "21"))
         (rule "simplifyUpdate3" (formula "21") (term "1,0"))
         (rule "applyOnElementary" (formula "21") (term "1,0"))
         (rule "applyOnPV" (formula "21") (term "0,1,0"))
         (rule "blockEmpty" (formula "21") (term "1"))
         (rule "assignment" (formula "21") (term "1"))
         (rule "sequentialToParallel2" (formula "21"))
         (rule "simplifyUpdate2" (formula "21"))
         (rule "simplifyUpdate3" (formula "21") (term "1,0"))
         (rule "applyOnElementary" (formula "21") (term "1,0"))
         (rule "applyOnPV" (formula "21") (term "0,1,0"))
         (rule "assignment_write_attribute_this" (formula "21"))
         (rule "sequentialToParallel2" (formula "21"))
         (rule "simplifyUpdate2" (formula "21"))
         (rule "simplifyUpdate3" (formula "21") (term "1,0"))
         (rule "applyOnElementary" (formula "21") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "21") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "2,0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "3,0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "1,0,1,0"))
         (rule "applyOnPV" (formula "21") (term "3,0,1,0"))
         (rule "applyOnPV" (formula "21") (term "0,0,1,0"))
         (rule "assignment_write_attribute_this" (formula "21"))
         (rule "sequentialToParallel2" (formula "21"))
         (rule "simplifyUpdate2" (formula "21"))
         (rule "simplifyUpdate3" (formula "21") (term "1,0"))
         (rule "applyOnElementary" (formula "21") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "21") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "3,0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "2,0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "1,0,1,0"))
         (rule "applyOnPV" (formula "21") (term "0,0,1,0"))
         (rule "emptyStatement" (formula "21") (term "1"))
         (rule "methodCallEmpty" (formula "21") (term "1"))
         (rule "tryEmpty" (formula "21") (term "1"))
         (rule "emptyModality" (formula "21") (term "1"))
         (rule "applyOnRigidFormula" (formula "21"))
         (rule "simplifyUpdate2" (formula "21") (term "1"))
         (rule "simplifyUpdate2" (formula "21") (term "0"))
         (rule "applyOnRigidFormula" (formula "21") (term "1"))
         (rule "applyOnRigidFormula" (formula "21") (term "0"))
         (rule "simplifyUpdate2" (formula "21") (term "0,0"))
         (rule "simplifyUpdate2" (formula "21") (term "1,0"))
         (rule "applyOnRigidFormula" (formula "21") (term "0,1"))
         (rule "applyOnRigidFormula" (formula "21") (term "0,0"))
         (rule "applyOnRigidFormula" (formula "21") (term "1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "1,1,0"))
         (rule "applyOnPV" (formula "21") (term "0,1,0"))
         (rule "eqClose" (formula "21") (term "1,0"))
         (rule "concrete_and_3" (formula "21") (term "0"))
         (rule "applyOnRigidFormula" (formula "21") (term "0,0,1"))
         (rule "simplifyUpdate2" (formula "21") (term "0,0,0,1"))
         (rule "applyOnRigidFormula" (formula "21") (term "0,0"))
         (rule "applyOnRigidFormula" (formula "21") (term "1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "1,1,0"))
         (rule "applyOnPV" (formula "21") (term "0,1,0"))
         (rule "applyOnRigidFormula" (formula "21") (term "1,0,0,1"))
         (rule "simplifyUpdate1" (formula "21") (term "0,1,0,0,1"))
         (rule "simplifyUpdate1" (formula "21") (term "1,1,0,0,1"))
         (rule "applyOnRigidFormula" (formula "21") (term "0,0,0,1"))
         (rule "simplifyUpdate2" (formula "21") (term "0,0,0,0,1"))
         (rule "applyOnRigidFormula" (formula "21") (term "0,0,0"))
         (rule "applyOnRigidFormula" (formula "21") (term "1,0,0"))
         (rule "simplifyUpdate1" (formula "21") (term "1,1,0,0"))
         (rule "applyOnRigidTerm" (formula "21") (term "0,1,0,0,1"))
         (rule "simplifyUpdate1" (formula "21") (term "1,0,1,0,0,1"))
         (rule "simplifyUpdate1" (formula "21") (term "2,0,1,0,0,1"))
         (rule "applyOnPV" (formula "21") (term "0,0,1,0,0,1"))
         (rule "eqSymm" (formula "21") (term "1,0,0,1"))
         (rule "applyOnRigidFormula" (formula "21") (term "1,0,0,0,1"))
         (rule "simplifyUpdate2" (formula "21") (term "0,1,0,0,0,1"))
         (rule "applyOnRigidFormula" (formula "21") (term "0,0,0,0"))
         (rule "simplifyUpdate1" (formula "21") (term "1,0,0,0,0"))
         (rule "applyOnRigidFormula" (formula "21") (term "1,0,0,0"))
         (rule "simplifyUpdate1" (formula "21") (term "1,1,0,0,0"))
         (rule "applyOnRigidTerm" (formula "21") (term "0,1,0,0"))
         (rule "applyOnRigidTerm" (formula "21") (term "0,1,0,0,1"))
         (rule "simplifyUpdate1" (formula "21") (term "2,0,1,0,0,1"))
         (rule "simplifyUpdate1" (formula "21") (term "1,0,1,0,0,1"))
         (rule "applyOnPV" (formula "21") (term "0,0,1,0,0,1"))
         (rule "applyOnRigidFormula" (formula "21") (term "1,1,0,0,0,1"))
         (rule "applyOnRigidTerm" (formula "21") (term "0,0,0,0,0"))
         (rule "simplifyUpdate1" (formula "21") (term "2,0,0,0,0,0"))
         (rule "simplifyUpdate1" (formula "21") (term "1,0,0,0,0,0"))
         (rule "applyOnPV" (formula "21") (term "0,0,0,0,0,0"))
         (rule "applyOnRigidTerm" (formula "21") (term "0,1,0,0,0"))
         (rule "simplifyUpdate1" (formula "21") (term "1,0,1,0,0,0"))
         (rule "simplifyUpdate1" (formula "21") (term "2,0,1,0,0,0"))
         (rule "applyOnPV" (formula "21") (term "0,0,1,0,0,0"))
         (rule "applyOnRigidTerm" (formula "21") (term "0,0,1,0,0"))
         (rule "simplifyUpdate1" (formula "21") (term "2,0,0,1,0,0"))
         (rule "applyOnPV" (formula "21") (term "0,0,0,1,0,0"))
         (rule "simplifyUpdate1" (formula "21") (term "1,0,0,1,0,0"))
         (rule "applyOnRigidFormula" (formula "21") (term "0,1,1,0,0,0,1"))
         (rule "simplifyUpdate1" (formula "21") (term "1,0,1,1,0,0,0,1"))
         (rule "dismissNonSelectedField" (formula "21") (term "0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,0,0"))
         (rule "applyOnRigidTerm" (formula "21") (term "0,0,1,1,0,0,0,1"))
         (rule "simplifyUpdate1" (formula "21") (term "1,0,0,1,1,0,0,0,1"))
         (rule "applyOnPV" (formula "21") (term "0,0,0,1,1,0,0,0,1"))
         (rule "simplifyUpdate1" (formula "21") (term "2,0,0,1,1,0,0,0,1"))
         (rule "dismissNonSelectedField" (formula "21") (term "0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "21") (term "0,1,0,0,0"))
         (rule "mod_axiom" (formula "21") (term "1,0,1,0,1,3,0,0,0,0,0,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,0,1,3,0,0,0,0,0,0,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,1,3,0,0,0,0,0,0,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,1,0"))
         (rule "add_literals" (formula "21") (term "0,0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,1,0"))
         (rule "add_zero_left" (formula "21") (term "0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,1,0"))
         (rule "applyEq" (formula "21") (term "0,1,0,1,0,1,3,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "4"))
         (rule "times_zero_2" (formula "21") (term "1,0,1,0,1,3,0,0,0,0,0,0,0,0,0,1,0"))
         (rule "add_zero_right" (formula "21") (term "0,1,0,1,3,0,0,0,0,0,0,0,0,0,1,0"))
         (rule "mod_axiom" (formula "21") (term "1,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "add_literals" (formula "21") (term "0,0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "add_zero_left" (formula "21") (term "0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "applyEq" (formula "21") (term "0,1,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1") (ifseqformula "4"))
         (rule "times_zero_2" (formula "21") (term "1,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "add_zero_right" (formula "21") (term "0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "mod_axiom" (formula "21") (term "1,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "21") (term "0,0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "21") (term "0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "applyEq" (formula "21") (term "0,1,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "4"))
         (rule "mul_literals" (formula "21") (term "1,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "21") (term "0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "mod_axiom" (formula "21") (term "1,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0"))
         (rule "add_literals" (formula "21") (term "0,0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "21") (term "0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0"))
         (rule "applyEq" (formula "21") (term "0,1,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0") (ifseqformula "4"))
         (rule "mul_literals" (formula "21") (term "1,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "21") (term "0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0"))
         (rule "mod_axiom" (formula "21") (term "1,0,1,0,1,3,0,0,0,0,0,0,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,0,1,3,0,0,0,0,0,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,1,3,0,0,0,0,0,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,1,3,0,0,0,0,0,0,0,1,0,0,0"))
         (rule "add_literals" (formula "21") (term "0,0,0,1,0,1,3,0,0,0,0,0,0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "21") (term "0,0,1,0,1,3,0,0,0,0,0,0,0,1,0,0,0"))
         (rule "applyEq" (formula "21") (term "0,1,0,1,0,1,3,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "4"))
         (rule "times_zero_2" (formula "21") (term "1,0,1,0,1,3,0,0,0,0,0,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "21") (term "0,1,0,1,3,0,0,0,0,0,0,0,1,0,0,0"))
         (rule "pullOutSelect" (formula "21") (term "0,0,0,0,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_initialised_0"))
         (rule "simplifySelectOfStore" (formula "1"))
         (rule "eqClose" (formula "1") (term "0,0,0,0"))
         (rule "concrete_and_1" (formula "1") (term "0,0,0"))
         (rule "eqClose" (formula "1") (term "0,0,0"))
         (rule "concrete_and_1" (formula "1") (term "0,0"))
         (rule "equalUnique" (formula "1") (term "0,0,0"))
         (rule "concrete_not_2" (formula "1") (term "0,0"))
         (rule "ifthenelse_true" (formula "1") (term "0"))
         (rule "castDel" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "22") (term "0,0,0,0,0") (ifseqformula "1"))
         (rule "boolean_equal" (formula "22") (term "0,0,0,0"))
         (rule "concrete_and_1" (formula "22") (term "0,0,0"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "21") (term "0,0,1,0,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_table_0"))
         (rule "simplifySelectOfStore" (formula "1"))
         (rule "eqClose" (formula "1") (term "1,0,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0,0"))
         (rule "eqClose" (formula "1") (term "0,0,0"))
         (rule "concrete_and_1" (formula "1") (term "0,0"))
         (rule "equalUnique" (formula "1") (term "0,0,0"))
         (rule "concrete_not_2" (formula "1") (term "0,0"))
         (rule "ifthenelse_true" (formula "1") (term "0"))
         (rule "castDel" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "22") (term "0,0,1,0,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_left" (formula "21") (term "1,0,0") (ifseqformula "2"))
         (rule "concrete_and_3" (formula "21") (term "0,0"))
         (rule "pullOutSelect" (formula "21") (term "0,0,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_threshold_0"))
         (rule "simplifySelectOfMemset" (formula "1"))
         (rule "equalUnique" (formula "1") (term "0,1,0,0"))
         (rule "concrete_not_2" (formula "1") (term "1,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
         (rule "equalUnique" (formula "1") (term "0,0,0,1,0,0"))
         (rule "concrete_and_2" (formula "1") (term "0,0,1,0,0"))
         (rule "concrete_and_2" (formula "1") (term "0,1,0,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "19"))
         (rule "concrete_and_2" (formula "1") (term "0,0,0"))
         (rule "concrete_and_2" (formula "1") (term "0,0"))
         (rule "ifthenelse_false" (formula "1") (term "0"))
         (rule "simplifySelectOfCreate" (formula "1"))
         (rule "equalUnique" (formula "1") (term "1,0,0"))
         (rule "concrete_and_4" (formula "1") (term "0,0"))
         (rule "ifthenelse_false" (formula "1") (term "0"))
         (rule "simplifySelectOfStore" (formula "1"))
         (rule "eqClose" (formula "1") (term "1,0,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0,0"))
         (rule "eqClose" (formula "1") (term "0,0,0"))
         (rule "concrete_and_1" (formula "1") (term "0,0"))
         (rule "equalUnique" (formula "1") (term "0,0,0"))
         (rule "concrete_not_2" (formula "1") (term "0,0"))
         (rule "ifthenelse_true" (formula "1") (term "0"))
         (rule "castDel" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "22") (term "0,0,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "polySimp_homoEq" (formula "21") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
         (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0"))
         (rule "polySimp_sepNegMonomial" (formula "21") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
         (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
         (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "16") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "7"))
         (rule "insert_constant_value" (formula "16") (term "1,1,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "16") (term "0,0,1,1,0,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "16") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "eqClose" (formula "16") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_3" (formula "16") (term "0,0,1,0,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "16") (term "0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "16") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "eqClose" (formula "16") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_3" (formula "16") (term "0,0,1,0,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "16") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "eqClose" (formula "16") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_3" (formula "16") (term "0,0,1,0,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "18"))
         (rule "notLeft" (formula "17"))
         (rule "andLeft" (formula "16"))
         (rule "notLeft" (formula "18"))
         (rule "notLeft" (formula "17"))
         (rule "exLeft" (formula "24") (inst "sk=i_1_0"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "exLeft" (formula "23") (inst "sk=i_2_0"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "23"))
         (rule "eqSymm" (formula "22"))
         (rule "eqSymm" (formula "20") (term "1,1,0,1,0"))
         (rule "eqSymm" (formula "20") (term "1,0,1,0,1,0"))
         (rule "eqSymm" (formula "25"))
         (rule "polySimp_mulComm0" (formula "30") (term "0,2,1,1,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "0,2,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "0,2,0,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "0,2,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "0,2,1,1,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "0,2,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "0,2,0,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "0,2,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "0,2,0,0,0,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "0,2,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "0,2,0,0,0,2,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "0,2,1,1,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "0,2,0,1,0,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "19") (term "0,2,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "21"))
         (rule "mul_literals" (formula "21") (term "1,0,0"))
         (rule "add_literals" (formula "21") (term "0,0"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "27") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "24"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "24") (term "0"))
         (rule "ifthenelse_negated" (formula "22") (term "2,0"))
         (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_addComm1" (formula "30") (term "0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "30") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_mulAssoc" (formula "30") (term "1,0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,1,0,0,1,1,0"))
         (rule "inEqSimp_gtToGeq" (formula "29") (term "1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_addComm1" (formula "29") (term "0,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
         (rule "inEqSimp_commuteGeq" (formula "18"))
         (rule "inEqSimp_commuteLeq" (formula "17"))
         (rule "inEqSimp_commuteLeq" (formula "26"))
         (rule "inEqSimp_commuteLeq" (formula "23"))
         (rule "inEqSimp_commuteLeq" (formula "30") (term "0,1,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,1,1,0"))
         (rule "applyEq" (formula "29") (term "2,0,1,0,0,0,1,1,0") (ifseqformula "25"))
         (rule "applyEq" (formula "30") (term "2,1,0,0,0,0,1,1,0") (ifseqformula "25"))
         (rule "applyEq" (formula "18") (term "0") (ifseqformula "25"))
         (rule "applyEq" (formula "22") (term "0,1,0") (ifseqformula "25"))
         (rule "applyEq" (formula "17") (term "0") (ifseqformula "25"))
         (rule "applyEq" (formula "30") (term "2,0,1,0,1,0,1,0") (ifseqformula "25"))
         (rule "applyEq" (formula "27") (term "0,0,1,0") (ifseqformula "25"))
         (rule "applyEq" (formula "24") (term "0,1,0") (ifseqformula "25"))
         (rule "applyEq" (formula "29") (term "2,0,1,0,1,0,1,0") (ifseqformula "25"))
         (rule "applyEq" (formula "29") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
         (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
         (rule "applyEq" (formula "20") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "25"))
         (rule "applyEq" (formula "20") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
         (rule "applyEq" (formula "22") (term "1") (ifseqformula "15"))
         (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "25"))
         (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "21"))
         (rule "mul_literals" (formula "21") (term "1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,1,1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "30") (term "1,1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "30") (term "0,1,1,1,0,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "30") (term "0,1,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0"))
         (rule "polySimp_elimOne" (formula "27") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "24"))
         (rule "polySimp_mulLiterals" (formula "24") (term "0"))
         (rule "polySimp_elimOne" (formula "24") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "29") (term "0,1,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,0"))
         (rule "mul_literals" (formula "20") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "16") (inst "i=i"))
         (rule "greater_literals" (formula "16") (term "0,1"))
         (rule "concrete_impl_1" (formula "16") (term "1"))
         (rule "sub_literals" (formula "16") (term "2,1,0,1"))
         (rule "nonNullZero" (formula "16") (term "1,0,1"))
         (rule "andLeft" (formula "16"))
         (rule "notLeft" (formula "16"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
         (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "25"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
         (rule "elimGcdLeq" (formula "30") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,1,1,0,0,1,1,0"))
         (rule "sub_literals" (formula "30") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "30") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,0,1,1,0,0,1,1,0"))
         (rule "add_literals" (formula "30") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "30") (term "1,0,0,0,1,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "30") (term "0,0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,1,0,1,1,0,0,1,1,0"))
         (rule "add_literals" (formula "30") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "30") (term "1,0,1,0,1,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "30") (term "0,1,0,1,1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "30") (term "0,0,1,0,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "30") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,1,1,0,0,1,1,0"))
         (rule "add_literals" (formula "30") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "30") (term "0,1,0,1,1,0,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "30") (term "0,0,1,0,1,1,0,0,1,1,0"))
         (rule "add_literals" (formula "30") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,1,0,1,1,0,0,1,1,0"))
         (rule "add_literals" (formula "30") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "30") (term "1,0,1,0,1,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "30") (term "0,1,0,1,1,0,0,1,1,0"))
         (rule "qeq_literals" (formula "30") (term "1,0,1,1,0,0,1,1,0"))
         (rule "concrete_and_3" (formula "30") (term "0,1,1,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1,1,0,0,1,1,0"))
         (rule "add_literals" (formula "30") (term "0,0,0,0,1,1,0,0,1,1,0"))
         (rule "add_zero_left" (formula "30") (term "0,0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0" (formula "30") (term "0,0,1,1,0,0,1,1,0"))
         (rule "add_literals" (formula "30") (term "1,0,0,1,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "30") (term "0,0,1,1,0,0,1,1,0"))
         (rule "leq_literals" (formula "30") (term "0,1,1,0,0,1,1,0"))
         (rule "ifthenelse_true_for" (formula "30") (term "1,1,0,0,1,1,0"))
         (rule "elimGcdGeq" (formula "30") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
         (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,0,1,0,0,1,0,0,1,1,0"))
         (rule "sub_literals" (formula "30") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,0,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "30") (term "0,0,0,0,1,0,0,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0,0,1,0,0,1,1,0"))
         (rule "add_zero_left" (formula "30") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
         (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,0,0,1,0,0,1,1,0"))
         (rule "add_literals" (formula "30") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "30") (term "0,0,0,0,1,0,0,1,1,0"))
         (rule "qeq_literals" (formula "30") (term "0,0,0,1,0,0,1,1,0"))
         (rule "concrete_and_1" (formula "30") (term "0,0,1,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0" (formula "30") (term "0,0,0,1,0,0,1,1,0"))
         (rule "add_literals" (formula "30") (term "1,0,0,0,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "30") (term "0,0,0,1,0,0,1,1,0"))
         (rule "leq_literals" (formula "30") (term "0,0,1,0,0,1,1,0"))
         (rule "ifthenelse_true_for" (formula "30") (term "0,1,0,0,1,1,0"))
         (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "18"))
         (rule "polySimp_rightDist" (formula "24") (term "0,0"))
         (rule "mul_literals" (formula "24") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "24") (term "0"))
         (rule "add_literals" (formula "24") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "24"))
         (rule "polySimp_mulLiterals" (formula "24") (term "0"))
         (rule "polySimp_elimOne" (formula "24") (term "0"))
         (rule "nnf_imp2or" (formula "19") (term "1,0"))
         (rule "nnf_imp2or" (formula "20") (term "1,0,1,0"))
         (rule "nnf_imp2or" (formula "30") (term "0"))
         (rule "nnf_imp2or" (formula "16") (term "0"))
         (rule "nnf_imp2or" (formula "31") (term "0"))
         (rule "nnf_imp2or" (formula "19") (term "0"))
         (rule "nnf_imp2or" (formula "20") (term "0"))
         (rule "nnf_notAnd" (formula "30") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
         (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
         (rule "mul_literals" (formula "30") (term "1,0,0,0"))
         (rule "nnf_imp2or" (formula "30") (term "1,0"))
         (rule "nnf_notAnd" (formula "16") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
         (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
         (rule "mul_literals" (formula "16") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "31") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
         (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
         (rule "mul_literals" (formula "31") (term "1,0,0,0"))
         (rule "nnf_imp2or" (formula "31") (term "1,0"))
         (rule "nnf_notAnd" (formula "19") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
         (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
         (rule "mul_literals" (formula "19") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "20") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
         (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
         (rule "mul_literals" (formula "20") (term "1,0,0,0"))
         (rule "nnf_imp2or" (formula "20") (term "0,1,0"))
         (rule "commute_and" (formula "39") (term "0"))
         (rule "nnf_notAnd" (formula "30") (term "0,1,0"))
         (rule "double_not" (formula "30") (term "0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "30") (term "1,0,1,0"))
         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,1,0"))
         (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,1,0"))
         (rule "add_literals" (formula "30") (term "0,0,0,1,0,1,0"))
         (rule "add_zero_left" (formula "30") (term "0,0,1,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,0"))
         (rule "nnf_imp2or" (formula "30") (term "0,1,1,0"))
         (rule "nnf_notAnd" (formula "31") (term "0,1,0"))
         (rule "double_not" (formula "31") (term "0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "31") (term "1,0,1,0"))
         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,1,0"))
         (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,1,0"))
         (rule "add_literals" (formula "31") (term "0,0,0,1,0,1,0"))
         (rule "add_zero_left" (formula "31") (term "0,0,1,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,0"))
         (rule "nnf_imp2or" (formula "31") (term "0,1,1,0"))
         (rule "nnf_notAnd" (formula "20") (term "0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,0"))
         (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1,0"))
         (rule "jdiv_axiom" (formula "39") (term "1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
         (rule "eqSymm" (formula "1"))
         (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "15"))
         (rule "mul_literals" (formula "1") (term "1,1,0,0,0"))
         (rule "greater_literals" (formula "1") (term "0,0,0,0"))
         (rule "concrete_and_1" (formula "1") (term "0,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0,0"))
         (rule "concrete_or_1" (formula "1") (term "0,0"))
         (rule "ifthenelse_true" (formula "1") (term "0"))
         (rule "eqSymm" (formula "1"))
         (rule "applyEq" (formula "40") (term "1,0,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "40") (term "1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1") (ifseqformula "1"))
         (rule "applyEq" (formula "40") (term "1,0,1,3,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "40") (term "1,1,1,0") (ifseqformula "1"))
         (rule "polyDiv_pullOut" (formula "40") (term "1,1,1,0") (inst "polyDivCoeff=initCapacity"))
         (rule "equal_literals" (formula "40") (term "0,1,1,1,0"))
         (rule "ifthenelse_false" (formula "40") (term "1,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,1,1,0"))
         (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0,1,1,1,0"))
         (rule "add_literals" (formula "40") (term "1,0,0,1,1,1,0"))
         (rule "polySimp_addComm0" (formula "40") (term "1,1,1,0"))
         (rule "polySimp_addAssoc" (formula "40") (term "1,1,0"))
         (rule "polyDiv_pullOut" (formula "40") (term "1,0,1,3,0,0,0,0,0,0,0,0,0,0,0") (inst "polyDivCoeff=initCapacity"))
         (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,2,1,0,1,3,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "equal_literals" (formula "40") (term "0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "ifthenelse_false" (formula "40") (term "1,0,1,3,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "40") (term "1,0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "40") (term "1,0,1,3,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "40") (term "0,1,3,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "polyDiv_pullOut" (formula "40") (term "1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1") (inst "polyDivCoeff=initCapacity"))
         (rule "equal_literals" (formula "40") (term "0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "ifthenelse_false" (formula "40") (term "1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "add_literals" (formula "40") (term "1,0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "40") (term "1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "polySimp_addAssoc" (formula "40") (term "0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "polyDiv_pullOut" (formula "40") (term "1,0,0,1,0") (inst "polyDivCoeff=initCapacity"))
         (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,2,1,0,0,1,0"))
         (rule "equal_literals" (formula "40") (term "0,1,0,0,1,0"))
         (rule "ifthenelse_false" (formula "40") (term "1,0,0,1,0"))
         (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "40") (term "1,0,0,1,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "40") (term "1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0"))
         (rule "polyDiv_pullOut" (formula "1") (term "1") (inst "polyDivCoeff=initCapacity"))
         (rule "equal_literals" (formula "1") (term "0,1"))
         (rule "ifthenelse_false" (formula "1") (term "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
         (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,1"))
         (rule "add_literals" (formula "1") (term "1,0,0,1"))
         (rule "polySimp_addComm0" (formula "1") (term "1"))
         (rule "nnf_notAnd" (formula "21") (term "0,1,0,1,0"))
         (rule "double_not" (formula "21") (term "0,0,1,0,1,0"))
         (rule "nnf_notAnd" (formula "31") (term "0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "31") (term "0,1,0,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,1,1,0"))
         (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,1,1,0"))
         (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,1,1,0"))
         (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,1,0"))
         (rule "nnf_notOr" (formula "32") (term "0,0,1,1,0"))
         (rule "nnf_notAnd" (formula "32") (term "1,0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "32") (term "0,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "32") (term "1,0,0,0,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "32") (term "1,0,1,0,0,1,1,0"))
         (rule "inEqSimp_notLeq" (formula "32") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "32") (term "0,1,0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,1,0,0,1,1,0"))
         (rule "add_literals" (formula "32") (term "0,0,0,1,1,0,0,1,1,0"))
         (rule "add_zero_left" (formula "32") (term "0,0,1,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,1,0"))
         (rule "nnf_notAnd" (formula "32") (term "0,0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,1,1,0"))
         (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,1,1,0"))
         (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0,1,1,0"))
         (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,1,1,0"))
         (rule "commute_or_2" (formula "17") (term "0"))
         (rule "commute_or_2" (formula "20") (term "0"))
         (rule "jdiv_axiom" (formula "23") (term "1,0"))
         (rule "eqSymm" (formula "23"))
         (rule "inEqSimp_subsumption1" (formula "23") (term "0,0") (ifseqformula "18"))
         (rule "leq_literals" (formula "23") (term "0,0,0"))
         (rule "concrete_or_1" (formula "23") (term "0,0"))
         (rule "ifthenelse_true" (formula "23") (term "0"))
         (rule "eqSymm" (formula "23"))
         (rule "applyEq" (formula "21") (term "1,1,0,0,1,0") (ifseqformula "23"))
         (rule "applyEqRigid" (formula "21") (term "1,1,0,0") (ifseqformula "23"))
         (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "23"))
         (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "23"))
         (rule "applyEq" (formula "32") (term "1,1,0,0") (ifseqformula "23"))
         (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "23"))
         (rule "applyEq" (formula "33") (term "1,1,0,0") (ifseqformula "23"))
         (rule "arrayLengthNotNegative" (formula "28") (term "0"))
         (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
         (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "18"))
         (rule "leq_literals" (formula "28") (term "0"))
         (rule "concrete_or_1" (formula "28"))
         (rule "true_left" (formula "28"))
         (rule "arrayLengthIsAShort" (formula "28") (term "0"))
         (rule "expand_inShort" (formula "28"))
         (rule "replace_short_MIN" (formula "28") (term "0,1"))
         (rule "replace_short_MAX" (formula "28") (term "1,0"))
         (rule "andLeft" (formula "28"))
         (rule "inEqSimp_commuteLeq" (formula "29"))
         (rule "applyEq" (formula "28") (term "0") (ifseqformula "30"))
         (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
         (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "28"))
         (rule "leq_literals" (formula "19") (term "0"))
         (rule "concrete_or_1" (formula "19"))
         (rule "true_left" (formula "19"))
         (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "18"))
         (rule "leq_literals" (formula "28") (term "0"))
         (rule "concrete_or_1" (formula "28"))
         (rule "true_left" (formula "28"))
         (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
         (rule "polySimp_rightDist" (formula "26") (term "0,0"))
         (rule "mul_literals" (formula "26") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "26") (term "0"))
         (rule "add_literals" (formula "26") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "26"))
         (rule "polySimp_mulLiterals" (formula "26") (term "0"))
         (rule "polySimp_elimOne" (formula "26") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "25") (ifseqformula "26"))
         (rule "leq_literals" (formula "25") (term "0"))
         (rule "concrete_or_1" (formula "25"))
         (rule "true_left" (formula "25"))
         (rule "commute_or" (formula "17") (term "0,0"))
         (rule "commute_or" (formula "19") (term "0,0"))
         (rule "commute_or_2" (formula "32") (term "0,1,1,0"))
         (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "41") (term "0,0") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "8"))
         (rule "insert_constant_value" (formula "41") (term "1,1,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "41") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "41") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "41") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "eqClose" (formula "41") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_3" (formula "41") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "41") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "eqClose" (formula "41") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_3" (formula "41") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "41") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "eqClose" (formula "41") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_3" (formula "41") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "41") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "eqSymm" (formula "41") (term "1,0,0,0,0,0,0"))
         (rule "eqSymm" (formula "41") (term "1,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "eqSymm" (formula "41") (term "1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "0,2,1,0,0,0,0,0,1,1,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "0,2,1,0,0,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,1,0,1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,1,0,1,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "0,2,1,1,1,0,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,0,0,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "0,1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "0,2,1,1,1,0,1,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,1,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,0,0,1,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,1,0,1,1,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,0,2,0,1,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "0,2,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "41") (term "0,2,0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,1,1,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,1,1,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,1,0,0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,1,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,0,0,1,0,1,1,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,0,0,1,0,1,1,0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,1,1,0,0,1,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,1,0,0,0,0,0,1,1,0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,1,0,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,1,1,1,0,1,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,1,0,0,1,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,2,0,0,0,0,0,1,1,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,0,1,0,1,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,0,0,0,0,1,0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,2,0,0,0,0,0,1,1,0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,2,1,1,0,1,0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,1,1,0,0,0,1,1,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,1,1,0,1,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,1,1,1,0,1,0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,1,0,0,0,0,0,1,1,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,0,0,0,0,1,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,2,1,1,0,1,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,0,1,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,0,0,0,2,0,1,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,1,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,1,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,1,0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,1,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,0,1,1,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "41") (term "1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulAssoc" (formula "41") (term "1,0,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,0,1,1,0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,0,0,0,0,0,1,1,0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,1,1,0,1,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,1,0,1,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,0,0,1,0,1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,1,0,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,1,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,1,1,0,1,0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,0,0,0,0,0,1,1,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,0,0,1,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
         (rule "ifthenelse_negated" (formula "41") (term "2,0,1,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,1,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,0,1,1,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,0,1,1,0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,0,0,0,0,0,1,1,0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,1,1,0,1,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,1,0,1,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,0,0,1,0,1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "41") (term "0,1,0,0,1,1,0,1,0,0"))
         (rule "inEqSimp_commuteGeq" (formula "41") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "41") (term "1,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,1,1,0,1,0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,0,0,0,0,0,1,1,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,0,0,1,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,2,0,1,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,1,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,0,1,1,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,0,1,1,0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,0,0,0,0,0,1,1,0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,1,1,0,1,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,1,0,1,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,0,0,1,0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,1,1,0,1,0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,0,0,0,0,0,1,1,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "41") (term "0,0,1,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,0,0,1,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,2,0,1,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,2,0,1,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,1,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "41") (term "0,1,0,1,0,1,0,0"))
         (rule "inEqSimp_gtToGeq" (formula "41") (term "1,0,1,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,1,0,1,0,0,0"))
         (rule "polySimp_addComm1" (formula "41") (term "0,1,0,1,0,1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,1,1,0,1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0,1,1,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,1,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,1,0,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,1,0,1,0,0,0"))
         (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,1,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,1,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,1,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,1,1,0,0,1,1,0,1,0,0"))
         (rule "mul_literals" (formula "41") (term "0,1,1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,1,0,0,1,1,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0,0"))
         (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0,0,0,0"))
         (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,1,1,0,1,0,0"))
         (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,1,1,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "41") (term "1,1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "1,0,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,1,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "41") (term "0,1,0,1,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1,0,1,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,1,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "41") (term "0,1,0,1,0,1,0,0,0"))
         (rule "nonNull" (formula "41") (term "0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "i=i"))
         (rule "greater_literals" (formula "41") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "concrete_impl_1" (formula "41") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "sub_literals" (formula "41") (term "2,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "nonNullZero" (formula "41") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "elimGcdLeq" (formula "41") (term "1,1,0,0,1,1,0,1,0,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
         (rule "mul_literals" (formula "41") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "sub_literals" (formula "41") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,1,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "add_literals" (formula "41") (term "1,1,0,1,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "times_zero_1" (formula "41") (term "1,0,1,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "add_zero_right" (formula "41") (term "0,1,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "add_literals" (formula "41") (term "1,1,0,0,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "times_zero_1" (formula "41") (term "1,0,0,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "add_zero_right" (formula "41") (term "0,0,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "41") (term "0,0,1,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "mul_literals" (formula "41") (term "0,0,0,1,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "41") (term "0,1,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "41") (term "0,0,1,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "add_literals" (formula "41") (term "0,0,0,1,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,1,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "add_literals" (formula "41") (term "1,1,0,1,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "times_zero_1" (formula "41") (term "1,0,1,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "add_zero_right" (formula "41") (term "0,1,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "qeq_literals" (formula "41") (term "1,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "concrete_and_3" (formula "41") (term "0,1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "add_literals" (formula "41") (term "0,0,0,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "41") (term "0,0,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "add_literals" (formula "41") (term "0,0,0,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "add_zero_left" (formula "41") (term "0,0,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_pullOutFactor0" (formula "41") (term "0,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "add_literals" (formula "41") (term "1,0,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "times_zero_1" (formula "41") (term "0,0,1,1,0,0,1,1,0,1,0,0"))
         (rule "leq_literals" (formula "41") (term "0,1,1,0,0,1,1,0,1,0,0"))
         (rule "ifthenelse_true_for" (formula "41") (term "1,1,0,0,1,1,0,1,0,0"))
         (rule "elimGcdGeq" (formula "41") (term "0,1,0,0,1,1,0,1,0,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
         (rule "add_zero_right" (formula "41") (term "0,0,0,1,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "add_zero_right" (formula "41") (term "0,0,0,0,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0,1,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "sub_literals" (formula "41") (term "0,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "mul_literals" (formula "41") (term "0,0,0,1,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "add_zero_right" (formula "41") (term "0,0,0,0,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_pullOutFactor0" (formula "41") (term "0,1,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "add_literals" (formula "41") (term "1,0,1,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "times_zero_1" (formula "41") (term "0,1,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "leq_literals" (formula "41") (term "1,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "concrete_and_3" (formula "41") (term "0,0,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "add_literals" (formula "41") (term "1,1,0,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "times_zero_1" (formula "41") (term "1,0,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "add_zero_right" (formula "41") (term "0,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "qeq_literals" (formula "41") (term "0,0,1,0,0,1,1,0,1,0,0"))
         (rule "ifthenelse_true_for" (formula "41") (term "0,1,0,0,1,1,0,1,0,0"))
         (rule "pullOutSelect" (formula "41") (term "0,1,1,0,1,0,0,0,0,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_table_1"))
         (rule "applyEq" (formula "42") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "1,0,1,0,1,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "0,2,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "1,0,0,1,0,1,1,0,1,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "1,0,0,1,0,1,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "0,2,0,1,0,1,0,1,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "0,0,1,1,1,0,0,1,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "0,0,1,1,1,0,0,1,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "1,1,0,1,0,1,0,1,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "1,0,0,0,0,1,0,1,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,0,1,1,0,1,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "1,0,0,2,0,1,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "1,0,0,0,0,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "0,2,0,1,0,0,0,1,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "0,0,1,1,1,0,0,1,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "1,1,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "1,1,1,0,0,0,0,1,1,0,1,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "0,0,1,0,1,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "0,2,1,0,0,0,0,1,1,0,1,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "42") (term "1,1,0,1,0,0,0,1,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "simplifySelectOfStore" (formula "1"))
         (rule "equalUnique" (formula "1") (term "0,1,0,0"))
         (rule "concrete_not_2" (formula "1") (term "1,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0"))
         (rule "eqClose" (formula "1") (term "0,0,0"))
         (rule "concrete_and_1" (formula "1") (term "0,0"))
         (rule "eqClose" (formula "1") (term "0,0"))
         (rule "ifthenelse_true" (formula "1") (term "0"))
         (rule "castDel" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "42") (term "0,1,1,0,1,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "1,0,1,0,1,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "0,2,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "0,1,1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "1,0,0,1,0,1,1,0,1,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "1,0,0,1,0,1,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "0,2,0,1,0,1,0,1,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "0,0,1,1,1,0,0,1,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "0,0,1,1,1,0,0,1,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "1,1,0,1,0,1,0,1,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "1,0,0,0,0,1,0,1,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "0,1,1,1,0,0,0,1,1,0,1,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "1,0,0,2,0,1,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "1,0,0,0,0,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "0,2,0,1,0,0,0,1,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "0,0,1,1,1,0,0,1,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "1,1,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "1,1,1,0,0,0,0,1,1,0,1,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "0,0,1,0,1,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "0,2,1,0,0,0,0,1,1,0,1,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "42") (term "1,1,0,1,0,0,0,1,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_right" (formula "41") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "38"))
         (rule "concrete_not_2" (formula "41") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_1" (formula "41") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "replace_known_right" (formula "41") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "38"))
         (rule "concrete_not_2" (formula "41") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_1" (formula "41") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "applyEq" (formula "41") (term "2,1,0,0,0,0,1,1,0,1,0,0") (ifseqformula "3"))
         (rule "applyEq" (formula "41") (term "0,1,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
         (rule "applyEq" (formula "41") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "3"))
         (rule "applyEq" (formula "41") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
         (rule "applyEq" (formula "41") (term "0,1,1,1,0,0,1,0,0,0,0") (ifseqformula "3"))
         (rule "applyEq" (formula "41") (term "0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "3"))
         (rule "applyEq" (formula "41") (term "0,1,1,1,0,0,1,0,0,0") (ifseqformula "3"))
         (rule "applyEq" (formula "41") (term "2,0,1,0,0,0,1,1,0,1,0,0,0") (ifseqformula "3"))
         (rule "applyEq" (formula "41") (term "2,0,1,0,1,0,1,0,0") (ifseqformula "3"))
         (rule "applyEq" (formula "41") (term "0,1,0,1,0,0,0,0,0,0") (ifseqformula "3"))
         (rule "applyEq" (formula "41") (term "2,0,1,0,1,0,1,0,0,0") (ifseqformula "3"))
         (rule "applyEq" (formula "41") (term "0,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
         (rule "applyEq" (formula "41") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
         (rule "applyEq" (formula "41") (term "1,1,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
         (rule "applyEq" (formula "41") (term "1,1,1,0,0,0,1,1,0,1,0,0") (ifseqformula "3"))
         (rule "applyEq" (formula "41") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "3"))
         (rule "applyEq" (formula "41") (term "1,1,0,1,0,0,0,0,0") (ifseqformula "3"))
         (rule "inEqSimp_subsumption4" (formula "41") (term "1,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "2"))
         (rule "mul_literals" (formula "41") (term "0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "greater_literals" (formula "41") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_1" (formula "41") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "leq_literals" (formula "41") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "concrete_or_1" (formula "41") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_3" (formula "41") (term "1,0,0,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_subsumption6" (formula "41") (term "1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "15"))
         (rule "greater_literals" (formula "41") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_1" (formula "41") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "41") (term "1,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "leq_literals" (formula "41") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "concrete_or_1" (formula "41") (term "1,0,0,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_3" (formula "41") (term "0,0,0,0,0,0,0,0,0,0"))
         (rule "pullOutSelect" (formula "41") (term "1,1,0,0,0,0,0,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_size_0"))
         (rule "simplifySelectOfMemset" (formula "1"))
         (rule "equalUnique" (formula "1") (term "0,1,0,0"))
         (rule "concrete_not_2" (formula "1") (term "1,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "elimGcdLeq" (formula "42") (term "1,0,0,0,1,1,0,1,0,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), initCapacity)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
         (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "mul_literals" (formula "42") (term "0,0,0,0,0,1,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "sub_literals" (formula "42") (term "0,0,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "add_literals" (formula "42") (term "1,1,0,0,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "times_zero_1" (formula "42") (term "1,0,0,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "add_zero_right" (formula "42") (term "0,0,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,1,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "add_literals" (formula "42") (term "1,1,0,1,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "times_zero_1" (formula "42") (term "1,0,1,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "add_zero_right" (formula "42") (term "0,1,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "42") (term "0,0,1,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "mul_literals" (formula "42") (term "0,0,0,1,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "add_literals" (formula "42") (term "0,0,0,0,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "42") (term "0,0,1,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "add_literals" (formula "42") (term "0,0,0,1,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,1,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "add_literals" (formula "42") (term "1,1,0,1,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "times_zero_1" (formula "42") (term "1,0,1,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "add_literals" (formula "42") (term "0,1,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "qeq_literals" (formula "42") (term "1,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "concrete_and_3" (formula "42") (term "0,1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "add_literals" (formula "42") (term "0,0,0,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "add_zero_left" (formula "42") (term "0,0,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_pullOutFactor0" (formula "42") (term "0,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "add_literals" (formula "42") (term "1,0,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "times_zero_1" (formula "42") (term "0,0,1,0,0,0,1,1,0,1,0,0"))
         (rule "leq_literals" (formula "42") (term "0,1,0,0,0,1,1,0,1,0,0"))
         (rule "ifthenelse_true_for" (formula "42") (term "1,0,0,0,1,1,0,1,0,0"))
         (rule "pullOutSelect" (formula "42") (term "0,1,0,0,0,0,0,0,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_threshold_1"))
         (rule "simplifySelectOfMemset" (formula "1"))
         (rule "equalUnique" (formula "1") (term "0,1,0,0"))
         (rule "concrete_not_2" (formula "1") (term "1,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
         (rule "equalUnique" (formula "2") (term "0,0,0,1,0,0"))
         (rule "concrete_and_2" (formula "2") (term "0,0,1,0,0"))
         (rule "concrete_and_2" (formula "2") (term "0,1,0,0"))
         (rule "eqSymm" (formula "2") (term "0,0,0"))
         (rule "sortsDisjointModuloNull" (formula "2") (term "0,0,0"))
         (rule "replace_known_right" (formula "2") (term "1,0,0,0") (ifseqformula "42"))
         (rule "concrete_and_4" (formula "2") (term "0,0,0"))
         (rule "concrete_and_2" (formula "2") (term "0,0"))
         (rule "ifthenelse_false" (formula "2") (term "0"))
         (rule "simplifySelectOfCreate" (formula "2"))
         (rule "equalUnique" (formula "2") (term "1,0,0"))
         (rule "concrete_and_4" (formula "2") (term "0,0"))
         (rule "ifthenelse_false" (formula "2") (term "0"))
         (rule "simplifySelectOfStore" (formula "2"))
         (rule "equalUnique" (formula "2") (term "0,1,0,0"))
         (rule "concrete_not_2" (formula "2") (term "1,0,0"))
         (rule "concrete_and_3" (formula "2") (term "0,0"))
         (rule "eqClose" (formula "2") (term "0,0,0"))
         (rule "concrete_and_1" (formula "2") (term "0,0"))
         (rule "equalUnique" (formula "2") (term "0,0"))
         (rule "ifthenelse_false" (formula "2") (term "0"))
         (rule "applyEqReverse" (formula "43") (term "1,1,0,0,0,0,0,0") (ifseqformula "2"))
         (rule "hideAuxiliaryEq" (formula "2"))
         (rule "applyEq" (formula "42") (term "1,1,0,0,0,0,0,0") (ifseqformula "17"))
         (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
         (rule "equalUnique" (formula "1") (term "0,0,0,1,0,0"))
         (rule "concrete_and_2" (formula "1") (term "0,0,1,0,0"))
         (rule "concrete_and_2" (formula "1") (term "0,1,0,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "39"))
         (rule "concrete_and_2" (formula "1") (term "0,0,0"))
         (rule "concrete_and_2" (formula "1") (term "0,0"))
         (rule "ifthenelse_false" (formula "1") (term "0"))
         (rule "simplifySelectOfCreate" (formula "1"))
         (rule "equalUnique" (formula "1") (term "1,0,0"))
         (rule "concrete_and_4" (formula "1") (term "0,0"))
         (rule "ifthenelse_false" (formula "1") (term "0"))
         (rule "simplifySelectOfStore" (formula "1"))
         (rule "eqClose" (formula "1") (term "1,0,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0,0"))
         (rule "eqClose" (formula "1") (term "0,0,0"))
         (rule "concrete_and_1" (formula "1") (term "0,0"))
         (rule "equalUnique" (formula "1") (term "0,0,0"))
         (rule "concrete_not_2" (formula "1") (term "0,0"))
         (rule "ifthenelse_true" (formula "1") (term "0"))
         (rule "castDel" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "42") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "41") (term "0,1,0,1,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "41") (term "0,1,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "41") (term "0,0,1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0,0,0,0,0"))
         (rule "pullOutSelect" (formula "41") (term "0,0,1,0,0,0,0,0,0,0,0,0,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_entrySet_0"))
         (rule "simplifySelectOfMemset" (formula "1"))
         (rule "equalUnique" (formula "1") (term "0,1,0,0"))
         (rule "concrete_not_2" (formula "1") (term "1,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "pullOutSelect" (formula "42") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_NULL_KEY_0"))
         (rule "simplifySelectOfMemset" (formula "1"))
         (rule "equalUnique" (formula "1") (term "0,1,0,0"))
         (rule "concrete_not_2" (formula "1") (term "1,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
         (rule "equalUnique" (formula "2") (term "0,0,0,1,0,0"))
         (rule "concrete_and_2" (formula "2") (term "0,0,1,0,0"))
         (rule "concrete_and_2" (formula "2") (term "0,1,0,0"))
         (rule "eqSymm" (formula "2") (term "0,0,0"))
         (rule "sortsDisjointModuloNull" (formula "2") (term "0,0,0"))
         (rule "replace_known_right" (formula "2") (term "1,0,0,0") (ifseqformula "42"))
         (rule "concrete_and_4" (formula "2") (term "0,0,0"))
         (rule "concrete_and_2" (formula "2") (term "0,0"))
         (rule "ifthenelse_false" (formula "2") (term "0"))
         (rule "simplifySelectOfCreate" (formula "2"))
         (rule "equalUnique" (formula "2") (term "1,0,0"))
         (rule "concrete_and_4" (formula "2") (term "0,0"))
         (rule "ifthenelse_false" (formula "2") (term "0"))
         (rule "simplifySelectOfStore" (formula "2"))
         (rule "eqClose" (formula "2") (term "0,0,0,0"))
         (rule "concrete_and_1" (formula "2") (term "0,0,0"))
         (rule "equalUnique" (formula "2") (term "0,0,0"))
         (rule "concrete_and_2" (formula "2") (term "0,0"))
         (rule "ifthenelse_false" (formula "2") (term "0"))
         (rule "applyEqReverse" (formula "43") (term "0,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "2"))
         (rule "hideAuxiliaryEq" (formula "2"))
         (rule "replace_known_right" (formula "42") (term "0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "37"))
         (rule "concrete_not_2" (formula "42") (term "1,0,0,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_3" (formula "42") (term "0,0,0,0,0,0,0,0,0,0"))
         (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
         (rule "equalUnique" (formula "1") (term "0,0,0,1,0,0"))
         (rule "concrete_and_2" (formula "1") (term "0,0,1,0,0"))
         (rule "concrete_and_2" (formula "1") (term "0,1,0,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "39"))
         (rule "concrete_and_2" (formula "1") (term "0,0"))
         (rule "ifthenelse_false" (formula "1") (term "0"))
         (rule "simplifySelectOfCreate" (formula "1"))
         (rule "equalUnique" (formula "1") (term "1,0,0"))
         (rule "concrete_and_4" (formula "1") (term "0,0"))
         (rule "ifthenelse_false" (formula "1") (term "0"))
         (rule "simplifySelectOfStore" (formula "1"))
         (rule "equalUnique" (formula "1") (term "1,0,0,0"))
         (rule "concrete_and_4" (formula "1") (term "0,0,0"))
         (rule "concrete_and_2" (formula "1") (term "0,0"))
         (rule "ifthenelse_false" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "42") (term "0,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_right" (formula "41") (term "0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "34"))
         (rule "concrete_not_2" (formula "41") (term "1,0,0,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_3" (formula "41") (term "0,0,0,0,0,0,0,0,0,0"))
         (rule "commute_or" (formula "33") (term "0,1,1,0"))
         (rule "shift_paren_or" (formula "20") (term "0,1,0"))
         (rule "commute_or" (formula "32") (term "0,0,1,1,0"))
         (rule "div_axiom" (formula "41") (term "1,1,1,0") (inst "quotient=quotient_1"))
         (rule "equal_literals" (formula "1") (term "0"))
         (rule "concrete_or_2" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1,1,1,1"))
         (rule "qeq_literals" (formula "1") (term "0,1"))
         (rule "ifthenelse_true_for" (formula "1") (term "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "polySimp_addComm1" (formula "3") (term "1"))
         (rule "add_literals" (formula "3") (term "0,1"))
         (rule "inEqSimp_commuteLeq" (formula "2"))
         (rule "inEqSimp_homoInEq1" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0"))
         (rule "inEqSimp_homoInEq1" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
         (rule "polySimp_elimOne" (formula "2") (term "1,0"))
         (rule "applyEq" (formula "44") (term "1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0"))
         (rule "applyEq" (formula "44") (term "1,0,1,3,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,1,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,1,3,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,1,0,0"))
         (rule "applyEq" (formula "44") (term "1,0,0,1,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,0,1,0"))
         (rule "applyEq" (formula "44") (term "1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "applyEq" (formula "44") (term "1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0"))
         (rule "applyEq" (formula "44") (term "1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0"))
         (rule "applyEq" (formula "44") (term "1,0,1,3,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,1,3,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "applyEq" (formula "44") (term "1,0,1,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,1,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0"))
         (rule "applyEq" (formula "44") (term "1,0,1,3,0,0,0,0,0,0,1,0,1,0,0,0,1,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,1,3,0,0,0,0,0,0,1,0,1,0,0,0,1,1,0,1,0,0,0"))
         (rule "applyEq" (formula "44") (term "1,0,1,3,0,0,0,0,0,0,0,1,0,1,0,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,1,3,0,0,0,0,0,0,0,1,0,1,0,0,0,0"))
         (rule "applyEq" (formula "44") (term "1,0,1,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,1,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0"))
         (rule "applyEq" (formula "44") (term "1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0,0"))
         (rule "applyEq" (formula "44") (term "1,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,0,1,0,0,0,0,0,0,0"))
         (rule "applyEq" (formula "44") (term "1,0,1,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,1,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0"))
         (rule "applyEq" (formula "44") (term "1,0,1,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,1,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0"))
         (rule "applyEq" (formula "44") (term "1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0"))
         (rule "applyEq" (formula "44") (term "1,0,1,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,1,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0"))
         (rule "applyEq" (formula "44") (term "1,0,1,3,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,1,3,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "applyEq" (formula "44") (term "1,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "applyEq" (formula "44") (term "1,0,1,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,1,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "applyEq" (formula "44") (term "1,0,1,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,1,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "applyEq" (formula "44") (term "1,0,1,3,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,1,3,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0"))
         (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "1"))
         (rule "polySimp_addComm0" (formula "4") (term "1"))
         (rule "applyEq" (formula "44") (term "1,0,1,3,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "0,1,3,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "applyEq" (formula "44") (term "1,1,1,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "44") (term "1,1,0"))
         (rule "mod_axiom" (formula "44") (term "1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0"))
         (rule "mod_axiom" (formula "44") (term "1,3,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,3,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "3,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,3,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,3,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,1,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,3,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,1,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,3,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,1,0,0"))
         (rule "mod_axiom" (formula "44") (term "0,1,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0"))
         (rule "polySimp_homoEq" (formula "44") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
         (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0"))
         (rule "polySimp_rightDist" (formula "44") (term "0,1,0,1,0"))
         (rule "polySimp_rightDist" (formula "44") (term "0,0,1,0,1,0"))
         (rule "mul_literals" (formula "44") (term "0,0,0,1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0"))
         (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1,0"))
         (rule "add_literals" (formula "44") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "44") (term "1,0,0,1,0"))
         (rule "add_zero_right" (formula "44") (term "0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0"))
         (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,0,1,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1" (formula "44") (term "0,0,1,0"))
         (rule "add_literals" (formula "44") (term "1,0,0,1,0"))
         (rule "times_zero_1" (formula "44") (term "0,0,1,0"))
         (rule "add_zero_left" (formula "44") (term "0,1,0"))
         (rule "mod_axiom" (formula "44") (term "1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "mod_axiom" (formula "44") (term "1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0"))
         (rule "mod_axiom" (formula "44") (term "1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0"))
         (rule "mod_axiom" (formula "44") (term "1,3,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,3,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "3,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,3,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,3,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "mod_axiom" (formula "44") (term "1,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0"))
         (rule "mod_axiom" (formula "44") (term "1,3,0,0,0,0,0,0,1,0,1,0,0,0,1,1,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,3,0,0,0,0,0,0,1,0,1,0,0,0,1,1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "3,0,0,0,0,0,0,1,0,1,0,0,0,1,1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,3,0,0,0,0,0,0,1,0,1,0,0,0,1,1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,3,0,0,0,0,0,0,1,0,1,0,0,0,1,1,0,1,0,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,3,0,0,0,0,0,0,1,0,1,0,0,0,1,1,0,1,0,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,3,0,0,0,0,0,0,1,0,1,0,0,0,1,1,0,1,0,0,0"))
         (rule "mod_axiom" (formula "44") (term "1,3,0,0,0,0,0,0,0,1,0,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,3,0,0,0,0,0,0,0,1,0,1,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "3,0,0,0,0,0,0,0,1,0,1,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,3,0,0,0,0,0,0,0,1,0,1,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,1,0,1,0,0,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,3,0,0,0,0,0,0,0,1,0,1,0,0,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,1,0,1,0,0,0,0"))
         (rule "mod_axiom" (formula "44") (term "1,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0"))
         (rule "mod_axiom" (formula "44") (term "1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0,0"))
         (rule "mod_axiom" (formula "44") (term "0,1,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "44") (term "1,0,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "44") (term "0,1,0,1,0,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "44") (term "0,0,1,0,1,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "44") (term "0,0,0,1,0,1,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,1,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,0,1,0,0,0,0,0,0,0"))
         (rule "mod_axiom" (formula "44") (term "1,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0"))
         (rule "mod_axiom" (formula "44") (term "1,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0"))
         (rule "mod_axiom" (formula "44") (term "1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0"))
         (rule "mod_axiom" (formula "44") (term "1,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0"))
         (rule "mod_axiom" (formula "44") (term "1,3,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,3,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "3,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,3,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,3,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "mod_axiom" (formula "44") (term "1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "polySimp_addAssoc" (formula "44") (term "3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "add_literals" (formula "44") (term "0,0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "add_zero_left" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "mod_axiom" (formula "44") (term "1,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "mod_axiom" (formula "44") (term "1,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "mod_axiom" (formula "44") (term "1,3,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,3,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "3,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,3,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,3,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,3,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0"))
         (rule "mod_axiom" (formula "44") (term "1,3,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,3,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "3,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,3,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,3,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,3,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,3,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
         (rule "polySimp_elimOne" (formula "3") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "44") (term "0,1,1,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "44") (term "0,0,1,1,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,1,0,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "44") (term "1,0,1,1,0,0,0,0,0,0,0"))
         (rule "elimGcdEq" (formula "44") (term "1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            quotient_1),
        initCapacity),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
         (rule "eqClose" (formula "44") (term "0,0,0,1,0"))
         (rule "concrete_and_1" (formula "44") (term "0,0,1,0"))
         (rule "mul_literals" (formula "44") (term "0,1,0,1,0,1,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,1,1,0"))
         (rule "add_literals" (formula "44") (term "1,0,0,1,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,0,1,0"))
         (rule "add_zero_left" (formula "44") (term "0,1,0,1,0"))
         (rule "mul_literals" (formula "44") (term "0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0,1,0"))
         (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
         (rule "mul_literals" (formula "44") (term "0,0,1,1,0"))
         (rule "eqClose" (formula "44") (term "0,1,1,0"))
         (rule "concrete_and_1" (formula "44") (term "1,1,0"))
         (rule "mul_literals" (formula "44") (term "0,0,0,1,0"))
         (rule "qeq_literals" (formula "44") (term "1,0,1,0"))
         (rule "concrete_and_3" (formula "44") (term "0,1,0"))
         (rule "leq_literals" (formula "44") (term "0,1,0"))
         (rule "ifthenelse_true_for" (formula "44") (term "1,0"))
         (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "2"))
         (rule "mul_literals" (formula "18") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "18"))
         (rule "polySimp_mulLiterals" (formula "18") (term "0"))
         (rule "elimGcdLeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(neglit(2(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(3(#))"))
         (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
         (rule "neg_literal" (formula "18") (term "0,0,0,0,0,1,0"))
         (rule "leq_literals" (formula "18") (term "0,0"))
         (rule "concrete_or_2" (formula "18") (term "0"))
         (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
         (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
         (rule "add_literals" (formula "18") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
         (rule "add_literals" (formula "18") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "18") (term "1,0,0"))
         (rule "add_literals" (formula "18") (term "0,0"))
         (rule "qeq_literals" (formula "18") (term "0"))
         (rule "concrete_or_2" (formula "18"))
         (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "2"))
         (rule "polySimp_rightDist" (formula "15") (term "0,0"))
         (rule "mul_literals" (formula "15") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "15") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "15"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0"))
         (rule "polySimp_elimOne" (formula "15") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
         (rule "mul_literals" (formula "3") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0"))
         (rule "add_literals" (formula "3") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
         (rule "mul_literals" (formula "3") (term "1"))
         (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(neglit(1(6(4(5(#))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(3(#))"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,1,0"))
         (rule "leq_literals" (formula "3") (term "0,0"))
         (rule "concrete_or_2" (formula "3") (term "0"))
         (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
         (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
         (rule "add_literals" (formula "3") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
         (rule "add_literals" (formula "3") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "3") (term "1,0,0"))
         (rule "add_literals" (formula "3") (term "0,0"))
         (rule "leq_literals" (formula "3") (term "0"))
         (rule "concrete_or_2" (formula "3"))
         (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "16"))
         (rule "mul_literals" (formula "14") (term "0,0"))
         (rule "add_zero_left" (formula "14") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "14"))
         (rule "polySimp_mulLiterals" (formula "14") (term "0"))
         (rule "inEqSimp_subsumption4" (formula "14") (ifseqformula "21"))
         (rule "mul_literals" (formula "14") (term "0,1,0"))
         (rule "greater_literals" (formula "14") (term "0,0"))
         (rule "concrete_and_1" (formula "14") (term "0"))
         (rule "leq_literals" (formula "14") (term "0"))
         (rule "concrete_or_1" (formula "14"))
         (rule "true_left" (formula "14"))
         (rule "div_axiom" (formula "28") (term "1") (inst "quotient=quotient_2"))
         (rule "equal_literals" (formula "28") (term "0"))
         (rule "concrete_or_2" (formula "28"))
         (rule "qeq_literals" (formula "28") (term "0,1"))
         (rule "ifthenelse_true_for" (formula "28") (term "1"))
         (rule "mul_literals" (formula "28") (term "1,1,1"))
         (rule "andLeft" (formula "28"))
         (rule "andLeft" (formula "28"))
         (rule "polySimp_addComm1" (formula "30") (term "1"))
         (rule "add_literals" (formula "30") (term "0,1"))
         (rule "inEqSimp_commuteLeq" (formula "29"))
         (rule "inEqSimp_homoInEq1" (formula "30"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,0"))
         (rule "polySimp_addComm1" (formula "30") (term "0"))
         (rule "applyEq" (formula "39") (term "0") (ifseqformula "28"))
         (rule "inEqSimp_homoInEq1" (formula "39"))
         (rule "polySimp_addComm1" (formula "39") (term "0"))
         (rule "applyEqRigid" (formula "42") (term "1,1,0,0") (ifseqformula "28"))
         (rule "applyEq" (formula "26") (term "1,1,0,0,0,1,0") (ifseqformula "28"))
         (rule "applyEqRigid" (formula "26") (term "1,1,0,0") (ifseqformula "28"))
         (rule "applyEqRigid" (formula "25") (term "1,1,0") (ifseqformula "28"))
         (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "28"))
         (rule "applyEqRigid" (formula "41") (term "1,1,0,0") (ifseqformula "28"))
         (rule "applyEq" (formula "31") (term "1") (ifseqformula "28"))
         (rule "inEqSimp_sepPosMonomial0" (formula "30"))
         (rule "polySimp_mulComm0" (formula "30") (term "1"))
         (rule "polySimp_rightDist" (formula "30") (term "1"))
         (rule "mul_literals" (formula "30") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "39"))
         (rule "polySimp_mulComm0" (formula "39") (term "1"))
         (rule "polySimp_rightDist" (formula "39") (term "1"))
         (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
         (rule "mul_literals" (formula "39") (term "0,1"))
         (rule "polySimp_elimOne" (formula "39") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "30"))
         (rule "polySimp_rightDist" (formula "35") (term "0,0"))
         (rule "mul_literals" (formula "35") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "35") (term "0"))
         (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
         (rule "add_literals" (formula "35") (term "0,0,0"))
         (rule "add_zero_left" (formula "35") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "35"))
         (rule "polySimp_mulLiterals" (formula "35") (term "0"))
         (rule "polySimp_elimOne" (formula "35") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "30"))
         (rule "mul_literals" (formula "24") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0"))
         (rule "add_literals" (formula "24") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "24"))
         (rule "mul_literals" (formula "24") (term "1"))
         (rule "elimGcdGeq_antec" (formula "24") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(2(#))"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,1,0"))
         (rule "leq_literals" (formula "24") (term "0,0"))
         (rule "concrete_or_2" (formula "24") (term "0"))
         (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
         (rule "polySimp_addLiterals" (formula "24") (term "0,0,0,0"))
         (rule "add_literals" (formula "24") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
         (rule "add_literals" (formula "24") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "24") (term "1,0,0"))
         (rule "add_literals" (formula "24") (term "0,0"))
         (rule "leq_literals" (formula "24") (term "0"))
         (rule "concrete_or_2" (formula "24"))
         (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "41"))
         (rule "mul_literals" (formula "40") (term "0,0"))
         (rule "add_zero_left" (formula "40") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "40"))
         (rule "mul_literals" (formula "40") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "24"))
         (rule "leq_literals" (formula "40") (term "0"))
         (rule "concrete_or_1" (formula "40"))
         (rule "true_left" (formula "40"))
         (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "38"))
         (rule "polySimp_mulAssoc" (formula "30") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "0,0"))
         (rule "polySimp_addComm0" (formula "30") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "30"))
         (rule "polySimp_mulLiterals" (formula "30") (term "0"))
         (rule "elimGcdLeq_antec" (formula "30") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(2(#))"))
         (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0"))
         (rule "neg_literal" (formula "30") (term "0,0,0,0,0,1,0"))
         (rule "leq_literals" (formula "30") (term "0,0"))
         (rule "concrete_or_2" (formula "30") (term "0"))
         (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
         (rule "polySimp_addLiterals" (formula "30") (term "0,0,0,0"))
         (rule "add_literals" (formula "30") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
         (rule "add_literals" (formula "30") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "30") (term "1,0,0"))
         (rule "add_literals" (formula "30") (term "0,0"))
         (rule "qeq_literals" (formula "30") (term "0"))
         (rule "concrete_or_2" (formula "30"))
         (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "37"))
         (rule "mul_literals" (formula "35") (term "0,0"))
         (rule "add_zero_left" (formula "35") (term "0"))
         (rule "inEqSimp_subsumption6" (formula "35") (ifseqformula "24"))
         (rule "mul_literals" (formula "35") (term "1,1,0"))
         (rule "greater_literals" (formula "35") (term "0,0"))
         (rule "concrete_and_1" (formula "35") (term "0"))
         (rule "leq_literals" (formula "35") (term "0"))
         (rule "concrete_or_1" (formula "35"))
         (rule "true_left" (formula "35"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0,0") (ifseqformula "10"))
         (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "48"))
         (rule "concrete_or_2" (formula "40"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "10"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
         (rule "concrete_or_2" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "11"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
         (rule "concrete_or_2" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "12"))
         (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "47"))
         (rule "concrete_or_1" (formula "46"))
         (rule "true_left" (formula "46"))
         (rule "nnf_imp2or" (formula "56") (term "0,1,0,0"))
         (rule "nnf_imp2or" (formula "56") (term "0,1,0,0,0"))
         (rule "jdiv_axiom" (formula "56") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
         (rule "eqSymm" (formula "1"))
         (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "24"))
         (rule "mul_literals" (formula "1") (term "1,1,0,0,0"))
         (rule "greater_literals" (formula "1") (term "0,0,0,0"))
         (rule "concrete_and_1" (formula "1") (term "0,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0,0"))
         (rule "concrete_or_1" (formula "1") (term "0,0"))
         (rule "ifthenelse_true" (formula "1") (term "0"))
         (rule "eqSymm" (formula "1"))
         (rule "applyEq" (formula "57") (term "1,1,1,0,0,0,1,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "57") (term "1,0,1,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "57") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "57") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "57") (term "1,1,1,0,0,1,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "57") (term "1,1,1,0,0,0,1,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "57") (term "1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "polyDiv_pullOut" (formula "57") (term "1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0") (inst "polyDivCoeff=initCapacity"))
         (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,2,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "equal_literals" (formula "57") (term "0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "ifthenelse_false" (formula "57") (term "1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_pullOutFactor0" (formula "57") (term "0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "57") (term "1,0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "times_zero_1" (formula "57") (term "0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "div_literals" (formula "57") (term "0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "57") (term "1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polyDiv_pullOut" (formula "57") (term "1,1,1,0,0,0,1,0,0,0") (inst "polyDivCoeff=initCapacity"))
         (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,2,1,1,1,0,0,0,1,0,0,0"))
         (rule "equal_literals" (formula "57") (term "0,1,1,1,0,0,0,1,0,0,0"))
         (rule "ifthenelse_false" (formula "57") (term "1,1,1,0,0,0,1,0,0,0"))
         (rule "polySimp_pullOutFactor0" (formula "57") (term "0,0,1,1,1,0,0,0,1,0,0,0"))
         (rule "add_literals" (formula "57") (term "1,0,0,1,1,1,0,0,0,1,0,0,0"))
         (rule "times_zero_1" (formula "57") (term "0,0,1,1,1,0,0,0,1,0,0,0"))
         (rule "div_literals" (formula "57") (term "0,1,1,1,0,0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "57") (term "1,1,1,0,0,0,1,0,0,0"))
         (rule "polyDiv_pullOut" (formula "57") (term "1,1,1,0,0,1,0,0,0,0") (inst "polyDivCoeff=initCapacity"))
         (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,2,1,1,1,0,0,1,0,0,0,0"))
         (rule "equal_literals" (formula "57") (term "0,1,1,1,0,0,1,0,0,0,0"))
         (rule "ifthenelse_false" (formula "57") (term "1,1,1,0,0,1,0,0,0,0"))
         (rule "polySimp_pullOutFactor0" (formula "57") (term "0,0,1,1,1,0,0,1,0,0,0,0"))
         (rule "add_literals" (formula "57") (term "1,0,0,1,1,1,0,0,1,0,0,0,0"))
         (rule "times_zero_1" (formula "57") (term "0,0,1,1,1,0,0,1,0,0,0,0"))
         (rule "div_literals" (formula "57") (term "0,1,1,1,0,0,1,0,0,0,0"))
         (rule "add_zero_left" (formula "57") (term "1,1,1,0,0,1,0,0,0,0"))
         (rule "polyDiv_pullOut" (formula "57") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0") (inst "polyDivCoeff=initCapacity"))
         (rule "equal_literals" (formula "57") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "ifthenelse_false" (formula "57") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_pullOutFactor0" (formula "57") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "57") (term "1,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "times_zero_1" (formula "57") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "div_literals" (formula "57") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "57") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "polyDiv_pullOut" (formula "57") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0") (inst "polyDivCoeff=initCapacity"))
         (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,2,1,1,1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "equal_literals" (formula "57") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "ifthenelse_false" (formula "57") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_pullOutFactor0" (formula "57") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "57") (term "1,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "times_zero_1" (formula "57") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "div_literals" (formula "57") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "57") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "polyDiv_pullOut" (formula "57") (term "1,0,1,0,0,0,0,0,0") (inst "polyDivCoeff=initCapacity"))
         (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,2,1,0,1,0,0,0,0,0,0"))
         (rule "equal_literals" (formula "57") (term "0,1,0,1,0,0,0,0,0,0"))
         (rule "ifthenelse_false" (formula "57") (term "1,0,1,0,0,0,0,0,0"))
         (rule "polySimp_pullOutFactor0" (formula "57") (term "0,0,1,0,1,0,0,0,0,0,0"))
         (rule "add_literals" (formula "57") (term "1,0,0,1,0,1,0,0,0,0,0,0"))
         (rule "times_zero_1" (formula "57") (term "0,0,1,0,1,0,0,0,0,0,0"))
         (rule "div_literals" (formula "57") (term "0,1,0,1,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "57") (term "1,0,1,0,0,0,0,0,0"))
         (rule "polyDiv_pullOut" (formula "57") (term "1,1,1,0,0,0,1,0,0") (inst "polyDivCoeff=initCapacity"))
         (rule "equal_literals" (formula "57") (term "0,1,1,1,0,0,0,1,0,0"))
         (rule "ifthenelse_false" (formula "57") (term "1,1,1,0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,1,1,1,0,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor0" (formula "57") (term "0,0,1,1,1,0,0,0,1,0,0"))
         (rule "add_literals" (formula "57") (term "1,0,0,1,1,1,0,0,0,1,0,0"))
         (rule "times_zero_1" (formula "57") (term "0,0,1,1,1,0,0,0,1,0,0"))
         (rule "div_literals" (formula "57") (term "0,1,1,1,0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "57") (term "1,1,1,0,0,0,1,0,0"))
         (rule "polyDiv_pullOut" (formula "1") (term "1") (inst "polyDivCoeff=initCapacity"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,1"))
         (rule "equal_literals" (formula "1") (term "0,1"))
         (rule "ifthenelse_false" (formula "1") (term "1"))
         (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,1"))
         (rule "add_literals" (formula "1") (term "1,0,0,1"))
         (rule "times_zero_1" (formula "1") (term "0,0,1"))
         (rule "div_literals" (formula "1") (term "0,1"))
         (rule "add_zero_left" (formula "1") (term "1"))
         (rule "commute_or_2" (formula "48") (term "0,1,1,0"))
         (rule "nnf_imp2or" (formula "57") (term "0,0,0,0,0,0,0,0,0,0,0"))
         (rule "nnf_imp2or" (formula "57") (term "1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "commute_or" (formula "49") (term "0,1,0,1,1,0"))
         (rule "nnf_imp2or" (formula "57") (term "1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "nnf_imp2or" (formula "57") (term "1,0,1,0,0"))
         (rule "nnf_imp2or" (formula "57") (term "1,0,1,0,0,0"))
         (rule "nnf_notAnd" (formula "57") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "57") (term "1,0,0,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0,0,1,0,0,0"))
         (rule "add_literals" (formula "57") (term "0,0,0,1,0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "57") (term "0,0,1,0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1,0,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "57") (term "0,0,0,1,0,0,0"))
         (rule "times_zero_1" (formula "57") (term "1,0,0,0,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "57") (term "0,0,0,0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "57") (term "1,0,0,0,1,0,0,0"))
         (rule "nnf_notAnd" (formula "57") (term "0,0,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "57") (term "1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0,0,1,0,0"))
         (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0,0,1,0,0"))
         (rule "add_literals" (formula "57") (term "0,0,0,1,0,0,1,0,0"))
         (rule "add_zero_left" (formula "57") (term "0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "57") (term "0,0,0,1,0,0"))
         (rule "times_zero_1" (formula "57") (term "1,0,0,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "57") (term "0,0,0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0,0"))
         (rule "mul_literals" (formula "57") (term "1,0,0,0,1,0,0"))
         (rule "nnf_notAnd" (formula "57") (term "0,1,0,1,0,0"))
         (rule "double_not" (formula "57") (term "0,0,1,0,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "57") (term "1,0,1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0,1,0,1,0,0"))
         (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,1,0,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0,1,0,1,0,0"))
         (rule "add_literals" (formula "57") (term "0,0,0,1,0,1,0,1,0,0"))
         (rule "add_zero_left" (formula "57") (term "0,0,1,0,1,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,1,0,1,0,0"))
         (rule "nnf_imp2or" (formula "57") (term "0,1,1,0,1,0,0"))
         (rule "nnf_notAnd" (formula "57") (term "0,1,0,1,0,0,0"))
         (rule "double_not" (formula "57") (term "0,0,1,0,1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "57") (term "1,0,1,0,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0,1,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,1,0,1,0,1,0,0,0"))
         (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0,1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0,1,0,1,0,0,0"))
         (rule "add_literals" (formula "57") (term "0,0,0,1,0,1,0,1,0,0,0"))
         (rule "add_zero_left" (formula "57") (term "0,0,1,0,1,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1,0,1,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,1,0,1,0,0,0"))
         (rule "nnf_imp2or" (formula "57") (term "0,1,1,0,1,0,0,0"))
         (rule "div_axiom" (formula "57") (term "0,1,3,0,0,0,0,0,0,0,1,0,1,0,0,0,0") (inst "quotient=quotient_3"))
         (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
         (rule "qeq_literals" (formula "1") (term "0,1,1"))
         (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
         (rule "equal_literals" (formula "1") (term "0"))
         (rule "concrete_or_2" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
         (rule "polySimp_addComm1" (formula "3") (term "1"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
         (rule "add_literals" (formula "3") (term "0,0,0,1"))
         (rule "polySimp_addComm1" (formula "3") (term "0,1"))
         (rule "add_literals" (formula "3") (term "0,0,1"))
         (rule "inEqSimp_homoInEq0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0"))
         (rule "polySimp_addComm1" (formula "2") (term "0,0"))
         (rule "inEqSimp_homoInEq1" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0"))
         (rule "polySimp_addComm1" (formula "3") (term "0,0"))
         (rule "applyEq" (formula "60") (term "0,1,3,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "60") (term "3,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "60") (term "0,3,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "applyEq" (formula "60") (term "0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "60") (term "3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "60") (term "0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0"))
         (rule "applyEq" (formula "60") (term "0,1,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "60") (term "3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "60") (term "0,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,0"))
         (rule "applyEq" (formula "60") (term "0,1,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "60") (term "3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0"))
         (rule "polySimp_addComm0" (formula "60") (term "0,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0"))
         (rule "applyEq" (formula "60") (term "0,1,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "60") (term "3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0"))
         (rule "polySimp_addComm0" (formula "60") (term "0,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0"))
         (rule "applyEq" (formula "60") (term "0,1,3,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "60") (term "3,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "60") (term "0,3,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0"))
         (rule "applyEq" (formula "60") (term "0,1,3,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "60") (term "3,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "60") (term "0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "applyEq" (formula "60") (term "0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "60") (term "3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "60") (term "0,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "applyEq" (formula "60") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "60") (term "1,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "60") (term "1,0,1,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "60") (term "0,1,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "60") (term "0,0,1,0,0,0,0,0,0,0"))
         (rule "applyEq" (formula "60") (term "0,1,3,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "60") (term "3,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "60") (term "0,3,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "applyEq" (formula "60") (term "0,1,3,0,0,0,0,0,0,0,0,0,1,0,1,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "60") (term "3,0,0,0,0,0,0,0,0,0,1,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "60") (term "0,3,0,0,0,0,0,0,0,0,0,1,0,1,0,0"))
         (rule "applyEq" (formula "60") (term "0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "60") (term "3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0,0"))
         (rule "polySimp_addComm0" (formula "60") (term "0,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0,0"))
         (rule "applyEq" (formula "60") (term "0,1,3,0,0,0,0,0,0,1,0,1,0,0,0,0,1,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "60") (term "3,0,0,0,0,0,0,1,0,1,0,0,0,0,1,1,0,1,0,0,0"))
         (rule "polySimp_addComm0" (formula "60") (term "0,3,0,0,0,0,0,0,1,0,1,0,0,0,0,1,1,0,1,0,0,0"))
         (rule "applyEq" (formula "60") (term "0,1,3,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "60") (term "3,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0"))
         (rule "polySimp_addComm0" (formula "60") (term "0,3,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0"))
         (rule "applyEq" (formula "60") (term "0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "60") (term "0,1,3,0,0,0,0,0,0,0,1,0,1,0,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "60") (term "3,0,0,0,0,0,0,0,1,0,1,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "60") (term "0,3,0,0,0,0,0,0,0,1,0,1,0,0,0,0"))
         (rule "applyEq" (formula "60") (term "0,1,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "60") (term "3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "60") (term "0,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0"))
         (rule "applyEq" (formula "60") (term "0,1,3,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "60") (term "3,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "60") (term "0,3,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "applyEq" (formula "60") (term "0,1,3,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,1,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "60") (term "3,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "60") (term "0,3,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,1,0,0"))
         (rule "applyEq" (formula "60") (term "0,1,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "60") (term "3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "60") (term "0,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "applyEq" (formula "60") (term "0,1,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "60") (term "3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "60") (term "0,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0"))
         (rule "applyEq" (formula "60") (term "0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "60") (term "3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0"))
         (rule "polySimp_addComm0" (formula "60") (term "0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0"))
         (rule "applyEq" (formula "60") (term "0,1,3,0,0,0,0,0,0,1,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "60") (term "3,0,0,0,0,0,0,1,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "60") (term "0,3,0,0,0,0,0,0,1,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1"))
         (rule "polySimp_rightDist" (formula "2") (term "1"))
         (rule "polySimp_rightDist" (formula "2") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
         (rule "mul_literals" (formula "2") (term "0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1"))
         (rule "polySimp_rightDist" (formula "3") (term "1"))
         (rule "polySimp_rightDist" (formula "3") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
         (rule "mul_literals" (formula "3") (term "0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "60") (term "1,1,0,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "60") (term "0,1,1,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "60") (term "1,0,1,1,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "60") (term "0,0,1,1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "8"))
         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
         (rule "add_literals" (formula "2") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
         (rule "mul_literals" (formula "2") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_3,
        Z(neglit(8(4(6(3(8(4(7(4(1(2(#))))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
         (rule "leq_literals" (formula "2") (term "0,0"))
         (rule "concrete_or_2" (formula "2") (term "0"))
         (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
         (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
         (rule "add_literals" (formula "2") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "2") (term "1,0,0"))
         (rule "add_zero_right" (formula "2") (term "0,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
         (rule "add_literals" (formula "2") (term "0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
         (rule "add_literals" (formula "2") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
         (rule "add_literals" (formula "2") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "2") (term "1,0,0"))
         (rule "add_zero_right" (formula "2") (term "0,0"))
         (rule "qeq_literals" (formula "2") (term "0"))
         (rule "concrete_or_2" (formula "2"))
         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "13"))
         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
         (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0"))
         (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
         (rule "mul_literals" (formula "3") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0,0"))
         (rule "add_literals" (formula "3") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1"))
         (rule "polySimp_rightDist" (formula "3") (term "1"))
         (rule "mul_literals" (formula "3") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "5"))
         (rule "polySimp_rightDist" (formula "25") (term "0,0"))
         (rule "mul_literals" (formula "25") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "25") (term "0"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
         (rule "add_literals" (formula "25") (term "0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "25"))
         (rule "polySimp_mulLiterals" (formula "25") (term "0"))
         (rule "polySimp_elimOne" (formula "25") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "5"))
         (rule "mul_literals" (formula "30") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "30") (term "0"))
         (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
         (rule "add_literals" (formula "30") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "30"))
         (rule "polySimp_mulLiterals" (formula "30") (term "0"))
         (rule "polySimp_elimOne" (formula "30") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "5"))
         (rule "polySimp_rightDist" (formula "12") (term "0,0"))
         (rule "mul_literals" (formula "12") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0"))
         (rule "polySimp_addComm1" (formula "12") (term "0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "12") (term "0"))
         (rule "add_literals" (formula "12") (term "1,1,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12"))
         (rule "polySimp_mulComm0" (formula "12") (term "1"))
         (rule "polySimp_rightDist" (formula "12") (term "1"))
         (rule "mul_literals" (formula "12") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
         (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=add(Z(neglit(4(2(8(1(4(7(3(7(0(1(#)))))))))))),
    mul(quotient_3,
        Z(neglit(8(4(6(3(8(4(7(4(1(2(#))))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,1,0"))
         (rule "leq_literals" (formula "12") (term "0,0"))
         (rule "concrete_or_2" (formula "12") (term "0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
         (rule "add_literals" (formula "12") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
         (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
         (rule "add_literals" (formula "12") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0"))
         (rule "leq_literals" (formula "12") (term "0"))
         (rule "concrete_or_2" (formula "12"))
         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
         (rule "mul_literals" (formula "11") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0"))
         (rule "add_literals" (formula "11") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "11"))
         (rule "polySimp_mulLiterals" (formula "11") (term "0"))
         (rule "elimGcdLeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
         (rule "neg_literal" (formula "11") (term "0,0,0,0,0,1,0"))
         (rule "leq_literals" (formula "11") (term "0,0"))
         (rule "concrete_or_2" (formula "11") (term "0"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
         (rule "add_literals" (formula "11") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0"))
         (rule "add_zero_right" (formula "11") (term "0,0"))
         (rule "qeq_literals" (formula "11") (term "0"))
         (rule "concrete_or_2" (formula "11"))
         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "32"))
         (rule "mul_literals" (formula "12") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0"))
         (rule "add_literals" (formula "12") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12"))
         (rule "mul_literals" (formula "12") (term "1"))
         (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
         (rule "leq_literals" (formula "12") (term "0,0"))
         (rule "concrete_or_2" (formula "12") (term "0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
         (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
         (rule "add_literals" (formula "12") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0"))
         (rule "leq_literals" (formula "12") (term "0"))
         (rule "concrete_or_2" (formula "12"))
         (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "28"))
         (rule "mul_literals" (formula "25") (term "0,0"))
         (rule "add_zero_left" (formula "25") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "25"))
         (rule "polySimp_mulLiterals" (formula "25") (term "0"))
         (rule "polySimp_elimOne" (formula "25") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "25") (ifseqformula "34"))
         (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
         (rule "mul_literals" (formula "25") (term "0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
         (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
         (rule "add_literals" (formula "25") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
         (rule "add_literals" (formula "25") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "25") (term "1,0,0"))
         (rule "add_zero_right" (formula "25") (term "0,0"))
         (rule "qeq_literals" (formula "25") (term "0"))
         (rule "concrete_or_1" (formula "25"))
         (rule "true_left" (formula "25"))
         (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "32"))
         (rule "polySimp_rightDist" (formula "14") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "14") (term "0"))
         (rule "add_literals" (formula "14") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14"))
         (rule "mul_literals" (formula "14") (term "1"))
         (rule "inEqSimp_subsumption6" (formula "14") (ifseqformula "12"))
         (rule "greater_literals" (formula "14") (term "0,0"))
         (rule "concrete_and_1" (formula "14") (term "0"))
         (rule "times_zero_1" (formula "14") (term "1,0"))
         (rule "leq_literals" (formula "14") (term "0"))
         (rule "concrete_or_1" (formula "14"))
         (rule "true_left" (formula "14"))
         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
         (rule "mul_literals" (formula "3") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
         (rule "polySimp_addAssoc" (formula "3") (term "0"))
         (rule "polySimp_addComm1" (formula "3") (term "0,0"))
         (rule "add_literals" (formula "3") (term "0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
         (rule "add_literals" (formula "3") (term "1,1,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
         (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "12"))
         (rule "mul_literals" (formula "3") (term "0,1,0"))
         (rule "greater_literals" (formula "3") (term "0,0"))
         (rule "concrete_and_1" (formula "3") (term "0"))
         (rule "leq_literals" (formula "3") (term "0"))
         (rule "concrete_or_1" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "32"))
         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
         (rule "mul_literals" (formula "3") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0"))
         (rule "add_literals" (formula "3") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
         (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "12"))
         (rule "mul_literals" (formula "3") (term "0,1,0"))
         (rule "greater_literals" (formula "3") (term "0,0"))
         (rule "concrete_and_1" (formula "3") (term "0"))
         (rule "leq_literals" (formula "3") (term "0"))
         (rule "concrete_or_1" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "33"))
         (rule "polySimp_rightDist" (formula "14") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0"))
         (rule "polySimp_addComm1" (formula "14") (term "0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "14") (term "0"))
         (rule "add_literals" (formula "14") (term "1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14"))
         (rule "mul_literals" (formula "14") (term "1"))
         (rule "inEqSimp_subsumption6" (formula "14") (ifseqformula "12"))
         (rule "greater_literals" (formula "14") (term "0,0"))
         (rule "concrete_and_1" (formula "14") (term "0"))
         (rule "times_zero_1" (formula "14") (term "1,0"))
         (rule "leq_literals" (formula "14") (term "0"))
         (rule "concrete_or_1" (formula "14"))
         (rule "true_left" (formula "14"))
         (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "11"))
         (rule "replace_known_left" (formula "68") (term "1,0") (ifseqformula "12"))
         (rule "concrete_and_3" (formula "68") (term "0"))
         (rule "applyEqRigid" (formula "34") (term "0,1,1") (ifseqformula "12"))
         (rule "mul_literals" (formula "34") (term "1,1"))
         (rule "add_zero_right" (formula "34") (term "1"))
         (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "12"))
         (rule "times_zero_2" (formula "2") (term "1,1"))
         (rule "add_zero_right" (formula "2") (term "1"))
         (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
         (rule "qeq_literals" (formula "13"))
         (rule "true_left" (formula "13"))
         (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "12"))
         (rule "mul_literals" (formula "3") (term "1,1"))
         (rule "add_zero_right" (formula "3") (term "1"))
         (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
         (rule "leq_literals" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "11"))
         (rule "mul_literals" (formula "13") (term "1,1"))
         (rule "add_zero_right" (formula "13") (term "1"))
         (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "11"))
         (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "11"))
         (rule "mul_literals" (formula "4") (term "1,0,1"))
         (rule "add_zero_right" (formula "4") (term "0,1"))
         (rule "applyEqRigid" (formula "27") (term "0,1,0,1") (ifseqformula "11"))
         (rule "mul_literals" (formula "27") (term "1,0,1"))
         (rule "add_zero_right" (formula "27") (term "0,1"))
         (rule "applyEq" (formula "66") (term "0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "11"))
         (rule "times_zero_2" (formula "66") (term "1,0,1,1,0,0,0,0,0,0"))
         (rule "add_literals" (formula "66") (term "0,1,1,0,0,0,0,0,0"))
         (rule "applyEqRigid" (formula "5") (term "0,1,0,1") (ifseqformula "11"))
         (rule "mul_literals" (formula "5") (term "1,0,1"))
         (rule "add_zero_right" (formula "5") (term "0,1"))
         (rule "applyEqRigid" (formula "66") (term "0,0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0") (ifseqformula "11"))
         (rule "mul_literals" (formula "66") (term "0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0"))
         (rule "add_zero_left" (formula "66") (term "0,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0"))
         (rule "applyEq" (formula "66") (term "0,0,0,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0") (ifseqformula "11"))
         (rule "mul_literals" (formula "66") (term "0,0,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0"))
         (rule "add_zero_left" (formula "66") (term "0,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0"))
         (rule "applyEq" (formula "66") (term "0,0,0,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0") (ifseqformula "11"))
         (rule "mul_literals" (formula "66") (term "0,0,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0"))
         (rule "add_zero_left" (formula "66") (term "0,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0"))
         (rule "applyEqRigid" (formula "66") (term "0,0,0,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0") (ifseqformula "11"))
         (rule "mul_literals" (formula "66") (term "0,0,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0"))
         (rule "add_zero_left" (formula "66") (term "0,3,0,0,0,0,0,0,1,0,1,0,1,0,1,0"))
         (rule "applyEqRigid" (formula "66") (term "0,0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "11"))
         (rule "mul_literals" (formula "66") (term "0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0"))
         (rule "add_zero_left" (formula "66") (term "0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0"))
         (rule "applyEq" (formula "66") (term "0,0,0,3,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,1,0") (ifseqformula "11"))
         (rule "mul_literals" (formula "66") (term "0,0,3,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,1,0"))
         (rule "add_zero_left" (formula "66") (term "0,3,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,1,0"))
         (rule "applyEqRigid" (formula "66") (term "0,0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1") (ifseqformula "11"))
         (rule "mul_literals" (formula "66") (term "0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "add_zero_left" (formula "66") (term "0,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
         (rule "applyEq" (formula "66") (term "0,0,0,3,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0") (ifseqformula "11"))
         (rule "mul_literals" (formula "66") (term "0,0,3,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0"))
         (rule "add_zero_left" (formula "66") (term "0,3,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0"))
         (rule "applyEqRigid" (formula "66") (term "0,0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0") (ifseqformula "11"))
         (rule "mul_literals" (formula "66") (term "0,0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0"))
         (rule "add_zero_left" (formula "66") (term "0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0"))
         (rule "applyEq" (formula "66") (term "0,0,0,3,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0") (ifseqformula "11"))
         (rule "mul_literals" (formula "66") (term "0,0,3,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "66") (term "0,3,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0"))
         (rule "applyEqRigid" (formula "66") (term "0,0,0,3,0,0,0,0,0,0,0,1,0,1,0,0,0") (ifseqformula "11"))
         (rule "mul_literals" (formula "66") (term "0,0,3,0,0,0,0,0,0,0,1,0,1,0,0,0"))
         (rule "add_zero_left" (formula "66") (term "0,3,0,0,0,0,0,0,0,1,0,1,0,0,0"))
         (rule "applyEq" (formula "66") (term "0,0,0,3,0,0,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "11"))
         (rule "times_zero_2" (formula "66") (term "0,0,3,0,0,0,0,0,0,0,0,0,1,0,1,0"))
         (rule "add_zero_left" (formula "66") (term "0,3,0,0,0,0,0,0,0,0,0,1,0,1,0"))
         (rule "applyEq" (formula "66") (term "0,0,0,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0") (ifseqformula "11"))
         (rule "mul_literals" (formula "66") (term "0,0,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0"))
         (rule "add_zero_left" (formula "66") (term "0,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0"))
         (rule "applyEqRigid" (formula "66") (term "0,0,0,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0") (ifseqformula "11"))
         (rule "mul_literals" (formula "66") (term "0,0,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0"))
         (rule "add_zero_left" (formula "66") (term "0,3,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0"))
         (rule "applyEqRigid" (formula "66") (term "0,0,0,3,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "11"))
         (rule "mul_literals" (formula "66") (term "0,0,3,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "66") (term "0,3,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "applyEq" (formula "66") (term "0,0,0,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "11"))
         (rule "times_zero_2" (formula "66") (term "0,0,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "66") (term "0,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "applyEqRigid" (formula "66") (term "0,0,0,3,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "11"))
         (rule "mul_literals" (formula "66") (term "0,0,3,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "66") (term "0,3,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0"))
         (rule "applyEq" (formula "66") (term "0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0") (ifseqformula "11"))
         (rule "mul_literals" (formula "66") (term "0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "66") (term "0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0"))
         (rule "applyEq" (formula "66") (term "0,0,0,3,0,0,0,0,0,0,0,0,0,1,0,1,0,0") (ifseqformula "11"))
         (rule "mul_literals" (formula "66") (term "0,0,3,0,0,0,0,0,0,0,0,0,1,0,1,0,0"))
         (rule "add_zero_left" (formula "66") (term "0,3,0,0,0,0,0,0,0,0,0,1,0,1,0,0"))
         (rule "applyEqRigid" (formula "66") (term "0,0,0,3,0,0,0,0,0,0,1,0,1,0,0,0,0,1,1,0,1,0,0") (ifseqformula "11"))
         (rule "mul_literals" (formula "66") (term "0,0,3,0,0,0,0,0,0,1,0,1,0,0,0,0,1,1,0,1,0,0"))
         (rule "add_zero_left" (formula "66") (term "0,3,0,0,0,0,0,0,1,0,1,0,0,0,0,1,1,0,1,0,0"))
         (rule "applyEq" (formula "66") (term "0,0,0,3,0,0,0,0,0,0,1,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0") (ifseqformula "11"))
         (rule "mul_literals" (formula "66") (term "0,0,3,0,0,0,0,0,0,1,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "66") (term "0,3,0,0,0,0,0,0,1,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "13"))
         (rule "leq_literals" (formula "3") (term "0"))
         (rule "concrete_or_1" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "2"))
         (rule "leq_literals" (formula "31") (term "0"))
         (rule "concrete_or_1" (formula "31"))
         (rule "true_left" (formula "31"))
         (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "11"))
         (rule "leq_literals" (formula "12") (term "0"))
         (rule "concrete_or_1" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "29"))
         (rule "leq_literals" (formula "2") (term "0"))
         (rule "concrete_or_1" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "3"))
         (rule "polySimp_rightDist" (formula "11") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
         (rule "mul_literals" (formula "11") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0"))
         (rule "polySimp_addComm1" (formula "11") (term "0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "11") (term "0"))
         (rule "add_literals" (formula "11") (term "1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
         (rule "mul_literals" (formula "11") (term "1"))
         (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "10"))
         (rule "greater_literals" (formula "11") (term "0,0"))
         (rule "concrete_and_1" (formula "11") (term "0"))
         (rule "mul_literals" (formula "11") (term "1,0"))
         (rule "leq_literals" (formula "11") (term "0"))
         (rule "concrete_or_1" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "3"))
         (rule "polySimp_rightDist" (formula "25") (term "0,0"))
         (rule "mul_literals" (formula "25") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "25") (term "0"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
         (rule "add_literals" (formula "25") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "25"))
         (rule "polySimp_mulLiterals" (formula "25") (term "0"))
         (rule "polySimp_elimOne" (formula "25") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "13"))
         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
         (rule "mul_literals" (formula "2") (term "0,0,0"))
         (rule "polySimp_elimOne" (formula "2") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0"))
         (rule "add_literals" (formula "2") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
         (rule "mul_literals" (formula "2") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "11"))
         (rule "leq_literals" (formula "2") (term "0"))
         (rule "concrete_or_1" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "3"))
         (rule "mul_literals" (formula "29") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "29") (term "0"))
         (rule "add_literals" (formula "29") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "29"))
         (rule "polySimp_mulLiterals" (formula "29") (term "0"))
         (rule "polySimp_elimOne" (formula "29") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "29") (ifseqformula "28"))
         (rule "leq_literals" (formula "29") (term "0"))
         (rule "concrete_or_1" (formula "29"))
         (rule "true_left" (formula "29"))
         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "8"))
         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
         (rule "mul_literals" (formula "2") (term "0,0,0"))
         (rule "polySimp_elimOne" (formula "2") (term "1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
         (rule "add_literals" (formula "2") (term "1,1,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "inEqSimp_subsumption4" (formula "2") (ifseqformula "29"))
         (rule "mul_literals" (formula "2") (term "0,1,0"))
         (rule "greater_literals" (formula "2") (term "0,0"))
         (rule "concrete_and_1" (formula "2") (term "0"))
         (rule "leq_literals" (formula "2") (term "0"))
         (rule "concrete_or_1" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "24"))
         (rule "mul_literals" (formula "21") (term "0,0"))
         (rule "add_zero_left" (formula "21") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "21"))
         (rule "polySimp_mulLiterals" (formula "21") (term "0"))
         (rule "polySimp_elimOne" (formula "21") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "29"))
         (rule "leq_literals" (formula "21") (term "0"))
         (rule "concrete_or_1" (formula "21"))
         (rule "true_left" (formula "21"))
         (rule "commute_or_2" (formula "35") (term "0,0,1,0"))
         (rule "cnf_rightDist" (formula "54") (term "0,1,1,0"))
         (rule "all_pull_out3" (formula "53") (term "1,0"))
         (rule "nnf_notAnd" (formula "62") (term "0,0,0,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "62") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "62") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "62") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "62") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "nnf_notOr" (formula "62") (term "0,0,1,1,0,1,0"))
         (rule "nnf_notAnd" (formula "62") (term "0,0,1,1,0,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "62") (term "0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,1,1,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,1,1,0,1,0,0"))
         (rule "mul_literals" (formula "62") (term "0,1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,1,1,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,1,1,0,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,0,1,1,0,1,0,0"))
         (rule "add_literals" (formula "62") (term "0,0,0,1,0,0,1,1,0,1,0,0"))
         (rule "add_zero_left" (formula "62") (term "0,0,1,0,0,1,1,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,1,1,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,1,1,0,1,0,0"))
         (rule "nnf_imp2or" (formula "62") (term "0,1,0,0,0,0,0,0,0,0"))
         (rule "nnf_imp2or" (formula "62") (term "0,1,0,0,0,0,0,0,0"))
         (rule "allLeft" (formula "31") (inst "t=mul(i_1_0, Z(2(#)))"))
         (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "53"))
         (rule "concrete_not_1" (formula "31") (term "0,0"))
         (rule "concrete_or_2" (formula "31") (term "0"))
         (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
         (rule "inEqSimp_contradInEq5" (formula "31") (term "0") (ifseqformula "51"))
         (rule "mul_literals" (formula "31") (term "1,1,0,0"))
         (rule "greater_literals" (formula "31") (term "0,0,0"))
         (rule "concrete_impl_1" (formula "31") (term "0,0"))
         (rule "qeq_literals" (formula "31") (term "0,0"))
         (rule "concrete_and_2" (formula "31") (term "0"))
         (rule "concrete_or_2" (formula "31"))
         (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "31"))
         (rule "mul_literals" (formula "34") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "34"))
         (rule "mul_literals" (formula "34") (term "1"))
         (rule "elimGcdGeq_antec" (formula "34") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=i_1_0") (inst "elimGcd=Z(2(#))"))
         (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0,1,0"))
         (rule "leq_literals" (formula "34") (term "0,0"))
         (rule "concrete_or_2" (formula "34") (term "0"))
         (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
         (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
         (rule "polySimp_addLiterals" (formula "34") (term "0,0,0,0"))
         (rule "add_literals" (formula "34") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
         (rule "add_literals" (formula "34") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "34") (term "1,0,0"))
         (rule "add_zero_right" (formula "34") (term "0,0"))
         (rule "leq_literals" (formula "34") (term "0"))
         (rule "concrete_or_2" (formula "34"))
         (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "34"))
         (rule "leq_literals" (formula "52") (term "0"))
         (rule "concrete_or_1" (formula "52"))
         (rule "true_left" (formula "52"))
         (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "31"))
         (rule "polySimp_mulAssoc" (formula "41") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "41"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1"))
         (rule "inEqSimp_contradInEq3" (formula "41") (ifseqformula "53"))
         (rule "greater_literals" (formula "41") (term "0,0"))
         (rule "concrete_impl_1" (formula "41") (term "0"))
         (rule "andLeft" (formula "41"))
         (rule "polySimp_rightDist" (formula "41") (term "0"))
         (rule "mul_literals" (formula "41") (term "0,0"))
         (rule "inEqSimp_homoInEq1" (formula "41"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,0"))
         (rule "mul_literals" (formula "41") (term "0,1,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0"))
         (rule "polySimp_addAssoc" (formula "41") (term "0"))
         (rule "polySimp_addComm0" (formula "41") (term "0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "41") (term "0"))
         (rule "add_literals" (formula "41") (term "1,1,0"))
         (rule "times_zero_1" (formula "41") (term "1,0"))
         (rule "add_zero_right" (formula "41") (term "0"))
         (rule "leq_literals" (formula "41"))
         (rule "closeFalse" (formula "41"))
      )
      (branch "Null Reference (newObject = null)"
         (rule "false_right" (formula "22"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "close" (formula "19") (ifseqformula "1"))
      )
   )
)
(branch
   (rule "simplifyUpdate2" (formula "15"))
   (rule "equal_literals" (formula "15") (term "0"))
   (rule "concrete_not_2" (formula "15"))
   (rule "closeTrue" (formula "15"))
)
)
}
