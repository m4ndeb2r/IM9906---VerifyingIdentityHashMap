\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Sep 22 23:18:48 CEST 2021
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , javaLoopTreatment-javaLoopTreatment\\:efficient
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=100000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\bootclasspath "../../../../jre";

\javaSource "../../../../src";

\include "../../../../functions.key";

\proofObligation "#Proof Obligation Settings
#Wed Sep 22 23:18:48 CEST 2021
contract=java.util.VerifiedIdentityHashMap[java.util.Map\\:\\:clear()].JML behavior operation contract.0
name=java.util.VerifiedIdentityHashMap[java.util.Map\\:\\:clear()].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "martindeboer" ) (keyVersion "a6034b00a3"))
(keyLog "1" (keyUser "martindeboer" ) (keyVersion "a6034b00a3"))

(autoModeTime "33145")

(branch "dummy ID"
(rule "instanceof_static_type" (formula "1") (term "0,0,0,1,1,0,0,1,1") (newnames "self,exc,heapAtPre,o,f"))
(rule "boolean_equal" (formula "1") (term "0,0,1,1,0,0,1,1"))
(rule "concrete_impl_1" (formula "1") (term "0,1,1,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "7") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "7") (term "1"))
(rule "sequentialToParallel2" (formula "7"))
(rule "simplifyUpdate3" (formula "7") (term "1,0"))
(rule "elementOfSetMinus" (formula "7") (term "0,0,0,0,1,0,1"))
(rule "elementOfAllLocs" (formula "7") (term "0,0,0,0,0,1,0,1"))
(rule "concrete_and_1" (formula "7") (term "0,0,0,0,1,0,1"))
(rule "elementOfFreshLocs" (formula "7") (term "0,0,0,0,0,1,0,1"))
(rule "neq_or_2" (formula "7") (term "0,0,0,1,0,1"))
(rule "concrete_or_1" (formula "7") (term "0,0,1,0,1"))
(rule "simplifyUpdate2" (formula "7"))
(rule "all_unused" (formula "7") (term "0,1,0,1"))
(rule "all_unused" (formula "7") (term "1,0,1"))
(rule "concrete_and_3" (formula "7") (term "0,1"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_clear,savedHeapBefore_clear"))
(rule "simplifyUpdate2" (formula "7") (term "1"))
(rule "postincrement_attribute" (formula "7") (term "1") (inst "#v=v"))
(rule "variableDeclarationAssign" (formula "7") (term "1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "v"))
(rule "assignment" (formula "7") (term "1"))
(rule "sequentialToParallel2" (formula "7"))
(rule "simplifyUpdate3" (formula "7") (term "1,0"))
(rule "eval_order_access4" (formula "7") (term "1") (inst "#v0=v_1") (inst "#v1=x"))
(rule "variableDeclarationAssign" (formula "7") (term "1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "v_1"))
(rule "assignment" (formula "7") (term "1"))
(rule "sequentialToParallel2" (formula "7"))
(rule "simplifyUpdate3" (formula "7") (term "1,0"))
(rule "applyOnElementary" (formula "7") (term "1,0"))
(rule "applyOnPV" (formula "7") (term "0,1,0"))
(rule "variableDeclarationAssign" (formula "7") (term "1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "x"))
(rule "compound_int_cast_expression" (formula "7") (term "1") (inst "#v=x_1"))
(rule "variableDeclarationAssign" (formula "7") (term "1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "x_1"))
(rule "remove_parentheses_right" (formula "7") (term "1"))
(rule "compound_addition_1" (formula "7") (term "1") (inst "#v=x_2"))
(rule "variableDeclarationAssign" (formula "7") (term "1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "x_2"))
(rule "assignment_read_attribute" (formula "7"))
(branch "Normal Execution (v != null)"
   (rule "sequentialToParallel2" (formula "7"))
   (rule "simplifyUpdate2" (formula "7"))
   (rule "simplifyUpdate3" (formula "7") (term "1,0"))
   (rule "applyOnElementary" (formula "7") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "7") (term "0,1,0"))
   (rule "applyOnPV" (formula "7") (term "1,0,1,0"))
   (rule "simplifyUpdate1" (formula "7") (term "2,0,1,0"))
   (rule "simplifyUpdate1" (formula "7") (term "0,0,1,0"))
   (rule "assignmentAdditionInt" (formula "7") (term "1"))
   (rule "translateJavaAddInt" (formula "7") (term "0,0,1"))
   (rule "sequentialToParallel2" (formula "7"))
   (rule "simplifyUpdate2" (formula "7"))
   (rule "simplifyUpdate3" (formula "7") (term "1,0"))
   (rule "applyOnElementary" (formula "7") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "7") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "7") (term "1,0,1,0"))
   (rule "applyOnPV" (formula "7") (term "0,0,1,0"))
   (rule "expand_addJint" (formula "7") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "7") (term "0,0,1,0"))
   (rule "expand_moduloInteger" (formula "7") (term "0,1,0"))
   (rule "replace_int_RANGE" (formula "7") (term "1,1,0,1,0"))
   (rule "replace_int_HALFRANGE" (formula "7") (term "0,0,1,0,1,0"))
   (rule "replace_int_MIN" (formula "7") (term "0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,1,0"))
   (rule "add_literals" (formula "7") (term "0,0,1,0,1,0"))
   (rule "widening_identity_cast_5" (formula "7") (term "1"))
   (rule "assignment" (formula "7") (term "1"))
   (rule "sequentialToParallel2" (formula "7"))
   (rule "simplifyUpdate2" (formula "7"))
   (rule "simplifyUpdate3" (formula "7") (term "1,0"))
   (rule "applyOnElementary" (formula "7") (term "1,0"))
   (rule "applyOnPV" (formula "7") (term "0,1,0"))
   (rule "assignment_write_attribute" (formula "7"))
   (branch "Normal Execution (v_1 != null)"
      (rule "sequentialToParallel2" (formula "7"))
      (rule "simplifyUpdate2" (formula "7"))
      (rule "simplifyUpdate3" (formula "7") (term "1,0"))
      (rule "applyOnElementary" (formula "7") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "7") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "7") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "7") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "7") (term "3,0,1,0"))
      (rule "simplifyUpdate1" (formula "7") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "7") (term "1,0,1,0"))
      (rule "applyOnPV" (formula "7") (term "3,0,1,0"))
      (rule "variableDeclarationAssign" (formula "7") (term "1"))
      (rule "variableDeclaration" (formula "7") (term "1") (newnames "tab"))
      (rule "assignment_read_attribute_this" (formula "7"))
      (rule "sequentialToParallel2" (formula "7"))
      (rule "simplifyUpdate3" (formula "7") (term "1,0"))
      (rule "applyOnElementary" (formula "7") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "7") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "7") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "7") (term "2,0,1,0"))
      (rule "applyOnPV" (formula "7") (term "0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "7") (term "0,1,0"))
      (rule "for_to_while" (formula "7") (term "1") (inst "#innerLabel=_label0") (inst "#outerLabel=_label1"))
      (rule "variableDeclarationAssign" (formula "7") (term "1"))
      (rule "variableDeclaration" (formula "7") (term "1") (newnames "i"))
      (rule "assignment" (formula "7") (term "1"))
      (rule "sequentialToParallel2" (formula "7"))
      (rule "simplifyUpdate3" (formula "7") (term "1,0"))
      (rule "elim_double_block_3" (formula "7") (term "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "0,1,0,0") (ifseqformula "1"))
      (rule "Partial_inv_axiom_for_JML_class_invariant_nr_2_in_VerifiedIdentityHashMap" (formula "6"))
       (builtin "Loop Invariant" (formula "9") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
      (branch "Invariant Initially Valid"
         (rule "simplifyUpdate2" (formula "9"))
         (rule "notLeft" (formula "6"))
         (rule "applyOnRigidFormula" (formula "9"))
         (rule "simplifyUpdate2" (formula "9") (term "1"))
         (rule "applyOnRigidFormula" (formula "9") (term "0"))
         (rule "simplifyUpdate2" (formula "9") (term "0,0"))
         (rule "applyOnRigidFormula" (formula "9") (term "1"))
         (rule "applyOnPV" (formula "9") (term "0,1"))
         (rule "wellFormedStorePrimitive" (formula "9") (term "1"))
         (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "2"))
         (rule "concrete_and_3" (formula "9"))
         (rule "applyOnRigidFormula" (formula "9") (term "0"))
         (rule "simplifyUpdate2" (formula "9") (term "0,0"))
         (rule "applyOnRigidFormula" (formula "9") (term "1"))
         (rule "applyOnRigidFormula" (formula "9") (term "1,0"))
         (rule "simplifyUpdate1" (formula "9") (term "1,1,0"))
         (rule "simplifyUpdate1" (formula "9") (term "0,1,0"))
         (rule "applyOnPV" (formula "9") (term "0,1,0"))
         (rule "applyOnRigidFormula" (formula "9") (term "0,0"))
         (rule "applyOnPV" (formula "9") (term "1,0,0"))
         (rule "simplifyUpdate1" (formula "9") (term "0,0,0"))
         (rule "leq_literals" (formula "9") (term "0,0"))
         (rule "concrete_and_1" (formula "9") (term "0"))
         (rule "applyOnRigidFormula" (formula "9") (term "0,1"))
         (rule "simplifyUpdate2" (formula "9") (term "1,0,1"))
         (rule "simplifyUpdate2" (formula "9") (term "0,0,1"))
         (rule "applyOnRigidTerm" (formula "9") (term "1,0"))
         (rule "applyOnPV" (formula "9") (term "0,1,0"))
         (rule "applyOnRigidFormula" (formula "9") (term "1,0,1"))
         (rule "simplifyUpdate1" (formula "9") (term "1,1,0,1"))
         (rule "applyOnRigidFormula" (formula "9") (term "0,0,1"))
         (rule "simplifyUpdate2" (formula "9") (term "0,0,0,1"))
         (rule "applyOnRigidTerm" (formula "9") (term "0,1,0,1"))
         (rule "simplifyUpdate1" (formula "9") (term "2,0,1,0,1"))
         (rule "simplifyUpdate1" (formula "9") (term "0,0,1,0,1"))
         (rule "simplifyUpdate1" (formula "9") (term "1,0,1,0,1"))
         (rule "applyOnPV" (formula "9") (term "0,0,1,0,1"))
         (rule "applyOnPV" (formula "9") (term "1,0,1,0,1"))
         (rule "applyOnRigidFormula" (formula "9") (term "1,0,0,1"))
         (rule "simplifyUpdate1" (formula "9") (term "0,1,0,0,1"))
         (rule "applyOnPV" (formula "9") (term "1,1,0,0,1"))
         (rule "dismissNonSelectedField" (formula "9") (term "0,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1"))
         (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,1"))
         (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "9") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1"))
         (rule "mul_literals" (formula "9") (term "1,1,0,0,1"))
         (rule "nnf_imp2or" (formula "9") (term "0,1"))
         (rule "nnf_notAnd" (formula "9") (term "0,0,1"))
         (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,1"))
         (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1"))
         (rule "mul_literals" (formula "9") (term "1,0,0,0,1"))
         (rule "neq_or" (formula "9") (term "0,0,1"))
         (rule "concrete_or_1" (formula "9") (term "0,1"))
         (rule "all_unused" (formula "9") (term "1"))
         (rule "concrete_and_3" (formula "9"))
         (rule "inEqSimp_geqRight" (formula "9"))
         (rule "times_zero_1" (formula "1") (term "1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "7") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "5"))
         (rule "insert_constant_value" (formula "7") (term "1,1,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "7") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "7") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "7") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "eqClose" (formula "7") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_3" (formula "7") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "7") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "eqClose" (formula "7") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_3" (formula "7") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "7") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "eqClose" (formula "7") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_3" (formula "7") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "expand_inInt" (formula "7") (term "1,1"))
         (rule "expand_inInt" (formula "7") (term "0,1"))
         (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "replace_int_MIN" (formula "7") (term "0,1,1,1"))
         (rule "replace_int_MAX" (formula "7") (term "1,0,1,1"))
         (rule "replace_int_MIN" (formula "7") (term "0,1,0,1"))
         (rule "replace_int_MAX" (formula "7") (term "1,0,0,1"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "notLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "notLeft" (formula "7"))
         (rule "exLeft" (formula "14") (inst "sk=i_1_0"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "exLeft" (formula "13") (inst "sk=i_2_0"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "eqSymm" (formula "12"))
         (rule "eqSymm" (formula "10") (term "1,0,1,0,1,0"))
         (rule "eqSymm" (formula "10") (term "1,1,0,1,0"))
         (rule "eqSymm" (formula "15"))
         (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "26"))
         (rule "concrete_or_2" (formula "2"))
         (rule "polySimp_mulComm0" (formula "20") (term "0,2,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "0,2,0,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "0,2,0,1,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "0,2,0,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,2,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,2,0,1,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,2,0,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,2,0,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "0,2,0,0,0,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "0,2,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "0,2,0,0,0,2,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "0,2,0,1,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "0,2,1,1,0,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "9") (term "0,2,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "11"))
         (rule "mul_literals" (formula "11") (term "1,0,0"))
         (rule "add_literals" (formula "11") (term "0,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "17"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "17") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "14"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "14") (term "0"))
         (rule "ifthenelse_negated" (formula "12") (term "2,0"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_addComm1" (formula "20") (term "0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_mulAssoc" (formula "20") (term "1,0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1,1,0,0,1,1,0"))
         (rule "inEqSimp_gtToGeq" (formula "19") (term "1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_addComm1" (formula "19") (term "0,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "23"))
         (rule "inEqSimp_commuteLeq" (formula "25"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
         (rule "inEqSimp_commuteGeq" (formula "8"))
         (rule "inEqSimp_commuteLeq" (formula "7"))
         (rule "inEqSimp_commuteLeq" (formula "16"))
         (rule "inEqSimp_commuteLeq" (formula "13"))
         (rule "inEqSimp_commuteLeq" (formula "20") (term "0,1,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,1,0"))
         (rule "applyEq" (formula "19") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "15"))
         (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "15"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "15"))
         (rule "applyEq" (formula "7") (term "0") (ifseqformula "15"))
         (rule "applyEq" (formula "20") (term "1,0,1,0,1,0,1,0") (ifseqformula "15"))
         (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "15"))
         (rule "applyEq" (formula "19") (term "1,0,1,0,1,0,1,0") (ifseqformula "15"))
         (rule "applyEq" (formula "20") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
         (rule "applyEq" (formula "17") (term "0,0,1,0") (ifseqformula "15"))
         (rule "applyEq" (formula "10") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "15"))
         (rule "applyEq" (formula "20") (term "0,0,1,0,0,1,0,0") (ifseqformula "15"))
         (rule "applyEq" (formula "10") (term "0,0,1,0,0,1,0,0") (ifseqformula "15"))
         (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "15"))
         (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "15"))
         (rule "applyEq" (formula "9") (term "0,0,1,0,0,1,0,0") (ifseqformula "15"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11"))
         (rule "mul_literals" (formula "11") (term "1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "20") (term "0,1,1,1,0,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "20") (term "0,1,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "14"))
         (rule "polySimp_mulLiterals" (formula "14") (term "0"))
         (rule "polySimp_elimOne" (formula "14") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "19") (term "0,1,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "17"))
         (rule "polySimp_mulLiterals" (formula "17") (term "0"))
         (rule "polySimp_elimOne" (formula "17") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
         (rule "qeq_literals" (formula "1") (term "0"))
         (rule "concrete_and_2" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Body Preserves Invariant"
         (rule "simplifyUpdate2" (formula "9"))
         (rule "expand_inInt" (formula "9") (term "1,1,1"))
         (rule "replace_int_MIN" (formula "9") (term "0,1,1,1,1"))
         (rule "replace_int_MAX" (formula "9") (term "1,0,1,1,1"))
         (rule "sequentialToParallel2" (formula "9"))
         (rule "simplifyUpdate2" (formula "9"))
         (rule "simplifyUpdate3" (formula "9") (term "1,0"))
         (rule "andLeft" (formula "9"))
         (rule "simplifyUpdate2" (formula "10"))
         (rule "simplifyUpdate3" (formula "10") (term "0"))
         (rule "andLeft" (formula "9"))
         (rule "simplifyUpdate2" (formula "9"))
         (rule "simplifyUpdate3" (formula "9") (term "1,0"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "9"))
         (rule "simplifyUpdate2" (formula "9"))
         (rule "applyOnParallel" (formula "11") (term "1,0"))
         (rule "simplifyUpdate3" (formula "11") (term "0,1,0"))
         (rule "applyOnElementary" (formula "11") (term "1,1,0"))
         (rule "applyOnRigidFormula" (formula "12"))
         (rule "simplifyUpdate1" (formula "12") (term "1"))
         (rule "applyOnPV" (formula "12") (term "0"))
         (rule "applyOnRigidFormula" (formula "13"))
         (rule "applyOnPV" (formula "13") (term "1"))
         (rule "simplifyUpdate1" (formula "13") (term "0"))
         (rule "applyOnRigidFormula" (formula "10"))
         (rule "simplifyUpdate1" (formula "10") (term "1"))
         (rule "simplifyUpdate1" (formula "10") (term "0"))
         (rule "applyOnPV" (formula "10") (term "0"))
         (rule "applyOnRigidFormula" (formula "9"))
         (rule "applyOnPV" (formula "9") (term "1"))
         (rule "simplifyUpdate1" (formula "9") (term "0"))
         (rule "applyOnRigidFormula" (formula "11"))
         (rule "applyOnRigidTerm" (formula "10") (term "1"))
         (rule "applyOnPV" (formula "10") (term "0,1"))
         (rule "applyOnRigidTerm" (formula "11") (term "0,1,1,0,0"))
         (rule "simplifyUpdate1" (formula "11") (term "2,0,1,1,0,0"))
         (rule "applyOnPV" (formula "11") (term "0,0,1,1,0,0"))
         (rule "applyOnRigidTerm" (formula "11") (term "1,0,1,1,0,0"))
         (rule "applyOnRigidFormula" (formula "11") (term "0"))
         (rule "simplifyUpdate2" (formula "11") (term "1,0"))
         (rule "simplifyUpdate2" (formula "11") (term "0,0"))
         (rule "applyOnRigidTerm" (formula "11") (term "0,1,0,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "11") (term "2,0,1,0,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "11") (term "1,0,1,0,1,0,1,0"))
         (rule "applyOnPV" (formula "11") (term "0,0,1,0,1,0,1,0"))
         (rule "applyOnRigidFormula" (formula "11") (term "0,0"))
         (rule "simplifyUpdate2" (formula "11") (term "0,0,0"))
         (rule "applyOnRigidFormula" (formula "11") (term "1,0"))
         (rule "simplifyUpdate1" (formula "11") (term "1,1,0"))
         (rule "applyOnRigidFormula" (formula "11") (term "1,0,0"))
         (rule "applyOnPV" (formula "11") (term "1,1,0,0"))
         (rule "simplifyUpdate1" (formula "11") (term "0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "11") (term "0,1,0,1,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "11") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "11") (term "2,0,1,0"))
         (rule "simplifyUpdate1" (formula "11") (term "1,0,1,0"))
         (rule "simplifyUpdate1" (formula "11") (term "0,0,1,0"))
         (rule "applyOnPV" (formula "11") (term "1,0,1,0"))
         (rule "applyOnPV" (formula "11") (term "0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "13"))
         (rule "inEqSimp_commuteLeq" (formula "9"))
         (rule "inEqSimp_commuteLeq" (formula "10"))
         (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
         (rule "commute_and" (formula "11") (term "0,0"))
         (rule "arrayLengthNotNegative" (formula "10") (term "0"))
         (rule "arrayLengthIsAShort" (formula "11") (term "0"))
         (rule "expand_inShort" (formula "11"))
         (rule "replace_short_MIN" (formula "11") (term "0,1"))
         (rule "replace_short_MAX" (formula "11") (term "1,0"))
         (rule "andLeft" (formula "11"))
         (rule "inEqSimp_commuteLeq" (formula "12"))
         (rule "elementOfAllFields" (formula "18") (term "0,0,0,0,1,0,1,1,0,1,1,1,1,1"))
         (rule "simplifyUpdate2" (formula "18") (term "1"))
         (rule "notLeft" (formula "6"))
         (rule "eqSymm" (formula "18") (term "1,0,0,1,0,1,1,0,1,1,1,1,1"))
         (rule "translateJavaSubInt" (formula "18") (term "0,0,1,1,1"))
         (rule "translateJavaSubInt" (formula "18") (term "0,1,1,1,0,1,1,1,1,1"))
         (rule "sequentialToParallel2" (formula "18") (term "1,1"))
         (rule "simplifyUpdate3" (formula "18") (term "1,0,1,1"))
         (rule "applyOnElementary" (formula "18") (term "1,0,1,1"))
         (rule "sequentialToParallel2" (formula "18"))
         (rule "simplifyUpdate3" (formula "18") (term "1,0"))
         (rule "applyOnElementary" (formula "18") (term "1,0"))
         (rule "applyOnPV" (formula "18") (term "0,1,0"))
         (rule "sequentialToParallel2" (formula "18"))
         (rule "simplifyUpdate2" (formula "18"))
         (rule "simplifyUpdate3" (formula "18") (term "1,0"))
         (rule "impRight" (formula "18"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "simplifyUpdate3" (formula "1") (term "1,0"))
         (rule "applyOnParallel" (formula "19") (term "1,0"))
         (rule "simplifyUpdate3" (formula "19") (term "1,1,0"))
         (rule "simplifyUpdate3" (formula "19") (term "0,1,0"))
         (rule "applyOnParallel" (formula "1") (term "1,0"))
         (rule "simplifyUpdate3" (formula "1") (term "0,1,0"))
         (rule "applyOnElementary" (formula "19") (term "1,1,0"))
         (rule "applyOnParallel" (formula "19") (term "0,1,0"))
         (rule "simplifyUpdate3" (formula "19") (term "0,0,1,0"))
         (rule "applyOnElementary" (formula "1") (term "1,1,0"))
         (rule "applyOnElementary" (formula "19") (term "1,0,1,0"))
         (rule "sequentialToParallel1" (formula "19") (term "0,1,1,0"))
         (rule "simplifyUpdate1" (formula "19") (term "0,1,1,0"))
         (rule "simplifyUpdate3" (formula "19") (term "1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "0,1,1,0"))
         (rule "applyOnPV" (formula "1") (term "0,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "2,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "19") (term "0,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "19") (term "2,0,1,0,1,0"))
         (rule "applyOnPV" (formula "19") (term "0,0,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "19") (term "0,1,1,0"))
         (rule "simplifyUpdate1" (formula "19") (term "1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "19") (term "0,0,1,1,0"))
         (rule "applyOnPV" (formula "19") (term "1,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
         (rule "applyOnRigidTerm" (formula "19") (term "1,0,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "19") (term "0,0,1,1,0"))
         (rule "applyOnPV" (formula "19") (term "0,0,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "0,1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "1,0,1,0,1,1,0"))
         (rule "applyOnPV" (formula "1") (term "0,0,1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "2,0,1,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "19") (term "0,1,0,1,0,1,0"))
         (rule "applyOnPV" (formula "19") (term "0,0,1,0,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "19") (term "2,0,1,0,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "19") (term "1,0,1,0,1,0,1,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "0,1,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "19") (term "0,1,0,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0,0,1,1,0,1"))
         (rule "variableDeclarationAssign" (formula "1") (term "1"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_1"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "exc_1"))
         (rule "assignment" (formula "19") (term "1"))
         (rule "sequentialToParallel2" (formula "19"))
         (rule "simplifyUpdate3" (formula "19") (term "1,0"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "thrownExc"))
         (rule "blockThrow" (formula "19") (term "1,0,0,1"))
         (rule "mod_axiom" (formula "14") (term "1,3,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,3,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "3,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,3,0,0,0,1,0"))
         (rule "add_literals" (formula "14") (term "0,0,3,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
         (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
         (rule "leq_literals" (formula "12") (term "0"))
         (rule "concrete_or_1" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "9"))
         (rule "leq_literals" (formula "15") (term "0"))
         (rule "concrete_or_1" (formula "15"))
         (rule "true_left" (formula "15"))
         (rule "polyDiv_pullOut" (formula "13") (term "0,1,3,0,0,0,1,0") (inst "polyDivCoeff=Z(1(#))"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,1,3,0,0,0,1,0"))
         (rule "equal_literals" (formula "13") (term "0,0,1,3,0,0,0,1,0"))
         (rule "ifthenelse_false" (formula "13") (term "0,1,3,0,0,0,1,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0,1,3,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,3,0,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "13") (term "1,1,3,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,3,0,0,0,1,0"))
         (rule "add_literals" (formula "13") (term "0,0,1,1,1,3,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,3,0,0,0,1,0"))
         (rule "mul_literals" (formula "13") (term "0,1,3,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "3,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "13") (term "0,3,0,0,0,1,0"))
         (rule "add_literals" (formula "13") (term "0,0,3,0,0,0,1,0"))
         (rule "polyMod_pullOut" (formula "17") (term "1,3,0,1,0,0,0") (inst "polyDivCoeff=Z(1(#))"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,3,0,1,0,0,0"))
         (rule "mul_literals" (formula "17") (term "1,0,1,3,0,1,0,0,0"))
         (rule "polySimp_addComm1" (formula "17") (term "0,1,3,0,1,0,0,0"))
         (rule "add_literals" (formula "17") (term "0,0,1,3,0,1,0,0,0"))
         (rule "polyMod_pullOut" (formula "17") (term "1,3,0,0,1,0,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,3,0,0,1,0,1,0,0"))
         (rule "mul_literals" (formula "17") (term "1,0,1,3,0,0,1,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "17") (term "0,1,3,0,0,1,0,1,0,0"))
         (rule "add_literals" (formula "17") (term "0,0,1,3,0,0,1,0,1,0,0"))
         (rule "polyMod_pullOut" (formula "1") (term "1,3,0,0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,3,0,0,1,1,0"))
         (rule "mul_literals" (formula "1") (term "1,0,1,3,0,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,1,3,0,0,1,1,0"))
         (rule "add_literals" (formula "1") (term "0,0,1,3,0,0,1,1,0"))
         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "11"))
         (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
         (rule "polySimp_addComm0" (formula "12") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "12"))
         (rule "polySimp_mulLiterals" (formula "12") (term "0"))
         (rule "polySimp_elimOne" (formula "12") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "12"))
         (rule "leq_literals" (formula "15") (term "0"))
         (rule "concrete_or_1" (formula "15"))
         (rule "true_left" (formula "15"))
         (rule "boxToDiamond" (formula "1") (term "1"))
         (rule "notLeft" (formula "1"))
         (rule "expand_subJint" (formula "17") (term "0,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "17") (term "0,0,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "17") (term "0,0,1,1,0,0"))
         (rule "expand_subJint" (formula "17") (term "0,1,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "17") (term "0,0,1,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "17") (term "0,0,1,1,1,0,1"))
         (rule "nnf_imp2or" (formula "13") (term "0"))
         (rule "expand_moduloInteger" (formula "17") (term "0,1,1,0,0"))
         (rule "replace_int_MIN" (formula "17") (term "0,0,1,1,0,0"))
         (rule "replace_int_RANGE" (formula "17") (term "1,1,0,1,1,0,0"))
         (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,0,1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,1,0,1,1,0,0"))
         (rule "expand_moduloInteger" (formula "17") (term "0,1,1,1,0,1"))
         (rule "replace_int_RANGE" (formula "17") (term "1,1,0,1,1,1,0,1"))
         (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,0,1,1,1,0,1"))
         (rule "replace_int_MIN" (formula "17") (term "0,0,1,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,1,0,1,1,1,0,1"))
         (rule "nnf_notAnd" (formula "13") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
         (rule "mul_literals" (formula "13") (term "1,1,0,0"))
         (rule "nnf_imp2or" (formula "17") (term "0,1,0,0,1,1,0,1"))
         (rule "nnf_notAnd" (formula "17") (term "0,0,1,0,0,1,1,0,1"))
         (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,0,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,1,0,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
         (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,0,0,1,1,0,1"))
         (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,0,0,1,1,0,1"))
         (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,1,0,0,1,1,0,1"))
         (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,1,0,0,1,1,0,1"))
         (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,1,0,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0,0,1,1,0,1"))
         (rule "commute_or_2" (formula "13") (term "0"))
         (rule "commute_or" (formula "13") (term "0,0"))
         (rule "commute_or_2" (formula "13") (term "0"))
         (rule "compound_less_than_comparison_2" (formula "14") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "14") (term "1"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_3"))
         (rule "assignment" (formula "14") (term "1"))
         (rule "sequentialToParallel2" (formula "14"))
         (rule "simplifyUpdate2" (formula "14"))
         (rule "simplifyUpdate3" (formula "14") (term "1,0"))
         (rule "applyOnElementary" (formula "14") (term "1,0"))
         (rule "applyOnPV" (formula "14") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "14") (term "1"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_4"))
         (rule "assignment_read_length" (formula "14"))
         (branch "Normal Execution (tab != null)"
            (rule "sequentialToParallel2" (formula "14"))
            (rule "simplifyUpdate2" (formula "14"))
            (rule "simplifyUpdate3" (formula "14") (term "1,0"))
            (rule "applyOnElementary" (formula "14") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
            (rule "applyOnPV" (formula "14") (term "0,0,1,0"))
            (rule "less_than_comparison_simple" (formula "14") (term "1"))
            (rule "sequentialToParallel2" (formula "14"))
            (rule "simplifyUpdate2" (formula "14"))
            (rule "simplifyUpdate3" (formula "14") (term "1,0"))
            (rule "applyOnElementary" (formula "14") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
            (rule "applyOnRigidFormula" (formula "14") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "14") (term "1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "14") (term "0,0,0,1,0"))
            (rule "applyOnPV" (formula "14") (term "1,0,0,1,0"))
            (rule "applyOnPV" (formula "14") (term "0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "14") (term "0,0,0,1,0"))
            (rule "methodCallEmpty" (formula "14") (term "1"))
            (rule "simplifyUpdate2" (formula "14"))
            (rule "emptyModality" (formula "14") (term "1"))
            (rule "notRight" (formula "14"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "ifthenelse_concrete3" (formula "1"))
            (rule "boolean_not_equal_2" (formula "1") (term "1"))
            (rule "concrete_or_4" (formula "1"))
            (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
            (rule "add_literals" (formula "13") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "13") (term "1,0,0"))
            (rule "add_zero_right" (formula "13") (term "0,0"))
            (rule "qeq_literals" (formula "13") (term "0"))
            (rule "concrete_or_1" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "11"))
            (rule "polySimp_rightDist" (formula "1") (term "0,0"))
            (rule "mul_literals" (formula "1") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "1"))
            (rule "leq_literals" (formula "13") (term "0"))
            (rule "concrete_or_1" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "ifUnfold" (formula "16") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_5"))
            (rule "compound_less_than_comparison_2" (formula "16") (term "1") (inst "#v1=x_7") (inst "#v0=x_6"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_6"))
            (rule "assignment" (formula "16") (term "1"))
            (rule "sequentialToParallel2" (formula "16"))
            (rule "simplifyUpdate3" (formula "16") (term "1,0"))
            (rule "applyOnElementary" (formula "16") (term "1,0"))
            (rule "applyOnPV" (formula "16") (term "0,1,0"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_7"))
            (rule "assignment_read_length" (formula "16"))
            (branch "Normal Execution (tab != null)"
               (rule "sequentialToParallel2" (formula "16"))
               (rule "simplifyUpdate3" (formula "16") (term "1,0"))
               (rule "applyOnElementary" (formula "16") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "16") (term "0,1,0"))
               (rule "applyOnPV" (formula "16") (term "0,0,1,0"))
               (rule "less_than_comparison_simple" (formula "16") (term "1"))
               (rule "sequentialToParallel2" (formula "16"))
               (rule "simplifyUpdate2" (formula "16"))
               (rule "simplifyUpdate3" (formula "16") (term "1,0"))
               (rule "applyOnElementary" (formula "16") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "16") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "16") (term "2,0,1,0"))
               (rule "simplifyUpdate1" (formula "16") (term "1,0,1,0"))
               (rule "applyOnRigidFormula" (formula "16") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "16") (term "1,0,0,1,0"))
               (rule "simplifyUpdate1" (formula "16") (term "0,0,0,1,0"))
               (rule "applyOnPV" (formula "16") (term "1,0,0,1,0"))
               (rule "applyOnPV" (formula "16") (term "0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,0"))
               (rule "replace_known_left" (formula "16") (term "0,0,1,0") (ifseqformula "2"))
               (rule "ifthenelse_true" (formula "16") (term "0,1,0"))
               (rule "div_axiom" (formula "13") (term "0,1,3,0,0,0,0,0,0") (inst "quotient=quotient_0"))
               (rule "mul_literals" (formula "13") (term "1,1,1,1,1"))
               (rule "equal_literals" (formula "13") (term "0"))
               (rule "concrete_or_2" (formula "13"))
               (rule "qeq_literals" (formula "13") (term "0,1"))
               (rule "ifthenelse_true_for" (formula "13") (term "1"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
               (rule "add_literals" (formula "15") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "15") (term "1"))
               (rule "add_literals" (formula "15") (term "0,1"))
               (rule "inEqSimp_homoInEq0" (formula "14"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0"))
               (rule "inEqSimp_homoInEq1" (formula "15"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
               (rule "polySimp_addComm1" (formula "15") (term "0"))
               (rule "applyEq" (formula "16") (term "0,1,3,0,0,0,0,0,0") (ifseqformula "13"))
               (rule "polySimp_addComm1" (formula "16") (term "3,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "14"))
               (rule "polySimp_mulComm0" (formula "14") (term "1"))
               (rule "polySimp_rightDist" (formula "14") (term "1"))
               (rule "mul_literals" (formula "14") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15"))
               (rule "polySimp_mulComm0" (formula "15") (term "1"))
               (rule "polySimp_rightDist" (formula "15") (term "1"))
               (rule "mul_literals" (formula "15") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "0") (ifseqformula "4"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "18"))
               (rule "concrete_or_2" (formula "1"))
               (rule "ifSplit" (formula "20"))
               (branch "if x_5 true"
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "simplifyUpdate2" (formula "21"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1"))
                  (rule "applyOnPV" (formula "1") (term "0"))
                  (rule "boolean_equal" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "assignment_to_reference_array_component" (formula "20"))
                  (branch "Normal Execution (tab != null)"
                     (rule "sequentialToParallel2" (formula "20"))
                     (rule "simplifyUpdate2" (formula "20"))
                     (rule "simplifyUpdate3" (formula "20") (term "1,0"))
                     (rule "applyOnElementary" (formula "20") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "2,0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "3,0,1,0"))
                     (rule "applyOnPV" (formula "20") (term "0,0,1,0"))
                     (rule "applyOnPV" (formula "20") (term "1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "2,0,1,0"))
                     (rule "applyOnPV" (formula "20") (term "0,2,0,1,0"))
                     (rule "postincrement" (formula "20") (term "1"))
                     (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_8"))
                     (rule "remove_parentheses_right" (formula "20") (term "1"))
                     (rule "assignmentAdditionInt" (formula "20") (term "1"))
                     (rule "translateJavaAddInt" (formula "20") (term "0,0,1"))
                     (rule "sequentialToParallel2" (formula "20"))
                     (rule "simplifyUpdate3" (formula "20") (term "1,0"))
                     (rule "applyOnElementary" (formula "20") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "0,1,0"))
                     (rule "applyOnPV" (formula "20") (term "0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,0,1,0"))
                     (rule "expand_addJint" (formula "20") (term "0,1,0"))
                     (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0"))
                     (rule "expand_moduloInteger" (formula "20") (term "0,1,0"))
                     (rule "replace_int_RANGE" (formula "20") (term "1,1,0,1,0"))
                     (rule "replace_int_HALFRANGE" (formula "20") (term "0,0,1,0,1,0"))
                     (rule "replace_int_MIN" (formula "20") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,1,0"))
                     (rule "add_literals" (formula "20") (term "0,0,1,0,1,0"))
                     (rule "polyMod_pullOut" (formula "20") (term "1,0,1,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,1,0"))
                     (rule "mul_literals" (formula "20") (term "1,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,1,0,1,0"))
                     (rule "add_literals" (formula "20") (term "0,0,1,0,1,0"))
                     (rule "widening_identity_cast_5" (formula "20") (term "1"))
                     (rule "assignment" (formula "20") (term "1"))
                     (rule "sequentialToParallel2" (formula "20"))
                     (rule "simplifyUpdate2" (formula "20"))
                     (rule "simplifyUpdate3" (formula "20") (term "1,0"))
                     (rule "applyOnElementary" (formula "20") (term "1,0"))
                     (rule "applyOnPV" (formula "20") (term "0,1,0"))
                     (rule "tryEmpty" (formula "20") (term "1"))
                     (rule "methodCallEmpty" (formula "20") (term "1"))
                     (rule "emptyModality" (formula "20") (term "1"))
                     (rule "applyOnRigidFormula" (formula "20"))
                     (rule "simplifyUpdate2" (formula "20") (term "1"))
                     (rule "simplifyUpdate2" (formula "20") (term "0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "1"))
                     (rule "simplifyUpdate2" (formula "20") (term "1,1"))
                     (rule "simplifyUpdate2" (formula "20") (term "0,1"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0"))
                     (rule "simplifyUpdate2" (formula "20") (term "1,0"))
                     (rule "simplifyUpdate2" (formula "20") (term "0,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "1,1"))
                     (rule "simplifyUpdate2" (formula "20") (term "0,1,1"))
                     (rule "simplifyUpdate2" (formula "20") (term "1,1,1"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,1"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,0"))
                     (rule "applyOnPV" (formula "20") (term "0,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,0,0"))
                     (rule "boolean_not_equal_2" (formula "20") (term "0,0"))
                     (rule "concrete_impl_2" (formula "20") (term "0"))
                     (rule "concrete_and_1" (formula "20"))
                     (rule "impRight" (formula "20"))
                     (rule "notLeft" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "21") (term "1"))
                     (rule "simplifyUpdate1" (formula "21") (term "0,1"))
                     (rule "simplifyUpdate1" (formula "21") (term "1,1"))
                     (rule "applyOnPV" (formula "21") (term "1,1"))
                     (rule "applyOnRigidFormula" (formula "21") (term "0"))
                     (rule "simplifyUpdate2" (formula "21") (term "0,0"))
                     (rule "simplifyUpdate2" (formula "21") (term "1,0"))
                     (rule "applyOnRigidFormula" (formula "18"))
                     (rule "applyOnPV" (formula "18") (term "0"))
                     (rule "simplifyUpdate1" (formula "18") (term "1"))
                     (rule "boolean_not_equal_2" (formula "18"))
                     (rule "false_right" (formula "18"))
                     (rule "applyOnRigidTerm" (formula "20") (term "0,1"))
                     (rule "simplifyUpdate1" (formula "20") (term "0,0,1"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,0"))
                     (rule "simplifyUpdate2" (formula "20") (term "0,0,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "1,0,1"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,1,0,1"))
                     (rule "applyOnRigidFormula" (formula "20") (term "1,0,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,0,0"))
                     (rule "simplifyUpdate2" (formula "20") (term "0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,1,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "0,1,0,1"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,0,1,0,1"))
                     (rule "simplifyUpdate1" (formula "20") (term "0,0,1,0,1"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,1,0,0"))
                     (rule "simplifyUpdate2" (formula "20") (term "1,0,1,0,0"))
                     (rule "simplifyUpdate2" (formula "20") (term "0,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "0,1,0,0,0"))
                     (rule "applyOnPV" (formula "20") (term "1,1,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,0,0,0,0"))
                     (rule "applyOnPV" (formula "20") (term "0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,0,1,0"))
                     (rule "simplifyUpdate2" (formula "20") (term "0,0,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "1,0,1,0,1"))
                     (rule "applyOnPV" (formula "20") (term "0,1,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "20") (term "0,1,0,1"))
                     (rule "applyOnRigidFormula" (formula "20") (term "1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,1,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,0,1,0,0"))
                     (rule "simplifyUpdate2" (formula "20") (term "0,0,0,1,0,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "0,1,0,0,0"))
                     (rule "applyOnPV" (formula "20") (term "0,0,1,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "1,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,1,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "0,1,0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,0,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "1,0,1,0,1"))
                     (rule "simplifyUpdate1" (formula "20") (term "0,1,0,1,0,1"))
                     (rule "applyOnRigidTerm" (formula "20") (term "0,1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "2,0,1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "0,0,1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,0,1,0,1,0,0"))
                     (rule "applyOnPV" (formula "20") (term "0,0,1,0,1,0,0"))
                     (rule "applyOnPV" (formula "20") (term "1,0,1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0,1"))
                     (rule "applyOnRigidFormula" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "applyOnPV" (formula "20") (term "1,1,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "0,1,0,0,1,0,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "1,1,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "2,1,1,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,1,1,0,0,1,0"))
                     (rule "applyOnPV" (formula "20") (term "0,1,1,0,0,1,0"))
                     (rule "eqSymm" (formula "20") (term "1,0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "0,0,0,0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "1,0,0,0,1,0"))
                     (rule "simplifyUpdate2" (formula "20") (term "0,1,0,0,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "1,0,1,0,1"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,1,0,1,0,1"))
                     (rule "applyOnPV" (formula "20") (term "0,1,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0,1"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,1,0,1"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,1,0,1"))
                     (rule "applyOnRigidTerm" (formula "20") (term "1,1,0,0,1,0"))
                     (rule "applyOnPV" (formula "20") (term "0,1,1,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,1,1,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "2,1,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,1"))
                     (rule "add_literals" (formula "20") (term "0,0,0,1,0,1"))
                     (rule "applyOnRigidTerm" (formula "20") (term "1,0,0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,1,0,0,0,0,1,0"))
                     (rule "applyOnPV" (formula "20") (term "0,1,0,0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "2,1,0,0,0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "1,1,0,0,0,1,0"))
                     (rule "precOfInt" (formula "20") (term "1"))
                     (rule "dismissNonSelectedField" (formula "20") (term "1,0,0,0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,1,1,0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,0,1,1,0,0,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "0,0,1,1,0,0,0,1,0"))
                     (rule "applyOnPV" (formula "20") (term "0,0,0,1,1,0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,0,0,1,1,0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "2,0,0,1,1,0,0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "20") (term "0,0,1,1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,1"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,1"))
                     (rule "add_literals" (formula "20") (term "0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,1,1"))
                     (rule "add_literals" (formula "20") (term "0,0,0,1,1"))
                     (rule "inEqSimp_homoInEq0" (formula "20") (term "0,1"))
                     (rule "times_zero_2" (formula "20") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "20") (term "0,0,1"))
                     (rule "mod_axiom" (formula "20") (term "1,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "1,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,1,1,0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,1,1,0,0,0"))
                     (rule "mod_axiom" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,0"))
                     (rule "mod_axiom" (formula "20") (term "1,3,0,0,0,0,1,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,3,0,0,0,0,1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "3,0,0,0,0,1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,3,0,0,0,0,1,0,1,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,3,0,0,0,0,1,0,1,0,0"))
                     (rule "applyEq" (formula "20") (term "0,1,3,0,0,0,0,1,0,1,0,0") (ifseqformula "14"))
                     (rule "polySimp_addComm1" (formula "20") (term "3,0,0,0,0,1,0,1,0,0"))
                     (rule "mod_axiom" (formula "20") (term "1,1,1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,1,1,0,0,1,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,1,1,0,0,1,0,0"))
                     (rule "mod_axiom" (formula "20") (term "1,3,0,0,0,0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,3,0,0,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "3,0,0,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,3,0,0,0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "20") (term "0,0,3,0,0,0,0,1,0,0,1,0"))
                     (rule "applyEq" (formula "20") (term "0,1,3,0,0,0,0,1,0,0,1,0") (ifseqformula "14"))
                     (rule "polySimp_addComm1" (formula "20") (term "3,0,0,0,0,1,0,0,1,0"))
                     (rule "mod_axiom" (formula "20") (term "1,3,0,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,3,0,1,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "3,0,1,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,3,0,1,1,0,0,1,0"))
                     (rule "add_literals" (formula "20") (term "0,0,3,0,1,1,0,0,1,0"))
                     (rule "applyEq" (formula "20") (term "0,1,3,0,1,1,0,0,1,0") (ifseqformula "14"))
                     (rule "polySimp_addComm1" (formula "20") (term "3,0,1,1,0,0,1,0"))
                     (rule "mod_axiom" (formula "20") (term "0,1,0,0,1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,1,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0,1,0,1,1"))
                     (rule "mul_literals" (formula "20") (term "0,0,1,0,0,1,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1,0,1,1"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,1,0,1,1"))
                     (rule "mod_axiom" (formula "20") (term "0,1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,0,1,0,0,1,1"))
                     (rule "mul_literals" (formula "20") (term "0,0,0,1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,0,0,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,1"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,1"))
                     (rule "mod_axiom" (formula "20") (term "0,1,0,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "20") (term "0,0,1,0,0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1,0,0,1"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,1,0,0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,1,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,1,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,1,1,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,1"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,0,1,1,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,0,1,1,1"))
                     (rule "mul_literals" (formula "20") (term "0,0,0,1,1,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,1"))
                     (rule "mul_literals" (formula "20") (term "1,0,1"))
                     (rule "polyMod_pullOut" (formula "20") (term "0,0,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        i_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0,0,0,1"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,0,0,1"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,1"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0,0,1"))
                     (rule "mod_axiom" (formula "20") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "20") (term "0,0,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,0,0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,1,0,1"))
                     (rule "mul_literals" (formula "20") (term "0,0,1,0,1"))
                     (rule "polyMod_pullOut" (formula "20") (term "0,1,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        i_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,1,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0,0,1,1"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0,1,1"))
                     (rule "mod_axiom" (formula "20") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1"))
                     (rule "inEqSimp_homoInEq0" (formula "20") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,0,1,0,1,1"))
                     (rule "mul_literals" (formula "20") (term "0,0,0,1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1,0,1,1"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,0,0,1,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,1,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,1,1"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,1,1"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,1"))
                     (rule "polySimp_pullOutFactor2b" (formula "20") (term "0,0,0,1,1"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0,1,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,1,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,1,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,1"))
                     (rule "mul_literals" (formula "20") (term "0,1,1,1"))
                     (rule "elimGcdGeq" (formula "20") (term "1,1") (inst "elimGcdRightDiv=add(Z(1(#)),
    div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                mul(i_0, Z(neglit(1(#))))),
            length(java.lang.Object[]::select(heap,
                                              self,
                                              java.util.VerifiedIdentityHashMap::$table))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))))") (inst "elimGcdLeftDiv=div(add(add(Z(3(4(9(0(5(4(2(4(4(6(#))))))))))),
            mul(i_0, Z(neglit(1(#))))),
        length(java.lang.Object[]::select(heap,
                                          self,
                                          java.util.VerifiedIdentityHashMap::$table))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,1,1"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1,1"))
                     (rule "mul_literals" (formula "20") (term "0,0,0,0,0,1,0,1,1"))
                     (rule "sub_literals" (formula "20") (term "0,0,0,0,0,0,0,1,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,1,0,1,1"))
                     (rule "add_literals" (formula "20") (term "1,1,0,1,0,1,1"))
                     (rule "times_zero_1" (formula "20") (term "1,0,1,0,1,1"))
                     (rule "add_zero_right" (formula "20") (term "0,1,0,1,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0,0,1,1"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,0,1,0,1,1"))
                     (rule "mul_literals" (formula "20") (term "0,0,0,1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,1"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,1,1"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,1,0,1,1"))
                     (rule "add_literals" (formula "20") (term "0,0,0,1,0,1,1"))
                     (rule "add_zero_left" (formula "20") (term "0,0,1,0,1,1"))
                     (rule "polySimp_pullOutFactor0" (formula "20") (term "0,1,0,1,1"))
                     (rule "add_literals" (formula "20") (term "1,0,1,0,1,1"))
                     (rule "times_zero_1" (formula "20") (term "0,1,0,1,1"))
                     (rule "leq_literals" (formula "20") (term "1,0,1,1"))
                     (rule "concrete_and_3" (formula "20") (term "0,1,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1,1"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,1"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,1,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0,1,1"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,1,1"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,1,1"))
                     (rule "add_literals" (formula "20") (term "0,0,1,1"))
                     (rule "qeq_literals" (formula "20") (term "0,1,1"))
                     (rule "ifthenelse_true_for" (formula "20") (term "1,1"))
                     (rule "polyDiv_pullOut" (formula "20") (term "0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,2,0,0,0,1"))
                     (rule "equal_literals" (formula "20") (term "0,0,0,0,1"))
                     (rule "ifthenelse_false" (formula "20") (term "0,0,0,1"))
                     (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "20") (term "1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,1,1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,1,1,0,0,1"))
                     (rule "add_literals" (formula "20") (term "0,0,0,1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,0,1"))
                     (rule "mul_literals" (formula "20") (term "0,0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "20") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,1"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1"))
                     (rule "polyDiv_pullOut" (formula "20") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,2,0,1,1"))
                     (rule "equal_literals" (formula "20") (term "0,0,1,1"))
                     (rule "ifthenelse_false" (formula "20") (term "0,1,1"))
                     (rule "mul_literals" (formula "20") (term "1,0,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,1,1"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "20") (term "0,1,1"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,1,1"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,1,1"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,1,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,1"))
                     (rule "add_literals" (formula "20") (term "0,0,0,1,1"))
                     (rule "add_zero_left" (formula "20") (term "0,0,1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,1"))
                     (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "9") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "7"))
                     (rule "insert_constant_value" (formula "9") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "9") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "eqClose" (formula "9") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "concrete_and_3" (formula "9") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "9") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "eqClose" (formula "9") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "concrete_and_3" (formula "9") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "eqClose" (formula "9") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "concrete_and_3" (formula "9") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "expand_inInt" (formula "9") (term "0,1"))
                     (rule "expand_inInt" (formula "9") (term "1,1"))
                     (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "9") (term "1,0,0,1"))
                     (rule "replace_int_MIN" (formula "9") (term "0,1,0,1"))
                     (rule "replace_int_MAX" (formula "9") (term "1,0,1,1"))
                     (rule "replace_int_MIN" (formula "9") (term "0,1,1,1"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "11"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "notLeft" (formula "9"))
                     (rule "exLeft" (formula "16") (inst "sk=i_1_0"))
                     (rule "andLeft" (formula "16"))
                     (rule "andLeft" (formula "16"))
                     (rule "exLeft" (formula "15") (inst "sk=i_2_0"))
                     (rule "andLeft" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "eqSymm" (formula "14"))
                     (rule "eqSymm" (formula "12") (term "1,0,1,0,1,0"))
                     (rule "eqSymm" (formula "12") (term "1,1,0,1,0"))
                     (rule "eqSymm" (formula "17"))
                     (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "36"))
                     (rule "concrete_or_2" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,2,0,0,1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,2,0,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,2,0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,2,0,1,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "0,2,0,1,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "0,2,0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "0,2,0,0,1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "0,2,0,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0,2,0,0,0,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "0,2,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,2,0,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0,2,1,1,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0,2,0,1,0,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "11") (term "0,2,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13"))
                     (rule "mul_literals" (formula "13") (term "1,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "16"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0"))
                     (rule "ifthenelse_negated" (formula "14") (term "2,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "22") (term "1,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,0"))
                     (rule "inEqSimp_gtToGeq" (formula "21") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "25"))
                     (rule "inEqSimp_commuteLeq" (formula "27"))
                     (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "10"))
                     (rule "inEqSimp_commuteLeq" (formula "9"))
                     (rule "inEqSimp_commuteLeq" (formula "18"))
                     (rule "inEqSimp_commuteLeq" (formula "15"))
                     (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "22") (term "0,1,0,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,1,0"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "17"))
                     (rule "applyEq" (formula "39") (term "0,1,0,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "39") (term "1,0,1,1,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "39") (term "1,1,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "17"))
                     (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "21") (term "1,0,1,0,1,0,1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "22") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "21") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "10") (term "0") (ifseqformula "17"))
                     (rule "applyEq" (formula "22") (term "1,0,1,0,1,0,1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "30") (term "0") (ifseqformula "17"))
                     (rule "applyEq" (formula "31") (term "0") (ifseqformula "17"))
                     (rule "applyEq" (formula "39") (term "1,0,0,1,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "39") (term "1,0,0,0,0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "19") (term "0,0,1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "21") (term "0,0,1,0,0,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "12") (term "0,0,1,0,0,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "12") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "11") (term "0,0,1,0,0,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "22") (term "0,0,1,0,0,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "17"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                     (rule "mul_literals" (formula "13") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "0,1,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "0,1,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                     (rule "polySimp_elimOne" (formula "16") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                     (rule "polySimp_elimOne" (formula "19") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "13"))
                     (rule "leq_literals" (formula "26") (term "0"))
                     (rule "concrete_or_1" (formula "26"))
                     (rule "true_left" (formula "26"))
                     (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "30"))
                     (rule "leq_literals" (formula "10") (term "0"))
                     (rule "concrete_or_1" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "9"))
                     (rule "leq_literals" (formula "28") (term "0"))
                     (rule "concrete_or_1" (formula "28"))
                     (rule "true_left" (formula "28"))
                     (rule "elimGcdLeq" (formula "21") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "21") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "sub_literals" (formula "21") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,1,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,1,0,1,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "21") (term "0,1,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "0,0,1,0,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "21") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,0,1,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,1,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,1,0,1,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "21") (term "0,1,0,1,1,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "21") (term "1,0,1,1,0,0,1,1,0"))
                     (rule "concrete_and_3" (formula "21") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "21") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "21") (term "1,0,0,1,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "21") (term "0,0,1,1,0,0,1,1,0"))
                     (rule "leq_literals" (formula "21") (term "0,1,1,0,0,1,1,0"))
                     (rule "ifthenelse_true_for" (formula "21") (term "1,1,0,0,1,1,0"))
                     (rule "elimGcdGeq" (formula "21") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "sub_literals" (formula "21") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "21") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "21") (term "0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "21") (term "1,0,1,0,0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "21") (term "0,1,0,0,1,0,0,1,1,0"))
                     (rule "leq_literals" (formula "21") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "concrete_and_3" (formula "21") (term "0,0,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0,0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "21") (term "0,0,1,0,0,1,1,0"))
                     (rule "ifthenelse_true_for" (formula "21") (term "0,1,0,0,1,1,0"))
                     (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "31"))
                     (rule "mul_literals" (formula "24") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0"))
                     (rule "add_literals" (formula "24") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                     (rule "mul_literals" (formula "24") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "24") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "24") (term "0,0"))
                     (rule "concrete_or_2" (formula "24") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "24") (term "0,0,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                     (rule "add_literals" (formula "24") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0"))
                     (rule "leq_literals" (formula "24") (term "0"))
                     (rule "concrete_or_2" (formula "24"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "29"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "23"))
                     (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                     (rule "mul_literals" (formula "31") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "31") (term "0"))
                     (rule "add_literals" (formula "31") (term "0,0"))
                     (rule "add_zero_left" (formula "31") (term "0"))
                     (rule "inEqSimp_invertInEq1" (formula "31"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                     (rule "mul_literals" (formula "31") (term "1"))
                     (rule "elimGcdLeq_antec" (formula "31") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "leq_literals" (formula "31") (term "0,0"))
                     (rule "concrete_or_2" (formula "31") (term "0"))
                     (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                     (rule "neg_literal" (formula "31") (term "0,0,0,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0"))
                     (rule "qeq_literals" (formula "31") (term "0"))
                     (rule "concrete_or_2" (formula "31"))
                     (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "29"))
                     (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                     (rule "mul_literals" (formula "15") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0"))
                     (rule "add_literals" (formula "15") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                     (rule "polySimp_elimOne" (formula "15") (term "0"))
                     (rule "nnf_imp2or" (formula "10") (term "1,0"))
                     (rule "nnf_imp2or" (formula "11") (term "1,0,1,0"))
                     (rule "nnf_imp2or" (formula "21") (term "1,0"))
                     (rule "div_axiom" (formula "39") (term "0,1,1,1,0,0,0") (inst "quotient=quotient_1"))
                     (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                     (rule "qeq_literals" (formula "1") (term "0,1,1"))
                     (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                     (rule "equal_literals" (formula "1") (term "0"))
                     (rule "concrete_or_2" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                     (rule "add_literals" (formula "3") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "3") (term "1"))
                     (rule "add_literals" (formula "3") (term "0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "applyEqRigid" (formula "42") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "1"))
                     (rule "polySimp_addComm1" (formula "42") (term "1,1,0,0,1,0,0"))
                     (rule "applyEqRigid" (formula "42") (term "0,0,0,0,0,0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "42") (term "0,0,0,0,0"))
                     (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,0") (ifseqformula "1"))
                     (rule "polySimp_addComm1" (formula "42") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "mul_literals" (formula "3") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0"))
                     (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "32") (term "0,0"))
                     (rule "add_zero_left" (formula "32") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                     (rule "mul_literals" (formula "32") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "32") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,0"))
                     (rule "concrete_or_2" (formula "32") (term "0"))
                     (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "32") (term "0,0,0,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                     (rule "add_literals" (formula "32") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "32") (term "1,0,0"))
                     (rule "add_zero_right" (formula "32") (term "0,0"))
                     (rule "leq_literals" (formula "32") (term "0"))
                     (rule "concrete_or_2" (formula "32"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "2") (term "0,0"))
                     (rule "concrete_or_2" (formula "2") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0"))
                     (rule "qeq_literals" (formula "2") (term "0"))
                     (rule "concrete_or_2" (formula "2"))
                     (rule "inEqSimp_antiSymm" (formula "33") (ifseqformula "2"))
                     (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "33"))
                     (rule "qeq_literals" (formula "34"))
                     (rule "true_left" (formula "34"))
                     (rule "applyEqRigid" (formula "44") (term "0,1,1,0,0,0,0") (ifseqformula "33"))
                     (rule "mul_literals" (formula "44") (term "1,1,0,0,0,0"))
                     (rule "add_literals" (formula "44") (term "1,0,0,0,0"))
                     (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "33"))
                     (rule "mul_literals" (formula "3") (term "1,1"))
                     (rule "add_literals" (formula "3") (term "1"))
                     (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "33"))
                     (rule "mul_literals" (formula "4") (term "1,1"))
                     (rule "add_literals" (formula "4") (term "1"))
                     (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "33"))
                     (rule "leq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "applyEqRigid" (formula "43") (term "0,1,0,1,1,0,0,1,0,0") (ifseqformula "32"))
                     (rule "mul_literals" (formula "43") (term "1,0,1,1,0,0,1,0,0"))
                     (rule "add_literals" (formula "43") (term "0,1,1,0,0,1,0,0"))
                     (rule "applyEq" (formula "43") (term "0,1,0,1,1,0,0,0") (ifseqformula "32"))
                     (rule "mul_literals" (formula "43") (term "1,0,1,1,0,0,0"))
                     (rule "add_literals" (formula "43") (term "0,1,1,0,0,0"))
                     (rule "replace_known_left" (formula "43") (term "1,0,0,0") (ifseqformula "6"))
                     (rule "concrete_and_3" (formula "43") (term "0,0,0"))
                     (rule "applyEq" (formula "1") (term "1") (ifseqformula "32"))
                     (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "33"))
                     (rule "leq_literals" (formula "2") (term "0"))
                     (rule "concrete_or_1" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "4"))
                     (rule "leq_literals" (formula "2") (term "0"))
                     (rule "concrete_or_1" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_subsumption1" (formula "41") (term "0,0,0") (ifseqformula "31"))
                     (rule "leq_literals" (formula "41") (term "0,0,0,0"))
                     (rule "concrete_or_1" (formula "41") (term "0,0,0"))
                     (rule "concrete_and_1" (formula "41") (term "0,0"))
                     (rule "nnf_imp2or" (formula "23") (term "0"))
                     (rule "nnf_imp2or" (formula "11") (term "0"))
                     (rule "nnf_imp2or" (formula "12") (term "0"))
                     (rule "nnf_imp2or" (formula "22") (term "0"))
                     (rule "nnf_notAnd" (formula "23") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                     (rule "nnf_imp2or" (formula "23") (term "1,0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "12") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                     (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                     (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "22") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                     (rule "nnf_imp2or" (formula "12") (term "0,1,0"))
                     (rule "nnf_notAnd" (formula "22") (term "0,1,0"))
                     (rule "double_not" (formula "22") (term "0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "22") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,1,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,1,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0,1,0,1,0"))
                     (rule "add_zero_left" (formula "22") (term "0,0,1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,0"))
                     (rule "nnf_imp2or" (formula "22") (term "0,1,1,0"))
                     (rule "nnf_notAnd" (formula "23") (term "0,1,0"))
                     (rule "double_not" (formula "23") (term "0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "23") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,1,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,0"))
                     (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,0"))
                     (rule "add_zero_left" (formula "23") (term "0,0,1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,0"))
                     (rule "nnf_imp2or" (formula "23") (term "0,1,1,0"))
                     (rule "nnf_notAnd" (formula "12") (term "0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,0"))
                     (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "12") (term "0,1,0,1,0"))
                     (rule "double_not" (formula "12") (term "0,0,1,0,1,0"))
                     (rule "nnf_notAnd" (formula "22") (term "0,0,1,1,0"))
                     (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,1,0"))
                     (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,1,0"))
                     (rule "nnf_notOr" (formula "23") (term "0,0,1,1,0"))
                     (rule "div_axiom" (formula "41") (term "1,1,1") (inst "quotient=quotient_2"))
                     (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                     (rule "qeq_literals" (formula "1") (term "0,1,1"))
                     (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                     (rule "equal_literals" (formula "1") (term "0"))
                     (rule "concrete_or_2" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "3") (term "1"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                     (rule "add_literals" (formula "3") (term "0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                     (rule "add_literals" (formula "3") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "applyEqRigid" (formula "44") (term "0,0,0,1") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "44") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "44") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1"))
                     (rule "applyEq" (formula "44") (term "1,1,1") (ifseqformula "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                     (rule "mul_literals" (formula "2") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                     (rule "mul_literals" (formula "3") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "44") (term "0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,1"))
                     (rule "mul_literals" (formula "44") (term "0,0,1,0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "3"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                     (rule "mul_literals" (formula "20") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                     (rule "polySimp_elimOne" (formula "20") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "36"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "4"))
                     (rule "mul_literals" (formula "14") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1"))
                     (rule "polySimp_rightDist" (formula "14") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                     (rule "mul_literals" (formula "14") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "4"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                     (rule "mul_literals" (formula "8") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "8") (term "0"))
                     (rule "add_literals" (formula "8") (term "1,1,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0"))
                     (rule "add_zero_right" (formula "8") (term "0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                     (rule "add_literals" (formula "8") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                     (rule "mul_literals" (formula "8") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "8") (term "0,0"))
                     (rule "concrete_or_2" (formula "8") (term "0"))
                     (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0"))
                     (rule "leq_literals" (formula "8") (term "0"))
                     (rule "concrete_or_2" (formula "8"))
                     (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "23"))
                     (rule "times_zero_1" (formula "21") (term "0,0"))
                     (rule "add_zero_left" (formula "21") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1"))
                     (rule "polySimp_rightDist" (formula "21") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                     (rule "mul_literals" (formula "21") (term "0,1"))
                     (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "15"))
                     (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0"))
                     (rule "qeq_literals" (formula "21") (term "0"))
                     (rule "concrete_or_1" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "2"))
                     (rule "times_zero_1" (formula "38") (term "0,0"))
                     (rule "add_zero_left" (formula "38") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "38") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "leq_literals" (formula "38") (term "0,0"))
                     (rule "concrete_or_2" (formula "38") (term "0"))
                     (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0"))
                     (rule "neg_literal" (formula "38") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "38") (term "0,0,0,0"))
                     (rule "add_literals" (formula "38") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                     (rule "add_literals" (formula "38") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "38") (term "1,0,0"))
                     (rule "add_zero_right" (formula "38") (term "0,0"))
                     (rule "qeq_literals" (formula "38") (term "0"))
                     (rule "concrete_or_2" (formula "38"))
                     (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "38"))
                     (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "8"))
                     (rule "times_zero_2" (formula "2") (term "1,1"))
                     (rule "add_zero_right" (formula "2") (term "1"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
                     (rule "qeq_literals" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "applyEq" (formula "49") (term "1,1,1") (ifseqformula "8"))
                     (rule "applyEq" (formula "38") (term "0") (ifseqformula "8"))
                     (rule "leq_literals" (formula "38"))
                     (rule "true_left" (formula "38"))
                     (rule "applyEqRigid" (formula "15") (term "0,1,1") (ifseqformula "8"))
                     (rule "times_zero_2" (formula "15") (term "1,1"))
                     (rule "add_zero_right" (formula "15") (term "1"))
                     (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "8"))
                     (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "8"))
                     (rule "mul_literals" (formula "3") (term "1,0,1"))
                     (rule "add_zero_right" (formula "3") (term "0,1"))
                     (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "8"))
                     (rule "times_zero_2" (formula "4") (term "1,0,1"))
                     (rule "add_zero_right" (formula "4") (term "0,1"))
                     (rule "applyEq" (formula "23") (term "0,1,0,1") (ifseqformula "8"))
                     (rule "times_zero_2" (formula "23") (term "1,0,1"))
                     (rule "add_zero_right" (formula "23") (term "0,1"))
                     (rule "applyEq" (formula "48") (term "0,1,0,1,0,1") (ifseqformula "8"))
                     (rule "mul_literals" (formula "48") (term "1,0,1,0,1"))
                     (rule "add_zero_right" (formula "48") (term "0,1,0,1"))
                     (rule "replace_known_left" (formula "48") (term "0,1") (ifseqformula "9"))
                     (rule "concrete_and_1" (formula "48") (term "1"))
                     (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "7"))
                     (rule "leq_literals" (formula "2") (term "0"))
                     (rule "concrete_or_1" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "8"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0"))
                     (rule "qeq_literals" (formula "2") (term "0"))
                     (rule "concrete_or_1" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "36"))
                     (rule "leq_literals" (formula "13") (term "0"))
                     (rule "concrete_or_1" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "20"))
                     (rule "times_zero_1" (formula "18") (term "0,0"))
                     (rule "add_zero_left" (formula "18") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                     (rule "mul_literals" (formula "18") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "36"))
                     (rule "leq_literals" (formula "18") (term "0"))
                     (rule "concrete_or_1" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                     (rule "mul_literals" (formula "21") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                     (rule "polySimp_elimOne" (formula "21") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "2"))
                     (rule "mul_literals" (formula "13") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0"))
                     (rule "add_literals" (formula "13") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                     (rule "mul_literals" (formula "13") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "36"))
                     (rule "leq_literals" (formula "13") (term "0"))
                     (rule "concrete_or_1" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "jdiv_axiom" (formula "17") (term "1,0"))
                     (rule "eqSymm" (formula "17"))
                     (rule "inEqSimp_subsumption1" (formula "17") (term "0,0") (ifseqformula "13"))
                     (rule "leq_literals" (formula "17") (term "0,0,0"))
                     (rule "concrete_or_1" (formula "17") (term "0,0"))
                     (rule "ifthenelse_true" (formula "17") (term "0"))
                     (rule "eqSymm" (formula "17"))
                     (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "17"))
                     (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "27") (term "1,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "15") (term "1,1,0,0") (ifseqformula "17"))
                     (rule "applyEqRigid" (formula "28") (term "1,1,0,0") (ifseqformula "17"))
                     (rule "applyEqRigid" (formula "14") (term "1,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "15") (term "1,1,0,0,1,0") (ifseqformula "17"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0,0,1,1,0"))
                     (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,1,0"))
                     (rule "nnf_notAnd" (formula "28") (term "1,0,0,1,1,0"))
                     (rule "inEqSimp_notLeq" (formula "28") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "28") (term "0,0,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_notGeq" (formula "28") (term "0,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "28") (term "1,0,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "28") (term "0,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "28") (term "1,0,1,0,0,1,1,0"))
                     (rule "commute_or_2" (formula "27") (term "0,1,1,0"))
                     (rule "allLeft" (formula "42") (inst "t=mul(i_1_0, Z(2(#)))"))
                     (rule "inEqSimp_contradInEq5" (formula "42") (term "1,0") (ifseqformula "24"))
                     (rule "times_zero_1" (formula "42") (term "1,1,0,1,0"))
                     (rule "greater_literals" (formula "42") (term "0,0,1,0"))
                     (rule "concrete_impl_1" (formula "42") (term "0,1,0"))
                     (rule "qeq_literals" (formula "42") (term "0,1,0"))
                     (rule "concrete_and_2" (formula "42") (term "1,0"))
                     (rule "concrete_or_4" (formula "42") (term "0"))
                     (rule "pullOutSelect" (formula "42") (term "0,0") (inst "selectSK=arr_0"))
                     (rule "simplifySelectOfAnon" (formula "42"))
                     (rule "elementOfFreshLocs" (formula "42") (term "1,0,0"))
                     (rule "elementOfAllFields" (formula "42") (term "0,0,0,0"))
                     (rule "eqClose" (formula "42") (term "0,0,0,0"))
                     (rule "concrete_and_1" (formula "42") (term "0,0,0"))
                     (rule "equalUnique" (formula "42") (term "0,0,0,0"))
                     (rule "concrete_not_2" (formula "42") (term "0,0,0"))
                     (rule "concrete_or_1" (formula "42") (term "0,0"))
                     (rule "ifthenelse_true" (formula "42") (term "0"))
                     (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "42"))
                     (rule "hideAuxiliaryEq" (formula "42"))
                     (rule "commute_or_2" (formula "14") (term "0"))
                     (rule "commute_or" (formula "15") (term "0,0,1,0"))
                     (rule "commute_or" (formula "14") (term "0,0"))
                     (rule "commute_or" (formula "28") (term "0,1,1,0"))
                     (rule "commute_or" (formula "27") (term "0,0,1,1,0"))
                     (rule "shift_paren_or" (formula "15") (term "0,1,0"))
                     (rule "commute_or_2" (formula "27") (term "0,1,1,0"))
                     (rule "commute_or_2" (formula "15") (term "0,0,1,0"))
                     (rule "inEqSimp_or_weaken2" (formula "15") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "1,0,1,0,1,0"))
                     (rule "add_literals" (formula "15") (term "0,1,0,1,0,1,0"))
                     (rule "add_zero_left" (formula "15") (term "1,0,1,0,1,0"))
                     (rule "eqClose" (formula "15") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true_for" (formula "15") (term "1,0,1,0"))
                     (rule "commute_or" (formula "15") (term "0,0,1,0"))
                     (rule "commute_or" (formula "28") (term "0,1,0,1,1,0"))
                     (rule "div_axiom" (formula "47") (term "0,1") (inst "quotient=quotient_3"))
                     (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                     (rule "qeq_literals" (formula "1") (term "0,1,1"))
                     (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                     (rule "equal_literals" (formula "1") (term "0"))
                     (rule "concrete_or_2" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "3") (term "1"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                     (rule "add_literals" (formula "3") (term "0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                     (rule "add_literals" (formula "3") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "applyEqRigid" (formula "50") (term "0,1") (ifseqformula "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                     (rule "mul_literals" (formula "2") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                     (rule "mul_literals" (formula "3") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "3"))
                     (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                     (rule "mul_literals" (formula "25") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                     (rule "polySimp_elimOne" (formula "25") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "3"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                     (rule "mul_literals" (formula "10") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
                     (rule "add_literals" (formula "10") (term "1,1,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0"))
                     (rule "add_zero_right" (formula "10") (term "0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                     (rule "add_literals" (formula "10") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "10") (term "0,0"))
                     (rule "concrete_or_2" (formula "10") (term "0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0"))
                     (rule "leq_literals" (formula "10") (term "0"))
                     (rule "concrete_or_2" (formula "10"))
                     (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "3"))
                     (rule "mul_literals" (formula "17") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1"))
                     (rule "polySimp_rightDist" (formula "17") (term "1"))
                     (rule "mul_literals" (formula "17") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "1,1,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0"))
                     (rule "add_zero_right" (formula "2") (term "0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "2") (term "0,0"))
                     (rule "concrete_or_2" (formula "2") (term "0"))
                     (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                     (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0"))
                     (rule "qeq_literals" (formula "2") (term "0"))
                     (rule "concrete_or_2" (formula "2"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "44"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "29"))
                     (rule "times_zero_1" (formula "26") (term "0,0"))
                     (rule "add_zero_left" (formula "26") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1"))
                     (rule "polySimp_rightDist" (formula "26") (term "1"))
                     (rule "mul_literals" (formula "26") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "19"))
                     (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                     (rule "add_literals" (formula "26") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0"))
                     (rule "qeq_literals" (formula "26") (term "0"))
                     (rule "concrete_or_1" (formula "26"))
                     (rule "true_left" (formula "26"))
                     (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "44") (term "0,0"))
                     (rule "add_zero_left" (formula "44") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "44") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0"))
                     (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,1,0"))
                     (rule "neg_literal" (formula "44") (term "0,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "44") (term "0,0"))
                     (rule "concrete_or_2" (formula "44") (term "0"))
                     (rule "polySimp_addLiterals" (formula "44") (term "0,0,0,0"))
                     (rule "add_literals" (formula "44") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0"))
                     (rule "add_literals" (formula "44") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "44") (term "1,0,0"))
                     (rule "add_zero_right" (formula "44") (term "0,0"))
                     (rule "qeq_literals" (formula "44") (term "0"))
                     (rule "concrete_or_2" (formula "44"))
                     (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "44"))
                     (rule "concrete_and_3" (formula "56"))
                     (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "44"))
                     (rule "leq_literals" (formula "2") (term "0"))
                     (rule "concrete_or_1" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "9"))
                     (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "18") (term "0"))
                     (rule "add_literals" (formula "18") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                     (rule "mul_literals" (formula "18") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "18") (ifseqformula "11"))
                     (rule "times_zero_1" (formula "18") (term "1,1,0"))
                     (rule "greater_literals" (formula "18") (term "0,0"))
                     (rule "concrete_and_1" (formula "18") (term "0"))
                     (rule "leq_literals" (formula "18") (term "0"))
                     (rule "concrete_or_1" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "43"))
                     (rule "applyEq" (formula "19") (term "0,1,1") (ifseqformula "11"))
                     (rule "times_zero_2" (formula "19") (term "1,1"))
                     (rule "add_zero_right" (formula "19") (term "1"))
                     (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "11"))
                     (rule "qeq_literals" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "11"))
                     (rule "times_zero_2" (formula "2") (term "1,1"))
                     (rule "add_zero_right" (formula "2") (term "1"))
                     (rule "applyEqRigid" (formula "43") (term "0") (ifseqformula "11"))
                     (rule "leq_literals" (formula "43"))
                     (rule "true_left" (formula "43"))
                     (rule "applyEqRigid" (formula "3") (term "0,1,0,1") (ifseqformula "11"))
                     (rule "times_zero_2" (formula "3") (term "1,0,1"))
                     (rule "add_zero_right" (formula "3") (term "0,1"))
                     (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "11"))
                     (rule "times_zero_2" (formula "4") (term "1,0,1"))
                     (rule "add_zero_right" (formula "4") (term "0,1"))
                     (rule "applyEqRigid" (formula "28") (term "0,1,0,1") (ifseqformula "11"))
                     (rule "times_zero_2" (formula "28") (term "1,0,1"))
                     (rule "add_zero_right" (formula "28") (term "0,1"))
                     (rule "applyEq" (formula "1") (term "1") (ifseqformula "11"))
                     (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "43"))
                     (rule "leq_literals" (formula "18") (term "0"))
                     (rule "concrete_or_1" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "9"))
                     (rule "leq_literals" (formula "2") (term "0"))
                     (rule "concrete_or_1" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "11"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0"))
                     (rule "qeq_literals" (formula "2") (term "0"))
                     (rule "concrete_or_1" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "25"))
                     (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                     (rule "add_literals" (formula "24") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0"))
                     (rule "qeq_literals" (formula "24") (term "0"))
                     (rule "concrete_or_1" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "qeq_literals" (formula "4") (term "0"))
                     (rule "concrete_or_1" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "23"))
                     (rule "times_zero_1" (formula "21") (term "0,0"))
                     (rule "add_zero_left" (formula "21") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                     (rule "mul_literals" (formula "21") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "39"))
                     (rule "leq_literals" (formula "21") (term "0"))
                     (rule "concrete_or_1" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "2"))
                     (rule "mul_literals" (formula "15") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0"))
                     (rule "add_literals" (formula "15") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                     (rule "mul_literals" (formula "15") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "39"))
                     (rule "leq_literals" (formula "15") (term "0"))
                     (rule "concrete_or_1" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                     (rule "mul_literals" (formula "24") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0"))
                     (rule "cnf_rightDist" (formula "30") (term "0,1,1,0"))
                     (rule "div_axiom" (formula "19") (term "1") (inst "quotient=quotient_4"))
                     (rule "qeq_literals" (formula "19") (term "0,1,1"))
                     (rule "ifthenelse_true_for" (formula "19") (term "1,1"))
                     (rule "equal_literals" (formula "19") (term "0"))
                     (rule "concrete_or_2" (formula "19"))
                     (rule "mul_literals" (formula "19") (term "1,1,1"))
                     (rule "andLeft" (formula "19"))
                     (rule "andLeft" (formula "19"))
                     (rule "polySimp_addComm1" (formula "21") (term "1"))
                     (rule "add_literals" (formula "21") (term "0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "20"))
                     (rule "inEqSimp_homoInEq1" (formula "21"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0"))
                     (rule "applyEq" (formula "30") (term "0") (ifseqformula "19"))
                     (rule "inEqSimp_homoInEq1" (formula "30"))
                     (rule "polySimp_addComm1" (formula "30") (term "0"))
                     (rule "applyEqRigid" (formula "17") (term "1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "17") (term "1,1,0,0,1,0") (ifseqformula "19"))
                     (rule "applyEqRigid" (formula "32") (term "1,1,0,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "33") (term "1,1,0,0") (ifseqformula "19"))
                     (rule "applyEqRigid" (formula "16") (term "1,1,0") (ifseqformula "19"))
                     (rule "applyEqRigid" (formula "22") (term "1") (ifseqformula "19"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1"))
                     (rule "polySimp_rightDist" (formula "21") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                     (rule "mul_literals" (formula "21") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1"))
                     (rule "polySimp_rightDist" (formula "30") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                     (rule "mul_literals" (formula "30") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "21"))
                     (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                     (rule "mul_literals" (formula "27") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                     (rule "add_literals" (formula "27") (term "0,0,0"))
                     (rule "add_zero_left" (formula "27") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                     (rule "polySimp_elimOne" (formula "27") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "21"))
                     (rule "mul_literals" (formula "15") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0"))
                     (rule "add_literals" (formula "15") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                     (rule "mul_literals" (formula "15") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "15") (term "0,0"))
                     (rule "concrete_or_2" (formula "15") (term "0"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0"))
                     (rule "leq_literals" (formula "15") (term "0"))
                     (rule "concrete_or_2" (formula "15"))
                     (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
                     (rule "times_zero_1" (formula "31") (term "0,0"))
                     (rule "add_zero_left" (formula "31") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                     (rule "mul_literals" (formula "31") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "15"))
                     (rule "leq_literals" (formula "31") (term "0"))
                     (rule "concrete_or_1" (formula "31"))
                     (rule "true_left" (formula "31"))
                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "22"))
                     (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                     (rule "mul_literals" (formula "9") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0"))
                     (rule "add_zero_left" (formula "9") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "45"))
                     (rule "polySimp_mulAssoc" (formula "22") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "22") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,1,0"))
                     (rule "neg_literal" (formula "22") (term "0,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "22") (term "0,0"))
                     (rule "concrete_or_2" (formula "22") (term "0"))
                     (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "22") (term "0,0,0,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                     (rule "add_literals" (formula "22") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0"))
                     (rule "qeq_literals" (formula "22") (term "0"))
                     (rule "concrete_or_2" (formula "22"))
                     (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "2"))
                     (rule "polySimp_mulAssoc" (formula "23") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0"))
                     (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1"))
                     (rule "polySimp_rightDist" (formula "23") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                     (rule "mul_literals" (formula "23") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "31"))
                     (rule "times_zero_1" (formula "28") (term "0,0"))
                     (rule "add_zero_left" (formula "28") (term "0"))
                     (rule "inEqSimp_subsumption6" (formula "28") (ifseqformula "16"))
                     (rule "mul_literals" (formula "28") (term "1,1,0"))
                     (rule "greater_literals" (formula "28") (term "0,0"))
                     (rule "concrete_and_1" (formula "28") (term "0"))
                     (rule "leq_literals" (formula "28") (term "0"))
                     (rule "concrete_or_1" (formula "28"))
                     (rule "true_left" (formula "28"))
                     (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "9"))
                     (rule "times_zero_1" (formula "46") (term "0,0"))
                     (rule "add_zero_left" (formula "46") (term "0"))
                     (rule "inEqSimp_subsumption6" (formula "46") (ifseqformula "16"))
                     (rule "greater_literals" (formula "46") (term "0,0"))
                     (rule "concrete_and_1" (formula "46") (term "0"))
                     (rule "mul_literals" (formula "46") (term "1,0"))
                     (rule "leq_literals" (formula "46") (term "0"))
                     (rule "concrete_or_1" (formula "46"))
                     (rule "true_left" (formula "46"))
                     (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "6"))
                     (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                     (rule "mul_literals" (formula "23") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "23") (term "0"))
                     (rule "add_literals" (formula "23") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                     (rule "inEqSimp_subsumption4" (formula "23") (ifseqformula "22"))
                     (rule "greater_literals" (formula "23") (term "0,0"))
                     (rule "concrete_and_1" (formula "23") (term "0"))
                     (rule "mul_literals" (formula "23") (term "0,0"))
                     (rule "leq_literals" (formula "23") (term "0"))
                     (rule "concrete_or_1" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "all_pull_out3" (formula "37") (term "1,0"))
                     (rule "andRight" (formula "57"))
                     (branch
                        (rule "allRight" (formula "57") (inst "sk=j_0"))
                        (rule "orRight" (formula "57"))
                        (rule "orRight" (formula "57"))
                        (rule "inEqSimp_leqRight" (formula "57"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "58"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                        (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "eqClose" (formula "1") (term "0,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "0,0"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "1") (term "0,0"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_2"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                        (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                        (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                        (rule "eqClose" (formula "1") (term "0,0,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                        (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                        (rule "concrete_or_1" (formula "1") (term "0,0"))
                        (rule "ifthenelse_true" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "3") (term "0,0"))
                        (rule "add_zero_left" (formula "3") (term "0"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0") (ifseqformula "15"))
                        (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "40"))
                        (rule "concrete_or_1" (formula "39"))
                        (rule "true_left" (formula "39"))
                        (rule "cut_direct" (formula "55") (term "1"))
                        (branch "CUT: i_1_0 * 2 >= i_0 TRUE"
                           (rule "concrete_or_3" (formula "56"))
                           (rule "true_left" (formula "56"))
                           (rule "inEqSimp_exactShadow1" (formula "55") (ifseqformula "38"))
                           (rule "greater_literals" (formula "55") (term "0"))
                           (rule "concrete_impl_1" (formula "55"))
                           (rule "polySimp_mulComm0" (formula "55") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "55") (term "1,0"))
                           (rule "mul_literals" (formula "55") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "55") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "55"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                           (rule "polySimp_elimOne" (formula "55") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "55"))
                           (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "12") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                           (rule "add_literals" (formula "12") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0"))
                           (rule "add_zero_right" (formula "12") (term "0,0"))
                           (rule "qeq_literals" (formula "12") (term "0"))
                           (rule "concrete_or_1" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "54"))
                           (rule "times_zero_1" (formula "48") (term "0,0"))
                           (rule "add_zero_left" (formula "48") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                           (rule "mul_literals" (formula "48") (term "1"))
                           (rule "inEqSimp_subsumption6" (formula "48") (ifseqformula "18"))
                           (rule "greater_literals" (formula "48") (term "0,0"))
                           (rule "concrete_and_1" (formula "48") (term "0"))
                           (rule "mul_literals" (formula "48") (term "1,0"))
                           (rule "leq_literals" (formula "48") (term "0"))
                           (rule "concrete_or_1" (formula "48"))
                           (rule "true_left" (formula "48"))
                           (rule "commute_or_2" (formula "40") (term "1,0,1,1,0"))
                           (rule "shift_paren_or" (formula "40") (term "0,0,1,1,0"))
                           (rule "shift_paren_or" (formula "39") (term "0,1,0"))
                           (rule "all_pull_out3" (formula "21") (term "0"))
                           (rule "shift_paren_or" (formula "21") (term "0,0"))
                           (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                           (rule "commute_or_2" (formula "21") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "39") (term "0,0,1,0"))
                           (rule "commute_or" (formula "21") (term "0,0,0,0,0"))
                           (rule "commute_or_2" (formula "39") (term "0,0,0,1,0"))
                           (rule "commute_or" (formula "40") (term "0,1,0,1,1,0"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "j_0 = i_0 TRUE"
                              (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "2"))
                              (rule "eqClose" (formula "61"))
                              (rule "closeTrue" (formula "61"))
                           )
                           (branch "j_0 = i_0 FALSE"
                              (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "56"))
                              (rule "inEqSimp_contradEq3" (formula "56") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0"))
                              (rule "add_literals" (formula "56") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "56") (term "1,0,0"))
                              (rule "add_zero_right" (formula "56") (term "0,0"))
                              (rule "qeq_literals" (formula "56") (term "0"))
                              (rule "concrete_and_2" (formula "56"))
                              (rule "false_right" (formula "56"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                              (rule "mul_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "2"))
                              (rule "leq_literals" (formula "48") (term "0"))
                              (rule "concrete_or_1" (formula "48"))
                              (rule "true_left" (formula "48"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "53"))
                              (rule "mul_literals" (formula "2") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_subsumption6" (formula "2") (ifseqformula "19"))
                              (rule "mul_literals" (formula "2") (term "1,1,0"))
                              (rule "greater_literals" (formula "2") (term "0,0"))
                              (rule "concrete_and_1" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2") (term "0"))
                              (rule "concrete_or_1" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "all_pull_out3" (formula "39") (term "0"))
                              (rule "shift_paren_or" (formula "39") (term "0,0"))
                              (rule "shift_paren_or" (formula "39") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "39") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "39") (term "0,0,0,0,0"))
                              (rule "commute_or" (formula "39") (term "0,0,0,0,0,0"))
                              (rule "all_pull_out3" (formula "40") (term "1,0"))
                              (rule "cnf_rightDist" (formula "40") (term "0,1,0"))
                              (rule "commute_or_2" (formula "40") (term "1,0,1,0"))
                              (rule "shift_paren_or" (formula "40") (term "0,0,1,0"))
                              (rule "commute_or_2" (formula "40") (term "0,1,0,1,0"))
                              (rule "shift_paren_or" (formula "40") (term "0,0,0,1,0"))
                              (rule "commute_or_2" (formula "40") (term "0,0,0,0,1,0"))
                              (rule "shift_paren_or" (formula "40") (term "0,0,1,0,1,0"))
                              (rule "commute_or" (formula "40") (term "0,0,0,1,0,1,0"))
                              (rule "allLeft" (formula "20") (inst "t=i_1_0"))
                              (rule "replace_known_left" (formula "20") (term "0,0,0,0") (ifseqformula "39"))
                              (rule "concrete_not_1" (formula "20") (term "0,0,0"))
                              (rule "concrete_or_2" (formula "20") (term "0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "20") (term "1") (ifseqformula "38"))
                              (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                              (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "20") (term "0,0,1"))
                              (rule "leq_literals" (formula "20") (term "0,1"))
                              (rule "concrete_and_2" (formula "20") (term "1"))
                              (rule "concrete_or_4" (formula "20"))
                              (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "37"))
                              (rule "qeq_literals" (formula "20") (term "0,1"))
                              (rule "concrete_and_2" (formula "20") (term "1"))
                              (rule "concrete_or_4" (formula "20"))
                              (rule "all_pull_out3" (formula "41") (term "0"))
                              (rule "cnf_rightDist" (formula "41") (term "0,0"))
                              (rule "distr_forallAnd" (formula "41") (term "0"))
                              (rule "distr_forallAnd" (formula "41"))
                              (rule "andLeft" (formula "41"))
                              (rule "commute_or_2" (formula "42") (term "0,0"))
                              (rule "shift_paren_or" (formula "41") (term "0,0"))
                              (rule "commute_or_2" (formula "42") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                              (rule "commute_or_2" (formula "42") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "41") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "41") (term "0,0,0,0,0"))
                              (rule "shift_paren_or" (formula "42") (term "0,0,0,0,0"))
                              (rule "commute_or" (formula "41") (term "0,0,0,0,0,0"))
                              (rule "allLeft" (formula "57") (inst "t=j_0"))
                              (rule "replaceKnownSelect_taclet00000100_3" (formula "57") (term "0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000100_4" (formula "57") (term "0,0,0"))
                              (rule "replace_known_right" (formula "57") (term "0,0") (ifseqformula "62"))
                              (rule "concrete_or_2" (formula "57") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "57") (term "0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "57") (term "0,0"))
                              (rule "concrete_and_2" (formula "57") (term "0"))
                              (rule "concrete_or_2" (formula "57"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "57"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_literals" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "CUT: i_1_0 * 2 >= i_0 FALSE"
                           (rule "concrete_or_4" (formula "55"))
                           (rule "inEqSimp_geqRight" (formula "57"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_exactShadow2" (formula "38") (ifseqformula "1"))
                           (rule "greater_literals" (formula "38") (term "0"))
                           (rule "concrete_impl_1" (formula "38"))
                           (rule "mul_literals" (formula "38") (term "1,0,0"))
                           (rule "mul_literals" (formula "38") (term "0,0"))
                           (rule "add_zero_left" (formula "38") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                           (rule "mul_literals" (formula "38") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "51") (ifseqformula "38"))
                           (rule "leq_literals" (formula "51") (term "0"))
                           (rule "concrete_or_1" (formula "51"))
                           (rule "true_left" (formula "51"))
                           (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "13"))
                           (rule "mul_literals" (formula "38") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                           (rule "mul_literals" (formula "38") (term "1"))
                           (rule "inEqSimp_subsumption6" (formula "38") (ifseqformula "20"))
                           (rule "mul_literals" (formula "38") (term "1,1,0"))
                           (rule "greater_literals" (formula "38") (term "0,0"))
                           (rule "concrete_and_1" (formula "38") (term "0"))
                           (rule "leq_literals" (formula "38") (term "0"))
                           (rule "concrete_or_1" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "commute_or_2" (formula "43") (term "1,0,1,1,0"))
                           (rule "shift_paren_or" (formula "43") (term "0,0,1,1,0"))
                           (rule "shift_paren_or" (formula "42") (term "0,1,0"))
                           (rule "all_pull_out3" (formula "23") (term "0"))
                           (rule "shift_paren_or" (formula "23") (term "0,0"))
                           (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                           (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "42") (term "0,0,1,0"))
                           (rule "commute_or" (formula "23") (term "0,0,0,0,0"))
                           (rule "commute_or_2" (formula "42") (term "0,0,0,1,0"))
                           (rule "commute_or" (formula "43") (term "0,1,0,1,1,0"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch "j_0 = i_0 TRUE"
                              (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "3"))
                              (rule "eqClose" (formula "62"))
                              (rule "closeTrue" (formula "62"))
                           )
                           (branch "j_0 = i_0 FALSE"
                              (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "57"))
                              (rule "inEqSimp_contradEq3" (formula "57") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0"))
                              (rule "add_literals" (formula "57") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "57") (term "1,0,0"))
                              (rule "add_zero_right" (formula "57") (term "0,0"))
                              (rule "qeq_literals" (formula "57") (term "0"))
                              (rule "concrete_and_2" (formula "57"))
                              (rule "false_right" (formula "57"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                              (rule "mul_literals" (formula "3") (term "0,0"))
                              (rule "add_zero_left" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "all_pull_out3" (formula "41") (term "0"))
                              (rule "shift_paren_or" (formula "41") (term "0,0"))
                              (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "41") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "41") (term "0,0,0,0,0"))
                              (rule "commute_or" (formula "41") (term "0,0,0,0,0,0"))
                              (rule "all_pull_out3" (formula "42") (term "1,0"))
                              (rule "cnf_rightDist" (formula "42") (term "0,1,0"))
                              (rule "commute_or_2" (formula "42") (term "1,0,1,0"))
                              (rule "shift_paren_or" (formula "42") (term "0,0,1,0"))
                              (rule "commute_or_2" (formula "42") (term "0,1,0,1,0"))
                              (rule "shift_paren_or" (formula "42") (term "0,0,0,1,0"))
                              (rule "commute_or_2" (formula "42") (term "0,0,0,0,1,0"))
                              (rule "shift_paren_or" (formula "42") (term "0,0,1,0,1,0"))
                              (rule "commute_or" (formula "42") (term "0,0,0,1,0,1,0"))
                              (rule "allLeft" (formula "21") (inst "t=i_1_0"))
                              (rule "replace_known_left" (formula "21") (term "0,0,0,0") (ifseqformula "41"))
                              (rule "concrete_not_1" (formula "21") (term "0,0,0"))
                              (rule "concrete_or_2" (formula "21") (term "0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "39"))
                              (rule "qeq_literals" (formula "21") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "21") (term "1,0"))
                              (rule "concrete_or_4" (formula "21") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "21") (term "1") (ifseqformula "40"))
                              (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "21") (term "0,0,1"))
                              (rule "leq_literals" (formula "21") (term "0,1"))
                              (rule "concrete_and_2" (formula "21") (term "1"))
                              (rule "concrete_or_4" (formula "21"))
                              (rule "all_pull_out3" (formula "43") (term "0"))
                              (rule "cnf_rightDist" (formula "43") (term "0,0"))
                              (rule "distr_forallAnd" (formula "43") (term "0"))
                              (rule "distr_forallAnd" (formula "43"))
                              (rule "andLeft" (formula "43"))
                              (rule "commute_or_2" (formula "44") (term "0,0"))
                              (rule "shift_paren_or" (formula "43") (term "0,0"))
                              (rule "commute_or_2" (formula "44") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "43") (term "0,0,0"))
                              (rule "commute_or_2" (formula "44") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "43") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "43") (term "0,0,0,0,0"))
                              (rule "shift_paren_or" (formula "44") (term "0,0,0,0,0"))
                              (rule "commute_or" (formula "43") (term "0,0,0,0,0,0"))
                              (rule "allLeft" (formula "58") (inst "t=j_0"))
                              (rule "replaceKnownSelect_taclet00000100_3" (formula "58") (term "0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000100_4" (formula "58") (term "0,0,0"))
                              (rule "replace_known_right" (formula "58") (term "0,0") (ifseqformula "63"))
                              (rule "concrete_or_2" (formula "58") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "58") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "58") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "58") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "58") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "58") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,1"))
                              (rule "add_literals" (formula "58") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "58") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "58") (term "0,0,1"))
                              (rule "leq_literals" (formula "58") (term "0,1"))
                              (rule "concrete_and_2" (formula "58") (term "1"))
                              (rule "concrete_or_4" (formula "58"))
                              (rule "inEqSimp_contradInEq1" (formula "58") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "58") (term "0"))
                              (rule "concrete_and_2" (formula "58"))
                              (rule "closeFalse" (formula "58"))
                           )
                        )
                     )
                     (branch
                        (rule "allRight" (formula "57") (inst "sk=f_0"))
                        (rule "allRight" (formula "57") (inst "sk=o_0"))
                        (rule "orRight" (formula "57"))
                        (rule "orRight" (formula "57"))
                        (rule "pullOutSelect" (formula "59") (term "1") (inst "selectSK=f_0_0"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "1") (term "1,0,0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=f_0_1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "1") (term "1,0,0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "59"))
                        (rule "concrete_and_2" (formula "1") (term "0,0"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                        (rule "replaceKnownSelect_taclet10000100_2" (formula "1") (term "2,0"))
                        (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                        (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "59"))
                        (rule "concrete_and_2" (formula "1") (term "0,0,0"))
                        (rule "concrete_or_2" (formula "1") (term "0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "60"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "1"))
                        (rule "eqClose" (formula "61"))
                        (rule "closeTrue" (formula "61"))
                     )
                  )
                  (branch "Null Reference (tab = null)"
                     (rule "false_right" (formula "21"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "simplifyUpdate1" (formula "1") (term "1"))
                     (rule "applyOnPV" (formula "1") (term "0"))
                     (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "1"))
                     (rule "concrete_or_1" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "17") (term "0,1,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "17") (term "1,0,0,0,0") (ifseqformula "1"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "13"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "add_literals" (formula "4") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "9") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "7"))
                     (rule "insert_constant_value" (formula "9") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "9") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "eqClose" (formula "9") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "concrete_and_3" (formula "9") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "9") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "eqClose" (formula "9") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "concrete_and_3" (formula "9") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "eqClose" (formula "9") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "concrete_and_3" (formula "9") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "expand_inInt" (formula "9") (term "0,1"))
                     (rule "expand_inInt" (formula "9") (term "1,1"))
                     (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "9") (term "1,0,0,1"))
                     (rule "replace_int_MIN" (formula "9") (term "0,1,0,1"))
                     (rule "replace_int_MAX" (formula "9") (term "1,0,1,1"))
                     (rule "replace_int_MIN" (formula "9") (term "0,1,1,1"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "11"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "notLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "notLeft" (formula "9"))
                     (rule "close" (formula "32") (ifseqformula "1"))
                  )
                  (branch "Index Out of Bounds (tab != null, but i Out of Bounds!)"
                     (rule "false_right" (formula "21"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "simplifyUpdate2" (formula "1") (term "1"))
                     (rule "applyOnRigidFormula" (formula "19"))
                     (rule "applyOnPV" (formula "19") (term "0"))
                     (rule "simplifyUpdate1" (formula "19") (term "1"))
                     (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "19"))
                     (rule "concrete_or_2" (formula "5"))
                     (rule "applyOnRigidFormula" (formula "1") (term "0"))
                     (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                     (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                     (rule "applyOnPV" (formula "1") (term "1,0"))
                     (rule "applyOnRigidFormula" (formula "1") (term "1"))
                     (rule "applyOnPV" (formula "1") (term "0,1"))
                     (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                     (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                     (rule "applyOnPV" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "4"))
                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0"))
                     (rule "concrete_and_2" (formula "1") (term "0"))
                     (rule "concrete_or_2" (formula "1"))
                     (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
                     (rule "leq_literals" (formula "3") (term "0"))
                     (rule "concrete_or_1" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "11") (term "0"))
                     (rule "concrete_and_2" (formula "11"))
                     (rule "closeFalse" (formula "11"))
                  )
                  (branch "Array Store Exception (incompatible dynamic element type of tab and null)"
                     (rule "false_right" (formula "21"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "simplifyUpdate2" (formula "2"))
                     (rule "andLeft" (formula "1"))
                     (rule "simplifyUpdate2" (formula "2"))
                     (rule "notLeft" (formula "3"))
                     (rule "andLeft" (formula "1"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "2"))
                     (rule "applyOnPV" (formula "2") (term "0"))
                     (rule "simplifyUpdate1" (formula "2") (term "1"))
                     (rule "applyOnRigidFormula" (formula "20"))
                     (rule "applyOnPV" (formula "20") (term "0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "simplifyUpdate1" (formula "1") (term "0"))
                     (rule "simplifyUpdate1" (formula "1") (term "1"))
                     (rule "applyOnPV" (formula "1") (term "0"))
                     (rule "applyOnRigidFormula" (formula "19"))
                     (rule "applyOnPV" (formula "19") (term "0"))
                     (rule "simplifyUpdate1" (formula "19") (term "1"))
                     (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "19"))
                     (rule "concrete_or_2" (formula "5"))
                     (rule "applyOnRigidTerm" (formula "1") (term "1"))
                     (rule "applyOnPV" (formula "1") (term "0,1"))
                     (rule "null_can_always_be_stored_in_a_reference_type_array" (formula "20") (ifseqformula "19"))
                     (rule "closeTrue" (formula "20"))
                  )
               )
               (branch "if x_5 false"
                  (rule "false_to_not_true" (formula "1") (term "1"))
                  (rule "simplifyUpdate2" (formula "21"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "18"))
                  (rule "simplifyUpdate1" (formula "18") (term "1"))
                  (rule "applyOnPV" (formula "18") (term "0"))
                  (rule "boolean_equal" (formula "18"))
                  (rule "closeTrue" (formula "18"))
               )
            )
            (branch "Null Reference (tab = null)"
               (rule "false_right" (formula "17"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "simplifyUpdate1" (formula "1") (term "1"))
               (rule "applyOnPV" (formula "1") (term "0"))
               (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "1"))
               (rule "concrete_or_1" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "applyEq" (formula "13") (term "1,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "13") (term "0,1,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
               (rule "polySimp_rightDist" (formula "3") (term "0,0"))
               (rule "mul_literals" (formula "3") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "8") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "6"))
               (rule "insert_constant_value" (formula "8") (term "1,1,0,0,0,0,0,0,0"))
               (rule "insert_constant_value" (formula "8") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "insert_constant_value" (formula "8") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "eqClose" (formula "8") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "concrete_and_3" (formula "8") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "insert_constant_value" (formula "8") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "insert_constant_value" (formula "8") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "eqClose" (formula "8") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "concrete_and_3" (formula "8") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "insert_constant_value" (formula "8") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "eqClose" (formula "8") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "concrete_and_3" (formula "8") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "expand_inInt" (formula "8") (term "0,1"))
               (rule "expand_inInt" (formula "8") (term "1,1"))
               (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "8") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "replace_int_MAX" (formula "8") (term "1,0,0,1"))
               (rule "replace_int_MIN" (formula "8") (term "0,1,0,1"))
               (rule "replace_int_MAX" (formula "8") (term "1,0,1,1"))
               (rule "replace_int_MIN" (formula "8") (term "0,1,1,1"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "notLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "notLeft" (formula "8"))
               (rule "close" (formula "28") (ifseqformula "1"))
            )
         )
         (branch "Null Reference (tab = null)"
            (rule "false_right" (formula "15"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
            (rule "concrete_or_1" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "applyEq" (formula "13") (term "0,1,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "13") (term "1,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "16") (term "0,1,0,1,0,1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "16") (term "0,1,0,1,0,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "16") (term "0,1,0,0,0,0") (ifseqformula "1"))
            (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "10"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
            (rule "polySimp_addComm0" (formula "12") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "12"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
            (rule "polySimp_elimOne" (formula "12") (term "0"))
            (rule "ifUnfold" (formula "16") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_5"))
            (rule "compound_less_than_comparison_2" (formula "16") (term "1") (inst "#v1=x_7") (inst "#v0=x_6"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_6"))
            (rule "assignment" (formula "16") (term "1"))
            (rule "sequentialToParallel2" (formula "16"))
            (rule "simplifyUpdate3" (formula "16") (term "1,0"))
            (rule "applyOnElementary" (formula "16") (term "1,0"))
            (rule "applyOnPV" (formula "16") (term "0,1,0"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_7"))
            (rule "assignment_read_length" (formula "16"))
            (branch "Normal Execution (tab != null)"
               (rule "sequentialToParallel2" (formula "16"))
               (rule "simplifyUpdate3" (formula "16") (term "1,0"))
               (rule "applyOnElementary" (formula "16") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "16") (term "0,1,0"))
               (rule "applyOnPV" (formula "16") (term "0,0,1,0"))
               (rule "less_than_comparison_simple" (formula "16") (term "1"))
               (rule "sequentialToParallel2" (formula "16"))
               (rule "simplifyUpdate2" (formula "16"))
               (rule "simplifyUpdate3" (formula "16") (term "1,0"))
               (rule "applyOnElementary" (formula "16") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "16") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "16") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "16") (term "2,0,1,0"))
               (rule "applyOnRigidFormula" (formula "16") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "16") (term "0,0,0,1,0"))
               (rule "simplifyUpdate1" (formula "16") (term "1,0,0,1,0"))
               (rule "applyOnPV" (formula "16") (term "0,0,0,1,0"))
               (rule "applyOnPV" (formula "16") (term "1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,0"))
               (rule "div_axiom" (formula "13") (term "0,1,3,0,0,0,0,0,0") (inst "quotient=quotient_0"))
               (rule "qeq_literals" (formula "13") (term "0,1,1"))
               (rule "ifthenelse_true_for" (formula "13") (term "1,1"))
               (rule "equal_literals" (formula "13") (term "0"))
               (rule "concrete_or_2" (formula "13"))
               (rule "mul_literals" (formula "13") (term "1,1,1"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
               (rule "add_literals" (formula "15") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "15") (term "1"))
               (rule "add_literals" (formula "15") (term "0,1"))
               (rule "inEqSimp_homoInEq0" (formula "14"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0"))
               (rule "inEqSimp_homoInEq1" (formula "15"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
               (rule "polySimp_addComm1" (formula "15") (term "0"))
               (rule "applyEq" (formula "16") (term "0,1,3,0,0,0,0,0,0") (ifseqformula "13"))
               (rule "polySimp_addComm1" (formula "16") (term "3,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "14"))
               (rule "polySimp_mulComm0" (formula "14") (term "1"))
               (rule "polySimp_rightDist" (formula "14") (term "1"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
               (rule "mul_literals" (formula "14") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15"))
               (rule "polySimp_mulComm0" (formula "15") (term "1"))
               (rule "polySimp_rightDist" (formula "15") (term "1"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
               (rule "mul_literals" (formula "15") (term "0,1"))
               (rule "ifSplit" (formula "19"))
               (branch "if x_5 true"
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "simplifyUpdate2" (formula "20"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1"))
                  (rule "applyOnPV" (formula "1") (term "0"))
                  (rule "ifthenelse_concrete3" (formula "1"))
                  (rule "boolean_not_equal_2" (formula "1") (term "1"))
                  (rule "concrete_or_4" (formula "1"))
                  (rule "assignment_to_reference_array_component" (formula "20"))
                  (branch "Normal Execution (tab != null)"
                     (rule "sequentialToParallel2" (formula "20"))
                     (rule "simplifyUpdate2" (formula "20"))
                     (rule "simplifyUpdate3" (formula "20") (term "1,0"))
                     (rule "applyOnElementary" (formula "20") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "3,0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "2,0,1,0"))
                     (rule "applyOnPV" (formula "20") (term "1,0,1,0"))
                     (rule "applyOnPV" (formula "20") (term "0,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "2,0,1,0"))
                     (rule "applyOnPV" (formula "20") (term "0,2,0,1,0"))
                     (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0"))
                     (rule "qeq_literals" (formula "13") (term "0"))
                     (rule "concrete_or_1" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "11"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "1"))
                     (rule "leq_literals" (formula "13") (term "0"))
                     (rule "concrete_or_1" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "postincrement" (formula "19") (term "1"))
                     (rule "compound_int_cast_expression" (formula "19") (term "1") (inst "#v=x"))
                     (rule "variableDeclarationAssign" (formula "19") (term "1"))
                     (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_8"))
                     (rule "remove_parentheses_right" (formula "19") (term "1"))
                     (rule "assignmentAdditionInt" (formula "19") (term "1"))
                     (rule "translateJavaAddInt" (formula "19") (term "0,0,1"))
                     (rule "sequentialToParallel2" (formula "19"))
                     (rule "simplifyUpdate3" (formula "19") (term "1,0"))
                     (rule "applyOnElementary" (formula "19") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "19") (term "0,1,0"))
                     (rule "applyOnPV" (formula "19") (term "0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "1,0,1,0"))
                     (rule "expand_addJint" (formula "19") (term "0,1,0"))
                     (rule "polySimp_addComm0" (formula "19") (term "0,0,1,0"))
                     (rule "expand_moduloInteger" (formula "19") (term "0,1,0"))
                     (rule "replace_int_RANGE" (formula "19") (term "1,1,0,1,0"))
                     (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,0,1,0"))
                     (rule "replace_int_MIN" (formula "19") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,1,0"))
                     (rule "add_literals" (formula "19") (term "0,0,1,0,1,0"))
                     (rule "polyMod_pullOut" (formula "19") (term "1,0,1,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,0"))
                     (rule "mul_literals" (formula "19") (term "1,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,1,0,1,0"))
                     (rule "add_literals" (formula "19") (term "0,0,1,0,1,0"))
                     (rule "widening_identity_cast_5" (formula "19") (term "1"))
                     (rule "assignment" (formula "19") (term "1"))
                     (rule "sequentialToParallel2" (formula "19"))
                     (rule "simplifyUpdate2" (formula "19"))
                     (rule "simplifyUpdate3" (formula "19") (term "1,0"))
                     (rule "applyOnElementary" (formula "19") (term "1,0"))
                     (rule "applyOnPV" (formula "19") (term "0,1,0"))
                     (rule "tryEmpty" (formula "19") (term "1"))
                     (rule "methodCallEmpty" (formula "19") (term "1"))
                     (rule "emptyModality" (formula "19") (term "1"))
                     (rule "applyOnRigidFormula" (formula "19"))
                     (rule "simplifyUpdate2" (formula "19") (term "0"))
                     (rule "simplifyUpdate2" (formula "19") (term "1"))
                     (rule "applyOnRigidFormula" (formula "19") (term "0"))
                     (rule "simplifyUpdate2" (formula "19") (term "1,0"))
                     (rule "simplifyUpdate2" (formula "19") (term "0,0"))
                     (rule "applyOnRigidFormula" (formula "19") (term "1"))
                     (rule "simplifyUpdate2" (formula "19") (term "0,1"))
                     (rule "simplifyUpdate2" (formula "19") (term "1,1"))
                     (rule "applyOnRigidFormula" (formula "19") (term "0,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "1,0,0"))
                     (rule "applyOnPV" (formula "19") (term "0,0,0"))
                     (rule "boolean_not_equal_2" (formula "19") (term "0,0"))
                     (rule "concrete_impl_2" (formula "19") (term "0"))
                     (rule "concrete_and_1" (formula "19"))
                     (rule "impRight" (formula "19"))
                     (rule "notLeft" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "20"))
                     (rule "simplifyUpdate2" (formula "20") (term "0"))
                     (rule "simplifyUpdate2" (formula "20") (term "1"))
                     (rule "applyOnRigidFormula" (formula "17"))
                     (rule "applyOnPV" (formula "17") (term "0"))
                     (rule "simplifyUpdate1" (formula "17") (term "1"))
                     (rule "boolean_not_equal_2" (formula "17"))
                     (rule "false_right" (formula "17"))
                     (rule "applyOnRigidFormula" (formula "19") (term "0"))
                     (rule "simplifyUpdate2" (formula "19") (term "0,0"))
                     (rule "simplifyUpdate2" (formula "19") (term "1,0"))
                     (rule "applyOnRigidFormula" (formula "19") (term "1"))
                     (rule "simplifyUpdate1" (formula "19") (term "1,1"))
                     (rule "simplifyUpdate1" (formula "19") (term "0,1"))
                     (rule "applyOnPV" (formula "19") (term "1,1"))
                     (rule "applyOnRigidFormula" (formula "19") (term "0,0"))
                     (rule "simplifyUpdate2" (formula "19") (term "0,0,0"))
                     (rule "applyOnRigidFormula" (formula "19") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "19") (term "0,1"))
                     (rule "simplifyUpdate1" (formula "19") (term "0,0,1"))
                     (rule "applyOnRigidFormula" (formula "19") (term "1,0,0"))
                     (rule "applyOnRigidFormula" (formula "19") (term "0,0,0"))
                     (rule "simplifyUpdate2" (formula "19") (term "0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "19") (term "0,1,0"))
                     (rule "applyOnRigidTerm" (formula "19") (term "1,0,1"))
                     (rule "simplifyUpdate1" (formula "19") (term "1,1,0,1"))
                     (rule "applyOnRigidFormula" (formula "19") (term "0,1,0,0"))
                     (rule "simplifyUpdate2" (formula "19") (term "0,0,1,0,0"))
                     (rule "simplifyUpdate2" (formula "19") (term "1,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "19") (term "1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "1,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "0,1,0,0,0"))
                     (rule "applyOnPV" (formula "19") (term "1,1,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "19") (term "0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "1,0,0,0,0"))
                     (rule "applyOnPV" (formula "19") (term "0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "19") (term "0,0,1,0"))
                     (rule "simplifyUpdate2" (formula "19") (term "0,0,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "19") (term "0,1,0,1"))
                     (rule "simplifyUpdate1" (formula "19") (term "0,0,1,0,1"))
                     (rule "simplifyUpdate1" (formula "19") (term "1,0,1,0,1"))
                     (rule "applyOnRigidFormula" (formula "19") (term "0,0,1,0,0"))
                     (rule "simplifyUpdate2" (formula "19") (term "0,0,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "19") (term "1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "1,1,0,1,0,0"))
                     (rule "applyOnRigidTerm" (formula "19") (term "0,1,0,0,0"))
                     (rule "applyOnPV" (formula "19") (term "0,0,1,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "19") (term "1,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "0,1,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "1,1,0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "19") (term "0,0,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "19") (term "0,0,1,0,1"))
                     (rule "simplifyUpdate1" (formula "19") (term "0,0,0,1,0,1"))
                     (rule "applyOnRigidTerm" (formula "19") (term "1,0,1,0,1"))
                     (rule "applyOnPV" (formula "19") (term "0,1,0,1,0,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,1,0,1"))
                     (rule "applyOnRigidFormula" (formula "19") (term "1,0,0,1,0,0"))
                     (rule "applyOnPV" (formula "19") (term "1,1,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "0,1,0,0,1,0,0"))
                     (rule "applyOnRigidTerm" (formula "19") (term "0,1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "2,0,1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "1,0,1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "0,0,1,0,1,0,0"))
                     (rule "applyOnPV" (formula "19") (term "1,0,1,0,1,0,0"))
                     (rule "applyOnPV" (formula "19") (term "0,0,1,0,1,0,0"))
                     (rule "applyOnRigidTerm" (formula "19") (term "0,1,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "1,0,1,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "2,0,1,0,0,1,0"))
                     (rule "applyOnPV" (formula "19") (term "0,0,1,0,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "19") (term "1,1,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "2,1,1,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "1,1,1,0,0,1,0"))
                     (rule "applyOnPV" (formula "19") (term "0,1,1,0,0,1,0"))
                     (rule "eqSymm" (formula "19") (term "1,0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "19") (term "0,0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "0,0,0,0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "19") (term "1,0,0,0,1,0"))
                     (rule "simplifyUpdate2" (formula "19") (term "0,1,0,0,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "19") (term "1,0,1,0,1"))
                     (rule "simplifyUpdate1" (formula "19") (term "1,1,0,1,0,1"))
                     (rule "applyOnPV" (formula "19") (term "0,1,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,1"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,1"))
                     (rule "add_literals" (formula "19") (term "0,0,0,1,0,1"))
                     (rule "applyOnRigidTerm" (formula "19") (term "1,0,0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "1,1,0,0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "2,1,0,0,0,0,1,0"))
                     (rule "applyOnPV" (formula "19") (term "0,1,0,0,0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "19") (term "1,1,0,0,0,1,0"))
                     (rule "precOfInt" (formula "19") (term "1"))
                     (rule "dismissNonSelectedField" (formula "19") (term "1,0,0,0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "19") (term "0,1,1,0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "1,0,1,1,0,0,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "19") (term "0,0,1,1,0,0,0,1,0"))
                     (rule "applyOnPV" (formula "19") (term "0,0,0,1,1,0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "1,0,0,1,1,0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "19") (term "2,0,0,1,1,0,0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "19") (term "0,0,1,1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,1"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1"))
                     (rule "add_literals" (formula "19") (term "0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,1,1"))
                     (rule "add_literals" (formula "19") (term "0,0,0,1,1"))
                     (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "19") (term "0,1"))
                     (rule "times_zero_2" (formula "19") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "19") (term "0,0,1"))
                     (rule "applyEq" (formula "19") (term "1,0,0,0,0,1,0") (ifseqformula "3"))
                     (rule "mod_axiom" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0,0,0,0"))
                     (rule "mod_axiom" (formula "19") (term "1,1,1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,1,1,0,0,1,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,1,1,0,0,1,0,0"))
                     (rule "mod_axiom" (formula "19") (term "1,3,0,0,0,0,1,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,3,0,0,0,0,1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "3,0,0,0,0,1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,3,0,0,0,0,1,0,1,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,3,0,0,0,0,1,0,1,0,0"))
                     (rule "applyEq" (formula "19") (term "0,1,3,0,0,0,0,1,0,1,0,0") (ifseqformula "13"))
                     (rule "polySimp_addComm1" (formula "19") (term "3,0,0,0,0,1,0,1,0,0"))
                     (rule "mod_axiom" (formula "19") (term "1,3,0,0,0,0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,3,0,0,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "3,0,0,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,3,0,0,0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "19") (term "0,0,3,0,0,0,0,1,0,0,1,0"))
                     (rule "applyEq" (formula "19") (term "0,1,3,0,0,0,0,1,0,0,1,0") (ifseqformula "13"))
                     (rule "polySimp_addComm1" (formula "19") (term "3,0,0,0,0,1,0,0,1,0"))
                     (rule "mod_axiom" (formula "19") (term "1,3,0,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,3,0,1,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "3,0,1,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,3,0,1,1,0,0,1,0"))
                     (rule "add_literals" (formula "19") (term "0,0,3,0,1,1,0,0,1,0"))
                     (rule "applyEq" (formula "19") (term "0,1,3,0,1,1,0,0,1,0") (ifseqformula "13"))
                     (rule "polySimp_addComm1" (formula "19") (term "3,0,1,1,0,0,1,0"))
                     (rule "mod_axiom" (formula "19") (term "0,1,0,1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,0,1,1"))
                     (rule "mul_literals" (formula "19") (term "0,0,1,0,1,0,1,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,1,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,0,1,1"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0,1,0,1,1"))
                     (rule "mod_axiom" (formula "19") (term "0,1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,0,1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1,0,0,1,1"))
                     (rule "mul_literals" (formula "19") (term "0,0,0,1,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,0,0,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,1,1"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0,0,1,1"))
                     (rule "mod_axiom" (formula "19") (term "1,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0,1,0,0,0"))
                     (rule "mod_axiom" (formula "19") (term "0,1,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,0,0,1"))
                     (rule "mul_literals" (formula "19") (term "0,0,1,0,1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,0,0,1"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0,1,0,0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,1,1,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,0,1,1,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,0,1,1,1"))
                     (rule "mul_literals" (formula "19") (term "0,0,0,1,1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1"))
                     (rule "mul_literals" (formula "19") (term "1,0,1"))
                     (rule "polyMod_pullOut" (formula "19") (term "0,0,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        i_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,0,0,1"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0,0,0,1"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,1"))
                     (rule "add_zero_right" (formula "19") (term "0,0,0,0,1"))
                     (rule "mod_axiom" (formula "19") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1"))
                     (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "19") (term "0,0,0,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,0,0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,1"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1"))
                     (rule "mul_literals" (formula "19") (term "0,0,1,0,1"))
                     (rule "polyMod_pullOut" (formula "19") (term "0,1,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        i_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,1,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,0,1,1"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "19") (term "0,0,0,1,1"))
                     (rule "mod_axiom" (formula "19") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1"))
                     (rule "inEqSimp_homoInEq0" (formula "19") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,0,1,0,1,1"))
                     (rule "mul_literals" (formula "19") (term "0,0,0,1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1,0,1,1"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,0,0,1,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,1,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0,1,1"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "19") (term "0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,1,1"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0,0,1,1"))
                     (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,0,0,1,1"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "19") (term "0,0,0,1,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1,1"))
                     (rule "mul_literals" (formula "19") (term "0,1,1,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1"))
                     (rule "elimGcdGeq" (formula "19") (term "1,1") (inst "elimGcdRightDiv=add(Z(1(#)),
    div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                mul(i_0, Z(neglit(1(#))))),
            length(null)),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))))") (inst "elimGcdLeftDiv=div(add(add(Z(3(4(9(0(5(4(2(4(4(6(#))))))))))),
            mul(i_0, Z(neglit(1(#))))),
        length(null)),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1,1"))
                     (rule "sub_literals" (formula "19") (term "0,0,0,0,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,1"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0,0,1,1"))
                     (rule "mul_literals" (formula "19") (term "0,0,0,0,0,1,0,1,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,0,1,1"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "19") (term "0,0,0,1,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,1,0,1,1"))
                     (rule "add_literals" (formula "19") (term "1,1,0,1,0,1,1"))
                     (rule "times_zero_1" (formula "19") (term "1,0,1,0,1,1"))
                     (rule "add_zero_right" (formula "19") (term "0,1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,1,1"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,0,1,0,1,1"))
                     (rule "mul_literals" (formula "19") (term "0,0,0,1,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,1,1"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,1,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,1,1"))
                     (rule "add_literals" (formula "19") (term "0,0,0,1,0,1,1"))
                     (rule "add_zero_left" (formula "19") (term "0,0,1,0,1,1"))
                     (rule "polySimp_pullOutFactor0" (formula "19") (term "0,1,0,1,1"))
                     (rule "add_literals" (formula "19") (term "1,0,1,0,1,1"))
                     (rule "times_zero_1" (formula "19") (term "0,1,0,1,1"))
                     (rule "leq_literals" (formula "19") (term "1,0,1,1"))
                     (rule "concrete_and_3" (formula "19") (term "0,1,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,1"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0,1,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,1,1"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0,1,1"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,1,1"))
                     (rule "add_zero_right" (formula "19") (term "0,0,1,1"))
                     (rule "qeq_literals" (formula "19") (term "0,1,1"))
                     (rule "ifthenelse_true_for" (formula "19") (term "1,1"))
                     (rule "polyDiv_pullOut" (formula "19") (term "0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,2,0,0,0,1"))
                     (rule "equal_literals" (formula "19") (term "0,0,0,0,1"))
                     (rule "ifthenelse_false" (formula "19") (term "0,0,0,1"))
                     (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,1,1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,1,1,0,0,1"))
                     (rule "add_literals" (formula "19") (term "0,0,0,1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,0,1"))
                     (rule "mul_literals" (formula "19") (term "0,0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "19") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,1"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0,0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1"))
                     (rule "polyDiv_pullOut" (formula "19") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "equal_literals" (formula "19") (term "0,0,1,1"))
                     (rule "ifthenelse_false" (formula "19") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1,1"))
                     (rule "mul_literals" (formula "19") (term "1,0,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,1,1"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "19") (term "0,1,1"))
                     (rule "inEqSimp_homoInEq1" (formula "19") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,1,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,1,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1"))
                     (rule "add_literals" (formula "19") (term "0,0,0,1,1"))
                     (rule "add_zero_left" (formula "19") (term "0,0,1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,1"))
                     (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "8") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "6"))
                     (rule "insert_constant_value" (formula "8") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "8") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "8") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "eqClose" (formula "8") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "concrete_and_3" (formula "8") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "8") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "8") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "eqClose" (formula "8") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "concrete_and_3" (formula "8") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "8") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "eqClose" (formula "8") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "concrete_and_3" (formula "8") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "expand_inInt" (formula "8") (term "0,1"))
                     (rule "expand_inInt" (formula "8") (term "1,1"))
                     (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "8") (term "1,0,0,1"))
                     (rule "replace_int_MIN" (formula "8") (term "0,1,0,1"))
                     (rule "replace_int_MAX" (formula "8") (term "1,0,1,1"))
                     (rule "replace_int_MIN" (formula "8") (term "0,1,1,1"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "notLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "notLeft" (formula "8"))
                     (rule "close" (formula "31") (ifseqformula "3"))
                  )
                  (branch "Null Reference (tab = null)"
                     (rule "false_right" (formula "21"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "applyOnPV" (formula "1") (term "0"))
                     (rule "simplifyUpdate1" (formula "1") (term "1"))
                     (rule "eqClose" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0"))
                     (rule "qeq_literals" (formula "13") (term "0"))
                     (rule "concrete_or_1" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "11"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "1"))
                     (rule "leq_literals" (formula "13") (term "0"))
                     (rule "concrete_or_1" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "8") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "6"))
                     (rule "insert_constant_value" (formula "8") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "8") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "8") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "eqClose" (formula "8") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "concrete_and_3" (formula "8") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "8") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "8") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "eqClose" (formula "8") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "concrete_and_3" (formula "8") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "8") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "eqClose" (formula "8") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "concrete_and_3" (formula "8") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "expand_inInt" (formula "8") (term "1,1"))
                     (rule "expand_inInt" (formula "8") (term "0,1"))
                     (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "8") (term "1,0,1,1"))
                     (rule "replace_int_MIN" (formula "8") (term "0,1,1,1"))
                     (rule "replace_int_MAX" (formula "8") (term "1,0,0,1"))
                     (rule "replace_int_MIN" (formula "8") (term "0,1,0,1"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "notLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "notLeft" (formula "8"))
                     (rule "close" (formula "31") (ifseqformula "3"))
                  )
                  (branch "Index Out of Bounds (tab != null, but i Out of Bounds!)"
                     (rule "false_right" (formula "21"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "simplifyUpdate2" (formula "1") (term "1"))
                     (rule "applyOnRigidFormula" (formula "19"))
                     (rule "applyOnPV" (formula "19") (term "0"))
                     (rule "simplifyUpdate1" (formula "19") (term "1"))
                     (rule "eqClose" (formula "19"))
                     (rule "closeTrue" (formula "19"))
                  )
                  (branch "Array Store Exception (incompatible dynamic element type of tab and null)"
                     (rule "false_right" (formula "21"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "simplifyUpdate2" (formula "2"))
                     (rule "andLeft" (formula "1"))
                     (rule "simplifyUpdate2" (formula "2"))
                     (rule "notLeft" (formula "3"))
                     (rule "andLeft" (formula "1"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "2"))
                     (rule "applyOnPV" (formula "2") (term "0"))
                     (rule "simplifyUpdate1" (formula "2") (term "1"))
                     (rule "applyOnRigidFormula" (formula "20"))
                     (rule "simplifyUpdate1" (formula "20") (term "1"))
                     (rule "applyOnPV" (formula "20") (term "0"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "simplifyUpdate1" (formula "1") (term "0"))
                     (rule "simplifyUpdate1" (formula "1") (term "1"))
                     (rule "applyOnPV" (formula "1") (term "0"))
                     (rule "applyOnRigidFormula" (formula "19"))
                     (rule "simplifyUpdate1" (formula "19") (term "1"))
                     (rule "applyOnPV" (formula "19") (term "0"))
                     (rule "eqClose" (formula "19"))
                     (rule "closeTrue" (formula "19"))
                  )
               )
               (branch "if x_5 false"
                  (rule "false_to_not_true" (formula "1") (term "1"))
                  (rule "simplifyUpdate2" (formula "20"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "17"))
                  (rule "applyOnPV" (formula "17") (term "0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1"))
                  (rule "ifthenelse_concrete3" (formula "17"))
                  (rule "boolean_not_equal_2" (formula "17") (term "1"))
                  (rule "concrete_or_4" (formula "17"))
                  (rule "inEqSimp_geqRight" (formula "17"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                  (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "13"))
                  (rule "inEqSimp_homoInEq1" (formula "14"))
                  (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                  (rule "add_literals" (formula "14") (term "1,0"))
                  (rule "times_zero_1" (formula "14") (term "0"))
                  (rule "leq_literals" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "applyEqRigid" (formula "20") (term "1,0,1,0,1,1,0,0") (ifseqformula "13"))
                  (rule "polySimp_pullOutFactor2b" (formula "20") (term "0,1,0,1,1,0,0"))
                  (rule "add_literals" (formula "20") (term "1,1,0,1,0,1,1,0,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0,1,0,1,1,0,0"))
                  (rule "add_zero_right" (formula "20") (term "0,1,0,1,1,0,0"))
                  (rule "applyEq" (formula "10") (term "0") (ifseqformula "13"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,0"))
                  (rule "times_zero_1" (formula "1") (term "0"))
                  (rule "qeq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEq" (formula "9") (term "0") (ifseqformula "11"))
                  (rule "mod_axiom" (formula "17") (term "1,0,1,1,0,0"))
                  (rule "div_literals" (formula "17") (term "0,0,1,1,0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,1,0,0"))
                  (rule "times_zero_2" (formula "17") (term "1,1,0,1,1,0,0"))
                  (rule "add_zero_right" (formula "17") (term "1,0,1,1,0,0"))
                  (rule "add_literals" (formula "17") (term "0,1,1,0,0"))
                  (rule "tryEmpty" (formula "17") (term "1"))
                  (rule "methodCallEmpty" (formula "17") (term "1"))
                  (rule "emptyModality" (formula "17") (term "1"))
                  (rule "applyOnRigidFormula" (formula "17"))
                  (rule "simplifyUpdate2" (formula "17") (term "1"))
                  (rule "simplifyUpdate2" (formula "17") (term "0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,1"))
                  (rule "simplifyUpdate2" (formula "17") (term "1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,0"))
                  (rule "simplifyUpdate2" (formula "17") (term "1,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,1"))
                  (rule "simplifyUpdate2" (formula "17") (term "1,1,1"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,0"))
                  (rule "applyOnPV" (formula "17") (term "0,0,0"))
                  (rule "boolean_not_equal_2" (formula "17") (term "0,0"))
                  (rule "concrete_impl_2" (formula "17") (term "0"))
                  (rule "concrete_and_1" (formula "17"))
                  (rule "impRight" (formula "17"))
                  (rule "notLeft" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "18") (term "0"))
                  (rule "simplifyUpdate2" (formula "18") (term "0,0"))
                  (rule "simplifyUpdate2" (formula "18") (term "1,0"))
                  (rule "applyOnRigidFormula" (formula "18") (term "1"))
                  (rule "simplifyUpdate1" (formula "18") (term "1,1"))
                  (rule "simplifyUpdate1" (formula "18") (term "0,1"))
                  (rule "applyOnPV" (formula "18") (term "1,1"))
                  (rule "applyOnRigidFormula" (formula "15"))
                  (rule "simplifyUpdate1" (formula "15") (term "1"))
                  (rule "applyOnPV" (formula "15") (term "0"))
                  (rule "boolean_not_equal_2" (formula "15"))
                  (rule "false_right" (formula "15"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,0,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "17") (term "0,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,0,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,0,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0,0"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,0,0,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,1,0"))
                  (rule "applyOnRigidTerm" (formula "17") (term "1,0,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,1,0,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,1,0,0"))
                  (rule "simplifyUpdate2" (formula "17") (term "1,0,1,0,0"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,0,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,0,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,1,0,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,1,0,0,0"))
                  (rule "applyOnPV" (formula "17") (term "1,1,0,0,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,0,0,0"))
                  (rule "applyOnPV" (formula "17") (term "0,0,0,0,0"))
                  (rule "replace_known_left" (formula "17") (term "0,0,0,0") (ifseqformula "8"))
                  (rule "concrete_and_1" (formula "17") (term "0,0,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0,1,0"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,0,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "17") (term "0,1,0,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,0,1,0,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,1,0,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0,1,0,0"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,0,0,1,0,0"))
                  (rule "applyOnRigidTerm" (formula "17") (term "0,0,0,0"))
                  (rule "applyOnPV" (formula "17") (term "0,0,0,0,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,1,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,1,0,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "17") (term "0,0,1,0,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,0,0,1,0,1"))
                  (rule "applyOnRigidTerm" (formula "17") (term "1,0,1,0,1"))
                  (rule "applyOnPV" (formula "17") (term "0,1,0,1,0,1"))
                  (rule "polySimp_addComm1" (formula "17") (term "0,1,0,1"))
                  (rule "applyOnRigidTerm" (formula "17") (term "0,1,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,0,1,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0,1,0,0"))
                  (rule "applyOnPV" (formula "17") (term "0,0,1,0,1,0,0"))
                  (rule "applyOnPV" (formula "17") (term "1,0,1,0,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "applyOnPV" (formula "17") (term "1,1,0,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,1,0,0,1,0,0"))
                  (rule "applyOnRigidTerm" (formula "17") (term "1,1,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,1,1,0,0,1,0"))
                  (rule "applyOnPV" (formula "17") (term "0,1,1,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "2,1,1,0,0,1,0"))
                  (rule "eqSymm" (formula "17") (term "1,0,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,0,0,0,1,0"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,1,0,0,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,0,0,0,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "17") (term "1,0,1,0,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,1,0,1,0,1"))
                  (rule "applyOnPV" (formula "17") (term "0,1,0,1,0,1"))
                  (rule "polySimp_addComm1" (formula "17") (term "0,1,0,1"))
                  (rule "applyOnRigidTerm" (formula "17") (term "1,1,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,1,1,0,0,1,0"))
                  (rule "applyOnPV" (formula "17") (term "0,1,1,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "2,1,1,0,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,1,0,0,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "17") (term "1,0,0,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,1,0,0,0,0,1,0"))
                  (rule "applyOnPV" (formula "17") (term "0,1,0,0,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "2,1,0,0,0,0,1,0"))
                  (rule "precOfInt" (formula "17") (term "1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,1,1,0,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,1,1,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,0,0,0,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "17") (term "0,0,1,1,0,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "2,0,0,1,1,0,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,0,1,1,0,0,0,1,0"))
                  (rule "applyOnPV" (formula "17") (term "0,0,0,1,1,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "1,1"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,1,1"))
                  (rule "add_zero_right" (formula "17") (term "0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,1,1"))
                  (rule "add_literals" (formula "17") (term "0,0,1,1"))
                  (rule "inEqSimp_homoInEq0" (formula "17") (term "0,1"))
                  (rule "times_zero_2" (formula "17") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "17") (term "0,0,1"))
                  (rule "applyEq" (formula "17") (term "1,0,1,0,1,1") (ifseqformula "10"))
                  (rule "polySimp_pullOutFactor2b" (formula "17") (term "0,1,0,1,1"))
                  (rule "add_literals" (formula "17") (term "1,1,0,1,0,1,1"))
                  (rule "times_zero_1" (formula "17") (term "1,0,1,0,1,1"))
                  (rule "add_literals" (formula "17") (term "0,1,0,1,1"))
                  (rule "applyEqRigid" (formula "17") (term "0,0,0,0") (ifseqformula "10"))
                  (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "17") (term "0,0,0,0"))
                  (rule "add_literals" (formula "17") (term "1,0,0,0,0"))
                  (rule "times_zero_1" (formula "17") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "17") (term "0,0,0"))
                  (rule "concrete_and_1" (formula "17") (term "0,0"))
                  (rule "applyEqRigid" (formula "17") (term "1,0,1,0,0,1") (ifseqformula "10"))
                  (rule "polySimp_pullOutFactor2b" (formula "17") (term "0,1,0,0,1"))
                  (rule "add_literals" (formula "17") (term "1,1,0,1,0,0,1"))
                  (rule "times_zero_1" (formula "17") (term "1,0,1,0,0,1"))
                  (rule "add_literals" (formula "17") (term "0,1,0,0,1"))
                  (rule "applyEq" (formula "17") (term "1,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "mod_axiom" (formula "17") (term "1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,1"))
                  (rule "div_literals" (formula "17") (term "0,1,1,0,1,1"))
                  (rule "mul_literals" (formula "17") (term "1,1,0,1,1"))
                  (rule "add_zero_right" (formula "17") (term "1,0,1,1"))
                  (rule "add_literals" (formula "17") (term "0,1,1"))
                  (rule "leq_literals" (formula "17") (term "1,1"))
                  (rule "concrete_and_4" (formula "17") (term "1"))
                  (rule "concrete_and_4" (formula "17"))
                  (rule "false_right" (formula "17"))
                  (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "6") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "4"))
                  (rule "insert_constant_value" (formula "6") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "insert_constant_value" (formula "6") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "insert_constant_value" (formula "6") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "eqClose" (formula "6") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "concrete_and_3" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "insert_constant_value" (formula "6") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "insert_constant_value" (formula "6") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "eqClose" (formula "6") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "concrete_and_3" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "insert_constant_value" (formula "6") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "eqClose" (formula "6") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "concrete_and_3" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "expand_inInt" (formula "6") (term "0,1"))
                  (rule "expand_inInt" (formula "6") (term "1,1"))
                  (rule "mul_literals" (formula "6") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replace_int_MAX" (formula "6") (term "1,0,0,1"))
                  (rule "replace_int_MIN" (formula "6") (term "0,1,0,1"))
                  (rule "replace_int_MAX" (formula "6") (term "1,0,1,1"))
                  (rule "replace_int_MIN" (formula "6") (term "0,1,1,1"))
                  (rule "andLeft" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "andLeft" (formula "8"))
                  (rule "andLeft" (formula "6"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "notLeft" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "notLeft" (formula "6"))
                  (rule "close" (formula "29") (ifseqformula "1"))
               )
            )
            (branch "Null Reference (tab = null)"
               (rule "false_right" (formula "17"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "applyOnPV" (formula "1") (term "0"))
               (rule "simplifyUpdate1" (formula "1") (term "1"))
               (rule "eqClose" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "6") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "4"))
               (rule "insert_constant_value" (formula "6") (term "1,1,0,0,0,0,0,0,0"))
               (rule "insert_constant_value" (formula "6") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "insert_constant_value" (formula "6") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "insert_constant_value" (formula "6") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "eqClose" (formula "6") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "concrete_and_3" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "insert_constant_value" (formula "6") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "eqClose" (formula "6") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "concrete_and_3" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "insert_constant_value" (formula "6") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "eqClose" (formula "6") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "concrete_and_3" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "expand_inInt" (formula "6") (term "1,1"))
               (rule "expand_inInt" (formula "6") (term "0,1"))
               (rule "mul_literals" (formula "6") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "replace_int_MIN" (formula "6") (term "0,1,1,1"))
               (rule "replace_int_MAX" (formula "6") (term "1,0,1,1"))
               (rule "replace_int_MIN" (formula "6") (term "0,1,0,1"))
               (rule "replace_int_MAX" (formula "6") (term "1,0,0,1"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "notLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "notLeft" (formula "6"))
               (rule "close" (formula "28") (ifseqformula "1"))
            )
         )
      )
      (branch "Use Case"
         (rule "false_to_not_true" (formula "11") (term "0,0,1,1"))
         (rule "simplifyUpdate2" (formula "9"))
         (rule "expand_inInt" (formula "9") (term "1,1,1"))
         (rule "replace_int_MIN" (formula "9") (term "0,1,1,1,1"))
         (rule "replace_int_MAX" (formula "9") (term "1,0,1,1,1"))
         (rule "notLeft" (formula "6"))
         (rule "sequentialToParallel2" (formula "11"))
         (rule "simplifyUpdate2" (formula "11"))
         (rule "simplifyUpdate3" (formula "11") (term "1,0"))
         (rule "applyOnParallel" (formula "11") (term "1,0"))
         (rule "simplifyUpdate3" (formula "11") (term "0,1,0"))
         (rule "applyOnElementary" (formula "11") (term "1,1,0"))
         (rule "sequentialToParallel2" (formula "8"))
         (rule "simplifyUpdate2" (formula "8"))
         (rule "simplifyUpdate3" (formula "8") (term "1,0"))
         (rule "andLeft" (formula "8"))
         (rule "simplifyUpdate2" (formula "9"))
         (rule "simplifyUpdate3" (formula "9") (term "0"))
         (rule "andLeft" (formula "8"))
         (rule "simplifyUpdate2" (formula "8"))
         (rule "simplifyUpdate3" (formula "8") (term "1,0"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "8"))
         (rule "simplifyUpdate2" (formula "8"))
         (rule "applyOnParallel" (formula "10") (term "1,0"))
         (rule "simplifyUpdate3" (formula "10") (term "0,1,0"))
         (rule "applyOnElementary" (formula "10") (term "1,1,0"))
         (rule "applyOnRigidTerm" (formula "15") (term "0,1,1,0"))
         (rule "simplifyUpdate1" (formula "15") (term "2,0,1,1,0"))
         (rule "applyOnPV" (formula "15") (term "0,0,1,1,0"))
         (rule "applyOnRigidFormula" (formula "11"))
         (rule "simplifyUpdate1" (formula "11") (term "1"))
         (rule "applyOnPV" (formula "11") (term "0"))
         (rule "applyOnRigidFormula" (formula "12"))
         (rule "simplifyUpdate1" (formula "12") (term "0"))
         (rule "applyOnPV" (formula "12") (term "1"))
         (rule "applyOnRigidFormula" (formula "9"))
         (rule "simplifyUpdate1" (formula "9") (term "0"))
         (rule "simplifyUpdate1" (formula "9") (term "1"))
         (rule "applyOnPV" (formula "9") (term "0"))
         (rule "applyOnRigidFormula" (formula "8"))
         (rule "applyOnPV" (formula "8") (term "1"))
         (rule "simplifyUpdate1" (formula "8") (term "0"))
         (rule "applyOnRigidFormula" (formula "10"))
         (rule "applyOnRigidTerm" (formula "15") (term "1,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "9") (term "1"))
         (rule "applyOnPV" (formula "9") (term "0,1"))
         (rule "applyOnRigidTerm" (formula "10") (term "0,1,1,0,0"))
         (rule "simplifyUpdate1" (formula "10") (term "2,0,1,1,0,0"))
         (rule "applyOnPV" (formula "10") (term "0,0,1,1,0,0"))
         (rule "applyOnRigidTerm" (formula "15") (term "0,1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0,1,1,0"))
         (rule "applyOnPV" (formula "15") (term "0,0,1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "10") (term "1,0,1,1,0,0"))
         (rule "dismissNonSelectedField" (formula "15") (term "0,1,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "10") (term "0,1,0,1,1,0,0"))
         (rule "simplifyUpdate1" (formula "10") (term "1,0,1,0,1,1,0,0"))
         (rule "simplifyUpdate1" (formula "10") (term "2,0,1,0,1,1,0,0"))
         (rule "applyOnPV" (formula "10") (term "0,0,1,0,1,1,0,0"))
         (rule "applyOnRigidFormula" (formula "10") (term "0"))
         (rule "simplifyUpdate2" (formula "10") (term "1,0"))
         (rule "simplifyUpdate2" (formula "10") (term "0,0"))
         (rule "applyOnRigidFormula" (formula "10") (term "1,0"))
         (rule "simplifyUpdate1" (formula "10") (term "1,1,0"))
         (rule "applyOnRigidFormula" (formula "10") (term "0,0"))
         (rule "simplifyUpdate2" (formula "10") (term "0,0,0"))
         (rule "applyOnRigidTerm" (formula "10") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "10") (term "1,0,1,0"))
         (rule "simplifyUpdate1" (formula "10") (term "2,0,1,0"))
         (rule "simplifyUpdate1" (formula "10") (term "0,0,1,0"))
         (rule "applyOnPV" (formula "10") (term "1,0,1,0"))
         (rule "applyOnPV" (formula "10") (term "0,0,1,0"))
         (rule "applyOnRigidFormula" (formula "10") (term "1,0,0"))
         (rule "simplifyUpdate1" (formula "10") (term "0,1,0,0"))
         (rule "applyOnPV" (formula "10") (term "1,1,0,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "12"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "8"))
         (rule "inEqSimp_commuteLeq" (formula "9"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "b_1"))
         (rule "mod_axiom" (formula "10") (term "1,3,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,3,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "3,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,3,0,0,0,1,0"))
         (rule "add_literals" (formula "10") (term "0,0,3,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
         (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "8"))
         (rule "leq_literals" (formula "12") (term "0"))
         (rule "concrete_or_1" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "polyDiv_pullOut" (formula "10") (term "0,1,3,0,0,0,1,0") (inst "polyDivCoeff=Z(1(#))"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,2,0,1,3,0,0,0,1,0"))
         (rule "equal_literals" (formula "10") (term "0,0,1,3,0,0,0,1,0"))
         (rule "ifthenelse_false" (formula "10") (term "0,1,3,0,0,0,1,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,0,1,3,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,3,0,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "10") (term "1,1,3,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "10") (term "0,1,1,1,3,0,0,0,1,0"))
         (rule "add_literals" (formula "10") (term "0,0,1,1,1,3,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,3,0,0,0,1,0"))
         (rule "mul_literals" (formula "10") (term "0,1,3,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "3,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "10") (term "0,3,0,0,0,1,0"))
         (rule "add_literals" (formula "10") (term "0,0,3,0,0,0,1,0"))
         (rule "polyMod_pullOut" (formula "14") (term "1,3,0,0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,3,0,0,1,1,0"))
         (rule "mul_literals" (formula "14") (term "1,0,1,3,0,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "14") (term "0,1,3,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "0,0,1,3,0,0,1,1,0"))
         (rule "nnf_imp2or" (formula "10") (term "0"))
         (rule "nnf_notAnd" (formula "10") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
         (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
         (rule "commute_or_2" (formula "10") (term "0"))
         (rule "commute_or" (formula "10") (term "0,0"))
         (rule "compound_less_than_comparison_2" (formula "14") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "14") (term "1"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_3"))
         (rule "assignment" (formula "14") (term "1"))
         (rule "sequentialToParallel2" (formula "14"))
         (rule "simplifyUpdate2" (formula "14"))
         (rule "simplifyUpdate3" (formula "14") (term "1,0"))
         (rule "applyOnElementary" (formula "14") (term "1,0"))
         (rule "applyOnPV" (formula "14") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "14") (term "1"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_4"))
         (rule "assignment_read_length" (formula "14"))
         (branch "Normal Execution (tab != null)"
            (rule "sequentialToParallel2" (formula "14"))
            (rule "simplifyUpdate2" (formula "14"))
            (rule "simplifyUpdate3" (formula "14") (term "1,0"))
            (rule "applyOnElementary" (formula "14") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
            (rule "applyOnPV" (formula "14") (term "0,0,1,0"))
            (rule "less_than_comparison_simple" (formula "14") (term "1"))
            (rule "sequentialToParallel2" (formula "14"))
            (rule "simplifyUpdate2" (formula "14"))
            (rule "simplifyUpdate3" (formula "14") (term "1,0"))
            (rule "applyOnElementary" (formula "14") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
            (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
            (rule "applyOnRigidFormula" (formula "14") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "14") (term "1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "14") (term "0,0,0,1,0"))
            (rule "applyOnPV" (formula "14") (term "1,0,0,1,0"))
            (rule "applyOnPV" (formula "14") (term "0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "14") (term "0,0,0,1,0"))
            (rule "methodCallEmpty" (formula "14") (term "1"))
            (rule "emptyModality" (formula "14") (term "1"))
            (rule "impRight" (formula "14"))
            (rule "simplifyUpdate2" (formula "15"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "applyOnRigidFormula" (formula "12"))
            (rule "simplifyUpdate1" (formula "12") (term "1"))
            (rule "applyOnPV" (formula "12") (term "0"))
            (rule "ifthenelse_concrete3" (formula "12"))
            (rule "boolean_not_equal_2" (formula "12") (term "1"))
            (rule "concrete_or_4" (formula "12"))
            (rule "inEqSimp_geqRight" (formula "12"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "assignment_write_attribute_this" (formula "15"))
            (rule "sequentialToParallel2" (formula "15"))
            (rule "simplifyUpdate2" (formula "15"))
            (rule "simplifyUpdate3" (formula "15") (term "1,0"))
            (rule "applyOnElementary" (formula "15") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
            (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "15") (term "3,0,1,0"))
            (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
            (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
            (rule "polySimp_elimOne" (formula "1") (term "1"))
            (rule "inEqSimp_antiSymm" (formula "10") (ifseqformula "1"))
            (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
            (rule "inEqSimp_homoInEq1" (formula "11"))
            (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
            (rule "add_literals" (formula "11") (term "1,0"))
            (rule "times_zero_1" (formula "11") (term "0"))
            (rule "leq_literals" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "10"))
            (rule "inEqSimp_homoInEq0" (formula "1"))
            (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,0"))
            (rule "times_zero_1" (formula "1") (term "0"))
            (rule "qeq_literals" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "methodCallEmpty" (formula "14") (term "1"))
            (rule "tryEmpty" (formula "14") (term "1"))
            (rule "emptyModality" (formula "14") (term "1"))
            (rule "applyOnRigidFormula" (formula "14"))
            (rule "applyOnRigidFormula" (formula "14") (term "1"))
            (rule "simplifyUpdate2" (formula "14") (term "0,1"))
            (rule "applyOnRigidFormula" (formula "14") (term "0"))
            (rule "simplifyUpdate2" (formula "14") (term "0,0"))
            (rule "simplifyUpdate2" (formula "14") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "14") (term "1,1"))
            (rule "simplifyUpdate2" (formula "14") (term "0,1,1"))
            (rule "simplifyUpdate2" (formula "14") (term "1,1,1"))
            (rule "applyOnRigidFormula" (formula "14") (term "0,1"))
            (rule "applyOnRigidFormula" (formula "14") (term "0,0"))
            (rule "simplifyUpdate1" (formula "14") (term "1,0,0"))
            (rule "applyOnPV" (formula "14") (term "0,0,0"))
            (rule "eqClose" (formula "14") (term "0,0"))
            (rule "concrete_impl_1" (formula "14") (term "0"))
            (rule "applyOnRigidFormula" (formula "14") (term "0,1,1"))
            (rule "simplifyUpdate1" (formula "14") (term "1,0,1,1"))
            (rule "applyOnPV" (formula "14") (term "0,0,1,1"))
            (rule "applyOnRigidFormula" (formula "14") (term "1,1,1"))
            (rule "applyOnRigidFormula" (formula "14") (term "0,0,1"))
            (rule "simplifyUpdate1" (formula "14") (term "1,0,0,1"))
            (rule "applyOnPV" (formula "14") (term "0,0,0,1"))
            (rule "eqClose" (formula "14") (term "0,0,1"))
            (rule "concrete_not_1" (formula "14") (term "0,1"))
            (rule "concrete_impl_2" (formula "14") (term "1"))
            (rule "concrete_and_3" (formula "14"))
            (rule "applyOnRigidFormula" (formula "14"))
            (rule "simplifyUpdate1" (formula "14") (term "1"))
            (rule "applyOnPV" (formula "14") (term "0"))
            (rule "mod_axiom" (formula "14") (term "1,3,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,3,0,0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "3,0,0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,3,0,0,0"))
            (rule "add_literals" (formula "14") (term "0,0,3,0,0,0"))
            (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "6") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "4"))
            (rule "insert_constant_value" (formula "6") (term "1,1,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "6") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "6") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "eqClose" (formula "6") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "concrete_and_3" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "6") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "6") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "eqClose" (formula "6") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "concrete_and_3" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "6") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "eqClose" (formula "6") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "concrete_and_3" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "expand_inInt" (formula "6") (term "0,1"))
            (rule "expand_inInt" (formula "6") (term "1,1"))
            (rule "mul_literals" (formula "6") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "6") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "replace_int_MAX" (formula "6") (term "1,0,0,1"))
            (rule "replace_int_MIN" (formula "6") (term "0,1,0,1"))
            (rule "replace_int_MAX" (formula "6") (term "1,0,1,1"))
            (rule "replace_int_MIN" (formula "6") (term "0,1,1,1"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "notLeft" (formula "6"))
            (rule "exLeft" (formula "13") (inst "sk=i_1_0"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "13"))
            (rule "exLeft" (formula "12") (inst "sk=i_2_0"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "12"))
            (rule "eqSymm" (formula "11"))
            (rule "eqSymm" (formula "9") (term "1,0,1,0,1,0"))
            (rule "eqSymm" (formula "9") (term "1,1,0,1,0"))
            (rule "eqSymm" (formula "14"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "30"))
            (rule "concrete_or_2" (formula "1"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,2,0,1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,2,0,0,1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,2,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,2,0,0,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "0,2,0,1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "0,2,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "0,2,0,0,1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "0,2,0,0,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "0,2,0,0,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "0,2,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,2,0,0,0,2,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "0,2,1,1,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "0,2,0,1,0,1,0,1,0"))
            (rule "polySimp_addComm0" (formula "8") (term "0,2,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "10"))
            (rule "mul_literals" (formula "10") (term "1,0,0"))
            (rule "add_literals" (formula "10") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "16"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "13"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "13") (term "0"))
            (rule "ifthenelse_negated" (formula "11") (term "2,0"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_mulAssoc" (formula "19") (term "1,0,0,1,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,1,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1,1,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "22"))
            (rule "inEqSimp_gtToGeq" (formula "18") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "24"))
            (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
            (rule "inEqSimp_commuteGeq" (formula "7"))
            (rule "inEqSimp_commuteLeq" (formula "6"))
            (rule "inEqSimp_commuteLeq" (formula "15"))
            (rule "inEqSimp_commuteLeq" (formula "12"))
            (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "19") (term "0,1,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,1,0"))
            (rule "applyEq" (formula "18") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "18") (term "1,0,1,0,1,0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "19") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "27"))
            (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "27"))
            (rule "applyEq" (formula "19") (term "1,0,1,0,1,0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "7") (term "0") (ifseqformula "14"))
            (rule "applyEq" (formula "27") (term "0") (ifseqformula "14"))
            (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "6") (term "0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "8") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "9") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "9") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "14"))
            (rule "applyEqRigid" (formula "18") (term "1,0,1,0,1,0,1,0") (ifseqformula "27"))
            (rule "applyEq" (formula "19") (term "1,0,1,0,1,0,1,0") (ifseqformula "27"))
            (rule "applyEqRigid" (formula "18") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "27"))
            (rule "applyEq" (formula "14") (term "1") (ifseqformula "27"))
            (rule "applyEq" (formula "6") (term "0") (ifseqformula "27"))
            (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "27"))
            (rule "polySimp_addComm1" (formula "16") (term "0"))
            (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "27"))
            (rule "polySimp_addComm1" (formula "13") (term "0"))
            (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "27"))
            (rule "applyEq" (formula "8") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
            (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
            (rule "applyEqRigid" (formula "9") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
            (rule "applyEq" (formula "9") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "27"))
            (rule "applyEqRigid" (formula "19") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "27"))
            (rule "applyEqRigid" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10"))
            (rule "mul_literals" (formula "10") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,1,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "19") (term "0,1,1,1,0,0,1,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "18") (term "0,1,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "19") (term "0,1,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16"))
            (rule "polySimp_mulComm0" (formula "16") (term "1"))
            (rule "polySimp_rightDist" (formula "16") (term "1"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
            (rule "mul_literals" (formula "16") (term "0,1"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13"))
            (rule "polySimp_mulComm0" (formula "13") (term "1"))
            (rule "polySimp_rightDist" (formula "13") (term "1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
            (rule "mul_literals" (formula "13") (term "0,1"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0"))
            (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
            (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "10"))
            (rule "leq_literals" (formula "23") (term "0"))
            (rule "concrete_or_1" (formula "23"))
            (rule "true_left" (formula "23"))
            (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "7"))
            (rule "leq_literals" (formula "28") (term "0"))
            (rule "concrete_or_1" (formula "28"))
            (rule "true_left" (formula "28"))
            (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "6"))
            (rule "leq_literals" (formula "25") (term "0"))
            (rule "concrete_or_1" (formula "25"))
            (rule "true_left" (formula "25"))
            (rule "elimGcdLeq" (formula "19") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
            (rule "sub_literals" (formula "19") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "19") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1,1,0,0,1,1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,1,0,1,1,0,0,1,1,0"))
            (rule "add_literals" (formula "19") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,1,0,1,1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "19") (term "0,1,0,1,1,0,0,1,1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,0,1,1,0,0,1,1,0"))
            (rule "add_literals" (formula "19") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "19") (term "0,0,0,1,1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "0,0,1,0,1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "19") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,1,1,0,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,1,1,0,0,1,1,0"))
            (rule "add_literals" (formula "19") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,1,0,1,1,0,0,1,1,0"))
            (rule "add_literals" (formula "19") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,1,0,1,1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "19") (term "0,1,0,1,1,0,0,1,1,0"))
            (rule "qeq_literals" (formula "19") (term "1,0,1,1,0,0,1,1,0"))
            (rule "concrete_and_3" (formula "19") (term "0,1,1,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,1,0,0,1,1,0"))
            (rule "add_literals" (formula "19") (term "0,0,0,0,1,1,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1,0,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,1,0,0,1,1,0"))
            (rule "add_literals" (formula "19") (term "0,0,0,0,1,1,0,0,1,1,0"))
            (rule "add_zero_left" (formula "19") (term "0,0,0,1,1,0,0,1,1,0"))
            (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0,1,1,0,0,1,1,0"))
            (rule "add_literals" (formula "19") (term "1,0,0,1,1,0,0,1,1,0"))
            (rule "times_zero_1" (formula "19") (term "0,0,1,1,0,0,1,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,1,0,0,1,1,0"))
            (rule "ifthenelse_true_for" (formula "19") (term "1,1,0,0,1,1,0"))
            (rule "elimGcdGeq" (formula "19") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
            (rule "times_zero_1" (formula "19") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,0,0,0,0,0,1,0,0,1,1,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,0,1,0,0,1,1,0"))
            (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
            (rule "polySimp_pullOutFactor0" (formula "19") (term "0,1,0,0,1,0,0,1,1,0"))
            (rule "add_literals" (formula "19") (term "1,0,1,0,0,1,0,0,1,1,0"))
            (rule "times_zero_1" (formula "19") (term "0,1,0,0,1,0,0,1,1,0"))
            (rule "leq_literals" (formula "19") (term "1,0,0,1,0,0,1,1,0"))
            (rule "concrete_and_3" (formula "19") (term "0,0,1,0,0,1,1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,0,1,0,0,1,1,0"))
            (rule "add_literals" (formula "19") (term "1,1,0,0,0,1,0,0,1,1,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,0,1,1,0"))
            (rule "qeq_literals" (formula "19") (term "0,0,1,0,0,1,1,0"))
            (rule "ifthenelse_true_for" (formula "19") (term "0,1,0,0,1,1,0"))
            (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
            (rule "times_zero_1" (formula "15") (term "0,0"))
            (rule "add_zero_left" (formula "15") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15"))
            (rule "mul_literals" (formula "15") (term "1"))
            (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
            (rule "times_zero_1" (formula "12") (term "0,0"))
            (rule "add_zero_left" (formula "12") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12"))
            (rule "mul_literals" (formula "12") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "6"))
            (rule "leq_literals" (formula "12") (term "0"))
            (rule "concrete_or_1" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "nnf_imp2or" (formula "8") (term "1,0"))
            (rule "nnf_imp2or" (formula "9") (term "1,0,1,0"))
            (rule "nnf_imp2or" (formula "19") (term "1,0"))
            (rule "nnf_imp2or" (formula "20") (term "0"))
            (rule "nnf_imp2or" (formula "8") (term "0"))
            (rule "nnf_imp2or" (formula "9") (term "0"))
            (rule "nnf_imp2or" (formula "19") (term "0"))
            (rule "nnf_imp2or" (formula "20") (term "1,0"))
            (rule "nnf_notAnd" (formula "20") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
            (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
            (rule "mul_literals" (formula "20") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "8") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
            (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
            (rule "mul_literals" (formula "8") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "9") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
            (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
            (rule "mul_literals" (formula "9") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "19") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
            (rule "mul_literals" (formula "19") (term "1,0,0,0"))
            (rule "nnf_imp2or" (formula "9") (term "0,1,0"))
            (rule "nnf_notAnd" (formula "19") (term "0,1,0"))
            (rule "double_not" (formula "19") (term "0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "19") (term "1,0,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,1,0"))
            (rule "add_literals" (formula "19") (term "0,0,0,1,0,1,0"))
            (rule "add_zero_left" (formula "19") (term "0,0,1,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,0"))
            (rule "nnf_notAnd" (formula "20") (term "0,1,0"))
            (rule "double_not" (formula "20") (term "0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "20") (term "1,0,1,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0,1,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,1,0"))
            (rule "add_literals" (formula "20") (term "0,0,0,1,0,1,0"))
            (rule "add_zero_left" (formula "20") (term "0,0,1,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,0"))
            (rule "nnf_imp2or" (formula "19") (term "0,1,1,0"))
            (rule "nnf_imp2or" (formula "20") (term "0,1,1,0"))
            (rule "div_axiom" (formula "27") (term "0,1,3,0,0,0,0,0,0") (inst "quotient=quotient_0"))
            (rule "mul_literals" (formula "27") (term "1,1,1,1,1"))
            (rule "qeq_literals" (formula "27") (term "0,1,1"))
            (rule "ifthenelse_true_for" (formula "27") (term "1,1"))
            (rule "equal_literals" (formula "27") (term "0"))
            (rule "concrete_or_2" (formula "27"))
            (rule "andLeft" (formula "27"))
            (rule "andLeft" (formula "27"))
            (rule "polySimp_addAssoc" (formula "29") (term "0,1"))
            (rule "add_literals" (formula "29") (term "0,0,1"))
            (rule "polySimp_addComm1" (formula "29") (term "1"))
            (rule "add_literals" (formula "29") (term "0,1"))
            (rule "inEqSimp_homoInEq0" (formula "28"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
            (rule "polySimp_addComm1" (formula "28") (term "0"))
            (rule "inEqSimp_homoInEq1" (formula "29"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
            (rule "polySimp_addComm1" (formula "29") (term "0"))
            (rule "applyEq" (formula "34") (term "0,1,3,0,0,0") (ifseqformula "27"))
            (rule "polySimp_addComm1" (formula "34") (term "3,0,0,0"))
            (rule "applyEq" (formula "30") (term "0,1,3,0,0,0,0,0,0") (ifseqformula "27"))
            (rule "polySimp_addComm1" (formula "30") (term "3,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "28"))
            (rule "polySimp_mulComm0" (formula "28") (term "1"))
            (rule "polySimp_rightDist" (formula "28") (term "1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
            (rule "mul_literals" (formula "28") (term "0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "29"))
            (rule "polySimp_mulComm0" (formula "29") (term "1"))
            (rule "polySimp_rightDist" (formula "29") (term "1"))
            (rule "mul_literals" (formula "29") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "29"))
            (rule "mul_literals" (formula "23") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "23") (term "0"))
            (rule "add_literals" (formula "23") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "23"))
            (rule "mul_literals" (formula "23") (term "1"))
            (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
            (rule "leq_literals" (formula "23") (term "0,0"))
            (rule "concrete_or_2" (formula "23") (term "0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0"))
            (rule "add_literals" (formula "23") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
            (rule "add_literals" (formula "23") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "23") (term "1,0,0"))
            (rule "add_zero_right" (formula "23") (term "0,0"))
            (rule "leq_literals" (formula "23") (term "0"))
            (rule "concrete_or_2" (formula "23"))
            (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "22"))
            (rule "polySimp_rightDist" (formula "29") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
            (rule "mul_literals" (formula "29") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "29") (term "0"))
            (rule "add_literals" (formula "29") (term "0,0"))
            (rule "add_zero_left" (formula "29") (term "0"))
            (rule "inEqSimp_invertInEq1" (formula "29"))
            (rule "times_zero_2" (formula "29") (term "1"))
            (rule "polySimp_mulLiterals" (formula "29") (term "0"))
            (rule "elimGcdLeq_antec" (formula "29") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0"))
            (rule "add_zero_right" (formula "29") (term "0,0,0,1,0"))
            (rule "leq_literals" (formula "29") (term "0,0"))
            (rule "concrete_or_2" (formula "29") (term "0"))
            (rule "neg_literal" (formula "29") (term "0,0,0,0,0"))
            (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
            (rule "add_literals" (formula "29") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "29") (term "1,0,0"))
            (rule "add_zero_right" (formula "29") (term "0,0"))
            (rule "qeq_literals" (formula "29") (term "0"))
            (rule "concrete_or_2" (formula "29"))
            (rule "nnf_notAnd" (formula "9") (term "0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,1,0"))
            (rule "nnf_notAnd" (formula "9") (term "0,1,0,1,0"))
            (rule "double_not" (formula "9") (term "0,0,1,0,1,0"))
            (rule "nnf_notAnd" (formula "19") (term "0,0,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,1,0"))
            (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1,1,0"))
            (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1,1,0"))
            (rule "nnf_notOr" (formula "20") (term "0,0,1,1,0"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "35"))
            (rule "concrete_or_2" (formula "1"))
            (rule "nnf_notAnd" (formula "21") (term "1,0,0,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "21") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "21") (term "0,1,0,0,1,1,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,1,0,0,1,1,0"))
            (rule "add_literals" (formula "21") (term "0,0,0,1,1,0,0,1,1,0"))
            (rule "add_zero_left" (formula "21") (term "0,0,1,1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "21") (term "0,1,0,0,1,1,0"))
            (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "21") (term "1,0,1,0,0,1,1,0"))
            (rule "nnf_notAnd" (formula "21") (term "0,0,0,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,1,1,0"))
            (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0,1,1,0"))
            (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0,1,1,0"))
            (rule "commute_or_2" (formula "9") (term "0"))
            (rule "jdiv_axiom" (formula "12") (term "1,0"))
            (rule "eqSymm" (formula "12"))
            (rule "inEqSimp_subsumption1" (formula "12") (term "0,0") (ifseqformula "7"))
            (rule "leq_literals" (formula "12") (term "0,0,0"))
            (rule "concrete_or_1" (formula "12") (term "0,0"))
            (rule "ifthenelse_true" (formula "12") (term "0"))
            (rule "eqSymm" (formula "12"))
            (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "12"))
            (rule "applyEqRigid" (formula "10") (term "1,1,0,0,1,0") (ifseqformula "12"))
            (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "12"))
            (rule "applyEqRigid" (formula "9") (term "1,1,0") (ifseqformula "12"))
            (rule "applyEqRigid" (formula "13") (term "1,0") (ifseqformula "12"))
            (rule "applyEqRigid" (formula "10") (term "1,1,0,0") (ifseqformula "12"))
            (rule "applyEqRigid" (formula "22") (term "1,1,0,0") (ifseqformula "12"))
            (rule "applyEqRigid" (formula "21") (term "1,1,0,0") (ifseqformula "12"))
            (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
            (rule "times_zero_1" (formula "18") (term "0,0"))
            (rule "add_zero_left" (formula "18") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
            (rule "mul_literals" (formula "18") (term "1"))
            (rule "arrayLengthNotNegative" (formula "16") (term "0"))
            (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
            (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "7"))
            (rule "leq_literals" (formula "16") (term "0"))
            (rule "concrete_or_1" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "arrayLengthIsAShort" (formula "16") (term "0"))
            (rule "expand_inShort" (formula "16"))
            (rule "replace_short_MIN" (formula "16") (term "0,1"))
            (rule "replace_short_MAX" (formula "16") (term "1,0"))
            (rule "andLeft" (formula "16"))
            (rule "inEqSimp_commuteLeq" (formula "17"))
            (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
            (rule "applyEq" (formula "16") (term "0") (ifseqformula "18"))
            (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "7"))
            (rule "leq_literals" (formula "17") (term "0"))
            (rule "concrete_or_1" (formula "17"))
            (rule "true_left" (formula "17"))
            (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "16"))
            (rule "leq_literals" (formula "8") (term "0"))
            (rule "concrete_or_1" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "commute_or" (formula "8") (term "0,0"))
            (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "38") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "5"))
            (rule "insert_constant_value" (formula "38") (term "1,1,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "38") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "38") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "38") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "eqClose" (formula "38") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "concrete_and_3" (formula "38") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "38") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "eqClose" (formula "38") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "concrete_and_3" (formula "38") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "38") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "eqClose" (formula "38") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "concrete_and_3" (formula "38") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "expand_inInt" (formula "38") (term "1,1"))
            (rule "expand_inInt" (formula "38") (term "0,1"))
            (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "replace_int_MIN" (formula "38") (term "0,1,1,1"))
            (rule "replace_int_MAX" (formula "38") (term "1,0,1,1"))
            (rule "replace_int_MIN" (formula "38") (term "0,1,0,1"))
            (rule "replace_int_MAX" (formula "38") (term "1,0,0,1"))
            (rule "eqSymm" (formula "38") (term "1,1,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "eqSymm" (formula "38") (term "1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "eqSymm" (formula "38") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "0,2,0,0,0,0,0,0,1,1,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "0,2,0,0,1,0,1,1,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,0,0,1,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "0,2,0,1,0,1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,1,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "0,2,0,1,1,0,1,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "0,2,0,0,1,0,1,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,1,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "0,2,0,0,0,0,1,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "0,2,0,0,0,0,0,0,1,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "0,2,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "0,2,0,1,1,0,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "0,2,0,0,0,0,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,1,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "0,1,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "0,2,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "0,2,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "0,2,0,0,0,2,0,1,0,0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "38") (term "0,2,0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "1,0,1,1,0,1,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,1,1,1,0,1,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "1,0,0,0,0,0,0,1,1,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,1,1,0,0,0,1,1,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "1,0,0,0,0,0,0,1,1,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "1,0,0,1,0,1,1,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "1,0,1,1,0,1,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "1,0,0,0,0,1,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,0,1,1,0,0,1,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,0,1,1,0,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,1,0,0,0,0,0,1,1,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,1,1,0,1,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "1,0,1,0,1,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,1,1,0,0,1,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,1,0,0,0,0,0,1,1,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,1,1,1,0,1,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,1,1,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,1,1,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,0,1,1,0,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "1,0,0,1,0,1,1,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "1,0,0,0,0,1,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "1,1,1,1"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,0,1,1"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,0,0,1"))
            (rule "dismissNonSelectedField" (formula "38") (term "1,1,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,1,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,1,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "1,0,0,0,2,0,1,0,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,0,1,0,1,0,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,1,1,0,1,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,0,0,0,0,0,1,1,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,0,0,0,0,0,1,1,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,0,1,0,1,1,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,1,1,0,1,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,0,0,0,1,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "1,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_mulAssoc" (formula "38") (term "1,0,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,1,0,1,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0,1,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,1,1,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,0,1,0,1,1,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,0,0,0,1,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "38") (term "0,0,1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "38") (term "0,0,0,2,0,1,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "38") (term "0,1,0,0,1,1,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,1,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "38") (term "0,1,0,1,0,1,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "38") (term "1,0,1,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,1,0,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "38") (term "0,1,0,1,0,1,0,0,0"))
            (rule "ifthenelse_negated" (formula "38") (term "2,0,1,0,0,0,0,0,0"))
            (rule "inEqSimp_commuteGeq" (formula "38") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "38") (term "1,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "38") (term "1,1,1"))
            (rule "inEqSimp_commuteLeq" (formula "38") (term "1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,0,1,1,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,1,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,1,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,1,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,1,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,1,0,1,0,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,1,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,1,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,1,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "38") (term "1,1,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,1,0,0,1,1,0,1,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,1,1,0,0,1,1,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,1,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,1,1,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,1,1,0,1,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,1,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,1,1,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,1,1,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "38") (term "1,1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0,0,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1,0,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,1,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "38") (term "0,1,0,1,0,1,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0,1,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,1,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "38") (term "0,1,0,1,0,1,0,0,0"))
            (rule "elimGcdLeq" (formula "38") (term "1,1,0,0,1,1,0,1,0,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
            (rule "mul_literals" (formula "38") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "sub_literals" (formula "38") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "add_literals" (formula "38") (term "1,1,0,0,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "times_zero_1" (formula "38") (term "1,0,0,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "add_zero_right" (formula "38") (term "0,0,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,1,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "add_literals" (formula "38") (term "1,1,0,1,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "times_zero_1" (formula "38") (term "1,0,1,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "add_zero_right" (formula "38") (term "0,1,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "38") (term "0,0,1,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "mul_literals" (formula "38") (term "0,0,0,1,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "add_literals" (formula "38") (term "0,0,0,0,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "38") (term "0,1,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "38") (term "0,0,1,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "add_literals" (formula "38") (term "0,0,0,1,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,1,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "add_literals" (formula "38") (term "1,1,0,1,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "times_zero_1" (formula "38") (term "1,0,1,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "add_zero_right" (formula "38") (term "0,1,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "qeq_literals" (formula "38") (term "1,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "concrete_and_3" (formula "38") (term "0,1,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "add_literals" (formula "38") (term "0,0,0,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "add_zero_left" (formula "38") (term "0,0,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_pullOutFactor0" (formula "38") (term "0,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "add_literals" (formula "38") (term "1,0,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "times_zero_1" (formula "38") (term "0,0,1,1,0,0,1,1,0,1,0,0"))
            (rule "leq_literals" (formula "38") (term "0,1,1,0,0,1,1,0,1,0,0"))
            (rule "ifthenelse_true_for" (formula "38") (term "1,1,0,0,1,1,0,1,0,0"))
            (rule "elimGcdGeq" (formula "38") (term "0,1,0,0,1,1,0,1,0,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,1,0,0,1,1,0,1,0,0"))
            (rule "add_zero_right" (formula "38") (term "0,0,0,1,0,0,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0,1,0,0,1,1,0,1,0,0"))
            (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,1,0,0,1,0,0,1,1,0,1,0,0"))
            (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0"))
            (rule "sub_literals" (formula "38") (term "0,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0"))
            (rule "times_zero_1" (formula "38") (term "0,0,0,1,0,0,1,0,0,1,1,0,1,0,0"))
            (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0,1,0,0,1,1,0,1,0,0"))
            (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,0,0,1,0,0,1,1,0,1,0,0"))
            (rule "add_literals" (formula "38") (term "1,1,0,0,0,0,1,0,0,1,1,0,1,0,0"))
            (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,1,0,0,1,1,0,1,0,0"))
            (rule "add_zero_right" (formula "38") (term "0,0,0,0,1,0,0,1,1,0,1,0,0"))
            (rule "qeq_literals" (formula "38") (term "0,0,0,1,0,0,1,1,0,1,0,0"))
            (rule "concrete_and_1" (formula "38") (term "0,0,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_pullOutFactor0" (formula "38") (term "0,0,0,1,0,0,1,1,0,1,0,0"))
            (rule "add_literals" (formula "38") (term "1,0,0,0,1,0,0,1,1,0,1,0,0"))
            (rule "times_zero_1" (formula "38") (term "0,0,0,1,0,0,1,1,0,1,0,0"))
            (rule "leq_literals" (formula "38") (term "0,0,1,0,0,1,1,0,1,0,0"))
            (rule "ifthenelse_true_for" (formula "38") (term "0,1,0,0,1,1,0,1,0,0"))
            (rule "pullOutSelect" (formula "38") (term "1,1,0,0,0,0,0,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_size_0"))
            (rule "simplifySelectOfStore" (formula "1"))
            (rule "eqClose" (formula "1") (term "1,0,0,0"))
            (rule "concrete_and_3" (formula "1") (term "0,0,0"))
            (rule "eqClose" (formula "1") (term "0,0,0"))
            (rule "concrete_and_1" (formula "1") (term "0,0"))
            (rule "equalUnique" (formula "1") (term "0,0,0"))
            (rule "concrete_not_2" (formula "1") (term "0,0"))
            (rule "ifthenelse_true" (formula "1") (term "0"))
            (rule "castDel" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "39") (term "1,1,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "38") (term "0,0,1,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_table_0"))
            (rule "applyEq" (formula "39") (term "0,1,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "1,0,0,1,0,0,0,1,1,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "0,1,1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "1,0,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "1,0,0,1,0,1,0,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "1,0,0,1,0,1,1,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "0,0,1,0,1,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "1,0,0,0,0,1,0,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "1,0,0,2,0,1,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "0,0,1,1,1,0,0,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "1,0,1,0,0,0,0,1,1,0,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "1,0,0,0,0,1,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "0,0,1,1,1,0,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "0,1,0,1,0,0,0,1,1,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "0,1,0,1,0,1,0,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "0,1,1,1,0,0,0,1,1,0,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "1,0,0,1,0,1,1,0,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "0,0,1,1,1,0,0,1,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "1,0,1,0,1,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "0,1,1,0,1,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "0,1,1,0,0,0,0,1,1,0,1,0,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
            (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
            (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
            (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
            (rule "concrete_and_3" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "38"))
            (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
            (rule "concrete_and_1" (formula "1") (term "1,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "38"))
            (rule "concrete_and_4" (formula "1") (term "0,0,0"))
            (rule "concrete_or_2" (formula "1") (term "0,0"))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
            (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "5"))
            (rule "ifthenelse_true" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "39") (term "1,0,0,1,0,0,0,1,1,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "0,1,0,1,0,1,0,1,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "1,0,0,0,0,1,0,1,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "1,0,0,1,0,1,1,0,1,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "0,0,1,1,1,0,0,1,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "1,0,0,2,0,1,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "0,1,1,0,0,0,0,1,1,0,1,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "0,0,1,1,1,0,0,1,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "0,0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "0,1,1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "0,1,1,1,0,0,0,1,1,0,1,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "1,0,1,0,1,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "0,0,1,1,1,0,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "0,1,0,1,0,0,0,1,1,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "1,0,0,1,0,1,0,1,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "1,0,1,0,0,0,0,1,1,0,1,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "1,0,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "0,1,1,0,1,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "1,0,0,0,0,1,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "0,0,1,0,1,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "1,0,0,1,0,1,1,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "0,1,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "38") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "35"))
            (rule "concrete_not_2" (formula "38") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "concrete_and_1" (formula "38") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "replace_known_left" (formula "38") (term "1,0") (ifseqformula "23"))
            (rule "concrete_and_3" (formula "38") (term "0"))
            (rule "applyEq" (formula "38") (term "1,0,1,0,1,0,1,0,0") (ifseqformula "16"))
            (rule "applyEq" (formula "38") (term "0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "16"))
            (rule "applyEq" (formula "38") (term "0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0") (ifseqformula "16"))
            (rule "applyEq" (formula "38") (term "0,1,1,1,0,0,1,0") (ifseqformula "16"))
            (rule "applyEq" (formula "38") (term "0,1,0,1,0,0,0,0,0") (ifseqformula "16"))
            (rule "applyEq" (formula "38") (term "1,1,1,0,0,1,0,0,0,0") (ifseqformula "16"))
            (rule "applyEq" (formula "38") (term "1,0,1,0,0,0,1,1,0,1,0,0") (ifseqformula "16"))
            (rule "applyEq" (formula "38") (term "1,1,1,0,0,0,1,1,0,1,0") (ifseqformula "16"))
            (rule "applyEq" (formula "38") (term "1,1,0,0,0,0,1,1,0,1,0") (ifseqformula "16"))
            (rule "applyEq" (formula "38") (term "0,1,1,1,0,0,1,0,0,0") (ifseqformula "16"))
            (rule "applyEq" (formula "38") (term "0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "16"))
            (rule "replace_known_left" (formula "38") (term "0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "7"))
            (rule "concrete_and_1" (formula "38") (term "1,0,0,0,0,0,0,0,0,0"))
            (rule "applyEq" (formula "38") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "16"))
            (rule "applyEq" (formula "38") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "16"))
            (rule "applyEq" (formula "38") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0") (ifseqformula "16"))
            (rule "applyEq" (formula "38") (term "1,0,1,0,1,0,1,0") (ifseqformula "16"))
            (rule "applyEq" (formula "38") (term "1,1,1,0,0,1,0,0,0,0,0,0,0") (ifseqformula "11"))
            (rule "applyEq" (formula "38") (term "1,1,1,0,0,1,0,0") (ifseqformula "11"))
            (rule "applyEq" (formula "38") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "11"))
            (rule "applyEqRigid" (formula "38") (term "1,1,1,0,0,1,0") (ifseqformula "11"))
            (rule "applyEqRigid" (formula "38") (term "1,1,1,0,0,1,0,1,0,0,0,0,0,0,0") (ifseqformula "11"))
            (rule "applyEq" (formula "38") (term "1,1,1,0,0,1,0,0,0") (ifseqformula "11"))
            (rule "applyEq" (formula "38") (term "1,0,1,0,0,0,0,0") (ifseqformula "11"))
            (rule "applyEq" (formula "38") (term "1,1,0,1,0,0,0,0") (ifseqformula "16"))
            (rule "inEqSimp_subsumption0" (formula "38") (term "1,0,0,0,0,0,0,0,0,0") (ifseqformula "15"))
            (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0,0,0,0,0,0"))
            (rule "concrete_or_1" (formula "38") (term "1,0,0,0,0,0,0,0,0,0"))
            (rule "concrete_and_3" (formula "38") (term "0,0,0,0,0,0,0,0,0"))
            (rule "pullOutSelect" (formula "38") (term "0,0,1,1") (inst "selectSK=java_util_VerifiedIdentityHashMap_threshold_0"))
            (rule "applyEq" (formula "39") (term "0,1,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "0,1,1,1") (ifseqformula "1"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
            (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
            (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
            (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
            (rule "concrete_and_3" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "38"))
            (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
            (rule "concrete_and_1" (formula "1") (term "1,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "38"))
            (rule "concrete_and_4" (formula "1") (term "0,0,0"))
            (rule "concrete_or_2" (formula "1") (term "0,0"))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
            (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "5"))
            (rule "ifthenelse_true" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "39") (term "0,1,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "0,0,1,1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "0,1,1,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "38") (term "1,1,1") (ifseqformula "27"))
            (rule "concrete_and_3" (formula "38") (term "1,1"))
            (rule "replace_known_left" (formula "38") (term "1,0,0,0,0,0,0") (ifseqformula "10"))
            (rule "concrete_and_3" (formula "38") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_subsumption0" (formula "38") (term "1,1") (ifseqformula "10"))
            (rule "leq_literals" (formula "38") (term "0,1,1"))
            (rule "concrete_or_1" (formula "38") (term "1,1"))
            (rule "concrete_and_3" (formula "38") (term "1"))
            (rule "pullOutSelect" (formula "38") (term "0,0,0,0,0,0,0,0,0,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_NULL_KEY_0"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
            (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
            (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
            (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
            (rule "concrete_and_3" (formula "1") (term "0,0,0"))
            (rule "eqClose" (formula "1") (term "0,0,1,0,0"))
            (rule "concrete_not_1" (formula "1") (term "0,1,0,0"))
            (rule "concrete_and_2" (formula "1") (term "1,0,0"))
            (rule "concrete_or_4" (formula "1") (term "0,0"))
            (rule "eqSymm" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "36"))
            (rule "ifthenelse_false" (formula "1") (term "0"))
            (rule "simplifySelectOfStore" (formula "1"))
            (rule "equalUnique" (formula "1") (term "1,0,0,0"))
            (rule "concrete_and_4" (formula "1") (term "0,0,0"))
            (rule "concrete_and_2" (formula "1") (term "0,0"))
            (rule "ifthenelse_false" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "39") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "38") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "36"))
            (rule "concrete_not_2" (formula "38") (term "0,0,0,0,0,0,0,0"))
            (rule "concrete_and_1" (formula "38") (term "0,0,0,0,0,0,0"))
            (rule "pullOutSelect" (formula "38") (term "0,1,1") (inst "selectSK=java_util_VerifiedIdentityHashMap_modCount_0"))
            (rule "applyEq" (formula "39") (term "0,0,1") (ifseqformula "1"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
            (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
            (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
            (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
            (rule "concrete_and_3" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "38"))
            (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
            (rule "concrete_and_1" (formula "1") (term "1,0,0"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "38"))
            (rule "concrete_and_4" (formula "1") (term "0,0,0"))
            (rule "concrete_or_2" (formula "1") (term "0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "5"))
            (rule "concrete_not_1" (formula "1") (term "0,0"))
            (rule "ifthenelse_false" (formula "1") (term "0"))
            (rule "simplifySelectOfStore" (formula "1"))
            (rule "eqClose" (formula "1") (term "1,0,0,0"))
            (rule "concrete_and_3" (formula "1") (term "0,0,0"))
            (rule "eqClose" (formula "1") (term "0,0,0"))
            (rule "concrete_and_1" (formula "1") (term "0,0"))
            (rule "equalUnique" (formula "1") (term "0,0,0"))
            (rule "concrete_not_2" (formula "1") (term "0,0"))
            (rule "ifthenelse_true" (formula "1") (term "0"))
            (rule "castDel" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "39") (term "0,1,1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "39") (term "0,0,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "inEqSimp_homoInEq1" (formula "38") (term "1,1"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,1"))
            (rule "polySimp_rightDist" (formula "38") (term "1,0,1,1"))
            (rule "polySimp_rightDist" (formula "38") (term "0,1,0,1,1"))
            (rule "mul_literals" (formula "38") (term "0,0,1,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,1,1"))
            (rule "polySimp_addAssoc" (formula "38") (term "0,1,1"))
            (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,1"))
            (rule "add_literals" (formula "38") (term "0,0,0,1,1"))
            (rule "inEqSimp_homoInEq0" (formula "38") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,1"))
            (rule "mul_literals" (formula "38") (term "0,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
            (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1"))
            (rule "add_literals" (formula "38") (term "0,0,0,0,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "38") (term "0,1,1"))
            (rule "polySimp_elimOne" (formula "38") (term "0,1,1"))
            (rule "replace_known_left" (formula "38") (term "1,1") (ifseqformula "32"))
            (rule "concrete_and_3" (formula "38") (term "1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1"))
            (rule "polySimp_mulLiterals" (formula "38") (term "0,1"))
            (rule "polySimp_elimOne" (formula "38") (term "0,1"))
            (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "33"))
            (rule "concrete_and_3" (formula "38"))
            (rule "commute_or_2" (formula "21") (term "0,1,1,0"))
            (rule "commute_or" (formula "22") (term "0,1,1,0"))
            (rule "shift_paren_or" (formula "9") (term "0,1,0"))
            (rule "div_axiom" (formula "11") (term "1") (inst "quotient=quotient_1"))
            (rule "equal_literals" (formula "11") (term "0"))
            (rule "concrete_or_2" (formula "11"))
            (rule "mul_literals" (formula "11") (term "1,1,1,1"))
            (rule "qeq_literals" (formula "11") (term "0,1"))
            (rule "ifthenelse_true_for" (formula "11") (term "1"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "11"))
            (rule "polySimp_addComm1" (formula "13") (term "1"))
            (rule "add_literals" (formula "13") (term "0,1"))
            (rule "inEqSimp_commuteLeq" (formula "12"))
            (rule "inEqSimp_homoInEq1" (formula "13"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
            (rule "polySimp_addComm1" (formula "13") (term "0"))
            (rule "applyEq" (formula "9") (term "1,1,0,0,0,1,0") (ifseqformula "11"))
            (rule "applyEqRigid" (formula "24") (term "1,1,0,0") (ifseqformula "11"))
            (rule "applyEq" (formula "41") (term "1,1,1,0,0,0,0,0,0,0,0") (ifseqformula "11"))
            (rule "applyEqRigid" (formula "8") (term "1,1,0") (ifseqformula "11"))
            (rule "applyEq" (formula "41") (term "1,1,1,0,0,1,0") (ifseqformula "11"))
            (rule "applyEqRigid" (formula "41") (term "1,1,1,0,0,1,0,0,0,0,0") (ifseqformula "11"))
            (rule "applyEqRigid" (formula "22") (term "1,1") (ifseqformula "11"))
            (rule "applyEqRigid" (formula "25") (term "1,1,0,0") (ifseqformula "11"))
            (rule "applyEq" (formula "20") (term "0") (ifseqformula "11"))
            (rule "applyEq" (formula "41") (term "1,1,1,0,0,1,0,0") (ifseqformula "11"))
            (rule "applyEqRigid" (formula "41") (term "1,1,1,0,0,1,0,1,0,0,0,0,0") (ifseqformula "11"))
            (rule "applyEq" (formula "41") (term "1,0,1,0,0,0,0") (ifseqformula "11"))
            (rule "applyEq" (formula "9") (term "1,1,0,0") (ifseqformula "11"))
            (rule "applyEq" (formula "41") (term "1,1,1,0,0,1") (ifseqformula "11"))
            (rule "applyEqRigid" (formula "15") (term "1,0") (ifseqformula "11"))
            (rule "applyEq" (formula "14") (term "1") (ifseqformula "11"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13"))
            (rule "polySimp_mulComm0" (formula "13") (term "1"))
            (rule "polySimp_rightDist" (formula "13") (term "1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
            (rule "mul_literals" (formula "13") (term "0,1"))
            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "13"))
            (rule "mul_literals" (formula "7") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0"))
            (rule "add_literals" (formula "7") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
            (rule "mul_literals" (formula "7") (term "1"))
            (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
            (rule "leq_literals" (formula "7") (term "0,0"))
            (rule "concrete_or_2" (formula "7") (term "0"))
            (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0"))
            (rule "leq_literals" (formula "7") (term "0"))
            (rule "concrete_or_2" (formula "7"))
            (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "7"))
            (rule "leq_literals" (formula "21") (term "0"))
            (rule "concrete_or_1" (formula "21"))
            (rule "true_left" (formula "21"))
            (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
            (rule "mul_literals" (formula "21") (term "0,0"))
            (rule "add_zero_left" (formula "21") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "21"))
            (rule "mul_literals" (formula "21") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "7"))
            (rule "leq_literals" (formula "21") (term "0"))
            (rule "concrete_or_1" (formula "21"))
            (rule "true_left" (formula "21"))
            (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "19"))
            (rule "polySimp_mulAssoc" (formula "13") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
            (rule "polySimp_addComm0" (formula "13") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "13"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0"))
            (rule "elimGcdLeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
            (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
            (rule "neg_literal" (formula "13") (term "0,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "13") (term "0,0"))
            (rule "concrete_or_2" (formula "13") (term "0"))
            (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "13") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
            (rule "add_literals" (formula "13") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "13") (term "1,0,0"))
            (rule "add_zero_right" (formula "13") (term "0,0"))
            (rule "qeq_literals" (formula "13") (term "0"))
            (rule "concrete_or_2" (formula "13"))
            (rule "nnf_imp2or" (formula "42") (term "1,0,1"))
            (rule "nnf_imp2or" (formula "42") (term "1,0,1,0"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "3"))
            (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "25"))
            (rule "concrete_or_1" (formula "24"))
            (rule "true_left" (formula "24"))
            (rule "nnf_imp2or" (formula "42") (term "1,0,0,0,0,0,0,0"))
            (rule "nnf_imp2or" (formula "42") (term "0,1,0,0,0,0,0"))
            (rule "nnf_imp2or" (formula "42") (term "0,1"))
            (rule "nnf_imp2or" (formula "42") (term "0,1,0"))
            (rule "nnf_notAnd" (formula "42") (term "0,0,1"))
            (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,1"))
            (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,1"))
            (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,1"))
            (rule "mul_literals" (formula "42") (term "1,0,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1"))
            (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1"))
            (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1"))
            (rule "nnf_notAnd" (formula "42") (term "0,1,0,1"))
            (rule "double_not" (formula "42") (term "0,0,1,0,1"))
            (rule "inEqSimp_notGeq" (formula "42") (term "1,0,1,0,1"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,1,0,1"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0,1,0,1"))
            (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,1,0,1"))
            (rule "add_literals" (formula "42") (term "0,0,0,1,0,1,0,1"))
            (rule "add_zero_left" (formula "42") (term "0,0,1,0,1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,0,1"))
            (rule "nnf_notAnd" (formula "42") (term "0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,1,0"))
            (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,1,0"))
            (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,1,0"))
            (rule "mul_literals" (formula "42") (term "1,0,0,0,1,0"))
            (rule "nnf_imp2or" (formula "42") (term "0,1,1,0,1"))
            (rule "nnf_notAnd" (formula "42") (term "0,1,0,1,0"))
            (rule "double_not" (formula "42") (term "0,0,1,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "42") (term "1,0,1,0,1,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,1,0,1,0"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0,1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,1,0,1,0"))
            (rule "add_literals" (formula "42") (term "0,0,0,1,0,1,0,1,0"))
            (rule "add_zero_left" (formula "42") (term "0,0,1,0,1,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,0,1,0"))
            (rule "nnf_imp2or" (formula "42") (term "0,1,1,0,1,0"))
            (rule "nnf_imp2or" (formula "42") (term "0,0,0,0,0,0,0"))
            (rule "nnf_notAnd" (formula "42") (term "0,0,1,0,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,0,0,0,0,0"))
            (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
            (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,0,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "42") (term "1,0,0,0,1,0,0,0,0,0"))
            (rule "nnf_imp2or" (formula "42") (term "0,1,0,1,0,0,0,0,0"))
            (rule "nnf_notOr" (formula "42") (term "0,0,1,1,0,1"))
            (rule "nnf_notAnd" (formula "42") (term "0,0,1,1,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,1,0,1,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,1,0,1,0"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,1,0,1,0"))
            (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,1,0,1,0"))
            (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,1,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,1,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,1,1,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,1,0,1,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,1,1,0,1,0"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,0,1,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,1,0,1,0"))
            (rule "nnf_notAnd" (formula "42") (term "0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0,0,0,0"))
            (rule "nnf_notAnd" (formula "42") (term "1,0,0,1,1,0,1"))
            (rule "inEqSimp_notGeq" (formula "42") (term "0,1,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "42") (term "1,0,0,0,1,0,0,1,1,0,1"))
            (rule "add_zero_right" (formula "42") (term "0,0,0,1,0,0,1,1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,1,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "42") (term "1,0,1,0,0,1,1,0,1"))
            (rule "inEqSimp_notLeq" (formula "42") (term "1,1,0,0,1,1,0,1"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,1,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,1,1,0,0,1,1,0,1"))
            (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,1,0,0,1,1,0,1"))
            (rule "add_literals" (formula "42") (term "0,0,0,1,1,0,0,1,1,0,1"))
            (rule "add_zero_left" (formula "42") (term "0,0,1,1,0,0,1,1,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,1,0,0,1,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,1,0,1"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1,1,0,1"))
            (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,1,0,1"))
            (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,1,1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,1,1,0,1"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,1,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,1,1,0,1"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,1,1,0,1"))
            (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,1,0,1"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,0,1"))
            (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,1,0,1"))
            (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,1,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,1,0,1"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,1,0,1"))
            (rule "nnf_imp2or" (formula "42") (term "1,0,1,0,1,0,0,0,0,0"))
            (rule "nnf_notAnd" (formula "42") (term "0,0,1,0,1,0,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,0,1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,0,1,0,0,0,0,0"))
            (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,0,1,0,0,0,0,0"))
            (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,0,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,0,1,0,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,1,0,1,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,1,0,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,1,0,1,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,0,1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,1,0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,0,1,0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,0,1,0,0,0,0,0"))
            (rule "commute_or_2" (formula "10") (term "0,0,1,0"))
            (rule "commute_or" (formula "25") (term "0,0,1,1,0"))
            (rule "nnf_notAnd" (formula "42") (term "0,1,0,1,0,1,0,0,0,0,0"))
            (rule "double_not" (formula "42") (term "0,0,1,0,1,0,1,0,0,0,0,0"))
            (rule "commute_or" (formula "26") (term "0,1,0,1,1,0"))
            (rule "commute_or_2" (formula "25") (term "0,1,1,0"))
            (rule "commute_or" (formula "10") (term "0,0,0,1,0"))
            (rule "commute_or_2" (formula "10") (term "0,0,1,0"))
            (rule "inEqSimp_or_weaken2" (formula "10") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "1,0,1,0,1,0"))
            (rule "add_literals" (formula "10") (term "0,1,0,1,0,1,0"))
            (rule "add_zero_left" (formula "10") (term "1,0,1,0,1,0"))
            (rule "eqClose" (formula "10") (term "0,1,0,1,0"))
            (rule "ifthenelse_true_for" (formula "10") (term "1,0,1,0"))
            (rule "cnf_rightDist" (formula "26") (term "0,1,1,0"))
            (rule "commute_or_2" (formula "26") (term "1,0,1,1,0"))
            (rule "shift_paren_or" (formula "26") (term "0,0,1,1,0"))
            (rule "commute_or" (formula "26") (term "0,1,0,1,1,0"))
            (rule "all_pull_out3" (formula "42") (term "1,0,1,0"))
            (rule "allLeft" (formula "38") (inst "t=mul(i_1_0, Z(2(#)))"))
            (rule "inEqSimp_contradInEq5" (formula "38") (term "1,0") (ifseqformula "22"))
            (rule "greater_literals" (formula "38") (term "0,0,1,0"))
            (rule "concrete_impl_1" (formula "38") (term "0,1,0"))
            (rule "times_zero_1" (formula "38") (term "1,0,1,0"))
            (rule "qeq_literals" (formula "38") (term "0,1,0"))
            (rule "concrete_and_2" (formula "38") (term "1,0"))
            (rule "concrete_or_4" (formula "38") (term "0"))
            (rule "pullOutSelect" (formula "38") (term "0,0") (inst "selectSK=arr_0"))
            (rule "simplifySelectOfAnon" (formula "38"))
            (rule "elementOfFreshLocs" (formula "38") (term "1,0,0"))
            (rule "elementOfAllFields" (formula "38") (term "0,0,0,0"))
            (rule "eqClose" (formula "38") (term "0,0,0,0"))
            (rule "concrete_and_1" (formula "38") (term "0,0,0"))
            (rule "equalUnique" (formula "38") (term "0,0,0,0"))
            (rule "concrete_not_2" (formula "38") (term "0,0,0"))
            (rule "concrete_or_1" (formula "38") (term "0,0"))
            (rule "ifthenelse_true" (formula "38") (term "0"))
            (rule "applyEqReverse" (formula "39") (term "0,0") (ifseqformula "38"))
            (rule "hideAuxiliaryEq" (formula "38"))
            (rule "all_pull_out3" (formula "25") (term "1,0"))
            (rule "shift_paren_or" (formula "25") (term "0,1,0"))
            (rule "shift_paren_or" (formula "25") (term "0,0,1,0"))
            (rule "commute_or_2" (formula "25") (term "0,0,0,1,0"))
            (rule "all_pull_out3" (formula "10") (term "0"))
            (rule "shift_paren_or" (formula "10") (term "0,0"))
            (rule "shift_paren_or" (formula "10") (term "0,0,0"))
            (rule "commute_or_2" (formula "10") (term "0,0,0,0"))
            (rule "commute_or" (formula "10") (term "0,0,0,0,0"))
            (rule "all_pull_out3" (formula "26") (term "1,0"))
            (rule "cnf_rightDist" (formula "26") (term "0,1,0"))
            (rule "commute_or_2" (formula "26") (term "1,0,1,0"))
            (rule "shift_paren_or" (formula "26") (term "0,0,1,0"))
            (rule "commute_or_2" (formula "26") (term "0,1,0,1,0"))
            (rule "shift_paren_or" (formula "26") (term "0,0,0,1,0"))
            (rule "commute_or_2" (formula "26") (term "0,0,0,0,1,0"))
            (rule "shift_paren_or" (formula "26") (term "0,0,1,0,1,0"))
            (rule "commute_or" (formula "26") (term "0,0,0,1,0,1,0"))
            (rule "allLeft" (formula "9") (inst "t=i_1_0"))
            (rule "replace_known_left" (formula "9") (term "0,0,0,0") (ifseqformula "25"))
            (rule "concrete_not_1" (formula "9") (term "0,0,0"))
            (rule "concrete_or_2" (formula "9") (term "0,0"))
            (rule "inEqSimp_contradInEq0" (formula "9") (term "1") (ifseqformula "24"))
            (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,1"))
            (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
            (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "9") (term "0,0,1"))
            (rule "leq_literals" (formula "9") (term "0,1"))
            (rule "concrete_and_2" (formula "9") (term "1"))
            (rule "concrete_or_4" (formula "9"))
            (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "23"))
            (rule "qeq_literals" (formula "9") (term "0,1"))
            (rule "concrete_and_2" (formula "9") (term "1"))
            (rule "concrete_or_4" (formula "9"))
            (rule "all_pull_out3" (formula "26") (term "0"))
            (rule "shift_paren_or" (formula "26") (term "0,0"))
            (rule "shift_paren_or" (formula "26") (term "0,0,0"))
            (rule "shift_paren_or" (formula "26") (term "0,0,0,0"))
            (rule "commute_or_2" (formula "26") (term "0,0,0,0,0"))
            (rule "commute_or" (formula "26") (term "0,0,0,0,0,0"))
            (rule "all_pull_out3" (formula "27") (term "0"))
            (rule "cnf_rightDist" (formula "27") (term "0,0"))
            (rule "distr_forallAnd" (formula "27") (term "0"))
            (rule "distr_forallAnd" (formula "27"))
            (rule "andLeft" (formula "27"))
            (rule "commute_or_2" (formula "28") (term "0,0"))
            (rule "shift_paren_or" (formula "27") (term "0,0"))
            (rule "commute_or_2" (formula "28") (term "0,0,0"))
            (rule "shift_paren_or" (formula "27") (term "0,0,0"))
            (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
            (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
            (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
            (rule "shift_paren_or" (formula "28") (term "0,0,0,0,0"))
            (rule "commute_or" (formula "27") (term "0,0,0,0,0,0"))
            (rule "cut_direct" (formula "40") (term "1"))
            (branch "CUT: i_1_0 * 2 >= i_0 TRUE"
               (rule "concrete_or_3" (formula "41"))
               (rule "true_left" (formula "41"))
               (rule "inEqSimp_exactShadow1" (formula "40") (ifseqformula "24"))
               (rule "greater_literals" (formula "40") (term "0"))
               (rule "concrete_impl_1" (formula "40"))
               (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
               (rule "polySimp_rightDist" (formula "40") (term "1,0"))
               (rule "mul_literals" (formula "40") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "40") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "40"))
               (rule "polySimp_mulLiterals" (formula "40") (term "0"))
               (rule "polySimp_elimOne" (formula "40") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "40") (ifseqformula "15"))
               (rule "andLeft" (formula "40"))
               (rule "inEqSimp_homoInEq1" (formula "40"))
               (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
               (rule "polySimp_rightDist" (formula "40") (term "1,0"))
               (rule "mul_literals" (formula "40") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0"))
               (rule "polySimp_addAssoc" (formula "40") (term "0"))
               (rule "polySimp_addComm0" (formula "40") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "40") (term "0"))
               (rule "add_literals" (formula "40") (term "1,1,0"))
               (rule "times_zero_1" (formula "40") (term "1,0"))
               (rule "add_literals" (formula "40") (term "0"))
               (rule "leq_literals" (formula "40"))
               (rule "closeFalse" (formula "40"))
            )
            (branch "CUT: i_1_0 * 2 >= i_0 FALSE"
               (rule "concrete_or_4" (formula "40"))
               (rule "inEqSimp_geqRight" (formula "42"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_exactShadow2" (formula "24") (ifseqformula "1"))
               (rule "mul_literals" (formula "24") (term "1,0,0,1"))
               (rule "greater_literals" (formula "24") (term "0"))
               (rule "concrete_impl_1" (formula "24"))
               (rule "mul_literals" (formula "24") (term "0,0"))
               (rule "add_zero_left" (formula "24") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "24"))
               (rule "mul_literals" (formula "24") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "9"))
               (rule "leq_literals" (formula "24") (term "0"))
               (rule "concrete_or_1" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "35"))
               (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "42"))
               (rule "concrete_or_1" (formula "41"))
               (rule "true_left" (formula "41"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0") (ifseqformula "4"))
               (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "11"))
               (rule "concrete_or_1" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "allLeft" (formula "42") (inst "t=add(Z(1(#)), mul(i_1_0, Z(2(#))))"))
               (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0"))
               (rule "mul_literals" (formula "42") (term "0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "42") (term "0,1,0"))
               (rule "add_literals" (formula "42") (term "0,0,1,0"))
               (rule "inEqSimp_homoInEq1" (formula "42") (term "1"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "42") (term "1,0,1"))
               (rule "mul_literals" (formula "42") (term "0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1"))
               (rule "polySimp_addAssoc" (formula "42") (term "0,1"))
               (rule "polySimp_addComm0" (formula "42") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial1" (formula "42") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "1"))
               (rule "polySimp_mulLiterals" (formula "42") (term "0,1"))
               (rule "inEqSimp_contradInEq5" (formula "42") (term "1,0") (ifseqformula "24"))
               (rule "mul_literals" (formula "42") (term "1,1,0,1,0"))
               (rule "greater_literals" (formula "42") (term "0,0,1,0"))
               (rule "concrete_impl_1" (formula "42") (term "0,1,0"))
               (rule "qeq_literals" (formula "42") (term "0,1,0"))
               (rule "concrete_and_2" (formula "42") (term "1,0"))
               (rule "concrete_or_4" (formula "42") (term "0"))
               (rule "pullOutSelect" (formula "42") (term "0,0") (inst "selectSK=arr_1"))
               (rule "simplifySelectOfAnon" (formula "42"))
               (rule "elementOfFreshLocs" (formula "42") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "42") (term "0,0,0,0"))
               (rule "eqClose" (formula "42") (term "0,0,0,0"))
               (rule "concrete_and_1" (formula "42") (term "0,0,0"))
               (rule "equalUnique" (formula "42") (term "0,0,0,0"))
               (rule "concrete_not_2" (formula "42") (term "0,0,0"))
               (rule "concrete_or_1" (formula "42") (term "0,0"))
               (rule "ifthenelse_true" (formula "42") (term "0"))
               (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "42"))
               (rule "hideAuxiliaryEq" (formula "42"))
               (rule "cut_direct" (formula "42") (term "1"))
               (branch "CUT: i_1_0 * 2 >= -1 + i_0 TRUE"
                  (rule "concrete_or_3" (formula "43"))
                  (rule "true_left" (formula "43"))
                  (rule "inEqSimp_antiSymm" (formula "42") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "26") (term "0,2,0") (ifseqformula "42"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "42"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,0"))
                  (rule "times_zero_1" (formula "1") (term "0"))
                  (rule "qeq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEq" (formula "40") (term "0,2,0") (ifseqformula "41"))
                  (rule "applyEq" (formula "9") (term "1,0,2,0") (ifseqformula "41"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,2,0"))
                  (rule "add_literals" (formula "9") (term "0,0,2,0"))
                  (rule "add_zero_left" (formula "9") (term "0,2,0"))
                  (rule "applyEqRigid" (formula "42") (term "0") (ifseqformula "41"))
                  (rule "inEqSimp_homoInEq1" (formula "42"))
                  (rule "polySimp_pullOutFactor1" (formula "42") (term "0"))
                  (rule "add_literals" (formula "42") (term "1,0"))
                  (rule "times_zero_1" (formula "42") (term "0"))
                  (rule "leq_literals" (formula "42"))
                  (rule "true_left" (formula "42"))
                  (rule "newSym_eq" (formula "41") (inst "l=l_0") (inst "newSymDef=add(Z(neglit(1(#))), mul(i_0, Z(0(#))))"))
                  (rule "times_zero_1" (formula "41") (term "1,1,1"))
                  (rule "add_literals" (formula "41") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "41") (term "1"))
                  (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "41"))
                  (rule "polySimp_mulComm0" (formula "42") (term "0"))
                  (rule "polySimp_rightDist" (formula "42") (term "0"))
                  (rule "mul_literals" (formula "42") (term "0,0"))
                  (rule "polySimp_homoEq" (formula "42"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                  (rule "mul_literals" (formula "42") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "42") (term "0"))
                  (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                  (rule "add_literals" (formula "42") (term "0,0,0"))
                  (rule "applyEq" (formula "24") (term "0") (ifseqformula "41"))
                  (rule "inEqSimp_homoInEq0" (formula "24"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                  (rule "add_literals" (formula "24") (term "0,0,0"))
                  (rule "add_zero_left" (formula "24") (term "0,0"))
                  (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "41"))
                  (rule "polySimp_sepPosMonomial" (formula "42"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1"))
                  (rule "polySimp_rightDist" (formula "42") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                  (rule "mul_literals" (formula "42") (term "0,1"))
                  (rule "applyEq" (formula "27") (term "1,0,1,0,0,0,0") (ifseqformula "42"))
                  (rule "applyEq" (formula "15") (term "0") (ifseqformula "42"))
                  (rule "inEqSimp_commuteGeq" (formula "15"))
                  (rule "applyEqRigid" (formula "43") (term "1,1,0") (ifseqformula "42"))
                  (rule "applyEqRigid" (formula "26") (term "1,0,1,0,0,0,0") (ifseqformula "42"))
                  (rule "applyEqRigid" (formula "26") (term "1,0,1,1,1,0,0") (ifseqformula "42"))
                  (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "42"))
                  (rule "inEqSimp_homoInEq0" (formula "16"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0"))
                  (rule "applyEqRigid" (formula "25") (term "1,0,2,0") (ifseqformula "42"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,2,0"))
                  (rule "add_literals" (formula "25") (term "0,0,2,0"))
                  (rule "applyEqRigid" (formula "17") (term "0,0") (ifseqformula "42"))
                  (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "42"))
                  (rule "polySimp_addAssoc" (formula "20") (term "1"))
                  (rule "add_literals" (formula "20") (term "0,1"))
                  (rule "applyEq" (formula "27") (term "1,1,0,0,0") (ifseqformula "42"))
                  (rule "applyEqRigid" (formula "9") (term "0,2,0") (ifseqformula "42"))
                  (rule "applyEq" (formula "28") (term "1,0,1,0,0,0,0") (ifseqformula "42"))
                  (rule "applyEq" (formula "47") (term "1,0,1,0,0,1,0,1,0") (ifseqformula "42"))
                  (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "42"))
                  (rule "inEqSimp_homoInEq0" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                  (rule "add_literals" (formula "21") (term "0,0"))
                  (rule "applyEq" (formula "40") (term "1,0,2,0") (ifseqformula "42"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0,2,0"))
                  (rule "add_literals" (formula "40") (term "0,0,2,0"))
                  (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "42"))
                  (rule "inEqSimp_homoInEq1" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "add_literals" (formula "8") (term "0,0"))
                  (rule "applyEq" (formula "47") (term "1,1,1,0,0,1,0,0,0") (ifseqformula "42"))
                  (rule "polySimp_addAssoc" (formula "47") (term "1,1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "47") (term "0,1,1,0,0,1,0,0,0"))
                  (rule "applyEq" (formula "47") (term "1,1,0,0,0,1,1,0,1") (ifseqformula "42"))
                  (rule "applyEq" (formula "47") (term "1,0,1,1,0,0,1,0,1,0,1,0") (ifseqformula "42"))
                  (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "42"))
                  (rule "applyEqRigid" (formula "47") (term "1,1,1,0,0,0,0,1,1,0,1") (ifseqformula "42"))
                  (rule "applyEqRigid" (formula "47") (term "1,0,1,0,1,0,1") (ifseqformula "42"))
                  (rule "applyEq" (formula "27") (term "1,1,1,1,0,0") (ifseqformula "42"))
                  (rule "applyEqRigid" (formula "47") (term "1,1,0,1,0,0,0") (ifseqformula "42"))
                  (rule "applyEq" (formula "35") (term "1") (ifseqformula "42"))
                  (rule "applyEq" (formula "22") (term "1") (ifseqformula "42"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1"))
                  (rule "polySimp_elimOne" (formula "24") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                  (rule "mul_literals" (formula "23") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1"))
                  (rule "polySimp_rightDist" (formula "16") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                  (rule "mul_literals" (formula "16") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                  (rule "inEqSimp_contradInEq5" (formula "15") (ifseqformula "24"))
                  (rule "greater_literals" (formula "15") (term "0,0"))
                  (rule "concrete_impl_1" (formula "15") (term "0"))
                  (rule "andLeft" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1"))
                  (rule "inEqSimp_homoInEq1" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                  (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0"))
                  (rule "add_literals" (formula "15") (term "1,1,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0"))
                  (rule "add_zero_right" (formula "15") (term "0"))
                  (rule "leq_literals" (formula "15"))
                  (rule "closeFalse" (formula "15"))
               )
               (branch "CUT: i_1_0 * 2 >= -1 + i_0 FALSE"
                  (rule "concrete_or_4" (formula "42"))
                  (rule "inEqSimp_geqRight" (formula "44"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_subsumption2" (formula "2") (ifseqformula "1"))
                  (rule "eq_and" (formula "2") (term "0,0"))
                  (rule "greater_literals" (formula "2") (term "0,0"))
                  (rule "concrete_and_1" (formula "2") (term "0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                  (rule "concrete_or_1" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_exactShadow2" (formula "24") (ifseqformula "1"))
                  (rule "mul_literals" (formula "24") (term "1,0,0,1"))
                  (rule "greater_literals" (formula "24") (term "0"))
                  (rule "concrete_impl_1" (formula "24"))
                  (rule "mul_literals" (formula "24") (term "0,0"))
                  (rule "add_zero_left" (formula "24") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                  (rule "mul_literals" (formula "24") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "9"))
                  (rule "leq_literals" (formula "24") (term "0"))
                  (rule "concrete_or_1" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "35"))
                  (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "43"))
                  (rule "concrete_or_1" (formula "42"))
                  (rule "true_left" (formula "42"))
                  (rule "cut_direct" (formula "47") (term "1,0,0,0,0"))
                  (branch "CUT: bsum{int i_3;}(0, quotient_1, if ( (self.table@heap)[i_3 * 2]@heap[self.modCount := -4294967295 + quotient_0 * -4294967296 + self.modCount] [anon(self.table.*, anon_heap_LOOP<<anonHeapFunction>>)] = null) then (0) else (1)) = 0 TRUE"
                     (rule "concrete_and_3" (formula "48") (term "0,0,0,0"))
                     (rule "andRight" (formula "48"))
                     (branch
                        (rule "andRight" (formula "48"))
                        (branch
                           (rule "andRight" (formula "48"))
                           (branch
                              (rule "andRight" (formula "48"))
                              (branch
                                 (rule "andRight" (formula "48"))
                                 (branch
                                    (rule "allRight" (formula "48") (inst "sk=i_5_0"))
                                    (rule "orRight" (formula "48"))
                                    (rule "orRight" (formula "48"))
                                    (rule "orRight" (formula "50"))
                                    (rule "notRight" (formula "50"))
                                    (rule "inEqSimp_leqRight" (formula "49"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "50"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=arr_2"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                    (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_3"))
                                    (rule "simplifySelectOfAnon" (formula "3"))
                                    (rule "elementOfFreshLocs" (formula "3") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "3") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "3") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "3") (term "0,0,0"))
                                    (rule "equalUnique" (formula "3") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "3") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "3") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "3") (term "0"))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                    (rule "concrete_or_1" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "39"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                    (rule "concrete_or_2" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "0") (ifseqformula "40"))
                                    (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "5"))
                                    (rule "concrete_or_1" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "allLeft" (formula "16") (inst "t=i_5_0"))
                                    (rule "inEqSimp_contradInEq0" (formula "16") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                    (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "16") (term "0,0,1"))
                                    (rule "leq_literals" (formula "16") (term "0,1"))
                                    (rule "concrete_and_2" (formula "16") (term "1"))
                                    (rule "concrete_or_4" (formula "16"))
                                    (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "16") (term "0,1"))
                                    (rule "concrete_and_2" (formula "16") (term "1"))
                                    (rule "concrete_or_4" (formula "16"))
                                    (rule "cut_direct" (formula "16") (term "0,0"))
                                    (branch "CUT: self.table[i_5_0 * 2] = null TRUE"
                                       (rule "concrete_not_1" (formula "17") (term "0"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "0") (ifseqformula "9"))
                                       (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "18"))
                                       (rule "concrete_or_1" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "0") (ifseqformula "9"))
                                       (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "17"))
                                       (rule "concrete_or_1" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "allLeft" (formula "50") (inst "t=mul(i_5_0, Z(2(#)))"))
                                       (rule "replaceKnownSelect_taclet000000110200_18" (formula "50") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000000110200_19" (formula "50") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "50") (term "0,0") (ifseqformula "4"))
                                       (rule "concrete_or_1" (formula "50") (term "0"))
                                       (rule "concrete_or_1" (formula "50"))
                                       (rule "true_left" (formula "50"))
                                       (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), mul(i_5_0, Z(2(#))))"))
                                       (rule "replaceKnownSelect_taclet000000110200_16" (formula "50") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000000110200_17" (formula "50") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "55"))
                                       (rule "concrete_or_2" (formula "50") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "50") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "50") (term "1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1"))
                                       (rule "mul_literals" (formula "50") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "50") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "50") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "50") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "50") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "50") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "50") (term "0,0"))
                                       (rule "add_literals" (formula "50") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "50") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "0,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "0,0"))
                                       (rule "inEqSimp_contradInEq5" (formula "50") (term "0") (ifseqformula "3"))
                                       (rule "greater_literals" (formula "50") (term "0,0,0"))
                                       (rule "concrete_impl_1" (formula "50") (term "0,0"))
                                       (rule "mul_literals" (formula "50") (term "1,0,0"))
                                       (rule "qeq_literals" (formula "50") (term "0,0"))
                                       (rule "concrete_and_2" (formula "50") (term "0"))
                                       (rule "concrete_or_2" (formula "50"))
                                       (rule "inEqSimp_exactShadow1" (formula "50") (ifseqformula "2"))
                                       (rule "greater_literals" (formula "50") (term "0"))
                                       (rule "concrete_impl_1" (formula "50"))
                                       (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                                       (rule "mul_literals" (formula "50") (term "0,1,0"))
                                       (rule "polySimp_rightDist" (formula "50") (term "0,0"))
                                       (rule "mul_literals" (formula "50") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "50") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "50") (term "0,0"))
                                       (rule "add_literals" (formula "50") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                       (rule "polySimp_elimOne" (formula "50") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "50"))
                                       (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0"))
                                       (rule "qeq_literals" (formula "24") (term "0"))
                                       (rule "concrete_or_1" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "49"))
                                       (rule "andLeft" (formula "23"))
                                       (rule "inEqSimp_homoInEq1" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                       (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "23") (term "0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0"))
                                       (rule "add_literals" (formula "23") (term "0"))
                                       (rule "leq_literals" (formula "23"))
                                       (rule "closeFalse" (formula "23"))
                                    )
                                    (branch "CUT: self.table[i_5_0 * 2] = null FALSE"
                                       (rule "concrete_not_2" (formula "16") (term "0"))
                                       (rule "concrete_or_1" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "9"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "allLeft" (formula "35") (inst "t=i_5_0"))
                                       (rule "replace_known_right" (formula "35") (term "0,0,0,0,0,0,0") (ifseqformula "51"))
                                       (rule "concrete_or_2" (formula "35") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "35") (term "1,0,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "35") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "35") (term "1,0,0,0,0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "35") (term "0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "35") (term "1,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "35") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "35") (term "0,0"))
                                       (rule "commute_or_2" (formula "35") (term "0"))
                                       (rule "cut_direct" (formula "35") (term "1,0"))
                                       (branch "CUT: genHash(self.table[i_5_0 * 2], i_0) <= i_5_0 * 2 TRUE"
                                          (rule "concrete_or_3" (formula "36") (term "0"))
                                          (rule "all_unused" (formula "36"))
                                          (rule "true_left" (formula "36"))
                                          (rule "allLeft" (formula "50") (inst "t=mul(i_5_0, Z(2(#)))"))
                                          (rule "replaceKnownSelect_taclet000000110200_18" (formula "50") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000110200_19" (formula "50") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "50") (term "0,0") (ifseqformula "5"))
                                          (rule "concrete_or_1" (formula "50") (term "0"))
                                          (rule "concrete_or_1" (formula "50"))
                                          (rule "true_left" (formula "50"))
                                          (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), mul(i_5_0, Z(2(#))))"))
                                          (rule "replaceKnownSelect_taclet000000110200_16" (formula "50") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000110200_17" (formula "50") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "56"))
                                          (rule "concrete_or_2" (formula "50") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "50") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1"))
                                          (rule "mul_literals" (formula "50") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "50") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "50") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1,0,0"))
                                          (rule "mul_literals" (formula "50") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "0,0"))
                                          (rule "add_literals" (formula "50") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "50") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "0,0"))
                                          (rule "inEqSimp_contradInEq5" (formula "50") (term "0") (ifseqformula "4"))
                                          (rule "greater_literals" (formula "50") (term "0,0,0"))
                                          (rule "concrete_impl_1" (formula "50") (term "0,0"))
                                          (rule "mul_literals" (formula "50") (term "1,0,0"))
                                          (rule "qeq_literals" (formula "50") (term "0,0"))
                                          (rule "concrete_and_2" (formula "50") (term "0"))
                                          (rule "concrete_or_2" (formula "50"))
                                          (rule "inEqSimp_exactShadow1" (formula "50") (ifseqformula "3"))
                                          (rule "greater_literals" (formula "50") (term "0"))
                                          (rule "concrete_impl_1" (formula "50"))
                                          (rule "polySimp_rightDist" (formula "50") (term "0,0"))
                                          (rule "mul_literals" (formula "50") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                                          (rule "mul_literals" (formula "50") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "50") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "0,0"))
                                          (rule "add_literals" (formula "50") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                          (rule "polySimp_elimOne" (formula "50") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "50"))
                                          (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0"))
                                          (rule "qeq_literals" (formula "23") (term "0"))
                                          (rule "concrete_or_1" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "49"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "inEqSimp_homoInEq1" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0"))
                                          (rule "add_literals" (formula "22") (term "0"))
                                          (rule "leq_literals" (formula "22"))
                                          (rule "closeFalse" (formula "22"))
                                       )
                                       (branch "CUT: genHash(self.table[i_5_0 * 2], i_0) <= i_5_0 * 2 FALSE"
                                          (rule "concrete_or_4" (formula "35") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "51"))
                                          (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "allLeft" (formula "36") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "33"))
                                          (rule "concrete_not_1" (formula "36") (term "0,0"))
                                          (rule "concrete_or_2" (formula "36") (term "0"))
                                          (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "31"))
                                          (rule "qeq_literals" (formula "36") (term "0,0"))
                                          (rule "concrete_and_2" (formula "36") (term "0"))
                                          (rule "concrete_or_2" (formula "36"))
                                          (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "36"))
                                          (rule "mul_literals" (formula "5") (term "0,0"))
                                          (rule "add_zero_left" (formula "5") (term "0"))
                                          (rule "allLeft" (formula "35") (inst "t=i_5_0"))
                                          (rule "replace_known_right" (formula "35") (term "0,0,0,0,0,0,0") (ifseqformula "54"))
                                          (rule "concrete_or_2" (formula "35") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0,0,0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "35") (term "0,0,1,0,0,0"))
                                          (rule "leq_literals" (formula "35") (term "0,1,0,0,0"))
                                          (rule "concrete_and_2" (formula "35") (term "1,0,0,0"))
                                          (rule "concrete_or_4" (formula "35") (term "0,0,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "35") (term "1,0,0,0") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "35") (term "0,0,0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "35") (term "0,0,1,0,0,0"))
                                          (rule "leq_literals" (formula "35") (term "0,1,0,0,0"))
                                          (rule "concrete_and_2" (formula "35") (term "1,0,0,0"))
                                          (rule "concrete_or_4" (formula "35") (term "0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0,0,0") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "35") (term "0,1,0,0,0"))
                                          (rule "concrete_and_2" (formula "35") (term "1,0,0,0"))
                                          (rule "concrete_or_4" (formula "35") (term "0,0,0"))
                                          (rule "allLeft" (formula "35") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "33"))
                                          (rule "concrete_not_1" (formula "35") (term "0,0"))
                                          (rule "concrete_or_2" (formula "35") (term "0"))
                                          (rule "inEqSimp_homoInEq0" (formula "35") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "35") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,1"))
                                          (rule "mul_literals" (formula "35") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq2" (formula "35") (term "0") (ifseqformula "8"))
                                          (rule "greater_literals" (formula "35") (term "0,1,0,0"))
                                          (rule "concrete_impl_1" (formula "35") (term "1,0,0"))
                                          (rule "greater_literals" (formula "35") (term "0,0,0"))
                                          (rule "concrete_impl_1" (formula "35") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "0,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,0,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0"))
                                          (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "35") (term "0,0,0"))
                                          (rule "leq_literals" (formula "35") (term "0,0"))
                                          (rule "concrete_and_2" (formula "35") (term "0"))
                                          (rule "concrete_or_2" (formula "35"))
                                          (rule "allLeft" (formula "54") (inst "t=mul(i_5_0, Z(2(#)))"))
                                          (rule "replaceKnownSelect_taclet000000110200_18" (formula "54") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000110200_19" (formula "54") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "54") (term "0,0") (ifseqformula "6"))
                                          (rule "concrete_or_1" (formula "54") (term "0"))
                                          (rule "concrete_or_1" (formula "54"))
                                          (rule "true_left" (formula "54"))
                                          (rule "allLeft" (formula "54") (inst "t=add(Z(1(#)), mul(i_5_0, Z(2(#))))"))
                                          (rule "replaceKnownSelect_taclet000000110200_16" (formula "54") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000110200_17" (formula "54") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "54") (term "0,0") (ifseqformula "60"))
                                          (rule "concrete_or_2" (formula "54") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "54") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,1"))
                                          (rule "mul_literals" (formula "54") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "54") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "54") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1,0,0"))
                                          (rule "mul_literals" (formula "54") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "54") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "0,0"))
                                          (rule "inEqSimp_contradInEq5" (formula "54") (term "0") (ifseqformula "5"))
                                          (rule "greater_literals" (formula "54") (term "0,0,0"))
                                          (rule "concrete_impl_1" (formula "54") (term "0,0"))
                                          (rule "mul_literals" (formula "54") (term "1,0,0"))
                                          (rule "qeq_literals" (formula "54") (term "0,0"))
                                          (rule "concrete_and_2" (formula "54") (term "0"))
                                          (rule "concrete_or_2" (formula "54"))
                                          (rule "inEqSimp_exactShadow1" (formula "54") (ifseqformula "38"))
                                          (rule "greater_literals" (formula "54") (term "0"))
                                          (rule "concrete_impl_1" (formula "54"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "54") (term "0,0"))
                                          (rule "mul_literals" (formula "54") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "54"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                          (rule "mul_literals" (formula "54") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "54") (term "1,1"))
                                          (rule "inEqSimp_contradInEq4" (formula "8") (ifseqformula "54"))
                                          (rule "greater_literals" (formula "8") (term "0,1,0"))
                                          (rule "concrete_impl_1" (formula "8") (term "1,0"))
                                          (rule "greater_literals" (formula "8") (term "0,0"))
                                          (rule "concrete_impl_1" (formula "8") (term "0"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1"))
                                          (rule "mul_literals" (formula "8") (term "0,1"))
                                          (rule "polySimp_rightDist" (formula "8") (term "0"))
                                          (rule "mul_literals" (formula "8") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0"))
                                          (rule "add_literals" (formula "8") (term "0"))
                                          (rule "leq_literals" (formula "8"))
                                          (rule "closeFalse" (formula "8"))
                                       )
                                    )
                                 )
                                 (branch
                                    (rule "allRight" (formula "48") (inst "sk=i_4_0"))
                                    (rule "orRight" (formula "48"))
                                    (rule "orRight" (formula "48"))
                                    (rule "allRight" (formula "50") (inst "sk=j_1_0"))
                                    (rule "orRight" (formula "50"))
                                    (rule "orRight" (formula "50"))
                                    (rule "orRight" (formula "52"))
                                    (rule "orRight" (formula "52"))
                                    (rule "notRight" (formula "53"))
                                    (rule "inEqSimp_leqRight" (formula "49"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "50"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_geqRight" (formula "52"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_leqRight" (formula "52"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "54"))
                                    (rule "inEqSimp_contradEq7" (formula "54") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0"))
                                    (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                    (rule "add_literals" (formula "54") (term "0,0"))
                                    (rule "leq_literals" (formula "54") (term "0"))
                                    (rule "concrete_and_2" (formula "54"))
                                    (rule "false_right" (formula "54"))
                                    (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_2"))
                                    (rule "applyEq" (formula "6") (term "1") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                    (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "1") (term "0"))
                                    (rule "simplifySelectOfAnon" (formula "6"))
                                    (rule "elementOfFreshLocs" (formula "6") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "6") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "6") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "6") (term "0,0,0"))
                                    (rule "equalUnique" (formula "6") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "6") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "6") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "6") (term "0"))
                                    (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "6"))
                                    (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEq" (formula "53") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                                    (rule "mul_literals" (formula "5") (term "0,0"))
                                    (rule "add_zero_left" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "15"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                    (rule "concrete_or_1" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                    (rule "concrete_or_1" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "5") (term "0,0"))
                                    (rule "add_zero_left" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "15"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                    (rule "concrete_or_1" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "1") (ifseqformula "41"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (rule "concrete_or_2" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "2") (term "1,0,1") (ifseqformula "3"))
                                    (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "1"))
                                    (rule "concrete_or_3" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "allLeft" (formula "19") (inst "t=i_4_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "19") (term "0,1,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "19") (term "1,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "19") (term "0,0,0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "19") (term "1,0,0,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,1,0,0,0"))
                                    (rule "leq_literals" (formula "19") (term "0,1,0,0,0"))
                                    (rule "concrete_and_2" (formula "19") (term "1,0,0,0"))
                                    (rule "concrete_or_4" (formula "19") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "19") (term "0"))
                                    (rule "commute_or" (formula "19") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "19") (term "0,0"))
                                    (rule "commute_or_2" (formula "19") (term "0"))
                                    (rule "cut_direct" (formula "19") (term "1,0"))
                                    (branch "CUT: self.table[i_4_0 * 2] = null TRUE"
                                       (rule "concrete_or_3" (formula "20") (term "0"))
                                       (rule "all_unused" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "allLeft" (formula "18") (inst "t=i_4_0"))
                                       (rule "replace_known_left" (formula "18") (term "0,0,0,0") (ifseqformula "20"))
                                       (rule "concrete_not_1" (formula "18") (term "0,0,0"))
                                       (rule "concrete_or_2" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "18") (term "1,0"))
                                       (rule "concrete_or_4" (formula "18") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "18") (term "0,0,1"))
                                       (rule "leq_literals" (formula "18") (term "0,1"))
                                       (rule "concrete_and_2" (formula "18") (term "1"))
                                       (rule "concrete_or_4" (formula "18"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "11"))
                                       (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "21"))
                                       (rule "concrete_or_1" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "0") (ifseqformula "11"))
                                       (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "19"))
                                       (rule "concrete_or_1" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "allLeft" (formula "52") (inst "t=mul(i_4_0, Z(2(#)))"))
                                       (rule "replaceKnownSelect_taclet100000110200_16" (formula "52") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet100000110200_18" (formula "52") (term "0,0,0"))
                                       (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "2"))
                                       (rule "replace_known_right" (formula "52") (term "0,0") (ifseqformula "57"))
                                       (rule "concrete_or_2" (formula "52") (term "0"))
                                       (rule "inEqSimp_contradInEq5" (formula "52") (term "0") (ifseqformula "6"))
                                       (rule "greater_literals" (formula "52") (term "0,0,0"))
                                       (rule "concrete_impl_1" (formula "52") (term "0,0"))
                                       (rule "mul_literals" (formula "52") (term "1,0,0"))
                                       (rule "qeq_literals" (formula "52") (term "0,0"))
                                       (rule "concrete_and_2" (formula "52") (term "0"))
                                       (rule "concrete_or_2" (formula "52"))
                                       (rule "inEqSimp_exactShadow1" (formula "52") (ifseqformula "3"))
                                       (rule "greater_literals" (formula "52") (term "0"))
                                       (rule "concrete_impl_1" (formula "52"))
                                       (rule "polySimp_mulComm0" (formula "52") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                                       (rule "mul_literals" (formula "52") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "52") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "52"))
                                       (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                       (rule "polySimp_elimOne" (formula "52") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "52"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "inEqSimp_homoInEq1" (formula "25"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                       (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "25") (term "0"))
                                       (rule "add_literals" (formula "25") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0"))
                                       (rule "add_literals" (formula "25") (term "0"))
                                       (rule "leq_literals" (formula "25"))
                                       (rule "closeFalse" (formula "25"))
                                    )
                                    (branch "CUT: self.table[i_4_0 * 2] = null FALSE"
                                       (rule "concrete_or_4" (formula "19") (term "0"))
                                       (rule "allLeft" (formula "19") (inst "t=j_1_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "19") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "19") (term "1,0"))
                                       (rule "concrete_or_4" (formula "19") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "19") (term "0,0,1"))
                                       (rule "leq_literals" (formula "19") (term "0,1"))
                                       (rule "concrete_and_2" (formula "19") (term "1"))
                                       (rule "concrete_or_4" (formula "19"))
                                       (rule "notLeft" (formula "19"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "1") (ifseqformula "11"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "12"))
                                       (rule "cut_direct" (formula "1") (term "0"))
                                       (branch "CUT: self.table[j_1_0 * 2] = null TRUE"
                                          (rule "concrete_or_1" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEq" (formula "54") (term "0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "54"))
                                          (rule "allLeft" (formula "53") (inst "t=mul(i_4_0, Z(2(#)))"))
                                          (rule "replaceKnownSelect_taclet100000110200_16" (formula "53") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet100000110200_18" (formula "53") (term "0,0,0"))
                                          (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "4"))
                                          (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "59"))
                                          (rule "concrete_or_2" (formula "53") (term "0"))
                                          (rule "inEqSimp_contradInEq5" (formula "53") (term "0") (ifseqformula "8"))
                                          (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                                          (rule "greater_literals" (formula "53") (term "0,0,0"))
                                          (rule "concrete_impl_1" (formula "53") (term "0,0"))
                                          (rule "qeq_literals" (formula "53") (term "0,0"))
                                          (rule "concrete_and_2" (formula "53") (term "0"))
                                          (rule "concrete_or_2" (formula "53"))
                                          (rule "inEqSimp_exactShadow1" (formula "53") (ifseqformula "5"))
                                          (rule "greater_literals" (formula "53") (term "0"))
                                          (rule "concrete_impl_1" (formula "53"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,0"))
                                          (rule "mul_literals" (formula "53") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "53") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                          (rule "polySimp_elimOne" (formula "53") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "53"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "inEqSimp_homoInEq1" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                          (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0"))
                                          (rule "add_literals" (formula "26") (term "0"))
                                          (rule "leq_literals" (formula "26"))
                                          (rule "closeFalse" (formula "26"))
                                       )
                                       (branch "CUT: self.table[j_1_0 * 2] = null FALSE"
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "allLeft" (formula "53") (inst "t=mul(i_4_0, Z(2(#)))"))
                                          (rule "replaceKnownSelect_taclet100000110200_16" (formula "53") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet100000110200_18" (formula "53") (term "0,0,0"))
                                          (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "4"))
                                          (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "61"))
                                          (rule "concrete_or_2" (formula "53") (term "0"))
                                          (rule "inEqSimp_contradInEq5" (formula "53") (term "0") (ifseqformula "8"))
                                          (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                                          (rule "greater_literals" (formula "53") (term "0,0,0"))
                                          (rule "concrete_impl_1" (formula "53") (term "0,0"))
                                          (rule "qeq_literals" (formula "53") (term "0,0"))
                                          (rule "concrete_and_2" (formula "53") (term "0"))
                                          (rule "concrete_or_2" (formula "53"))
                                          (rule "inEqSimp_exactShadow1" (formula "53") (ifseqformula "5"))
                                          (rule "greater_literals" (formula "53") (term "0"))
                                          (rule "concrete_impl_1" (formula "53"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,0"))
                                          (rule "mul_literals" (formula "53") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "53") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                          (rule "polySimp_elimOne" (formula "53") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "53"))
                                          (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0"))
                                          (rule "qeq_literals" (formula "27") (term "0"))
                                          (rule "concrete_or_1" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "52"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "inEqSimp_homoInEq1" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                          (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0"))
                                          (rule "leq_literals" (formula "26"))
                                          (rule "closeFalse" (formula "26"))
                                       )
                                    )
                                 )
                              )
                              (branch
                                 (rule "nnf_ex2all" (formula "48"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                 (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                                 (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "39"))
                                 (rule "concrete_not_1" (formula "1") (term "1"))
                                 (rule "concrete_or_4" (formula "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (term "1") (ifseqformula "24"))
                                 (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "1") (term "0,0,1"))
                                 (rule "leq_literals" (formula "1") (term "0,1"))
                                 (rule "concrete_and_2" (formula "1") (term "1"))
                                 (rule "concrete_or_4" (formula "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "23") (term "0"))
                                 (rule "concrete_and_2" (formula "23"))
                                 (rule "closeFalse" (formula "23"))
                              )
                           )
                           (branch
                              (rule "nnf_ex2all" (formula "48"))
                              (rule "nnf_notAnd" (formula "1") (term "0"))
                              (rule "nnf_notAnd" (formula "1") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                              (rule "commute_or_2" (formula "1") (term "0"))
                              (rule "commute_or" (formula "1") (term "0,0"))
                              (rule "allLeft" (formula "1") (inst "t=i_1_0"))
                              (rule "replaceKnownSelect_taclet0200_12" (formula "1") (term "0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0200_13" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "44"))
                              (rule "concrete_not_1" (formula "1") (term "0,0"))
                              (rule "concrete_or_2" (formula "1") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "27"))
                              (rule "qeq_literals" (formula "1") (term "0,0"))
                              (rule "concrete_and_2" (formula "1") (term "0"))
                              (rule "concrete_or_2" (formula "1"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "28"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_literals" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch
                           (rule "allRight" (formula "48") (inst "sk=i_0_0"))
                           (rule "orRight" (formula "48"))
                           (rule "orRight" (formula "48"))
                           (rule "allRight" (formula "50") (inst "sk=j_0_0"))
                           (rule "orRight" (formula "50"))
                           (rule "orRight" (formula "51"))
                           (rule "orRight" (formula "50"))
                           (rule "orRight" (formula "52"))
                           (rule "notRight" (formula "54"))
                           (rule "inEqSimp_leqRight" (formula "49"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "50"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_geqRight" (formula "52"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_leqRight" (formula "53"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "54"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=arr_2"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                           (rule "eqClose" (formula "1") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                           (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "1") (term "0,0"))
                           (rule "ifthenelse_true" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=arr_3"))
                           (rule "simplifySelectOfAnon" (formula "6"))
                           (rule "elementOfFreshLocs" (formula "6") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "6") (term "0,0,0,0"))
                           (rule "eqClose" (formula "6") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "6") (term "0,0,0"))
                           (rule "equalUnique" (formula "6") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "6") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "6") (term "0,0"))
                           (rule "ifthenelse_true" (formula "6") (term "0"))
                           (rule "applyEqReverse" (formula "7") (term "0") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                           (rule "times_zero_1" (formula "5") (term "0,0"))
                           (rule "add_zero_left" (formula "5") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "mul_literals" (formula "5") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "16"))
                           (rule "leq_literals" (formula "5") (term "0"))
                           (rule "concrete_or_1" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "jdiv_axiom" (formula "2") (term "0"))
                           (rule "eqSymm" (formula "2"))
                           (rule "polyDiv_pullOut" (formula "2") (term "0,2,0") (inst "polyDivCoeff=mul(genHash(java.lang.Object::select(anon_heap_LOOP<<anonHeapFunction>>,
                                     java.lang.Object[]::select(heap,
                                                                self,
                                                                java.util.VerifiedIdentityHashMap::$table),
                                     arr(mul(i_0_0,
                                             Z(2(#))))),
            i_0),
    Z(neglit(1(#))))"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0,2,0"))
                           (rule "equal_literals" (formula "2") (term "0,0,2,0"))
                           (rule "ifthenelse_false" (formula "2") (term "0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,2,0"))
                           (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,0,2,0"))
                           (rule "add_literals" (formula "2") (term "1,0,0,0,2,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0,0,0,2,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "2,0"))
                           (rule "polySimp_addComm0" (formula "2") (term "1,2,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "2,0"))
                           (rule "polySimp_mulAssoc" (formula "2") (term "0,2,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,2,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0,2,0"))
                           (rule "div_axiom" (formula "2") (term "1,0") (inst "quotient=quotient_2"))
                           (rule "mul_literals" (formula "2") (term "1,1,1,1,1"))
                           (rule "qeq_literals" (formula "2") (term "0,1,1"))
                           (rule "ifthenelse_true_for" (formula "2") (term "1,1"))
                           (rule "equal_literals" (formula "2") (term "0"))
                           (rule "concrete_or_2" (formula "2"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "2"))
                           (rule "polySimp_addComm1" (formula "4") (term "1"))
                           (rule "add_literals" (formula "4") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "applyEq" (formula "5") (term "0,1,2,0") (ifseqformula "2"))
                           (rule "polySimp_addComm0" (formula "5") (term "2,0"))
                           (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "2"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "7"))
                           (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_2)") (inst "elimGcdLeftDiv=i_0_0") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "3") (term "0,0"))
                           (rule "concrete_or_2" (formula "3") (term "0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "3") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0"))
                           (rule "leq_literals" (formula "3") (term "0"))
                           (rule "concrete_or_2" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "9"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "28"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "ifthenelse_split" (formula "8") (term "0"))
                           (branch " genHash((self.table@heap)[i_0_0 * 2]@anon_heap_LOOP<<anonHeapFunction>>, i_0) >= 0 TRUE"
                              (rule "eqSymm" (formula "9"))
                              (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_commuteLeq" (formula "10"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "11"))
                              (rule "mul_literals" (formula "8") (term "0,0"))
                              (rule "add_zero_left" (formula "8") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "mul_literals" (formula "8") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=i_0_0") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "8") (term "0,0"))
                              (rule "concrete_or_2" (formula "8") (term "0"))
                              (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0"))
                              (rule "leq_literals" (formula "8") (term "0"))
                              (rule "concrete_or_2" (formula "8"))
                              (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "8"))
                              (rule "leq_literals" (formula "14") (term "0"))
                              (rule "concrete_or_1" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "7"))
                              (rule "mul_literals" (formula "9") (term "0,0"))
                              (rule "add_zero_left" (formula "9") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                              (rule "mul_literals" (formula "9") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "9") (term "0,0"))
                              (rule "concrete_or_2" (formula "9") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                              (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0"))
                              (rule "leq_literals" (formula "9") (term "0"))
                              (rule "concrete_or_2" (formula "9"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0"))
                              (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1"))
                              (rule "polySimp_rightDist" (formula "12") (term "1"))
                              (rule "mul_literals" (formula "12") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "14"))
                              (rule "mul_literals" (formula "8") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0"))
                              (rule "add_literals" (formula "8") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "mul_literals" (formula "8") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "25"))
                              (rule "leq_literals" (formula "8") (term "0"))
                              (rule "concrete_or_1" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "allLeft" (formula "27") (inst "t=i_0_0"))
                              (rule "inEqSimp_contradInEq0" (formula "27") (term "1") (ifseqformula "14"))
                              (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "27") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                              (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                              (rule "add_literals" (formula "27") (term "0,0,1"))
                              (rule "leq_literals" (formula "27") (term "0,1"))
                              (rule "concrete_and_2" (formula "27") (term "1"))
                              (rule "concrete_or_4" (formula "27"))
                              (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "27") (term "0,1"))
                              (rule "concrete_and_2" (formula "27") (term "1"))
                              (rule "concrete_or_4" (formula "27"))
                              (rule "allLeft" (formula "60") (inst "t=mul(j_0_0, Z(2(#)))"))
                              (rule "replaceKnownSelect_taclet100110200_18" (formula "60") (term "0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet100110200_19" (formula "60") (term "0,0,0"))
                              (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "15"))
                              (rule "concrete_or_1" (formula "60") (term "0"))
                              (rule "concrete_or_1" (formula "60"))
                              (rule "true_left" (formula "60"))
                              (rule "allLeft" (formula "45") (inst "t=i_0_0"))
                              (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0,0,0,0,0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                              (rule "concrete_and_2" (formula "45") (term "1,0,0,0,0,0"))
                              (rule "concrete_or_4" (formula "45") (term "0,0,0,0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "45") (term "1,0,0,0,0") (ifseqformula "14"))
                              (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "45") (term "0,0,0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "45") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "45") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "45") (term "0,1,0,0,0,0"))
                              (rule "concrete_and_2" (formula "45") (term "1,0,0,0,0"))
                              (rule "concrete_or_4" (formula "45") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "45") (term "0,0"))
                              (rule "commute_or_2" (formula "45") (term "0"))
                              (rule "commute_or" (formula "45") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "45") (term "0,0,0"))
                              (rule "commute_or_2" (formula "45") (term "0,0"))
                              (rule "cut_direct" (formula "45") (term "1,0"))
                              (branch "CUT: genHash(self.table[i_0_0 * 2], i_0) <= i_0_0 * 2 TRUE"
                                 (rule "concrete_or_3" (formula "46") (term "0"))
                                 (rule "all_unused" (formula "46"))
                                 (rule "true_left" (formula "46"))
                                 (rule "allLeft" (formula "61") (inst "t=mul(i_0_0, Z(2(#)))"))
                                 (rule "replaceKnownSelect_taclet100110200_16" (formula "61") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet100110200_17" (formula "61") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "66"))
                                 (rule "concrete_or_2" (formula "61") (term "0"))
                                 (rule "inEqSimp_contradInEq5" (formula "61") (term "0") (ifseqformula "8"))
                                 (rule "greater_literals" (formula "61") (term "0,0,0"))
                                 (rule "concrete_impl_1" (formula "61") (term "0,0"))
                                 (rule "mul_literals" (formula "61") (term "1,0,0"))
                                 (rule "qeq_literals" (formula "61") (term "0,0"))
                                 (rule "concrete_and_2" (formula "61") (term "0"))
                                 (rule "concrete_or_2" (formula "61"))
                                 (rule "inEqSimp_exactShadow1" (formula "61") (ifseqformula "14"))
                                 (rule "greater_literals" (formula "61") (term "0"))
                                 (rule "concrete_impl_1" (formula "61"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                                 (rule "mul_literals" (formula "61") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "61") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "61"))
                                 (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                                 (rule "polySimp_elimOne" (formula "61") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "33") (ifseqformula "61"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "inEqSimp_homoInEq1" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "33") (term "0"))
                                 (rule "add_literals" (formula "33") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "33") (term "1,0"))
                                 (rule "add_zero_right" (formula "33") (term "0"))
                                 (rule "leq_literals" (formula "33"))
                                 (rule "closeFalse" (formula "33"))
                              )
                              (branch "CUT: genHash(self.table[i_0_0 * 2], i_0) <= i_0_0 * 2 FALSE"
                                 (rule "concrete_or_4" (formula "45") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "62"))
                                 (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "cut_direct" (formula "46") (term "1,0"))
                                 (branch "CUT: self.table[i_0_0 * 2] = null TRUE"
                                    (rule "concrete_or_3" (formula "47") (term "0"))
                                    (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "46"))
                                    (rule "concrete_not_1" (formula "28") (term "0"))
                                    (rule "concrete_or_2" (formula "28"))
                                    (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "46"))
                                    (rule "all_unused" (formula "47"))
                                    (rule "true_left" (formula "47"))
                                    (rule "allLeft" (formula "62") (inst "t=mul(i_0_0, Z(2(#)))"))
                                    (rule "replaceKnownSelect_taclet100110200_16" (formula "62") (term "0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet100110200_17" (formula "62") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "67"))
                                    (rule "concrete_or_2" (formula "62") (term "0"))
                                    (rule "inEqSimp_contradInEq5" (formula "62") (term "0") (ifseqformula "9"))
                                    (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                    (rule "greater_literals" (formula "62") (term "0,0,0"))
                                    (rule "concrete_impl_1" (formula "62") (term "0,0"))
                                    (rule "qeq_literals" (formula "62") (term "0,0"))
                                    (rule "concrete_and_2" (formula "62") (term "0"))
                                    (rule "concrete_or_2" (formula "62"))
                                    (rule "inEqSimp_exactShadow1" (formula "62") (ifseqformula "15"))
                                    (rule "greater_literals" (formula "62") (term "0"))
                                    (rule "concrete_impl_1" (formula "62"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "62") (term "1,0"))
                                    (rule "mul_literals" (formula "62") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "62") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "62"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                    (rule "polySimp_elimOne" (formula "62") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "35") (ifseqformula "62"))
                                    (rule "inEqSimp_homoInEq0" (formula "35") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                                    (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0"))
                                    (rule "qeq_literals" (formula "35") (term "0"))
                                    (rule "concrete_or_1" (formula "35"))
                                    (rule "true_left" (formula "35"))
                                    (rule "inEqSimp_contradInEq0" (formula "34") (ifseqformula "61"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "inEqSimp_homoInEq1" (formula "34"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                    (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "34") (term "0"))
                                    (rule "add_literals" (formula "34") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "34") (term "1,0"))
                                    (rule "add_zero_right" (formula "34") (term "0"))
                                    (rule "leq_literals" (formula "34"))
                                    (rule "closeFalse" (formula "34"))
                                 )
                                 (branch "CUT: self.table[i_0_0 * 2] = null FALSE"
                                    (rule "concrete_or_4" (formula "46") (term "0"))
                                    (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "63"))
                                    (rule "concrete_not_2" (formula "28") (term "0"))
                                    (rule "concrete_or_1" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "allLeft" (formula "47") (inst "t=i_0_0"))
                                    (rule "replace_known_right" (formula "47") (term "0,0,0,0,0,0,0") (ifseqformula "63"))
                                    (rule "concrete_or_2" (formula "47") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0,0,0,0,0") (ifseqformula "9"))
                                    (rule "qeq_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "47") (term "1,0,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "47") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "47") (term "1,0,0,0,0") (ifseqformula "15"))
                                    (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "47") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "47") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "47") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "47") (term "0,1,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "47") (term "1,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "47") (term "0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0,0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "47") (term "1,1,0,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "47") (term "0,0,1,0,0,0"))
                                    (rule "leq_literals" (formula "47") (term "0,1,0,0,0"))
                                    (rule "concrete_and_2" (formula "47") (term "1,0,0,0"))
                                    (rule "concrete_or_4" (formula "47") (term "0,0,0"))
                                    (rule "allLeft" (formula "62") (inst "t=mul(i_0_0, Z(2(#)))"))
                                    (rule "replaceKnownSelect_taclet100110200_16" (formula "62") (term "0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet100110200_17" (formula "62") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "68"))
                                    (rule "concrete_or_2" (formula "62") (term "0"))
                                    (rule "inEqSimp_contradInEq5" (formula "62") (term "0") (ifseqformula "9"))
                                    (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                    (rule "greater_literals" (formula "62") (term "0,0,0"))
                                    (rule "concrete_impl_1" (formula "62") (term "0,0"))
                                    (rule "qeq_literals" (formula "62") (term "0,0"))
                                    (rule "concrete_and_2" (formula "62") (term "0"))
                                    (rule "concrete_or_2" (formula "62"))
                                    (rule "inEqSimp_exactShadow1" (formula "62") (ifseqformula "15"))
                                    (rule "greater_literals" (formula "62") (term "0"))
                                    (rule "concrete_impl_1" (formula "62"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "62") (term "1,0"))
                                    (rule "mul_literals" (formula "62") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "62") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "62"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                    (rule "polySimp_elimOne" (formula "62") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "62") (ifseqformula "33"))
                                    (rule "andLeft" (formula "62"))
                                    (rule "inEqSimp_homoInEq1" (formula "62"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "62") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0"))
                                    (rule "mul_literals" (formula "62") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "62") (term "0"))
                                    (rule "polySimp_addComm0" (formula "62") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "62") (term "0"))
                                    (rule "add_literals" (formula "62") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "62") (term "1,0"))
                                    (rule "add_literals" (formula "62") (term "0"))
                                    (rule "leq_literals" (formula "62"))
                                    (rule "closeFalse" (formula "62"))
                                 )
                              )
                           )
                           (branch " genHash((self.table@heap)[i_0_0 * 2]@anon_heap_LOOP<<anonHeapFunction>>, i_0) >= 0 FALSE"
                              (rule "eqSymm" (formula "8"))
                              (rule "inEqSimp_geqRight" (formula "58"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq0" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0"))
                              (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "10"))
                              (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0"))
                              (rule "polySimp_pullOutFactor2" (formula "7") (term "0,0"))
                              (rule "add_literals" (formula "7") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1"))
                              (rule "polySimp_elimOne" (formula "7") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                              (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "8") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(2(#))"))
                              (rule "leq_literals" (formula "8") (term "0,0"))
                              (rule "concrete_or_2" (formula "8") (term "0"))
                              (rule "neg_literal" (formula "8") (term "0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0"))
                              (rule "qeq_literals" (formula "8") (term "0"))
                              (rule "concrete_or_2" (formula "8"))
                              (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "8"))
                              (rule "leq_literals" (formula "4") (term "0"))
                              (rule "concrete_or_1" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0"))
                              (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1"))
                              (rule "polySimp_rightDist" (formula "6") (term "1"))
                              (rule "mul_literals" (formula "6") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                              (rule "allLeft" (formula "27") (inst "t=i_0_0"))
                              (rule "inEqSimp_contradInEq0" (formula "27") (term "1") (ifseqformula "13"))
                              (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "27") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                              (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                              (rule "add_literals" (formula "27") (term "0,0,1"))
                              (rule "leq_literals" (formula "27") (term "0,1"))
                              (rule "concrete_and_2" (formula "27") (term "1"))
                              (rule "concrete_or_4" (formula "27"))
                              (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "14"))
                              (rule "qeq_literals" (formula "27") (term "0,1"))
                              (rule "concrete_and_2" (formula "27") (term "1"))
                              (rule "concrete_or_4" (formula "27"))
                              (rule "allLeft" (formula "60") (inst "t=mul(j_0_0, Z(2(#)))"))
                              (rule "replaceKnownSelect_taclet100110200_18" (formula "60") (term "0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet100110200_19" (formula "60") (term "0,0,0"))
                              (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "15"))
                              (rule "concrete_or_1" (formula "60") (term "0"))
                              (rule "concrete_or_1" (formula "60"))
                              (rule "true_left" (formula "60"))
                              (rule "allLeft" (formula "60") (inst "t=mul(i_0_0, Z(2(#)))"))
                              (rule "replaceKnownSelect_taclet100110200_16" (formula "60") (term "0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet100110200_17" (formula "60") (term "0,0,0"))
                              (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "65"))
                              (rule "concrete_or_2" (formula "60") (term "0"))
                              (rule "inEqSimp_contradInEq5" (formula "60") (term "0") (ifseqformula "14"))
                              (rule "greater_literals" (formula "60") (term "0,0,0"))
                              (rule "concrete_impl_1" (formula "60") (term "0,0"))
                              (rule "mul_literals" (formula "60") (term "1,0,0"))
                              (rule "qeq_literals" (formula "60") (term "0,0"))
                              (rule "concrete_and_2" (formula "60") (term "0"))
                              (rule "concrete_or_2" (formula "60"))
                              (rule "inEqSimp_exactShadow1" (formula "60") (ifseqformula "13"))
                              (rule "greater_literals" (formula "60") (term "0"))
                              (rule "concrete_impl_1" (formula "60"))
                              (rule "polySimp_mulComm0" (formula "60") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "60") (term "1,0"))
                              (rule "mul_literals" (formula "60") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "60") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "60"))
                              (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                              (rule "polySimp_elimOne" (formula "60") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "33") (ifseqformula "60"))
                              (rule "andLeft" (formula "33"))
                              (rule "inEqSimp_homoInEq1" (formula "33"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0"))
                              (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "33") (term "0"))
                              (rule "add_literals" (formula "33") (term "1,1,0"))
                              (rule "times_zero_1" (formula "33") (term "1,0"))
                              (rule "add_zero_right" (formula "33") (term "0"))
                              (rule "leq_literals" (formula "33"))
                              (rule "closeFalse" (formula "33"))
                           )
                        )
                     )
                     (branch
                        (rule "allRight" (formula "48") (inst "sk=i_6_0"))
                        (rule "orRight" (formula "48"))
                        (rule "orRight" (formula "49"))
                        (rule "orRight" (formula "48"))
                        (rule "orRight" (formula "50"))
                        (rule "allRight" (formula "52") (inst "sk=j_0"))
                        (rule "orRight" (formula "52"))
                        (rule "notRight" (formula "53"))
                        (rule "inEqSimp_leqRight" (formula "49"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "50"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_leqRight" (formula "52"))
                        (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "53") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "53") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "53") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "53") (term "0,1,0,0"))
                        (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=arr_2"))
                        (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "54") (term "0,0,0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                        (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                        (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                        (rule "eqClose" (formula "1") (term "0,0,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                        (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                        (rule "concrete_or_1" (formula "1") (term "0,0"))
                        (rule "ifthenelse_true" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "54") (term "0,0,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_3"))
                        (rule "simplifySelectOfAnon" (formula "4"))
                        (rule "elementOfFreshLocs" (formula "4") (term "1,0,0"))
                        (rule "elementOfAllFields" (formula "4") (term "0,0,0,0"))
                        (rule "eqClose" (formula "4") (term "0,0,0,0"))
                        (rule "concrete_and_1" (formula "4") (term "0,0,0"))
                        (rule "equalUnique" (formula "4") (term "0,0,0,0"))
                        (rule "concrete_not_2" (formula "4") (term "0,0,0"))
                        (rule "concrete_or_1" (formula "4") (term "0,0"))
                        (rule "ifthenelse_true" (formula "4") (term "0"))
                        (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "3") (term "0,0"))
                        (rule "add_zero_left" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "14"))
                        (rule "leq_literals" (formula "3") (term "0"))
                        (rule "concrete_or_1" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "commute_or" (formula "53") (term "0"))
                        (rule "andRight" (formula "53"))
                        (branch
                           (rule "orRight" (formula "53"))
                           (rule "inEqSimp_geqRight" (formula "54"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_geqRight" (formula "54"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(1(#)), i_6_0)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                           (rule "leq_literals" (formula "3") (term "0,0"))
                           (rule "concrete_or_2" (formula "3") (term "0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "3") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0"))
                           (rule "leq_literals" (formula "3") (term "0"))
                           (rule "concrete_or_2" (formula "3"))
                           (rule "inEqSimp_exactShadow2" (formula "3") (ifseqformula "1"))
                           (rule "greater_literals" (formula "3") (term "0"))
                           (rule "concrete_impl_1" (formula "3"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "inEqSimp_exactShadow2" (formula "7") (ifseqformula "3"))
                           (rule "greater_literals" (formula "7") (term "0"))
                           (rule "concrete_impl_1" (formula "7"))
                           (rule "mul_literals" (formula "7") (term "1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "0,0"))
                           (rule "add_zero_left" (formula "7") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                           (rule "mul_literals" (formula "7") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "19"))
                           (rule "leq_literals" (formula "7") (term "0"))
                           (rule "concrete_or_1" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "44"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                           (rule "concrete_or_2" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0") (ifseqformula "45"))
                           (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "10"))
                           (rule "concrete_or_1" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "allLeft" (formula "21") (inst "t=i_6_0"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "21") (term "0,1,0"))
                           (rule "concrete_and_2" (formula "21") (term "1,0"))
                           (rule "concrete_or_4" (formula "21") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "21") (term "1") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                           (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                           (rule "add_literals" (formula "21") (term "0,0,1"))
                           (rule "leq_literals" (formula "21") (term "0,1"))
                           (rule "concrete_and_2" (formula "21") (term "1"))
                           (rule "concrete_or_4" (formula "21"))
                           (rule "cut_direct" (formula "21") (term "0,0"))
                           (branch "CUT: self.table[i_6_0 * 2] = null TRUE"
                              (rule "concrete_not_1" (formula "22") (term "0"))
                              (rule "concrete_or_2" (formula "22"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "14"))
                              (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "22"))
                              (rule "concrete_or_1" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "14"))
                              (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "23"))
                              (rule "concrete_or_1" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "allLeft" (formula "55") (inst "t=mul(j_0, Z(2(#)))"))
                              (rule "replaceKnownSelect_taclet10110200_18" (formula "55") (term "0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet10110200_19" (formula "55") (term "0,0,0"))
                              (rule "replace_known_left" (formula "55") (term "0,0") (ifseqformula "9"))
                              (rule "concrete_or_1" (formula "55") (term "0"))
                              (rule "concrete_or_1" (formula "55"))
                              (rule "true_left" (formula "55"))
                              (rule "allLeft" (formula "55") (inst "t=mul(i_6_0, Z(2(#)))"))
                              (rule "replaceKnownSelect_taclet10110200_16" (formula "55") (term "0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet10110200_17" (formula "55") (term "0,0,0"))
                              (rule "replace_known_right" (formula "55") (term "0,0") (ifseqformula "60"))
                              (rule "concrete_or_2" (formula "55") (term "0"))
                              (rule "inEqSimp_contradInEq2" (formula "55") (term "1") (ifseqformula "4"))
                              (rule "greater_literals" (formula "55") (term "0,1,0,1"))
                              (rule "concrete_impl_1" (formula "55") (term "1,0,1"))
                              (rule "greater_literals" (formula "55") (term "0,0,1"))
                              (rule "concrete_impl_1" (formula "55") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "55") (term "0,0,1"))
                              (rule "mul_literals" (formula "55") (term "0,0,0,1"))
                              (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "55") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "55") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0,1"))
                              (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                              (rule "add_literals" (formula "55") (term "0,0,1"))
                              (rule "leq_literals" (formula "55") (term "0,1"))
                              (rule "concrete_and_2" (formula "55") (term "1"))
                              (rule "concrete_or_4" (formula "55"))
                              (rule "inEqSimp_contradInEq5" (formula "55") (ifseqformula "8"))
                              (rule "greater_literals" (formula "55") (term "0,0"))
                              (rule "concrete_impl_1" (formula "55") (term "0"))
                              (rule "mul_literals" (formula "55") (term "1,0"))
                              (rule "qeq_literals" (formula "55") (term "0"))
                              (rule "concrete_and_2" (formula "55"))
                              (rule "closeFalse" (formula "55"))
                           )
                           (branch "CUT: self.table[i_6_0 * 2] = null FALSE"
                              (rule "concrete_not_2" (formula "21") (term "0"))
                              (rule "concrete_or_1" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "14"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                              (rule "concrete_or_2" (formula "1"))
                              (rule "allLeft" (formula "23") (inst "t=i_6_0"))
                              (rule "replace_known_right" (formula "23") (term "0,0,0,0,0,0") (ifseqformula "56"))
                              (rule "concrete_or_2" (formula "23") (term "0,0,0,0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0,0,0") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0"))
                              (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,1,0,0,0"))
                              (rule "leq_literals" (formula "23") (term "0,1,0,0,0"))
                              (rule "concrete_and_2" (formula "23") (term "1,0,0,0"))
                              (rule "concrete_or_4" (formula "23") (term "0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "23") (term "0,1,0,0,0"))
                              (rule "concrete_and_2" (formula "23") (term "1,0,0,0"))
                              (rule "concrete_or_4" (formula "23") (term "0,0,0"))
                              (rule "commute_or_2" (formula "23") (term "0"))
                              (rule "allLeft" (formula "55") (inst "t=mul(i_6_0, Z(2(#)))"))
                              (rule "replaceKnownSelect_taclet10110200_16" (formula "55") (term "0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet10110200_17" (formula "55") (term "0,0,0"))
                              (rule "replace_known_right" (formula "55") (term "0,0") (ifseqformula "61"))
                              (rule "concrete_or_2" (formula "55") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "55") (term "1") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "55") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "55") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                              (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                              (rule "add_literals" (formula "55") (term "0,0,1"))
                              (rule "leq_literals" (formula "55") (term "0,1"))
                              (rule "concrete_and_2" (formula "55") (term "1"))
                              (rule "concrete_or_4" (formula "55"))
                              (rule "inEqSimp_contradInEq5" (formula "55") (ifseqformula "9"))
                              (rule "greater_literals" (formula "55") (term "0,0"))
                              (rule "concrete_impl_1" (formula "55") (term "0"))
                              (rule "mul_literals" (formula "55") (term "1,0"))
                              (rule "qeq_literals" (formula "55") (term "0"))
                              (rule "concrete_and_2" (formula "55"))
                              (rule "closeFalse" (formula "55"))
                           )
                        )
                        (branch
                           (rule "orRight" (formula "53"))
                           (rule "inEqSimp_leqRight" (formula "53"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "54"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "2") (term "0,0"))
                           (rule "add_zero_left" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
                           (rule "leq_literals" (formula "6") (term "0"))
                           (rule "concrete_or_1" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                           (rule "mul_literals" (formula "2") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "16"))
                           (rule "leq_literals" (formula "2") (term "0"))
                           (rule "concrete_or_1" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "42"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                           (rule "concrete_or_2" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "0") (ifseqformula "43"))
                           (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "8"))
                           (rule "concrete_or_1" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "allLeft" (formula "19") (inst "t=i_6_0"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "19") (term "0,1,0"))
                           (rule "concrete_and_2" (formula "19") (term "1,0"))
                           (rule "concrete_or_4" (formula "19") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                           (rule "add_literals" (formula "19") (term "0,0,1"))
                           (rule "leq_literals" (formula "19") (term "0,1"))
                           (rule "concrete_and_2" (formula "19") (term "1"))
                           (rule "concrete_or_4" (formula "19"))
                           (rule "cut_direct" (formula "19") (term "0,0"))
                           (branch "CUT: self.table[i_6_0 * 2] = null TRUE"
                              (rule "concrete_not_1" (formula "20") (term "0"))
                              (rule "concrete_or_2" (formula "20"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "12"))
                              (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "20"))
                              (rule "concrete_or_1" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "12"))
                              (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "21"))
                              (rule "concrete_or_1" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "allLeft" (formula "53") (inst "t=mul(j_0, Z(2(#)))"))
                              (rule "replaceKnownSelect_taclet10110200_18" (formula "53") (term "0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet10110200_19" (formula "53") (term "0,0,0"))
                              (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "7"))
                              (rule "concrete_or_1" (formula "53") (term "0"))
                              (rule "concrete_or_1" (formula "53"))
                              (rule "true_left" (formula "53"))
                              (rule "allLeft" (formula "53") (inst "t=mul(i_6_0, Z(2(#)))"))
                              (rule "replaceKnownSelect_taclet10110200_16" (formula "53") (term "0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet10110200_17" (formula "53") (term "0,0,0"))
                              (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "58"))
                              (rule "concrete_or_2" (formula "53") (term "0"))
                              (rule "inEqSimp_contradInEq5" (formula "53") (term "0") (ifseqformula "3"))
                              (rule "greater_literals" (formula "53") (term "0,0,0"))
                              (rule "concrete_impl_1" (formula "53") (term "0,0"))
                              (rule "mul_literals" (formula "53") (term "1,0,0"))
                              (rule "qeq_literals" (formula "53") (term "0,0"))
                              (rule "concrete_and_2" (formula "53") (term "0"))
                              (rule "concrete_or_2" (formula "53"))
                              (rule "inEqSimp_exactShadow1" (formula "53") (ifseqformula "6"))
                              (rule "greater_literals" (formula "53") (term "0"))
                              (rule "concrete_impl_1" (formula "53"))
                              (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "53") (term "1,0"))
                              (rule "mul_literals" (formula "53") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "53") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                              (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                              (rule "polySimp_elimOne" (formula "53") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "53"))
                              (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                              (rule "add_literals" (formula "27") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
                              (rule "add_literals" (formula "27") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0"))
                              (rule "add_literals" (formula "27") (term "0,0"))
                              (rule "qeq_literals" (formula "27") (term "0"))
                              (rule "concrete_or_1" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "inEqSimp_contradInEq1" (formula "52") (ifseqformula "26"))
                              (rule "andLeft" (formula "52"))
                              (rule "inEqSimp_homoInEq1" (formula "52"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                              (rule "mul_literals" (formula "52") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "52") (term "0"))
                              (rule "polySimp_addComm0" (formula "52") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "52") (term "0"))
                              (rule "add_literals" (formula "52") (term "1,1,0"))
                              (rule "times_zero_1" (formula "52") (term "1,0"))
                              (rule "add_literals" (formula "52") (term "0"))
                              (rule "leq_literals" (formula "52"))
                              (rule "closeFalse" (formula "52"))
                           )
                           (branch "CUT: self.table[i_6_0 * 2] = null FALSE"
                              (rule "concrete_not_2" (formula "19") (term "0"))
                              (rule "concrete_or_1" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "12"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                              (rule "concrete_or_2" (formula "1"))
                              (rule "allLeft" (formula "38") (inst "t=i_6_0"))
                              (rule "replace_known_right" (formula "38") (term "0,0,0,0,0,0,0") (ifseqformula "54"))
                              (rule "concrete_or_2" (formula "38") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0,0,0,0,0") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                              (rule "concrete_and_2" (formula "38") (term "1,0,0,0,0,0"))
                              (rule "concrete_or_4" (formula "38") (term "0,0,0,0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "38") (term "1,0,0,0,0") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "38") (term "0,0,0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "38") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "38") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                              (rule "concrete_and_2" (formula "38") (term "1,0,0,0,0"))
                              (rule "concrete_or_4" (formula "38") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "38") (term "0,0"))
                              (rule "commute_or_2" (formula "38") (term "0"))
                              (rule "cut_direct" (formula "38") (term "1,0"))
                              (branch "CUT: genHash(self.table[i_6_0 * 2], i_0) <= i_6_0 * 2 TRUE"
                                 (rule "concrete_or_3" (formula "39") (term "0"))
                                 (rule "all_unused" (formula "39"))
                                 (rule "true_left" (formula "39"))
                                 (rule "allLeft" (formula "53") (inst "t=mul(j_0, Z(2(#)))"))
                                 (rule "replaceKnownSelect_taclet10110200_18" (formula "53") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10110200_19" (formula "53") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "8"))
                                 (rule "concrete_or_1" (formula "53") (term "0"))
                                 (rule "concrete_or_1" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "allLeft" (formula "21") (inst "t=i_6_0"))
                                 (rule "replace_known_right" (formula "21") (term "0,0,0,0,0,0") (ifseqformula "55"))
                                 (rule "concrete_or_2" (formula "21") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0,0,0,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "21") (term "0,1,0,0,0,0"))
                                 (rule "concrete_and_2" (formula "21") (term "1,0,0,0,0"))
                                 (rule "concrete_or_4" (formula "21") (term "0,0,0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "21") (term "1,0,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,1,0,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,1,0,0,0"))
                                 (rule "leq_literals" (formula "21") (term "0,1,0,0,0"))
                                 (rule "concrete_and_2" (formula "21") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "21") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "21") (term "0"))
                                 (rule "allLeft" (formula "54") (inst "t=mul(i_6_0, Z(2(#)))"))
                                 (rule "replaceKnownSelect_taclet10110200_16" (formula "54") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10110200_17" (formula "54") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "54") (term "0,0") (ifseqformula "60"))
                                 (rule "concrete_or_2" (formula "54") (term "0"))
                                 (rule "inEqSimp_contradInEq5" (formula "54") (term "0") (ifseqformula "4"))
                                 (rule "greater_literals" (formula "54") (term "0,0,0"))
                                 (rule "concrete_impl_1" (formula "54") (term "0,0"))
                                 (rule "mul_literals" (formula "54") (term "1,0,0"))
                                 (rule "qeq_literals" (formula "54") (term "0,0"))
                                 (rule "concrete_and_2" (formula "54") (term "0"))
                                 (rule "concrete_or_2" (formula "54"))
                                 (rule "inEqSimp_exactShadow1" (formula "54") (ifseqformula "7"))
                                 (rule "greater_literals" (formula "54") (term "0"))
                                 (rule "concrete_impl_1" (formula "54"))
                                 (rule "polySimp_mulComm0" (formula "54") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "54") (term "1,0"))
                                 (rule "mul_literals" (formula "54") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "54") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                 (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                 (rule "polySimp_elimOne" (formula "54") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "54"))
                                 (rule "andLeft" (formula "26"))
                                 (rule "inEqSimp_homoInEq1" (formula "26"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "26") (term "0"))
                                 (rule "add_literals" (formula "26") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0"))
                                 (rule "add_literals" (formula "26") (term "0"))
                                 (rule "leq_literals" (formula "26"))
                                 (rule "closeFalse" (formula "26"))
                              )
                              (branch "CUT: genHash(self.table[i_6_0 * 2], i_0) <= i_6_0 * 2 FALSE"
                                 (rule "concrete_or_4" (formula "38") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "54"))
                                 (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "allLeft" (formula "39") (inst "t=j_0"))
                                 (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                 (rule "concrete_and_2" (formula "39") (term "1,0"))
                                 (rule "concrete_or_4" (formula "39") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "39") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "39") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                 (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "39") (term "0,0,1"))
                                 (rule "leq_literals" (formula "39") (term "0,1"))
                                 (rule "concrete_and_2" (formula "39") (term "1"))
                                 (rule "concrete_or_4" (formula "39"))
                                 (rule "notLeft" (formula "39"))
                                 (rule "allLeft" (formula "39") (inst "t=i_1_0"))
                                 (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "36"))
                                 (rule "concrete_not_1" (formula "39") (term "0,0"))
                                 (rule "concrete_or_2" (formula "39") (term "0"))
                                 (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "34"))
                                 (rule "qeq_literals" (formula "39") (term "0,0"))
                                 (rule "concrete_and_2" (formula "39") (term "0"))
                                 (rule "concrete_or_2" (formula "39"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "39"))
                                 (rule "mul_literals" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "mul_literals" (formula "5") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "5"))
                                 (rule "leq_literals" (formula "35") (term "0"))
                                 (rule "concrete_or_1" (formula "35"))
                                 (rule "true_left" (formula "35"))
                                 (rule "inEqSimp_exactShadow2" (formula "5") (ifseqformula "12"))
                                 (rule "mul_literals" (formula "5") (term "1,0,0,1"))
                                 (rule "greater_literals" (formula "5") (term "0"))
                                 (rule "concrete_impl_1" (formula "5"))
                                 (rule "mul_literals" (formula "5") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "mul_literals" (formula "5") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "21"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                 (rule "concrete_or_1" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "35"))
                                 (rule "mul_literals" (formula "5") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "mul_literals" (formula "5") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "20"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                 (rule "concrete_or_1" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "allLeft" (formula "38") (inst "t=i_6_0"))
                                 (rule "replace_known_right" (formula "38") (term "0,0,0,0,0,0,0") (ifseqformula "58"))
                                 (rule "concrete_or_2" (formula "38") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0,0,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,1,0,0,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0"))
                                 (rule "leq_literals" (formula "38") (term "0,1,0,0,0"))
                                 (rule "concrete_and_2" (formula "38") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "38") (term "0,0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "38") (term "1,0,0,0") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "38") (term "0,0,0,1,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,1,0,0,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0"))
                                 (rule "leq_literals" (formula "38") (term "0,1,0,0,0"))
                                 (rule "concrete_and_2" (formula "38") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "38") (term "0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0,0,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "38") (term "0,1,0,0,0"))
                                 (rule "concrete_and_2" (formula "38") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "38") (term "0,0,0"))
                                 (rule "allLeft" (formula "38") (inst "t=i_1_0"))
                                 (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "36"))
                                 (rule "concrete_not_1" (formula "38") (term "0,0"))
                                 (rule "concrete_or_2" (formula "38") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "38") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,1"))
                                 (rule "mul_literals" (formula "38") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "38") (term "0") (ifseqformula "12"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0"))
                                 (rule "leq_literals" (formula "38") (term "0,0"))
                                 (rule "concrete_and_2" (formula "38") (term "0"))
                                 (rule "concrete_or_2" (formula "38"))
                                 (rule "allLeft" (formula "57") (inst "t=mul(j_0, Z(2(#)))"))
                                 (rule "replaceKnownSelect_taclet10110200_18" (formula "57") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10110200_19" (formula "57") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "10"))
                                 (rule "concrete_or_1" (formula "57") (term "0"))
                                 (rule "concrete_or_1" (formula "57"))
                                 (rule "true_left" (formula "57"))
                                 (rule "allLeft" (formula "23") (inst "t=i_6_0"))
                                 (rule "replace_known_right" (formula "23") (term "0,0,0,0,0,0") (ifseqformula "60"))
                                 (rule "concrete_or_2" (formula "23") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "23") (term "0,1,0,0,0,0"))
                                 (rule "concrete_and_2" (formula "23") (term "1,0,0,0,0"))
                                 (rule "concrete_or_4" (formula "23") (term "0,0,0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0,0,0") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,0"))
                                 (rule "leq_literals" (formula "23") (term "0,1,0,0,0"))
                                 (rule "concrete_and_2" (formula "23") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "23") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "23") (term "0"))
                                 (rule "allLeft" (formula "58") (inst "t=mul(i_6_0, Z(2(#)))"))
                                 (rule "replaceKnownSelect_taclet10110200_16" (formula "58") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10110200_17" (formula "58") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "58") (term "0,0") (ifseqformula "65"))
                                 (rule "concrete_or_2" (formula "58") (term "0"))
                                 (rule "inEqSimp_contradInEq5" (formula "58") (term "0") (ifseqformula "6"))
                                 (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                                 (rule "greater_literals" (formula "58") (term "0,0,0"))
                                 (rule "concrete_impl_1" (formula "58") (term "0,0"))
                                 (rule "qeq_literals" (formula "58") (term "0,0"))
                                 (rule "concrete_and_2" (formula "58") (term "0"))
                                 (rule "concrete_or_2" (formula "58"))
                                 (rule "inEqSimp_exactShadow1" (formula "58") (ifseqformula "9"))
                                 (rule "greater_literals" (formula "58") (term "0"))
                                 (rule "concrete_impl_1" (formula "58"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "58") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "58"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "29") (ifseqformula "58"))
                                 (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                                 (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0"))
                                 (rule "qeq_literals" (formula "29") (term "0"))
                                 (rule "concrete_or_1" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "57"))
                                 (rule "andLeft" (formula "28"))
                                 (rule "inEqSimp_homoInEq1" (formula "28"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "28") (term "0"))
                                 (rule "add_literals" (formula "28") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0"))
                                 (rule "add_zero_right" (formula "28") (term "0"))
                                 (rule "leq_literals" (formula "28"))
                                 (rule "closeFalse" (formula "28"))
                              )
                           )
                        )
                     )
                  )
                  (branch "CUT: bsum{int i_3;}(0, quotient_1, if ( (self.table@heap)[i_3 * 2]@heap[self.modCount := -4294967295 + quotient_0 * -4294967296 + self.modCount] [anon(self.table.*, anon_heap_LOOP<<anonHeapFunction>>)] = null) then (0) else (1)) = 0 FALSE"
                     (rule "concrete_and_4" (formula "48") (term "0,0,0,0"))
                     (rule "concrete_and_2" (formula "48") (term "0,0,0"))
                     (rule "concrete_and_2" (formula "48") (term "0,0"))
                     (rule "concrete_and_2" (formula "48") (term "0"))
                     (rule "concrete_and_2" (formula "48"))
                     (rule "false_right" (formula "48"))
                     (rule "bsum_zero_right" (formula "47"))
                     (rule "ifthenelse_concrete3" (formula "47") (term "1,0"))
                     (rule "equal_literals" (formula "47") (term "1,1,0"))
                     (rule "concrete_or_4" (formula "47") (term "1,0"))
                     (rule "allRight" (formula "47") (inst "sk=i_3_0"))
                     (rule "impRight" (formula "47"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=arr_2"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                     (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                     (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                     (rule "eqClose" (formula "1") (term "0,0,0,0"))
                     (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                     (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                     (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                     (rule "concrete_or_1" (formula "1") (term "0,0"))
                     (rule "ifthenelse_true" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                     (rule "mul_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "11"))
                     (rule "leq_literals" (formula "1") (term "0"))
                     (rule "concrete_or_1" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "37"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                     (rule "concrete_or_2" (formula "1"))
                     (rule "allLeft" (formula "14") (inst "t=i_3_0"))
                     (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "14") (term "0,1,0"))
                     (rule "concrete_and_2" (formula "14") (term "1,0"))
                     (rule "concrete_or_4" (formula "14") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "14") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "14") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                     (rule "add_literals" (formula "14") (term "0,0,1"))
                     (rule "leq_literals" (formula "14") (term "0,1"))
                     (rule "concrete_and_2" (formula "14") (term "1"))
                     (rule "concrete_or_4" (formula "14"))
                     (rule "cut_direct" (formula "14") (term "0,0"))
                     (branch "CUT: self.table[i_3_0 * 2] = null TRUE"
                        (rule "concrete_not_1" (formula "15") (term "0"))
                        (rule "concrete_or_2" (formula "15"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0") (ifseqformula "7"))
                        (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "15"))
                        (rule "concrete_or_1" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0") (ifseqformula "7"))
                        (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "16"))
                        (rule "concrete_or_1" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "allLeft" (formula "48") (inst "t=mul(i_3_0, Z(2(#)))"))
                        (rule "replaceKnownSelect_taclet1110200_16" (formula "48") (term "0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1110200_17" (formula "48") (term "0,0,0"))
                        (rule "replace_known_right" (formula "48") (term "0,0") (ifseqformula "53"))
                        (rule "concrete_or_2" (formula "48") (term "0"))
                        (rule "inEqSimp_contradInEq5" (formula "48") (term "0") (ifseqformula "2"))
                        (rule "mul_literals" (formula "48") (term "1,1,0,0"))
                        (rule "greater_literals" (formula "48") (term "0,0,0"))
                        (rule "concrete_impl_1" (formula "48") (term "0,0"))
                        (rule "qeq_literals" (formula "48") (term "0,0"))
                        (rule "concrete_and_2" (formula "48") (term "0"))
                        (rule "concrete_or_2" (formula "48"))
                        (rule "inEqSimp_exactShadow1" (formula "48") (ifseqformula "3"))
                        (rule "greater_literals" (formula "48") (term "0"))
                        (rule "concrete_impl_1" (formula "48"))
                        (rule "polySimp_mulComm0" (formula "48") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                        (rule "mul_literals" (formula "48") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "48") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                        (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                        (rule "polySimp_elimOne" (formula "48") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "48"))
                        (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                        (rule "add_literals" (formula "22") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0"))
                        (rule "qeq_literals" (formula "22") (term "0"))
                        (rule "concrete_or_1" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "47"))
                        (rule "andLeft" (formula "21"))
                        (rule "inEqSimp_homoInEq1" (formula "21"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0"))
                        (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "21") (term "0"))
                        (rule "add_literals" (formula "21") (term "1,1,0"))
                        (rule "times_zero_1" (formula "21") (term "1,0"))
                        (rule "add_literals" (formula "21") (term "0"))
                        (rule "leq_literals" (formula "21"))
                        (rule "closeFalse" (formula "21"))
                     )
                     (branch "CUT: self.table[i_3_0 * 2] = null FALSE"
                        (rule "concrete_not_2" (formula "14") (term "0"))
                        (rule "concrete_or_1" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "7"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                        (rule "concrete_or_2" (formula "1"))
                        (rule "allLeft" (formula "33") (inst "t=i_3_0"))
                        (rule "replace_known_right" (formula "33") (term "0,0,0,0,0,0,0") (ifseqformula "49"))
                        (rule "concrete_or_2" (formula "33") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0,0,0,0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,0"))
                        (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "33") (term "1,1,0,0,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0,1,0,0,0,0"))
                        (rule "leq_literals" (formula "33") (term "0,1,0,0,0,0"))
                        (rule "concrete_and_2" (formula "33") (term "1,0,0,0,0"))
                        (rule "concrete_or_4" (formula "33") (term "0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0,0,0,0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "33") (term "0,1,0,0,0,0"))
                        (rule "concrete_and_2" (formula "33") (term "1,0,0,0,0"))
                        (rule "concrete_or_4" (formula "33") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "33") (term "0,0"))
                        (rule "commute_or_2" (formula "33") (term "0"))
                        (rule "cut_direct" (formula "33") (term "1,0"))
                        (branch "CUT: genHash(self.table[i_3_0 * 2], i_0) <= i_3_0 * 2 TRUE"
                           (rule "concrete_or_3" (formula "34") (term "0"))
                           (rule "all_unused" (formula "34"))
                           (rule "true_left" (formula "34"))
                           (rule "allLeft" (formula "16") (inst "t=i_3_0"))
                           (rule "replace_known_right" (formula "16") (term "0,0,0,0,0,0") (ifseqformula "50"))
                           (rule "concrete_or_2" (formula "16") (term "0,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0,0,0,0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "16") (term "0,1,0,0,0,0"))
                           (rule "concrete_and_2" (formula "16") (term "1,0,0,0,0"))
                           (rule "concrete_or_4" (formula "16") (term "0,0,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "16") (term "1,0,0,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
                           (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "16") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "16") (term "0,1,0,0,0"))
                           (rule "concrete_and_2" (formula "16") (term "1,0,0,0"))
                           (rule "concrete_or_4" (formula "16") (term "0,0,0"))
                           (rule "commute_or_2" (formula "16") (term "0"))
                           (rule "allLeft" (formula "49") (inst "t=mul(i_3_0, Z(2(#)))"))
                           (rule "replaceKnownSelect_taclet1110200_16" (formula "49") (term "0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet1110200_17" (formula "49") (term "0,0,0"))
                           (rule "replace_known_right" (formula "49") (term "0,0") (ifseqformula "55"))
                           (rule "concrete_or_2" (formula "49") (term "0"))
                           (rule "inEqSimp_contradInEq5" (formula "49") (term "0") (ifseqformula "3"))
                           (rule "greater_literals" (formula "49") (term "0,0,0"))
                           (rule "concrete_impl_1" (formula "49") (term "0,0"))
                           (rule "mul_literals" (formula "49") (term "1,0,0"))
                           (rule "qeq_literals" (formula "49") (term "0,0"))
                           (rule "concrete_and_2" (formula "49") (term "0"))
                           (rule "concrete_or_2" (formula "49"))
                           (rule "inEqSimp_exactShadow1" (formula "49") (ifseqformula "4"))
                           (rule "greater_literals" (formula "49") (term "0"))
                           (rule "concrete_impl_1" (formula "49"))
                           (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                           (rule "mul_literals" (formula "49") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "49") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                           (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                           (rule "polySimp_elimOne" (formula "49") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "49"))
                           (rule "andLeft" (formula "21"))
                           (rule "inEqSimp_homoInEq1" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0"))
                           (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "21") (term "0"))
                           (rule "add_literals" (formula "21") (term "1,1,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0"))
                           (rule "add_zero_right" (formula "21") (term "0"))
                           (rule "leq_literals" (formula "21"))
                           (rule "closeFalse" (formula "21"))
                        )
                        (branch "CUT: genHash(self.table[i_3_0 * 2], i_0) <= i_3_0 * 2 FALSE"
                           (rule "concrete_or_4" (formula "33") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "49"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "allLeft" (formula "34") (inst "t=i_1_0"))
                           (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "31"))
                           (rule "concrete_not_1" (formula "34") (term "0,0"))
                           (rule "concrete_or_2" (formula "34") (term "0"))
                           (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "29"))
                           (rule "qeq_literals" (formula "34") (term "0,0"))
                           (rule "concrete_and_2" (formula "34") (term "0"))
                           (rule "concrete_or_2" (formula "34"))
                           (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "34"))
                           (rule "mul_literals" (formula "4") (term "0,0"))
                           (rule "add_zero_left" (formula "4") (term "0"))
                           (rule "allLeft" (formula "33") (inst "t=i_3_0"))
                           (rule "replace_known_right" (formula "33") (term "0,0,0,0,0,0,0") (ifseqformula "52"))
                           (rule "concrete_or_2" (formula "33") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0,0,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "33") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "33") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "33") (term "0,1,0,0,0"))
                           (rule "concrete_and_2" (formula "33") (term "1,0,0,0"))
                           (rule "concrete_or_4" (formula "33") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0,0,0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0"))
                           (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "33") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "33") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "33") (term "0,1,0,0,0"))
                           (rule "concrete_and_2" (formula "33") (term "1,0,0,0"))
                           (rule "concrete_or_4" (formula "33") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0,0,0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "33") (term "0,1,0,0,0"))
                           (rule "concrete_and_2" (formula "33") (term "1,0,0,0"))
                           (rule "concrete_or_4" (formula "33") (term "0,0,0"))
                           (rule "allLeft" (formula "33") (inst "t=i_1_0"))
                           (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "31"))
                           (rule "concrete_not_1" (formula "33") (term "0,0"))
                           (rule "concrete_or_2" (formula "33") (term "0"))
                           (rule "inEqSimp_homoInEq0" (formula "33") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1"))
                           (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                           (rule "mul_literals" (formula "33") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
                           (rule "inEqSimp_contradInEq2" (formula "33") (term "0") (ifseqformula "6"))
                           (rule "greater_literals" (formula "33") (term "0,1,0,0"))
                           (rule "concrete_impl_1" (formula "33") (term "1,0,0"))
                           (rule "greater_literals" (formula "33") (term "0,0,0"))
                           (rule "concrete_impl_1" (formula "33") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "0,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0,0"))
                           (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                           (rule "add_literals" (formula "33") (term "0,0,0"))
                           (rule "leq_literals" (formula "33") (term "0,0"))
                           (rule "concrete_and_2" (formula "33") (term "0"))
                           (rule "concrete_or_2" (formula "33"))
                           (rule "allLeft" (formula "17") (inst "t=i_3_0"))
                           (rule "replace_known_right" (formula "17") (term "0,0,0,0,0,0") (ifseqformula "54"))
                           (rule "concrete_or_2" (formula "17") (term "0,0,0,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "17") (term "1,0,0,0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0"))
                           (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "17") (term "0,1,0,0,0"))
                           (rule "concrete_and_2" (formula "17") (term "1,0,0,0"))
                           (rule "concrete_or_4" (formula "17") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0,0,0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "17") (term "0,1,0,0,0"))
                           (rule "concrete_and_2" (formula "17") (term "1,0,0,0"))
                           (rule "concrete_or_4" (formula "17") (term "0,0,0"))
                           (rule "commute_or_2" (formula "17") (term "0"))
                           (rule "allLeft" (formula "53") (inst "t=mul(i_3_0, Z(2(#)))"))
                           (rule "replaceKnownSelect_taclet1110200_16" (formula "53") (term "0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet1110200_17" (formula "53") (term "0,0,0"))
                           (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "59"))
                           (rule "concrete_or_2" (formula "53") (term "0"))
                           (rule "inEqSimp_contradInEq5" (formula "53") (term "0") (ifseqformula "4"))
                           (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                           (rule "greater_literals" (formula "53") (term "0,0,0"))
                           (rule "concrete_impl_1" (formula "53") (term "0,0"))
                           (rule "qeq_literals" (formula "53") (term "0,0"))
                           (rule "concrete_and_2" (formula "53") (term "0"))
                           (rule "concrete_or_2" (formula "53"))
                           (rule "inEqSimp_exactShadow1" (formula "53") (ifseqformula "37"))
                           (rule "greater_literals" (formula "53") (term "0"))
                           (rule "concrete_impl_1" (formula "53"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                           (rule "polySimp_mulLiterals" (formula "53") (term "1"))
                           (rule "polySimp_elimOne" (formula "53") (term "1"))
                           (rule "inEqSimp_contradInEq2" (formula "53") (ifseqformula "6"))
                           (rule "greater_literals" (formula "53") (term "0,0"))
                           (rule "concrete_impl_1" (formula "53") (term "0"))
                           (rule "greater_literals" (formula "53") (term "0,0"))
                           (rule "concrete_impl_1" (formula "53") (term "0"))
                           (rule "andLeft" (formula "53"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1"))
                           (rule "polySimp_rightDist" (formula "53") (term "0"))
                           (rule "mul_literals" (formula "53") (term "0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "53"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "53") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0"))
                           (rule "mul_literals" (formula "53") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "53") (term "0"))
                           (rule "polySimp_addComm0" (formula "53") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "53") (term "0"))
                           (rule "add_literals" (formula "53") (term "1,1,0"))
                           (rule "times_zero_1" (formula "53") (term "1,0"))
                           (rule "add_zero_right" (formula "53") (term "0"))
                           (rule "leq_literals" (formula "53"))
                           (rule "closeFalse" (formula "53"))
                        )
                     )
                  )
               )
            )
         )
         (branch "Null Reference (tab = null)"
            (rule "false_right" (formula "15"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
            (rule "concrete_or_1" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "10") (term "0,1,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "10") (term "1,0,0,0,0") (ifseqformula "1"))
            (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "6") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "4"))
            (rule "insert_constant_value" (formula "6") (term "1,1,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "6") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "6") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "6") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "eqClose" (formula "6") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "concrete_and_3" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "6") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "eqClose" (formula "6") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "concrete_and_3" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "6") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "eqClose" (formula "6") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "concrete_and_3" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "expand_inInt" (formula "6") (term "0,1"))
            (rule "expand_inInt" (formula "6") (term "1,1"))
            (rule "mul_literals" (formula "6") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "6") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "replace_int_MAX" (formula "6") (term "1,0,0,1"))
            (rule "replace_int_MIN" (formula "6") (term "0,1,0,1"))
            (rule "replace_int_MAX" (formula "6") (term "1,0,1,1"))
            (rule "replace_int_MIN" (formula "6") (term "0,1,1,1"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "notLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "notLeft" (formula "6"))
            (rule "close" (formula "26") (ifseqformula "1"))
         )
      )
   )
   (branch "Null Reference (v_1 = null)"
      (rule "false_right" (formula "8"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "close" (formula "7") (ifseqformula "1"))
   )
)
(branch "Null Reference (v = null)"
   (rule "false_right" (formula "8"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "applyOnRigidFormula" (formula "1"))
   (rule "simplifyUpdate1" (formula "1") (term "1"))
   (rule "applyOnPV" (formula "1") (term "0"))
   (rule "close" (formula "7") (ifseqformula "1"))
)
)
}
