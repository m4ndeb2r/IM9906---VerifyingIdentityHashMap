\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Sep 22 23:24:22 CEST 2021
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , javaLoopTreatment-javaLoopTreatment\\:efficient
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=50000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\bootclasspath "../../../../jre";

\javaSource "../../../../src";

\include "../../../../functions.key";

\proofObligation "#Proof Obligation Settings
#Wed Sep 22 23:24:22 CEST 2021
contract=java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap\\:\\:resize(int)].JML exceptional_behavior operation contract.0
name=java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap\\:\\:resize(int)].JML exceptional_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "martindeboer" ) (keyVersion "a6034b00a3"))
(keyLog "1" (keyUser "martindeboer" ) (keyVersion "a6034b00a3"))

(autoModeTime "53540")

(branch "dummy ID"
(rule "instanceof_static_type" (formula "1") (term "0,0,0,1,0,0,1,1") (newnames "newCapacity,self,exc,heapAtPre,o,f"))
(rule "boolean_equal" (formula "1") (term "0,0,1,0,0,1,1"))
(rule "insert_constant_value" (formula "1") (term "0,1,1,0,1,0"))
(rule "insert_constant_value" (formula "1") (term "1,1,0,0,1,0"))
(rule "concrete_impl_1" (formula "1") (term "0,1,0,0,1,1"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "11") (term "1,0,0,1,0,1"))
(rule "translateJavaMulInt" (formula "7") (term "1"))
(rule "translateJavaSubInt" (formula "8") (term "1"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "assignment" (formula "11") (term "1"))
(rule "sequentialToParallel2" (formula "11"))
(rule "simplifyUpdate3" (formula "11") (term "1,0"))
(rule "expand_mulJint" (formula "7") (term "1"))
(rule "mul_literals" (formula "7") (term "0,1"))
(rule "expand_subJint" (formula "8") (term "1"))
(rule "sub_literals" (formula "8") (term "0,1"))
(rule "expand_moduloInteger" (formula "7") (term "1"))
(rule "replace_int_RANGE" (formula "7") (term "1,1,1"))
(rule "replace_int_HALFRANGE" (formula "7") (term "0,0,1,1"))
(rule "replace_int_MIN" (formula "7") (term "0,1"))
(rule "add_literals" (formula "7") (term "0,1,1"))
(rule "mod_axiom" (formula "7") (term "1,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1"))
(rule "div_literals" (formula "7") (term "0,1,1,1"))
(rule "times_zero_2" (formula "7") (term "1,1,1"))
(rule "add_zero_right" (formula "7") (term "1,1"))
(rule "add_literals" (formula "7") (term "1"))
(rule "expand_moduloInteger" (formula "8") (term "1"))
(rule "replace_int_RANGE" (formula "8") (term "1,1,1"))
(rule "replace_int_HALFRANGE" (formula "8") (term "0,0,1,1"))
(rule "replace_int_MIN" (formula "8") (term "0,1"))
(rule "add_literals" (formula "8") (term "0,1,1"))
(rule "mod_axiom" (formula "8") (term "1,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1"))
(rule "div_literals" (formula "8") (term "0,1,1,1"))
(rule "times_zero_2" (formula "8") (term "1,1,1"))
(rule "add_zero_right" (formula "8") (term "1,1"))
(rule "add_literals" (formula "8") (term "1"))
(rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_resize,savedHeapBefore_resize,_newCapacityBefore_resize"))
(rule "simplifyUpdate2" (formula "11") (term "1"))
(rule "sequentialToParallel2" (formula "11"))
(rule "simplifyUpdate3" (formula "11") (term "1,0"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "newLength"))
(rule "assignmentMultiplicationInt" (formula "11") (term "1"))
(rule "translateJavaMulInt" (formula "11") (term "0,0,1"))
(rule "sequentialToParallel2" (formula "11"))
(rule "simplifyUpdate2" (formula "11"))
(rule "simplifyUpdate3" (formula "11") (term "1,0"))
(rule "applyOnElementary" (formula "11") (term "1,0"))
(rule "applyOnRigidTerm" (formula "11") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "11") (term "1,0,1,0"))
(rule "applyOnPV" (formula "11") (term "0,0,1,0"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "oldTable"))
(rule "assignment_read_attribute_this" (formula "11"))
(rule "sequentialToParallel2" (formula "11"))
(rule "simplifyUpdate3" (formula "11") (term "1,0"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "oldLength"))
(rule "assignment_read_length" (formula "11"))
(branch "Normal Execution (oldTable != null)"
   (rule "sequentialToParallel2" (formula "11"))
   (rule "simplifyUpdate3" (formula "11") (term "1,0"))
   (rule "applyOnElementary" (formula "11") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "11") (term "0,1,0"))
   (rule "applyOnPV" (formula "11") (term "0,0,1,0"))
   (rule "expand_mulJint" (formula "11") (term "0,1,0,0,0"))
   (rule "expand_moduloInteger" (formula "11") (term "0,1,0,0,0"))
   (rule "replace_int_RANGE" (formula "11") (term "1,1,0,1,0,0,0"))
   (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,1,0,0,0"))
   (rule "replace_int_MIN" (formula "11") (term "0,0,1,0,0,0"))
   (rule "ifUnfold" (formula "11") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x"))
   (rule "compound_equality_comparison_2" (formula "11") (term "1") (inst "#v1=x_2") (inst "#v0=x_1"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_1"))
   (rule "assignment" (formula "11") (term "1"))
   (rule "sequentialToParallel2" (formula "11"))
   (rule "simplifyUpdate3" (formula "11") (term "1,0"))
   (rule "applyOnElementary" (formula "11") (term "1,0"))
   (rule "applyOnPV" (formula "11") (term "0,1,0"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_2"))
   (rule "assignmentMultiplicationInt" (formula "11") (term "1"))
   (rule "insert_constant_value" (formula "11") (term "1,0,0,1"))
   (rule "translateJavaMulInt" (formula "11") (term "0,0,1"))
   (rule "sequentialToParallel2" (formula "11"))
   (rule "simplifyUpdate3" (formula "11") (term "1,0"))
   (rule "expand_mulJint" (formula "11") (term "0,1,0"))
   (rule "mul_literals" (formula "11") (term "0,0,1,0"))
   (rule "expand_moduloInteger" (formula "11") (term "0,1,0"))
   (rule "replace_int_RANGE" (formula "11") (term "1,1,0,1,0"))
   (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0,1,0"))
   (rule "replace_int_MIN" (formula "11") (term "0,0,1,0"))
   (rule "add_literals" (formula "11") (term "0,1,0,1,0"))
   (rule "equality_comparison_simple" (formula "11") (term "1"))
   (rule "eqSymm" (formula "11") (term "0,0,0,1"))
   (rule "sequentialToParallel2" (formula "11"))
   (rule "simplifyUpdate2" (formula "11"))
   (rule "simplifyUpdate3" (formula "11") (term "1,0"))
   (rule "applyOnElementary" (formula "11") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "11") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "11") (term "2,0,1,0"))
   (rule "simplifyUpdate1" (formula "11") (term "1,0,1,0"))
   (rule "applyOnRigidFormula" (formula "11") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "11") (term "1,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "11") (term "0,0,0,1,0"))
   (rule "applyOnPV" (formula "11") (term "1,0,0,1,0"))
   (rule "applyOnPV" (formula "11") (term "0,0,0,1,0"))
   (rule "eqSymm" (formula "11") (term "0,0,1,0"))
   (rule "ifSplit" (formula "11"))
   (branch "if x true"
      (rule "simplifyUpdate2" (formula "12"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "ifthenelse_concrete3" (formula "1"))
      (rule "boolean_not_equal_2" (formula "1") (term "1"))
      (rule "concrete_or_4" (formula "1"))
      (rule "ifUnfold" (formula "12") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_3"))
      (rule "compound_equality_comparison_2" (formula "12") (term "1") (inst "#v1=x_5") (inst "#v0=x_4"))
      (rule "variableDeclarationAssign" (formula "12") (term "1"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_4"))
      (rule "assignment_read_attribute_this" (formula "12"))
      (rule "sequentialToParallel2" (formula "12"))
      (rule "simplifyUpdate3" (formula "12") (term "1,0"))
      (rule "variableDeclarationAssign" (formula "12") (term "1"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_5"))
      (rule "assignmentSubtractionInt" (formula "12") (term "1"))
      (rule "insert_constant_value" (formula "12") (term "0,0,0,1"))
      (rule "translateJavaSubInt" (formula "12") (term "0,0,1"))
      (rule "sequentialToParallel2" (formula "12"))
      (rule "simplifyUpdate3" (formula "12") (term "1,0"))
      (rule "expand_subJint" (formula "12") (term "0,1,0"))
      (rule "sub_literals" (formula "12") (term "0,0,1,0"))
      (rule "expand_moduloInteger" (formula "12") (term "0,1,0"))
      (rule "replace_int_RANGE" (formula "12") (term "1,1,0,1,0"))
      (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,0,1,0"))
      (rule "replace_int_MIN" (formula "12") (term "0,0,1,0"))
      (rule "add_literals" (formula "12") (term "0,1,0,1,0"))
      (rule "equality_comparison_simple" (formula "12") (term "1"))
      (rule "eqSymm" (formula "12") (term "0,0,0,1"))
      (rule "sequentialToParallel2" (formula "12"))
      (rule "simplifyUpdate2" (formula "12"))
      (rule "simplifyUpdate3" (formula "12") (term "1,0"))
      (rule "applyOnElementary" (formula "12") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "12") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "12") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "12") (term "1,0,1,0"))
      (rule "applyOnRigidFormula" (formula "12") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "12") (term "1,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "12") (term "0,0,0,1,0"))
      (rule "applyOnPV" (formula "12") (term "1,0,0,1,0"))
      (rule "applyOnPV" (formula "12") (term "0,0,0,1,0"))
      (rule "eqSymm" (formula "12") (term "0,0,1,0"))
      (rule "ifSplit" (formula "12"))
      (branch "if x_3 true"
         (rule "simplifyUpdate2" (formula "1"))
         (rule "simplifyUpdate2" (formula "13"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "ifthenelse_concrete3" (formula "1"))
         (rule "boolean_not_equal_2" (formula "1") (term "1"))
         (rule "concrete_or_4" (formula "1"))
         (rule "blockThrow" (formula "13") (term "1"))
         (rule "throwUnfold" (formula "13") (term "1") (inst "#v0=i_1"))
         (rule "variableDeclarationAssign" (formula "13") (term "1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "i_1"))
         (rule "instanceCreationAssignmentUnfoldArguments" (formula "13") (term "1"))
         (rule "variableDeclarationAssign" (formula "13") (term "1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "var"))
         (rule "arrayLengthNotNegative" (formula "2") (term "0"))
         (rule "arrayLengthIsAShort" (formula "3") (term "0"))
         (rule "expand_inShort" (formula "3"))
         (rule "replace_short_MAX" (formula "3") (term "1,0"))
         (rule "replace_short_MIN" (formula "3") (term "0,1"))
         (rule "andLeft" (formula "3"))
         (rule "inEqSimp_commuteLeq" (formula "4"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "0,0") (ifseqformula "6"))
         (rule "mod_axiom" (formula "1") (term "1,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
         (rule "div_literals" (formula "1") (term "0,1,1,1"))
         (rule "times_zero_2" (formula "1") (term "1,1,1"))
         (rule "add_zero_right" (formula "1") (term "1,1"))
         (rule "add_literals" (formula "1") (term "1"))
         (rule "mod_axiom" (formula "5") (term "1,1"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1"))
         (rule "div_literals" (formula "5") (term "0,1,1,1"))
         (rule "times_zero_2" (formula "5") (term "1,1,1"))
         (rule "add_zero_right" (formula "5") (term "1,1"))
         (rule "add_literals" (formula "5") (term "1"))
         (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "11"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "11"))
         (rule "qeq_literals" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "10"))
         (rule "qeq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "9"))
         (rule "leq_literals" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_3 false"
         (rule "false_to_not_true" (formula "1") (term "1"))
         (rule "simplifyUpdate2" (formula "13"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "applyOnRigidFormula" (formula "11"))
         (rule "simplifyUpdate1" (formula "11") (term "1"))
         (rule "applyOnPV" (formula "11") (term "0"))
         (rule "ifthenelse_concrete3" (formula "11"))
         (rule "boolean_not_equal_2" (formula "11") (term "1"))
         (rule "concrete_or_4" (formula "11"))
         (rule "eval_order_access4" (formula "13") (term "1") (inst "#v1=x") (inst "#v0=v"))
         (rule "variableDeclarationAssign" (formula "13") (term "1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "v"))
         (rule "assignment" (formula "13") (term "1"))
         (rule "sequentialToParallel2" (formula "13"))
         (rule "simplifyUpdate3" (formula "13") (term "1,0"))
         (rule "variableDeclarationAssign" (formula "13") (term "1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_6"))
         (rule "assignmentSubtractionInt" (formula "13") (term "1"))
         (rule "insert_constant_value" (formula "13") (term "0,0,0,1"))
         (rule "translateJavaSubInt" (formula "13") (term "0,0,1"))
         (rule "sequentialToParallel2" (formula "13"))
         (rule "simplifyUpdate3" (formula "13") (term "1,0"))
         (rule "assignment_write_attribute" (formula "13"))
         (branch "Normal Execution (v != null)"
            (rule "sequentialToParallel2" (formula "13"))
            (rule "simplifyUpdate2" (formula "13"))
            (rule "simplifyUpdate3" (formula "13") (term "1,0"))
            (rule "applyOnElementary" (formula "13") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "13") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "13") (term "3,0,1,0"))
            (rule "simplifyUpdate1" (formula "13") (term "2,0,1,0"))
            (rule "simplifyUpdate1" (formula "13") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "13") (term "0,0,1,0"))
            (rule "applyOnPV" (formula "13") (term "3,0,1,0"))
            (rule "applyOnPV" (formula "13") (term "1,0,1,0"))
            (rule "blockReturnNoValue" (formula "13") (term "1"))
            (rule "expand_subJint" (formula "13") (term "3,0,1,0"))
            (rule "sub_literals" (formula "13") (term "0,3,0,1,0"))
            (rule "expand_moduloInteger" (formula "13") (term "3,0,1,0"))
            (rule "replace_int_RANGE" (formula "13") (term "1,1,3,0,1,0"))
            (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,3,0,1,0"))
            (rule "replace_int_MIN" (formula "13") (term "0,3,0,1,0"))
            (rule "add_literals" (formula "13") (term "0,1,3,0,1,0"))
            (rule "methodCallEmptyReturn" (formula "13") (term "1"))
            (rule "simplifyUpdate2" (formula "13"))
            (rule "tryEmpty" (formula "13") (term "1"))
            (rule "emptyModality" (formula "13") (term "1"))
            (rule "applyOnRigidFormula" (formula "13"))
            (rule "simplifyUpdate2" (formula "13") (term "1"))
            (rule "simplifyUpdate2" (formula "13") (term "0"))
            (rule "applyOnRigidFormula" (formula "13") (term "1"))
            (rule "applyOnRigidFormula" (formula "13") (term "0"))
            (rule "simplifyUpdate2" (formula "13") (term "0,0"))
            (rule "applyOnRigidFormula" (formula "13") (term "0,1"))
            (rule "applyOnRigidFormula" (formula "13") (term "1,0"))
            (rule "simplifyUpdate2" (formula "13") (term "0,1,0"))
            (rule "simplifyUpdate2" (formula "13") (term "1,1,0"))
            (rule "applyOnRigidFormula" (formula "13") (term "0,0"))
            (rule "applyOnRigidFormula" (formula "13") (term "0,0,1"))
            (rule "simplifyUpdate2" (formula "13") (term "0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "13") (term "0,1,0"))
            (rule "applyOnPV" (formula "13") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "13") (term "1,0,1,0"))
            (rule "applyOnRigidFormula" (formula "13") (term "1,1,0"))
            (rule "simplifyUpdate1" (formula "13") (term "1,1,1,0"))
            (rule "applyOnRigidFormula" (formula "13") (term "0,0,0"))
            (rule "applyOnPV" (formula "13") (term "0,0,0,0"))
            (rule "simplifyUpdate1" (formula "13") (term "1,0,0,0"))
            (rule "eqClose" (formula "13") (term "0,0,0"))
            (rule "concrete_not_1" (formula "13") (term "0,0"))
            (rule "concrete_and_2" (formula "13") (term "0"))
            (rule "concrete_and_2" (formula "13"))
            (rule "false_right" (formula "13"))
            (rule "mod_axiom" (formula "11") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1"))
            (rule "div_literals" (formula "11") (term "0,1,1,1"))
            (rule "times_zero_2" (formula "11") (term "1,1,1"))
            (rule "add_zero_right" (formula "11") (term "1,1"))
            (rule "add_literals" (formula "11") (term "1"))
            (rule "close" (formula "11") (ifseqformula "9"))
         )
         (branch "Null Reference (v = null)"
            (rule "false_right" (formula "14"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "close" (formula "13") (ifseqformula "1"))
         )
      )
   )
   (branch "if x false"
      (rule "false_to_not_true" (formula "1") (term "1"))
      (rule "simplifyUpdate2" (formula "12"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "applyOnRigidFormula" (formula "10"))
      (rule "simplifyUpdate1" (formula "10") (term "1"))
      (rule "applyOnPV" (formula "10") (term "0"))
      (rule "ifthenelse_concrete3" (formula "10"))
      (rule "boolean_not_equal_2" (formula "10") (term "1"))
      (rule "concrete_or_4" (formula "10"))
      (rule "ifUnfold" (formula "12") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_3"))
      (rule "greater_equal_than_comparison_simple" (formula "12") (term "1"))
      (rule "sequentialToParallel2" (formula "12"))
      (rule "simplifyUpdate3" (formula "12") (term "1,0"))
      (rule "applyOnElementary" (formula "12") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "12") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "12") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "12") (term "1,0,1,0"))
      (rule "applyOnRigidFormula" (formula "12") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "12") (term "1,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "12") (term "0,0,0,1,0"))
      (rule "applyOnPV" (formula "12") (term "1,0,0,1,0"))
      (rule "applyOnPV" (formula "12") (term "0,0,0,1,0"))
      (rule "ifSplit" (formula "12"))
      (branch "if x_3 true"
         (rule "simplifyUpdate2" (formula "1"))
         (rule "simplifyUpdate2" (formula "13"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "ifthenelse_concrete3" (formula "1"))
         (rule "boolean_not_equal_2" (formula "1") (term "1"))
         (rule "concrete_or_4" (formula "1"))
         (rule "methodCallEmptyReturn" (formula "13") (term "1"))
         (rule "simplifyUpdate2" (formula "13"))
         (rule "tryEmpty" (formula "13") (term "1"))
         (rule "emptyModality" (formula "13") (term "1"))
         (rule "applyOnRigidFormula" (formula "13"))
         (rule "simplifyUpdate2" (formula "13") (term "0"))
         (rule "simplifyUpdate2" (formula "13") (term "1"))
         (rule "applyOnRigidFormula" (formula "13") (term "0"))
         (rule "applyOnRigidFormula" (formula "13") (term "1"))
         (rule "applyOnRigidFormula" (formula "13") (term "1,0"))
         (rule "simplifyUpdate2" (formula "13") (term "0,1,0"))
         (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "10"))
         (rule "concrete_and_1" (formula "13") (term "1,0"))
         (rule "applyOnRigidFormula" (formula "13") (term "0,0"))
         (rule "applyOnRigidFormula" (formula "13") (term "0,1"))
         (rule "applyOnRigidFormula" (formula "13") (term "1,0"))
         (rule "simplifyUpdate1" (formula "13") (term "1,1,0"))
         (rule "applyOnRigidFormula" (formula "13") (term "0,0,0"))
         (rule "applyOnPV" (formula "13") (term "0,0,0,0"))
         (rule "simplifyUpdate1" (formula "13") (term "1,0,0,0"))
         (rule "eqClose" (formula "13") (term "0,0,0"))
         (rule "concrete_not_1" (formula "13") (term "0,0"))
         (rule "concrete_and_2" (formula "13") (term "0"))
         (rule "concrete_and_2" (formula "13"))
         (rule "false_right" (formula "13"))
         (rule "mod_axiom" (formula "11") (term "1,1"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1"))
         (rule "div_literals" (formula "11") (term "0,1,1,1"))
         (rule "times_zero_2" (formula "11") (term "1,1,1"))
         (rule "add_zero_right" (formula "11") (term "1,1"))
         (rule "add_literals" (formula "11") (term "1"))
         (rule "close" (formula "11") (ifseqformula "8"))
      )
      (branch "if x_3 false"
         (rule "false_to_not_true" (formula "1") (term "1"))
         (rule "simplifyUpdate2" (formula "13"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "applyOnRigidFormula" (formula "10"))
         (rule "simplifyUpdate1" (formula "10") (term "1"))
         (rule "applyOnPV" (formula "10") (term "0"))
         (rule "ifthenelse_concrete3" (formula "10"))
         (rule "boolean_not_equal_2" (formula "10") (term "1"))
         (rule "concrete_or_4" (formula "10"))
         (rule "variableDeclarationAssign" (formula "13") (term "1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "newTable"))
         (rule "arrayCreation" (formula "13") (term "1") (inst "#v0=o_arr"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "o_arr"))
         (rule "variableDeclarationAssign" (formula "13") (term "1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "dim0"))
         (rule "assignment" (formula "13") (term "1"))
         (rule "sequentialToParallel2" (formula "13"))
         (rule "simplifyUpdate3" (formula "13") (term "1,0"))
         (rule "applyOnElementary" (formula "13") (term "1,0"))
         (rule "applyOnPV" (formula "13") (term "0,1,0"))
         (rule "ifUnfold" (formula "13") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_4"))
         (rule "less_than_comparison_simple" (formula "13") (term "1"))
         (rule "sequentialToParallel2" (formula "13"))
         (rule "simplifyUpdate3" (formula "13") (term "1,0"))
         (rule "applyOnElementary" (formula "13") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "13") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "13") (term "2,0,1,0"))
         (rule "simplifyUpdate1" (formula "13") (term "1,0,1,0"))
         (rule "applyOnRigidFormula" (formula "13") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "13") (term "1,0,0,1,0"))
         (rule "applyOnPV" (formula "13") (term "0,0,0,1,0"))
         (rule "ifSplit" (formula "13"))
         (branch "if x_4 true"
            (rule "simplifyUpdate2" (formula "14"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "ifthenelse_concrete3" (formula "1"))
            (rule "boolean_not_equal_2" (formula "1") (term "1"))
            (rule "concrete_or_4" (formula "1"))
            (rule "blockThrow" (formula "14") (term "1"))
            (rule "simplifyUpdate2" (formula "14"))
            (rule "throwUnfold" (formula "14") (term "1") (inst "#v0=n"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "n"))
             (builtin "Use Operation Contract" (formula "14") (newnames "heapBefore_NegativeArraySizeException,self_0,exc_0,heapAfter_NegativeArraySizeException,anon_heap_NegativeArraySizeException") (contract "java.lang.NegativeArraySizeException[java.lang.NegativeArraySizeException::NegativeArraySizeException()].JML behavior operation contract.0"))
            (branch "Post (NegativeArraySizeException)"
               (rule "instanceof_static_type" (formula "12") (term "0,0,0,1,1,1,1,1,1,1"))
               (rule "boolean_equal" (formula "12") (term "0,0,1,1,1,1,1,1,1"))
               (rule "concrete_impl_1" (formula "12") (term "0,1,1,1,1,1,1,1"))
               (rule "simplifyUpdate2" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "simplifyUpdate2" (formula "12"))
               (rule "sequentialToParallel2" (formula "17"))
               (rule "simplifyUpdate3" (formula "17") (term "1,0"))
               (rule "sequentialToParallel2" (formula "13"))
               (rule "simplifyUpdate3" (formula "13") (term "1,0"))
               (rule "andLeft" (formula "13"))
               (rule "simplifyUpdate2" (formula "14"))
               (rule "andLeft" (formula "13"))
               (rule "simplifyUpdate2" (formula "13"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "14"))
               (rule "simplifyUpdate2" (formula "15"))
               (rule "andLeft" (formula "14"))
               (rule "simplifyUpdate2" (formula "14"))
               (rule "andLeft" (formula "15"))
               (rule "simplifyUpdate2" (formula "16"))
               (rule "simplifyUpdate2" (formula "15"))
               (rule "notLeft" (formula "14"))
               (rule "notLeft" (formula "14"))
               (rule "applyOnRigidFormula" (formula "16"))
               (rule "simplifyUpdate2" (formula "16") (term "0"))
               (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "13"))
               (rule "concrete_impl_1" (formula "16"))
               (rule "replace_known_left" (formula "17") (term "0,1,1") (ifseqformula "16"))
               (rule "concrete_and_1" (formula "17") (term "1,1"))
               (rule "simplifyUpdate2" (formula "17"))
               (rule "typeEqDerived" (formula "17") (term "0,0,1") (ifseqformula "13"))
               (rule "typeEqDerived" (formula "17") (term "0,1,1") (ifseqformula "13"))
               (rule "boolean_equal" (formula "17") (term "0,1"))
               (rule "boolean_equal" (formula "17") (term "1,1"))
               (rule "eq_or" (formula "17") (term "1"))
               (rule "concrete_impl_4" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "applyOnRigidFormula" (formula "14"))
               (rule "simplifyUpdate1" (formula "14") (term "1"))
               (rule "applyOnRigidFormula" (formula "17"))
               (rule "simplifyUpdate1" (formula "17") (term "1"))
               (rule "applyOnRigidFormula" (formula "16"))
               (rule "applyOnPV" (formula "16") (term "0"))
               (rule "simplifyUpdate1" (formula "16") (term "1"))
               (rule "applyOnRigidTerm" (formula "14") (term "0"))
               (rule "applyOnPV" (formula "14") (term "0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,0"))
               (rule "simplifyUpdate1" (formula "14") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (ifseqformula "12"))
               (rule "applyOnRigidTerm" (formula "17") (term "0"))
               (rule "applyOnPV" (formula "17") (term "0,0"))
               (rule "simplifyUpdate1" (formula "17") (term "1,0"))
               (rule "simplifyUpdate1" (formula "17") (term "2,0"))
               (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "17"))
               (rule "concrete_or_2" (formula "14"))
               (rule "assignment" (formula "22") (term "1"))
               (rule "sequentialToParallel2" (formula "22"))
               (rule "simplifyUpdate3" (formula "22") (term "1,0"))
               (rule "methodCallThrow" (formula "22") (term "1"))
               (rule "simplifyUpdate2" (formula "22"))
               (rule "tryCatchThrow" (formula "22") (term "1"))
               (rule "arrayLengthNotNegative" (formula "20") (term "0"))
               (rule "arrayLengthIsAShort" (formula "21") (term "0"))
               (rule "expand_inShort" (formula "1"))
               (rule "replace_short_MAX" (formula "1") (term "1,0"))
               (rule "replace_short_MIN" (formula "1") (term "0,1"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_commuteLeq" (formula "2"))
               (rule "ifElseUnfold" (formula "25") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_5"))
               (rule "equality_comparison_simple" (formula "25") (term "1"))
               (rule "sequentialToParallel2" (formula "25"))
               (rule "simplifyUpdate3" (formula "25") (term "1,0"))
               (rule "applyOnElementary" (formula "25") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "25") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "25") (term "2,0,1,0"))
               (rule "applyOnRigidFormula" (formula "25") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "25") (term "1,0,0,1,0"))
               (rule "applyOnPV" (formula "25") (term "0,0,0,1,0"))
               (rule "replace_known_right" (formula "25") (term "0,0,1,0") (ifseqformula "21"))
               (rule "ifthenelse_false" (formula "25") (term "0,1,0"))
               (rule "ifElseSplit" (formula "25"))
               (branch "if x_5 true"
                  (rule "simplifyUpdate2" (formula "26"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1"))
                  (rule "applyOnPV" (formula "1") (term "0"))
                  (rule "boolean_not_equal_2" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_5 false"
                  (rule "false_to_not_true" (formula "1") (term "1"))
                  (rule "simplifyUpdate2" (formula "26"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "20"))
                  (rule "applyOnPV" (formula "20") (term "0"))
                  (rule "simplifyUpdate1" (formula "20") (term "1"))
                  (rule "boolean_not_equal_2" (formula "20"))
                  (rule "false_right" (formula "20"))
                  (rule "elim_double_block" (formula "25") (term "1"))
                  (rule "ifElseSplit" (formula "25"))
                  (branch "if n instanceof java.lang.Throwable true"
                     (rule "instanceof_static_type" (formula "1") (term "2,0,1"))
                     (rule "ifthenelse_concrete4" (formula "1") (term "1"))
                     (rule "boolean_not_equal_2" (formula "1") (term "1,1"))
                     (rule "concrete_or_4" (formula "1") (term "1"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "20"))
                     (rule "applyOnPV" (formula "20") (term "0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "25") (term "1") (newnames "e"))
                     (rule "delete_unnecessary_cast" (formula "25") (term "1"))
                     (rule "instanceof_static_type" (formula "1") (term "0,1,1"))
                     (rule "boolean_equal" (formula "1") (term "1,1"))
                     (rule "concrete_or_3" (formula "1") (term "1"))
                     (rule "true_left" (formula "1"))
                     (rule "sequentialToParallel2" (formula "25"))
                     (rule "simplifyUpdate2" (formula "25"))
                     (rule "simplifyUpdate3" (formula "25") (term "1,0"))
                     (rule "applyOnElementary" (formula "25") (term "1,0"))
                     (rule "applyOnPV" (formula "25") (term "0,1,0"))
                     (rule "assignment" (formula "25") (term "1"))
                     (rule "sequentialToParallel2" (formula "25"))
                     (rule "simplifyUpdate2" (formula "25"))
                     (rule "simplifyUpdate3" (formula "25") (term "1,0"))
                     (rule "applyOnElementary" (formula "25") (term "1,0"))
                     (rule "applyOnPV" (formula "25") (term "0,1,0"))
                     (rule "emptyModality" (formula "25") (term "1"))
                     (rule "applyOnRigidFormula" (formula "25"))
                     (rule "simplifyUpdate2" (formula "25") (term "1"))
                     (rule "simplifyUpdate2" (formula "25") (term "0"))
                     (rule "applyOnRigidFormula" (formula "25") (term "1"))
                     (rule "applyOnRigidFormula" (formula "25") (term "0"))
                     (rule "simplifyUpdate2" (formula "25") (term "0,0"))
                     (rule "applyOnRigidFormula" (formula "25") (term "0,1"))
                     (rule "applyOnRigidFormula" (formula "25") (term "1,0"))
                     (rule "simplifyUpdate2" (formula "25") (term "1,1,0"))
                     (rule "simplifyUpdate2" (formula "25") (term "0,1,0"))
                     (rule "applyOnRigidFormula" (formula "25") (term "0,0"))
                     (rule "applyOnRigidFormula" (formula "25") (term "0,0,1"))
                     (rule "simplifyUpdate2" (formula "25") (term "0,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "25") (term "1,1,0"))
                     (rule "simplifyUpdate1" (formula "25") (term "1,1,1,0"))
                     (rule "inEqSimp_geqRight" (formula "22"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "applyOnRigidFormula" (formula "25") (term "0,1,0"))
                     (rule "applyOnPV" (formula "25") (term "0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "25") (term "0,0,0"))
                     (rule "simplifyUpdate1" (formula "25") (term "1,0,0,0"))
                     (rule "applyOnPV" (formula "25") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "22"))
                     (rule "concrete_not_2" (formula "25") (term "0,0"))
                     (rule "concrete_and_1" (formula "25") (term "0"))
                     (rule "applyOnRigidFormula" (formula "25") (term "1,0,0,1"))
                     (rule "simplifyUpdate1" (formula "25") (term "0,1,0,0,1"))
                     (rule "simplifyUpdate1" (formula "25") (term "1,1,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "25") (term "0,0,0,1"))
                     (rule "simplifyUpdate2" (formula "25") (term "0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "5"))
                     (rule "times_zero_1" (formula "5") (term "1,0,0"))
                     (rule "add_zero_right" (formula "5") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                     (rule "add_literals" (formula "5") (term "0,0"))
                     (rule "applyOnRigidTerm" (formula "25") (term "0,1,0"))
                     (rule "applyOnPV" (formula "25") (term "0,0,1,0"))
                     (rule "instanceof_not_compatible" (formula "25") (term "1,0"))
                     (rule "replace_known_right" (formula "25") (term "1,0") (ifseqformula "22"))
                     (rule "concrete_and_4" (formula "25") (term "0"))
                     (rule "concrete_and_2" (formula "25"))
                     (rule "false_right" (formula "25"))
                     (rule "mod_axiom" (formula "23") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                     (rule "div_literals" (formula "23") (term "0,1,1,1"))
                     (rule "mul_literals" (formula "23") (term "1,1,1"))
                     (rule "add_zero_right" (formula "23") (term "1,1"))
                     (rule "add_literals" (formula "23") (term "1"))
                     (rule "close" (formula "23") (ifseqformula "12"))
                  )
                  (branch "if n instanceof java.lang.Throwable false"
                     (rule "instanceof_static_type" (formula "1") (term "2,0,1"))
                     (rule "false_to_not_true" (formula "1") (term "1"))
                     (rule "ifthenelse_concrete4" (formula "1") (term "0,1"))
                     (rule "boolean_not_equal_2" (formula "1") (term "1,0,1"))
                     (rule "concrete_or_4" (formula "1") (term "0,1"))
                     (rule "double_not" (formula "1") (term "1"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "applyOnPV" (formula "1") (term "0"))
                     (rule "simplifyUpdate1" (formula "1") (term "1"))
                     (rule "close" (formula "22") (ifseqformula "1"))
                  )
               )
            )
            (branch "Exceptional Post (NegativeArraySizeException)"
               (rule "instanceof_static_type" (formula "12") (term "0,0,0,1,1,1,1,1,1,1"))
               (rule "boolean_equal" (formula "12") (term "0,0,1,1,1,1,1,1,1"))
               (rule "concrete_impl_1" (formula "12") (term "0,1,1,1,1,1,1,1"))
               (rule "simplifyUpdate2" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "simplifyUpdate2" (formula "12"))
               (rule "sequentialToParallel2" (formula "17"))
               (rule "simplifyUpdate3" (formula "17") (term "1,0"))
               (rule "sequentialToParallel2" (formula "13"))
               (rule "simplifyUpdate3" (formula "13") (term "1,0"))
               (rule "andLeft" (formula "13"))
               (rule "simplifyUpdate2" (formula "14"))
               (rule "andLeft" (formula "13"))
               (rule "simplifyUpdate2" (formula "13"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "14"))
               (rule "simplifyUpdate2" (formula "15"))
               (rule "andLeft" (formula "13"))
               (rule "simplifyUpdate2" (formula "13"))
               (rule "andLeft" (formula "15"))
               (rule "simplifyUpdate2" (formula "15"))
               (rule "notLeft" (formula "13"))
               (rule "andLeft" (formula "15"))
               (rule "simplifyUpdate2" (formula "15"))
               (rule "simplifyUpdate2" (formula "16"))
               (rule "notLeft" (formula "14"))
               (rule "notLeft" (formula "14"))
               (rule "applyOnRigidFormula" (formula "17"))
               (rule "simplifyUpdate2" (formula "17") (term "0"))
               (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "20"))
               (rule "concrete_not_2" (formula "17") (term "0"))
               (rule "concrete_impl_1" (formula "17"))
               (rule "andLeft" (formula "17"))
               (rule "simplifyUpdate2" (formula "18"))
               (rule "replace_known_left" (formula "16") (term "1,1") (ifseqformula "17"))
               (rule "concrete_impl_4" (formula "16") (term "1"))
               (rule "true_left" (formula "16"))
               (rule "applyOnRigidFormula" (formula "13"))
               (rule "simplifyUpdate1" (formula "13") (term "1"))
               (rule "applyOnRigidFormula" (formula "14"))
               (rule "simplifyUpdate1" (formula "14") (term "1"))
               (rule "applyOnRigidFormula" (formula "18"))
               (rule "simplifyUpdate1" (formula "18") (term "1"))
               (rule "applyOnRigidFormula" (formula "16"))
               (rule "simplifyUpdate1" (formula "16") (term "1"))
               (rule "applyOnPV" (formula "16") (term "0"))
               (rule "applyOnRigidTerm" (formula "13") (term "0"))
               (rule "applyOnPV" (formula "13") (term "0,0"))
               (rule "simplifyUpdate1" (formula "13") (term "1,0"))
               (rule "simplifyUpdate1" (formula "13") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (ifseqformula "12"))
               (rule "applyOnRigidTerm" (formula "14") (term "0"))
               (rule "applyOnPV" (formula "14") (term "0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (ifseqformula "12"))
               (rule "simplifyUpdate1" (formula "14") (term "1,0,1"))
               (rule "simplifyUpdate1" (formula "14") (term "1,0,0"))
               (rule "applyOnRigidTerm" (formula "18") (term "0"))
               (rule "simplifyUpdate1" (formula "18") (term "1,0"))
               (rule "applyOnPV" (formula "18") (term "0,0"))
               (rule "simplifyUpdate1" (formula "18") (term "2,0"))
               (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "18"))
               (rule "concrete_or_2" (formula "14"))
               (rule "methodCallThrow" (formula "24") (term "1"))
               (rule "simplifyUpdate2" (formula "24"))
               (rule "tryCatchThrow" (formula "24") (term "1"))
               (rule "arrayLengthNotNegative" (formula "22") (term "0"))
               (rule "arrayLengthIsAShort" (formula "23") (term "0"))
               (rule "expand_inShort" (formula "1"))
               (rule "replace_short_MIN" (formula "1") (term "0,1"))
               (rule "replace_short_MAX" (formula "1") (term "1,0"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_commuteLeq" (formula "2"))
               (rule "ifElseUnfold" (formula "27") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_5"))
               (rule "equality_comparison_simple" (formula "27") (term "1"))
               (rule "sequentialToParallel2" (formula "27"))
               (rule "simplifyUpdate3" (formula "27") (term "1,0"))
               (rule "replace_known_right" (formula "27") (term "0,0,1,0") (ifseqformula "23"))
               (rule "ifthenelse_false" (formula "27") (term "0,1,0"))
               (rule "ifElseSplit" (formula "27"))
               (branch "if x_5 true"
                  (rule "simplifyUpdate2" (formula "28"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "applyOnPV" (formula "1") (term "0"))
                  (rule "simplifyUpdate1" (formula "1") (term "1"))
                  (rule "boolean_not_equal_2" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_5 false"
                  (rule "false_to_not_true" (formula "1") (term "1"))
                  (rule "simplifyUpdate2" (formula "28"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "21"))
                  (rule "applyOnPV" (formula "21") (term "0"))
                  (rule "simplifyUpdate1" (formula "21") (term "1"))
                  (rule "boolean_not_equal_2" (formula "21"))
                  (rule "false_right" (formula "21"))
                  (rule "elim_double_block" (formula "27") (term "1"))
                  (rule "ifElseSplit" (formula "27"))
                  (branch "if exc_0 instanceof java.lang.Throwable true"
                     (rule "instanceof_static_type" (formula "1") (term "2,0,1"))
                     (rule "ifthenelse_concrete4" (formula "1") (term "1"))
                     (rule "boolean_not_equal_2" (formula "1") (term "1,1"))
                     (rule "concrete_or_4" (formula "1") (term "1"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "variableDeclaration" (formula "27") (term "1") (newnames "e"))
                     (rule "delete_unnecessary_cast" (formula "27") (term "1"))
                     (rule "instanceof_static_type" (formula "1") (term "0,1,1"))
                     (rule "boolean_equal" (formula "1") (term "1,1"))
                     (rule "concrete_or_3" (formula "1") (term "1"))
                     (rule "true_left" (formula "1"))
                     (rule "sequentialToParallel2" (formula "27"))
                     (rule "simplifyUpdate3" (formula "27") (term "1,0"))
                     (rule "assignment" (formula "27") (term "1"))
                     (rule "sequentialToParallel2" (formula "27"))
                     (rule "simplifyUpdate2" (formula "27"))
                     (rule "simplifyUpdate3" (formula "27") (term "1,0"))
                     (rule "applyOnElementary" (formula "27") (term "1,0"))
                     (rule "applyOnPV" (formula "27") (term "0,1,0"))
                     (rule "emptyModality" (formula "27") (term "1"))
                     (rule "applyOnRigidFormula" (formula "27"))
                     (rule "simplifyUpdate2" (formula "27") (term "1"))
                     (rule "simplifyUpdate2" (formula "27") (term "0"))
                     (rule "applyOnRigidFormula" (formula "27") (term "1"))
                     (rule "applyOnRigidFormula" (formula "27") (term "0"))
                     (rule "simplifyUpdate2" (formula "27") (term "0,0"))
                     (rule "applyOnRigidFormula" (formula "27") (term "0,1"))
                     (rule "applyOnRigidFormula" (formula "27") (term "1,0"))
                     (rule "simplifyUpdate2" (formula "27") (term "1,1,0"))
                     (rule "simplifyUpdate2" (formula "27") (term "0,1,0"))
                     (rule "applyOnRigidFormula" (formula "27") (term "0,0"))
                     (rule "applyOnRigidFormula" (formula "27") (term "0,0,1"))
                     (rule "simplifyUpdate2" (formula "27") (term "0,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "27") (term "1,1,0"))
                     (rule "simplifyUpdate1" (formula "27") (term "1,1,1,0"))
                     (rule "inEqSimp_geqRight" (formula "24"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "applyOnRigidFormula" (formula "27") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "27") (term "1,0,1,0"))
                     (rule "applyOnPV" (formula "27") (term "0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "27") (term "0,0,0"))
                     (rule "applyOnPV" (formula "27") (term "0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "27") (term "1,0,0,0"))
                     (rule "replace_known_right" (formula "27") (term "0,0,0") (ifseqformula "24"))
                     (rule "concrete_not_2" (formula "27") (term "0,0"))
                     (rule "concrete_and_1" (formula "27") (term "0"))
                     (rule "applyOnRigidFormula" (formula "27") (term "1,0,0,1"))
                     (rule "simplifyUpdate1" (formula "27") (term "0,1,0,0,1"))
                     (rule "simplifyUpdate1" (formula "27") (term "1,1,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "27") (term "0,0,0,1"))
                     (rule "simplifyUpdate2" (formula "27") (term "0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "5"))
                     (rule "times_zero_1" (formula "5") (term "1,0,0"))
                     (rule "add_zero_right" (formula "5") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                     (rule "add_literals" (formula "5") (term "0,0"))
                     (rule "applyOnRigidTerm" (formula "27") (term "0,1,0"))
                     (rule "applyOnPV" (formula "27") (term "0,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "27") (term "0,1,0,0,1"))
                     (rule "simplifyUpdate1" (formula "27") (term "2,0,1,0,0,1"))
                     (rule "simplifyUpdate1" (formula "27") (term "1,0,1,0,0,1"))
                     (rule "applyOnPV" (formula "27") (term "0,0,1,0,0,1"))
                     (rule "eqSymm" (formula "27") (term "1,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "27") (term "1,0,0,0,1"))
                     (rule "applyOnRigidTerm" (formula "27") (term "0,1,0,0,1"))
                     (rule "simplifyUpdate1" (formula "27") (term "2,0,1,0,0,1"))
                     (rule "simplifyUpdate1" (formula "27") (term "1,0,1,0,0,1"))
                     (rule "applyOnPV" (formula "27") (term "0,0,1,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "27") (term "0,1,0,0,0,1"))
                     (rule "simplifyUpdate1" (formula "27") (term "1,0,1,0,0,0,1"))
                     (rule "applyOnRigidTerm" (formula "27") (term "0,0,1,0,0,0,1"))
                     (rule "simplifyUpdate1" (formula "27") (term "2,0,0,1,0,0,0,1"))
                     (rule "simplifyUpdate1" (formula "27") (term "1,0,0,1,0,0,0,1"))
                     (rule "applyOnPV" (formula "27") (term "0,0,0,1,0,0,0,1"))
                     (rule "mod_axiom" (formula "25") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                     (rule "div_literals" (formula "25") (term "0,1,1,1"))
                     (rule "times_zero_2" (formula "25") (term "1,1,1"))
                     (rule "add_zero_right" (formula "25") (term "1,1"))
                     (rule "add_literals" (formula "25") (term "1"))
                     (rule "close" (formula "25") (ifseqformula "12"))
                  )
                  (branch "if exc_0 instanceof java.lang.Throwable false"
                     (rule "instanceof_static_type" (formula "1") (term "2,0,1"))
                     (rule "false_to_not_true" (formula "1") (term "1"))
                     (rule "ifthenelse_concrete4" (formula "1") (term "0,1"))
                     (rule "boolean_not_equal_2" (formula "1") (term "1,0,1"))
                     (rule "concrete_or_4" (formula "1") (term "0,1"))
                     (rule "double_not" (formula "1") (term "1"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "typeEqDerived" (formula "21") (term "0,0") (ifseqformula "1"))
                     (rule "typeEqDerived" (formula "21") (term "0,1") (ifseqformula "1"))
                     (rule "close" (formula "24") (ifseqformula "1"))
                  )
               )
            )
            (branch "Pre (NegativeArraySizeException)"
               (rule "simplifyUpdate2" (formula "14"))
               (rule "simplifyUpdate2" (formula "14"))
               (rule "close" (formula "14") (ifseqformula "2"))
            )
         )
         (branch "if x_4 false"
            (rule "false_to_not_true" (formula "1") (term "1"))
            (rule "simplifyUpdate2" (formula "14"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "applyOnRigidFormula" (formula "10"))
            (rule "simplifyUpdate1" (formula "10") (term "1"))
            (rule "applyOnPV" (formula "10") (term "0"))
            (rule "ifthenelse_concrete3" (formula "10"))
            (rule "boolean_not_equal_2" (formula "10") (term "1"))
            (rule "concrete_or_4" (formula "10"))
            (rule "arrayLengthNotNegative" (formula "12") (term "0"))
            (rule "arrayLengthIsAShort" (formula "13") (term "0"))
            (rule "expand_inShort" (formula "1"))
            (rule "replace_short_MAX" (formula "1") (term "1,0"))
            (rule "replace_short_MIN" (formula "1") (term "0,1"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_commuteLeq" (formula "2"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,0") (ifseqformula "4"))
            (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "18") (term "1") (inst "#v0=o_arr_1"))
            (rule "variableDeclaration" (formula "18") (term "1") (newnames "o_arr_1"))
            (rule "variableDeclarationAssign" (formula "18") (term "1"))
            (rule "variableDeclaration" (formula "18") (term "1") (newnames "length_1"))
            (rule "assignment" (formula "18") (term "1"))
            (rule "sequentialToParallel2" (formula "18"))
            (rule "simplifyUpdate2" (formula "18"))
            (rule "simplifyUpdate3" (formula "18") (term "1,0"))
            (rule "applyOnElementary" (formula "18") (term "1,0"))
            (rule "applyOnPV" (formula "18") (term "0,1,0"))
            (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
            (rule "simplifyUpdate2" (formula "18") (term "1"))
            (rule "variableDeclaration" (formula "18") (term "1") (newnames "newObject"))
            (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "18") (term "1") (inst "#v0=o_arr_2"))
            (rule "variableDeclaration" (formula "18") (term "1") (newnames "o_arr_2"))
            (rule "variableDeclarationAssign" (formula "18") (term "1"))
            (rule "variableDeclaration" (formula "18") (term "1") (newnames "length_2"))
            (rule "assignment" (formula "18") (term "1"))
            (rule "sequentialToParallel2" (formula "18"))
            (rule "simplifyUpdate2" (formula "18"))
            (rule "simplifyUpdate3" (formula "18") (term "1,0"))
            (rule "applyOnElementary" (formula "18") (term "1,0"))
            (rule "applyOnPV" (formula "18") (term "0,1,0"))
            (rule "allocateInstanceWithLength" (formula "18"))
            (rule "false_to_not_true" (formula "1") (term "0,1,1,0,1"))
            (rule "simplifyUpdate2" (formula "19"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "simplifyUpdate2" (formula "2"))
            (rule "andLeft" (formula "1"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "sequentialToParallel2" (formula "21"))
            (rule "simplifyUpdate3" (formula "21") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "simplifyUpdate2" (formula "1") (term "0"))
            (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "7"))
            (rule "concrete_impl_1" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "simplifyUpdate1" (formula "1") (term "0"))
            (rule "applyOnPV" (formula "1") (term "1"))
            (rule "blockEmpty" (formula "22") (term "1"))
            (rule "assignment" (formula "22") (term "1"))
            (rule "sequentialToParallel2" (formula "22"))
            (rule "simplifyUpdate3" (formula "22") (term "1,0"))
            (rule "arrayLengthNotNegative" (formula "1") (term "0"))
            (rule "arrayLengthIsAShort" (formula "2") (term "0"))
            (rule "expand_inShort" (formula "2"))
            (rule "replace_short_MIN" (formula "2") (term "0,1"))
            (rule "replace_short_MAX" (formula "2") (term "1,0"))
            (rule "andLeft" (formula "2"))
            (rule "inEqSimp_commuteLeq" (formula "3"))
            (rule "methodCall" (formula "25"))
            (branch "Normal Execution (newObject != null )"
               (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
               (rule "simplifyUpdate2" (formula "25") (term "1"))
               (rule "assignment_write_attribute_this" (formula "25"))
               (rule "sequentialToParallel2" (formula "25"))
               (rule "simplifyUpdate2" (formula "25"))
               (rule "simplifyUpdate3" (formula "25") (term "1,0"))
               (rule "applyOnElementary" (formula "25") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "25") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "25") (term "2,0,1,0"))
               (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "25") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "25") (term "3,0,1,0"))
               (rule "applyOnPV" (formula "25") (term "1,0,1,0"))
               (rule "applyOnPV" (formula "25") (term "0,0,1,0"))
               (rule "methodCallWithinClass" (formula "25") (term "1"))
               (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
               (rule "simplifyUpdate2" (formula "25") (term "1"))
               (rule "arrayInitialisation" (formula "25") (term "1"))
               (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,1"))
               (rule "mul_literals" (formula "25") (term "1,2,1,0,0,1"))
               (rule "sequentialToParallel2" (formula "25"))
               (rule "simplifyUpdate2" (formula "25"))
               (rule "simplifyUpdate3" (formula "25") (term "1,0"))
               (rule "applyOnElementary" (formula "25") (term "1,0"))
               (rule "polySimp_addComm0" (formula "25") (term "2,1,1,0,1,0"))
               (rule "applyOnRigidTerm" (formula "25") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "25") (term "2,0,1,0"))
               (rule "simplifyUpdate1" (formula "25") (term "0,0,1,0"))
               (rule "applyOnPV" (formula "25") (term "0,0,1,0"))
               (rule "applyOnRigidTerm" (formula "25") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "25") (term "1,1,0,1,0"))
               (rule "applyOnPV" (formula "25") (term "0,1,0,1,0"))
               (rule "applyOnRigidTerm" (formula "25") (term "2,1,0,1,0"))
               (rule "simplifyUpdate1" (formula "25") (term "0,2,1,0,1,0"))
               (rule "applyOnRigidTerm" (formula "25") (term "1,2,1,0,1,0"))
               (rule "applyOnPV" (formula "25") (term "0,1,2,1,0,1,0"))
               (rule "methodCallEmpty" (formula "25") (term "1"))
               (rule "blockEmpty" (formula "25") (term "1"))
               (rule "assignment_write_attribute_this" (formula "25"))
               (rule "sequentialToParallel2" (formula "25"))
               (rule "simplifyUpdate2" (formula "25"))
               (rule "simplifyUpdate3" (formula "25") (term "1,0"))
               (rule "applyOnElementary" (formula "25") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "25") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "25") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "25") (term "3,0,1,0"))
               (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "25") (term "2,0,1,0"))
               (rule "applyOnPV" (formula "25") (term "0,0,1,0"))
               (rule "applyOnPV" (formula "25") (term "1,0,1,0"))
               (rule "methodCallReturnIgnoreResult" (formula "25") (term "1"))
               (rule "blockEmpty" (formula "25") (term "1"))
               (rule "methodCallReturn" (formula "25") (term "1"))
               (rule "assignment" (formula "25") (term "1"))
               (rule "sequentialToParallel2" (formula "25"))
               (rule "simplifyUpdate2" (formula "25"))
               (rule "simplifyUpdate3" (formula "25") (term "1,0"))
               (rule "applyOnElementary" (formula "25") (term "1,0"))
               (rule "applyOnPV" (formula "25") (term "0,1,0"))
               (rule "methodCallEmpty" (formula "25") (term "1"))
               (rule "blockEmpty" (formula "25") (term "1"))
               (rule "assignment" (formula "25") (term "1"))
               (rule "sequentialToParallel2" (formula "25"))
               (rule "simplifyUpdate2" (formula "25"))
               (rule "simplifyUpdate3" (formula "25") (term "1,0"))
               (rule "applyOnElementary" (formula "25") (term "1,0"))
               (rule "applyOnPV" (formula "25") (term "0,1,0"))
               (rule "blockEmpty" (formula "25") (term "1"))
               (rule "assignment" (formula "25") (term "1"))
               (rule "sequentialToParallel2" (formula "25"))
               (rule "simplifyUpdate2" (formula "25"))
               (rule "simplifyUpdate3" (formula "25") (term "1,0"))
               (rule "applyOnElementary" (formula "25") (term "1,0"))
               (rule "applyOnPV" (formula "25") (term "0,1,0"))
               (rule "eval_order_access4" (formula "25") (term "1") (inst "#v1=x") (inst "#v0=v"))
               (rule "variableDeclarationAssign" (formula "25") (term "1"))
               (rule "variableDeclaration" (formula "25") (term "1") (newnames "v"))
               (rule "assignment" (formula "25") (term "1"))
               (rule "sequentialToParallel2" (formula "25"))
               (rule "simplifyUpdate3" (formula "25") (term "1,0"))
               (rule "variableDeclarationAssign" (formula "25") (term "1"))
               (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_5"))
               (rule "assignmentDivisionInt" (formula "25"))
               (branch "Case 1"
                  (rule "translateJavaDivInt" (formula "25") (term "0,0,1"))
                  (rule "sequentialToParallel2" (formula "25"))
                  (rule "simplifyUpdate3" (formula "25") (term "1,0"))
                  (rule "applyOnElementary" (formula "25") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,1,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0"))
                  (rule "assignment_write_attribute" (formula "25"))
                  (branch "Normal Execution (v != null)"
                     (rule "sequentialToParallel2" (formula "25"))
                     (rule "simplifyUpdate2" (formula "25"))
                     (rule "simplifyUpdate3" (formula "25") (term "1,0"))
                     (rule "applyOnElementary" (formula "25") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "25") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "25") (term "3,0,1,0"))
                     (rule "simplifyUpdate1" (formula "25") (term "2,0,1,0"))
                     (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "25") (term "0,0,1,0"))
                     (rule "applyOnPV" (formula "25") (term "3,0,1,0"))
                     (rule "applyOnPV" (formula "25") (term "1,0,1,0"))
                     (rule "applyOnPV" (formula "25") (term "0,0,1,0"))
                     (rule "expand_divJint" (formula "25") (term "3,0,1,0"))
                     (rule "expand_moduloInteger" (formula "25") (term "3,0,1,0"))
                     (rule "replace_int_MIN" (formula "25") (term "0,3,0,1,0"))
                     (rule "replace_int_HALFRANGE" (formula "25") (term "0,0,1,3,0,1,0"))
                     (rule "replace_int_RANGE" (formula "25") (term "1,1,3,0,1,0"))
                     (rule "for_to_while" (formula "25") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
                     (rule "variableDeclarationAssign" (formula "25") (term "1"))
                     (rule "variableDeclaration" (formula "25") (term "1") (newnames "j"))
                     (rule "assignment" (formula "25") (term "1"))
                     (rule "sequentialToParallel2" (formula "25"))
                     (rule "simplifyUpdate3" (formula "25") (term "1,0"))
                     (rule "elim_double_block_3" (formula "25") (term "1"))
                     (rule "loopScopeInvDia" (formula "25") (term "1") (newnames "j_0,o,f") (inst "#x=x_1") (inst "#variant=x") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "anon_permissions_LOOP=anon_permissions_LOOP_0") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_0") (inst "anon_heap_LOOP=anon_heap_LOOP_0"))
                     (branch "Invariant Initially Valid"
                        (rule "simplifyUpdate2" (formula "25"))
                        (rule "eqSymm" (formula "25") (term "1,1,0,1,0,0,0,0,0,1"))
                        (rule "eqSymm" (formula "25") (term "1,0,0,0,1"))
                        (rule "eqSymm" (formula "25") (term "0,1,0,1,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,2,0,0,1,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,2,0,0,0,0,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,2,0,0,0,0,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,2,0,0,0,0,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,2,0,0,0,0,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,2,0,1,1,0,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,2,0,0,1,0,1,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,2,0,1,1,0,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,2,0,0,0,2,1,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,2,0,0,0,2,0,1,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "25") (term "0,2,0,1,1,0,1,0,0,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "25") (term "0,2,1,1,1,0,1,0,0,0,0,0,1"))
                        (rule "inEqSimp_geqRight" (formula "22"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "inEqSimp_ltRight" (formula "22"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0"))
                        (rule "ifthenelse_negated" (formula "25") (term "2,1,1,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,1,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,1,0,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0,0,0,0,1"))
                        (rule "ifthenelse_negated" (formula "25") (term "2,0,1,0,0,0,1"))
                        (rule "inEqSimp_gtToGeq" (formula "25") (term "1,0,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1,0,1,0,0,1"))
                        (rule "polySimp_addComm1" (formula "25") (term "0,1,0,1,0,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "1,1,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_mulAssoc" (formula "25") (term "1,0,0,1,1,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,1,1,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,1,1,0,0,1,1,0,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,1,1,0,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_addComm1" (formula "25") (term "0,1,0,1,0,1,0,1"))
                        (rule "applyOnRigidFormula" (formula "25"))
                        (rule "simplifyUpdate2" (formula "25") (term "0"))
                        (rule "simplifyUpdate2" (formula "25") (term "1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0"))
                        (rule "simplifyUpdate2" (formula "25") (term "1,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1"))
                        (rule "simplifyUpdate2" (formula "25") (term "0,1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "1,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,1,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,1"))
                        (rule "applyOnPV" (formula "25") (term "0,1,1"))
                        (rule "applyOnPV" (formula "25") (term "1,1,1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,1"))
                        (rule "applyOnPV" (formula "25") (term "0,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,1"))
                        (rule "qeq_literals" (formula "25") (term "0,1"))
                        (rule "concrete_and_1" (formula "25") (term "1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "0,0,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,1,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "0,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,1,0,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "0,0,1,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,1,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "0,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,0,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,1,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,1,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,1,1,0,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,0,0,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "0,0,0,0,0,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "1,0,0,0,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0,1,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,1,0,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "0,0,0,1,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "2,0,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,2,0,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,2,0,1,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,0,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,1,0,0,0"))
                        (rule "applyOnPV" (formula "25") (term "0,1,0,1,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "2,1,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,2,1,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,2,1,1,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,1,1,0,0,0"))
                        (rule "applyOnPV" (formula "25") (term "0,1,1,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,1,1,0,0,0"))
                        (rule "jdiv_axiom_inline" (formula "25") (term "1,1,1,0,0,0"))
                        (rule "qeq_literals" (formula "25") (term "0,1,1,1,0,0,0"))
                        (rule "ifthenelse_true" (formula "25") (term "1,1,1,0,0,0"))
                        (rule "div_literals" (formula "25") (term "1,1,1,0,0,0"))
                        (rule "bsum_lower_equals_upper" (formula "25") (term "1,1,0,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,0,0,0,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "1,0,0,0,0,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0,0,0,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,1,0,1,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,1,0,1,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0,0,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,0,1,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,1,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,2,0,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,2,0,1,0,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,0,0,0,0,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "0,0,0,0,0,0,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,1,0,0,0,0,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "0,0,1,0,0,0,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,1,0,1,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0,1,0,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,1,0,1,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,1,1,0,1,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,0,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0,0,1,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0,0,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,1,0,1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0,1,1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,1,1,0,1,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "1,0,0,1,1,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "25") (term "1"))
                        (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "11"))
                        (rule "concrete_and_3" (formula "25"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0,0,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,0,0,0,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,1,1,0,1,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "1,0,0,1,1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0,1,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,1,0,1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0,0,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,0,1,0,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,1,0,1,0,1"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,0,0,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,0,0,0,0,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,0,0,0,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0,0,0,1,0,1"))
                        (rule "applyOnPV" (formula "25") (term "0,0,0,0,0,1,0,1"))
                        (rule "applyOnPV" (formula "25") (term "1,0,0,0,0,1,0,1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0,1,0,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,1,0,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,0,1,0,0,1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,1,0,1,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0,1,1,0,1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,0,1,1,0,1"))
                        (rule "simplifyUpdate2" (formula "25") (term "1,0,0,0,1,1,0,1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,1,0,0,0,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "1,0,0,1,0,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,0,1,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,2,0,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,0,2,0,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0,2,0,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,0,0,2,0,1,0,0"))
                        (rule "applyOnPV" (formula "25") (term "0,0,0,2,0,1,0,0"))
                        (rule "applyOnPV" (formula "25") (term "1,0,0,2,0,1,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,0,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0,0,0,0,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0,0,1,1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,1,0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0,1,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,0,1,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,1,0,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,0,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,0,0,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,0,0,0,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0,0,0,1,0,1,0"))
                        (rule "applyOnPV" (formula "25") (term "0,0,0,0,0,1,0,1,0"))
                        (rule "applyOnPV" (formula "25") (term "1,0,0,0,0,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,1,0,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0,1,0,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,1,0,1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,1,0,1,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,1,0,1,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0,1,0,0,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,1,0,1,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,1,1,0,1,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,1,0,1,0,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,0,0,1,0,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,0,1,0,0,1"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,1,0,1,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,0,0,1,0,1,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0,1,0,1,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,0,1,0,1,1,0,1"))
                        (rule "applyOnPV" (formula "25") (term "1,0,0,1,0,1,1,0,1"))
                        (rule "applyOnPV" (formula "25") (term "0,0,0,1,0,1,1,0,1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,0,0,1,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0,0,0,1,1,0,1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0,0,0,1,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,0,0,1,1,0,1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,0,1,0,0,0,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "0,0,0,0,1,0,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,0,0,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,0,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,2,0,1,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,1,0,0,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,0,1,0,0,0,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,0,0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0,0,0,1,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,1,0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,0,0,1,0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0,1,0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,0,1,0,1,1,0,1,0"))
                        (rule "applyOnPV" (formula "25") (term "1,0,0,1,0,1,1,0,1,0"))
                        (rule "applyOnPV" (formula "25") (term "0,0,0,1,0,1,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,1,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0,1,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,1,0,1,0,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0,1,0,1,0,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,0,1,0,1,0,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,0,0,1,0,1,0,1,0,1"))
                        (rule "applyOnPV" (formula "25") (term "1,0,0,1,0,1,0,1,0,1"))
                        (rule "applyOnPV" (formula "25") (term "0,0,0,1,0,1,0,1,0,1"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,0,1,0,1,0,1,0,1"))
                        (rule "applyOnPV" (formula "25") (term "0,1,0,1,0,1,0,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,1,0,1"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,1,0,1,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,0,1,0,1,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,0,0,1,0,1,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0,1,0,1,0,0,0,0"))
                        (rule "applyOnPV" (formula "25") (term "0,0,0,1,0,1,0,0,0,0"))
                        (rule "applyOnPV" (formula "25") (term "1,0,0,1,0,1,0,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,0,1,0,1,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,1,0,1,0,1,0,0,0,0"))
                        (rule "applyOnPV" (formula "25") (term "0,1,0,1,0,1,0,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,1,1,0,1,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,0,1,1,0,1,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,1,1,0,1,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,1,1,0,1,0,0,0,0"))
                        (rule "applyOnPV" (formula "25") (term "1,0,1,1,0,1,0,0,0,0"))
                        (rule "applyOnPV" (formula "25") (term "0,0,1,1,0,1,0,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,1,1,0,1,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,1,1,1,0,1,0,0,0,0"))
                        (rule "applyOnPV" (formula "25") (term "0,1,1,1,0,1,0,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,0,1,0,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "25") (term "0,1,0,0,1,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,1,1,0,1"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,0,0,0,1,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0,0,0,0,1,1,0,1"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,0,0,1,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0,0,0,1,1,0,1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0,0,0,1,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,0,0,1,0,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,0,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0,0,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,2,0,1,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,0,0,1,0,0,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,0,1,0,0,0,0,0,0"))
                        (rule "applyOnPV" (formula "25") (term "0,1,0,0,1,0,0,0,0,0,0"))
                        (rule "times_zero_2" (formula "25") (term "1,0,0,1,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,1,0,0,0,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,0,0,0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0,0,0,0,1,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,1,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,1,0,1,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0,1,0,1,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,0,1,0,1,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,0,0,1,0,1,0,1,0,1,0"))
                        (rule "applyOnPV" (formula "25") (term "1,0,0,1,0,1,0,1,0,1,0"))
                        (rule "applyOnPV" (formula "25") (term "0,0,0,1,0,1,0,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,0,1,0,1,0,1,0,1,0"))
                        (rule "applyOnPV" (formula "25") (term "0,1,0,1,0,1,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,1,0,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,1,0,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,1,0,1,0,1,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,1,0,1,0,1,0,0,0,0"))
                        (rule "applyOnPV" (formula "25") (term "0,1,1,0,1,0,1,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,1,1,0,1,0,1,0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,1,1,0,1,0,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,1,1,1,0,1,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,1,1,1,1,0,1,0,0,0,0"))
                        (rule "applyOnPV" (formula "25") (term "0,1,1,1,1,0,1,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,1,1,1,0,1,0,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,1,0,0,1,0,0,1"))
                        (rule "applyOnPV" (formula "25") (term "0,0,0,1,0,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,1,1,0,1"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,0,0,0,0,1,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,0,0,0,0,0,1,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0,0,0,0,0,1,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,0,0,0,0,0,0,1,1,0,1"))
                        (rule "applyOnPV" (formula "25") (term "0,0,0,0,0,0,0,1,1,0,1"))
                        (rule "applyOnPV" (formula "25") (term "1,0,0,0,0,0,0,1,1,0,1"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,0,0,0,0,0,1,1,0,1"))
                        (rule "applyOnPV" (formula "25") (term "0,1,0,0,0,0,0,1,1,0,1"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,1,0,0,0,1,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,0,1,0,0,0,1,1,0,1"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,0,0,1,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0,0,0,1,0,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,1,0,0,1,0,0,1,0"))
                        (rule "applyOnPV" (formula "25") (term "0,0,0,1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0,1,0,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,0,0,0,0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,0,0,0,0,0,0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0,0,0,0,0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,0,0,0,0,0,1,1,0,1,0"))
                        (rule "applyOnPV" (formula "25") (term "1,0,0,0,0,0,0,1,1,0,1,0"))
                        (rule "applyOnPV" (formula "25") (term "0,0,0,0,0,0,0,1,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,0,0,0,0,0,1,1,0,1,0"))
                        (rule "applyOnPV" (formula "25") (term "0,1,0,0,0,0,0,1,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,1,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,1,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,1,0,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,1,0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,1,1,0,1,0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,0,0,1,1,0,1"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,0,0,1,0,0,0,1,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,1,0,0,0,1,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,0,1,0,0,0,1,0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,0,0,1,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,1,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,0,0,1,1,0,1"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,0,1,0,0,0,1,1,0,1"))
                        (rule "applyOnPV" (formula "25") (term "0,0,1,0,0,1,0,0,0,1,1,0,1"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,0,0,1,0,0,0,1,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,0,1,0,0,0,1,0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,0,0,1,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,0,1,0,0,0,1,0,0,0,0"))
                        (rule "applyOnPV" (formula "25") (term "0,0,1,0,0,1,0,0,0,1,0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0,1,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,1,0,1,0"))
                        (rule "mod_axiom" (formula "23") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                        (rule "div_literals" (formula "23") (term "0,1,1,1"))
                        (rule "times_zero_2" (formula "23") (term "1,1,1"))
                        (rule "add_zero_right" (formula "23") (term "1,1"))
                        (rule "add_literals" (formula "23") (term "1"))
                        (rule "close" (formula "23") (ifseqformula "18"))
                     )
                     (branch "Invariant Preserved and Used"
                        (rule "false_to_not_true" (formula "26") (term "0,1,0,1,1,1,1"))
                        (rule "concrete_and_3" (formula "26") (term "0,1,1,1"))
                        (rule "elementOfAllFields" (formula "26") (term "0,0,0,0,1,0,1,1,0,1,1,1,1"))
                        (rule "translateJavaSubInt" (formula "26") (term "0,1,1,1,0,1,1,1,1"))
                        (rule "eqSymm" (formula "26") (term "1,0,0,1,0,1,1,0,1,1,1,1"))
                        (rule "eqSymm" (formula "26") (term "1,0,0,0,0,0,1,1,0,1,1,1,1"))
                        (rule "eqSymm" (formula "26") (term "1,1,0,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
                        (rule "eqSymm" (formula "26") (term "0,1,0,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
                        (rule "translateJavaSubInt" (formula "26") (term "0,0,1,1"))
                        (rule "eqSymm" (formula "26") (term "1,1,0,1,0,0,0,0,0,0,1,1,1"))
                        (rule "eqSymm" (formula "26") (term "0,1,0,1,0,0,0,0,0,0,1,1,1"))
                        (rule "eqSymm" (formula "26") (term "1,0,0,0,0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,0,0,0,0,1,1,0,1,0,0,0,0,1,1,0,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,1,1,0,1,0,1,0,0,0,0,1,1,0,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,1,0,1,0,0,0,0,1,1,0,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,0,0,1,0,1,0,0,0,0,1,1,0,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,0,0,1,0,1,0,0,0,1,1,0,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,1,0,1,1,0,1,0,0,0,1,1,0,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,1,0,1,1,0,1,0,0,0,0,1,1,0,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0,0,1,1,0,1,0,0,0,1,1,0,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,1,1,0,0,1,1,0,1,0,0,0,1,1,0,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,0,1,1,0,1,0,0,0,1,1,0,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,1,1,0,1,0,0,0,1,1,0,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,0,0,0,0,1,1,0,1,0,0,0,1,1,0,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,1,1,0,1,0,1,0,0,0,1,1,0,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,1,0,1,0,0,0,1,1,0,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,1,0,1,1,0,1,0,0,0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,0,0,1,0,1,0,0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,1,0,1,1,0,1,0,0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0,0,1,1,0,1,0,0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,1,1,0,0,1,1,0,1,0,0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,1,0,1,0,0,0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,1,1,0,1,0,1,0,0,0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0,1,1,0,1,0,0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,0,1,1,0,1,0,0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,1,1,0,1,0,0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,0,0,0,0,1,1,0,1,0,0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,1,1,0,1,0,1,0,0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,1,0,1,0,0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,0,0,1,0,1,0,0,0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,0,0,0,0,1,1,0,1,0,0,0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,0,2,0,1,0,0,0,0,0,1,1,0,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,0,2,1,1,0,0,0,0,0,1,1,0,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,0,2,1,1,0,0,0,0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,0,2,0,1,0,0,0,0,1,1,1"))
                        (rule "sequentialToParallel2" (formula "26") (term "1"))
                        (rule "simplifyUpdate3" (formula "26") (term "1,0,1"))
                        (rule "applyOnElementary" (formula "26") (term "1,0,1"))
                        (rule "sequentialToParallel2" (formula "26"))
                        (rule "simplifyUpdate2" (formula "26"))
                        (rule "simplifyUpdate3" (formula "26") (term "1,0"))
                        (rule "impRight" (formula "26"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "simplifyUpdate3" (formula "1") (term "1,0"))
                        (rule "andLeft" (formula "1"))
                        (rule "simplifyUpdate2" (formula "2"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "simplifyUpdate3" (formula "2") (term "1,0"))
                        (rule "andLeft" (formula "1"))
                        (rule "simplifyUpdate2" (formula "2"))
                        (rule "andLeft" (formula "3"))
                        (rule "simplifyUpdate2" (formula "3"))
                        (rule "andLeft" (formula "1"))
                        (rule "simplifyUpdate2" (formula "2"))
                        (rule "andLeft" (formula "1"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "applyOnParallel" (formula "32") (term "1,0"))
                        (rule "simplifyUpdate3" (formula "32") (term "0,1,0"))
                        (rule "simplifyUpdate3" (formula "32") (term "1,1,0"))
                        (rule "applyOnElementary" (formula "4") (term "1,0"))
                        (rule "applyOnElementary" (formula "3") (term "1,0"))
                        (rule "applyOnParallel" (formula "2") (term "1,0"))
                        (rule "simplifyUpdate3" (formula "2") (term "0,1,0"))
                        (rule "applyOnParallel" (formula "1") (term "1,0"))
                        (rule "simplifyUpdate3" (formula "1") (term "0,1,0"))
                        (rule "applyOnParallel" (formula "32") (term "0,1,0"))
                        (rule "applyOnElementary" (formula "32") (term "1,1,0"))
                        (rule "applyOnElementary" (formula "2") (term "1,1,0"))
                        (rule "applyOnElementary" (formula "1") (term "1,1,0"))
                        (rule "applyOnParallel" (formula "32") (term "0,0,1,0"))
                        (rule "simplifyUpdate3" (formula "32") (term "1,0,0,1,0"))
                        (rule "applyOnElementary" (formula "32") (term "1,0,1,0"))
                        (rule "applyOnElementary" (formula "32") (term "0,0,0,1,0"))
                        (rule "applyOnPV" (formula "32") (term "0,0,0,0,1,0"))
                        (rule "sequentialToParallel1" (formula "32") (term "0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "32") (term "0,1,1,0"))
                        (rule "simplifyUpdate3" (formula "32") (term "1,0,0,1,1,0"))
                        (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,1,0,1,0,0,0,0,0,0,0,1,1,0,1"))
                        (rule "polySimp_addComm0" (formula "32") (term "0,2,1,1,1,0,1,0,0,0,0,0,0,0,1,1,0,1"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,1,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,2,1,1,1,0,1,0,1"))
                        (rule "ifthenelse_negated" (formula "32") (term "2,0,1,0,0,0,0,0,1,1,0,1"))
                        (rule "ifthenelse_negated" (formula "32") (term "2,1,1,0,0,0,0,0,1,1,0,1"))
                        (rule "applyOnRigidFormula" (formula "6"))
                        (rule "simplifyUpdate1" (formula "6") (term "0"))
                        (rule "simplifyUpdate1" (formula "6") (term "1"))
                        (rule "applyOnPV" (formula "6") (term "0"))
                        (rule "applyOnPV" (formula "6") (term "1"))
                        (rule "applyOnRigidFormula" (formula "5"))
                        (rule "simplifyUpdate1" (formula "5") (term "1"))
                        (rule "applyOnPV" (formula "5") (term "0"))
                        (rule "ifthenelse_negated" (formula "2") (term "2,1,1"))
                        (rule "ifthenelse_negated" (formula "2") (term "2,0,1"))
                        (rule "applyOnRigidTerm" (formula "4") (term "0,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "2,0,1,0"))
                        (rule "applyOnPV" (formula "4") (term "0,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "3"))
                        (rule "applyOnRigidTerm" (formula "2") (term "0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "2") (term "2,0,1,1,0"))
                        (rule "applyOnPV" (formula "2") (term "0,0,1,1,0"))
                        (rule "applyOnRigidTerm" (formula "1") (term "0,1,1,0"))
                        (rule "applyOnPV" (formula "1") (term "0,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "2,0,1,1,0"))
                        (rule "applyOnRigidTerm" (formula "32") (term "0,1,0,1,0"))
                        (rule "applyOnPV" (formula "32") (term "0,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "32") (term "2,0,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "32") (term "0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "32") (term "1,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "32") (term "0,0,1,1,0"))
                        (rule "applyOnPV" (formula "32") (term "1,0,1,1,0"))
                        (rule "applyOnPV" (formula "32") (term "0,0,1,1,0"))
                        (rule "applyOnRigidTerm" (formula "4") (term "1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "3") (term "0"))
                        (rule "simplifyUpdate2" (formula "3") (term "0,0"))
                        (rule "applyOnRigidTerm" (formula "2") (term "1,0,1,1,0"))
                        (rule "applyOnRigidTerm" (formula "1") (term "1,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "32") (term "1,1,0,0,1,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,0,0,0,1,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,0,0,1,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,0,1,1,0,1,0,0,0,1,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "32") (term "0,1,0,0,1,1,0,1,0,0,0,1,1,0,1"))
                        (rule "applyOnRigidTerm" (formula "32") (term "1,0,1,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "4") (term "0,1,0,0,1,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,0,1,1,0,1"))
                        (rule "applyOnRigidTerm" (formula "4") (term "0,1,0,1,0"))
                        (rule "applyOnPV" (formula "4") (term "0,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "2,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "1,0,1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "3") (term "1,0"))
                        (rule "applyOnRigidFormula" (formula "3") (term "0,0"))
                        (rule "simplifyUpdate2" (formula "3") (term "0,0,0"))
                        (rule "applyOnRigidTerm" (formula "2") (term "0,1,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "2") (term "1,0,1,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "2") (term "2,0,1,0,1,1,0"))
                        (rule "applyOnPV" (formula "2") (term "0,0,1,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0,1"))
                        (rule "applyOnRigidTerm" (formula "1") (term "0,1,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "1,0,1,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "2,0,1,0,1,1,0"))
                        (rule "applyOnPV" (formula "1") (term "0,0,1,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0,1,0,1"))
                        (rule "applyOnRigidTerm" (formula "32") (term "0,1,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "32") (term "1,0,1,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "32") (term "2,0,1,0,1,0,1,0"))
                        (rule "applyOnPV" (formula "32") (term "0,0,1,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "4") (term "0,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "3") (term "0,1,0,1,1,0"))
                        (rule "applyOnPV" (formula "3") (term "0,0,1,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "2,0,1,0,1,1,0"))
                        (rule "applyOnRigidFormula" (formula "3") (term "0,1,0"))
                        (rule "applyOnRigidFormula" (formula "3") (term "1,0,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "2") (term "0,1,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,1,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "6"))
                        (rule "dismissNonSelectedField" (formula "32") (term "0,1,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "4") (term "0,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "3") (term "1,0,1,0,1,1,0"))
                        (rule "applyOnRigidFormula" (formula "3") (term "1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "0,1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "3") (term "0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "3") (term "1,1,0,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "1,1,1,0,0"))
                        (rule "applyOnRigidFormula" (formula "2"))
                        (rule "simplifyUpdate1" (formula "2") (term "1"))
                        (rule "simplifyUpdate1" (formula "2") (term "0"))
                        (rule "applyOnRigidFormula" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "32") (term "0,1,0,1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "4"))
                        (rule "applyOnRigidFormula" (formula "3") (term "1,1,0"))
                        (rule "applyOnRigidTerm" (formula "3") (term "0,1,0,1,1,0,1,0"))
                        (rule "applyOnPV" (formula "3") (term "0,0,1,0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "2,0,1,0,1,1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "3") (term "0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "1,0,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "3") (term "0,1,1,0,0"))
                        (rule "applyOnPV" (formula "3") (term "0,0,1,1,0,0"))
                        (rule "applyOnRigidTerm" (formula "2") (term "1"))
                        (rule "simplifyUpdate1" (formula "2") (term "1,1"))
                        (rule "simplifyUpdate1" (formula "2") (term "2,1"))
                        (rule "simplifyUpdate1" (formula "2") (term "0,1"))
                        (rule "applyOnRigidTerm" (formula "2") (term "0"))
                        (rule "simplifyUpdate1" (formula "2") (term "1,0"))
                        (rule "simplifyUpdate1" (formula "2") (term "2,0"))
                        (rule "simplifyUpdate1" (formula "2") (term "0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,1,0,1,1,0,0"))
                        (rule "applyOnRigidFormula" (formula "4") (term "0"))
                        (rule "simplifyUpdate2" (formula "4") (term "0,0"))
                        (rule "applyOnRigidTerm" (formula "3") (term "0,1,0,1,0,0,1,1,0"))
                        (rule "applyOnPV" (formula "3") (term "0,0,1,0,1,0,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "2,0,1,0,1,0,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "1,0,1,0,1,0,0,1,1,0"))
                        (rule "applyOnRigidTerm" (formula "3") (term "1,0,1,0,1,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "3") (term "0,1,0,0,0,0,0,1,0"))
                        (rule "applyOnPV" (formula "3") (term "0,0,1,0,0,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "2,0,1,0,0,0,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "2") (term "1,1"))
                        (rule "simplifyUpdate1" (formula "2") (term "1,1,1"))
                        (rule "applyOnPV" (formula "2") (term "0,1,1"))
                        (rule "applyOnRigidTerm" (formula "2") (term "2,1"))
                        (rule "simplifyUpdate1" (formula "2") (term "2,2,1"))
                        (rule "simplifyUpdate1" (formula "2") (term "1,2,1"))
                        (rule "applyOnRigidTerm" (formula "2") (term "1,0"))
                        (rule "simplifyUpdate1" (formula "2") (term "1,1,0"))
                        (rule "applyOnPV" (formula "2") (term "0,1,0"))
                        (rule "applyOnRigidTerm" (formula "2") (term "2,0"))
                        (rule "simplifyUpdate1" (formula "2") (term "2,2,0"))
                        (rule "simplifyUpdate1" (formula "2") (term "1,2,0"))
                        (rule "applyOnRigidFormula" (formula "1") (term "0"))
                        (rule "simplifyUpdate2" (formula "1") (term "0,0"))
                        (rule "simplifyUpdate2" (formula "1") (term "1,0"))
                        (rule "applyOnRigidFormula" (formula "4") (term "1,0"))
                        (rule "applyOnRigidFormula" (formula "4") (term "0,0"))
                        (rule "simplifyUpdate2" (formula "4") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                        (rule "applyOnRigidFormula" (formula "3") (term "0,1,1,0"))
                        (rule "applyOnRigidTerm" (formula "3") (term "1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "1,1,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "3") (term "1,0,1,0,0,0,0,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "2") (term "0,2,1"))
                        (rule "simplifyUpdate1" (formula "2") (term "1,0,2,1"))
                        (rule "dismissNonSelectedField" (formula "2") (term "0,1,0,1,0,0,2,0"))
                        (rule "applyOnRigidFormula" (formula "1") (term "0,0"))
                        (rule "simplifyUpdate2" (formula "1") (term "1,0,0"))
                        (rule "applyOnRigidFormula" (formula "1") (term "1,0"))
                        (rule "applyOnRigidFormula" (formula "4") (term "0,1,0"))
                        (rule "applyOnRigidFormula" (formula "4") (term "1,1,0"))
                        (rule "applyOnRigidFormula" (formula "4") (term "1,0,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "0,1,0,0"))
                        (rule "applyOnRigidFormula" (formula "3") (term "1,0,1,1,0"))
                        (rule "applyOnRigidFormula" (formula "3") (term "0,0,1,1,0"))
                        (rule "simplifyUpdate2" (formula "3") (term "1,0,0,1,1,0"))
                        (rule "applyOnRigidTerm" (formula "3") (term "0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "1,0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "2,0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "0,0,1,1,0,1,0"))
                        (rule "applyOnPV" (formula "3") (term "1,0,1,1,0,1,0"))
                        (rule "applyOnPV" (formula "3") (term "0,0,1,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "3") (term "1,1,1,0,1,0"))
                        (rule "applyOnPV" (formula "3") (term "0,1,1,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "3") (term "0,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "2,0,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "0,0,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "1,0,0,0,0,1,0"))
                        (rule "applyOnPV" (formula "3") (term "0,0,0,0,0,1,0"))
                        (rule "applyOnPV" (formula "3") (term "1,0,0,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "2") (term "0,0,2,1"))
                        (rule "simplifyUpdate1" (formula "2") (term "2,0,0,2,1"))
                        (rule "applyOnPV" (formula "2") (term "0,0,0,2,1"))
                        (rule "applyOnRigidFormula" (formula "2") (term "0,2,0"))
                        (rule "simplifyUpdate1" (formula "2") (term "1,0,2,0"))
                        (rule "applyOnRigidFormula" (formula "1") (term "0,0,0"))
                        (rule "simplifyUpdate2" (formula "1") (term "0,0,0,0"))
                        (rule "applyOnRigidFormula" (formula "1") (term "0,1,0"))
                        (rule "simplifyUpdate2" (formula "1") (term "0,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "4") (term "1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "0,1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "4") (term "0,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "4") (term "0,1,1,0"))
                        (rule "applyOnRigidTerm" (formula "4") (term "1,1,0,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "1,1,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "0,1,0,1,0,0,1,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "0,1,0,1,0,0,0,0,1,1,0"))
                        (rule "applyOnRigidTerm" (formula "3") (term "0,1,0,0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "2,0,1,0,0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "1,0,1,0,0,1,1,0,1,0"))
                        (rule "applyOnPV" (formula "3") (term "0,0,1,0,0,1,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "3") (term "0,1,0,0,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "2,0,1,0,0,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "1,0,1,0,0,0,0,0,1,0"))
                        (rule "applyOnPV" (formula "3") (term "0,0,1,0,0,0,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "2") (term "1,0,0,2,1"))
                        (rule "simplifyUpdate1" (formula "2") (term "2,1,0,0,2,1"))
                        (rule "applyOnPV" (formula "2") (term "0,1,0,0,2,1"))
                        (rule "simplifyUpdate1" (formula "2") (term "1,1,0,0,2,1"))
                        (rule "applyOnRigidTerm" (formula "2") (term "0,0,2,0"))
                        (rule "simplifyUpdate1" (formula "2") (term "2,0,0,2,0"))
                        (rule "simplifyUpdate1" (formula "2") (term "1,0,0,2,0"))
                        (rule "simplifyUpdate1" (formula "2") (term "0,0,0,2,0"))
                        (rule "applyOnPV" (formula "2") (term "1,0,0,2,0"))
                        (rule "applyOnPV" (formula "2") (term "0,0,0,2,0"))
                        (rule "applyOnRigidFormula" (formula "1") (term "1,0,0,0"))
                        (rule "applyOnPV" (formula "1") (term "1,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "0,1,0,0,0"))
                        (rule "applyOnRigidFormula" (formula "1") (term "1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "1") (term "0,0,1,0"))
                        (rule "simplifyUpdate2" (formula "1") (term "1,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "4") (term "1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "1,1,1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "4") (term "0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "1,0,0,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "4") (term "1,0,1,1,0"))
                        (rule "applyOnRigidFormula" (formula "4") (term "0,0,1,1,0"))
                        (rule "simplifyUpdate2" (formula "4") (term "1,0,0,1,1,0"))
                        (rule "applyOnRigidTerm" (formula "4") (term "0,1,1,0,0"))
                        (rule "applyOnPV" (formula "4") (term "0,0,1,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "0,1,0,1,0,0,1,0,1,1,0"))
                        (rule "applyOnRigidFormula" (formula "3") (term "0,0,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "1,0,0,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "0,1,0,0,1,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "0,1,0,0,0,0,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "1") (term "0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "1,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "0,0,1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "1") (term "1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "1,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "0,1,1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "1") (term "0,0,0,1,0"))
                        (rule "simplifyUpdate2" (formula "1") (term "0,0,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "4") (term "0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "2,0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "1,0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "0,0,1,1,0,1,0"))
                        (rule "applyOnPV" (formula "4") (term "1,0,1,1,0,1,0"))
                        (rule "applyOnPV" (formula "4") (term "0,0,1,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "4") (term "1,1,1,0,1,0"))
                        (rule "applyOnPV" (formula "4") (term "0,1,1,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "4") (term "0,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "0,0,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "2,0,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "1,0,0,0,0,1,0"))
                        (rule "applyOnPV" (formula "4") (term "0,0,0,0,0,1,0"))
                        (rule "applyOnPV" (formula "4") (term "1,0,0,0,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "4") (term "0,1,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "1,0,1,0,1,1,0"))
                        (rule "applyOnRigidFormula" (formula "4") (term "0,0,0,1,1,0"))
                        (rule "simplifyUpdate2" (formula "4") (term "1,0,0,0,1,1,0"))
                        (rule "applyOnRigidFormula" (formula "3") (term "0,1,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "1,0,1,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "0,1,0,0,1,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "0,1,0,0,0,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "1") (term "1,0,1,0,1,0"))
                        (rule "applyOnPV" (formula "1") (term "0,1,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "2,1,0,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "1") (term "0,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "2,0,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "1,0,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "0,0,0,1,0,1,0"))
                        (rule "applyOnPV" (formula "1") (term "1,0,0,1,0,1,0"))
                        (rule "applyOnPV" (formula "1") (term "0,0,0,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "1") (term "1,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "2,1,1,1,0,1,0"))
                        (rule "applyOnPV" (formula "1") (term "0,1,1,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "1") (term "0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "1,0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "2,0,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "0,0,1,1,0,1,0"))
                        (rule "applyOnPV" (formula "1") (term "1,0,1,1,0,1,0"))
                        (rule "applyOnPV" (formula "1") (term "0,0,1,1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "1") (term "1,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "0,1,0,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "4") (term "0,0,1,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "1,0,0,1,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "2,0,0,1,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "0,0,0,1,0,1,1,0"))
                        (rule "applyOnPV" (formula "4") (term "1,0,0,1,0,1,1,0"))
                        (rule "applyOnPV" (formula "4") (term "0,0,0,1,0,1,1,0"))
                        (rule "applyOnRigidFormula" (formula "4") (term "0,0,0,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "0,0,0,0,0,1,1,0"))
                        (rule "applyOnRigidFormula" (formula "4") (term "1,0,0,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "0,1,0,0,0,1,1,0"))
                        (rule "applyOnRigidTerm" (formula "3") (term "0,0,1,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "1,0,0,1,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "2,0,0,1,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "0,0,0,1,0,1,1,0"))
                        (rule "applyOnPV" (formula "3") (term "1,0,0,1,0,1,1,0"))
                        (rule "applyOnPV" (formula "3") (term "0,0,0,1,0,1,1,0"))
                        (rule "applyOnRigidTerm" (formula "3") (term "0,0,0,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "1,0,0,0,0,1,1,0"))
                        (rule "applyOnRigidTerm" (formula "1") (term "1,1,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "2,1,1,0,1,0,1,0"))
                        (rule "applyOnPV" (formula "1") (term "0,1,1,0,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "1,1,1,0,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "1") (term "1,1,1,1,0,1,0"))
                        (rule "applyOnPV" (formula "1") (term "0,1,1,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "1,1,1,1,1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "2,1,1,1,1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "1") (term "1,1,0,0,0,1,0"))
                        (rule "applyOnPV" (formula "1") (term "0,1,1,0,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "4") (term "1,0,0,0,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "1,1,0,0,0,0,1,1,0"))
                        (rule "applyOnRigidTerm" (formula "4") (term "1,1,0,0,0,1,1,0"))
                        (rule "applyOnPV" (formula "4") (term "0,1,1,0,0,0,1,1,0"))
                        (rule "applyOnRigidTerm" (formula "3") (term "0,0,0,0,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "applyOnRigidTerm" (formula "4") (term "0,1,0,0,0,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "1,0,1,0,0,0,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "0,0,1,0,0,0,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "4") (term "2,0,1,0,0,0,0,1,1,0"))
                        (rule "applyOnPV" (formula "4") (term "1,0,1,0,0,0,0,1,1,0"))
                        (rule "applyOnPV" (formula "4") (term "0,0,1,0,0,0,0,1,1,0"))
                        (rule "applyOnRigidTerm" (formula "4") (term "1,1,0,0,0,0,1,1,0"))
                        (rule "applyOnPV" (formula "4") (term "0,1,1,0,0,0,0,1,1,0"))
                        (rule "applyOnRigidTerm" (formula "3") (term "0,0,0,0,0,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "1,0,0,0,0,0,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "0,0,0,0,0,0,0,1,1,0"))
                        (rule "simplifyUpdate1" (formula "3") (term "2,0,0,0,0,0,0,1,1,0"))
                        (rule "applyOnPV" (formula "3") (term "1,0,0,0,0,0,0,1,1,0"))
                        (rule "applyOnPV" (formula "3") (term "0,0,0,0,0,0,0,1,1,0"))
                        (rule "applyOnRigidTerm" (formula "3") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "applyOnPV" (formula "3") (term "0,1,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1,1,0"))
                        (rule "pullOutSelect" (formula "32") (term "0,1,0,1,0,1,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_table_0"))
                        (rule "simplifySelectOfMemset" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "replaceKnownSelect_taclet10001110_0" (formula "3") (term "0,1,0,0,0,2,0"))
                        (rule "replaceKnownSelect_taclet10001110_0" (formula "2") (term "0,1,0,0,1,1,0,1,0"))
                        (rule "replaceKnownSelect_taclet10001110_0" (formula "2") (term "0,1,0,0,0,1,0,1,0"))
                        (rule "replaceKnownSelect_taclet10001110_0" (formula "4") (term "0,1,0,0,1,1,0,1,0"))
                        (rule "replaceKnownSelect_taclet10001110_0" (formula "5") (term "0,1,0,0,0,0,0,1,0"))
                        (rule "replaceKnownSelect_taclet10001110_0" (formula "4") (term "0,1,0,0,0,0,0,1,0"))
                        (rule "replaceKnownSelect_taclet10001110_0" (formula "5") (term "0,1,0,0,1,1,0,1,0"))
                        (rule "replaceKnownSelect_taclet10001110_0" (formula "4") (term "0,1,0,0,0,1,0,1,1,0"))
                        (rule "replaceKnownSelect_taclet10001110_0" (formula "5") (term "0,1,0,0,0,1,0,1,1,0"))
                        (rule "replaceKnownSelect_taclet10001110_0" (formula "5") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                        (rule "replaceKnownSelect_taclet10001110_0" (formula "4") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_6"))
                        (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                        (rule "equalUnique" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "concrete_and_2" (formula "1") (term "0,0,1,0,0"))
                        (rule "concrete_and_2" (formula "1") (term "0,1,0,0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "28"))
                        (rule "concrete_and_2" (formula "1") (term "0,0,0"))
                        (rule "concrete_and_2" (formula "1") (term "0,0"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_4" (formula "1") (term "0,0"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10001110_2" (formula "32") (term "0,1,0,1,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10001110_2" (formula "2") (term "0,1,0,0,0,2,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10001110_2" (formula "1") (term "0,1,0,0,1,1,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10001110_2" (formula "4") (term "0,1,0,0,0,0,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10001110_2" (formula "1") (term "0,1,0,0,0,1,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10001110_2" (formula "3") (term "0,1,0,0,1,1,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10001110_2" (formula "4") (term "0,1,0,0,1,1,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10001110_2" (formula "3") (term "0,1,0,0,0,0,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10001110_2" (formula "4") (term "0,1,0,0,0,1,0,1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10001110_2" (formula "3") (term "0,1,0,0,0,1,0,1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10001110_2" (formula "3") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10001110_2" (formula "4") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                        (rule "expand_subJint" (formula "32") (term "0,1,1,1,0,1"))
                        (rule "polySimp_elimSub" (formula "32") (term "0,0,1,1,1,0,1"))
                        (rule "polySimp_addComm0" (formula "32") (term "0,0,1,1,1,0,1"))
                        (rule "expand_subJint" (formula "32") (term "0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "32") (term "0,0,1,1,0"))
                        (rule "polySimp_addComm0" (formula "32") (term "0,0,1,1,0"))
                        (rule "expand_moduloInteger" (formula "32") (term "0,1,1,1,0,1"))
                        (rule "replace_int_MIN" (formula "32") (term "0,0,1,1,1,0,1"))
                        (rule "replace_int_HALFRANGE" (formula "32") (term "0,0,1,0,1,1,1,0,1"))
                        (rule "replace_int_RANGE" (formula "32") (term "1,1,0,1,1,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0,1,0,1,1,1,0,1"))
                        (rule "expand_moduloInteger" (formula "32") (term "0,1,1,0"))
                        (rule "replace_int_HALFRANGE" (formula "32") (term "0,0,1,0,1,1,0"))
                        (rule "replace_int_RANGE" (formula "32") (term "1,1,0,1,1,0"))
                        (rule "replace_int_MIN" (formula "32") (term "0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0,1,0,1,1,0"))
                        (rule "commute_and" (formula "3") (term "0,0"))
                        (rule "commute_and" (formula "4") (term "0,0"))
                        (rule "commute_and" (formula "1") (term "0,0,0"))
                        (rule "commute_and" (formula "4") (term "1,0,0,1,1,0"))
                        (rule "commute_and" (formula "1") (term "0,0,0,1,0"))
                        (rule "commute_and_2" (formula "1") (term "0,1,0"))
                        (rule "commute_and" (formula "3") (term "0,0,1,1,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,1,0"))
                        (rule "commute_and" (formula "4") (term "0,0,0,1,1,0"))
                        (rule "commute_and" (formula "1") (term "0,0,0,1,0"))
                        (rule "cnf_rightDist" (formula "4") (term "0,0,1,1,0"))
                        (rule "commute_or" (formula "4") (term "0,0,0,1,1,0"))
                        (rule "cnf_rightDist" (formula "4") (term "1,0,0,1,1,0"))
                        (rule "commute_or" (formula "4") (term "0,1,0,0,1,1,0"))
                        (rule "commute_or" (formula "4") (term "1,1,0,0,1,1,0"))
                        (rule "cnf_rightDist" (formula "4") (term "0,0,0,1,1,0"))
                        (rule "commute_or" (formula "4") (term "1,0,0,0,1,1,0"))
                        (rule "commute_or" (formula "4") (term "0,0,0,0,1,1,0"))
                        (rule "shift_paren_and" (formula "4") (term "0,0,1,1,0"))
                        (rule "ifElseUnfold" (formula "32") (term "1") (inst "#boolv=x_7"))
                        (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_7"))
                        (rule "less_than_comparison_simple" (formula "32") (term "1"))
                        (rule "sequentialToParallel2" (formula "32"))
                        (rule "simplifyUpdate3" (formula "32") (term "1,0"))
                        (rule "applyOnElementary" (formula "32") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "32") (term "0,1,0"))
                        (rule "simplifyUpdate1" (formula "32") (term "2,0,1,0"))
                        (rule "simplifyUpdate1" (formula "32") (term "1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "32") (term "0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "32") (term "0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "32") (term "1,0,0,1,0"))
                        (rule "applyOnPV" (formula "32") (term "0,0,0,1,0"))
                        (rule "applyOnPV" (formula "32") (term "1,0,0,1,0"))
                        (rule "commute_and_2" (formula "4") (term "0,0,1,1,0"))
                        (rule "ifElseSplit" (formula "32"))
                        (branch "if x_7 true"
                           (rule "simplifyUpdate2" (formula "33"))
                           (rule "simplifyUpdate2" (formula "1"))
                           (rule "applyOnRigidFormula" (formula "1"))
                           (rule "applyOnPV" (formula "1") (term "0"))
                           (rule "simplifyUpdate1" (formula "1") (term "1"))
                           (rule "ifthenelse_concrete3" (formula "1"))
                           (rule "boolean_not_equal_2" (formula "1") (term "1"))
                           (rule "concrete_or_4" (formula "1"))
                           (rule "variableDeclarationAssign" (formula "33") (term "1"))
                           (rule "variableDeclaration" (formula "33") (term "1") (newnames "key"))
                           (rule "assignment_array2" (formula "33"))
                           (branch "Normal Execution (oldTable != null)"
                              (rule "sequentialToParallel2" (formula "33"))
                              (rule "simplifyUpdate3" (formula "33") (term "1,0"))
                              (rule "applyOnElementary" (formula "33") (term "1,0"))
                              (rule "applyOnRigidTerm" (formula "33") (term "0,1,0"))
                              (rule "simplifyUpdate1" (formula "33") (term "0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "33") (term "2,0,1,0"))
                              (rule "simplifyUpdate1" (formula "33") (term "1,0,1,0"))
                              (rule "applyOnPV" (formula "33") (term "0,0,1,0"))
                              (rule "applyOnPV" (formula "33") (term "1,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "33") (term "2,0,1,0"))
                              (rule "applyOnPV" (formula "33") (term "0,2,0,1,0"))
                              (rule "pullOutSelect" (formula "33") (term "0,1,0") (inst "selectSK=arr_0"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                              (rule "eqClose" (formula "1") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "1") (term "0,0"))
                              (rule "ifthenelse_true" (formula "1") (term "0"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010001110_4" (formula "33") (term "0,1,0"))
                              (rule "ifUnfold" (formula "33") (term "1") (inst "#boolv=x_7"))
                              (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_8"))
                              (rule "inequality_comparison_simple" (formula "33") (term "1"))
                              (rule "sequentialToParallel2" (formula "33"))
                              (rule "simplifyUpdate3" (formula "33") (term "1,0"))
                              (rule "applyOnElementary" (formula "33") (term "1,0"))
                              (rule "applyOnRigidTerm" (formula "33") (term "0,1,0"))
                              (rule "simplifyUpdate1" (formula "33") (term "2,0,1,0"))
                              (rule "simplifyUpdate1" (formula "33") (term "1,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "33") (term "0,0,1,0"))
                              (rule "applyOnPV" (formula "33") (term "0,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "33") (term "1,0,0,1,0"))
                              (rule "commute_and_2" (formula "5") (term "0,0,0,1,1,0"))
                              (rule "ifSplit" (formula "33"))
                              (branch "if x_8 true"
                                 (rule "simplifyUpdate2" (formula "1"))
                                 (rule "simplifyUpdate2" (formula "34"))
                                 (rule "applyOnRigidFormula" (formula "1"))
                                 (rule "simplifyUpdate1" (formula "1") (term "1"))
                                 (rule "applyOnPV" (formula "1") (term "0"))
                                 (rule "ifthenelse_concrete4" (formula "1"))
                                 (rule "boolean_not_equal_2" (formula "1") (term "1"))
                                 (rule "concrete_or_4" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "variableDeclarationAssign" (formula "34") (term "1"))
                                 (rule "variableDeclaration" (formula "34") (term "1") (newnames "value"))
                                 (rule "eval_order_array_access5" (formula "34") (term "1") (inst "#v1=x_7") (inst "#ar1=o_arr"))
                                 (rule "variableDeclarationAssign" (formula "34") (term "1"))
                                 (rule "variableDeclaration" (formula "34") (term "1") (newnames "o_arr_3"))
                                 (rule "assignment" (formula "34") (term "1"))
                                 (rule "sequentialToParallel2" (formula "34"))
                                 (rule "simplifyUpdate3" (formula "34") (term "1,0"))
                                 (rule "applyOnElementary" (formula "34") (term "1,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,0"))
                                 (rule "variableDeclarationAssign" (formula "34") (term "1"))
                                 (rule "variableDeclaration" (formula "34") (term "1") (newnames "x_9"))
                                 (rule "assignmentAdditionInt" (formula "34") (term "1"))
                                 (rule "translateJavaAddInt" (formula "34") (term "0,0,1"))
                                 (rule "sequentialToParallel2" (formula "34"))
                                 (rule "simplifyUpdate3" (formula "34") (term "1,0"))
                                 (rule "applyOnElementary" (formula "34") (term "1,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "0,1,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,1,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,0,1,0"))
                                 (rule "assignment_array2" (formula "34"))
                                 (branch "Normal Execution (o_arr_3 != null)"
                                    (rule "sequentialToParallel2" (formula "34"))
                                    (rule "simplifyUpdate2" (formula "34"))
                                    (rule "simplifyUpdate3" (formula "34") (term "1,0"))
                                    (rule "applyOnElementary" (formula "34") (term "1,0"))
                                    (rule "applyOnRigidTerm" (formula "34") (term "0,1,0"))
                                    (rule "simplifyUpdate1" (formula "34") (term "2,0,1,0"))
                                    (rule "simplifyUpdate1" (formula "34") (term "1,0,1,0"))
                                    (rule "simplifyUpdate1" (formula "34") (term "0,0,1,0"))
                                    (rule "applyOnPV" (formula "34") (term "1,0,1,0"))
                                    (rule "applyOnPV" (formula "34") (term "0,0,1,0"))
                                    (rule "applyOnRigidTerm" (formula "34") (term "2,0,1,0"))
                                    (rule "applyOnPV" (formula "34") (term "0,2,0,1,0"))
                                    (rule "pullOutSelect" (formula "34") (term "0,1,0") (inst "selectSK=arr_1"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                    (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "1") (term "0"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000010001110_6" (formula "34") (term "0,1,0"))
                                    (rule "assignment_to_reference_array_component" (formula "34"))
                                    (branch "Normal Execution (oldTable != null)"
                                       (rule "sequentialToParallel2" (formula "34"))
                                       (rule "simplifyUpdate2" (formula "34"))
                                       (rule "simplifyUpdate3" (formula "34") (term "1,0"))
                                       (rule "applyOnElementary" (formula "34") (term "1,0"))
                                       (rule "applyOnRigidTerm" (formula "34") (term "0,1,0"))
                                       (rule "simplifyUpdate1" (formula "34") (term "1,0,1,0"))
                                       (rule "simplifyUpdate1" (formula "34") (term "3,0,1,0"))
                                       (rule "simplifyUpdate1" (formula "34") (term "2,0,1,0"))
                                       (rule "simplifyUpdate1" (formula "34") (term "0,0,1,0"))
                                       (rule "applyOnPV" (formula "34") (term "1,0,1,0"))
                                       (rule "applyOnPV" (formula "34") (term "0,0,1,0"))
                                       (rule "applyOnRigidTerm" (formula "34") (term "2,0,1,0"))
                                       (rule "applyOnPV" (formula "34") (term "0,2,0,1,0"))
                                       (rule "eval_order_array_access2" (formula "34") (term "1") (inst "#v0=x_7") (inst "#ar1=o_arr"))
                                       (rule "variableDeclarationAssign" (formula "34") (term "1"))
                                       (rule "variableDeclaration" (formula "34") (term "1") (newnames "o_arr_4"))
                                       (rule "assignment" (formula "34") (term "1"))
                                       (rule "sequentialToParallel2" (formula "34"))
                                       (rule "simplifyUpdate2" (formula "34"))
                                       (rule "simplifyUpdate3" (formula "34") (term "1,0"))
                                       (rule "applyOnElementary" (formula "34") (term "1,0"))
                                       (rule "applyOnPV" (formula "34") (term "0,1,0"))
                                       (rule "variableDeclarationAssign" (formula "34") (term "1"))
                                       (rule "variableDeclaration" (formula "34") (term "1") (newnames "x_10"))
                                       (rule "expand_addJint" (formula "34") (term "0,2,0,1,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "34") (term "0,0,2,0,1,0,0,0"))
                                       (rule "expand_moduloInteger" (formula "34") (term "0,2,0,1,0,0,0"))
                                       (rule "replace_int_MIN" (formula "34") (term "0,0,2,0,1,0,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "34") (term "0,0,1,0,2,0,1,0,0,0"))
                                       (rule "replace_int_RANGE" (formula "34") (term "1,1,0,2,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,2,0,1,0,0,0"))
                                       (rule "add_literals" (formula "34") (term "0,0,1,0,2,0,1,0,0,0"))
                                       (rule "assignmentAdditionInt" (formula "34") (term "1"))
                                       (rule "translateJavaAddInt" (formula "34") (term "0,0,1"))
                                       (rule "sequentialToParallel2" (formula "34"))
                                       (rule "simplifyUpdate3" (formula "34") (term "1,0"))
                                       (rule "applyOnElementary" (formula "34") (term "1,0"))
                                       (rule "applyOnRigidTerm" (formula "34") (term "0,1,0"))
                                       (rule "simplifyUpdate1" (formula "34") (term "1,0,1,0"))
                                       (rule "applyOnPV" (formula "34") (term "0,0,1,0"))
                                       (rule "assignment_to_reference_array_component" (formula "34"))
                                       (branch "Normal Execution (o_arr_4 != null)"
                                          (rule "sequentialToParallel2" (formula "34"))
                                          (rule "simplifyUpdate2" (formula "34"))
                                          (rule "simplifyUpdate3" (formula "34") (term "1,0"))
                                          (rule "applyOnElementary" (formula "34") (term "1,0"))
                                          (rule "applyOnRigidTerm" (formula "34") (term "0,1,0"))
                                          (rule "simplifyUpdate1" (formula "34") (term "1,0,1,0"))
                                          (rule "simplifyUpdate1" (formula "34") (term "3,0,1,0"))
                                          (rule "simplifyUpdate1" (formula "34") (term "2,0,1,0"))
                                          (rule "simplifyUpdate1" (formula "34") (term "0,0,1,0"))
                                          (rule "applyOnPV" (formula "34") (term "1,0,1,0"))
                                          (rule "applyOnPV" (formula "34") (term "0,0,1,0"))
                                          (rule "applyOnRigidTerm" (formula "34") (term "2,0,1,0"))
                                          (rule "applyOnPV" (formula "34") (term "0,2,0,1,0"))
                                          (rule "variableDeclarationAssign" (formula "34") (term "1"))
                                          (rule "variableDeclaration" (formula "34") (term "1") (newnames "i"))
                                          (rule "expand_addJint" (formula "34") (term "0,2,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "34") (term "0,0,2,0,1,0"))
                                          (rule "expand_moduloInteger" (formula "34") (term "0,2,0,1,0"))
                                          (rule "replace_int_RANGE" (formula "34") (term "1,1,0,2,0,1,0"))
                                          (rule "replace_int_HALFRANGE" (formula "34") (term "0,0,1,0,2,0,1,0"))
                                          (rule "replace_int_MIN" (formula "34") (term "0,0,2,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,2,0,1,0"))
                                          (rule "add_literals" (formula "34") (term "0,0,1,0,2,0,1,0"))
                                          (rule "commute_and_2" (formula "5") (term "0,0,1,1,0"))
                                           (builtin "Use Operation Contract" (formula "34") (newnames "heapBefore_hash,result,exc_0") (contract "java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap::hash(java.lang.Object,int)].JML normal_behavior operation contract.0"))
                                          (branch "Post (hash)"
                                             (rule "simplifyUpdate2" (formula "27"))
                                             (rule "expand_inInt" (formula "27") (term "1,0,1,1"))
                                             (rule "replace_int_MIN" (formula "27") (term "0,1,1,0,1,1"))
                                             (rule "replace_int_MAX" (formula "27") (term "1,0,1,0,1,1"))
                                             (rule "simplifyUpdate2" (formula "27") (term "1"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "simplifyUpdate2" (formula "27"))
                                             (rule "andLeft" (formula "28"))
                                             (rule "simplifyUpdate2" (formula "29"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "andLeft" (formula "28"))
                                             (rule "simplifyUpdate2" (formula "28"))
                                             (rule "simplifyUpdate2" (formula "29"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "andLeft" (formula "29"))
                                             (rule "simplifyUpdate2" (formula "30"))
                                             (rule "andLeft" (formula "29"))
                                             (rule "simplifyUpdate2" (formula "30"))
                                             (rule "andLeft" (formula "29"))
                                             (rule "simplifyUpdate2" (formula "30"))
                                             (rule "andLeft" (formula "29"))
                                             (rule "simplifyUpdate2" (formula "29"))
                                             (rule "translateJavaMod" (formula "31") (term "0"))
                                             (rule "eqSymm" (formula "30") (term "1"))
                                             (rule "applyOnRigidFormula" (formula "34"))
                                             (rule "applyOnPV" (formula "34") (term "0"))
                                             (rule "applyOnRigidFormula" (formula "32"))
                                             (rule "applyOnPV" (formula "32") (term "1"))
                                             (rule "simplifyUpdate1" (formula "32") (term "0"))
                                             (rule "applyOnRigidFormula" (formula "29"))
                                             (rule "simplifyUpdate2" (formula "29") (term "1"))
                                             (rule "applyOnRigidFormula" (formula "30"))
                                             (rule "simplifyUpdate1" (formula "30") (term "1"))
                                             (rule "applyOnRigidFormula" (formula "29") (term "0"))
                                             (rule "simplifyUpdate1" (formula "29") (term "1,0"))
                                             (rule "applyOnPV" (formula "29") (term "0,0"))
                                             (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "36"))
                                             (rule "concrete_impl_2" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "applyOnRigidTerm" (formula "29") (term "0"))
                                             (rule "simplifyUpdate1" (formula "29") (term "0,0"))
                                             (rule "simplifyUpdate1" (formula "29") (term "1,0"))
                                             (rule "applyOnPV" (formula "29") (term "0,0"))
                                             (rule "applyOnPV" (formula "29") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "28"))
                                             (rule "assignment" (formula "42") (term "1"))
                                             (rule "sequentialToParallel2" (formula "42"))
                                             (rule "simplifyUpdate3" (formula "42") (term "1,0"))
                                             (rule "variableDeclarationGhostAssign" (formula "42") (term "1"))
                                             (rule "variableDeclarationGhost" (formula "42") (term "1") (newnames "hash"))
                                             (rule "assignment" (formula "42") (term "1"))
                                             (rule "sequentialToParallel2" (formula "42"))
                                             (rule "simplifyUpdate3" (formula "42") (term "1,0"))
                                             (rule "applyOnElementary" (formula "42") (term "1,0"))
                                             (rule "applyOnPV" (formula "42") (term "0,1,0"))
                                             (rule "loopScopeInvDia" (formula "42") (term "1") (newnames "i_0,o,f") (inst "#x=x_8") (inst "#variant=x_7") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "anon_permissions_LOOP=anon_permissions_LOOP_1") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_1") (inst "anon_heap_LOOP=anon_heap_LOOP_1"))
                                             (branch "Invariant Initially Valid"
                                                (rule "simplifyUpdate2" (formula "42"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "0,1,0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,1,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "0,1,0,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,1,0,1,0,1"))
                                                (rule "applyOnRigidFormula" (formula "42"))
                                                (rule "simplifyUpdate2" (formula "42") (term "1"))
                                                (rule "applyOnRigidFormula" (formula "42") (term "0"))
                                                (rule "simplifyUpdate2" (formula "42") (term "0,0"))
                                                (rule "simplifyUpdate2" (formula "42") (term "1,0"))
                                                (rule "applyOnRigidFormula" (formula "42") (term "1"))
                                                (rule "inEqSimp_geqRight" (formula "39"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_ltRight" (formula "39"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "applyOnRigidFormula" (formula "42") (term "0,0"))
                                                (rule "simplifyUpdate2" (formula "42") (term "1,0,0"))
                                                (rule "applyOnRigidFormula" (formula "42") (term "1,0"))
                                                (rule "applyOnRigidFormula" (formula "42") (term "0,1"))
                                                (rule "simplifyUpdate2" (formula "42") (term "1,0,1"))
                                                (rule "simplifyUpdate2" (formula "42") (term "0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "7") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "6") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "33"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                                (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "7") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0"))
                                                (rule "applyOnRigidFormula" (formula "42") (term "0,0,0"))
                                                (rule "simplifyUpdate2" (formula "42") (term "0,0,0,0"))
                                                (rule "applyOnRigidFormula" (formula "42") (term "1,0,0"))
                                                (rule "simplifyUpdate1" (formula "42") (term "1,1,0,0"))
                                                (rule "applyOnRigidFormula" (formula "42") (term "0,1,0"))
                                                (rule "simplifyUpdate2" (formula "42") (term "1,0,1,0"))
                                                (rule "simplifyUpdate2" (formula "42") (term "0,0,1,0"))
                                                (rule "applyOnRigidFormula" (formula "42") (term "1,0,1"))
                                                (rule "applyOnRigidFormula" (formula "42") (term "0,0,1"))
                                                (rule "simplifyUpdate2" (formula "42") (term "0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                (rule "add_literals" (formula "33") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                (rule "applyOnRigidFormula" (formula "42") (term "1,0,0,0"))
                                                (rule "simplifyUpdate1" (formula "42") (term "1,1,0,0,0"))
                                                (rule "simplifyUpdate1" (formula "42") (term "0,1,0,0,0"))
                                                (rule "applyOnPV" (formula "42") (term "1,1,0,0,0"))
                                                (rule "applyOnPV" (formula "42") (term "0,1,0,0,0"))
                                                (rule "applyOnRigidFormula" (formula "42") (term "0,0,0,0"))
                                                (rule "applyOnPV" (formula "42") (term "0,0,0,0,0"))
                                                (rule "simplifyUpdate1" (formula "42") (term "1,0,0,0,0"))
                                                (rule "replace_known_left" (formula "42") (term "0,0,0,0") (ifseqformula "34"))
                                                (rule "concrete_and_1" (formula "42") (term "0,0,0"))
                                                (rule "applyOnRigidTerm" (formula "42") (term "0,1,0,0"))
                                                (rule "applyOnPV" (formula "42") (term "0,0,1,0,0"))
                                                (rule "simplifyUpdate1" (formula "42") (term "1,0,1,0,0"))
                                                (rule "replace_known_left" (formula "42") (term "1,0,0") (ifseqformula "32"))
                                                (rule "concrete_and_3" (formula "42") (term "0,0"))
                                                (rule "applyOnRigidFormula" (formula "42") (term "1,0,1,0"))
                                                (rule "applyOnRigidFormula" (formula "42") (term "0,0,1,0"))
                                                (rule "simplifyUpdate2" (formula "42") (term "1,0,0,1,0"))
                                                (rule "simplifyUpdate2" (formula "42") (term "0,0,0,1,0"))
                                                (rule "applyOnRigidFormula" (formula "42") (term "0,1,0,1"))
                                                (rule "simplifyUpdate1" (formula "42") (term "1,0,1,0,1"))
                                                (rule "applyOnRigidFormula" (formula "42") (term "1,0,0,1"))
                                                (rule "simplifyUpdate1" (formula "42") (term "0,1,0,0,1"))
                                                (rule "simplifyUpdate1" (formula "42") (term "1,1,0,0,1"))
                                                (rule "applyOnPV" (formula "42") (term "0,1,0,0,1"))
                                                (rule "applyOnPV" (formula "42") (term "1,1,0,0,1"))
                                                (rule "applyOnRigidFormula" (formula "42") (term "0,0,0,1"))
                                                (rule "simplifyUpdate2" (formula "42") (term "0,0,0,0,1"))
                                                (rule "applyOnRigidFormula" (formula "42") (term "0,1,0,1,0"))
                                                (rule "simplifyUpdate1" (formula "42") (term "1,0,1,0,1,0"))
                                                (rule "applyOnRigidFormula" (formula "42") (term "1,0,0,1,0"))
                                                (rule "simplifyUpdate1" (formula "42") (term "0,1,0,0,1,0"))
                                                (rule "applyOnPV" (formula "42") (term "1,1,0,0,1,0"))
                                                (rule "applyOnRigidFormula" (formula "42") (term "0,0,0,1,0"))
                                                (rule "simplifyUpdate1" (formula "42") (term "1,0,0,0,1,0"))
                                                (rule "applyOnPV" (formula "42") (term "0,0,0,0,1,0"))
                                                (rule "applyOnRigidTerm" (formula "42") (term "0,0,1,0,1"))
                                                (rule "simplifyUpdate1" (formula "42") (term "2,0,0,1,0,1"))
                                                (rule "simplifyUpdate1" (formula "42") (term "1,0,0,1,0,1"))
                                                (rule "simplifyUpdate1" (formula "42") (term "0,0,0,1,0,1"))
                                                (rule "applyOnPV" (formula "42") (term "1,0,0,1,0,1"))
                                                (rule "applyOnPV" (formula "42") (term "0,0,0,1,0,1"))
                                                (rule "applyOnRigidFormula" (formula "42") (term "1,0,0,0,1"))
                                                (rule "simplifyUpdate1" (formula "42") (term "0,1,0,0,0,1"))
                                                (rule "applyOnPV" (formula "42") (term "1,1,0,0,0,1"))
                                                (rule "applyOnRigidTerm" (formula "42") (term "0,0,1,0,1,0"))
                                                (rule "simplifyUpdate1" (formula "42") (term "2,0,0,1,0,1,0"))
                                                (rule "simplifyUpdate1" (formula "42") (term "1,0,0,1,0,1,0"))
                                                (rule "simplifyUpdate1" (formula "42") (term "0,0,0,1,0,1,0"))
                                                (rule "applyOnPV" (formula "42") (term "1,0,0,1,0,1,0"))
                                                (rule "applyOnPV" (formula "42") (term "0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "42") (term "0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                                                (rule "replace_known_left" (formula "42") (term "0,0") (ifseqformula "33"))
                                                (rule "concrete_and_1" (formula "42") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1"))
                                                (rule "polySimp_pullOutFactor2b" (formula "42") (term "0,1,0,0,1"))
                                                (rule "add_literals" (formula "42") (term "1,1,0,1,0,0,1"))
                                                (rule "times_zero_1" (formula "42") (term "1,0,1,0,0,1"))
                                                (rule "add_zero_right" (formula "42") (term "0,1,0,0,1"))
                                                (rule "leq_literals" (formula "42") (term "1,0,0,1"))
                                                (rule "concrete_and_4" (formula "42") (term "0,0,1"))
                                                (rule "concrete_impl_2" (formula "42") (term "0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0"))
                                                (rule "mod_axiom" (formula "40") (term "1,1"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1"))
                                                (rule "div_literals" (formula "40") (term "0,1,1,1"))
                                                (rule "mul_literals" (formula "40") (term "1,1,1"))
                                                (rule "add_zero_right" (formula "40") (term "1,1"))
                                                (rule "add_literals" (formula "40") (term "1"))
                                                (rule "close" (formula "40") (ifseqformula "26"))
                                             )
                                             (branch "Invariant Preserved and Used"
                                                (rule "false_to_not_true" (formula "43") (term "0,1,0,1,1,1,1"))
                                                (rule "concrete_and_3" (formula "43") (term "0,1,1,1"))
                                                (rule "parallelWithSkip2" (formula "43") (term "0,1"))
                                                (rule "translateJavaAddInt" (formula "43") (term "0,0,1,0,1,1,1,0,1,1,1,1"))
                                                (rule "eqSymm" (formula "43") (term "0,0,1,0,1,1,0,1,1,1,1"))
                                                (rule "translateJavaAddInt" (formula "43") (term "0,0,1,0,0,1,1"))
                                                (rule "polySimp_elimSub" (formula "43") (term "0,1,0,1,1,1,0,1,1,1,1"))
                                                (rule "polySimp_elimSub" (formula "43") (term "0,0,1,1"))
                                                (rule "polySimp_elimSub" (formula "43") (term "0,1,1,1,0,1,1,1,1"))
                                                (rule "polySimp_elimSub" (formula "43") (term "0,0,1,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,0,1,0,0,1,1,0,1,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,1,0,0,0,1,1,0,1,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,0,0,0,1,1,0,1,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,1,0,0,1,1,0,1,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,1,0,1,0,0,1,1,0,1,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,1,0,1,0,0,0,1,1,0,1,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,0,1,0,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,1,0,1,0,0,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,1,0,0,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,1,0,1,0,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,1,0,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,0,0,1,1,1"))
                                                (rule "sequentialToParallel2" (formula "43") (term "1"))
                                                (rule "simplifyUpdate3" (formula "43") (term "1,0,1"))
                                                (rule "applyOnElementary" (formula "43") (term "1,0,1"))
                                                (rule "sequentialToParallel2" (formula "43"))
                                                (rule "simplifyUpdate2" (formula "43"))
                                                (rule "simplifyUpdate3" (formula "43") (term "1,0"))
                                                (rule "impRight" (formula "43"))
                                                (rule "simplifyUpdate2" (formula "1"))
                                                (rule "simplifyUpdate3" (formula "1") (term "1,0"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "simplifyUpdate2" (formula "2"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "simplifyUpdate2" (formula "2"))
                                                (rule "simplifyUpdate2" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "simplifyUpdate2" (formula "2"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "simplifyUpdate2" (formula "1"))
                                                (rule "applyOnParallel" (formula "48") (term "1,0"))
                                                (rule "simplifyUpdate3" (formula "48") (term "0,1,0"))
                                                (rule "simplifyUpdate3" (formula "48") (term "1,1,0"))
                                                (rule "applyOnParallel" (formula "48") (term "0,1,0"))
                                                (rule "simplifyUpdate3" (formula "48") (term "1,0,1,0"))
                                                (rule "applyOnElementary" (formula "48") (term "1,1,0"))
                                                (rule "applyOnElementary" (formula "48") (term "0,0,1,0"))
                                                (rule "applyOnPV" (formula "48") (term "0,0,0,1,0"))
                                                (rule "sequentialToParallel1" (formula "48") (term "0,1,1,0"))
                                                (rule "simplifyUpdate1" (formula "48") (term "0,1,1,0"))
                                                (rule "simplifyUpdate3" (formula "48") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,0,1,0,1,1,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,0,1,1,0,1,1,0"))
                                                (rule "applyOnRigidFormula" (formula "5"))
                                                (rule "applyOnRigidFormula" (formula "4"))
                                                (rule "applyOnRigidFormula" (formula "3"))
                                                (rule "simplifyUpdate1" (formula "3") (term "1"))
                                                (rule "applyOnRigidFormula" (formula "2"))
                                                (rule "simplifyUpdate1" (formula "2") (term "1"))
                                                (rule "simplifyUpdate1" (formula "2") (term "0"))
                                                (rule "applyOnPV" (formula "2") (term "1"))
                                                (rule "applyOnPV" (formula "2") (term "0"))
                                                (rule "applyOnRigidFormula" (formula "1"))
                                                (rule "simplifyUpdate1" (formula "1") (term "1"))
                                                (rule "applyOnPV" (formula "1") (term "0"))
                                                (rule "applyOnRigidTerm" (formula "48") (term "0,1,1,0"))
                                                (rule "simplifyUpdate1" (formula "48") (term "0,0,1,1,0"))
                                                (rule "applyOnPV" (formula "48") (term "0,0,1,1,0"))
                                                (rule "applyOnRigidFormula" (formula "5") (term "0"))
                                                (rule "simplifyUpdate2" (formula "5") (term "0,0"))
                                                (rule "simplifyUpdate2" (formula "5") (term "1,0"))
                                                (rule "applyOnRigidFormula" (formula "4") (term "0"))
                                                (rule "simplifyUpdate2" (formula "4") (term "0,0"))
                                                (rule "simplifyUpdate2" (formula "4") (term "1,0"))
                                                (rule "applyOnRigidTerm" (formula "3") (term "0"))
                                                (rule "applyOnPV" (formula "3") (term "0,0"))
                                                (rule "simplifyUpdate1" (formula "3") (term "1,0"))
                                                (rule "applyOnRigidTerm" (formula "48") (term "1,0,1,1,0"))
                                                (rule "simplifyUpdate1" (formula "48") (term "1,1,0,1,1,0"))
                                                (rule "applyOnRigidFormula" (formula "5") (term "0,0"))
                                                (rule "simplifyUpdate2" (formula "5") (term "0,0,0"))
                                                (rule "applyOnRigidFormula" (formula "5") (term "1,0"))
                                                (rule "applyOnRigidFormula" (formula "4") (term "0,0"))
                                                (rule "simplifyUpdate2" (formula "4") (term "1,0,0"))
                                                (rule "simplifyUpdate2" (formula "4") (term "0,0,0"))
                                                (rule "applyOnRigidFormula" (formula "4") (term "1,0"))
                                                (rule "applyOnRigidTerm" (formula "48") (term "0,1,0,1,1,0"))
                                                (rule "simplifyUpdate1" (formula "48") (term "1,0,1,0,1,1,0"))
                                                (rule "applyOnPV" (formula "48") (term "1,0,1,0,1,1,0"))
                                                (rule "applyOnRigidFormula" (formula "5") (term "1,0,0"))
                                                (rule "simplifyUpdate1" (formula "5") (term "1,1,0,0"))
                                                (rule "simplifyUpdate1" (formula "5") (term "0,1,0,0"))
                                                (rule "applyOnPV" (formula "5") (term "1,1,0,0"))
                                                (rule "applyOnPV" (formula "5") (term "0,1,0,0"))
                                                (rule "applyOnRigidFormula" (formula "5") (term "0,0,0"))
                                                (rule "simplifyUpdate2" (formula "5") (term "0,0,0,0"))
                                                (rule "applyOnRigidFormula" (formula "5") (term "0,1,0"))
                                                (rule "simplifyUpdate1" (formula "5") (term "1,0,1,0"))
                                                (rule "applyOnRigidFormula" (formula "4") (term "1,0,0"))
                                                (rule "simplifyUpdate1" (formula "4") (term "0,1,0,0"))
                                                (rule "applyOnPV" (formula "4") (term "1,1,0,0"))
                                                (rule "applyOnRigidFormula" (formula "4") (term "0,0,0"))
                                                (rule "simplifyUpdate1" (formula "4") (term "1,0,0,0"))
                                                (rule "applyOnPV" (formula "4") (term "0,0,0,0"))
                                                (rule "applyOnRigidFormula" (formula "4") (term "0,1,0"))
                                                (rule "simplifyUpdate1" (formula "4") (term "1,0,1,0"))
                                                (rule "applyOnRigidTerm" (formula "48") (term "0,0,1,0,1,1,0"))
                                                (rule "simplifyUpdate1" (formula "48") (term "1,0,0,1,0,1,1,0"))
                                                (rule "simplifyUpdate1" (formula "48") (term "0,0,0,1,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0,1,0,0,0,1,1,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0,0,1,0,0,1,1,0,1"))
                                                (rule "applyOnRigidFormula" (formula "5") (term "1,0,0,0"))
                                                (rule "simplifyUpdate1" (formula "5") (term "0,1,0,0,0"))
                                                (rule "applyOnPV" (formula "5") (term "1,1,0,0,0"))
                                                (rule "applyOnRigidTerm" (formula "5") (term "0,0,1,0"))
                                                (rule "simplifyUpdate1" (formula "5") (term "2,0,0,1,0"))
                                                (rule "simplifyUpdate1" (formula "5") (term "0,0,0,1,0"))
                                                (rule "simplifyUpdate1" (formula "5") (term "1,0,0,1,0"))
                                                (rule "applyOnPV" (formula "5") (term "0,0,0,1,0"))
                                                (rule "applyOnPV" (formula "5") (term "1,0,0,1,0"))
                                                (rule "applyOnRigidTerm" (formula "4") (term "0,0,1,0"))
                                                (rule "simplifyUpdate1" (formula "4") (term "2,0,0,1,0"))
                                                (rule "simplifyUpdate1" (formula "4") (term "0,0,0,1,0"))
                                                (rule "simplifyUpdate1" (formula "4") (term "1,0,0,1,0"))
                                                (rule "applyOnPV" (formula "4") (term "0,0,0,1,0"))
                                                (rule "applyOnPV" (formula "4") (term "1,0,0,1,0"))
                                                (rule "applyOnRigidTerm" (formula "48") (term "1,0,0,1,0,1,1,0"))
                                                (rule "simplifyUpdate1" (formula "48") (term "1,1,0,0,1,0,1,1,0"))
                                                (rule "simplifyUpdate1" (formula "48") (term "0,1,0,0,1,0,1,1,0"))
                                                (rule "applyOnPV" (formula "48") (term "1,1,0,0,1,0,1,1,0"))
                                                (rule "applyOnPV" (formula "48") (term "0,1,0,0,1,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,0,1,0,1,1,0"))
                                                (rule "applyOnRigidTerm" (formula "48") (term "1,0,0,1,0,1,1,0"))
                                                (rule "simplifyUpdate1" (formula "48") (term "1,1,0,0,1,0,1,1,0"))
                                                (rule "applyOnPV" (formula "48") (term "0,1,0,0,1,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,0,1,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
                                                (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_11"))
                                                (rule "expand_addJint" (formula "48") (term "1,0,0,1,0,1,1,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,1,0,0,1,0,1,1,1,0,1"))
                                                (rule "expand_addJint" (formula "48") (term "1,0,0,1,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "48") (term "0,1,0,0,1,0,1,1,0"))
                                                (rule "expand_moduloInteger" (formula "48") (term "1,0,0,1,0,1,1,1,0,1"))
                                                (rule "replace_int_MIN" (formula "48") (term "0,1,0,0,1,0,1,1,1,0,1"))
                                                (rule "replace_int_RANGE" (formula "48") (term "1,1,1,0,0,1,0,1,1,1,0,1"))
                                                (rule "replace_int_HALFRANGE" (formula "48") (term "0,0,1,1,0,0,1,0,1,1,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,1,1,0,0,1,0,1,1,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,1,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,0,0,1,0,1,1,1,0,1"))
                                                (rule "expand_moduloInteger" (formula "48") (term "1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MIN" (formula "48") (term "0,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_HALFRANGE" (formula "48") (term "0,0,1,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_RANGE" (formula "48") (term "1,1,1,0,0,1,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,1,1,0,0,1,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,0,0,1,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,1,0,1,1,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,1,0,1,1,0"))
                                                (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,1,0,1,1,0"))
                                                (rule "commute_and" (formula "4") (term "0,0"))
                                                (rule "commute_and" (formula "5") (term "0,0,0"))
                                                (rule "commute_and" (formula "11") (term "0,0,0,0,1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "14"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                                                (rule "concrete_or_2" (formula "1"))
                                                (rule "ifElseUnfold" (formula "49") (term "1") (inst "#boolv=x_12"))
                                                (rule "variableDeclaration" (formula "49") (term "1") (newnames "x_12"))
                                                (rule "compound_inequality_comparison_1" (formula "49") (term "1") (inst "#v0=o"))
                                                (rule "variableDeclarationAssign" (formula "49") (term "1"))
                                                (rule "variableDeclaration" (formula "49") (term "1") (newnames "o"))
                                                (rule "assignment_array2" (formula "49"))
                                                (branch "Normal Execution (newTable != null)"
                                                   (rule "sequentialToParallel2" (formula "49"))
                                                   (rule "simplifyUpdate3" (formula "49") (term "1,0"))
                                                   (rule "applyOnElementary" (formula "49") (term "1,0"))
                                                   (rule "applyOnRigidTerm" (formula "49") (term "0,1,0"))
                                                   (rule "simplifyUpdate1" (formula "49") (term "2,0,1,0"))
                                                   (rule "simplifyUpdate1" (formula "49") (term "1,0,1,0"))
                                                   (rule "simplifyUpdate1" (formula "49") (term "0,0,1,0"))
                                                   (rule "applyOnPV" (formula "49") (term "1,0,1,0"))
                                                   (rule "applyOnPV" (formula "49") (term "0,0,1,0"))
                                                   (rule "applyOnRigidTerm" (formula "49") (term "2,0,1,0"))
                                                   (rule "applyOnPV" (formula "49") (term "0,2,0,1,0"))
                                                   (rule "pullOutSelect" (formula "49") (term "0,1,0") (inst "selectSK=arr_2"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                                   (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "0,0"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_3"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                                   (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "0,0"))
                                                   (rule "equalUnique" (formula "1") (term "1,0,0"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_4"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                   (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                                   (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "47"))
                                                   (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_5"))
                                                   (rule "simplifySelectOfMemset" (formula "1"))
                                                   (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                                   (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                   (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "6"))
                                                   (rule "concrete_and_1" (formula "1") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__0"))
                                                   (rule "simplifySelectOfMemset" (formula "2"))
                                                   (rule "equalUnique" (formula "2") (term "0,1,0,0"))
                                                   (rule "concrete_not_1" (formula "2") (term "1,0,0"))
                                                   (rule "concrete_and_4" (formula "2") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "2") (term "0"))
                                                   (rule "simplifySelectOfStore" (formula "2"))
                                                   (rule "neq_and_3" (formula "2") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "2") (term "0"))
                                                   (rule "simplifySelectOfStore" (formula "2"))
                                                   (rule "neq_and_3" (formula "2") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "2") (term "0"))
                                                   (rule "simplifySelectOfStore" (formula "2"))
                                                   (rule "neq_and_3" (formula "2") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "2") (term "0"))
                                                   (rule "simplifySelectOfCreate" (formula "2"))
                                                   (rule "eqClose" (formula "2") (term "1,0,0"))
                                                   (rule "concrete_and_3" (formula "2") (term "0,0"))
                                                   (rule "eqClose" (formula "2") (term "0,0,0"))
                                                   (rule "concrete_and_1" (formula "2") (term "0,0"))
                                                   (rule "castDel" (formula "2") (term "1,0"))
                                                   (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "49"))
                                                   (rule "concrete_not_2" (formula "2") (term "0,0"))
                                                   (rule "ifthenelse_true" (formula "2") (term "0"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01000000010001110_16" (formula "2") (term "0,0,1,0,0"))
                                                   (rule "boolean_equal" (formula "2") (term "0,1,0,0"))
                                                   (rule "concrete_not_1" (formula "2") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "2") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_6"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                   (rule "equalUnique" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_and_4" (formula "1") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "1") (term "0"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01000000010001110_18" (formula "1") (term "2,0"))
                                                   (rule "inequality_comparison_simple" (formula "53") (term "1"))
                                                   (rule "sequentialToParallel2" (formula "53"))
                                                   (rule "simplifyUpdate2" (formula "53"))
                                                   (rule "simplifyUpdate3" (formula "53") (term "1,0"))
                                                   (rule "applyOnElementary" (formula "53") (term "1,0"))
                                                   (rule "applyOnRigidTerm" (formula "53") (term "0,1,0"))
                                                   (rule "simplifyUpdate1" (formula "53") (term "2,0,1,0"))
                                                   (rule "simplifyUpdate1" (formula "53") (term "1,0,1,0"))
                                                   (rule "applyOnRigidFormula" (formula "53") (term "0,0,1,0"))
                                                   (rule "applyOnPV" (formula "53") (term "0,0,0,1,0"))
                                                   (rule "simplifyUpdate1" (formula "53") (term "1,0,0,1,0"))
                                                   (rule "commute_and_2" (formula "16") (term "0,0,0,1,1,0"))
                                                   (rule "ifElseSplit" (formula "53"))
                                                   (branch "if x_12 true"
                                                      (rule "simplifyUpdate2" (formula "1"))
                                                      (rule "simplifyUpdate2" (formula "54"))
                                                      (rule "applyOnRigidFormula" (formula "1"))
                                                      (rule "simplifyUpdate1" (formula "1") (term "1"))
                                                      (rule "applyOnPV" (formula "1") (term "0"))
                                                      (rule "ifthenelse_concrete4" (formula "1"))
                                                      (rule "boolean_not_equal_2" (formula "1") (term "1"))
                                                      (rule "concrete_or_4" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                       (builtin "Use Operation Contract" (formula "54") (newnames "heapBefore_nextKeyIndex,result_0,exc_1") (contract "java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap::nextKeyIndex(int,int)].JML normal_behavior operation contract.0"))
                                                      (branch "Post (nextKeyIndex)"
                                                         (rule "simplifyUpdate2" (formula "46"))
                                                         (rule "expand_inInt" (formula "46") (term "1,0,1,1"))
                                                         (rule "replace_int_MIN" (formula "46") (term "0,1,1,0,1,1"))
                                                         (rule "replace_int_MAX" (formula "46") (term "1,0,1,0,1,1"))
                                                         (rule "simplifyUpdate2" (formula "46") (term "1"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "simplifyUpdate2" (formula "46"))
                                                         (rule "andLeft" (formula "47"))
                                                         (rule "simplifyUpdate2" (formula "48"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "andLeft" (formula "47"))
                                                         (rule "simplifyUpdate2" (formula "48"))
                                                         (rule "simplifyUpdate2" (formula "47"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "translateJavaAddInt" (formula "48") (term "1,0,0,1,1"))
                                                         (rule "translateJavaAddInt" (formula "48") (term "0,0,1"))
                                                         (rule "translateJavaAddInt" (formula "48") (term "0,1,0,1,1"))
                                                         (rule "eqSymm" (formula "48") (term "0,0,1,1"))
                                                         (rule "applyOnRigidFormula" (formula "49"))
                                                         (rule "applyOnPV" (formula "49") (term "0"))
                                                         (rule "applyOnRigidFormula" (formula "48"))
                                                         (rule "applyOnRigidFormula" (formula "48") (term "1"))
                                                         (rule "simplifyUpdate2" (formula "48") (term "1,1"))
                                                         (rule "applyOnRigidFormula" (formula "48") (term "0"))
                                                         (rule "simplifyUpdate1" (formula "48") (term "1,0"))
                                                         (rule "simplifyUpdate1" (formula "48") (term "0,0"))
                                                         (rule "applyOnPV" (formula "48") (term "1,0"))
                                                         (rule "applyOnRigidFormula" (formula "48") (term "0,1"))
                                                         (rule "simplifyUpdate2" (formula "48") (term "0,0,1"))
                                                         (rule "applyOnRigidTerm" (formula "48") (term "0,0"))
                                                         (rule "applyOnPV" (formula "48") (term "0,0,0"))
                                                         (rule "simplifyUpdate1" (formula "48") (term "1,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "48") (term "1,0,1"))
                                                         (rule "simplifyUpdate1" (formula "48") (term "0,1,0,1"))
                                                         (rule "simplifyUpdate1" (formula "48") (term "1,1,0,1"))
                                                         (rule "applyOnPV" (formula "48") (term "1,1,0,1"))
                                                         (rule "applyOnRigidFormula" (formula "48") (term "0,0,1"))
                                                         (rule "simplifyUpdate1" (formula "48") (term "1,0,0,1"))
                                                         (rule "applyOnRigidTerm" (formula "48") (term "0,1,0,1"))
                                                         (rule "applyOnPV" (formula "48") (term "0,0,1,0,1"))
                                                         (rule "simplifyUpdate1" (formula "48") (term "1,0,1,0,1"))
                                                         (rule "applyOnRigidTerm" (formula "48") (term "0,0,0,1"))
                                                         (rule "applyOnPV" (formula "48") (term "0,0,0,0,1"))
                                                         (rule "simplifyUpdate1" (formula "48") (term "1,0,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "47"))
                                                         (rule "assignment" (formula "58") (term "1"))
                                                         (rule "sequentialToParallel2" (formula "58"))
                                                         (rule "simplifyUpdate2" (formula "58"))
                                                         (rule "simplifyUpdate3" (formula "58") (term "1,0"))
                                                         (rule "expand_addJint" (formula "48") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "48") (term "0,0,0"))
                                                         (rule "expand_addJint" (formula "48") (term "0,1,0,1"))
                                                         (rule "polySimp_addComm0" (formula "48") (term "0,0,1,0,1"))
                                                         (rule "expand_addJint" (formula "48") (term "0,0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "48") (term "0,0,0,0,1"))
                                                         (rule "expand_moduloInteger" (formula "48") (term "0,0"))
                                                         (rule "replace_int_RANGE" (formula "48") (term "1,1,0,0"))
                                                         (rule "replace_int_HALFRANGE" (formula "48") (term "0,0,1,0,0"))
                                                         (rule "replace_int_MIN" (formula "48") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "48") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "48") (term "0,0,1,0,0"))
                                                         (rule "expand_moduloInteger" (formula "48") (term "0,1,0,1"))
                                                         (rule "replace_int_MIN" (formula "48") (term "0,0,1,0,1"))
                                                         (rule "replace_int_RANGE" (formula "48") (term "1,1,0,1,0,1"))
                                                         (rule "replace_int_HALFRANGE" (formula "48") (term "0,0,1,0,1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "48") (term "0,1,0,1,0,1"))
                                                         (rule "add_literals" (formula "48") (term "0,0,1,0,1,0,1"))
                                                         (rule "expand_moduloInteger" (formula "48") (term "0,0,0,1"))
                                                         (rule "replace_int_MIN" (formula "48") (term "0,0,0,0,1"))
                                                         (rule "replace_int_HALFRANGE" (formula "48") (term "0,0,1,0,0,0,1"))
                                                         (rule "replace_int_RANGE" (formula "48") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "48") (term "0,1,0,0,0,1"))
                                                         (rule "add_literals" (formula "48") (term "0,0,1,0,0,0,1"))
                                                         (rule "lsContinue" (formula "58") (term "1"))
                                                         (rule "simplifyUpdate2" (formula "58"))
                                                         (rule "polySimp_homoEq" (formula "4") (term "1,0,0"))
                                                         (rule "polySimp_homoEq" (formula "48") (term "0,0,1"))
                                                         (rule "sequentialToParallel2" (formula "58"))
                                                         (rule "simplifyUpdate3" (formula "58") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "48") (term "0,1,0,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "4") (term "0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "48") (term "0,0,0,0,1"))
                                                         (rule "applyOnRigidFormula" (formula "58"))
                                                         (rule "simplifyUpdate2" (formula "58") (term "0"))
                                                         (rule "simplifyUpdate2" (formula "58") (term "1"))
                                                         (rule "inEqSimp_ltRight" (formula "54"))
                                                         (rule "mul_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "55"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "0"))
                                                         (rule "simplifyUpdate2" (formula "58") (term "0,0"))
                                                         (rule "simplifyUpdate2" (formula "58") (term "1,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "1"))
                                                         (rule "simplifyUpdate2" (formula "58") (term "1,1"))
                                                         (rule "simplifyUpdate2" (formula "58") (term "0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "50") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "17") (term "1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "14"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "18") (term "0,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "18") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "18") (term "1,0,0,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "0,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "1,0,0"))
                                                         (rule "applyOnPV" (formula "58") (term "0,0,0"))
                                                         (rule "boolean_not_equal_2" (formula "58") (term "0,0"))
                                                         (rule "concrete_impl_2" (formula "58") (term "0"))
                                                         (rule "concrete_and_1" (formula "58"))
                                                         (rule "impRight" (formula "58"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "polySimp_addAssoc" (formula "50") (term "0,0,0"))
                                                         (rule "add_literals" (formula "50") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "50") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "50") (term "0,0,0"))
                                                         (rule "add_literals" (formula "50") (term "0,0,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "59"))
                                                         (rule "simplifyUpdate2" (formula "59") (term "1"))
                                                         (rule "simplifyUpdate2" (formula "59") (term "0"))
                                                         (rule "applyOnRigidFormula" (formula "52"))
                                                         (rule "simplifyUpdate1" (formula "52") (term "1"))
                                                         (rule "applyOnPV" (formula "52") (term "0"))
                                                         (rule "boolean_not_equal_2" (formula "52"))
                                                         (rule "false_right" (formula "52"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "50") (term "1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0,1"))
                                                         (rule "mul_literals" (formula "50") (term "0,1,0,1,0,1"))
                                                         (rule "polySimp_addComm1" (formula "50") (term "0,1,0,1"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "1"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "0,1"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "1,1"))
                                                         (rule "applyOnPV" (formula "58") (term "1,1"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "0"))
                                                         (rule "simplifyUpdate2" (formula "58") (term "1,0"))
                                                         (rule "simplifyUpdate2" (formula "58") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,1"))
                                                         (rule "add_literals" (formula "50") (term "0,0,0,1,0,1"))
                                                         (rule "add_zero_left" (formula "50") (term "0,0,1,0,1"))
                                                         (rule "applyOnRigidTerm" (formula "58") (term "0,1"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "0,0,1"))
                                                         (rule "applyOnPV" (formula "58") (term "0,0,1"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "1,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "0,0"))
                                                         (rule "simplifyUpdate2" (formula "58") (term "1,0,0"))
                                                         (rule "applyOnRigidTerm" (formula "58") (term "1,0,1"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "1,1,0,1"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "0,1,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "0,0,0"))
                                                         (rule "simplifyUpdate2" (formula "58") (term "1,0,0,0"))
                                                         (rule "simplifyUpdate2" (formula "58") (term "0,0,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "1,0,0"))
                                                         (rule "applyOnRigidTerm" (formula "58") (term "0,1,0,1"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "1,0,1,0,1"))
                                                         (rule "applyOnPV" (formula "58") (term "1,0,1,0,1"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "0,0,1,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "1,0,0,1,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "0,0,0,1,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "1,0,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "0,0,0,0"))
                                                         (rule "simplifyUpdate2" (formula "58") (term "1,0,0,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "0,1,0,0"))
                                                         (rule "simplifyUpdate2" (formula "58") (term "1,0,1,0,0"))
                                                         (rule "simplifyUpdate2" (formula "58") (term "0,0,1,0,0"))
                                                         (rule "applyOnRigidTerm" (formula "58") (term "0,0,1,0,1"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "1,0,0,1,0,1"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "0,0,0,1,0,1"))
                                                         (rule "applyOnRigidTerm" (formula "58") (term "1,0,0,1,0"))
                                                         (rule "applyOnPV" (formula "58") (term "0,1,0,0,1,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "2,1,0,0,1,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "1,1,0,0,1,0"))
                                                         (rule "eqSymm" (formula "58") (term "0,0,1,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "0,1,0,0,0"))
                                                         (rule "simplifyUpdate2" (formula "58") (term "1,0,1,0,0,0"))
                                                         (rule "simplifyUpdate2" (formula "58") (term "0,0,1,0,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "0,0,0,0,0"))
                                                         (rule "simplifyUpdate2" (formula "58") (term "0,0,0,0,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "1,0,0,0,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "1,1,0,0,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "1,0,1,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "0,0,1,0,0"))
                                                         (rule "simplifyUpdate2" (formula "58") (term "0,0,0,1,0,0"))
                                                         (rule "applyOnRigidTerm" (formula "58") (term "1,0,0,1,0,1"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "1,1,0,0,1,0,1"))
                                                         (rule "applyOnRigidTerm" (formula "58") (term "0,0,0,1,0,1"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "0,0,0,0,1,0,1"))
                                                         (rule "applyOnRigidTerm" (formula "58") (term "1,0,0,1,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "2,1,0,0,1,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "1,1,0,0,1,0"))
                                                         (rule "applyOnPV" (formula "58") (term "0,1,0,0,1,0"))
                                                         (rule "eqClose" (formula "58") (term "0,0,1,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "1,0,1,0,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "0,0,1,0,0,0"))
                                                         (rule "simplifyUpdate2" (formula "58") (term "1,0,0,1,0,0,0"))
                                                         (rule "simplifyUpdate2" (formula "58") (term "0,0,0,1,0,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "1,0,0,0,0,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "1,1,0,0,0,0,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "0,1,0,0,0,0,0"))
                                                         (rule "applyOnPV" (formula "58") (term "1,1,0,0,0,0,0"))
                                                         (rule "applyOnPV" (formula "58") (term "0,1,0,0,0,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "0,0,0,0,0,0"))
                                                         (rule "applyOnPV" (formula "58") (term "0,0,0,0,0,0,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "1,0,0,0,0,0,0"))
                                                         (rule "applyOnRigidTerm" (formula "58") (term "0,1,0,0,0,0"))
                                                         (rule "applyOnPV" (formula "58") (term "0,0,1,0,0,0,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "1,0,1,0,0,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "0,1,0,1,0,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "1,0,1,0,1,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "1,0,0,1,0,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "1,1,0,0,1,0,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "0,1,0,0,1,0,0"))
                                                         (rule "applyOnPV" (formula "58") (term "1,1,0,0,1,0,0"))
                                                         (rule "applyOnPV" (formula "58") (term "0,1,0,0,1,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "0,0,0,1,0,0"))
                                                         (rule "simplifyUpdate2" (formula "58") (term "0,0,0,0,1,0,0"))
                                                         (rule "applyOnRigidTerm" (formula "58") (term "0,1,0,0,1,0,1"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "1,0,1,0,0,1,0,1"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "0,0,1,0,0,1,0,1"))
                                                         (rule "applyOnPV" (formula "58") (term "1,0,1,0,0,1,0,1"))
                                                         (rule "polySimp_addComm0" (formula "58") (term "0,1,0,0,1,0,1"))
                                                         (rule "applyOnRigidTerm" (formula "58") (term "1,0,0,0,1,0,1"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "1,1,0,0,0,1,0,1"))
                                                         (rule "applyOnPV" (formula "58") (term "0,1,0,0,0,1,0,1"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "0,1,0,1,0,0,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "1,0,1,0,1,0,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "1,0,0,1,0,0,0"))
                                                         (rule "applyOnPV" (formula "58") (term "1,1,0,0,1,0,0,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "0,1,0,0,1,0,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "0,0,0,1,0,0,0"))
                                                         (rule "applyOnPV" (formula "58") (term "1,0,0,0,1,0,0,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "0,0,0,0,1,0,0,0"))
                                                         (rule "applyOnRigidTerm" (formula "58") (term "0,0,1,0,1,0,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "1,0,0,1,0,1,0,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "2,0,0,1,0,1,0,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "0,0,0,1,0,1,0,0"))
                                                         (rule "applyOnPV" (formula "58") (term "1,0,0,1,0,1,0,0"))
                                                         (rule "applyOnPV" (formula "58") (term "0,0,0,1,0,1,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "58") (term "1,0,0,0,1,0,0"))
                                                         (rule "applyOnPV" (formula "58") (term "1,1,0,0,0,1,0,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "0,1,0,0,0,1,0,0"))
                                                         (rule "applyOnRigidTerm" (formula "58") (term "1,0,1,0,0,1,0,1"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "0,1,0,1,0,0,1,0,1"))
                                                         (rule "applyOnPV" (formula "58") (term "1,1,0,1,0,0,1,0,1"))
                                                         (rule "polySimp_addComm1" (formula "58") (term "0,1,0,0,1,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0,0,0,0,0"))
                                                         (rule "applyOnRigidTerm" (formula "58") (term "0,0,1,0,1,0,0,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "1,0,0,1,0,1,0,0,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "2,0,0,1,0,1,0,0,0"))
                                                         (rule "simplifyUpdate1" (formula "58") (term "0,0,0,1,0,1,0,0,0"))
                                                         (rule "applyOnPV" (formula "58") (term "1,0,0,1,0,1,0,0,0"))
                                                         (rule "applyOnPV" (formula "58") (term "0,0,0,1,0,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0,1,0,1"))
                                                         (rule "add_literals" (formula "58") (term "0,0,0,1,0,0,1,0,1"))
                                                         (rule "add_zero_left" (formula "58") (term "0,0,1,0,0,1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "58") (term "0,0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "58") (term "0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,1,0,0,0"))
                                                         (rule "precOfInt" (formula "58") (term "1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "58") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,1,1"))
                                                         (rule "polySimp_rightDist" (formula "58") (term "0,1,0,0,1,1"))
                                                         (rule "mul_literals" (formula "58") (term "0,0,1,0,0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,1,1"))
                                                         (rule "add_literals" (formula "58") (term "0,0,0,0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "58") (term "0,1,1"))
                                                         (rule "polySimp_addComm1" (formula "58") (term "0,0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,1,1"))
                                                         (rule "polySimp_addComm1" (formula "58") (term "0,0,0,0,1,1"))
                                                         (rule "add_literals" (formula "58") (term "0,0,0,0,0,1,1"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "58") (term "0,0,0,1,1"))
                                                         (rule "add_literals" (formula "58") (term "1,1,0,0,0,1,1"))
                                                         (rule "times_zero_1" (formula "58") (term "1,0,0,0,1,1"))
                                                         (rule "add_zero_right" (formula "58") (term "0,0,0,1,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "58") (term "0,1"))
                                                         (rule "mul_literals" (formula "58") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "58") (term "0,0,1"))
                                                         (rule "mod_axiom" (formula "56") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1"))
                                                         (rule "div_literals" (formula "56") (term "0,1,1,1"))
                                                         (rule "mul_literals" (formula "56") (term "1,1,1"))
                                                         (rule "add_zero_right" (formula "56") (term "1,1"))
                                                         (rule "add_literals" (formula "56") (term "1"))
                                                         (rule "close" (formula "56") (ifseqformula "37"))
                                                      )
                                                      (branch "Exceptional Post (nextKeyIndex)"
                                                         (rule "simplifyUpdate2" (formula "46"))
                                                         (rule "simplifyUpdate2" (formula "46") (term "1"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "simplifyUpdate2" (formula "46"))
                                                         (rule "andLeft" (formula "47"))
                                                         (rule "simplifyUpdate2" (formula "48"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "simplifyUpdate2" (formula "46"))
                                                         (rule "andLeft" (formula "48"))
                                                         (rule "simplifyUpdate2" (formula "48"))
                                                         (rule "simplifyUpdate2" (formula "49"))
                                                         (rule "notLeft" (formula "46"))
                                                         (rule "close" (formula "50") (ifseqformula "49"))
                                                      )
                                                      (branch "Pre (nextKeyIndex)"
                                                         (rule "simplifyUpdate2" (formula "54"))
                                                         (rule "expand_inInt" (formula "54") (term "1,1,1,1"))
                                                         (rule "expand_inInt" (formula "54") (term "1,0,1,1,1"))
                                                         (rule "replace_int_MAX" (formula "54") (term "1,0,1,1,1,1"))
                                                         (rule "replace_int_MIN" (formula "54") (term "0,1,1,1,1,1"))
                                                         (rule "replace_int_MIN" (formula "54") (term "0,1,1,0,1,1,1"))
                                                         (rule "replace_int_MAX" (formula "54") (term "1,0,1,0,1,1,1"))
                                                         (rule "simplifyUpdate2" (formula "54") (term "1"))
                                                         (rule "polySimp_homoEq" (formula "4") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "4") (term "0,0,1,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "54"))
                                                         (rule "simplifyUpdate2" (formula "54") (term "0"))
                                                         (rule "inEqSimp_ltRight" (formula "50"))
                                                         (rule "mul_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "51"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "54") (term "1"))
                                                         (rule "simplifyUpdate2" (formula "54") (term "1,1"))
                                                         (rule "simplifyUpdate2" (formula "54") (term "0,1"))
                                                         (rule "applyOnRigidFormula" (formula "54") (term "0"))
                                                         (rule "applyOnPV" (formula "54") (term "0,0"))
                                                         (rule "replace_known_left" (formula "54") (term "0") (ifseqformula "46"))
                                                         (rule "concrete_and_1" (formula "54"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "17") (term "1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "18") (term "0,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "14"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "18") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "18") (term "1,0,0,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,1,0"))
                                                         (rule "applyOnRigidFormula" (formula "54") (term "1"))
                                                         (rule "applyOnRigidFormula" (formula "54") (term "0"))
                                                         (rule "simplifyUpdate2" (formula "54") (term "0,0"))
                                                         (rule "simplifyUpdate2" (formula "54") (term "1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                         (rule "applyOnRigidFormula" (formula "54") (term "1,1"))
                                                         (rule "simplifyUpdate1" (formula "54") (term "0,1,1"))
                                                         (rule "applyOnPV" (formula "54") (term "1,1,1"))
                                                         (rule "applyOnRigidFormula" (formula "54") (term "0,1"))
                                                         (rule "applyOnPV" (formula "54") (term "0,0,1"))
                                                         (rule "simplifyUpdate1" (formula "54") (term "1,0,1"))
                                                         (rule "applyOnRigidFormula" (formula "54") (term "0,0"))
                                                         (rule "applyOnPV" (formula "54") (term "0,0,0"))
                                                         (rule "applyOnRigidFormula" (formula "54") (term "1,0"))
                                                         (rule "applyOnRigidFormula" (formula "54") (term "0,1,0"))
                                                         (rule "simplifyUpdate1" (formula "54") (term "1,0,1,0"))
                                                         (rule "applyOnPV" (formula "54") (term "0,0,1,0"))
                                                         (rule "applyOnRigidFormula" (formula "54") (term "1,1,0"))
                                                         (rule "simplifyUpdate1" (formula "54") (term "0,1,1,0"))
                                                         (rule "applyOnPV" (formula "54") (term "1,1,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "54") (term "1,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "54") (term "1,1"))
                                                         (rule "mul_literals" (formula "54") (term "1,0,1,1"))
                                                         (rule "polySimp_addComm1" (formula "54") (term "0,1,1"))
                                                         (rule "add_literals" (formula "54") (term "0,0,1,1"))
                                                         (rule "add_zero_left" (formula "54") (term "0,1,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "54") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "54") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "54") (term "0,0,1"))
                                                         (rule "add_literals" (formula "54") (term "0,0,0,1"))
                                                         (rule "mod_axiom" (formula "52") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1"))
                                                         (rule "div_literals" (formula "52") (term "0,1,1,1"))
                                                         (rule "mul_literals" (formula "52") (term "1,1,1"))
                                                         (rule "add_zero_right" (formula "52") (term "1,1"))
                                                         (rule "add_literals" (formula "52") (term "1"))
                                                         (rule "close" (formula "52") (ifseqformula "37"))
                                                      )
                                                   )
                                                   (branch "if x_12 false"
                                                      (rule "false_to_not_true" (formula "1") (term "1"))
                                                      (rule "simplifyUpdate2" (formula "54"))
                                                      (rule "simplifyUpdate2" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "applyOnRigidFormula" (formula "46"))
                                                      (rule "simplifyUpdate1" (formula "46") (term "1"))
                                                      (rule "applyOnPV" (formula "46") (term "0"))
                                                      (rule "ifthenelse_concrete4" (formula "46"))
                                                      (rule "boolean_not_equal_2" (formula "46") (term "1"))
                                                      (rule "concrete_or_4" (formula "46"))
                                                      (rule "notRight" (formula "46"))
                                                      (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "1"))
                                                      (rule "ifthenelse_concrete3" (formula "5"))
                                                      (rule "commute_or" (formula "5"))
                                                      (rule "cnf_rightDist" (formula "5"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "commute_or" (formula "6"))
                                                      (rule "commute_or" (formula "5"))
                                                      (rule "elim_double_block_2" (formula "55") (term "1"))
                                                      (rule "blockBreak" (formula "55") (term "1"))
                                                      (rule "lsBreak" (formula "55") (term "1"))
                                                      (rule "assignment" (formula "55") (term "1"))
                                                      (rule "sequentialToParallel2" (formula "55"))
                                                      (rule "simplifyUpdate3" (formula "55") (term "1,0"))
                                                      (rule "assignment_to_reference_array_component" (formula "55"))
                                                      (branch "Normal Execution (newTable != null)"
                                                         (rule "sequentialToParallel2" (formula "55"))
                                                         (rule "simplifyUpdate2" (formula "55"))
                                                         (rule "simplifyUpdate3" (formula "55") (term "1,0"))
                                                         (rule "applyOnElementary" (formula "55") (term "1,0"))
                                                         (rule "applyOnRigidTerm" (formula "55") (term "0,1,0"))
                                                         (rule "simplifyUpdate1" (formula "55") (term "3,0,1,0"))
                                                         (rule "simplifyUpdate1" (formula "55") (term "2,0,1,0"))
                                                         (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0"))
                                                         (rule "simplifyUpdate1" (formula "55") (term "0,0,1,0"))
                                                         (rule "applyOnPV" (formula "55") (term "3,0,1,0"))
                                                         (rule "applyOnPV" (formula "55") (term "1,0,1,0"))
                                                         (rule "applyOnPV" (formula "55") (term "0,0,1,0"))
                                                         (rule "applyOnRigidTerm" (formula "55") (term "2,0,1,0"))
                                                         (rule "applyOnPV" (formula "55") (term "0,2,0,1,0"))
                                                         (rule "eval_order_array_access2" (formula "55") (term "1") (inst "#v0=x_7") (inst "#ar1=o_arr"))
                                                         (rule "variableDeclarationAssign" (formula "55") (term "1"))
                                                         (rule "variableDeclaration" (formula "55") (term "1") (newnames "o_arr_5"))
                                                         (rule "assignment" (formula "55") (term "1"))
                                                         (rule "sequentialToParallel2" (formula "55"))
                                                         (rule "simplifyUpdate3" (formula "55") (term "1,0"))
                                                         (rule "applyOnElementary" (formula "55") (term "1,0"))
                                                         (rule "applyOnPV" (formula "55") (term "0,1,0"))
                                                         (rule "variableDeclarationAssign" (formula "55") (term "1"))
                                                         (rule "variableDeclaration" (formula "55") (term "1") (newnames "x_13"))
                                                         (rule "assignmentAdditionInt" (formula "55") (term "1"))
                                                         (rule "translateJavaAddInt" (formula "55") (term "0,0,1"))
                                                         (rule "sequentialToParallel2" (formula "55"))
                                                         (rule "simplifyUpdate3" (formula "55") (term "1,0"))
                                                         (rule "applyOnElementary" (formula "55") (term "1,0"))
                                                         (rule "applyOnRigidTerm" (formula "55") (term "0,1,0"))
                                                         (rule "applyOnPV" (formula "55") (term "0,0,1,0"))
                                                         (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0"))
                                                         (rule "assignment_to_reference_array_component" (formula "55"))
                                                         (branch "Normal Execution (o_arr_5 != null)"
                                                            (rule "sequentialToParallel2" (formula "55"))
                                                            (rule "simplifyUpdate2" (formula "55"))
                                                            (rule "simplifyUpdate3" (formula "55") (term "1,0"))
                                                            (rule "applyOnElementary" (formula "55") (term "1,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,1,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,0,1,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,0,1,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "3,0,1,0"))
                                                            (rule "applyOnPV" (formula "55") (term "1,0,1,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,1,0"))
                                                            (rule "applyOnPV" (formula "55") (term "3,0,1,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "2,0,1,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,2,0,1,0"))
                                                            (rule "blockEmpty" (formula "55") (term "1"))
                                                            (rule "expand_addJint" (formula "55") (term "0,2,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "55") (term "0,0,2,0,1,0"))
                                                            (rule "expand_moduloInteger" (formula "55") (term "0,2,0,1,0"))
                                                            (rule "replace_int_RANGE" (formula "55") (term "1,1,0,2,0,1,0"))
                                                            (rule "replace_int_HALFRANGE" (formula "55") (term "0,0,1,0,2,0,1,0"))
                                                            (rule "replace_int_MIN" (formula "55") (term "0,0,2,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "55") (term "0,1,0,2,0,1,0"))
                                                            (rule "add_literals" (formula "55") (term "0,0,1,0,2,0,1,0"))
                                                            (rule "compound_assignment_op_plus" (formula "55") (term "1"))
                                                            (rule "compound_int_cast_expression" (formula "55") (term "1") (inst "#v=x_7"))
                                                            (rule "variableDeclarationAssign" (formula "55") (term "1"))
                                                            (rule "variableDeclaration" (formula "55") (term "1") (newnames "x_14"))
                                                            (rule "remove_parentheses_right" (formula "55") (term "1"))
                                                            (rule "compound_addition_2" (formula "55") (term "1") (inst "#v1=x_16") (inst "#v0=x_15"))
                                                            (rule "variableDeclarationAssign" (formula "55") (term "1"))
                                                            (rule "variableDeclaration" (formula "55") (term "1") (newnames "x_15"))
                                                            (rule "assignment" (formula "55") (term "1"))
                                                            (rule "sequentialToParallel2" (formula "55"))
                                                            (rule "simplifyUpdate3" (formula "55") (term "1,0"))
                                                            (rule "applyOnElementary" (formula "55") (term "1,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,1,0"))
                                                            (rule "variableDeclarationAssign" (formula "55") (term "1"))
                                                            (rule "variableDeclaration" (formula "55") (term "1") (newnames "x_16"))
                                                            (rule "remove_parentheses_right" (formula "55") (term "1"))
                                                            (rule "assignment" (formula "55") (term "1"))
                                                            (rule "sequentialToParallel2" (formula "55"))
                                                            (rule "simplifyUpdate3" (formula "55") (term "1,0"))
                                                            (rule "assignmentAdditionInt" (formula "55") (term "1"))
                                                            (rule "translateJavaAddInt" (formula "55") (term "0,0,1"))
                                                            (rule "sequentialToParallel2" (formula "55"))
                                                            (rule "simplifyUpdate2" (formula "55"))
                                                            (rule "simplifyUpdate3" (formula "55") (term "1,0"))
                                                            (rule "applyOnElementary" (formula "55") (term "1,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,1,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,0,1,0"))
                                                            (rule "applyOnPV" (formula "55") (term "1,0,1,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,1,0"))
                                                            (rule "expand_addJint" (formula "55") (term "0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "55") (term "0,0,1,0"))
                                                            (rule "expand_moduloInteger" (formula "55") (term "0,1,0"))
                                                            (rule "replace_int_RANGE" (formula "55") (term "1,1,0,1,0"))
                                                            (rule "replace_int_HALFRANGE" (formula "55") (term "0,0,1,0,1,0"))
                                                            (rule "replace_int_MIN" (formula "55") (term "0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "55") (term "0,1,0,1,0"))
                                                            (rule "add_literals" (formula "55") (term "0,0,1,0,1,0"))
                                                            (rule "widening_identity_cast_5" (formula "55") (term "1"))
                                                            (rule "assignment" (formula "55") (term "1"))
                                                            (rule "sequentialToParallel2" (formula "55"))
                                                            (rule "simplifyUpdate2" (formula "55"))
                                                            (rule "simplifyUpdate3" (formula "55") (term "1,0"))
                                                            (rule "applyOnElementary" (formula "55") (term "1,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,1,0"))
                                                            (rule "blockEmpty" (formula "55") (term "1"))
                                                            (rule "lsContinue" (formula "55") (term "1"))
                                                            (rule "polySimp_homoEq" (formula "6") (term "1"))
                                                            (rule "sequentialToParallel2" (formula "55"))
                                                            (rule "simplifyUpdate3" (formula "55") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                                                            (rule "polySimp_addComm0" (formula "6") (term "0,0,1"))
                                                            (rule "applyOnRigidFormula" (formula "55"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "1"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "1,0"))
                                                            (rule "inEqSimp_ltRight" (formula "51"))
                                                            (rule "mul_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "52"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "0,1"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "1,1"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,0"))
                                                            (rule "boolean_equal" (formula "55") (term "0,0"))
                                                            (rule "concrete_impl_1" (formula "55") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "20") (term "1,1,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "20") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "11"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "19") (term "1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "0,1,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,0,1,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "20") (term "1,0,0,0,1,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "46"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "16"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "20") (term "0,1,0,1,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,1"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,1"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "1,1,1"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "0,1,1"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "1,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                            (rule "add_literals" (formula "11") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                                                            (rule "add_literals" (formula "46") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,1"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,0,1"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,0,1"))
                                                            (rule "boolean_equal" (formula "55") (term "0,0,1"))
                                                            (rule "concrete_not_1" (formula "55") (term "0,1"))
                                                            (rule "concrete_impl_2" (formula "55") (term "1"))
                                                            (rule "concrete_and_3" (formula "55"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "1,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "1,1"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "0,1"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,0"))
                                                            (rule "boolean_not_equal_2" (formula "55") (term "0,0"))
                                                            (rule "concrete_impl_2" (formula "55") (term "0"))
                                                            (rule "concrete_and_1" (formula "55"))
                                                            (rule "impRight" (formula "55"))
                                                            (rule "notLeft" (formula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "56"))
                                                            (rule "simplifyUpdate2" (formula "56") (term "1"))
                                                            (rule "simplifyUpdate2" (formula "56") (term "0"))
                                                            (rule "applyOnRigidFormula" (formula "50"))
                                                            (rule "applyOnPV" (formula "50") (term "0"))
                                                            (rule "simplifyUpdate1" (formula "50") (term "1"))
                                                            (rule "boolean_not_equal_2" (formula "50"))
                                                            (rule "false_right" (formula "50"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,1"))
                                                            (rule "applyOnPV" (formula "55") (term "1,1"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "1,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,1"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,0,1"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "1,0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,0,1"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1,0,1"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,1,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "0,1,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "1,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,1,0,1"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,1"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,0,1,0,1"))
                                                            (rule "applyOnPV" (formula "55") (term "1,0,1,0,1"))
                                                            (rule "polySimp_addComm0" (formula "55") (term "0,1,0,1"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,1,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "0,0,0,1,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,1,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,1,1,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1,1,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,1,1,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "1,1,1,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,1,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,1,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "1,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,0"))
                                                            (rule "precOfInt" (formula "55") (term "1"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,1,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,1,0,0,1,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,1,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,1,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "0,0,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,1,0,0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "0,0,1,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,0,1,0,1,1"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,1,0,1,0,1,1"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,0,1,1,0,1"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,1,0,1,1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "55") (term "0,1,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "55") (term "0,0,1,0,1,1"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,1,0,0,1,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,1,0,0,1,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,0,1,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "55") (term "0,1,1,0,1"))
                                                            (rule "polySimp_addComm0" (formula "55") (term "0,0,1,1,0,1"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,1,0,0,1,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1,1,0,0,1,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,1,1,0,0,1,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,1,1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "55") (term "1,0,0,1,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,0,1,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,0,0,0,0,1,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,0,1,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "0,1,0,0,0,1,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "0,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,0,1,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,1,0,0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "0,0,0,1,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,0,1,0,1,1"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1,0,1,0,1,1"))
                                                            (rule "applyOnPV" (formula "55") (term "0,1,0,1,0,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0,1,1"))
                                                            (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0,1,1"))
                                                            (rule "mul_literals" (formula "55") (term "0,1,0,1,0,1,1"))
                                                            (rule "polySimp_addComm1" (formula "55") (term "0,1,0,1,1"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,0,1,1,0,1"))
                                                            (rule "applyOnPV" (formula "55") (term "0,1,0,1,1,0,1"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1,0,1,1,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "55") (term "1,0,1,1,0,1"))
                                                            (rule "mul_literals" (formula "55") (term "0,1,0,1,1,0,1"))
                                                            (rule "polySimp_addComm1" (formula "55") (term "0,1,1,0,1"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,0,0,0,0,1,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,1,0,0,0,0,1,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,0,0,1,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,1,0,0,0,0,1,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,1,0,0,0,1,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,0,1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,1,1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,1,1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1,1,0,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,1,1"))
                                                            (rule "add_literals" (formula "55") (term "0,0,0,1,0,1,1"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,1,0,1,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,1,0,1,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,1,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,1,0,1"))
                                                            (rule "add_literals" (formula "55") (term "0,0,0,1,1,0,1"))
                                                            (rule "dismissNonSelectedField" (formula "55") (term "1,0,0,0,0,1,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,1,1,0,0,0,1,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,1,0,0,0,1,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "2,0,1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,2,0,1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,2,0,1,0,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,0,1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1,0,1,0,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,1,0,1,0,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "2,1,1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,2,1,1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,2,1,1,0,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,1,1,0,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,1,1,1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1,1,1,0,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "1,0,0,0,0,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,1,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,1,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,1,0,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,1,1,0,1,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,0,1,0,1,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,1,0,1,0,1,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,1,0,1,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,1,0,0,1,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1,1,0,0,1,0,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "55") (term "1,0,0,0,0,1,0"))
                                                            (rule "replaceKnownSelect_taclet10001110_0" (formula "55") (term "1,0,0,0,0,1,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10001110_2" (formula "55") (term "1,0,0,0,0,1,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,0,1,1,0,0,0,1,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,0,0,1,1,0,0,0,1,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,0,1,1,0,0,0,1,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,0,1,1,0,0,0,1,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,2,0,1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,2,0,1,0,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,2,1,1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,2,1,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "55") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,1"))
                                                            (rule "mul_literals" (formula "55") (term "0,1,0,0,1,1"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,1,1,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,1,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,0,1,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,1,0,1,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,1,0,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1,1,0,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,1,1,0,1,0,0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "1,0,0,1,1,0,1,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,0,1,1,0,1,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,1,0,1,0,1,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1,1,0,1,0,1,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,1,0,1,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,0,0,1,0,1,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,1,1,0,0,1,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,1,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,1"))
                                                            (rule "add_literals" (formula "55") (term "0,0,0,1,1"))
                                                            (rule "dismissNonSelectedField" (formula "55") (term "0,0,1,1,0,0,0,1,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,0,2,0,1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,0,0,2,0,1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,0,2,0,1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,0,0,2,0,1,0,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "1,0,0,2,0,1,0,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,0,2,0,1,0,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,0,2,1,1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,0,0,2,1,1,0,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,0,2,1,1,0,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "1,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,1,1,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "1,0,0,1,1,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,0,1,1,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,1,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,0,0,1,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,1,0,1,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1,1,0,1,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,1,1,0,0,1,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,1,1,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "55") (term "0,1,1"))
                                                            (rule "polySimp_addComm1" (formula "55") (term "0,0,1,1"))
                                                            (rule "add_literals" (formula "55") (term "0,0,0,1,1"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,1,1,0,1,0,0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "1,0,0,0,1,1,0,1,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,1,0,1,1,0,1,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,1,1,0,1,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,1,1,0,1,0,1,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,0,1,1,0,1,0,1,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,0,1,1,0,1,0,1,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,1,0,1,0,1,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,1,1,0,1,0,1,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "1,0,1,1,0,1,0,1,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,1,1,0,1,0,1,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,1,1,1,0,1,0,1,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,0,0,0,1,0,1,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,0,0,0,1,0,1,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,0,0,0,0,1,0,1,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,0,0,0,0,1,0,1,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "1,0,0,0,0,1,0,1,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,0,0,0,1,0,1,0,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "55") (term "0,0,1,1,0,0,0,1,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,0,0,2,1,1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,2,1,1,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,1,0,0,2,1,1,0,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,1,0,0,2,1,1,0,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,0,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "55") (term "1,1,0,0,1,1,0,1,0,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "55") (term "1,0,0,1,1,0,0,1,1,0,1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,0,1,1,0,0,1,1,0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,1,1,0,0,1,1,0,1,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate2" (formula "55") (term "0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,1,1,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,0,0,0,1,1,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,1,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,1,0,1,1,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,1,1,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,0,0,0,1,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,0,0,0,0,1,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,0,0,0,0,1,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,0,0,0,1,0,1,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,0,0,0,1,0,1,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "1,0,0,0,0,1,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,1,1,0,1,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,1,0,1,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,0,1,1,0,1,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,0,1,1,0,1,0,1,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "1,0,1,1,0,1,0,1,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,1,1,0,1,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,1,1,0,1,0,1,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,1,1,1,0,1,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,0,1,1,0,1,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,0,0,0,0,1,1,0,1,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,0,1,1,0,1,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,1,0,0,0,1,1,0,1,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,0,1,0,1,1,0,1,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,0,0,1,0,1,1,0,1,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,0,0,1,0,1,1,0,1,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,0,1,0,1,1,0,1,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,0,1,0,1,1,0,1,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "1,0,0,1,0,1,1,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "55") (term "0,1"))
                                                            (rule "mul_literals" (formula "55") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,1,1,0,1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,1,1,0,1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,1,1,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,1,1,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,0,1,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,0,1,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,1,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "1,0,1,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,0,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,0,0,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,0,0,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,0,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,0,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,1,0,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,1,0,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,1,0,1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,1,0,1,0,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,1,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "55") (term "0,1,0,1,0,1,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,0,0,0,1,1,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,0,1,1,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,0,1,0,1,1,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,0,0,1,0,1,1,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,0,0,1,0,1,1,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,0,1,0,1,1,0,1,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,0,1,0,1,1,0,1,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "1,0,0,1,0,1,1,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,0,0,0,0,1,1,0,1,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,0,0,1,1,0,1,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,1,0,0,0,1,1,0,1,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,1,1,0,0,0,1,1,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "55") (term "0,0,0,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "55") (term "1,0,1,0,1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,1,0,1,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "55") (term "0,1,0,1,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,1,1,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1,1,1,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,1,1,1,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,1,1,1,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,1,0,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,1,1,0,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,1,1,0,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,1,1,0,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,1,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,1,1,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,1,0,0,0,1,1,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,0,0,1,1,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,1,0,0,0,0,1,1,0,1,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,0,1,0,0,0,0,1,1,0,1,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,0,1,0,0,0,0,1,1,0,1,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,0,0,0,1,1,0,1,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,1,0,0,0,0,1,1,0,1,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "1,0,1,0,0,0,0,1,1,0,1,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,1,0,0,0,0,1,1,0,1,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,1,1,0,0,0,0,1,1,0,1,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "0,0,1,0,0,0,1,1,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "2,0,0,1,0,0,0,1,1,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "0,0,0,1,0,0,0,1,1,0,1,0,0,0,0"))
                                                            (rule "simplifyUpdate1" (formula "55") (term "1,0,0,1,0,0,0,1,1,0,1,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,0,0,1,0,0,0,1,1,0,1,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "1,0,0,1,0,0,0,1,1,0,1,0,0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "55") (term "1,0,1,0,0,0,1,1,0,1,0,0,0,0"))
                                                            (rule "applyOnPV" (formula "55") (term "0,1,0,1,0,0,0,1,1,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,0,1,1,0,1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,0,1,1,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "mod_axiom" (formula "53") (term "1,1"))
                                                            (rule "div_literals" (formula "53") (term "0,0,1,1,1"))
                                                            (rule "mul_literals" (formula "53") (term "0,1,1,1"))
                                                            (rule "mul_literals" (formula "53") (term "1,1,1"))
                                                            (rule "add_zero_right" (formula "53") (term "1,1"))
                                                            (rule "add_literals" (formula "53") (term "1"))
                                                            (rule "close" (formula "53") (ifseqformula "39"))
                                                         )
                                                         (branch "Null Reference (o_arr_5 = null)"
                                                            (rule "false_right" (formula "56"))
                                                            (rule "simplifyUpdate2" (formula "1"))
                                                            (rule "polySimp_homoEq" (formula "7") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                                                            (rule "polySimp_addComm0" (formula "7") (term "0,0,1"))
                                                            (rule "applyOnRigidFormula" (formula "1"))
                                                            (rule "applyOnPV" (formula "1") (term "0"))
                                                            (rule "simplifyUpdate1" (formula "1") (term "1"))
                                                            (rule "close" (formula "51") (ifseqformula "1"))
                                                         )
                                                         (branch "Index Out of Bounds (o_arr_5 != null, but x_13 Out of Bounds!)"
                                                            (rule "false_right" (formula "56"))
                                                            (rule "simplifyUpdate2" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "simplifyUpdate2" (formula "1"))
                                                            (rule "notLeft" (formula "1"))
                                                            (rule "polySimp_homoEq" (formula "7") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                                                            (rule "polySimp_addComm0" (formula "7") (term "0,0,1"))
                                                            (rule "applyOnRigidFormula" (formula "1"))
                                                            (rule "simplifyUpdate2" (formula "1") (term "1"))
                                                            (rule "applyOnRigidFormula" (formula "49"))
                                                            (rule "simplifyUpdate1" (formula "49") (term "1"))
                                                            (rule "applyOnPV" (formula "49") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "53"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "inEqSimp_ltRight" (formula "53"))
                                                            (rule "mul_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "applyOnRigidFormula" (formula "3") (term "0"))
                                                            (rule "simplifyUpdate1" (formula "3") (term "1,0"))
                                                            (rule "simplifyUpdate1" (formula "3") (term "0,0"))
                                                            (rule "applyOnPV" (formula "3") (term "1,0"))
                                                            (rule "applyOnRigidFormula" (formula "3") (term "1"))
                                                            (rule "simplifyUpdate1" (formula "3") (term "1,1"))
                                                            (rule "applyOnPV" (formula "3") (term "0,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "0,1,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "20") (term "1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "20") (term "0,1,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "12"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "15") (term "0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,0,1,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "21") (term "1,0,0,0,1,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "17"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "21") (term "1,1,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "21") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "47"))
                                                            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "47") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "47") (term "0,1,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "3") (term "0,0"))
                                                            (rule "applyOnPV" (formula "3") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "3") (term "1"))
                                                            (rule "mul_literals" (formula "3") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                                            (rule "add_literals" (formula "47") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                            (rule "mod_axiom" (formula "54") (term "1,1"))
                                                            (rule "div_literals" (formula "54") (term "0,0,1,1,1"))
                                                            (rule "mul_literals" (formula "54") (term "0,1,1,1"))
                                                            (rule "mul_literals" (formula "54") (term "1,1,1"))
                                                            (rule "add_zero_right" (formula "54") (term "1,1"))
                                                            (rule "add_literals" (formula "54") (term "1"))
                                                            (rule "close" (formula "54") (ifseqformula "40"))
                                                         )
                                                         (branch "Array Store Exception (incompatible dynamic element type of o_arr_5 and value)"
                                                            (rule "false_right" (formula "56"))
                                                            (rule "simplifyUpdate2" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "simplifyUpdate2" (formula "2"))
                                                            (rule "simplifyUpdate2" (formula "1"))
                                                            (rule "notLeft" (formula "2"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "simplifyUpdate2" (formula "2"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "simplifyUpdate2" (formula "1"))
                                                            (rule "notLeft" (formula "1"))
                                                            (rule "polySimp_homoEq" (formula "8") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
                                                            (rule "polySimp_addComm0" (formula "8") (term "0,0,1"))
                                                            (rule "applyOnRigidFormula" (formula "51"))
                                                            (rule "simplifyUpdate1" (formula "51") (term "0"))
                                                            (rule "simplifyUpdate1" (formula "51") (term "1"))
                                                            (rule "applyOnPV" (formula "51") (term "0"))
                                                            (rule "applyOnPV" (formula "51") (term "1"))
                                                            (rule "applyOnRigidFormula" (formula "2"))
                                                            (rule "applyOnPV" (formula "2") (term "0"))
                                                            (rule "simplifyUpdate1" (formula "2") (term "1"))
                                                            (rule "applyOnRigidFormula" (formula "1"))
                                                            (rule "simplifyUpdate1" (formula "1") (term "0"))
                                                            (rule "simplifyUpdate1" (formula "1") (term "1"))
                                                            (rule "applyOnPV" (formula "1") (term "0"))
                                                            (rule "inEqSimp_ltRight" (formula "55"))
                                                            (rule "mul_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "56"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "applyOnRigidFormula" (formula "52"))
                                                            (rule "simplifyUpdate1" (formula "52") (term "1"))
                                                            (rule "applyOnPV" (formula "52") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,1,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "22") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "13"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,0,1,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "22") (term "1,0,0,0,1,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,1,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "48"))
                                                            (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "48") (term "0,1,0,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "21") (term "1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "0,1,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "18"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "applyOnRigidTerm" (formula "3") (term "1"))
                                                            (rule "applyOnPV" (formula "3") (term "0,1"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                            (rule "add_literals" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                                                            (rule "add_literals" (formula "48") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "48") (term "0"))
                                                            (rule "array_store_known_dynamic_array_type" (formula "52") (ifseqformula "30"))
                                                            (rule "instanceof_static_type" (formula "52") (term "0,1"))
                                                            (rule "boolean_equal" (formula "52") (term "1"))
                                                            (rule "concrete_or_3" (formula "52"))
                                                            (rule "closeTrue" (formula "52"))
                                                         )
                                                      )
                                                      (branch "Null Reference (newTable = null)"
                                                         (rule "false_right" (formula "56"))
                                                         (rule "simplifyUpdate2" (formula "1"))
                                                         (rule "polySimp_homoEq" (formula "7") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                                                         (rule "polySimp_addComm0" (formula "7") (term "0,0,1"))
                                                         (rule "applyOnRigidFormula" (formula "1"))
                                                         (rule "applyOnPV" (formula "1") (term "0"))
                                                         (rule "simplifyUpdate1" (formula "1") (term "1"))
                                                         (rule "close" (formula "51") (ifseqformula "1"))
                                                      )
                                                      (branch "Index Out of Bounds (newTable != null, but i Out of Bounds!)"
                                                         (rule "false_right" (formula "56"))
                                                         (rule "simplifyUpdate2" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "simplifyUpdate2" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "polySimp_homoEq" (formula "7") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                                                         (rule "polySimp_addComm0" (formula "7") (term "0,0,1"))
                                                         (rule "applyOnRigidFormula" (formula "1"))
                                                         (rule "simplifyUpdate2" (formula "1") (term "1"))
                                                         (rule "applyOnRigidFormula" (formula "49"))
                                                         (rule "simplifyUpdate1" (formula "49") (term "1"))
                                                         (rule "applyOnPV" (formula "49") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "53"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_ltRight" (formula "53"))
                                                         (rule "mul_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "applyOnRigidFormula" (formula "3") (term "0"))
                                                         (rule "simplifyUpdate1" (formula "3") (term "0,0"))
                                                         (rule "simplifyUpdate1" (formula "3") (term "1,0"))
                                                         (rule "applyOnPV" (formula "3") (term "1,0"))
                                                         (rule "applyOnRigidFormula" (formula "3") (term "1"))
                                                         (rule "applyOnPV" (formula "3") (term "0,1"))
                                                         (rule "simplifyUpdate1" (formula "3") (term "1,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "47"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "47") (term "0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "20") (term "1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "20") (term "0,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "21") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "21") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "21") (term "1,0,0,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "15") (term "0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "12"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                                         (rule "applyOnRigidTerm" (formula "3") (term "0,0"))
                                                         (rule "applyOnPV" (formula "3") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                                         (rule "add_literals" (formula "47") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "3") (term "1"))
                                                         (rule "mul_literals" (formula "3") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                         (rule "mod_axiom" (formula "54") (term "1,1"))
                                                         (rule "div_literals" (formula "54") (term "0,0,1,1,1"))
                                                         (rule "mul_literals" (formula "54") (term "0,1,1,1"))
                                                         (rule "mul_literals" (formula "54") (term "1,1,1"))
                                                         (rule "add_zero_right" (formula "54") (term "1,1"))
                                                         (rule "add_literals" (formula "54") (term "1"))
                                                         (rule "close" (formula "54") (ifseqformula "40"))
                                                      )
                                                      (branch "Array Store Exception (incompatible dynamic element type of newTable and key)"
                                                         (rule "false_right" (formula "56"))
                                                         (rule "simplifyUpdate2" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "simplifyUpdate2" (formula "2"))
                                                         (rule "simplifyUpdate2" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "simplifyUpdate2" (formula "2"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "simplifyUpdate2" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "polySimp_homoEq" (formula "8") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
                                                         (rule "polySimp_addComm0" (formula "8") (term "0,0,1"))
                                                         (rule "applyOnRigidFormula" (formula "51"))
                                                         (rule "simplifyUpdate1" (formula "51") (term "1"))
                                                         (rule "simplifyUpdate1" (formula "51") (term "0"))
                                                         (rule "applyOnPV" (formula "51") (term "1"))
                                                         (rule "applyOnPV" (formula "51") (term "0"))
                                                         (rule "applyOnRigidFormula" (formula "2"))
                                                         (rule "applyOnPV" (formula "2") (term "0"))
                                                         (rule "simplifyUpdate1" (formula "2") (term "1"))
                                                         (rule "applyOnRigidFormula" (formula "1"))
                                                         (rule "simplifyUpdate1" (formula "1") (term "1"))
                                                         (rule "simplifyUpdate1" (formula "1") (term "0"))
                                                         (rule "applyOnPV" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "55"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "inEqSimp_ltRight" (formula "55"))
                                                         (rule "mul_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "applyOnRigidFormula" (formula "51"))
                                                         (rule "simplifyUpdate1" (formula "51") (term "1"))
                                                         (rule "applyOnPV" (formula "51") (term "0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "20") (term "1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "20") (term "0,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "12"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "21") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "21") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "15") (term "0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "21") (term "1,0,0,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "47"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "applyOnRigidTerm" (formula "3") (term "1"))
                                                         (rule "applyOnPV" (formula "3") (term "0,1"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "47") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                                         (rule "add_literals" (formula "47") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                         (rule "array_store_known_dynamic_array_type" (formula "51") (ifseqformula "29"))
                                                         (rule "instanceof_static_type" (formula "51") (term "0,1"))
                                                         (rule "boolean_equal" (formula "51") (term "1"))
                                                         (rule "concrete_or_3" (formula "51"))
                                                         (rule "closeTrue" (formula "51"))
                                                      )
                                                   )
                                                )
                                                (branch "Null Reference (newTable = null)"
                                                   (rule "false_right" (formula "50"))
                                                   (rule "simplifyUpdate2" (formula "1"))
                                                   (rule "applyOnRigidFormula" (formula "1"))
                                                   (rule "applyOnPV" (formula "1") (term "0"))
                                                   (rule "simplifyUpdate1" (formula "1") (term "1"))
                                                   (rule "close" (formula "45") (ifseqformula "1"))
                                                )
                                                (branch "Index Out of Bounds (newTable != null, but i Out of Bounds!)"
                                                   (rule "false_right" (formula "50"))
                                                   (rule "simplifyUpdate2" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "simplifyUpdate2" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "applyOnRigidFormula" (formula "1"))
                                                   (rule "simplifyUpdate2" (formula "1") (term "1"))
                                                   (rule "applyOnRigidFormula" (formula "43"))
                                                   (rule "simplifyUpdate1" (formula "43") (term "1"))
                                                   (rule "applyOnPV" (formula "43") (term "0"))
                                                   (rule "applyOnRigidFormula" (formula "1") (term "0"))
                                                   (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                                                   (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                                                   (rule "applyOnPV" (formula "1") (term "1,0"))
                                                   (rule "applyOnRigidFormula" (formula "1") (term "1"))
                                                   (rule "applyOnPV" (formula "1") (term "0,1"))
                                                   (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_ltRight" (formula "46"))
                                                   (rule "mul_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "47"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "applyOnRigidTerm" (formula "3") (term "0,0"))
                                                   (rule "applyOnPV" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "11"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "41"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "41") (term "0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "15") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "14") (term "1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "14") (term "0,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "15") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "15") (term "0,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "6"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                                                   (rule "add_literals" (formula "41") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "41") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3") (term "1"))
                                                   (rule "mul_literals" (formula "3") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "mod_axiom" (formula "48") (term "1,1"))
                                                   (rule "div_literals" (formula "48") (term "0,0,1,1,1"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,1,1"))
                                                   (rule "mul_literals" (formula "48") (term "1,1,1"))
                                                   (rule "add_zero_right" (formula "48") (term "1,1"))
                                                   (rule "add_literals" (formula "48") (term "1"))
                                                   (rule "close" (formula "48") (ifseqformula "34"))
                                                )
                                             )
                                          )
                                          (branch "Exceptional Post (hash)"
                                             (rule "simplifyUpdate2" (formula "27"))
                                             (rule "simplifyUpdate2" (formula "27") (term "1"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "simplifyUpdate2" (formula "27"))
                                             (rule "andLeft" (formula "28"))
                                             (rule "simplifyUpdate2" (formula "29"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "simplifyUpdate2" (formula "27"))
                                             (rule "andLeft" (formula "29"))
                                             (rule "simplifyUpdate2" (formula "29"))
                                             (rule "simplifyUpdate2" (formula "30"))
                                             (rule "notLeft" (formula "27"))
                                             (rule "close" (formula "31") (ifseqformula "30"))
                                          )
                                          (branch "Pre (hash)"
                                             (rule "expand_inInt" (formula "34") (term "1,1,1,1"))
                                             (rule "replace_int_MIN" (formula "34") (term "0,1,1,1,1,1"))
                                             (rule "replace_int_MAX" (formula "34") (term "1,0,1,1,1,1"))
                                             (rule "simplifyUpdate2" (formula "34"))
                                             (rule "simplifyUpdate2" (formula "34") (term "1"))
                                             (rule "applyOnRigidFormula" (formula "34"))
                                             (rule "simplifyUpdate2" (formula "34") (term "0"))
                                             (rule "applyOnRigidFormula" (formula "34") (term "1"))
                                             (rule "simplifyUpdate2" (formula "34") (term "1,1"))
                                             (rule "simplifyUpdate2" (formula "34") (term "0,1"))
                                             (rule "applyOnRigidFormula" (formula "34") (term "0"))
                                             (rule "simplifyUpdate2" (formula "34") (term "0,0"))
                                             (rule "simplifyUpdate2" (formula "34") (term "1,0"))
                                             (rule "applyOnRigidFormula" (formula "34") (term "1,1"))
                                             (rule "inEqSimp_geqRight" (formula "31"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "applyOnRigidFormula" (formula "34") (term "0,1"))
                                             (rule "simplifyUpdate2" (formula "34") (term "0,0,1"))
                                             (rule "inEqSimp_ltRight" (formula "31"))
                                             (rule "mul_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "applyOnRigidFormula" (formula "34") (term "0,0"))
                                             (rule "applyOnPV" (formula "34") (term "0,0,0"))
                                             (rule "applyOnRigidFormula" (formula "34") (term "1,0"))
                                             (rule "applyOnRigidFormula" (formula "34") (term "0,1,1"))
                                             (rule "simplifyUpdate1" (formula "34") (term "1,0,1,1"))
                                             (rule "applyOnPV" (formula "34") (term "0,0,1,1"))
                                             (rule "applyOnRigidFormula" (formula "34") (term "1,1,1"))
                                             (rule "applyOnPV" (formula "34") (term "1,1,1,1"))
                                             (rule "simplifyUpdate1" (formula "34") (term "0,1,1,1"))
                                             (rule "inEqSimp_gtToGeq" (formula "6") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0"))
                                             (rule "applyOnRigidFormula" (formula "34") (term "1,0,1"))
                                             (rule "simplifyUpdate2" (formula "34") (term "0,1,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "7") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "7") (term "1,0,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                             (rule "applyOnRigidFormula" (formula "34") (term "0,0,1"))
                                             (rule "applyOnPV" (formula "34") (term "0,0,0,1"))
                                             (rule "applyOnRigidFormula" (formula "34") (term "0,1,0"))
                                             (rule "simplifyUpdate1" (formula "34") (term "1,0,1,0"))
                                             (rule "applyOnPV" (formula "34") (term "0,0,1,0"))
                                             (rule "replace_known_right" (formula "34") (term "0,1,0") (ifseqformula "29"))
                                             (rule "concrete_not_2" (formula "34") (term "1,0"))
                                             (rule "concrete_and_3" (formula "34") (term "0"))
                                             (rule "applyOnRigidFormula" (formula "34") (term "1,1,0,1"))
                                             (rule "simplifyUpdate1" (formula "34") (term "1,1,1,0,1"))
                                             (rule "applyOnRigidFormula" (formula "34") (term "0,1,0,1"))
                                             (rule "simplifyUpdate1" (formula "34") (term "1,0,1,0,1"))
                                             (rule "applyOnPV" (formula "34") (term "0,0,1,0,1"))
                                             (rule "replace_known_right" (formula "34") (term "0,1,0,1") (ifseqformula "29"))
                                             (rule "concrete_or_2" (formula "34") (term "1,0,1"))
                                             (rule "applyOnRigidTerm" (formula "34") (term "0,1,0,1"))
                                             (rule "simplifyUpdate1" (formula "34") (term "0,0,1,0,1"))
                                             (rule "simplifyUpdate1" (formula "34") (term "2,0,1,0,1"))
                                             (rule "simplifyUpdate1" (formula "34") (term "1,0,1,0,1"))
                                             (rule "applyOnPV" (formula "34") (term "0,0,1,0,1"))
                                             (rule "applyOnPV" (formula "34") (term "1,0,1,0,1"))
                                             (rule "dismissNonSelectedField" (formula "34") (term "0,1,0,1"))
                                             (rule "dismissNonSelectedField" (formula "34") (term "0,1,0,1"))
                                             (rule "selectCreatedOfAnonAsFormula" (formula "34") (term "1,0,1"))
                                             (rule "dismissNonSelectedField" (formula "34") (term "0,0,1,0,1"))
                                             (rule "dismissNonSelectedField" (formula "34") (term "0,0,1,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "34") (term "0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,1"))
                                             (rule "mul_literals" (formula "34") (term "0,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,1"))
                                             (rule "add_literals" (formula "34") (term "0,0,0,1,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "34") (term "1,1,1"))
                                             (rule "mul_literals" (formula "34") (term "1,0,1,1,1"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0,1,1,1"))
                                             (rule "add_literals" (formula "34") (term "0,0,1,1,1"))
                                             (rule "add_zero_left" (formula "34") (term "0,1,1,1"))
                                             (rule "mod_axiom" (formula "32") (term "1,1"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                                             (rule "div_literals" (formula "32") (term "0,1,1,1"))
                                             (rule "mul_literals" (formula "32") (term "1,1,1"))
                                             (rule "add_zero_right" (formula "32") (term "1,1"))
                                             (rule "add_literals" (formula "32") (term "1"))
                                             (rule "close" (formula "32") (ifseqformula "26"))
                                          )
                                       )
                                       (branch "Null Reference (o_arr_4 = null)"
                                          (rule "false_right" (formula "35"))
                                          (rule "simplifyUpdate2" (formula "1"))
                                          (rule "applyOnRigidFormula" (formula "1"))
                                          (rule "applyOnPV" (formula "1") (term "0"))
                                          (rule "simplifyUpdate1" (formula "1") (term "1"))
                                          (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
                                          (rule "concrete_or_1" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "inEqSimp_ltRight" (formula "30"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "31"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "7") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "mod_axiom" (formula "32") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                                          (rule "div_literals" (formula "32") (term "0,1,1,1"))
                                          (rule "mul_literals" (formula "32") (term "1,1,1"))
                                          (rule "add_zero_right" (formula "32") (term "1,1"))
                                          (rule "add_literals" (formula "32") (term "1"))
                                          (rule "close" (formula "32") (ifseqformula "26"))
                                       )
                                       (branch "Index Out of Bounds (o_arr_4 != null, but x_10 Out of Bounds!)"
                                          (rule "false_right" (formula "35"))
                                          (rule "simplifyUpdate2" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "simplifyUpdate2" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "applyOnRigidFormula" (formula "1"))
                                          (rule "simplifyUpdate2" (formula "1") (term "1"))
                                          (rule "applyOnRigidFormula" (formula "28"))
                                          (rule "simplifyUpdate1" (formula "28") (term "1"))
                                          (rule "applyOnPV" (formula "28") (term "0"))
                                          (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "28"))
                                          (rule "concrete_or_2" (formula "15"))
                                          (rule "applyOnRigidFormula" (formula "1") (term "0"))
                                          (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                                          (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                                          (rule "applyOnPV" (formula "1") (term "1,0"))
                                          (rule "applyOnRigidFormula" (formula "1") (term "1"))
                                          (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                                          (rule "applyOnPV" (formula "1") (term "0,1"))
                                          (rule "inEqSimp_geqRight" (formula "33"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "inEqSimp_ltRight" (formula "33"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "applyOnRigidTerm" (formula "3") (term "0,0"))
                                          (rule "applyOnPV" (formula "3") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_gtToGeq" (formula "7") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3") (term "1"))
                                          (rule "mul_literals" (formula "3") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                          (rule "mod_axiom" (formula "34") (term "1,1"))
                                          (rule "div_literals" (formula "34") (term "0,0,1,1,1"))
                                          (rule "mul_literals" (formula "34") (term "0,1,1,1"))
                                          (rule "mul_literals" (formula "34") (term "1,1,1"))
                                          (rule "add_zero_right" (formula "34") (term "1,1"))
                                          (rule "add_literals" (formula "34") (term "1"))
                                          (rule "close" (formula "34") (ifseqformula "27"))
                                       )
                                       (branch "Array Store Exception (incompatible dynamic element type of o_arr_4 and null)"
                                          (rule "false_right" (formula "35"))
                                          (rule "simplifyUpdate2" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "simplifyUpdate2" (formula "2"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "simplifyUpdate2" (formula "2"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "simplifyUpdate2" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "applyOnRigidFormula" (formula "2"))
                                          (rule "simplifyUpdate1" (formula "2") (term "1"))
                                          (rule "applyOnPV" (formula "2") (term "0"))
                                          (rule "applyOnRigidFormula" (formula "30"))
                                          (rule "applyOnPV" (formula "30") (term "0"))
                                          (rule "simplifyUpdate1" (formula "30") (term "1"))
                                          (rule "applyOnRigidFormula" (formula "1"))
                                          (rule "simplifyUpdate1" (formula "1") (term "1"))
                                          (rule "simplifyUpdate1" (formula "1") (term "0"))
                                          (rule "applyOnPV" (formula "1") (term "0"))
                                          (rule "applyOnRigidFormula" (formula "29"))
                                          (rule "simplifyUpdate1" (formula "29") (term "1"))
                                          (rule "applyOnPV" (formula "29") (term "0"))
                                          (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "29"))
                                          (rule "concrete_or_2" (formula "16"))
                                          (rule "inEqSimp_ltRight" (formula "34"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "35"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "applyOnRigidTerm" (formula "3") (term "1"))
                                          (rule "applyOnPV" (formula "3") (term "0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "9") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "8") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "9") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "null_can_always_be_stored_in_a_reference_type_array" (formula "32") (ifseqformula "31"))
                                          (rule "closeTrue" (formula "32"))
                                       )
                                    )
                                    (branch "Null Reference (oldTable = null)"
                                       (rule "false_right" (formula "35"))
                                       (rule "simplifyUpdate2" (formula "1"))
                                       (rule "applyOnRigidFormula" (formula "1"))
                                       (rule "applyOnPV" (formula "1") (term "0"))
                                       (rule "simplifyUpdate1" (formula "1") (term "1"))
                                       (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
                                       (rule "concrete_or_1" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "inEqSimp_ltRight" (formula "30"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "31"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "7") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "mod_axiom" (formula "32") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                                       (rule "div_literals" (formula "32") (term "0,1,1,1"))
                                       (rule "mul_literals" (formula "32") (term "1,1,1"))
                                       (rule "add_zero_right" (formula "32") (term "1,1"))
                                       (rule "add_literals" (formula "32") (term "1"))
                                       (rule "close" (formula "32") (ifseqformula "26"))
                                    )
                                    (branch "Index Out of Bounds (oldTable != null, but j Out of Bounds!)"
                                       (rule "false_right" (formula "35"))
                                       (rule "simplifyUpdate2" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "simplifyUpdate2" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "applyOnRigidFormula" (formula "1"))
                                       (rule "simplifyUpdate2" (formula "1") (term "1"))
                                       (rule "applyOnRigidFormula" (formula "28"))
                                       (rule "simplifyUpdate1" (formula "28") (term "1"))
                                       (rule "applyOnPV" (formula "28") (term "0"))
                                       (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "28"))
                                       (rule "concrete_or_2" (formula "15"))
                                       (rule "applyOnRigidFormula" (formula "1") (term "0"))
                                       (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                                       (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                                       (rule "applyOnPV" (formula "1") (term "1,0"))
                                       (rule "applyOnRigidFormula" (formula "1") (term "1"))
                                       (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                                       (rule "applyOnPV" (formula "1") (term "0,1"))
                                       (rule "inEqSimp_ltRight" (formula "32"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "33"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "applyOnRigidTerm" (formula "3") (term "0,0"))
                                       (rule "applyOnPV" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "7") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3") (term "1"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                       (rule "mod_axiom" (formula "34") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1"))
                                       (rule "div_literals" (formula "34") (term "0,1,1,1"))
                                       (rule "mul_literals" (formula "34") (term "1,1,1"))
                                       (rule "add_zero_right" (formula "34") (term "1,1"))
                                       (rule "add_literals" (formula "34") (term "1"))
                                       (rule "close" (formula "34") (ifseqformula "27"))
                                    )
                                    (branch "Array Store Exception (incompatible dynamic element type of oldTable and null)"
                                       (rule "false_right" (formula "35"))
                                       (rule "simplifyUpdate2" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "simplifyUpdate2" (formula "2"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "simplifyUpdate2" (formula "2"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "simplifyUpdate2" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "applyOnRigidFormula" (formula "2"))
                                       (rule "applyOnPV" (formula "2") (term "0"))
                                       (rule "simplifyUpdate1" (formula "2") (term "1"))
                                       (rule "applyOnRigidFormula" (formula "29"))
                                       (rule "applyOnPV" (formula "29") (term "0"))
                                       (rule "simplifyUpdate1" (formula "29") (term "1"))
                                       (rule "applyOnRigidFormula" (formula "1"))
                                       (rule "simplifyUpdate1" (formula "1") (term "1"))
                                       (rule "simplifyUpdate1" (formula "1") (term "0"))
                                       (rule "applyOnPV" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltRight" (formula "33"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "applyOnRigidFormula" (formula "29"))
                                       (rule "applyOnPV" (formula "29") (term "0"))
                                       (rule "simplifyUpdate1" (formula "29") (term "1"))
                                       (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "29"))
                                       (rule "concrete_or_2" (formula "16"))
                                       (rule "inEqSimp_geqRight" (formula "34"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "applyOnRigidTerm" (formula "3") (term "1"))
                                       (rule "applyOnPV" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "7") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "6") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "7") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "null_can_always_be_stored_in_a_reference_type_array" (formula "30") (ifseqformula "29"))
                                       (rule "closeTrue" (formula "30"))
                                    )
                                 )
                                 (branch "Null Reference (o_arr_3 = null)"
                                    (rule "false_right" (formula "35"))
                                    (rule "simplifyUpdate2" (formula "1"))
                                    (rule "applyOnRigidFormula" (formula "1"))
                                    (rule "applyOnPV" (formula "1") (term "0"))
                                    (rule "simplifyUpdate1" (formula "1") (term "1"))
                                    (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
                                    (rule "concrete_or_1" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "inEqSimp_geqRight" (formula "31"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_ltRight" (formula "31"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "7") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "mod_axiom" (formula "32") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                                    (rule "div_literals" (formula "32") (term "0,1,1,1"))
                                    (rule "mul_literals" (formula "32") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "32") (term "1,1"))
                                    (rule "add_literals" (formula "32") (term "1"))
                                    (rule "close" (formula "32") (ifseqformula "26"))
                                 )
                                 (branch "Index Out of Bounds (o_arr_3 != null, but x_9 Out of Bounds!)"
                                    (rule "false_right" (formula "35"))
                                    (rule "simplifyUpdate2" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "simplifyUpdate2" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "applyOnRigidFormula" (formula "1"))
                                    (rule "simplifyUpdate2" (formula "1") (term "1"))
                                    (rule "applyOnRigidFormula" (formula "28"))
                                    (rule "applyOnPV" (formula "28") (term "0"))
                                    (rule "simplifyUpdate1" (formula "28") (term "1"))
                                    (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "28"))
                                    (rule "concrete_or_2" (formula "15"))
                                    (rule "applyOnRigidFormula" (formula "1") (term "0"))
                                    (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                                    (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                                    (rule "applyOnPV" (formula "1") (term "1,0"))
                                    (rule "applyOnRigidFormula" (formula "1") (term "1"))
                                    (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                                    (rule "applyOnPV" (formula "1") (term "0,1"))
                                    (rule "inEqSimp_ltRight" (formula "32"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "33"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "applyOnRigidTerm" (formula "3") (term "0,0"))
                                    (rule "applyOnPV" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "7") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3") (term "1"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                    (rule "mod_axiom" (formula "34") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1"))
                                    (rule "div_literals" (formula "34") (term "0,1,1,1"))
                                    (rule "times_zero_2" (formula "34") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "34") (term "1,1"))
                                    (rule "add_literals" (formula "34") (term "1"))
                                    (rule "close" (formula "34") (ifseqformula "27"))
                                 )
                              )
                              (branch "if x_8 false"
                                 (rule "false_to_not_true" (formula "1") (term "1"))
                                 (rule "simplifyUpdate2" (formula "34"))
                                 (rule "simplifyUpdate2" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "applyOnRigidFormula" (formula "27"))
                                 (rule "simplifyUpdate1" (formula "27") (term "1"))
                                 (rule "applyOnPV" (formula "27") (term "0"))
                                 (rule "ifthenelse_concrete4" (formula "27"))
                                 (rule "boolean_not_equal_2" (formula "27") (term "1"))
                                 (rule "concrete_or_4" (formula "27"))
                                 (rule "notRight" (formula "27"))
                                 (rule "blockEmpty" (formula "34") (term "1"))
                                 (rule "compound_assignment_op_plus" (formula "34") (term "1"))
                                 (rule "compound_int_cast_expression" (formula "34") (term "1") (inst "#v=x_7"))
                                 (rule "variableDeclarationAssign" (formula "34") (term "1"))
                                 (rule "variableDeclaration" (formula "34") (term "1") (newnames "x_9"))
                                 (rule "remove_parentheses_right" (formula "34") (term "1"))
                                 (rule "compound_addition_2" (formula "34") (term "1") (inst "#v1=x_11") (inst "#v0=x_10"))
                                 (rule "variableDeclarationAssign" (formula "34") (term "1"))
                                 (rule "variableDeclaration" (formula "34") (term "1") (newnames "x_10"))
                                 (rule "assignment" (formula "34") (term "1"))
                                 (rule "sequentialToParallel2" (formula "34"))
                                 (rule "simplifyUpdate3" (formula "34") (term "1,0"))
                                 (rule "applyOnElementary" (formula "34") (term "1,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,0"))
                                 (rule "variableDeclarationAssign" (formula "34") (term "1"))
                                 (rule "variableDeclaration" (formula "34") (term "1") (newnames "x_11"))
                                 (rule "remove_parentheses_right" (formula "34") (term "1"))
                                 (rule "assignment" (formula "34") (term "1"))
                                 (rule "sequentialToParallel2" (formula "34"))
                                 (rule "simplifyUpdate3" (formula "34") (term "1,0"))
                                 (rule "assignmentAdditionInt" (formula "34") (term "1"))
                                 (rule "translateJavaAddInt" (formula "34") (term "0,0,1"))
                                 (rule "sequentialToParallel2" (formula "34"))
                                 (rule "simplifyUpdate2" (formula "34"))
                                 (rule "simplifyUpdate3" (formula "34") (term "1,0"))
                                 (rule "applyOnElementary" (formula "34") (term "1,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "0,1,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,1,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,0,1,0"))
                                 (rule "applyOnPV" (formula "34") (term "1,0,1,0"))
                                 (rule "expand_addJint" (formula "34") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,0,1,0"))
                                 (rule "expand_moduloInteger" (formula "34") (term "0,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "34") (term "0,0,1,0,1,0"))
                                 (rule "replace_int_MIN" (formula "34") (term "0,0,1,0"))
                                 (rule "replace_int_RANGE" (formula "34") (term "1,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,1,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,1,0,1,0"))
                                 (rule "widening_identity_cast_5" (formula "34") (term "1"))
                                 (rule "assignment" (formula "34") (term "1"))
                                 (rule "sequentialToParallel2" (formula "34"))
                                 (rule "simplifyUpdate2" (formula "34"))
                                 (rule "simplifyUpdate3" (formula "34") (term "1,0"))
                                 (rule "applyOnElementary" (formula "34") (term "1,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,0"))
                                 (rule "blockEmpty" (formula "34") (term "1"))
                                 (rule "lsContinue" (formula "34") (term "1"))
                                 (rule "sequentialToParallel2" (formula "34"))
                                 (rule "simplifyUpdate3" (formula "34") (term "1,0"))
                                 (rule "applyOnRigidFormula" (formula "34"))
                                 (rule "simplifyUpdate2" (formula "34") (term "1"))
                                 (rule "simplifyUpdate2" (formula "34") (term "0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1"))
                                 (rule "simplifyUpdate2" (formula "34") (term "1,1"))
                                 (rule "simplifyUpdate2" (formula "34") (term "0,1"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "1,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,1"))
                                 (rule "simplifyUpdate2" (formula "34") (term "1,1,1"))
                                 (rule "simplifyUpdate2" (formula "34") (term "0,1,1"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,1"))
                                 (rule "inEqSimp_ltRight" (formula "30"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "31"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "1,1,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,0"))
                                 (rule "boolean_not_equal_2" (formula "34") (term "0,0"))
                                 (rule "concrete_impl_2" (formula "34") (term "0"))
                                 (rule "concrete_and_1" (formula "34"))
                                 (rule "impRight" (formula "34"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "7") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "applyOnRigidFormula" (formula "35") (term "0"))
                                 (rule "simplifyUpdate2" (formula "35") (term "0,0"))
                                 (rule "simplifyUpdate2" (formula "35") (term "1,0"))
                                 (rule "applyOnRigidFormula" (formula "35") (term "1"))
                                 (rule "simplifyUpdate1" (formula "35") (term "1,1"))
                                 (rule "simplifyUpdate1" (formula "35") (term "0,1"))
                                 (rule "applyOnPV" (formula "35") (term "1,1"))
                                 (rule "applyOnRigidFormula" (formula "30"))
                                 (rule "simplifyUpdate1" (formula "30") (term "1"))
                                 (rule "applyOnPV" (formula "30") (term "0"))
                                 (rule "boolean_not_equal_2" (formula "30"))
                                 (rule "false_right" (formula "30"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "1,0,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "0,1"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,0,1"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,0,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "0,1,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "1,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,1,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,0,1"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,0,1"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,1,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,1,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,1,1,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "1,1,1,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,1,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,1,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,1,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,0,1,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,0,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "1,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,1,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "0,0,0,1,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "0,1,0,1"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,1,0,1"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,0,1,0,1"))
                                 (rule "applyOnPV" (formula "34") (term "1,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,1,0,1"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,0,0,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "0,0,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,1,0,0,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "0,0,1,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,1,0,0,1,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,0,1,0"))
                                 (rule "precOfInt" (formula "34") (term "1"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,1,0,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,1,0,0,0,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "0,0,1,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,0,1,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,1,0,0,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "0,0,0,1,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,1,0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,1,1,0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,1,0,0,1,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,1,0,0,1,0"))
                                 (rule "eqSymm" (formula "34") (term "1,0,0,1,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,0,0,0,0,1,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,0,0,0,1,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "0,1,0,0,0,1,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,0,1,0,1,1"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,1,0,1,0,1,1"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,0,1,1,0,1"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,1,0,1,1,0,1"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,1,1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,1,1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,1,0,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "0,1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,0,1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,0,1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,1,0,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "0,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "1,0,0,0,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,0,1,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "0,0,0,1,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,1,0,1,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,1,0,1,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,0,0,1,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,0,1,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,1,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,0,1,1,0,1"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,1,0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,1,1,0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,1,0,0,1,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,1,0,0,1,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,0,0,0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,1,0,0,0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,0,0,0,0,1,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,0,0,0,0,1,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,1,0,0,0,1,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "2,1,1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,2,1,1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,2,1,1,0,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,1,1,0,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,1,1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,1,1,0,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "2,0,1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,2,0,1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,2,0,1,0,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,0,1,0,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,0,1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,0,1,0,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "1,0,0,0,0,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,0,0,0,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,1,0,1,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,1,0,1,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,0,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,0,1,0,1,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,1,0,1,0,1,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,1,0,1,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,1,1,0,1,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,1,0,0,1,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,1,0,0,1,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,0,1,0,1,1"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,0,1,0,1,1"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,0,1,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0,1,1"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,1,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,1,0,1,1"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,0,1,1,0,1"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,0,1,1,0,1"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,0,1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,1,1,0,1"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,1,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,1,1,0,1"))
                                 (rule "dismissNonSelectedField" (formula "34") (term "1,0,0,0,0,1,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,1,1,0,0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,1,1,0,0,0,1,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,2,1,1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,2,1,1,0,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,2,0,1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,2,0,1,0,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,1,1,0,1,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,1,0,1,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,0,1,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,1,0,1,0,1,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,1,0,0,1,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,1,0,1,0,1,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,1,0,1,0,1,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,0,1,0,1,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,0,0,1,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,1,1"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,1,0,1,1"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,1,1,0,1,0,0,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "1,0,0,1,1,0,1,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,0,1,1,0,1,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "0,1,1,0,0,1,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,0,1,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,1,0,1"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,1,1,0,1"))
                                 (rule "dismissNonSelectedField" (formula "34") (term "1,0,0,0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet10001110_0" (formula "34") (term "1,0,0,0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10001110_2" (formula "34") (term "1,0,0,0,0,1,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "0,0,1,1,0,0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,0,0,1,1,0,0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,0,1,1,0,0,0,1,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,0,0,1,1,0,0,0,1,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "0,0,2,1,1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,0,0,2,1,1,0,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,0,0,2,1,1,0,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "0,0,2,0,1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,0,2,0,1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,0,0,2,0,1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,0,0,2,0,1,0,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "1,0,0,2,0,1,0,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,0,0,2,0,1,0,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,0,0,0,0,0,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "1,1,0,0,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,1,0,0,0,0,0,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,0,1,1,0,1,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,1,1,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "1,0,0,1,1,0,1,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,0,1,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,0,0,1,0,1,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,1,0,1,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,1,0,1,0,1,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "0,1,1,0,0,1,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,0,1,1,0,0,1,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "0,1,1,0,1,0,1,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,0,1,1,0,1,0,1,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,1,1,0,1,0,1,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,0,1,1,0,1,0,1,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "1,0,1,1,0,1,0,1,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,0,1,1,0,1,0,1,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,1,1,0,1,0,1,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,1,1,0,1,0,1,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "0,0,0,0,1,0,1,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,0,0,0,1,0,1,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,0,0,0,0,1,0,1,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,0,0,0,0,1,0,1,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "1,0,0,0,0,1,0,1,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,0,0,0,0,1,0,1,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,0,1,1,0,1,0,0,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "1,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,1,0,1,1,0,1,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,1,0,1,1,0,1,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "34") (term "0,0,1,1,0,0,0,1,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,0,0,2,1,1,0,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,0,0,2,1,1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,1,0,0,2,1,1,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,0,0,2,1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,1"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,1,0,0,1,1,0,1,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "34") (term "1,0,0,1,1,0,0,1,1,0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,0,1,1,0,0,1,1,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,1,1,0,0,1,1,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,0,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate2" (formula "34") (term "0,0,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,1,0,1,1,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,1,0,1,1,0,1,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,0,1,1,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,0,0,0,1,1,0,1,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "0,0,0,0,1,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,0,0,0,1,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,0,0,0,0,1,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,0,0,0,0,1,0,1,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "1,0,0,0,0,1,0,1,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,0,0,0,0,1,0,1,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "0,1,1,0,1,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,1,1,0,1,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,0,1,1,0,1,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,0,1,1,0,1,0,1,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "1,0,1,1,0,1,0,1,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,0,1,1,0,1,0,1,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,1,1,0,1,0,1,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,1,1,0,1,0,1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,1,0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,1,0,1,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "0,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,0,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,1"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,1,1"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,1,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "0,0,1,0,1,1,0,1,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,0,1,0,1,1,0,1,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,0,0,1,0,1,1,0,1,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,0,0,1,0,1,1,0,1,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "1,0,0,1,0,1,1,0,1,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,0,0,1,0,1,1,0,1,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "34") (term "0,0,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,1,0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,1,0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,1,0,1,0,1,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,1,1,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,1,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,0,1,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,1,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,0,1,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,0,1,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "1,0,1,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,0,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,0,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,1,0,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "0,0,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,0,0,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,0,0,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,0,0,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "34") (term "1,0,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,1,0,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "0,0,1,0,1,1,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,0,1,0,1,1,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,0,0,1,0,1,1,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,0,0,1,0,1,1,0,1,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "1,0,0,1,0,1,1,0,1,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,0,0,1,0,1,1,0,1,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,0,0,0,1,1,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,0,0,0,1,1,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,1,1"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,1,1"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,1,1"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,0,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,0,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,1,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,1,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "34") (term "0,1"))
                                 (rule "times_zero_2" (formula "34") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                 (rule "inEqSimp_gtToGeq" (formula "34") (term "1,0,1,0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,1,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,1,0,1,0,1,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,1,1,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,1,1,1,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,1,1,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,1,1,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,1,0,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,1,1,0,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,1,0,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,1,1,0,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,1,0,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,1,0,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "0,1,0,0,0,1,1,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,1,0,0,0,1,1,0,1,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "0,1,0,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,1,0,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,0,1,0,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,0,1,0,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "1,0,1,0,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,0,1,0,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,1,0,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,1,0,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "0,0,1,0,0,0,1,1,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "1,0,0,1,0,0,0,1,1,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "0,0,0,1,0,0,0,1,1,0,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "34") (term "2,0,0,1,0,0,0,1,1,0,1,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "1,0,0,1,0,0,0,1,1,0,1,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,0,0,1,0,0,0,1,1,0,1,0,0,0,0"))
                                 (rule "applyOnRigidTerm" (formula "34") (term "1,0,1,0,0,0,1,1,0,1,0,0,0,0"))
                                 (rule "applyOnPV" (formula "34") (term "0,1,0,1,0,0,0,1,1,0,1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "mod_axiom" (formula "32") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                                 (rule "div_literals" (formula "32") (term "0,1,1,1"))
                                 (rule "times_zero_2" (formula "32") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "32") (term "1,1"))
                                 (rule "add_literals" (formula "32") (term "1"))
                                 (rule "close" (formula "32") (ifseqformula "27"))
                              )
                           )
                           (branch "Null Reference (oldTable = null)"
                              (rule "false_right" (formula "34"))
                              (rule "simplifyUpdate2" (formula "1"))
                              (rule "applyOnRigidFormula" (formula "1"))
                              (rule "simplifyUpdate1" (formula "1") (term "1"))
                              (rule "applyOnPV" (formula "1") (term "0"))
                              (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
                              (rule "concrete_or_1" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_geqRight" (formula "30"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_ltRight" (formula "30"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0,1,0"))
                              (rule "inEqSimp_gtToGeq" (formula "7") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                              (rule "mod_axiom" (formula "31") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1"))
                              (rule "div_literals" (formula "31") (term "0,1,1,1"))
                              (rule "mul_literals" (formula "31") (term "1,1,1"))
                              (rule "add_zero_right" (formula "31") (term "1,1"))
                              (rule "add_literals" (formula "31") (term "1"))
                              (rule "close" (formula "31") (ifseqformula "26"))
                           )
                           (branch "Index Out of Bounds (oldTable != null, but j Out of Bounds!)"
                              (rule "false_right" (formula "34"))
                              (rule "simplifyUpdate2" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "simplifyUpdate2" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "applyOnRigidFormula" (formula "1"))
                              (rule "simplifyUpdate2" (formula "1") (term "1"))
                              (rule "applyOnRigidFormula" (formula "28"))
                              (rule "applyOnPV" (formula "28") (term "0"))
                              (rule "simplifyUpdate1" (formula "28") (term "1"))
                              (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "28"))
                              (rule "concrete_or_2" (formula "15"))
                              (rule "applyOnRigidFormula" (formula "1") (term "0"))
                              (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                              (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                              (rule "applyOnPV" (formula "1") (term "1,0"))
                              (rule "applyOnRigidFormula" (formula "1") (term "1"))
                              (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                              (rule "applyOnPV" (formula "1") (term "0,1"))
                              (rule "inEqSimp_ltRight" (formula "31"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "32"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "applyOnRigidTerm" (formula "3") (term "0,0"))
                              (rule "applyOnPV" (formula "3") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_gtToGeq" (formula "7") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "3") (term "1"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                              (rule "add_literals" (formula "3") (term "0,0,1"))
                              (rule "mod_axiom" (formula "33") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
                              (rule "div_literals" (formula "33") (term "0,1,1,1"))
                              (rule "times_zero_2" (formula "33") (term "1,1,1"))
                              (rule "add_zero_right" (formula "33") (term "1,1"))
                              (rule "add_literals" (formula "33") (term "1"))
                              (rule "close" (formula "33") (ifseqformula "27"))
                           )
                        )
                        (branch "if x_7 false"
                           (rule "false_to_not_true" (formula "1") (term "1"))
                           (rule "simplifyUpdate2" (formula "33"))
                           (rule "simplifyUpdate2" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "applyOnRigidFormula" (formula "26"))
                           (rule "simplifyUpdate1" (formula "26") (term "1"))
                           (rule "applyOnPV" (formula "26") (term "0"))
                           (rule "ifthenelse_concrete3" (formula "26"))
                           (rule "boolean_not_equal_2" (formula "26") (term "1"))
                           (rule "concrete_or_4" (formula "26"))
                           (rule "blockBreak" (formula "33") (term "1"))
                           (rule "lsBreak" (formula "33") (term "1"))
                           (rule "assignment" (formula "33") (term "1"))
                           (rule "sequentialToParallel2" (formula "33"))
                           (rule "simplifyUpdate3" (formula "33") (term "1,0"))
                           (rule "assignment_write_attribute_this" (formula "33"))
                           (rule "sequentialToParallel2" (formula "33"))
                           (rule "simplifyUpdate2" (formula "33"))
                           (rule "simplifyUpdate3" (formula "33") (term "1,0"))
                           (rule "applyOnElementary" (formula "33") (term "1,0"))
                           (rule "applyOnRigidTerm" (formula "33") (term "0,1,0"))
                           (rule "simplifyUpdate1" (formula "33") (term "2,0,1,0"))
                           (rule "simplifyUpdate1" (formula "33") (term "3,0,1,0"))
                           (rule "simplifyUpdate1" (formula "33") (term "1,0,1,0"))
                           (rule "simplifyUpdate1" (formula "33") (term "0,0,1,0"))
                           (rule "applyOnPV" (formula "33") (term "3,0,1,0"))
                           (rule "applyOnPV" (formula "33") (term "0,0,1,0"))
                           (rule "methodCallEmpty" (formula "33") (term "1"))
                           (rule "tryEmpty" (formula "33") (term "1"))
                           (rule "emptyModality" (formula "33") (term "1"))
                           (rule "applyOnRigidFormula" (formula "33"))
                           (rule "simplifyUpdate2" (formula "33") (term "0"))
                           (rule "simplifyUpdate2" (formula "33") (term "1"))
                           (rule "applyOnRigidFormula" (formula "33") (term "0"))
                           (rule "simplifyUpdate2" (formula "33") (term "0,0"))
                           (rule "simplifyUpdate2" (formula "33") (term "1,0"))
                           (rule "applyOnRigidFormula" (formula "33") (term "1"))
                           (rule "simplifyUpdate2" (formula "33") (term "1,1"))
                           (rule "simplifyUpdate2" (formula "33") (term "0,1"))
                           (rule "applyOnRigidFormula" (formula "33") (term "0,0"))
                           (rule "simplifyUpdate1" (formula "33") (term "1,0,0"))
                           (rule "applyOnPV" (formula "33") (term "0,0,0"))
                           (rule "boolean_equal" (formula "33") (term "0,0"))
                           (rule "concrete_impl_1" (formula "33") (term "0"))
                           (rule "applyOnRigidFormula" (formula "33") (term "1,1"))
                           (rule "simplifyUpdate2" (formula "33") (term "1,1,1"))
                           (rule "simplifyUpdate2" (formula "33") (term "0,1,1"))
                           (rule "applyOnRigidFormula" (formula "33") (term "0,1"))
                           (rule "inEqSimp_ltRight" (formula "29"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_ltRight" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "30"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "applyOnRigidFormula" (formula "33") (term "0"))
                           (rule "simplifyUpdate2" (formula "33") (term "0,0"))
                           (rule "simplifyUpdate2" (formula "33") (term "1,0"))
                           (rule "applyOnRigidFormula" (formula "33") (term "1,1,1"))
                           (rule "simplifyUpdate1" (formula "33") (term "1,1,1,1"))
                           (rule "simplifyUpdate1" (formula "33") (term "0,1,1,1"))
                           (rule "applyOnPV" (formula "33") (term "1,1,1,1"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "applyOnRigidFormula" (formula "33") (term "0,1,1"))
                           (rule "simplifyUpdate2" (formula "33") (term "0,0,1,1"))
                           (rule "simplifyUpdate2" (formula "33") (term "1,0,1,1"))
                           (rule "applyOnRigidFormula" (formula "33") (term "0,0,1"))
                           (rule "applyOnPV" (formula "33") (term "0,0,0,1"))
                           (rule "simplifyUpdate1" (formula "33") (term "1,0,0,1"))
                           (rule "boolean_equal" (formula "33") (term "0,0,1"))
                           (rule "concrete_not_1" (formula "33") (term "0,1"))
                           (rule "concrete_impl_2" (formula "33") (term "1"))
                           (rule "concrete_and_3" (formula "33"))
                           (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_gtToGeq" (formula "6") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "7") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "7") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "applyOnRigidFormula" (formula "33") (term "0"))
                           (rule "simplifyUpdate2" (formula "33") (term "0,0"))
                           (rule "applyOnRigidFormula" (formula "33") (term "1"))
                           (rule "applyOnRigidFormula" (formula "33") (term "1,0"))
                           (rule "simplifyUpdate2" (formula "33") (term "0,1,0"))
                           (rule "simplifyUpdate2" (formula "33") (term "1,1,0"))
                           (rule "applyOnRigidFormula" (formula "33") (term "0,0"))
                           (rule "applyOnRigidFormula" (formula "33") (term "0,1"))
                           (rule "applyOnRigidFormula" (formula "33") (term "0,1,0"))
                           (rule "applyOnPV" (formula "33") (term "0,0,1,0"))
                           (rule "simplifyUpdate1" (formula "33") (term "1,0,1,0"))
                           (rule "applyOnRigidFormula" (formula "33") (term "1,1,0"))
                           (rule "simplifyUpdate1" (formula "33") (term "1,1,1,0"))
                           (rule "applyOnRigidFormula" (formula "33") (term "0,0,0"))
                           (rule "simplifyUpdate1" (formula "33") (term "1,0,0,0"))
                           (rule "applyOnPV" (formula "33") (term "0,0,0,0"))
                           (rule "eqClose" (formula "33") (term "0,0,0"))
                           (rule "concrete_not_1" (formula "33") (term "0,0"))
                           (rule "concrete_and_2" (formula "33") (term "0"))
                           (rule "concrete_and_2" (formula "33"))
                           (rule "false_right" (formula "33"))
                           (rule "mod_axiom" (formula "31") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1"))
                           (rule "div_literals" (formula "31") (term "0,1,1,1"))
                           (rule "times_zero_2" (formula "31") (term "1,1,1"))
                           (rule "add_zero_right" (formula "31") (term "1,1"))
                           (rule "add_literals" (formula "31") (term "1"))
                           (rule "close" (formula "31") (ifseqformula "26"))
                        )
                     )
                  )
                  (branch "Null Reference (v = null)"
                     (rule "false_right" (formula "26"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "applyOnPV" (formula "1") (term "0"))
                     (rule "simplifyUpdate1" (formula "1") (term "1"))
                     (rule "close" (formula "25") (ifseqformula "1"))
                  )
               )
               (branch "Case 2"
                  (rule "equal_literals" (formula "25") (term "0,1"))
                  (rule "concrete_not_2" (formula "25") (term "1"))
                  (rule "closeTrue" (formula "25"))
               )
            )
            (branch "Null Reference (newObject = null)"
               (rule "false_right" (formula "26"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "applyOnPV" (formula "1") (term "0"))
               (rule "simplifyUpdate1" (formula "1") (term "1"))
               (rule "close" (formula "21") (ifseqformula "1"))
            )
         )
      )
   )
)
(branch "Null Reference (oldTable = null)"
   (rule "false_right" (formula "12"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "applyOnRigidFormula" (formula "1"))
   (rule "simplifyUpdate1" (formula "1") (term "1"))
   (rule "applyOnPV" (formula "1") (term "0"))
   (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "1"))
   (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "10") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "4"))
   (rule "insert_constant_value" (formula "10") (term "1,1,0,0,0,0,0,0,0"))
   (rule "insert_constant_value" (formula "10") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "insert_constant_value" (formula "10") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "insert_constant_value" (formula "10") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "eqClose" (formula "10") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_3" (formula "10") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "insert_constant_value" (formula "10") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "eqClose" (formula "10") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_3" (formula "10") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "insert_constant_value" (formula "10") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "eqClose" (formula "10") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_3" (formula "10") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "expand_inInt" (formula "10") (term "1,1"))
   (rule "expand_inInt" (formula "10") (term "0,1"))
   (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "replace_int_MAX" (formula "10") (term "1,0,1,1"))
   (rule "replace_int_MIN" (formula "10") (term "0,1,1,1"))
   (rule "replace_int_MIN" (formula "10") (term "0,1,0,1"))
   (rule "replace_int_MAX" (formula "10") (term "1,0,0,1"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "notLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "notLeft" (formula "10"))
   (rule "close" (formula "25") (ifseqformula "1"))
)
)
}
