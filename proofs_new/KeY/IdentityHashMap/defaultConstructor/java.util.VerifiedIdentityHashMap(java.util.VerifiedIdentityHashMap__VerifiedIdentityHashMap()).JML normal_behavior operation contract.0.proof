\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Sep 22 22:34:49 CEST 2021
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , javaLoopTreatment-javaLoopTreatment\\:efficient
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=6000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[Strategy]Timeout=-1
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\bootclasspath "../../../../jre";

\javaSource "../../../../src";

\include "../../../../functions.key";

\proofObligation "#Proof Obligation Settings
#Wed Sep 22 22:34:49 CEST 2021
contract=java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap\\:\\:VerifiedIdentityHashMap()].JML normal_behavior operation contract.0
name=java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap\\:\\:VerifiedIdentityHashMap()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "martindeboer" ) (keyVersion "a6034b00a3"))
(keyLog "1" (keyUser "martindeboer" ) (keyVersion "a6034b00a3"))
(keyLog "2" (keyUser "martindeboer" ) (keyVersion "a6034b00a3"))
(keyLog "3" (keyUser "martindeboer" ) (keyVersion "a6034b00a3"))
(keyLog "4" (keyUser "martindeboer" ) (keyVersion "a6034b00a3"))

(autoModeTime "321575")

(branch "dummy ID"
(rule "insert_constant_value" (formula "1") (term "0,0,1,0") (newnames "self,exc,heapAtPre,o,f"))
(rule "eqClose" (formula "1") (term "0,1,0"))
(rule "concrete_and_1" (formula "1") (term "1,0"))
(rule "elementOfAllLocs" (formula "1") (term "0,0,0,0,1,0,1,1"))
(rule "concrete_or_1" (formula "1") (term "0,0,0,1,0,1,1"))
(rule "concrete_or_1" (formula "1") (term "0,0,1,0,1,1"))
(rule "insert_constant_value" (formula "1") (term "0,0,1,1,0,0,0,0,0,0,1,1"))
(rule "insert_constant_value" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1"))
(rule "mul_literals" (formula "1") (term "0,1,1,0,0,0,0,0,0,1,1"))
(rule "mul_literals" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,1,1"))
(rule "simplifyUpdate2" (formula "1") (term "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1,0,0,0,0"))
(rule "assignment" (formula "4"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "self_1"))
(rule "all_unused" (formula "4") (term "1,0,1"))
(rule "all_unused" (formula "4") (term "1,0,1"))
(rule "concrete_and_3" (formula "4") (term "0,1"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "4") (term "1") (inst "#v0=v"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "v"))
(rule "methodBodyExpand" (formula "4") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
(rule "simplifyUpdate2" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "4") (term "1") (inst "#v0=v_1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "v_1"))
(rule "allocateInstance" (formula "4"))
(rule "false_to_not_true" (formula "1") (term "1,1,0,1"))
(rule "simplifyUpdate2" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "replace_known_left" (formula "1") (term "0") (ifseqformula "3"))
(rule "concrete_impl_1" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "sequentialToParallel2" (formula "7"))
(rule "simplifyUpdate3" (formula "7") (term "1,0"))
(rule "blockEmpty" (formula "7") (term "1"))
(rule "assignment" (formula "7") (term "1"))
(rule "sequentialToParallel2" (formula "7"))
(rule "simplifyUpdate3" (formula "7") (term "1,0"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
(rule "simplifyUpdate2" (formula "7") (term "1"))
(rule "assignment_write_attribute_this" (formula "7"))
(rule "sequentialToParallel2" (formula "7"))
(rule "simplifyUpdate2" (formula "7"))
(rule "simplifyUpdate3" (formula "7") (term "1,0"))
(rule "applyOnElementary" (formula "7") (term "1,0"))
(rule "applyOnRigidTerm" (formula "7") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "2,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "0,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "3,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "1,0,1,0"))
(rule "applyOnPV" (formula "7") (term "0,0,1,0"))
(rule "applyOnPV" (formula "7") (term "1,0,1,0"))
(rule "methodCallWithinClass" (formula "7") (term "1"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
(rule "simplifyUpdate2" (formula "7") (term "1"))
(rule "methodCallSuper" (formula "7") (term "1"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
(rule "simplifyUpdate2" (formula "7") (term "1"))
(rule "methodCallSuper" (formula "7") (term "1"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
(rule "simplifyUpdate2" (formula "7") (term "1"))
(rule "methodCallEmpty" (formula "7") (term "1"))
(rule "blockEmpty" (formula "7") (term "1"))
(rule "assignment_write_attribute_this" (formula "7"))
(rule "sequentialToParallel2" (formula "7"))
(rule "simplifyUpdate2" (formula "7"))
(rule "simplifyUpdate3" (formula "7") (term "1,0"))
(rule "applyOnElementary" (formula "7") (term "1,0"))
(rule "applyOnRigidTerm" (formula "7") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "2,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "0,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "3,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "1,0,1,0"))
(rule "applyOnPV" (formula "7") (term "0,0,1,0"))
(rule "applyOnPV" (formula "7") (term "1,0,1,0"))
(rule "assignment_write_attribute_this" (formula "7"))
(rule "sequentialToParallel2" (formula "7"))
(rule "simplifyUpdate2" (formula "7"))
(rule "simplifyUpdate3" (formula "7") (term "1,0"))
(rule "applyOnElementary" (formula "7") (term "1,0"))
(rule "applyOnRigidTerm" (formula "7") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "2,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "0,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "3,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "1,0,1,0"))
(rule "applyOnPV" (formula "7") (term "0,0,1,0"))
(rule "applyOnPV" (formula "7") (term "1,0,1,0"))
(rule "methodCallEmpty" (formula "7") (term "1"))
(rule "blockEmpty" (formula "7") (term "1"))
(rule "assignment_write_attribute_this" (formula "7"))
(rule "sequentialToParallel2" (formula "7"))
(rule "simplifyUpdate2" (formula "7"))
(rule "simplifyUpdate3" (formula "7") (term "1,0"))
(rule "applyOnElementary" (formula "7") (term "1,0"))
(rule "applyOnRigidTerm" (formula "7") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "2,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "3,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "1,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "0,0,1,0"))
(rule "applyOnPV" (formula "7") (term "1,0,1,0"))
(rule "applyOnPV" (formula "7") (term "0,0,1,0"))
(rule "assignment_write_attribute_this" (formula "7"))
(rule "sequentialToParallel2" (formula "7"))
(rule "simplifyUpdate2" (formula "7"))
(rule "simplifyUpdate3" (formula "7") (term "1,0"))
(rule "applyOnElementary" (formula "7") (term "1,0"))
(rule "applyOnRigidTerm" (formula "7") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "1,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "3,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "2,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "0,0,1,0"))
(rule "applyOnPV" (formula "7") (term "1,0,1,0"))
(rule "applyOnPV" (formula "7") (term "0,0,1,0"))
(rule "assignment_write_attribute_this" (formula "7"))
(rule "sequentialToParallel2" (formula "7"))
(rule "simplifyUpdate2" (formula "7"))
(rule "simplifyUpdate3" (formula "7") (term "1,0"))
(rule "applyOnElementary" (formula "7") (term "1,0"))
(rule "applyOnRigidTerm" (formula "7") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "1,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "3,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "2,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "0,0,1,0"))
(rule "applyOnPV" (formula "7") (term "1,0,1,0"))
(rule "applyOnPV" (formula "7") (term "0,0,1,0"))
(rule "assignment_write_attribute_this" (formula "7"))
(rule "sequentialToParallel2" (formula "7"))
(rule "simplifyUpdate2" (formula "7"))
(rule "simplifyUpdate3" (formula "7") (term "1,0"))
(rule "applyOnElementary" (formula "7") (term "1,0"))
(rule "applyOnRigidTerm" (formula "7") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "1,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "3,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "2,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "0,0,1,0"))
(rule "applyOnPV" (formula "7") (term "1,0,1,0"))
(rule "applyOnPV" (formula "7") (term "0,0,1,0"))
(rule "assignment_write_attribute_this" (formula "7"))
(rule "sequentialToParallel2" (formula "7"))
(rule "simplifyUpdate2" (formula "7"))
(rule "simplifyUpdate3" (formula "7") (term "1,0"))
(rule "applyOnElementary" (formula "7") (term "1,0"))
(rule "applyOnRigidTerm" (formula "7") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "0,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "1,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "3,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "2,0,1,0"))
(rule "applyOnPV" (formula "7") (term "0,0,1,0"))
(rule "applyOnPV" (formula "7") (term "1,0,1,0"))
(rule "methodCallEmpty" (formula "7") (term "1"))
(rule "blockEmpty" (formula "7") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "7") (term "1"))
(rule "methodCallReturn" (formula "7") (term "1"))
(rule "assignment" (formula "7") (term "1"))
(rule "sequentialToParallel2" (formula "7"))
(rule "simplifyUpdate2" (formula "7"))
(rule "simplifyUpdate3" (formula "7") (term "1,0"))
(rule "applyOnElementary" (formula "7") (term "1,0"))
(rule "applyOnPV" (formula "7") (term "0,1,0"))
(rule "methodCallEmpty" (formula "7") (term "1"))
(rule "blockEmpty" (formula "7") (term "1"))
(rule "assignment" (formula "7") (term "1"))
(rule "sequentialToParallel2" (formula "7"))
(rule "simplifyUpdate2" (formula "7"))
(rule "simplifyUpdate3" (formula "7") (term "1,0"))
(rule "applyOnElementary" (formula "7") (term "1,0"))
(rule "applyOnPV" (formula "7") (term "0,1,0"))
(rule "blockEmpty" (formula "7") (term "1"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
(rule "simplifyUpdate2" (formula "7") (term "1"))
(rule "methodCallSuper" (formula "7") (term "1"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
(rule "simplifyUpdate2" (formula "7") (term "1"))
(rule "methodCallSuper" (formula "7") (term "1"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
(rule "simplifyUpdate2" (formula "7") (term "1"))
(rule "methodCallEmpty" (formula "7") (term "1"))
(rule "methodCallEmpty" (formula "7") (term "1"))
(rule "blockEmpty" (formula "7") (term "1"))
(rule "assignment_write_attribute_this" (formula "7"))
(rule "sequentialToParallel2" (formula "7"))
(rule "simplifyUpdate2" (formula "7"))
(rule "simplifyUpdate3" (formula "7") (term "1,0"))
(rule "applyOnElementary" (formula "7") (term "1,0"))
(rule "applyOnRigidTerm" (formula "7") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "3,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "1,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "2,0,1,0"))
(rule "simplifyUpdate1" (formula "7") (term "0,0,1,0"))
(rule "applyOnPV" (formula "7") (term "1,0,1,0"))
(rule "applyOnPV" (formula "7") (term "0,0,1,0"))
(rule "dropEffectlessStores" (formula "7") (term "0,1,0"))
 (builtin "Use Operation Contract" (formula "7") (newnames "heapBefore_init,exc_0,heapAfter_init,anon_heap_init") (contract "java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap::init(int)].JML normal_behavior operation contract.0"))
(branch "Post (init)"
   (rule "insert_constant_value" (formula "6") (term "1,1,1,0,1,1,1,1,1"))
   (rule "insert_constant_value" (formula "6") (term "1,0,1,1,0,0,1,1,1,1,1"))
   (rule "mul_literals" (formula "6") (term "1,1,0,1,1,1,1,1"))
   (rule "mul_literals" (formula "6") (term "0,1,1,0,0,1,1,1,1,1"))
   (rule "simplifyUpdate2" (formula "6"))
   (rule "simplifyUpdate2" (formula "6") (term "1"))
   (rule "andLeft" (formula "6"))
   (rule "sequentialToParallel2" (formula "10"))
   (rule "simplifyUpdate2" (formula "10"))
   (rule "simplifyUpdate3" (formula "10") (term "1,0"))
   (rule "sequentialToParallel2" (formula "7"))
   (rule "simplifyUpdate2" (formula "7"))
   (rule "simplifyUpdate3" (formula "7") (term "1,0"))
   (rule "andLeft" (formula "7"))
   (rule "simplifyUpdate2" (formula "7"))
   (rule "andLeft" (formula "8"))
   (rule "simplifyUpdate2" (formula "9"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "8"))
   (rule "applyOnRigidFormula" (formula "6"))
   (rule "simplifyUpdate1" (formula "6") (term "1"))
   (rule "applyOnRigidFormula" (formula "11"))
   (rule "simplifyUpdate1" (formula "11") (term "1"))
   (rule "applyOnRigidFormula" (formula "10"))
   (rule "simplifyUpdate1" (formula "10") (term "1"))
   (rule "applyOnRigidFormula" (formula "9"))
   (rule "applyOnRigidFormula" (formula "8"))
   (rule "simplifyUpdate1" (formula "8") (term "1"))
   (rule "applyOnRigidFormula" (formula "12"))
   (rule "simplifyUpdate1" (formula "12") (term "1"))
   (rule "applyOnRigidTerm" (formula "6") (term "0"))
   (rule "simplifyUpdate1" (formula "6") (term "2,0"))
   (rule "simplifyUpdate1" (formula "6") (term "1,0"))
   (rule "simplifyUpdate1" (formula "6") (term "0,0"))
   (rule "applyOnPV" (formula "6") (term "0,0"))
   (rule "applyOnRigidTerm" (formula "11") (term "0"))
   (rule "applyOnRigidTerm" (formula "10") (term "0"))
   (rule "simplifyUpdate1" (formula "10") (term "1,0"))
   (rule "simplifyUpdate1" (formula "10") (term "2,0"))
   (rule "simplifyUpdate1" (formula "10") (term "0,0"))
   (rule "applyOnPV" (formula "10") (term "1,0"))
   (rule "applyOnPV" (formula "10") (term "0,0"))
   (rule "applyOnRigidFormula" (formula "9") (term "0"))
   (rule "applyOnRigidTerm" (formula "8") (term "0"))
   (rule "applyOnRigidTerm" (formula "12") (term "0"))
   (rule "simplifyUpdate1" (formula "12") (term "2,0"))
   (rule "simplifyUpdate1" (formula "12") (term "0,0"))
   (rule "simplifyUpdate1" (formula "12") (term "1,0"))
   (rule "applyOnPV" (formula "12") (term "0,0"))
   (rule "applyOnPV" (formula "12") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "6") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "11") (term "0,0"))
   (rule "simplifyUpdate1" (formula "11") (term "1,0,0"))
   (rule "simplifyUpdate1" (formula "11") (term "0,0,0"))
   (rule "simplifyUpdate1" (formula "11") (term "2,0,0"))
   (rule "applyOnPV" (formula "11") (term "1,0,0"))
   (rule "applyOnPV" (formula "11") (term "0,0,0"))
   (rule "applyOnRigidFormula" (formula "9") (term "0,0"))
   (rule "simplifyUpdate2" (formula "9") (term "0,0,0"))
   (rule "applyOnRigidFormula" (formula "9") (term "1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "1,1,0"))
   (rule "applyOnRigidTerm" (formula "8") (term "0,0"))
   (rule "simplifyUpdate1" (formula "8") (term "1,0,0"))
   (rule "simplifyUpdate1" (formula "8") (term "2,0,0"))
   (rule "simplifyUpdate1" (formula "8") (term "0,0,0"))
   (rule "applyOnPV" (formula "8") (term "1,0,0"))
   (rule "applyOnPV" (formula "8") (term "0,0,0"))
   (rule "applyOnRigidTerm" (formula "6") (term "0,1,0"))
   (rule "applyOnPV" (formula "6") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "6") (term "1,0,1,0"))
   (rule "applyOnRigidTerm" (formula "6") (term "1,1,0"))
   (rule "applyOnPV" (formula "6") (term "0,1,1,0"))
   (rule "simplifyUpdate1" (formula "6") (term "1,1,1,0"))
   (rule "applyOnRigidFormula" (formula "9") (term "1,0,0"))
   (rule "simplifyUpdate1" (formula "9") (term "0,1,0,0"))
   (rule "applyOnRigidTerm" (formula "9") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "2,0,1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "0,0,1,0"))
   (rule "applyOnPV" (formula "9") (term "0,0,1,0"))
   (rule "applyOnRigidTerm" (formula "9") (term "1,1,0,0"))
   (rule "applyOnRigidTerm" (formula "9") (term "1,0,1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "1,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "2,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "0,1,0,1,0"))
   (rule "applyOnPV" (formula "9") (term "1,1,0,1,0"))
   (rule "applyOnPV" (formula "9") (term "0,1,0,1,0"))
   (rule "applyOnRigidTerm" (formula "9") (term "0,1,1,0,0"))
   (rule "simplifyUpdate1" (formula "9") (term "0,0,1,1,0,0"))
   (rule "simplifyUpdate1" (formula "9") (term "1,0,1,1,0,0"))
   (rule "simplifyUpdate1" (formula "9") (term "2,0,1,1,0,0"))
   (rule "applyOnPV" (formula "9") (term "0,0,1,1,0,0"))
   (rule "applyOnPV" (formula "9") (term "1,0,1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
   (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=java_util_VerifiedIdentityHashMap_threshold_0"))
   (rule "simplifySelectOfAnonEQ" (formula "10") (ifseqformula "6"))
   (rule "elementOfFreshLocs" (formula "10") (term "1,0,0"))
   (rule "equalUnique" (formula "10") (term "0,1,0,0,0"))
   (rule "concrete_not_2" (formula "10") (term "1,0,0,0"))
   (rule "concrete_and_3" (formula "10") (term "0,0,0"))
   (rule "replace_known_right" (formula "10") (term "0,0,1,0,0") (ifseqformula "15"))
   (rule "concrete_not_2" (formula "10") (term "0,1,0,0"))
   (rule "concrete_and_1" (formula "10") (term "1,0,0"))
   (rule "dismissNonSelectedField" (formula "10") (term "2,0"))
   (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0"))
   (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "11"))
   (rule "elementOfUnion" (formula "10") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "10") (term "1,0,0,0"))
   (rule "eqClose" (formula "10") (term "0,1,0,0,0"))
   (rule "concrete_and_1" (formula "10") (term "1,0,0,0"))
   (rule "equalUnique" (formula "10") (term "1,0,0,0"))
   (rule "concrete_or_3" (formula "10") (term "0,0,0"))
   (rule "concrete_or_1" (formula "10") (term "0,0"))
   (rule "ifthenelse_true" (formula "10") (term "0"))
   (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=java_util_VerifiedIdentityHashMap_table_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "7"))
   (rule "replaceKnownSelect_taclet0_1" (formula "13") (term "0,0"))
   (rule "replaceKnownSelect_taclet0_1" (formula "9") (term "0,0"))
   (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
   (rule "replaceKnownSelect_taclet0_1" (formula "10") (term "1,0,1,0"))
   (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
   (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
   (rule "concrete_and_3" (formula "1") (term "0,0,0"))
   (rule "replaceKnownSelect_taclet0_1" (formula "10") (term "0,1,1,0,0"))
   (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "16"))
   (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
   (rule "concrete_and_1" (formula "1") (term "1,0,0"))
   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
   (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
   (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
   (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
   (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
   (rule "applyEqRigid" (formula "10") (term "1,1,0,0") (ifseqformula "13"))
   (rule "elementOfUnion" (formula "1") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
   (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
   (rule "concrete_and_3" (formula "1") (term "0,0,0,0"))
   (rule "eqClose" (formula "1") (term "0,0,0,0"))
   (rule "concrete_or_1" (formula "1") (term "0,0,0"))
   (rule "concrete_or_1" (formula "1") (term "0,0"))
   (rule "ifthenelse_true" (formula "1") (term "0"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "13") (term "0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "8") (term "0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "12") (term "0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "9") (term "1,0,1,0"))
   (rule "methodCallEmpty" (formula "16") (term "1"))
   (rule "blockEmpty" (formula "16") (term "1"))
   (rule "assignment_write_attribute" (formula "16"))
   (branch "Normal Execution (self_1 != null)"
      (rule "sequentialToParallel2" (formula "16"))
      (rule "simplifyUpdate2" (formula "16"))
      (rule "simplifyUpdate3" (formula "16") (term "1,0"))
      (rule "applyOnElementary" (formula "16") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "3,0,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "16") (term "1,0,1,0"))
      (rule "applyOnPV" (formula "16") (term "0,0,1,0"))
      (rule "commute_and" (formula "9") (term "0,0"))
      (rule "tryEmpty" (formula "16") (term "1"))
      (rule "emptyModality" (formula "16") (term "1"))
      (rule "applyOnRigidFormula" (formula "16") (userinteraction))
      (rule "simplifyUpdate2" (formula "16") (term "0"))
      (rule "applyOnRigidFormula" (formula "16") (term "0"))
      (rule "applyOnRigidFormula" (formula "16") (term "1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,1,0"))
      (rule "applyOnPV" (formula "16") (term "0,1,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "1,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "0,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "0,1,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "1,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,1,0,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "0,0,1,0,0"))
      (rule "simplifyUpdate2" (formula "16") (term "0,0,0,1,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "1,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,1,0,1,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,1,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,1,0,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "0,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "1,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,1,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "1,0,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,1,0,0,1,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,1,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,1,0,1,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "1,0,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "0,0,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,1,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,1,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "1,1,0,0,1,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "1,0,1,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,1,0,1,0,1,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "1,1,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,1,1,0,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,1,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,1,0,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "1,0,0,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "0,0,0,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,1,1,0,0,1,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,1,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,1,0,0,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "1,0,0,0,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "0,0,0,0,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,1,0,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,1,0,0,0,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "1,0,0,0,0,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,1,0,0,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,1,0,0,0,0,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "1,0,0,0,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,1,0,0,0,0,0,0,0,0,0"))
      (rule "simplifyUpdate2" (formula "16") (term "1"))
      (rule "applyOnPV" (formula "16") (term "1,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,0,1,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,1,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "0,0,1,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "1,0,1,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,1,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,0,1,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,0,1,0,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "1,0,1,0,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "0,0,1,0,1,0,0"))
      (rule "applyOnPV" (formula "16") (term "0,0,1,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,1,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,1,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,0,1,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,1,0,1,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,1,0,1,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,1,1,0,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,0,1,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,0,1,1,0,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,1,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,1,1,0,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,1,0,0,0,0,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "1,0,1,0,0,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "0,0,1,0,0,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "0,1,0,1,0,1,0,0"))
      (rule "applyOnPV" (formula "16") (term "1,1,0,1,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,0,1,0,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,1,0,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,1,0,0,0,0,0,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "1,0,1,1,0,0,1,0,0"))
      (rule "applyOnPV" (formula "16") (term "0,0,1,0,0,0,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "0,0,1,1,0,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,1,0,0,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,0,1,0,0,0,0,0,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "1,0,1,0,0,0,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "0,0,1,0,0,0,0,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "1,0,1,0,0,0,0,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "1,0,1,0,0,0,0,0,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "0,0,1,0,0,0,0,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,1,0,0,0,0,0,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "1"))
      (rule "simplifyUpdate1" (formula "16") (term "1,1"))
      (rule "applyOnPV" (formula "16") (term "0,1"))
      (rule "applyOnRigidFormula" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,0,1,0,0,0,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,0,1,0,0,0,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,0,0,1,0,0,0,0,0,0,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "1,0,0,1,0,0,0,0,0,0,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "0,0,0,1,0,0,0,0,0,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "andRight" (formula "16"))
      (branch "Case 1"
         (rule "andRight" (formula "16"))
         (branch "Case 1"
            (rule "andRight" (formula "16"))
            (branch "Case 1"
               (rule "andRight" (formula "16"))
               (branch "Case 1"
                  (rule "andRight" (formula "16"))
                  (branch "Case 1"
                     (rule "andRight" (formula "16"))
                     (branch "Case 1"
                        (rule "andRight" (formula "16"))
                        (branch "Case 1"
                           (rule "andRight" (formula "16"))
                           (branch "Case 1"
                              (rule "andRight" (formula "16"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "16"))
                                 (branch "Case 1"
                                    (rule "notRight" (formula "16"))
                                    (rule "jdiv_axiom_inline" (formula "12") (term "1"))
                                    (rule "div_literals" (formula "12") (term "1,1"))
                                    (rule "qeq_literals" (formula "12") (term "0,1"))
                                    (rule "ifthenelse_true" (formula "12") (term "1"))
                                    (rule "jdiv_axiom_inline" (formula "11") (term "1"))
                                    (rule "mul_literals" (formula "11") (term "0,0,2,1"))
                                    (rule "qeq_literals" (formula "11") (term "0,1"))
                                    (rule "ifthenelse_true" (formula "11") (term "1"))
                                    (rule "div_literals" (formula "11") (term "1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "0"))
                                    (rule "close" (formula "14") (ifseqformula "1"))
                                 )
                                 (branch "Case 2"
                                    (rule "jdiv_axiom_inline" (formula "10") (term "1"))
                                    (rule "mul_literals" (formula "10") (term "0,0,2,1"))
                                    (rule "div_literals" (formula "10") (term "1,1"))
                                    (rule "qeq_literals" (formula "10") (term "0,1"))
                                    (rule "ifthenelse_true" (formula "10") (term "1"))
                                    (rule "jdiv_axiom_inline" (formula "11") (term "1"))
                                    (rule "qeq_literals" (formula "11") (term "0,1"))
                                    (rule "ifthenelse_true" (formula "11") (term "1"))
                                    (rule "div_literals" (formula "11") (term "1"))
                                    (rule "dismissNonSelectedField" (formula "16") (term "0,0"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "16") (term "0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "16") (term "0,0"))
                                    (rule "close" (formula "16") (ifseqformula "12"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "jdiv_axiom_inline" (formula "11") (term "1"))
                                 (rule "qeq_literals" (formula "11") (term "0,1"))
                                 (rule "ifthenelse_true" (formula "11") (term "1"))
                                 (rule "div_literals" (formula "11") (term "1"))
                                 (rule "jdiv_axiom_inline" (formula "10") (term "1"))
                                 (rule "qeq_literals" (formula "10") (term "0,1"))
                                 (rule "ifthenelse_true" (formula "10") (term "1"))
                                 (rule "div_literals" (formula "10") (term "1"))
                                 (rule "dismissNonSelectedField" (formula "16") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                 (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=java_util_AbstractMap_keySet_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "7"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "16"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "1") (term "0,0,0,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "0,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (rule "eqClose" (formula "1") (term "1,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0"))
                                 (rule "eqClose" (formula "1") (term "0,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "0,0"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "17"))
                                 (rule "concrete_not_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                 (rule "boolean_equal" (formula "2") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "2") (term "0"))
                                 (rule "simplifySelectOfStore" (formula "2"))
                                 (rule "eqClose" (formula "2") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "2") (term "0,0,0"))
                                 (rule "eqClose" (formula "2") (term "0,0,0"))
                                 (rule "concrete_and_1" (formula "2") (term "0,0"))
                                 (rule "equalUnique" (formula "2") (term "0,0,0"))
                                 (rule "concrete_not_2" (formula "2") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "2") (term "0"))
                                 (rule "castDel" (formula "2") (term "0"))
                                 (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "2"))
                                 (rule "eqClose" (formula "18"))
                                 (rule "closeTrue" (formula "18"))
                              )
                           )
                           (branch "Case 2"
                              (rule "jdiv_axiom_inline" (formula "11") (term "1"))
                              (rule "qeq_literals" (formula "11") (term "0,1"))
                              (rule "ifthenelse_true" (formula "11") (term "1"))
                              (rule "div_literals" (formula "11") (term "1"))
                              (rule "jdiv_axiom_inline" (formula "10") (term "1"))
                              (rule "qeq_literals" (formula "10") (term "0,1"))
                              (rule "ifthenelse_true" (formula "10") (term "1"))
                              (rule "div_literals" (formula "10") (term "1"))
                              (rule "dismissNonSelectedField" (formula "16") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                              (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                              (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                              (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=java_util_AbstractMap_values_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "7"))
                              (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                              (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "16"))
                              (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                              (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (rule "eqClose" (formula "1") (term "0,0,0,0,0"))
                              (rule "concrete_and_1" (formula "1") (term "0,0,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                              (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                              (rule "eqClose" (formula "1") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,0,0"))
                              (rule "concrete_or_2" (formula "1") (term "0,0"))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (rule "eqClose" (formula "1") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "1") (term "0,0"))
                              (rule "eqClose" (formula "1") (term "0,0,0"))
                              (rule "concrete_and_1" (formula "1") (term "0,0"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "17"))
                              (rule "concrete_not_2" (formula "1") (term "0,0"))
                              (rule "ifthenelse_true" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                              (rule "boolean_equal" (formula "2") (term "0,0"))
                              (rule "ifthenelse_true" (formula "2") (term "0"))
                              (rule "simplifySelectOfStore" (formula "2"))
                              (rule "equalUnique" (formula "2") (term "0,1,0,0"))
                              (rule "concrete_not_2" (formula "2") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "2") (term "0,0"))
                              (rule "eqClose" (formula "2") (term "0,0,0"))
                              (rule "concrete_and_1" (formula "2") (term "0,0"))
                              (rule "eqClose" (formula "2") (term "0,0"))
                              (rule "ifthenelse_true" (formula "2") (term "0"))
                              (rule "castDel" (formula "2") (term "0"))
                              (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "2"))
                              (rule "eqClose" (formula "18"))
                              (rule "closeTrue" (formula "18"))
                           )
                        )
                        (branch "Case 2"
                           (rule "jdiv_axiom_inline" (formula "11") (term "1"))
                           (rule "qeq_literals" (formula "11") (term "0,1"))
                           (rule "ifthenelse_true" (formula "11") (term "1"))
                           (rule "div_literals" (formula "11") (term "1"))
                           (rule "jdiv_axiom_inline" (formula "10") (term "1"))
                           (rule "qeq_literals" (formula "10") (term "0,1"))
                           (rule "ifthenelse_true" (formula "10") (term "1"))
                           (rule "div_literals" (formula "10") (term "1"))
                           (rule "dismissNonSelectedField" (formula "16") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                           (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                           (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                           (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=java_util_VerifiedIdentityHashMap_entrySet_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "7"))
                           (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                           (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                           (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                           (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "16"))
                           (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                           (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                           (rule "eqClose" (formula "1") (term "0,1,0,0,0"))
                           (rule "concrete_and_1" (formula "1") (term "1,0,0,0"))
                           (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                           (rule "concrete_or_4" (formula "1") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                           (rule "eqClose" (formula "1") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                           (rule "equalUnique" (formula "1") (term "0,0,0"))
                           (rule "concrete_or_2" (formula "1") (term "0,0"))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (rule "eqClose" (formula "1") (term "1,0,0"))
                           (rule "concrete_and_3" (formula "1") (term "0,0"))
                           (rule "eqClose" (formula "1") (term "0,0,0"))
                           (rule "concrete_and_1" (formula "1") (term "0,0"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "17"))
                           (rule "concrete_not_2" (formula "1") (term "0,0"))
                           (rule "ifthenelse_true" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                           (rule "boolean_equal" (formula "2") (term "0,0"))
                           (rule "ifthenelse_true" (formula "2") (term "0"))
                           (rule "simplifySelectOfStore" (formula "2"))
                           (rule "equalUnique" (formula "2") (term "1,0,0,0"))
                           (rule "concrete_and_3" (formula "2") (term "0,0,0"))
                           (rule "eqClose" (formula "2") (term "0,0,0"))
                           (rule "concrete_and_1" (formula "2") (term "0,0"))
                           (rule "equalUnique" (formula "2") (term "0,0,0"))
                           (rule "concrete_not_2" (formula "2") (term "0,0"))
                           (rule "ifthenelse_true" (formula "2") (term "0"))
                           (rule "castDel" (formula "2") (term "0"))
                           (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "2"))
                           (rule "eqClose" (formula "18"))
                           (rule "closeTrue" (formula "18"))
                        )
                     )
                     (branch "Case 2"
                        (rule "jdiv_axiom_inline" (formula "11") (term "1"))
                        (rule "qeq_literals" (formula "11") (term "0,1"))
                        (rule "ifthenelse_true" (formula "11") (term "1"))
                        (rule "div_literals" (formula "11") (term "1"))
                        (rule "jdiv_axiom_inline" (formula "10") (term "1"))
                        (rule "qeq_literals" (formula "10") (term "0,1"))
                        (rule "ifthenelse_true" (formula "10") (term "1"))
                        (rule "div_literals" (formula "10") (term "1"))
                        (rule "dismissNonSelectedField" (formula "16") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                        (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                        (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                        (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=java_util_VerifiedIdentityHashMap_modCount_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "7"))
                        (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                        (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "16"))
                        (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                        (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                        (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                        (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                        (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                        (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                        (rule "concrete_or_2" (formula "1") (term "0,0"))
                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_modCount_1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                        (rule "eqClose" (formula "1") (term "0,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "0,0"))
                        (rule "equalUnique" (formula "1") (term "0,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "0,0"))
                        (rule "ifthenelse_true" (formula "1") (term "0"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (rule "eqClose" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "eqClose" (formula "1") (term "0,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "0,0"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "17"))
                        (rule "concrete_not_2" (formula "1") (term "0,0"))
                        (rule "ifthenelse_true" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                        (rule "boolean_equal" (formula "2") (term "0,0"))
                        (rule "ifthenelse_true" (formula "2") (term "0"))
                        (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "2"))
                        (rule "eqClose" (formula "18"))
                        (rule "closeTrue" (formula "18"))
                     )
                  )
                  (branch "Case 2"
                     (rule "jdiv_axiom_inline" (formula "16") (term "1"))
                     (rule "qeq_literals" (formula "16") (term "0,1"))
                     (rule "ifthenelse_true" (formula "16") (term "1"))
                     (rule "div_literals" (formula "16") (term "1"))
                     (rule "jdiv_axiom_inline" (formula "10") (term "1"))
                     (rule "qeq_literals" (formula "10") (term "0,1"))
                     (rule "ifthenelse_true" (formula "10") (term "1"))
                     (rule "div_literals" (formula "10") (term "1"))
                     (rule "jdiv_axiom_inline" (formula "11") (term "1"))
                     (rule "div_literals" (formula "11") (term "1,1"))
                     (rule "mul_literals" (formula "11") (term "0,0,2,1"))
                     (rule "qeq_literals" (formula "11") (term "0,1"))
                     (rule "ifthenelse_true" (formula "11") (term "1"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0"))
                     (rule "replaceKnownSelect_taclet0_0" (formula "16") (term "0"))
                     (rule "close" (formula "16") (ifseqformula "11"))
                  )
               )
               (branch "Case 2"
                  (rule "jdiv_axiom_inline" (formula "11") (term "1"))
                  (rule "qeq_literals" (formula "11") (term "0,1"))
                  (rule "ifthenelse_true" (formula "11") (term "1"))
                  (rule "div_literals" (formula "11") (term "1"))
                  (rule "jdiv_axiom_inline" (formula "10") (term "1"))
                  (rule "qeq_literals" (formula "10") (term "0,1"))
                  (rule "ifthenelse_true" (formula "10") (term "1"))
                  (rule "div_literals" (formula "10") (term "1"))
                  (rule "dismissNonSelectedField" (formula "16") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                  (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=java_util_VerifiedIdentityHashMap_size_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "7"))
                  (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                  (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                  (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "16"))
                  (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                  (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                  (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                  (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                  (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                  (rule "concrete_or_2" (formula "1") (term "0,0"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_size_1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                  (rule "concrete_and_3" (formula "1") (term "0,0"))
                  (rule "eqClose" (formula "1") (term "1,0,0"))
                  (rule "concrete_and_3" (formula "1") (term "0,0"))
                  (rule "eqClose" (formula "1") (term "0,0"))
                  (rule "ifthenelse_true" (formula "1") (term "0"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (rule "eqClose" (formula "1") (term "1,0,0"))
                  (rule "concrete_and_3" (formula "1") (term "0,0"))
                  (rule "eqClose" (formula "1") (term "0,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0,0"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "17"))
                  (rule "concrete_not_2" (formula "1") (term "0,0"))
                  (rule "ifthenelse_true" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                  (rule "boolean_equal" (formula "2") (term "0,0"))
                  (rule "ifthenelse_true" (formula "2") (term "0"))
                  (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "2"))
                  (rule "eqClose" (formula "18"))
                  (rule "closeTrue" (formula "18"))
               )
            )
            (branch "Case 2"
               (rule "allRight" (formula "16") (inst "sk=i_0"))
               (rule "impRight" (formula "16"))
               (rule "andLeft" (formula "1"))
               (rule "jdiv_axiom_inline" (formula "13") (term "1"))
               (rule "qeq_literals" (formula "13") (term "0,1"))
               (rule "ifthenelse_true" (formula "13") (term "1"))
               (rule "div_literals" (formula "13") (term "1"))
               (rule "jdiv_axiom_inline" (formula "12") (term "1"))
               (rule "mul_literals" (formula "12") (term "0,0,2,1"))
               (rule "div_literals" (formula "12") (term "1,1"))
               (rule "qeq_literals" (formula "12") (term "0,1"))
               (rule "ifthenelse_true" (formula "12") (term "1"))
               (rule "dismissNonSelectedField" (formula "18") (term "1,0"))
               (rule "replaceKnownSelect_taclet0_1" (formula "18") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "18") (term "1,0"))
               (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
               (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "0,1"))
               (rule "dismissNonSelectedField" (formula "18") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
               (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "14"))
               (rule "mul_literals" (formula "2") (term "1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
               (rule "mul_literals" (formula "11") (term "1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
               (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
               (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
               (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
               (rule "concrete_and_3" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "16"))
               (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
               (rule "concrete_and_1" (formula "1") (term "1,0,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
               (rule "elementOfUnion" (formula "1") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
               (rule "equalUnique" (formula "1") (term "1,1,0,0,0"))
               (rule "concrete_and_4" (formula "1") (term "1,0,0,0"))
               (rule "concrete_or_4" (formula "1") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
               (rule "equalUnique" (formula "1") (term "1,0,0,0"))
               (rule "concrete_and_4" (formula "1") (term "0,0,0"))
               (rule "concrete_or_2" (formula "1") (term "0,0"))
               (rule "ifthenelse_negated" (formula "1") (term "0"))
               (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_1"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (rule "equalUnique" (formula "1") (term "1,0,0"))
               (rule "concrete_and_4" (formula "1") (term "0,0"))
               (rule "ifthenelse_false" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (rule "eqClose" (formula "1") (term "1,0,0"))
               (rule "concrete_and_3" (formula "1") (term "0,0"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "19"))
               (rule "concrete_not_2" (formula "1") (term "1,0,0"))
               (rule "concrete_and_3" (formula "1") (term "0,0"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "19"))
               (rule "concrete_and_4" (formula "1") (term "0,0"))
               (rule "ifthenelse_false" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "nnf_imp2or" (formula "12") (term "0"))
               (rule "nnf_notAnd" (formula "12") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
               (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
               (rule "mul_literals" (formula "12") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
               (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
               (rule "mul_literals" (formula "12") (term "1,1,0,0"))
               (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "7"))
               (rule "notLeft" (formula "7"))
               (rule "commute_or_2" (formula "11") (term "0"))
               (rule "commute_or" (formula "11") (term "0,0"))
               (rule "commute_or_2" (formula "11") (term "0"))
               (rule "arrayLengthIsAShort" (formula "14") (term "0"))
               (rule "expand_inShort" (formula "14"))
               (rule "replace_short_MIN" (formula "14") (term "0,1"))
               (rule "replace_short_MAX" (formula "14") (term "1,0"))
               (rule "andLeft" (formula "14"))
               (rule "inEqSimp_commuteLeq" (formula "15"))
               (rule "applyEq" (formula "14") (term "0") (ifseqformula "16"))
               (rule "leq_literals" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
               (rule "qeq_literals" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "arrayLengthNotNegative" (formula "14") (term "0"))
               (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
               (rule "qeq_literals" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE TRUE"
                  (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "2"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "allLeft" (formula "11") (inst "t=i_0"))
                  (rule "replaceKnownSelect_taclet10000_3" (formula "11") (term "0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010000_8" (formula "11") (term "0,0,0"))
                  (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "20"))
                  (rule "concrete_or_2" (formula "11") (term "0"))
                  (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "11") (term "0,0"))
                  (rule "concrete_and_2" (formula "11") (term "0"))
                  (rule "concrete_or_2" (formula "11"))
                  (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "11"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_and_2" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
               (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE FALSE"
                  (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "allLeft" (formula "10") (inst "t=i_0"))
                  (rule "replaceKnownSelect_taclet10000_3" (formula "10") (term "0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110000_8" (formula "10") (term "0,0,0"))
                  (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "20"))
                  (rule "concrete_or_2" (formula "10") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "10") (term "1") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "10") (term "0,1"))
                  (rule "concrete_and_2" (formula "10") (term "1"))
                  (rule "concrete_or_4" (formula "10"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "10"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                  (rule "concrete_and_2" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Case 2"
            (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "16") (inst "i_5=i_5") (inst "j_1=j_1") (inst "i_4=i_4") (inst "i_3=i_3") (inst "i_2=i_2") (inst "i_1=i_1") (inst "j_0=j_0") (inst "i_0=i_0") (inst "j=j") (inst "i=i") (ifseqformula "1") (userinteraction))
            (rule "andRight" (formula "16"))
            (branch "Case 1"
               (rule "andRight" (formula "16"))
               (branch "Case 1"
                  (rule "andRight" (formula "16"))
                  (branch "Case 1"
                     (rule "andRight" (formula "16"))
                     (branch "Case 1"
                        (rule "andRight" (formula "16"))
                        (branch "Case 1"
                           (rule "andRight" (formula "16"))
                           (branch "Case 1"
                              (rule "andRight" (formula "16"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "16"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "16"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "16"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "16"))
                                          (branch "Case 1"
                                             (rule "notRight" (formula "16"))
                                             (rule "jdiv_axiom_inline" (formula "11") (term "1"))
                                             (rule "mul_literals" (formula "11") (term "0,0,2,1"))
                                             (rule "qeq_literals" (formula "11") (term "0,1"))
                                             (rule "ifthenelse_true" (formula "11") (term "1"))
                                             (rule "div_literals" (formula "11") (term "1"))
                                             (rule "jdiv_axiom_inline" (formula "12") (term "1"))
                                             (rule "mul_literals" (formula "12") (term "0,0,2,1"))
                                             (rule "qeq_literals" (formula "12") (term "0,1"))
                                             (rule "ifthenelse_true" (formula "12") (term "1"))
                                             (rule "div_literals" (formula "12") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                             (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_util_VerifiedIdentityHashMap_NULL_KEY_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "8"))
                                             (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                             (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                             (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                             (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                             (rule "eqClose" (formula "1") (term "0,0,1,0,0"))
                                             (rule "concrete_not_1" (formula "1") (term "0,1,0,0"))
                                             (rule "concrete_and_2" (formula "1") (term "1,0,0"))
                                             (rule "concrete_or_4" (formula "1") (term "0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "2"))
                                             (rule "ifEqualsNull" (formula "1"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,1"))
                                             (rule "equalUnique" (formula "1") (term "1,0,0,0,1"))
                                             (rule "concrete_and_4" (formula "1") (term "0,0,0,1"))
                                             (rule "concrete_or_2" (formula "1") (term "0,0,1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,1"))
                                             (rule "equalUnique" (formula "1") (term "1,0,0,1"))
                                             (rule "concrete_and_4" (formula "1") (term "0,0,1"))
                                             (rule "concrete_not_2" (formula "1") (term "0,1"))
                                             (rule "concrete_and_1" (formula "1") (term "1"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                             (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                             (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                             (rule "concrete_or_2" (formula "1") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                             (rule "equalUnique" (formula "1") (term "1,0,0"))
                                             (rule "concrete_and_4" (formula "1") (term "0,0"))
                                             (rule "concrete_and_2" (formula "1") (term "0"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_util_VerifiedIdentityHashMap_NULL_KEY_1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (rule "equalUnique" (formula "1") (term "1,0,0"))
                                             (rule "concrete_and_4" (formula "1") (term "0,0"))
                                             (rule "ifthenelse_false" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "nnf_imp2or" (formula "11") (term "0"))
                                             (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                             (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "6"))
                                             (rule "notLeft" (formula "6"))
                                             (rule "close" (formula "14") (ifseqformula "1"))
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "16"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "16"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "16"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "16"))
                                                      (branch "Case 1"
                                                         (rule "andRight" (formula "16"))
                                                         (branch "Case 1"
                                                            (rule "notRight" (formula "16"))
                                                            (rule "jdiv_axiom_inline" (formula "12") (term "1"))
                                                            (rule "mul_literals" (formula "12") (term "0,0,2,1"))
                                                            (rule "div_literals" (formula "12") (term "1,1"))
                                                            (rule "qeq_literals" (formula "12") (term "0,1"))
                                                            (rule "ifthenelse_true" (formula "12") (term "1"))
                                                            (rule "jdiv_axiom_inline" (formula "11") (term "1"))
                                                            (rule "mul_literals" (formula "11") (term "0,0,2,1"))
                                                            (rule "qeq_literals" (formula "11") (term "0,1"))
                                                            (rule "ifthenelse_true" (formula "11") (term "1"))
                                                            (rule "div_literals" (formula "11") (term "1"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                            (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "0"))
                                                            (rule "close" (formula "14") (ifseqformula "1"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "insert_constant_value" (formula "16") (term "0"))
                                                            (rule "eqClose" (formula "16"))
                                                            (rule "closeTrue" (formula "16"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "insert_constant_value" (formula "16") (term "0"))
                                                         (rule "eqClose" (formula "16"))
                                                         (rule "closeTrue" (formula "16"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "insert_constant_value" (formula "16") (term "0"))
                                                      (rule "eqClose" (formula "16"))
                                                      (rule "closeTrue" (formula "16"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "insert_constant_value" (formula "16") (term "0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0"))
                                                   (rule "jdiv_axiom_inline" (formula "11") (term "1"))
                                                   (rule "qeq_literals" (formula "11") (term "0,1"))
                                                   (rule "ifthenelse_true" (formula "11") (term "1"))
                                                   (rule "div_literals" (formula "11") (term "1"))
                                                   (rule "jdiv_axiom_inline" (formula "10") (term "1"))
                                                   (rule "div_literals" (formula "10") (term "1,1"))
                                                   (rule "qeq_literals" (formula "10") (term "0,1"))
                                                   (rule "ifthenelse_true" (formula "10") (term "1"))
                                                   (rule "dismissNonSelectedField" (formula "16") (term "0,1"))
                                                   (rule "replaceKnownSelect_taclet0_1" (formula "16") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "16") (term "0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_leqRight" (formula "16"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "13"))
                                                   (rule "mul_literals" (formula "1") (term "1,0"))
                                                   (rule "add_literals" (formula "1") (term "0"))
                                                   (rule "qeq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "insert_constant_value" (formula "16") (term "0,0"))
                                                (rule "mul_literals" (formula "16") (term "0"))
                                                (rule "jdiv_axiom_inline" (formula "11") (term "1"))
                                                (rule "qeq_literals" (formula "11") (term "0,1"))
                                                (rule "ifthenelse_true" (formula "11") (term "1"))
                                                (rule "div_literals" (formula "11") (term "1"))
                                                (rule "jdiv_axiom_inline" (formula "10") (term "1"))
                                                (rule "div_literals" (formula "10") (term "1,1"))
                                                (rule "qeq_literals" (formula "10") (term "0,1"))
                                                (rule "ifthenelse_true" (formula "10") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "16") (term "0,1"))
                                                (rule "replaceKnownSelect_taclet0_1" (formula "16") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "16") (term "0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                                (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_geqRight" (formula "16"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "13"))
                                                (rule "mul_literals" (formula "1") (term "1,0"))
                                                (rule "add_literals" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "16") (inst "sk=i_5_0"))
                                          (rule "impRight" (formula "16"))
                                          (rule "impRight" (formula "17"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "jdiv_axiom_inline" (formula "13") (term "1"))
                                          (rule "qeq_literals" (formula "13") (term "0,1"))
                                          (rule "ifthenelse_true" (formula "13") (term "1"))
                                          (rule "div_literals" (formula "13") (term "1"))
                                          (rule "jdiv_axiom_inline" (formula "14") (term "1"))
                                          (rule "qeq_literals" (formula "14") (term "0,1"))
                                          (rule "ifthenelse_true" (formula "14") (term "1"))
                                          (rule "div_literals" (formula "14") (term "1"))
                                          (rule "polySimp_addComm0" (formula "19") (term "0,2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                          (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "1,0"))
                                          (rule "dismissNonSelectedField" (formula "19") (term "1,0"))
                                          (rule "replaceKnownSelect_taclet0_1" (formula "19") (term "1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "19") (term "1,0"))
                                          (rule "dismissNonSelectedField" (formula "3") (term "0,0,1"))
                                          (rule "replaceKnownSelect_taclet0_1" (formula "3") (term "0,0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "3") (term "0,0,1"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "19") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "2"))
                                          (rule "applyEq" (formula "3") (term "0,0,1,0") (ifseqformula "15"))
                                          (rule "jdiv_axiom_inline" (formula "3") (term "0,1,0"))
                                          (rule "mul_literals" (formula "3") (term "0,0,2,0,1,0"))
                                          (rule "qeq_literals" (formula "3") (term "0,0,1,0"))
                                          (rule "ifthenelse_true" (formula "3") (term "0,1,0"))
                                          (rule "div_literals" (formula "3") (term "0,1,0"))
                                          (rule "mul_literals" (formula "3") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                                          (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                          (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                          (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "17"))
                                          (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                          (rule "ifEqualsNull" (formula "1"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,1"))
                                          (rule "equalUnique" (formula "1") (term "1,0,0,0,0,1"))
                                          (rule "concrete_and_4" (formula "1") (term "0,0,0,0,1"))
                                          (rule "concrete_or_2" (formula "1") (term "0,0,0,1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,1"))
                                          (rule "equalUnique" (formula "1") (term "1,0,0,0,1"))
                                          (rule "concrete_and_4" (formula "1") (term "0,0,0,1"))
                                          (rule "concrete_or_2" (formula "1") (term "0,0,1"))
                                          (rule "double_not" (formula "1") (term "0,1"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                          (rule "equalUnique" (formula "1") (term "1,1,0,0,0"))
                                          (rule "concrete_and_4" (formula "1") (term "1,0,0,0"))
                                          (rule "concrete_or_4" (formula "1") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                          (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                          (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                          (rule "concrete_or_2" (formula "1") (term "0,0"))
                                          (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=arr_1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                                          (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                          (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                          (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "18"))
                                          (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                          (rule "equalUnique" (formula "1") (term "1,1,0,0,0"))
                                          (rule "concrete_and_4" (formula "1") (term "1,0,0,0"))
                                          (rule "concrete_or_4" (formula "1") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                          (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                          (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                          (rule "concrete_or_2" (formula "1") (term "0,0"))
                                          (rule "ifthenelse_negated" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "2") (term "0,1,1") (inst "selectSK=arr_2"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "equalUnique" (formula "2") (term "1,0,0"))
                                          (rule "concrete_and_4" (formula "2") (term "0,0"))
                                          (rule "ifthenelse_false" (formula "2") (term "0"))
                                          (rule "applyEqReverse" (formula "3") (term "0,1,1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1") (inst "selectSK=java_lang_Object_created__0"))
                                          (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "2"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "eqClose" (formula "2") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "2") (term "0,0"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "21"))
                                          (rule "concrete_not_2" (formula "2") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "2") (term "0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "2") (term "0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "19"))
                                          (rule "concrete_and_2" (formula "2") (term "0,0"))
                                          (rule "ifthenelse_false" (formula "2") (term "0"))
                                          (rule "applyEqReverse" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "3") (term "0,0,1") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "1") (term "0,0,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_3"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "equalUnique" (formula "1") (term "1,0,0"))
                                          (rule "concrete_and_4" (formula "1") (term "0,0"))
                                          (rule "ifthenelse_false" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "nnf_imp2or" (formula "14") (term "0"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                          (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "9"))
                                          (rule "notLeft" (formula "9"))
                                          (rule "commute_or_2" (formula "13") (term "0"))
                                          (rule "commute_or" (formula "13") (term "0,0"))
                                          (rule "commute_or_2" (formula "13") (term "0"))
                                          (rule "cnf_rightDist" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "commute_or" (formula "2"))
                                          (rule "cnf_rightDist" (formula "3"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "commute_or" (formula "4"))
                                          (rule "commute_or" (formula "3"))
                                          (rule "cnf_rightDist" (formula "2"))
                                          (rule "neq_or" (formula "2") (term "0"))
                                          (rule "concrete_and_1" (formula "2"))
                                          (rule "commute_or" (formula "2"))
                                          (rule "arrayLengthIsAShort" (formula "18") (term "0"))
                                          (rule "expand_inShort" (formula "18"))
                                          (rule "replace_short_MIN" (formula "18") (term "0,1"))
                                          (rule "replace_short_MAX" (formula "18") (term "1,0"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "inEqSimp_commuteLeq" (formula "19"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                          (rule "qeq_literals" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                          (rule "leq_literals" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                          (rule "qeq_literals" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "concrete_or_1" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "2") (term "0"))
                                             (rule "concrete_or_2" (formula "2"))
                                             (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "2"))
                                             (rule "concrete_or_1" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "0,0") (ifseqformula "9"))
                                             (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "19"))
                                             (rule "concrete_or_2" (formula "16"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "0") (ifseqformula "7"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "19"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "8"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "0") (ifseqformula "9"))
                                             (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "5"))
                                             (rule "concrete_or_1" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "allLeft" (formula "15") (inst "t=add(Z(1(#)), mul(i_5_0, Z(2(#))))"))
                                             (rule "replaceKnownSelect_taclet10000000001000_4" (formula "15") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet010000000001000_11" (formula "15") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "25"))
                                             (rule "concrete_or_2" (formula "15") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "15") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
                                             (rule "add_literals" (formula "15") (term "0,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0,0"))
                                             (rule "inEqSimp_contradInEq5" (formula "15") (term "0") (ifseqformula "6"))
                                             (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                             (rule "greater_literals" (formula "15") (term "0,0,0"))
                                             (rule "concrete_impl_1" (formula "15") (term "0,0"))
                                             (rule "qeq_literals" (formula "15") (term "0,0"))
                                             (rule "concrete_and_2" (formula "15") (term "0"))
                                             (rule "concrete_or_2" (formula "15"))
                                             (rule "inEqSimp_contradInEq3" (formula "15") (ifseqformula "7"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0"))
                                             (rule "greater_literals" (formula "15") (term "0,0"))
                                             (rule "concrete_impl_1" (formula "15") (term "0"))
                                             (rule "qeq_literals" (formula "15") (term "0"))
                                             (rule "concrete_and_2" (formula "15"))
                                             (rule "closeFalse" (formula "15"))
                                          )
                                          (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "18"))
                                             (rule "concrete_not_2" (formula "2") (term "0"))
                                             (rule "concrete_or_1" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "17"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "1"))
                                             (rule "concrete_or_3" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,0") (ifseqformula "8"))
                                             (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "19"))
                                             (rule "concrete_or_2" (formula "15"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "0") (ifseqformula "6"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "19"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "9"))
                                             (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                                             (rule "concrete_or_1" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "9"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "allLeft" (formula "14") (inst "t=add(Z(1(#)), mul(i_5_0, Z(2(#))))"))
                                             (rule "replaceKnownSelect_taclet10000000001000_4" (formula "14") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet110000000001000_11" (formula "14") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "25"))
                                             (rule "concrete_or_2" (formula "14") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "14") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,1"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                                             (rule "add_literals" (formula "14") (term "0,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                                             (rule "inEqSimp_contradInEq3" (formula "14") (term "1") (ifseqformula "6"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,1"))
                                             (rule "greater_literals" (formula "14") (term "0,0,1"))
                                             (rule "concrete_impl_1" (formula "14") (term "0,1"))
                                             (rule "qeq_literals" (formula "14") (term "0,1"))
                                             (rule "concrete_and_2" (formula "14") (term "1"))
                                             (rule "concrete_or_4" (formula "14"))
                                             (rule "inEqSimp_contradInEq5" (formula "14") (ifseqformula "5"))
                                             (rule "greater_literals" (formula "14") (term "0,0"))
                                             (rule "concrete_impl_1" (formula "14") (term "0"))
                                             (rule "times_zero_1" (formula "14") (term "1,0"))
                                             (rule "qeq_literals" (formula "14") (term "0"))
                                             (rule "concrete_and_2" (formula "14"))
                                             (rule "closeFalse" (formula "14"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "16") (inst "sk=i_4_0"))
                                       (rule "impRight" (formula "16"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "allRight" (formula "18") (inst "sk=j_1_0"))
                                       (rule "impRight" (formula "18"))
                                       (rule "impRight" (formula "19"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "jdiv_axiom_inline" (formula "16") (term "1"))
                                       (rule "qeq_literals" (formula "16") (term "0,1"))
                                       (rule "ifthenelse_true" (formula "16") (term "1"))
                                       (rule "div_literals" (formula "16") (term "1"))
                                       (rule "jdiv_axiom_inline" (formula "15") (term "1"))
                                       (rule "qeq_literals" (formula "15") (term "0,1"))
                                       (rule "ifthenelse_true" (formula "15") (term "1"))
                                       (rule "div_literals" (formula "15") (term "1"))
                                       (rule "eqSymm" (formula "22"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,2,1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,2,0"))
                                       (rule "dismissNonSelectedField" (formula "5") (term "0,0,1"))
                                       (rule "replaceKnownSelect_taclet0_1" (formula "5") (term "0,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "5") (term "0,0,1"))
                                       (rule "dismissNonSelectedField" (formula "3") (term "0,0,1"))
                                       (rule "replaceKnownSelect_taclet0_1" (formula "3") (term "0,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "3") (term "0,0,1"))
                                       (rule "dismissNonSelectedField" (formula "18") (term "1,0"))
                                       (rule "replaceKnownSelect_taclet0_1" (formula "18") (term "1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "18") (term "1,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                       (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "18") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                       (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "inEqSimp_ltToLeq" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "4"))
                                       (rule "inEqSimp_commuteLeq" (formula "2"))
                                       (rule "applyEq" (formula "3") (term "0,0,1,0") (ifseqformula "17"))
                                       (rule "jdiv_axiom_inline" (formula "3") (term "0,1,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,2,0,1,0"))
                                       (rule "div_literals" (formula "3") (term "1,0,1,0"))
                                       (rule "qeq_literals" (formula "3") (term "0,0,1,0"))
                                       (rule "ifthenelse_true" (formula "3") (term "0,1,0"))
                                       (rule "mul_literals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "17"))
                                       (rule "jdiv_axiom_inline" (formula "5") (term "0,1,0"))
                                       (rule "div_literals" (formula "5") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,2,0,1,0"))
                                       (rule "qeq_literals" (formula "5") (term "0,0,1,0"))
                                       (rule "ifthenelse_true" (formula "5") (term "0,1,0"))
                                       (rule "mul_literals" (formula "5") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                       (rule "mul_literals" (formula "5") (term "1"))
                                       (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "22"))
                                       (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "2"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0"))
                                       (rule "leq_literals" (formula "22") (term "0"))
                                       (rule "concrete_and_2" (formula "22"))
                                       (rule "false_right" (formula "22"))
                                       (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_0"))
                                       (rule "applyEq" (formula "2") (term "1") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "12"))
                                       (rule "elementOfFreshLocs" (formula "2") (term "1,0,0"))
                                       (rule "equalUnique" (formula "2") (term "0,1,0,0,0"))
                                       (rule "concrete_not_2" (formula "2") (term "1,0,0,0"))
                                       (rule "concrete_and_3" (formula "2") (term "0,0,0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                                       (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                       (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                       (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                       (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "20"))
                                       (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                       (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "20"))
                                       (rule "concrete_not_2" (formula "2") (term "0,1,0,0"))
                                       (rule "concrete_and_1" (formula "2") (term "1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                       (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                                       (rule "equalUnique" (formula "2") (term "1,1,0,0,0"))
                                       (rule "concrete_and_4" (formula "2") (term "1,0,0,0"))
                                       (rule "concrete_or_4" (formula "2") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                                       (rule "equalUnique" (formula "2") (term "1,0,0,0"))
                                       (rule "concrete_and_4" (formula "2") (term "0,0,0"))
                                       (rule "concrete_or_2" (formula "2") (term "0,0"))
                                       (rule "ifthenelse_negated" (formula "2") (term "0"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                       (rule "equalUnique" (formula "1") (term "1,1,0,0,0"))
                                       (rule "concrete_and_4" (formula "1") (term "1,0,0,0"))
                                       (rule "concrete_or_4" (formula "1") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                       (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                       (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                       (rule "concrete_or_2" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_negated" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=arr_1"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (rule "equalUnique" (formula "2") (term "1,0,0"))
                                       (rule "concrete_and_4" (formula "2") (term "0,0"))
                                       (rule "ifthenelse_false" (formula "2") (term "0"))
                                       (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                                       (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "2"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (rule "eqClose" (formula "2") (term "1,0,0"))
                                       (rule "concrete_and_3" (formula "2") (term "0,0"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "23"))
                                       (rule "concrete_not_2" (formula "2") (term "1,0,0"))
                                       (rule "concrete_and_3" (formula "2") (term "0,0"))
                                       (rule "sortsDisjointModuloNull" (formula "2") (term "0,0"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "23"))
                                       (rule "concrete_and_4" (formula "2") (term "0,0"))
                                       (rule "ifthenelse_false" (formula "2") (term "0"))
                                       (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "7") (term "0"))
                                       (rule "concrete_or_1" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_2"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "equalUnique" (formula "1") (term "1,0,0"))
                                       (rule "concrete_and_4" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_false" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "nnf_imp2or" (formula "15") (term "0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                       (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "10"))
                                       (rule "notLeft" (formula "10"))
                                       (rule "commute_or_2" (formula "14") (term "0"))
                                       (rule "commute_or" (formula "14") (term "0,0"))
                                       (rule "commute_or_2" (formula "14") (term "0"))
                                       (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                                       (rule "expand_inShort" (formula "17"))
                                       (rule "replace_short_MAX" (formula "17") (term "1,0"))
                                       (rule "replace_short_MIN" (formula "17") (term "0,1"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "inEqSimp_commuteLeq" (formula "18"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                       (rule "qeq_literals" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                       (rule "leq_literals" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "3"))
                                          (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                                          (rule "ifthenelse_true" (formula "1") (term "0"))
                                          (rule "eqSymm" (formula "1"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "10"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "21"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "9"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "20"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "3") (term "1,0,1") (ifseqformula "4"))
                                          (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "4"))
                                          (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "22"))
                                          (rule "concrete_or_2" (formula "3"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "11"))
                                          (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "4"))
                                          (rule "concrete_or_3" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "allLeft" (formula "17") (inst "t=mul(i_4_0, Z(2(#)))"))
                                          (rule "replaceKnownSelect_taclet1000000001000_4" (formula "17") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet01000000001000_11" (formula "17") (term "0,0,0"))
                                          (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "4"))
                                          (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "23"))
                                          (rule "concrete_or_2" (formula "17") (term "0"))
                                          (rule "inEqSimp_contradInEq3" (formula "17") (term "1") (ifseqformula "6"))
                                          (rule "greater_literals" (formula "17") (term "0,0,1"))
                                          (rule "concrete_impl_1" (formula "17") (term "0,1"))
                                          (rule "mul_literals" (formula "17") (term "0,0,1"))
                                          (rule "qeq_literals" (formula "17") (term "0,1"))
                                          (rule "concrete_and_2" (formula "17") (term "1"))
                                          (rule "concrete_or_4" (formula "17"))
                                          (rule "inEqSimp_contradInEq5" (formula "17") (ifseqformula "9"))
                                          (rule "greater_literals" (formula "17") (term "0,0"))
                                          (rule "concrete_impl_1" (formula "17") (term "0"))
                                          (rule "mul_literals" (formula "17") (term "1,0"))
                                          (rule "qeq_literals" (formula "17") (term "0"))
                                          (rule "concrete_and_2" (formula "17"))
                                          (rule "closeFalse" (formula "17"))
                                       )
                                       (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "17"))
                                          (rule "ifthenelse_false" (formula "1") (term "0"))
                                          (rule "eqSymm" (formula "1"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "9"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "21"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "8"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "20"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "11"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "0") (ifseqformula "12"))
                                          (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "5"))
                                          (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "23"))
                                          (rule "concrete_or_2" (formula "4"))
                                          (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "5"))
                                          (rule "allLeft" (formula "16") (inst "t=mul(i_4_0, Z(2(#)))"))
                                          (rule "replaceKnownSelect_taclet1000000001000_4" (formula "16") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11000000001000_11" (formula "16") (term "0,0,0"))
                                          (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "4"))
                                          (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "23"))
                                          (rule "concrete_or_2" (formula "16") (term "0"))
                                          (rule "inEqSimp_contradInEq5" (formula "16") (term "0") (ifseqformula "8"))
                                          (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                          (rule "greater_literals" (formula "16") (term "0,0,0"))
                                          (rule "concrete_impl_1" (formula "16") (term "0,0"))
                                          (rule "qeq_literals" (formula "16") (term "0,0"))
                                          (rule "concrete_and_2" (formula "16") (term "0"))
                                          (rule "concrete_or_2" (formula "16"))
                                          (rule "inEqSimp_contradInEq3" (formula "16") (ifseqformula "5"))
                                          (rule "greater_literals" (formula "16") (term "0,0"))
                                          (rule "concrete_impl_1" (formula "16") (term "0"))
                                          (rule "mul_literals" (formula "16") (term "0,0"))
                                          (rule "qeq_literals" (formula "16") (term "0"))
                                          (rule "concrete_and_2" (formula "16"))
                                          (rule "closeFalse" (formula "16"))
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "insert_constant_value" (formula "16") (term "1"))
                                    (rule "jdiv_axiom_inline" (formula "11") (term "1"))
                                    (rule "qeq_literals" (formula "11") (term "0,1"))
                                    (rule "ifthenelse_true" (formula "11") (term "1"))
                                    (rule "div_literals" (formula "11") (term "1"))
                                    (rule "jdiv_axiom_inline" (formula "10") (term "1"))
                                    (rule "div_literals" (formula "10") (term "1,1"))
                                    (rule "mul_literals" (formula "10") (term "0,0,2,1"))
                                    (rule "qeq_literals" (formula "10") (term "0,1"))
                                    (rule "ifthenelse_true" (formula "10") (term "1"))
                                    (rule "dismissNonSelectedField" (formula "16") (term "0"))
                                    (rule "replaceKnownSelect_taclet0_0" (formula "16") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_ltRight" (formula "16"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "12"))
                                    (rule "add_literals" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "jdiv_axiom_inline" (formula "11") (term "1"))
                                 (rule "qeq_literals" (formula "11") (term "0,1"))
                                 (rule "ifthenelse_true" (formula "11") (term "1"))
                                 (rule "div_literals" (formula "11") (term "1"))
                                 (rule "jdiv_axiom_inline" (formula "10") (term "1"))
                                 (rule "mul_literals" (formula "10") (term "0,0,2,1"))
                                 (rule "qeq_literals" (formula "10") (term "0,1"))
                                 (rule "ifthenelse_true" (formula "10") (term "1"))
                                 (rule "div_literals" (formula "10") (term "1"))
                                 (rule "eqSymm" (formula "16"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,2,0,0,0,2,0"))
                                 (rule "dismissNonSelectedField" (formula "16") (term "1"))
                                 (rule "dismissNonSelectedField" (formula "16") (term "0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet0_1" (formula "16") (term "0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "16") (term "0,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "16") (term "1,0,0,0,2,0"))
                                 (rule "replaceKnownSelect_taclet0_1" (formula "16") (term "1,0,0,0,2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "16") (term "1,0,0,0,2,0"))
                                 (rule "ifthenelse_negated" (formula "16") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "16") (term "0,0,2,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                 (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "12"))
                                 (rule "jdiv_axiom_inline" (formula "16") (term "1,0"))
                                 (rule "qeq_literals" (formula "16") (term "0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0"))
                                 (rule "div_literals" (formula "16") (term "1,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "16"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
                                 (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
                                 (rule "bsum_lower_equals_upper" (formula "16") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
                                 (rule "add_zero_left" (formula "16") (term "0,1,0"))
                                 (rule "times_zero_2" (formula "16") (term "0,2,0,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "16"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0"))
                                 (rule "pullOutSelect" (formula "16") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (inst "selectSK=arr_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "7"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "14"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "17") (term "0,0,0,1,1") (inst "selectSK=arr_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "8"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "15"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "18") (term "0,0,0") (inst "selectSK=arr_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "16"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_homoEq" (formula "19"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                                 (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "3"))
                                 (rule "simplifySelectOfCreate" (formula "3"))
                                 (rule "eqClose" (formula "3") (term "1,0,0"))
                                 (rule "concrete_and_3" (formula "3") (term "0,0"))
                                 (rule "castDel" (formula "3") (term "1,0"))
                                 (rule "eqSymm" (formula "3") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "19"))
                                 (rule "concrete_not_2" (formula "3") (term "1,0,0"))
                                 (rule "concrete_and_3" (formula "3") (term "0,0"))
                                 (rule "sortsDisjointModuloNull" (formula "3") (term "0,0"))
                                 (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "17"))
                                 (rule "concrete_and_2" (formula "3") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "3") (term "0"))
                                 (rule "applyEqReverse" (formula "1") (term "0,0,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_3"))
                                 (rule "simplifySelectOfCreate" (formula "3"))
                                 (rule "equalUnique" (formula "3") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "3") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "3") (term "0"))
                                 (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=arr_4"))
                                 (rule "simplifySelectOfCreate" (formula "2"))
                                 (rule "equalUnique" (formula "2") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "2") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "2") (term "0"))
                                 (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "pullOutSelect" (formula "19") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (inst "selectSK=arr_5"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "17"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "20") (term "0,0,0,1,0,0,0,0,0,1") (inst "selectSK=arr_6"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "18"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "21") (term "0,0,0,1,0,0,0,1") (inst "selectSK=arr_7"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "19"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "pullOutSelect" (formula "22") (term "0,0,0,1,0,0,1") (inst "selectSK=arr_8"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "20"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "pullOutSelect" (formula "23") (term "0,0,0,1,1") (inst "selectSK=arr_9"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "21"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "pullOutSelect" (formula "24") (term "0,0,0") (inst "selectSK=arr_10"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "22"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_homoEq" (formula "25"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "25"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0"))
                                 (rule "pullOutSelect" (formula "7") (term "1,0") (inst "selectSK=arr_11"))
                                 (rule "simplifySelectOfCreate" (formula "7"))
                                 (rule "equalUnique" (formula "7") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "7") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "7") (term "0"))
                                 (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                                 (rule "equalUnique" (formula "4") (term "1,1,0,0,0"))
                                 (rule "concrete_and_4" (formula "4") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "4") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                                 (rule "equalUnique" (formula "4") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "4") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "4") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "4") (term "0"))
                                 (rule "pullOutSelect" (formula "6") (term "1,0") (inst "selectSK=arr_12"))
                                 (rule "simplifySelectOfCreate" (formula "6"))
                                 (rule "equalUnique" (formula "6") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "6") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "6") (term "0"))
                                 (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                                 (rule "equalUnique" (formula "3") (term "1,1,0,0,0"))
                                 (rule "concrete_and_4" (formula "3") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "3") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                 (rule "equalUnique" (formula "3") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "3") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "3") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=arr_13"))
                                 (rule "simplifySelectOfCreate" (formula "5"))
                                 (rule "equalUnique" (formula "5") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "5") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "5") (term "0"))
                                 (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                                 (rule "equalUnique" (formula "2") (term "1,1,0,0,0"))
                                 (rule "concrete_and_4" (formula "2") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                                 (rule "equalUnique" (formula "2") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "2") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "2") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "2") (term "0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "25") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1") (inst "selectSK=arr_14"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "23"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "26") (term "0,0,0,1,0,0,0,0,1") (inst "selectSK=arr_15"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "24"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "pullOutSelect" (formula "27") (term "0,0,0,1,0,1") (inst "selectSK=arr_16"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "25"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "pullOutSelect" (formula "28") (term "0,0,0,1,1") (inst "selectSK=arr_17"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "26"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "29") (term "1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "pullOutSelect" (formula "29") (term "0,0,0") (inst "selectSK=arr_18"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "27"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_homoEq" (formula "30"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "30"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "0"))
                                 (rule "pullOutSelect" (formula "9") (term "1,0") (inst "selectSK=arr_19"))
                                 (rule "simplifySelectOfCreate" (formula "9"))
                                 (rule "equalUnique" (formula "9") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "9") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "9") (term "0"))
                                 (rule "applyEqReverse" (formula "10") (term "1,0") (ifseqformula "9"))
                                 (rule "hideAuxiliaryEq" (formula "9"))
                                 (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "4") (term "0,0,0,0"))
                                 (rule "equalUnique" (formula "4") (term "1,0,0,0,0"))
                                 (rule "concrete_and_4" (formula "4") (term "0,0,0,0"))
                                 (rule "concrete_or_2" (formula "4") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                                 (rule "equalUnique" (formula "4") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "4") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "4") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "4") (term "0"))
                                 (rule "pullOutSelect" (formula "8") (term "1,0") (inst "selectSK=arr_20"))
                                 (rule "simplifySelectOfCreate" (formula "8"))
                                 (rule "equalUnique" (formula "8") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "8") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "8") (term "0"))
                                 (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                 (rule "hideAuxiliaryEq" (formula "8"))
                                 (rule "pullOutSelect" (formula "7") (term "1,0") (inst "selectSK=arr_21"))
                                 (rule "simplifySelectOfCreate" (formula "7"))
                                 (rule "equalUnique" (formula "7") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "7") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "7") (term "0"))
                                 (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "pullOutSelect" (formula "6") (term "1,0") (inst "selectSK=arr_22"))
                                 (rule "simplifySelectOfCreate" (formula "6"))
                                 (rule "equalUnique" (formula "6") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "6") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "6") (term "0"))
                                 (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                                 (rule "equalUnique" (formula "3") (term "1,1,0,0,0"))
                                 (rule "concrete_and_4" (formula "3") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "3") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                 (rule "equalUnique" (formula "3") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "3") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "3") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=arr_23"))
                                 (rule "simplifySelectOfCreate" (formula "5"))
                                 (rule "equalUnique" (formula "5") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "5") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "5") (term "0"))
                                 (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                                 (rule "equalUnique" (formula "2") (term "1,1,0,0,0"))
                                 (rule "concrete_and_4" (formula "2") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                                 (rule "equalUnique" (formula "2") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "2") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "2") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "2") (term "0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "30") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (inst "selectSK=arr_24"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "28"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "31") (term "0,0,0,1,0,0,0,0,0,0,0,1") (inst "selectSK=arr_25"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "29"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "pullOutSelect" (formula "32") (term "0,0,0,1,1") (inst "selectSK=arr_26"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "30"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=arr_27"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "31"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_homoEq" (formula "34"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "34"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "0"))
                                 (rule "pullOutSelect" (formula "8") (term "1,0") (inst "selectSK=arr_28"))
                                 (rule "simplifySelectOfCreate" (formula "8"))
                                 (rule "equalUnique" (formula "8") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "8") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "8") (term "0"))
                                 (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                 (rule "hideAuxiliaryEq" (formula "8"))
                                 (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0,0,0"))
                                 (rule "equalUnique" (formula "3") (term "1,0,0,0,0"))
                                 (rule "concrete_and_4" (formula "3") (term "0,0,0,0"))
                                 (rule "concrete_or_2" (formula "3") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                 (rule "equalUnique" (formula "3") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "3") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "3") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "pullOutSelect" (formula "7") (term "1,0") (inst "selectSK=arr_29"))
                                 (rule "simplifySelectOfCreate" (formula "7"))
                                 (rule "equalUnique" (formula "7") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "7") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "7") (term "0"))
                                 (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "22"))
                                 (rule "notLeft" (formula "22"))
                                 (rule "pullOutSelect" (formula "6") (term "1,0") (inst "selectSK=arr_30"))
                                 (rule "simplifySelectOfCreate" (formula "6"))
                                 (rule "equalUnique" (formula "6") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "6") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "6") (term "0"))
                                 (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                                 (rule "equalUnique" (formula "2") (term "1,1,0,0,0"))
                                 (rule "concrete_and_4" (formula "2") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                                 (rule "equalUnique" (formula "2") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "2") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "2") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=arr_31"))
                                 (rule "simplifySelectOfCreate" (formula "5"))
                                 (rule "equalUnique" (formula "5") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "5") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "5") (term "0"))
                                 (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "4") (term "1,0") (inst "selectSK=arr_32"))
                                 (rule "simplifySelectOfCreate" (formula "4"))
                                 (rule "equalUnique" (formula "4") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "4") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "4") (term "0"))
                                 (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "pullOutSelect" (formula "34") (term "0,0,0,1,0,0,0,1") (inst "selectSK=arr_33"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "32"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "35") (term "0,0,0,1,0,1") (inst "selectSK=arr_34"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "33"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "pullOutSelect" (formula "36") (term "0,0,0,1,1") (inst "selectSK=arr_35"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "34"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "37") (term "1"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "pullOutSelect" (formula "37") (term "0,0,0") (inst "selectSK=arr_36"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "35"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_homoEq" (formula "38"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "38"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "0"))
                                 (rule "pullOutSelect" (formula "7") (term "1,0") (inst "selectSK=arr_37"))
                                 (rule "simplifySelectOfCreate" (formula "7"))
                                 (rule "equalUnique" (formula "7") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "7") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "7") (term "0"))
                                 (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                                 (rule "equalUnique" (formula "3") (term "1,1,0,0,0"))
                                 (rule "concrete_and_4" (formula "3") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "3") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                 (rule "equalUnique" (formula "3") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "3") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "3") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "pullOutSelect" (formula "6") (term "1,0") (inst "selectSK=arr_38"))
                                 (rule "simplifySelectOfCreate" (formula "6"))
                                 (rule "equalUnique" (formula "6") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "6") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "6") (term "0"))
                                 (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=arr_39"))
                                 (rule "simplifySelectOfCreate" (formula "5"))
                                 (rule "equalUnique" (formula "5") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "5") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "5") (term "0"))
                                 (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                                 (rule "equalUnique" (formula "2") (term "1,1,0,0,0"))
                                 (rule "concrete_and_4" (formula "2") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                                 (rule "equalUnique" (formula "2") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "2") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "2") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "2") (term "0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "4") (term "1,0") (inst "selectSK=arr_40"))
                                 (rule "simplifySelectOfCreate" (formula "4"))
                                 (rule "equalUnique" (formula "4") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "4") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "4") (term "0"))
                                 (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "arrayLengthNotNegative" (formula "33") (term "0"))
                                 (rule "applyEq" (formula "33") (term "0") (ifseqformula "34"))
                                 (rule "qeq_literals" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "arrayLengthIsAShort" (formula "33") (term "0"))
                                 (rule "expand_inShort" (formula "33"))
                                 (rule "replace_short_MIN" (formula "33") (term "0,1"))
                                 (rule "replace_short_MAX" (formula "33") (term "1,0"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "inEqSimp_commuteLeq" (formula "34"))
                                 (rule "applyEq" (formula "33") (term "0") (ifseqformula "35"))
                                 (rule "leq_literals" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "applyEq" (formula "33") (term "0") (ifseqformula "34"))
                                 (rule "qeq_literals" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "pullOutSelect" (formula "38") (term "0,0,0,1,0,0,0,0,0,0,1") (inst "selectSK=arr_41"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "36"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "39") (term "0,0,0,1,1") (inst "selectSK=arr_42"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "37"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "40") (term "1"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "pullOutSelect" (formula "40") (term "0,0,0") (inst "selectSK=arr_43"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "38"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_homoEq" (formula "41"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "41"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "0"))
                                 (rule "pullOutSelect" (formula "6") (term "1,0") (inst "selectSK=arr_44"))
                                 (rule "simplifySelectOfCreate" (formula "6"))
                                 (rule "equalUnique" (formula "6") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "6") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "6") (term "0"))
                                 (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                                 (rule "equalUnique" (formula "2") (term "1,1,0,0,0"))
                                 (rule "concrete_and_4" (formula "2") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                                 (rule "equalUnique" (formula "2") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "2") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "2") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=arr_45"))
                                 (rule "simplifySelectOfCreate" (formula "5"))
                                 (rule "equalUnique" (formula "5") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "5") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "5") (term "0"))
                                 (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "pullOutSelect" (formula "4") (term "1,0") (inst "selectSK=arr_46"))
                                 (rule "simplifySelectOfCreate" (formula "4"))
                                 (rule "equalUnique" (formula "4") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "4") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "4") (term "0"))
                                 (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "nnf_imp2or" (formula "33") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_47"))
                                 (rule "simplifySelectOfCreate" (formula "3"))
                                 (rule "equalUnique" (formula "3") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "3") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "3") (term "0"))
                                 (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "pullOutSelect" (formula "41") (term "0,0,0,1,0,1") (inst "selectSK=arr_48"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "39"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,0,0,0,0,0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "42") (term "0,0,0,1,1") (inst "selectSK=arr_49"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "40"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "43") (term "1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0,0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "pullOutSelect" (formula "43") (term "0,0,0") (inst "selectSK=arr_50"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "41"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_homoEq" (formula "44"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0,0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "44"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "0"))
                                 (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                 (rule "equalUnique" (formula "2") (term "1,0,0,0,0"))
                                 (rule "concrete_and_4" (formula "2") (term "0,0,0,0"))
                                 (rule "concrete_or_2" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                                 (rule "equalUnique" (formula "2") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "2") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "2") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=arr_51"))
                                 (rule "simplifySelectOfCreate" (formula "5"))
                                 (rule "equalUnique" (formula "5") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "5") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "5") (term "0"))
                                 (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "4") (term "1,0") (inst "selectSK=arr_52"))
                                 (rule "simplifySelectOfCreate" (formula "4"))
                                 (rule "equalUnique" (formula "4") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "4") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "4") (term "0"))
                                 (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_53"))
                                 (rule "simplifySelectOfCreate" (formula "3"))
                                 (rule "equalUnique" (formula "3") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "3") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "3") (term "0"))
                                 (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "pullOutSelect" (formula "44") (term "0,0,0,1,0,0,1") (inst "selectSK=arr_54"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "42"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "45") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "45") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "45") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "45") (term "0,0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "45") (term "0,0,0,1,1") (inst "selectSK=arr_55"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "43"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "46") (term "1"))
                                 (rule "polySimp_addComm1" (formula "46") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "46") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "46") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "46") (term "0,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_56"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "44"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_homoEq" (formula "47"))
                                 (rule "polySimp_addComm1" (formula "47") (term "0"))
                                 (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "47") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "47") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "47") (term "0,0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "47"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                 (rule "polySimp_elimOne" (formula "47") (term "0"))
                                 (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=arr_57"))
                                 (rule "simplifySelectOfCreate" (formula "5"))
                                 (rule "equalUnique" (formula "5") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "5") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "5") (term "0"))
                                 (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "pullOutSelect" (formula "4") (term "1,0") (inst "selectSK=arr_58"))
                                 (rule "simplifySelectOfCreate" (formula "4"))
                                 (rule "equalUnique" (formula "4") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "4") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "4") (term "0"))
                                 (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_59"))
                                 (rule "simplifySelectOfCreate" (formula "3"))
                                 (rule "equalUnique" (formula "3") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "3") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "3") (term "0"))
                                 (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=arr_60"))
                                 (rule "simplifySelectOfCreate" (formula "2"))
                                 (rule "equalUnique" (formula "2") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "2") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "2") (term "0"))
                                 (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "pullOutSelect" (formula "47") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (inst "selectSK=java_util_VerifiedIdentityHashMap_size_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "47"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "1") (term "0,0,0,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "0,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "48") (term "0,0,0") (inst "selectSK=arr_61"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "46"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_homoEq" (formula "49"))
                                 (rule "polySimp_addComm1" (formula "49") (term "0"))
                                 (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "49") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000001000_6" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000001000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "49"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_62"))
                                 (rule "simplifySelectOfCreate" (formula "3"))
                                 (rule "equalUnique" (formula "3") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "3") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "3") (term "0"))
                                 (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_size_1"))
                                 (rule "simplifySelectOfStore" (formula "2"))
                                 (rule "equalUnique" (formula "2") (term "0,1,0,0"))
                                 (rule "concrete_not_2" (formula "2") (term "1,0,0"))
                                 (rule "concrete_and_3" (formula "2") (term "0,0"))
                                 (rule "eqClose" (formula "2") (term "1,0,0"))
                                 (rule "concrete_and_3" (formula "2") (term "0,0"))
                                 (rule "eqClose" (formula "2") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "2") (term "0"))
                                 (rule "castDel" (formula "2") (term "0"))
                                 (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=java_lang_Object_created__1"))
                                 (rule "simplifySelectOfCreate" (formula "2"))
                                 (rule "equalUnique" (formula "2") (term "1,0,0"))
                                 (rule "concrete_and_3" (formula "2") (term "0,0"))
                                 (rule "eqClose" (formula "2") (term "0,0,0"))
                                 (rule "concrete_and_1" (formula "2") (term "0,0"))
                                 (rule "castDel" (formula "2") (term "1,0"))
                                 (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "49"))
                                 (rule "concrete_not_2" (formula "2") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "2") (term "0"))
                                 (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "2"))
                                 (rule "boolean_equal" (formula "3") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "3") (term "0"))
                                 (rule "applyEqReverse" (formula "50") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "3"))
                                 (rule "add_zero_left" (formula "50") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_63"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "32") (term "0"))
                                 (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "49") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "33"))
                                    (rule "hideAuxiliaryEq" (formula "33"))
                                    (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "32"))
                                    (rule "ifthenelse_true" (formula "31") (term "0"))
                                    (rule "applyEqReverse" (formula "48") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "31"))
                                    (rule "hideAuxiliaryEq" (formula "31"))
                                    (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "31"))
                                    (rule "ifthenelse_true" (formula "28") (term "0"))
                                    (rule "applyEqReverse" (formula "47") (term "0,0,0,1,0,0,0,1") (ifseqformula "28"))
                                    (rule "hideAuxiliaryEq" (formula "28"))
                                    (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "30"))
                                    (rule "ifthenelse_true" (formula "29") (term "0"))
                                    (rule "applyEqReverse" (formula "46") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "29"))
                                    (rule "hideAuxiliaryEq" (formula "29"))
                                    (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "29"))
                                    (rule "ifthenelse_true" (formula "5") (term "0"))
                                    (rule "applyEqReverse" (formula "45") (term "0,0,0,1,0,0,0,0,0,0,0,1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "28"))
                                    (rule "ifthenelse_true" (formula "23") (term "0"))
                                    (rule "applyEqReverse" (formula "44") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "23"))
                                    (rule "hideAuxiliaryEq" (formula "23"))
                                    (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "27"))
                                    (rule "ifthenelse_true" (formula "16") (term "0"))
                                    (rule "applyEqReverse" (formula "43") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "16"))
                                    (rule "hideAuxiliaryEq" (formula "16"))
                                    (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "26"))
                                    (rule "ifthenelse_true" (formula "13") (term "0"))
                                    (rule "applyEqReverse" (formula "42") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "13"))
                                    (rule "hideAuxiliaryEq" (formula "13"))
                                    (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "25"))
                                    (rule "ifthenelse_true" (formula "9") (term "0"))
                                    (rule "applyEqReverse" (formula "41") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "9"))
                                    (rule "hideAuxiliaryEq" (formula "9"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "24"))
                                    (rule "ifthenelse_true" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "40") (term "0,0,0,1,0,0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "23"))
                                    (rule "ifthenelse_true" (formula "17") (term "0"))
                                    (rule "applyEqReverse" (formula "39") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "17"))
                                    (rule "hideAuxiliaryEq" (formula "17"))
                                    (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "22"))
                                    (rule "ifthenelse_true" (formula "15") (term "0"))
                                    (rule "applyEqReverse" (formula "38") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "15"))
                                    (rule "hideAuxiliaryEq" (formula "15"))
                                    (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "21"))
                                    (rule "ifthenelse_true" (formula "16") (term "0"))
                                    (rule "applyEqReverse" (formula "37") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "16"))
                                    (rule "hideAuxiliaryEq" (formula "16"))
                                    (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "20"))
                                    (rule "ifthenelse_true" (formula "7") (term "0"))
                                    (rule "applyEqReverse" (formula "36") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "19"))
                                    (rule "ifthenelse_true" (formula "7") (term "0"))
                                    (rule "applyEqReverse" (formula "35") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "18"))
                                    (rule "ifthenelse_true" (formula "13") (term "0"))
                                    (rule "applyEqReverse" (formula "34") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "13"))
                                    (rule "hideAuxiliaryEq" (formula "13"))
                                    (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "17"))
                                    (rule "ifthenelse_true" (formula "15") (term "0"))
                                    (rule "applyEqReverse" (formula "33") (term "0,0,0,1,0,1") (ifseqformula "15"))
                                    (rule "hideAuxiliaryEq" (formula "15"))
                                    (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "16"))
                                    (rule "ifthenelse_true" (formula "5") (term "0"))
                                    (rule "applyEqReverse" (formula "32") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "15"))
                                    (rule "ifthenelse_true" (formula "13") (term "0"))
                                    (rule "applyEqReverse" (formula "31") (term "0,0,0,1,1") (ifseqformula "13"))
                                    (rule "hideAuxiliaryEq" (formula "13"))
                                    (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "14"))
                                    (rule "ifthenelse_true" (formula "12") (term "0"))
                                    (rule "applyEqReverse" (formula "30") (term "0,0,0") (ifseqformula "12"))
                                    (rule "hideAuxiliaryEq" (formula "12"))
                                    (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "13"))
                                    (rule "ifthenelse_true" (formula "2") (term "0"))
                                    (rule "applyEqReverse" (formula "29") (term "0,0,0,1,0,0,0,0,0,1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "12"))
                                    (rule "ifthenelse_true" (formula "4") (term "0"))
                                    (rule "applyEqReverse" (formula "28") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "11"))
                                    (rule "ifthenelse_true" (formula "8") (term "0"))
                                    (rule "applyEqReverse" (formula "27") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "10"))
                                    (rule "ifthenelse_true" (formula "9") (term "0"))
                                    (rule "applyEqReverse" (formula "26") (term "0,0,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "9"))
                                    (rule "hideAuxiliaryEq" (formula "9"))
                                    (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "9"))
                                    (rule "ifthenelse_true" (formula "7") (term "0"))
                                    (rule "applyEqReverse" (formula "25") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "8"))
                                    (rule "ifthenelse_true" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "24") (term "0,0,0,1,0,0,0,0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "7"))
                                    (rule "ifthenelse_true" (formula "6") (term "0"))
                                    (rule "applyEqReverse" (formula "23") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "6"))
                                    (rule "ifthenelse_true" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "22") (term "0,0,0,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "5"))
                                    (rule "ifthenelse_true" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "21") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "4"))
                                    (rule "ifthenelse_true" (formula "2") (term "0"))
                                    (rule "applyEqReverse" (formula "20") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "3"))
                                    (rule "ifthenelse_true" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "19") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                                    (rule "ifthenelse_true" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "18") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_homoEq" (formula "17"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0"))
                                    (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0,0") (ifseqformula "5"))
                                    (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "15"))
                                    (rule "concrete_or_2" (formula "8"))
                                    (rule "commute_or_2" (formula "10") (term "0"))
                                    (rule "commute_or" (formula "10") (term "0,0"))
                                    (rule "commute_or_2" (formula "10") (term "0"))
                                    (rule "ifthenelse_split" (formula "18") (term "0,1,1"))
                                    (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>)[48] = null TRUE"
                                       (rule "times_zero_2" (formula "19") (term "1,1"))
                                       (rule "add_zero_right" (formula "19") (term "1"))
                                       (rule "ifthenelse_split" (formula "19") (term "0"))
                                       (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>)[58] = null TRUE"
                                          (rule "polySimp_homoEq" (formula "20"))
                                          (rule "times_zero_2" (formula "20") (term "1,0"))
                                          (rule "add_zero_right" (formula "20") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "20"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0"))
                                          (rule "allLeft" (formula "12") (inst "t=Z(0(1(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_85" (formula "12") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_134" (formula "12") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "12") (term "1"))
                                          (rule "concrete_or_4" (formula "12"))
                                          (rule "leq_literals" (formula "12") (term "1"))
                                          (rule "concrete_or_4" (formula "12"))
                                          (rule "replace_known_left" (formula "21") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "12"))
                                          (rule "ifthenelse_true" (formula "21") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "allLeft" (formula "13") (inst "t=Z(0(2(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_39" (formula "13") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_129" (formula "13") (term "0,0,0"))
                                          (rule "leq_literals" (formula "13") (term "1,0"))
                                          (rule "concrete_or_4" (formula "13") (term "0"))
                                          (rule "qeq_literals" (formula "13") (term "1"))
                                          (rule "concrete_or_4" (formula "13"))
                                          (rule "replace_known_left" (formula "22") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "13"))
                                          (rule "ifthenelse_true" (formula "22") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "allLeft" (formula "14") (inst "t=Z(8(5(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_5" (formula "14") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_110" (formula "14") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "14") (term "1"))
                                          (rule "concrete_or_4" (formula "14"))
                                          (rule "leq_literals" (formula "14") (term "1"))
                                          (rule "concrete_or_4" (formula "14"))
                                          (rule "allLeft" (formula "14") (inst "t=Z(8(4(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_4" (formula "14") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_108" (formula "14") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "14") (term "1"))
                                          (rule "concrete_or_4" (formula "14"))
                                          (rule "leq_literals" (formula "14") (term "1"))
                                          (rule "concrete_or_4" (formula "14"))
                                          (rule "allLeft" (formula "14") (inst "t=Z(8(3(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_17" (formula "14") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_112" (formula "14") (term "0,0,0"))
                                          (rule "leq_literals" (formula "14") (term "1,0"))
                                          (rule "concrete_or_4" (formula "14") (term "0"))
                                          (rule "qeq_literals" (formula "14") (term "1"))
                                          (rule "concrete_or_4" (formula "14"))
                                          (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "14"))
                                          (rule "ifthenelse_true" (formula "23") (term "0"))
                                          (rule "polySimp_homoEq" (formula "23"))
                                          (rule "mul_literals" (formula "23") (term "1,0"))
                                          (rule "add_zero_right" (formula "23") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "23"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0"))
                                          (rule "allLeft" (formula "15") (inst "t=Z(8(2(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_16" (formula "15") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_126" (formula "15") (term "0,0,0"))
                                          (rule "leq_literals" (formula "15") (term "1,0"))
                                          (rule "concrete_or_4" (formula "15") (term "0"))
                                          (rule "qeq_literals" (formula "15") (term "1"))
                                          (rule "concrete_or_4" (formula "15"))
                                          (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "15"))
                                          (rule "ifthenelse_true" (formula "24") (term "0"))
                                          (rule "polySimp_homoEq" (formula "24"))
                                          (rule "mul_literals" (formula "24") (term "1,0"))
                                          (rule "add_zero_right" (formula "24") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "24"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "0"))
                                          (rule "allLeft" (formula "16") (inst "t=Z(8(1(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_28" (formula "16") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_133" (formula "16") (term "0,0,0"))
                                          (rule "leq_literals" (formula "16") (term "1,0"))
                                          (rule "concrete_or_4" (formula "16") (term "0"))
                                          (rule "qeq_literals" (formula "16") (term "1"))
                                          (rule "concrete_or_4" (formula "16"))
                                          (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "16"))
                                          (rule "ifthenelse_true" (formula "25") (term "0"))
                                          (rule "polySimp_homoEq" (formula "25"))
                                          (rule "mul_literals" (formula "25") (term "1,0"))
                                          (rule "add_zero_right" (formula "25") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "25"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0"))
                                          (rule "allLeft" (formula "17") (inst "t=Z(8(#))"))
                                          (rule "replaceKnownSelect_taclet10000001000_15" (formula "17") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_125" (formula "17") (term "0,0,0"))
                                          (rule "leq_literals" (formula "17") (term "1,0"))
                                          (rule "concrete_or_4" (formula "17") (term "0"))
                                          (rule "qeq_literals" (formula "17") (term "1"))
                                          (rule "concrete_or_4" (formula "17"))
                                          (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "17"))
                                          (rule "ifthenelse_true" (formula "26") (term "0"))
                                          (rule "polySimp_homoEq" (formula "26"))
                                          (rule "mul_literals" (formula "26") (term "1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "26"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "0"))
                                          (rule "allLeft" (formula "18") (inst "t=Z(6(5(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_14" (formula "18") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_123" (formula "18") (term "0,0,0"))
                                          (rule "leq_literals" (formula "18") (term "1,0"))
                                          (rule "concrete_or_4" (formula "18") (term "0"))
                                          (rule "qeq_literals" (formula "18") (term "1"))
                                          (rule "concrete_or_4" (formula "18"))
                                          (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "18"))
                                          (rule "ifthenelse_true" (formula "27") (term "0"))
                                          (rule "polySimp_homoEq" (formula "27"))
                                          (rule "mul_literals" (formula "27") (term "1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "0"))
                                          (rule "allLeft" (formula "19") (inst "t=Z(6(4(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_27" (formula "19") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_118" (formula "19") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "19") (term "1"))
                                          (rule "concrete_or_4" (formula "19"))
                                          (rule "leq_literals" (formula "19") (term "1"))
                                          (rule "concrete_or_4" (formula "19"))
                                          (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "19"))
                                          (rule "ifthenelse_true" (formula "28") (term "0"))
                                          (rule "polySimp_homoEq" (formula "28"))
                                          (rule "mul_literals" (formula "28") (term "1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "28"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0"))
                                          (rule "allLeft" (formula "20") (inst "t=Z(6(3(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_13" (formula "20") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_109" (formula "20") (term "0,0,0"))
                                          (rule "leq_literals" (formula "20") (term "1,0"))
                                          (rule "concrete_or_4" (formula "20") (term "0"))
                                          (rule "qeq_literals" (formula "20") (term "1"))
                                          (rule "concrete_or_4" (formula "20"))
                                          (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "20"))
                                          (rule "ifthenelse_true" (formula "29") (term "0"))
                                          (rule "polySimp_homoEq" (formula "29"))
                                          (rule "mul_literals" (formula "29") (term "1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "29"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "0"))
                                          (rule "allLeft" (formula "21") (inst "t=Z(6(2(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_26" (formula "21") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_122" (formula "21") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "21") (term "1"))
                                          (rule "concrete_or_4" (formula "21"))
                                          (rule "leq_literals" (formula "21") (term "1"))
                                          (rule "concrete_or_4" (formula "21"))
                                          (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "21"))
                                          (rule "ifthenelse_true" (formula "30") (term "0"))
                                          (rule "polySimp_homoEq" (formula "30"))
                                          (rule "mul_literals" (formula "30") (term "1,0"))
                                          (rule "add_zero_right" (formula "30") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "30"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "0"))
                                          (rule "allLeft" (formula "22") (inst "t=Z(6(1(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_42" (formula "22") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_138" (formula "22") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "22") (term "1"))
                                          (rule "concrete_or_4" (formula "22"))
                                          (rule "leq_literals" (formula "22") (term "1"))
                                          (rule "concrete_or_4" (formula "22"))
                                          (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "22"))
                                          (rule "ifthenelse_true" (formula "31") (term "0"))
                                          (rule "polySimp_homoEq" (formula "31"))
                                          (rule "mul_literals" (formula "31") (term "1,0"))
                                          (rule "add_zero_right" (formula "31") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "31"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "0"))
                                          (rule "allLeft" (formula "23") (inst "t=Z(2(6(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_41" (formula "23") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_131" (formula "23") (term "0,0,0"))
                                          (rule "leq_literals" (formula "23") (term "1,0"))
                                          (rule "concrete_or_4" (formula "23") (term "0"))
                                          (rule "qeq_literals" (formula "23") (term "1"))
                                          (rule "concrete_or_4" (formula "23"))
                                          (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "23"))
                                          (rule "ifthenelse_true" (formula "32") (term "0"))
                                          (rule "polySimp_homoEq" (formula "32"))
                                          (rule "mul_literals" (formula "32") (term "1,0"))
                                          (rule "add_zero_right" (formula "32") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "32"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "0"))
                                          (rule "allLeft" (formula "24") (inst "t=Z(0(6(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_25" (formula "24") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_117" (formula "24") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "24") (term "1"))
                                          (rule "concrete_or_4" (formula "24"))
                                          (rule "leq_literals" (formula "24") (term "1"))
                                          (rule "concrete_or_4" (formula "24"))
                                          (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "24"))
                                          (rule "ifthenelse_true" (formula "33") (term "0"))
                                          (rule "polySimp_homoEq" (formula "33"))
                                          (rule "mul_literals" (formula "33") (term "1,0"))
                                          (rule "add_zero_right" (formula "33") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "33"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "0"))
                                          (rule "allLeft" (formula "25") (inst "t=Z(6(#))"))
                                          (rule "replaceKnownSelect_taclet10000001000_56" (formula "25") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_121" (formula "25") (term "0,0,0"))
                                          (rule "leq_literals" (formula "25") (term "1,0"))
                                          (rule "concrete_or_4" (formula "25") (term "0"))
                                          (rule "qeq_literals" (formula "25") (term "1"))
                                          (rule "concrete_or_4" (formula "25"))
                                          (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "25"))
                                          (rule "ifthenelse_true" (formula "34") (term "0"))
                                          (rule "polySimp_homoEq" (formula "34"))
                                          (rule "mul_literals" (formula "34") (term "1,0"))
                                          (rule "add_zero_right" (formula "34") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "34"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "0"))
                                          (rule "allLeft" (formula "26") (inst "t=Z(4(5(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_55" (formula "26") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_137" (formula "26") (term "0,0,0"))
                                          (rule "leq_literals" (formula "26") (term "1,0"))
                                          (rule "concrete_or_4" (formula "26") (term "0"))
                                          (rule "qeq_literals" (formula "26") (term "1"))
                                          (rule "concrete_or_4" (formula "26"))
                                          (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "26"))
                                          (rule "ifthenelse_true" (formula "35") (term "0"))
                                          (rule "polySimp_homoEq" (formula "35"))
                                          (rule "mul_literals" (formula "35") (term "1,0"))
                                          (rule "add_zero_right" (formula "35") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "35"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                          (rule "polySimp_elimOne" (formula "35") (term "0"))
                                          (rule "allLeft" (formula "27") (inst "t=Z(2(5(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_54" (formula "27") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_136" (formula "27") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "27") (term "1"))
                                          (rule "concrete_or_4" (formula "27"))
                                          (rule "leq_literals" (formula "27") (term "1"))
                                          (rule "concrete_or_4" (formula "27"))
                                          (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "27"))
                                          (rule "ifthenelse_true" (formula "36") (term "0"))
                                          (rule "polySimp_homoEq" (formula "36"))
                                          (rule "mul_literals" (formula "36") (term "1,0"))
                                          (rule "add_zero_right" (formula "36") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "36"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "0"))
                                          (rule "allLeft" (formula "28") (inst "t=Z(0(5(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_67" (formula "28") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_128" (formula "28") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "28") (term "1"))
                                          (rule "concrete_or_4" (formula "28"))
                                          (rule "leq_literals" (formula "28") (term "1"))
                                          (rule "concrete_or_4" (formula "28"))
                                          (rule "replace_known_left" (formula "37") (term "0,0") (ifseqformula "28"))
                                          (rule "ifthenelse_true" (formula "37") (term "0"))
                                          (rule "polySimp_homoEq" (formula "37"))
                                          (rule "mul_literals" (formula "37") (term "1,0"))
                                          (rule "add_zero_right" (formula "37") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "37"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "0"))
                                          (rule "allLeft" (formula "29") (inst "t=Z(4(4(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_53" (formula "29") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_114" (formula "29") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "29") (term "1"))
                                          (rule "concrete_or_4" (formula "29"))
                                          (rule "leq_literals" (formula "29") (term "1"))
                                          (rule "concrete_or_4" (formula "29"))
                                          (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "29"))
                                          (rule "ifthenelse_true" (formula "38") (term "0"))
                                          (rule "polySimp_homoEq" (formula "38"))
                                          (rule "mul_literals" (formula "38") (term "1,0"))
                                          (rule "add_zero_right" (formula "38") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "38"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "0"))
                                          (rule "allLeft" (formula "30") (inst "t=Z(4(3(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_66" (formula "30") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_120" (formula "30") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "30") (term "1"))
                                          (rule "concrete_or_4" (formula "30"))
                                          (rule "leq_literals" (formula "30") (term "1"))
                                          (rule "concrete_or_4" (formula "30"))
                                          (rule "replace_known_left" (formula "39") (term "0,0") (ifseqformula "30"))
                                          (rule "ifthenelse_true" (formula "39") (term "0"))
                                          (rule "polySimp_homoEq" (formula "39"))
                                          (rule "mul_literals" (formula "39") (term "1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "39"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "0"))
                                          (rule "allLeft" (formula "31") (inst "t=Z(4(2(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_24" (formula "31") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_119" (formula "31") (term "0,0,0"))
                                          (rule "leq_literals" (formula "31") (term "1,0"))
                                          (rule "concrete_or_4" (formula "31") (term "0"))
                                          (rule "qeq_literals" (formula "31") (term "1"))
                                          (rule "concrete_or_4" (formula "31"))
                                          (rule "replace_known_left" (formula "40") (term "0,0") (ifseqformula "31"))
                                          (rule "ifthenelse_true" (formula "40") (term "0"))
                                          (rule "polySimp_homoEq" (formula "40"))
                                          (rule "mul_literals" (formula "40") (term "1,0"))
                                          (rule "add_zero_right" (formula "40") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "40"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "0"))
                                          (rule "allLeft" (formula "32") (inst "t=Z(4(1(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_40" (formula "32") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_113" (formula "32") (term "0,0,0"))
                                          (rule "leq_literals" (formula "32") (term "1,0"))
                                          (rule "concrete_or_4" (formula "32") (term "0"))
                                          (rule "qeq_literals" (formula "32") (term "1"))
                                          (rule "concrete_or_4" (formula "32"))
                                          (rule "replace_known_left" (formula "41") (term "0,0") (ifseqformula "32"))
                                          (rule "ifthenelse_true" (formula "41") (term "0"))
                                          (rule "polySimp_homoEq" (formula "41"))
                                          (rule "mul_literals" (formula "41") (term "1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "41"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "0"))
                                          (rule "allLeft" (formula "33") (inst "t=Z(2(4(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_78" (formula "33") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_111" (formula "33") (term "0,0,0"))
                                          (rule "leq_literals" (formula "33") (term "1,0"))
                                          (rule "concrete_or_4" (formula "33") (term "0"))
                                          (rule "qeq_literals" (formula "33") (term "1"))
                                          (rule "concrete_or_4" (formula "33"))
                                          (rule "replace_known_left" (formula "42") (term "0,0") (ifseqformula "33"))
                                          (rule "ifthenelse_true" (formula "42") (term "0"))
                                          (rule "polySimp_homoEq" (formula "42"))
                                          (rule "mul_literals" (formula "42") (term "1,0"))
                                          (rule "add_zero_right" (formula "42") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "42"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                          (rule "polySimp_elimOne" (formula "42") (term "0"))
                                          (rule "allLeft" (formula "34") (inst "t=Z(0(4(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_77" (formula "34") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_135" (formula "34") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "34") (term "1"))
                                          (rule "concrete_or_4" (formula "34"))
                                          (rule "leq_literals" (formula "34") (term "1"))
                                          (rule "concrete_or_4" (formula "34"))
                                          (rule "replace_known_left" (formula "43") (term "0,0") (ifseqformula "34"))
                                          (rule "ifthenelse_true" (formula "43") (term "0"))
                                          (rule "polySimp_homoEq" (formula "43"))
                                          (rule "mul_literals" (formula "43") (term "1,0"))
                                          (rule "add_zero_right" (formula "43") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "43"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "0"))
                                          (rule "allLeft" (formula "35") (inst "t=Z(4(#))"))
                                          (rule "replaceKnownSelect_taclet10000001000_76" (formula "35") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_124" (formula "35") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "35") (term "1"))
                                          (rule "concrete_or_4" (formula "35"))
                                          (rule "leq_literals" (formula "35") (term "1"))
                                          (rule "concrete_or_4" (formula "35"))
                                          (rule "replace_known_left" (formula "44") (term "0,0") (ifseqformula "35"))
                                          (rule "ifthenelse_true" (formula "44") (term "0"))
                                          (rule "polySimp_homoEq" (formula "44"))
                                          (rule "mul_literals" (formula "44") (term "1,0"))
                                          (rule "add_zero_right" (formula "44") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "44"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "0"))
                                          (rule "allLeft" (formula "36") (inst "t=Z(2(3(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_87" (formula "36") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_132" (formula "36") (term "0,0,0"))
                                          (rule "leq_literals" (formula "36") (term "1,0"))
                                          (rule "concrete_or_4" (formula "36") (term "0"))
                                          (rule "qeq_literals" (formula "36") (term "1"))
                                          (rule "concrete_or_4" (formula "36"))
                                          (rule "replace_known_left" (formula "45") (term "0,0") (ifseqformula "36"))
                                          (rule "ifthenelse_true" (formula "45") (term "0"))
                                          (rule "polySimp_homoEq" (formula "45"))
                                          (rule "mul_literals" (formula "45") (term "1,0"))
                                          (rule "add_zero_right" (formula "45") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "45"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "0"))
                                          (rule "allLeft" (formula "37") (inst "t=Z(0(3(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_86" (formula "37") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_127" (formula "37") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "37") (term "1"))
                                          (rule "concrete_or_4" (formula "37"))
                                          (rule "leq_literals" (formula "37") (term "1"))
                                          (rule "concrete_or_4" (formula "37"))
                                          (rule "replace_known_left" (formula "46") (term "0,0") (ifseqformula "37"))
                                          (rule "ifthenelse_true" (formula "46") (term "0"))
                                          (rule "polySimp_homoEq" (formula "46"))
                                          (rule "mul_literals" (formula "46") (term "1,0"))
                                          (rule "add_zero_right" (formula "46") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "46"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "0"))
                                          (rule "allLeft" (formula "38") (inst "t=Z(2(2(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_65" (formula "38") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_115" (formula "38") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "38") (term "1"))
                                          (rule "concrete_or_4" (formula "38"))
                                          (rule "leq_literals" (formula "38") (term "1"))
                                          (rule "concrete_or_4" (formula "38"))
                                          (rule "replace_known_left" (formula "47") (term "0,0") (ifseqformula "38"))
                                          (rule "ifthenelse_true" (formula "47") (term "0"))
                                          (rule "polySimp_homoEq" (formula "47"))
                                          (rule "mul_literals" (formula "47") (term "1,0"))
                                          (rule "add_zero_right" (formula "47") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "47"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                          (rule "polySimp_elimOne" (formula "47") (term "0"))
                                          (rule "allLeft" (formula "39") (inst "t=Z(2(1(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_3" (formula "39") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_107" (formula "39") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "39") (term "1"))
                                          (rule "concrete_or_4" (formula "39"))
                                          (rule "leq_literals" (formula "39") (term "1"))
                                          (rule "concrete_or_4" (formula "39"))
                                          (rule "replace_known_left" (formula "48") (term "0,0") (ifseqformula "39"))
                                          (rule "ifthenelse_true" (formula "48") (term "0"))
                                          (rule "polySimp_homoEq" (formula "48"))
                                          (rule "mul_literals" (formula "48") (term "1,0"))
                                          (rule "add_zero_right" (formula "48") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "48"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                          (rule "polySimp_elimOne" (formula "48") (term "0"))
                                          (rule "allLeft" (formula "40") (inst "t=Z(2(#))"))
                                          (rule "replaceKnownSelect_taclet10000001000_97" (formula "40") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_116" (formula "40") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "40") (term "1"))
                                          (rule "concrete_or_4" (formula "40"))
                                          (rule "leq_literals" (formula "40") (term "1"))
                                          (rule "concrete_or_4" (formula "40"))
                                          (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "40"))
                                          (rule "ifthenelse_true" (formula "49") (term "0"))
                                          (rule "eqSymm" (formula "49"))
                                          (rule "polySimp_invertEq" (formula "49"))
                                          (rule "mul_literals" (formula "49") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                          (rule "polySimp_elimOne" (formula "49") (term "0"))
                                          (rule "ifthenelse_concrete3" (formula "49"))
                                          (rule "equal_literals" (formula "49") (term "1"))
                                          (rule "concrete_or_4" (formula "49"))
                                          (rule "allLeft" (formula "41") (inst "t=Z(0(#))"))
                                          (rule "replaceKnownSelect_taclet10000001000_12" (formula "41") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_130" (formula "41") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "41") (term "1"))
                                          (rule "concrete_or_4" (formula "41"))
                                          (rule "leq_literals" (formula "41") (term "1"))
                                          (rule "concrete_or_4" (formula "41"))
                                          (rule "close" (formula "50") (ifseqformula "41"))
                                       )
                                       (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>)[58] = null FALSE"
                                          (rule "polySimp_homoEq" (formula "20"))
                                          (rule "mul_literals" (formula "20") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "20"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0"))
                                          (rule "allLeft" (formula "11") (inst "t=Z(0(1(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_85" (formula "11") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_134" (formula "11") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "11") (term "1"))
                                          (rule "concrete_or_4" (formula "11"))
                                          (rule "leq_literals" (formula "11") (term "1"))
                                          (rule "concrete_or_4" (formula "11"))
                                          (rule "replace_known_left" (formula "21") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "11"))
                                          (rule "ifthenelse_true" (formula "21") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "allLeft" (formula "12") (inst "t=Z(8(5(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_5" (formula "12") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_110" (formula "12") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "12") (term "1"))
                                          (rule "concrete_or_4" (formula "12"))
                                          (rule "leq_literals" (formula "12") (term "1"))
                                          (rule "concrete_or_4" (formula "12"))
                                          (rule "close" (formula "21") (ifseqformula "12"))
                                       )
                                    )
                                    (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>)[48] = null FALSE"
                                       (rule "mul_literals" (formula "19") (term "1,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "ifthenelse_split" (formula "19") (term "0"))
                                       (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>)[58] = null TRUE"
                                          (rule "polySimp_homoEq" (formula "20"))
                                          (rule "mul_literals" (formula "20") (term "1,0"))
                                          (rule "add_zero_right" (formula "20") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "20"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0"))
                                          (rule "allLeft" (formula "11") (inst "t=Z(0(1(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_85" (formula "11") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_134" (formula "11") (term "0,0,0"))
                                          (rule "leq_literals" (formula "11") (term "1,0"))
                                          (rule "concrete_or_4" (formula "11") (term "0"))
                                          (rule "qeq_literals" (formula "11") (term "1"))
                                          (rule "concrete_or_4" (formula "11"))
                                          (rule "replace_known_left" (formula "21") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "11"))
                                          (rule "ifthenelse_true" (formula "21") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "allLeft" (formula "12") (inst "t=Z(8(5(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_5" (formula "12") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_110" (formula "12") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "12") (term "1"))
                                          (rule "concrete_or_4" (formula "12"))
                                          (rule "leq_literals" (formula "12") (term "1"))
                                          (rule "concrete_or_4" (formula "12"))
                                          (rule "allLeft" (formula "12") (inst "t=Z(8(4(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_4" (formula "12") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_108" (formula "12") (term "0,0,0"))
                                          (rule "leq_literals" (formula "12") (term "1,0"))
                                          (rule "concrete_or_4" (formula "12") (term "0"))
                                          (rule "qeq_literals" (formula "12") (term "1"))
                                          (rule "concrete_or_4" (formula "12"))
                                          (rule "close" (formula "21") (ifseqformula "12"))
                                       )
                                       (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>)[58] = null FALSE"
                                          (rule "polySimp_homoEq" (formula "20"))
                                          (rule "mul_literals" (formula "20") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "20"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0"))
                                          (rule "allLeft" (formula "10") (inst "t=Z(0(1(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_85" (formula "10") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_134" (formula "10") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "10") (term "1"))
                                          (rule "concrete_or_4" (formula "10"))
                                          (rule "leq_literals" (formula "10") (term "1"))
                                          (rule "concrete_or_4" (formula "10"))
                                          (rule "replace_known_left" (formula "21") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "10"))
                                          (rule "ifthenelse_true" (formula "21") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "allLeft" (formula "11") (inst "t=Z(0(2(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_39" (formula "11") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_129" (formula "11") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "11") (term "1"))
                                          (rule "concrete_or_4" (formula "11"))
                                          (rule "leq_literals" (formula "11") (term "1"))
                                          (rule "concrete_or_4" (formula "11"))
                                          (rule "replace_known_left" (formula "22") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "11"))
                                          (rule "ifthenelse_true" (formula "22") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "allLeft" (formula "12") (inst "t=Z(8(5(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_5" (formula "12") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010000001000_110" (formula "12") (term "0,0,0"))
                                          (rule "leq_literals" (formula "12") (term "1,0"))
                                          (rule "concrete_or_4" (formula "12") (term "0"))
                                          (rule "qeq_literals" (formula "12") (term "1"))
                                          (rule "concrete_or_4" (formula "12"))
                                          (rule "close" (formula "22") (ifseqformula "12"))
                                       )
                                    )
                                 )
                                 (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE FALSE"
                                    (rule "applyEqReverse" (formula "49") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "32"))
                                    (rule "hideAuxiliaryEq" (formula "32"))
                                    (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "43"))
                                    (rule "ifthenelse_false" (formula "6") (term "0"))
                                    (rule "applyEqReverse" (formula "48") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "42"))
                                    (rule "ifthenelse_false" (formula "29") (term "0"))
                                    (rule "applyEqReverse" (formula "47") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "29"))
                                    (rule "hideAuxiliaryEq" (formula "29"))
                                    (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "41"))
                                    (rule "ifthenelse_false" (formula "24") (term "0"))
                                    (rule "applyEqReverse" (formula "46") (term "0,0,0") (ifseqformula "24"))
                                    (rule "hideAuxiliaryEq" (formula "24"))
                                    (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "40"))
                                    (rule "ifthenelse_false" (formula "4") (term "0"))
                                    (rule "applyEqReverse" (formula "45") (term "0,0,0,1,0,0,0,0,0,0,1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "39"))
                                    (rule "ifthenelse_false" (formula "14") (term "0"))
                                    (rule "applyEqReverse" (formula "44") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "14"))
                                    (rule "hideAuxiliaryEq" (formula "14"))
                                    (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "38"))
                                    (rule "ifthenelse_false" (formula "17") (term "0"))
                                    (rule "applyEqReverse" (formula "43") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "17"))
                                    (rule "hideAuxiliaryEq" (formula "17"))
                                    (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "37"))
                                    (rule "ifthenelse_false" (formula "16") (term "0"))
                                    (rule "applyEqReverse" (formula "42") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "16"))
                                    (rule "hideAuxiliaryEq" (formula "16"))
                                    (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "36"))
                                    (rule "ifthenelse_false" (formula "5") (term "0"))
                                    (rule "applyEqReverse" (formula "41") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "35"))
                                    (rule "ifthenelse_false" (formula "20") (term "0"))
                                    (rule "applyEqReverse" (formula "40") (term "0,0,0,1,0,1") (ifseqformula "20"))
                                    (rule "hideAuxiliaryEq" (formula "20"))
                                    (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "34"))
                                    (rule "ifthenelse_false" (formula "10") (term "0"))
                                    (rule "applyEqReverse" (formula "39") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "10"))
                                    (rule "hideAuxiliaryEq" (formula "10"))
                                    (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "33"))
                                    (rule "ifthenelse_false" (formula "14") (term "0"))
                                    (rule "applyEqReverse" (formula "38") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "14"))
                                    (rule "hideAuxiliaryEq" (formula "14"))
                                    (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "32"))
                                    (rule "ifthenelse_false" (formula "20") (term "0"))
                                    (rule "applyEqReverse" (formula "37") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "20"))
                                    (rule "hideAuxiliaryEq" (formula "20"))
                                    (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "31"))
                                    (rule "ifthenelse_false" (formula "17") (term "0"))
                                    (rule "applyEqReverse" (formula "36") (term "0,0,0,1,1") (ifseqformula "17"))
                                    (rule "hideAuxiliaryEq" (formula "17"))
                                    (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "30"))
                                    (rule "ifthenelse_false" (formula "9") (term "0"))
                                    (rule "applyEqReverse" (formula "35") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "9"))
                                    (rule "hideAuxiliaryEq" (formula "9"))
                                    (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "29"))
                                    (rule "ifthenelse_false" (formula "15") (term "0"))
                                    (rule "applyEqReverse" (formula "34") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "15"))
                                    (rule "hideAuxiliaryEq" (formula "15"))
                                    (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "28"))
                                    (rule "ifthenelse_false" (formula "15") (term "0"))
                                    (rule "applyEqReverse" (formula "33") (term "0,0,0,1,0,0,0,1") (ifseqformula "15"))
                                    (rule "hideAuxiliaryEq" (formula "15"))
                                    (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "27"))
                                    (rule "ifthenelse_false" (formula "10") (term "0"))
                                    (rule "applyEqReverse" (formula "32") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "10"))
                                    (rule "hideAuxiliaryEq" (formula "10"))
                                    (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "26"))
                                    (rule "ifthenelse_false" (formula "3") (term "0"))
                                    (rule "applyEqReverse" (formula "31") (term "0,0,0,1,0,0,0,0,0,1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "25"))
                                    (rule "ifthenelse_false" (formula "5") (term "0"))
                                    (rule "applyEqReverse" (formula "30") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "24"))
                                    (rule "ifthenelse_false" (formula "5") (term "0"))
                                    (rule "applyEqReverse" (formula "29") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "23"))
                                    (rule "ifthenelse_false" (formula "10") (term "0"))
                                    (rule "applyEqReverse" (formula "28") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "10"))
                                    (rule "hideAuxiliaryEq" (formula "10"))
                                    (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "22"))
                                    (rule "ifthenelse_false" (formula "3") (term "0"))
                                    (rule "applyEqReverse" (formula "27") (term "0,0,0,1,0,0,0,0,0,0,0,1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "21"))
                                    (rule "ifthenelse_false" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "26") (term "0,0,0,1,0,0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "20"))
                                    (rule "ifthenelse_false" (formula "6") (term "0"))
                                    (rule "applyEqReverse" (formula "25") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "19"))
                                    (rule "ifthenelse_false" (formula "5") (term "0"))
                                    (rule "applyEqReverse" (formula "24") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "18"))
                                    (rule "ifthenelse_false" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "23") (term "0,0,0,1,0,0,0,0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "17"))
                                    (rule "ifthenelse_false" (formula "2") (term "0"))
                                    (rule "applyEqReverse" (formula "22") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "16"))
                                    (rule "ifthenelse_false" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "21") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "15"))
                                    (rule "ifthenelse_false" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "20") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "14"))
                                    (rule "ifthenelse_false" (formula "2") (term "0"))
                                    (rule "applyEqReverse" (formula "19") (term "0,0,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "13"))
                                    (rule "ifthenelse_false" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "18") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_homoEq" (formula "17"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0"))
                                    (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                    (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "0,0") (ifseqformula "4"))
                                    (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "15"))
                                    (rule "concrete_or_2" (formula "7"))
                                    (rule "commute_or_2" (formula "9") (term "0"))
                                    (rule "commute_or" (formula "9") (term "0,0"))
                                    (rule "commute_or_2" (formula "9") (term "0"))
                                    (rule "ifthenelse_split" (formula "18") (term "0,1,1"))
                                    (branch "v_1.table[48]@anon_heap_init<<anonHeapFunction>> = null TRUE"
                                       (rule "mul_literals" (formula "19") (term "1,1"))
                                       (rule "add_zero_right" (formula "19") (term "1"))
                                       (rule "ifthenelse_split" (formula "19") (term "0"))
                                       (branch "v_1.table[58]@anon_heap_init<<anonHeapFunction>> = null TRUE"
                                          (rule "polySimp_homoEq" (formula "20"))
                                          (rule "mul_literals" (formula "20") (term "1,0"))
                                          (rule "add_zero_right" (formula "20") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "20"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0"))
                                          (rule "allLeft" (formula "11") (inst "t=Z(0(1(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_85" (formula "11") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_111" (formula "11") (term "0,0,0"))
                                          (rule "leq_literals" (formula "11") (term "1,0"))
                                          (rule "concrete_or_4" (formula "11") (term "0"))
                                          (rule "qeq_literals" (formula "11") (term "1"))
                                          (rule "concrete_or_4" (formula "11"))
                                          (rule "replace_known_left" (formula "21") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "11"))
                                          (rule "ifthenelse_true" (formula "21") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "times_zero_2" (formula "21") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "allLeft" (formula "12") (inst "t=Z(0(2(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_39" (formula "12") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_131" (formula "12") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "12") (term "1"))
                                          (rule "concrete_or_4" (formula "12"))
                                          (rule "leq_literals" (formula "12") (term "1"))
                                          (rule "concrete_or_4" (formula "12"))
                                          (rule "replace_known_left" (formula "22") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "12"))
                                          (rule "ifthenelse_true" (formula "22") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "times_zero_2" (formula "22") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "allLeft" (formula "13") (inst "t=Z(8(5(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_5" (formula "13") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_109" (formula "13") (term "0,0,0"))
                                          (rule "leq_literals" (formula "13") (term "1,0"))
                                          (rule "concrete_or_4" (formula "13") (term "0"))
                                          (rule "qeq_literals" (formula "13") (term "1"))
                                          (rule "concrete_or_4" (formula "13"))
                                          (rule "allLeft" (formula "13") (inst "t=Z(8(4(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_4" (formula "13") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_119" (formula "13") (term "0,0,0"))
                                          (rule "leq_literals" (formula "13") (term "1,0"))
                                          (rule "concrete_or_4" (formula "13") (term "0"))
                                          (rule "qeq_literals" (formula "13") (term "1"))
                                          (rule "concrete_or_4" (formula "13"))
                                          (rule "allLeft" (formula "13") (inst "t=Z(8(3(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_17" (formula "13") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_122" (formula "13") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "13") (term "1"))
                                          (rule "concrete_or_4" (formula "13"))
                                          (rule "leq_literals" (formula "13") (term "1"))
                                          (rule "concrete_or_4" (formula "13"))
                                          (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "13"))
                                          (rule "ifthenelse_true" (formula "23") (term "0"))
                                          (rule "polySimp_homoEq" (formula "23"))
                                          (rule "mul_literals" (formula "23") (term "1,0"))
                                          (rule "add_zero_right" (formula "23") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "23"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0"))
                                          (rule "allLeft" (formula "14") (inst "t=Z(8(2(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_16" (formula "14") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_110" (formula "14") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "14") (term "1"))
                                          (rule "concrete_or_4" (formula "14"))
                                          (rule "leq_literals" (formula "14") (term "1"))
                                          (rule "concrete_or_4" (formula "14"))
                                          (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "14"))
                                          (rule "ifthenelse_true" (formula "24") (term "0"))
                                          (rule "polySimp_homoEq" (formula "24"))
                                          (rule "mul_literals" (formula "24") (term "1,0"))
                                          (rule "add_zero_right" (formula "24") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "24"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "0"))
                                          (rule "allLeft" (formula "15") (inst "t=Z(8(1(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_28" (formula "15") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_114" (formula "15") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "15") (term "1"))
                                          (rule "concrete_or_4" (formula "15"))
                                          (rule "leq_literals" (formula "15") (term "1"))
                                          (rule "concrete_or_4" (formula "15"))
                                          (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "15"))
                                          (rule "ifthenelse_true" (formula "25") (term "0"))
                                          (rule "polySimp_homoEq" (formula "25"))
                                          (rule "mul_literals" (formula "25") (term "1,0"))
                                          (rule "add_zero_right" (formula "25") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "25"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0"))
                                          (rule "allLeft" (formula "16") (inst "t=Z(8(#))"))
                                          (rule "replaceKnownSelect_taclet10000001000_15" (formula "16") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_120" (formula "16") (term "0,0,0"))
                                          (rule "leq_literals" (formula "16") (term "1,0"))
                                          (rule "concrete_or_4" (formula "16") (term "0"))
                                          (rule "qeq_literals" (formula "16") (term "1"))
                                          (rule "concrete_or_4" (formula "16"))
                                          (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "16"))
                                          (rule "ifthenelse_true" (formula "26") (term "0"))
                                          (rule "polySimp_homoEq" (formula "26"))
                                          (rule "mul_literals" (formula "26") (term "1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "26"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "0"))
                                          (rule "allLeft" (formula "17") (inst "t=Z(6(5(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_14" (formula "17") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_116" (formula "17") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "17") (term "1"))
                                          (rule "concrete_or_4" (formula "17"))
                                          (rule "leq_literals" (formula "17") (term "1"))
                                          (rule "concrete_or_4" (formula "17"))
                                          (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "17"))
                                          (rule "ifthenelse_true" (formula "27") (term "0"))
                                          (rule "polySimp_homoEq" (formula "27"))
                                          (rule "mul_literals" (formula "27") (term "1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "0"))
                                          (rule "allLeft" (formula "18") (inst "t=Z(6(4(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_27" (formula "18") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_113" (formula "18") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "18") (term "1"))
                                          (rule "concrete_or_4" (formula "18"))
                                          (rule "leq_literals" (formula "18") (term "1"))
                                          (rule "concrete_or_4" (formula "18"))
                                          (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "18"))
                                          (rule "ifthenelse_true" (formula "28") (term "0"))
                                          (rule "polySimp_homoEq" (formula "28"))
                                          (rule "mul_literals" (formula "28") (term "1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "28"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0"))
                                          (rule "allLeft" (formula "19") (inst "t=Z(6(3(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_13" (formula "19") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_123" (formula "19") (term "0,0,0"))
                                          (rule "leq_literals" (formula "19") (term "1,0"))
                                          (rule "concrete_or_4" (formula "19") (term "0"))
                                          (rule "qeq_literals" (formula "19") (term "1"))
                                          (rule "concrete_or_4" (formula "19"))
                                          (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "19"))
                                          (rule "ifthenelse_true" (formula "29") (term "0"))
                                          (rule "polySimp_homoEq" (formula "29"))
                                          (rule "mul_literals" (formula "29") (term "1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "29"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "0"))
                                          (rule "allLeft" (formula "20") (inst "t=Z(6(2(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_26" (formula "20") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_118" (formula "20") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "20") (term "1"))
                                          (rule "concrete_or_4" (formula "20"))
                                          (rule "leq_literals" (formula "20") (term "1"))
                                          (rule "concrete_or_4" (formula "20"))
                                          (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "20"))
                                          (rule "ifthenelse_true" (formula "30") (term "0"))
                                          (rule "polySimp_homoEq" (formula "30"))
                                          (rule "mul_literals" (formula "30") (term "1,0"))
                                          (rule "add_zero_right" (formula "30") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "30"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "0"))
                                          (rule "allLeft" (formula "21") (inst "t=Z(6(1(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_42" (formula "21") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_124" (formula "21") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "21") (term "1"))
                                          (rule "concrete_or_4" (formula "21"))
                                          (rule "leq_literals" (formula "21") (term "1"))
                                          (rule "concrete_or_4" (formula "21"))
                                          (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "21"))
                                          (rule "ifthenelse_true" (formula "31") (term "0"))
                                          (rule "polySimp_homoEq" (formula "31"))
                                          (rule "mul_literals" (formula "31") (term "1,0"))
                                          (rule "add_zero_right" (formula "31") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "31"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "0"))
                                          (rule "allLeft" (formula "22") (inst "t=Z(2(6(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_41" (formula "22") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_112" (formula "22") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "22") (term "1"))
                                          (rule "concrete_or_4" (formula "22"))
                                          (rule "leq_literals" (formula "22") (term "1"))
                                          (rule "concrete_or_4" (formula "22"))
                                          (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "22"))
                                          (rule "ifthenelse_true" (formula "32") (term "0"))
                                          (rule "polySimp_homoEq" (formula "32"))
                                          (rule "mul_literals" (formula "32") (term "1,0"))
                                          (rule "add_zero_right" (formula "32") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "32"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "0"))
                                          (rule "allLeft" (formula "23") (inst "t=Z(0(6(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_25" (formula "23") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_138" (formula "23") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "23") (term "1"))
                                          (rule "concrete_or_4" (formula "23"))
                                          (rule "leq_literals" (formula "23") (term "1"))
                                          (rule "concrete_or_4" (formula "23"))
                                          (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "23"))
                                          (rule "ifthenelse_true" (formula "33") (term "0"))
                                          (rule "polySimp_homoEq" (formula "33"))
                                          (rule "mul_literals" (formula "33") (term "1,0"))
                                          (rule "add_zero_right" (formula "33") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "33"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "0"))
                                          (rule "allLeft" (formula "24") (inst "t=Z(6(#))"))
                                          (rule "replaceKnownSelect_taclet10000001000_56" (formula "24") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_134" (formula "24") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "24") (term "1"))
                                          (rule "concrete_or_4" (formula "24"))
                                          (rule "leq_literals" (formula "24") (term "1"))
                                          (rule "concrete_or_4" (formula "24"))
                                          (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "24"))
                                          (rule "ifthenelse_true" (formula "34") (term "0"))
                                          (rule "polySimp_homoEq" (formula "34"))
                                          (rule "mul_literals" (formula "34") (term "1,0"))
                                          (rule "add_zero_right" (formula "34") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "34"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "0"))
                                          (rule "allLeft" (formula "25") (inst "t=Z(4(5(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_55" (formula "25") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_121" (formula "25") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "25") (term "1"))
                                          (rule "concrete_or_4" (formula "25"))
                                          (rule "leq_literals" (formula "25") (term "1"))
                                          (rule "concrete_or_4" (formula "25"))
                                          (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "25"))
                                          (rule "ifthenelse_true" (formula "35") (term "0"))
                                          (rule "polySimp_homoEq" (formula "35"))
                                          (rule "mul_literals" (formula "35") (term "1,0"))
                                          (rule "add_zero_right" (formula "35") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "35"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                          (rule "polySimp_elimOne" (formula "35") (term "0"))
                                          (rule "allLeft" (formula "26") (inst "t=Z(2(5(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_54" (formula "26") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_117" (formula "26") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "26") (term "1"))
                                          (rule "concrete_or_4" (formula "26"))
                                          (rule "leq_literals" (formula "26") (term "1"))
                                          (rule "concrete_or_4" (formula "26"))
                                          (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "26"))
                                          (rule "ifthenelse_true" (formula "36") (term "0"))
                                          (rule "polySimp_homoEq" (formula "36"))
                                          (rule "mul_literals" (formula "36") (term "1,0"))
                                          (rule "add_zero_right" (formula "36") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "36"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "0"))
                                          (rule "allLeft" (formula "27") (inst "t=Z(0(5(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_67" (formula "27") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_135" (formula "27") (term "0,0,0"))
                                          (rule "leq_literals" (formula "27") (term "1,0"))
                                          (rule "concrete_or_4" (formula "27") (term "0"))
                                          (rule "qeq_literals" (formula "27") (term "1"))
                                          (rule "concrete_or_4" (formula "27"))
                                          (rule "replace_known_left" (formula "37") (term "0,0") (ifseqformula "27"))
                                          (rule "ifthenelse_true" (formula "37") (term "0"))
                                          (rule "polySimp_homoEq" (formula "37"))
                                          (rule "mul_literals" (formula "37") (term "1,0"))
                                          (rule "add_zero_right" (formula "37") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "37"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "0"))
                                          (rule "allLeft" (formula "28") (inst "t=Z(4(4(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_53" (formula "28") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_136" (formula "28") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "28") (term "1"))
                                          (rule "concrete_or_4" (formula "28"))
                                          (rule "leq_literals" (formula "28") (term "1"))
                                          (rule "concrete_or_4" (formula "28"))
                                          (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "28"))
                                          (rule "ifthenelse_true" (formula "38") (term "0"))
                                          (rule "polySimp_homoEq" (formula "38"))
                                          (rule "mul_literals" (formula "38") (term "1,0"))
                                          (rule "add_zero_right" (formula "38") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "38"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "0"))
                                          (rule "allLeft" (formula "29") (inst "t=Z(4(3(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_66" (formula "29") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_126" (formula "29") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "29") (term "1"))
                                          (rule "concrete_or_4" (formula "29"))
                                          (rule "leq_literals" (formula "29") (term "1"))
                                          (rule "concrete_or_4" (formula "29"))
                                          (rule "replace_known_left" (formula "39") (term "0,0") (ifseqformula "29"))
                                          (rule "ifthenelse_true" (formula "39") (term "0"))
                                          (rule "polySimp_homoEq" (formula "39"))
                                          (rule "mul_literals" (formula "39") (term "1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "39"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "0"))
                                          (rule "allLeft" (formula "30") (inst "t=Z(4(2(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_24" (formula "30") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_128" (formula "30") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "30") (term "1"))
                                          (rule "concrete_or_4" (formula "30"))
                                          (rule "leq_literals" (formula "30") (term "1"))
                                          (rule "concrete_or_4" (formula "30"))
                                          (rule "replace_known_left" (formula "40") (term "0,0") (ifseqformula "30"))
                                          (rule "ifthenelse_true" (formula "40") (term "0"))
                                          (rule "polySimp_homoEq" (formula "40"))
                                          (rule "mul_literals" (formula "40") (term "1,0"))
                                          (rule "add_zero_right" (formula "40") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "40"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "0"))
                                          (rule "allLeft" (formula "31") (inst "t=Z(4(1(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_40" (formula "31") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_132" (formula "31") (term "0,0,0"))
                                          (rule "leq_literals" (formula "31") (term "1,0"))
                                          (rule "concrete_or_4" (formula "31") (term "0"))
                                          (rule "qeq_literals" (formula "31") (term "1"))
                                          (rule "concrete_or_4" (formula "31"))
                                          (rule "replace_known_left" (formula "41") (term "0,0") (ifseqformula "31"))
                                          (rule "ifthenelse_true" (formula "41") (term "0"))
                                          (rule "polySimp_homoEq" (formula "41"))
                                          (rule "mul_literals" (formula "41") (term "1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "41"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "0"))
                                          (rule "allLeft" (formula "32") (inst "t=Z(2(4(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_78" (formula "32") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_129" (formula "32") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "32") (term "1"))
                                          (rule "concrete_or_4" (formula "32"))
                                          (rule "leq_literals" (formula "32") (term "1"))
                                          (rule "concrete_or_4" (formula "32"))
                                          (rule "replace_known_left" (formula "42") (term "0,0") (ifseqformula "32"))
                                          (rule "ifthenelse_true" (formula "42") (term "0"))
                                          (rule "polySimp_homoEq" (formula "42"))
                                          (rule "mul_literals" (formula "42") (term "1,0"))
                                          (rule "add_zero_right" (formula "42") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "42"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                          (rule "polySimp_elimOne" (formula "42") (term "0"))
                                          (rule "allLeft" (formula "33") (inst "t=Z(0(4(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_77" (formula "33") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_108" (formula "33") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "33") (term "1"))
                                          (rule "concrete_or_4" (formula "33"))
                                          (rule "leq_literals" (formula "33") (term "1"))
                                          (rule "concrete_or_4" (formula "33"))
                                          (rule "replace_known_left" (formula "43") (term "0,0") (ifseqformula "33"))
                                          (rule "ifthenelse_true" (formula "43") (term "0"))
                                          (rule "polySimp_homoEq" (formula "43"))
                                          (rule "mul_literals" (formula "43") (term "1,0"))
                                          (rule "add_zero_right" (formula "43") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "43"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "0"))
                                          (rule "allLeft" (formula "34") (inst "t=Z(4(#))"))
                                          (rule "replaceKnownSelect_taclet10000001000_76" (formula "34") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_115" (formula "34") (term "0,0,0"))
                                          (rule "leq_literals" (formula "34") (term "1,0"))
                                          (rule "concrete_or_4" (formula "34") (term "0"))
                                          (rule "qeq_literals" (formula "34") (term "1"))
                                          (rule "concrete_or_4" (formula "34"))
                                          (rule "replace_known_left" (formula "44") (term "0,0") (ifseqformula "34"))
                                          (rule "ifthenelse_true" (formula "44") (term "0"))
                                          (rule "polySimp_homoEq" (formula "44"))
                                          (rule "mul_literals" (formula "44") (term "1,0"))
                                          (rule "add_zero_right" (formula "44") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "44"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "0"))
                                          (rule "allLeft" (formula "35") (inst "t=Z(2(3(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_87" (formula "35") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_133" (formula "35") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "35") (term "1"))
                                          (rule "concrete_or_4" (formula "35"))
                                          (rule "leq_literals" (formula "35") (term "1"))
                                          (rule "concrete_or_4" (formula "35"))
                                          (rule "replace_known_left" (formula "45") (term "0,0") (ifseqformula "35"))
                                          (rule "ifthenelse_true" (formula "45") (term "0"))
                                          (rule "polySimp_homoEq" (formula "45"))
                                          (rule "mul_literals" (formula "45") (term "1,0"))
                                          (rule "add_zero_right" (formula "45") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "45"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "0"))
                                          (rule "allLeft" (formula "36") (inst "t=Z(0(3(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_86" (formula "36") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_125" (formula "36") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "36") (term "1"))
                                          (rule "concrete_or_4" (formula "36"))
                                          (rule "leq_literals" (formula "36") (term "1"))
                                          (rule "concrete_or_4" (formula "36"))
                                          (rule "replace_known_left" (formula "46") (term "0,0") (ifseqformula "36"))
                                          (rule "ifthenelse_true" (formula "46") (term "0"))
                                          (rule "polySimp_homoEq" (formula "46"))
                                          (rule "mul_literals" (formula "46") (term "1,0"))
                                          (rule "add_zero_right" (formula "46") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "46"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "0"))
                                          (rule "allLeft" (formula "37") (inst "t=Z(2(2(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_65" (formula "37") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_127" (formula "37") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "37") (term "1"))
                                          (rule "concrete_or_4" (formula "37"))
                                          (rule "leq_literals" (formula "37") (term "1"))
                                          (rule "concrete_or_4" (formula "37"))
                                          (rule "replace_known_left" (formula "47") (term "0,0") (ifseqformula "37"))
                                          (rule "ifthenelse_true" (formula "47") (term "0"))
                                          (rule "polySimp_homoEq" (formula "47"))
                                          (rule "mul_literals" (formula "47") (term "1,0"))
                                          (rule "add_zero_right" (formula "47") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "47"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                          (rule "polySimp_elimOne" (formula "47") (term "0"))
                                          (rule "allLeft" (formula "38") (inst "t=Z(2(1(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_3" (formula "38") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_107" (formula "38") (term "0,0,0"))
                                          (rule "leq_literals" (formula "38") (term "1,0"))
                                          (rule "concrete_or_4" (formula "38") (term "0"))
                                          (rule "qeq_literals" (formula "38") (term "1"))
                                          (rule "concrete_or_4" (formula "38"))
                                          (rule "replace_known_left" (formula "48") (term "0,0") (ifseqformula "38"))
                                          (rule "ifthenelse_true" (formula "48") (term "0"))
                                          (rule "polySimp_homoEq" (formula "48"))
                                          (rule "times_zero_2" (formula "48") (term "1,0"))
                                          (rule "add_zero_right" (formula "48") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "48"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                          (rule "polySimp_elimOne" (formula "48") (term "0"))
                                          (rule "allLeft" (formula "39") (inst "t=Z(2(#))"))
                                          (rule "replaceKnownSelect_taclet10000001000_97" (formula "39") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_130" (formula "39") (term "0,0,0"))
                                          (rule "leq_literals" (formula "39") (term "1,0"))
                                          (rule "concrete_or_4" (formula "39") (term "0"))
                                          (rule "qeq_literals" (formula "39") (term "1"))
                                          (rule "concrete_or_4" (formula "39"))
                                          (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "39"))
                                          (rule "ifthenelse_true" (formula "49") (term "0"))
                                          (rule "eqSymm" (formula "49"))
                                          (rule "polySimp_invertEq" (formula "49"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                          (rule "mul_literals" (formula "49") (term "1"))
                                          (rule "polySimp_elimOne" (formula "49") (term "0"))
                                          (rule "ifthenelse_concrete3" (formula "49"))
                                          (rule "equal_literals" (formula "49") (term "1"))
                                          (rule "concrete_or_4" (formula "49"))
                                          (rule "allLeft" (formula "40") (inst "t=Z(0(#))"))
                                          (rule "replaceKnownSelect_taclet10000001000_12" (formula "40") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_137" (formula "40") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "40") (term "1"))
                                          (rule "concrete_or_4" (formula "40"))
                                          (rule "leq_literals" (formula "40") (term "1"))
                                          (rule "concrete_or_4" (formula "40"))
                                          (rule "close" (formula "50") (ifseqformula "40"))
                                       )
                                       (branch "v_1.table[58]@anon_heap_init<<anonHeapFunction>> = null FALSE"
                                          (rule "polySimp_homoEq" (formula "20"))
                                          (rule "mul_literals" (formula "20") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "20"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0"))
                                          (rule "allLeft" (formula "10") (inst "t=Z(0(1(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_85" (formula "10") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_111" (formula "10") (term "0,0,0"))
                                          (rule "leq_literals" (formula "10") (term "1,0"))
                                          (rule "concrete_or_4" (formula "10") (term "0"))
                                          (rule "qeq_literals" (formula "10") (term "1"))
                                          (rule "concrete_or_4" (formula "10"))
                                          (rule "replace_known_left" (formula "21") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "10"))
                                          (rule "ifthenelse_true" (formula "21") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "times_zero_2" (formula "21") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "allLeft" (formula "11") (inst "t=Z(8(5(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_5" (formula "11") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_109" (formula "11") (term "0,0,0"))
                                          (rule "leq_literals" (formula "11") (term "1,0"))
                                          (rule "concrete_or_4" (formula "11") (term "0"))
                                          (rule "qeq_literals" (formula "11") (term "1"))
                                          (rule "concrete_or_4" (formula "11"))
                                          (rule "close" (formula "21") (ifseqformula "11"))
                                       )
                                    )
                                    (branch "v_1.table[48]@anon_heap_init<<anonHeapFunction>> = null FALSE"
                                       (rule "mul_literals" (formula "19") (term "1,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "ifthenelse_split" (formula "19") (term "0"))
                                       (branch "v_1.table[58]@anon_heap_init<<anonHeapFunction>> = null TRUE"
                                          (rule "polySimp_homoEq" (formula "20"))
                                          (rule "mul_literals" (formula "20") (term "1,0"))
                                          (rule "add_zero_right" (formula "20") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "20"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0"))
                                          (rule "allLeft" (formula "10") (inst "t=Z(0(1(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_85" (formula "10") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_111" (formula "10") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "10") (term "1"))
                                          (rule "concrete_or_4" (formula "10"))
                                          (rule "leq_literals" (formula "10") (term "1"))
                                          (rule "concrete_or_4" (formula "10"))
                                          (rule "replace_known_left" (formula "21") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "10"))
                                          (rule "ifthenelse_true" (formula "21") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "times_zero_2" (formula "21") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "allLeft" (formula "11") (inst "t=Z(8(5(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_5" (formula "11") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_109" (formula "11") (term "0,0,0"))
                                          (rule "leq_literals" (formula "11") (term "1,0"))
                                          (rule "concrete_or_4" (formula "11") (term "0"))
                                          (rule "qeq_literals" (formula "11") (term "1"))
                                          (rule "concrete_or_4" (formula "11"))
                                          (rule "allLeft" (formula "11") (inst "t=Z(8(4(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_4" (formula "11") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_119" (formula "11") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "11") (term "1"))
                                          (rule "concrete_or_4" (formula "11"))
                                          (rule "leq_literals" (formula "11") (term "1"))
                                          (rule "concrete_or_4" (formula "11"))
                                          (rule "close" (formula "21") (ifseqformula "11"))
                                       )
                                       (branch "v_1.table[58]@anon_heap_init<<anonHeapFunction>> = null FALSE"
                                          (rule "polySimp_homoEq" (formula "20"))
                                          (rule "mul_literals" (formula "20") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "20"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0"))
                                          (rule "allLeft" (formula "9") (inst "t=Z(0(1(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_85" (formula "9") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_111" (formula "9") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "9") (term "1"))
                                          (rule "concrete_or_4" (formula "9"))
                                          (rule "leq_literals" (formula "9") (term "1"))
                                          (rule "concrete_or_4" (formula "9"))
                                          (rule "replace_known_left" (formula "21") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "9"))
                                          (rule "ifthenelse_true" (formula "21") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "times_zero_2" (formula "21") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "allLeft" (formula "10") (inst "t=Z(8(5(#)))"))
                                          (rule "replaceKnownSelect_taclet10000001000_5" (formula "10") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110000001000_109" (formula "10") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "10") (term "1"))
                                          (rule "concrete_or_4" (formula "10"))
                                          (rule "leq_literals" (formula "10") (term "1"))
                                          (rule "concrete_or_4" (formula "10"))
                                          (rule "close" (formula "21") (ifseqformula "10"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "eqTermCut" (formula "10") (term "1") (inst "s=Z(1(2(#)))") (userinteraction))
                              (branch "Assume jdiv(64, 3) = 21"
                                 (rule "applyEqRigid" (formula "12") (term "1") (ifseqformula "10") (userinteraction))
                                 (rule "applyEqRigid" (formula "11") (term "1") (ifseqformula "10") (userinteraction))
                                 (rule "eqTermCut" (formula "17") (term "1,1,0,0") (inst "s=Z(4(6(#)))") (userinteraction))
                                 (branch "Assume v_1.table@heapAfter_init[v_1.<initialized> := TRUE].length = 64"
                                    (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "1") (userinteraction))
                                    (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "1") (userinteraction))
                                    (rule "exRightHide" (formula "18") (inst "t=Z(6(#))") (userinteraction))
                                    (rule "leq_literals" (formula "18") (term "0,0"))
                                    (rule "concrete_and_1" (formula "18") (term "0"))
                                    (rule "pow_literals" (formula "18") (term "0,1"))
                                    (rule "eqClose" (formula "18") (term "1"))
                                    (rule "concrete_and_3" (formula "18"))
                                    (rule "less_literals" (formula "18"))
                                    (rule "closeTrue" (formula "18"))
                                 )
                                 (branch "Assume v_1.table@heapAfter_init[v_1.<initialized> := TRUE].length != 64"
                                    (rule "notLeft" (formula "1"))
                                    (rule "jdiv_axiom_inline" (formula "10") (term "0"))
                                    (rule "div_literals" (formula "10") (term "1,0"))
                                    (rule "ifthenelse_concrete3" (formula "10"))
                                    (rule "qeq_literals" (formula "10") (term "0"))
                                    (rule "concrete_or_1" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,0,0"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "17") (term "0,1,1,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "17") (term "0,1,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,0"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "17") (term "0,1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "17") (term "0,1,1,0"))
                                    (rule "dismissNonSelectedField" (formula "13") (term "0,0"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "13") (term "0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "13") (term "0,0"))
                                    (rule "close" (formula "13") (ifseqformula "12"))
                                 )
                              )
                              (branch "Assume jdiv(64, 3) != 21"
                                 (rule "notLeft" (formula "10"))
                                 (rule "jdiv_axiom_inline" (formula "10") (term "1"))
                                 (rule "mul_literals" (formula "10") (term "0,0,2,1"))
                                 (rule "qeq_literals" (formula "10") (term "0,1"))
                                 (rule "ifthenelse_true" (formula "10") (term "1"))
                                 (rule "div_literals" (formula "10") (term "1"))
                                 (rule "jdiv_axiom_inline" (formula "11") (term "1"))
                                 (rule "mul_literals" (formula "11") (term "0,0,2,1"))
                                 (rule "qeq_literals" (formula "11") (term "0,1"))
                                 (rule "ifthenelse_true" (formula "11") (term "1"))
                                 (rule "div_literals" (formula "11") (term "1"))
                                 (rule "jdiv_axiom_inline" (formula "13") (term "0"))
                                 (rule "qeq_literals" (formula "13") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "13") (term "0"))
                                 (rule "div_literals" (formula "13") (term "0"))
                                 (rule "eqClose" (formula "13"))
                                 (rule "closeTrue" (formula "13"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "eqTermCut" (formula "10") (term "1") (inst "s=Z(1(2(#)))") (userinteraction))
                           (branch "Assume jdiv(64, 3) = 21"
                              (rule "applyEqRigid" (formula "12") (term "1") (ifseqformula "10") (userinteraction))
                              (rule "applyEqRigid" (formula "11") (term "1") (ifseqformula "10") (userinteraction))
                              (rule "eqTermCut" (formula "17") (term "0,1,1,0,0") (inst "s=Z(4(6(#)))") (userinteraction))
                              (branch "Assume v_1.table@heapAfter_init[v_1.<initialized> := TRUE].length = 64"
                                 (rule "applyEq" (formula "18") (term "0,1,1,0,0") (ifseqformula "1") (userinteraction))
                                 (rule "eqTermCut" (formula "18") (term "1,1,0,0") (inst "s=Z(2(3(#)))") (userinteraction))
                                 (branch "Assume jdiv(64, 2) = 32"
                                    (rule "applyEqRigid" (formula "19") (term "1,1,0,0") (ifseqformula "1") (userinteraction))
                                    (rule "exRightHide" (formula "19") (inst "t=Z(0(#))") (userinteraction))
                                    (rule "allLeftHide" (formula "11") (inst "t=Z(0(#))") (userinteraction))
                                    (rule "leq_literals" (formula "19") (term "0,0"))
                                    (rule "concrete_and_1" (formula "19") (term "0"))
                                    (rule "times_zero_1" (formula "19") (term "0,2,0,1"))
                                    (rule "less_literals" (formula "11") (term "0,0"))
                                    (rule "concrete_and_1" (formula "11") (term "0"))
                                    (rule "less_literals" (formula "19") (term "0"))
                                    (rule "concrete_and_1" (formula "19"))
                                    (rule "qeq_literals" (formula "11") (term "0"))
                                    (rule "concrete_impl_1" (formula "11"))
                                    (rule "jdiv_axiom_inline" (formula "12") (term "0"))
                                    (rule "div_literals" (formula "12") (term "1,0"))
                                    (rule "ifthenelse_concrete3" (formula "12"))
                                    (rule "mul_literals" (formula "12") (term "0,0,0,1"))
                                    (rule "qeq_literals" (formula "12") (term "0"))
                                    (rule "concrete_or_1" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "jdiv_axiom_inline" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "1") (term "0"))
                                    (rule "div_literals" (formula "1") (term "0"))
                                    (rule "eqClose" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "0,0"))
                                    (rule "dismissNonSelectedField" (formula "16") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "16") (term "1,0"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "16") (term "1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "16") (term "1,0"))
                                    (rule "close" (formula "16") (ifseqformula "9"))
                                 )
                                 (branch "Assume jdiv(64, 2) != 32"
                                    (rule "notLeft" (formula "1"))
                                    (rule "jdiv_axiom_inline" (formula "11") (term "0"))
                                    (rule "mul_literals" (formula "11") (term "0,0,2,0"))
                                    (rule "qeq_literals" (formula "11") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "11") (term "0"))
                                    (rule "div_literals" (formula "11") (term "0"))
                                    (rule "eqClose" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "jdiv_axiom_inline" (formula "18") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,0,2,1,1,0,0"))
                                    (rule "qeq_literals" (formula "18") (term "0,1,1,0,0"))
                                    (rule "ifthenelse_true" (formula "18") (term "1,1,0,0"))
                                    (rule "div_literals" (formula "18") (term "1,1,0,0"))
                                    (rule "jdiv_axiom_inline" (formula "14") (term "0"))
                                    (rule "qeq_literals" (formula "14") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "14") (term "0"))
                                    (rule "div_literals" (formula "14") (term "0"))
                                    (rule "eqClose" (formula "14"))
                                    (rule "closeTrue" (formula "14"))
                                 )
                              )
                              (branch "Assume v_1.table@heapAfter_init[v_1.<initialized> := TRUE].length != 64"
                                 (rule "notLeft" (formula "1"))
                                 (rule "jdiv_axiom_inline" (formula "10") (term "0"))
                                 (rule "div_literals" (formula "10") (term "1,0"))
                                 (rule "ifthenelse_concrete3" (formula "10"))
                                 (rule "qeq_literals" (formula "10") (term "0"))
                                 (rule "concrete_or_1" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "0,2,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,1,0,0"))
                                 (rule "replaceKnownSelect_taclet0_1" (formula "17") (term "0,0,1,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "17") (term "0,0,1,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "17") (term "1,0,1,0"))
                                 (rule "replaceKnownSelect_taclet0_1" (formula "17") (term "1,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "17") (term "1,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "13") (term "0,0"))
                                 (rule "replaceKnownSelect_taclet0_1" (formula "13") (term "0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "13") (term "0,0"))
                                 (rule "close" (formula "13") (ifseqformula "12"))
                              )
                           )
                           (branch "Assume jdiv(64, 3) != 21"
                              (rule "notLeft" (formula "10"))
                              (rule "jdiv_axiom_inline" (formula "11") (term "1"))
                              (rule "qeq_literals" (formula "11") (term "0,1"))
                              (rule "ifthenelse_true" (formula "11") (term "1"))
                              (rule "div_literals" (formula "11") (term "1"))
                              (rule "jdiv_axiom_inline" (formula "10") (term "1"))
                              (rule "mul_literals" (formula "10") (term "0,0,2,1"))
                              (rule "qeq_literals" (formula "10") (term "0,1"))
                              (rule "ifthenelse_true" (formula "10") (term "1"))
                              (rule "div_literals" (formula "10") (term "1"))
                              (rule "jdiv_axiom_inline" (formula "13") (term "0"))
                              (rule "qeq_literals" (formula "13") (term "0,0"))
                              (rule "ifthenelse_true" (formula "13") (term "0"))
                              (rule "div_literals" (formula "13") (term "0"))
                              (rule "eqClose" (formula "13"))
                              (rule "closeTrue" (formula "13"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "16") (inst "sk=i_0_0"))
                        (rule "impRight" (formula "16"))
                        (rule "impRight" (formula "17"))
                        (rule "andLeft" (formula "2"))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "allRight" (formula "20") (inst "sk=j_0_0"))
                        (rule "impRight" (formula "20"))
                        (rule "andLeft" (formula "1"))
                        (rule "notRight" (formula "22"))
                        (rule "jdiv_axiom_inline" (formula "17") (term "1"))
                        (rule "mul_literals" (formula "17") (term "0,0,2,1"))
                        (rule "div_literals" (formula "17") (term "1,1"))
                        (rule "qeq_literals" (formula "17") (term "0,1"))
                        (rule "ifthenelse_true" (formula "17") (term "1"))
                        (rule "jdiv_axiom_inline" (formula "16") (term "1"))
                        (rule "mul_literals" (formula "16") (term "0,0,2,1"))
                        (rule "qeq_literals" (formula "16") (term "0,1"))
                        (rule "ifthenelse_true" (formula "16") (term "1"))
                        (rule "div_literals" (formula "16") (term "1"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "0,2,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,2,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0,2,0,1"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,2,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "4") (term "0,1,1"))
                        (rule "replaceKnownSelect_taclet0_1" (formula "4") (term "0,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "4") (term "0,1,1"))
                        (rule "dismissNonSelectedField" (formula "2") (term "0,1,0,0"))
                        (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "4") (term "1,0,1"))
                        (rule "replaceKnownSelect_taclet0_1" (formula "4") (term "1,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "4") (term "1,0,1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                        (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "1,0"))
                        (rule "dismissNonSelectedField" (formula "19") (term "1,0"))
                        (rule "replaceKnownSelect_taclet0_1" (formula "19") (term "1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "19") (term "1,0"))
                        (rule "dismissNonSelectedField" (formula "6") (term "0,0,1"))
                        (rule "replaceKnownSelect_taclet0_1" (formula "6") (term "0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "6") (term "0,0,1"))
                        (rule "dismissNonSelectedField" (formula "2") (term "1,0,0,0"))
                        (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "1,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "4") (term "0,1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0"))
                        (rule "dismissNonSelectedField" (formula "19") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "2") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "5"))
                        (rule "applyEq" (formula "4") (term "1,0,1,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "18"))
                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                        (rule "jdiv_axiom_inline" (formula "6") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,2,0,1,0,0"))
                        (rule "div_literals" (formula "6") (term "1,0,1,0,0"))
                        (rule "qeq_literals" (formula "6") (term "0,0,1,0,0"))
                        (rule "ifthenelse_true" (formula "6") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "6") (term "1,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                        (rule "mul_literals" (formula "6") (term "1"))
                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                        (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                        (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "21"))
                        (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "2"))
                        (rule "ifEqualsNull" (formula "1"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0,1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,1"))
                        (rule "equalUnique" (formula "1") (term "1,0,0,0,0,1"))
                        (rule "concrete_and_4" (formula "1") (term "0,0,0,0,1"))
                        (rule "concrete_or_2" (formula "1") (term "0,0,0,1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,1"))
                        (rule "equalUnique" (formula "1") (term "1,0,0,0,1"))
                        (rule "concrete_and_4" (formula "1") (term "0,0,0,1"))
                        (rule "concrete_or_2" (formula "1") (term "0,0,1"))
                        (rule "double_not" (formula "1") (term "0,1"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                        (rule "equalUnique" (formula "1") (term "1,1,0,0,0"))
                        (rule "concrete_and_4" (formula "1") (term "1,0,0,0"))
                        (rule "concrete_or_4" (formula "1") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                        (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                        (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                        (rule "concrete_or_2" (formula "1") (term "0,0"))
                        (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=arr_1"))
                        (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                        (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                        (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "22"))
                        (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                        (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                        (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                        (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                        (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                        (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                        (rule "concrete_or_2" (formula "1") (term "0,0"))
                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "2") (term "0,1,1") (inst "selectSK=arr_2"))
                        (rule "simplifySelectOfCreate" (formula "2"))
                        (rule "equalUnique" (formula "2") (term "1,0,0"))
                        (rule "concrete_and_4" (formula "2") (term "0,0"))
                        (rule "ifthenelse_false" (formula "2") (term "0"))
                        (rule "applyEqReverse" (formula "3") (term "0,1,1") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "pullOutSelect" (formula "2") (term "0,0,1") (inst "selectSK=java_lang_Object_created__0"))
                        (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                        (rule "simplifySelectOfCreate" (formula "2"))
                        (rule "eqClose" (formula "2") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "2") (term "0,0"))
                        (rule "castDel" (formula "2") (term "1,0"))
                        (rule "eqSymm" (formula "2") (term "0,0,0"))
                        (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "25"))
                        (rule "concrete_not_2" (formula "2") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "2") (term "0,0"))
                        (rule "sortsDisjointModuloNull" (formula "2") (term "0,0"))
                        (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "23"))
                        (rule "concrete_and_2" (formula "2") (term "0,0"))
                        (rule "ifthenelse_false" (formula "2") (term "0"))
                        (rule "applyEqReverse" (formula "3") (term "0,0,1") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "1") (term "0,0,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_3"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_4" (formula "1") (term "0,0"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "nnf_imp2or" (formula "17") (term "0"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                        (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "12"))
                        (rule "notLeft" (formula "12"))
                        (rule "commute_or_2" (formula "16") (term "0"))
                        (rule "commute_or" (formula "16") (term "0,0"))
                        (rule "commute_or_2" (formula "16") (term "0"))
                        (rule "cnf_rightDist" (formula "2"))
                        (rule "andLeft" (formula "2"))
                        (rule "commute_or" (formula "2"))
                        (rule "cnf_rightDist" (formula "3"))
                        (rule "andLeft" (formula "3"))
                        (rule "commute_or" (formula "3"))
                        (rule "commute_or" (formula "4"))
                        (rule "cnf_rightDist" (formula "2"))
                        (rule "neq_or" (formula "2") (term "0"))
                        (rule "concrete_and_1" (formula "2"))
                        (rule "commute_or" (formula "2"))
                        (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                        (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                        (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                        (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                        (rule "qeq_literals" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "9") (term "0,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "7") (term "0,0,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "concrete_or_1" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                           (rule "concrete_not_1" (formula "2") (term "0"))
                           (rule "concrete_or_2" (formula "2"))
                           (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "2"))
                           (rule "concrete_or_1" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0,0") (ifseqformula "12"))
                           (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "24"))
                           (rule "concrete_or_2" (formula "20"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "10"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
                           (rule "concrete_or_2" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "0,0,0") (ifseqformula "11"))
                           (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "25"))
                           (rule "concrete_or_2" (formula "5"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0") (ifseqformula "12"))
                           (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "4"))
                           (rule "concrete_or_1" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "allLeft" (formula "18") (inst "t=mul(i_0_0, Z(2(#)))"))
                           (rule "replaceKnownSelect_taclet10001000_4" (formula "18") (term "0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet010001000_11" (formula "18") (term "0,0,0"))
                           (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "26"))
                           (rule "concrete_or_2" (formula "18") (term "0"))
                           (rule "inEqSimp_contradInEq3" (formula "18") (term "1") (ifseqformula "10"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                           (rule "greater_literals" (formula "18") (term "0,0,1"))
                           (rule "concrete_impl_1" (formula "18") (term "0,1"))
                           (rule "qeq_literals" (formula "18") (term "0,1"))
                           (rule "concrete_and_2" (formula "18") (term "1"))
                           (rule "concrete_or_4" (formula "18"))
                           (rule "inEqSimp_contradInEq5" (formula "18") (ifseqformula "9"))
                           (rule "mul_literals" (formula "18") (term "1,1,0"))
                           (rule "greater_literals" (formula "18") (term "0,0"))
                           (rule "concrete_impl_1" (formula "18") (term "0"))
                           (rule "qeq_literals" (formula "18") (term "0"))
                           (rule "concrete_and_2" (formula "18"))
                           (rule "closeFalse" (formula "18"))
                        )
                        (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE FALSE"
                           (rule "applyEqReverse" (formula "8") (term "0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "6") (term "0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
                           (rule "concrete_or_2" (formula "1"))
                           (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "22"))
                           (rule "concrete_not_2" (formula "2") (term "0"))
                           (rule "concrete_or_1" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "1"))
                           (rule "concrete_or_3" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "11"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                           (rule "concrete_or_2" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "10"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
                           (rule "concrete_or_2" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0") (ifseqformula "13"))
                           (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "4"))
                           (rule "concrete_or_1" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "13"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
                           (rule "concrete_or_2" (formula "1"))
                           (rule "allLeft" (formula "18") (inst "t=mul(i_0_0, Z(2(#)))"))
                           (rule "replaceKnownSelect_taclet10001000_4" (formula "18") (term "0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110001000_11" (formula "18") (term "0,0,0"))
                           (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "26"))
                           (rule "concrete_or_2" (formula "18") (term "0"))
                           (rule "inEqSimp_contradInEq3" (formula "18") (term "1") (ifseqformula "10"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                           (rule "greater_literals" (formula "18") (term "0,0,1"))
                           (rule "concrete_impl_1" (formula "18") (term "0,1"))
                           (rule "qeq_literals" (formula "18") (term "0,1"))
                           (rule "concrete_and_2" (formula "18") (term "1"))
                           (rule "concrete_or_4" (formula "18"))
                           (rule "inEqSimp_contradInEq5" (formula "18") (ifseqformula "9"))
                           (rule "mul_literals" (formula "18") (term "1,1,0"))
                           (rule "greater_literals" (formula "18") (term "0,0"))
                           (rule "concrete_impl_1" (formula "18") (term "0"))
                           (rule "qeq_literals" (formula "18") (term "0"))
                           (rule "concrete_and_2" (formula "18"))
                           (rule "closeFalse" (formula "18"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "case_distinction_r" (formula "16") (userinteraction))
                     (branch "Case 1"
                        (rule "allRight" (formula "16") (inst "sk=i_0"))
                        (rule "impRight" (formula "16"))
                        (rule "andLeft" (formula "1"))
                        (rule "impRight" (formula "18"))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "allRight" (formula "20") (inst "sk=j_0"))
                        (rule "impRight" (formula "20"))
                        (rule "notRight" (formula "21"))
                        (rule "jdiv_axiom_inline" (formula "16") (term "1"))
                        (rule "mul_literals" (formula "16") (term "0,0,2,1"))
                        (rule "qeq_literals" (formula "16") (term "0,1"))
                        (rule "ifthenelse_true" (formula "16") (term "1"))
                        (rule "div_literals" (formula "16") (term "1"))
                        (rule "jdiv_axiom_inline" (formula "15") (term "1"))
                        (rule "qeq_literals" (formula "15") (term "0,1"))
                        (rule "ifthenelse_true" (formula "15") (term "1"))
                        (rule "div_literals" (formula "15") (term "1"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,2,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,1,1"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,1,1"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,2,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "0,2,0,1"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "0,2,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
                        (rule "dismissNonSelectedField" (formula "3") (term "0,1,1"))
                        (rule "replaceKnownSelect_taclet0_1" (formula "3") (term "0,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "3") (term "0,1,1"))
                        (rule "dismissNonSelectedField" (formula "5") (term "0,0,1"))
                        (rule "replaceKnownSelect_taclet0_1" (formula "5") (term "0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "5") (term "0,0,1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                        (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "1,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "1,0,1"))
                        (rule "replaceKnownSelect_taclet0_1" (formula "3") (term "1,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "3") (term "1,0,1"))
                        (rule "dismissNonSelectedField" (formula "2") (term "1,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "1,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "1,0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "2") (term "0,1,1,0"))
                        (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "0,1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "18") (term "1,0"))
                        (rule "replaceKnownSelect_taclet0_1" (formula "18") (term "1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "18") (term "1,0"))
                        (rule "dismissNonSelectedField" (formula "2") (term "0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "0,1,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "2") (term "1,1"))
                        (rule "polySimp_mulAssoc" (formula "2") (term "1,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,1"))
                        (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "18") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "4"))
                        (rule "inEqSimp_commuteLeq" (formula "2") (term "0,1"))
                        (rule "applyEq" (formula "2") (term "0,1,0,1,0") (ifseqformula "17"))
                        (rule "mul_literals" (formula "2") (term "1,0,1,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,1,0"))
                        (rule "add_literals" (formula "2") (term "0,0,1,0"))
                        (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "17"))
                        (rule "jdiv_axiom_inline" (formula "5") (term "0,1,0"))
                        (rule "mul_literals" (formula "5") (term "0,0,2,0,1,0"))
                        (rule "qeq_literals" (formula "5") (term "0,0,1,0"))
                        (rule "ifthenelse_true" (formula "5") (term "0,1,0"))
                        (rule "div_literals" (formula "5") (term "0,1,0"))
                        (rule "mul_literals" (formula "5") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "add_literals" (formula "5") (term "0,0"))
                        (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "3") (term "1,0,1,0") (ifseqformula "17"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,1,1"))
                        (rule "mul_literals" (formula "2") (term "0,1,1,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0"))
                        (rule "mul_literals" (formula "2") (term "1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                        (rule "mul_literals" (formula "5") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "elimGcdLeq" (formula "2") (term "1,0") (inst "elimGcdRightDiv=Z(1(3(#)))") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0"))
                        (rule "sub_literals" (formula "2") (term "0,0,0,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,1,0,1,0"))
                        (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,0,0,1,0,1,0"))
                        (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0,0,1,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "2") (term "0,0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,1,0"))
                        (rule "add_literals" (formula "2") (term "1,1,0,1,0,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "2") (term "0,1,0,1,0"))
                        (rule "qeq_literals" (formula "2") (term "1,0,1,0"))
                        (rule "concrete_and_3" (formula "2") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,1,0"))
                        (rule "add_literals" (formula "2") (term "1,0,0,1,0"))
                        (rule "times_zero_1" (formula "2") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "2") (term "0,1,0"))
                        (rule "ifthenelse_true_for" (formula "2") (term "1,0"))
                        (rule "elimGcdLeq" (formula "2") (term "1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_0)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,1"))
                        (rule "mul_literals" (formula "2") (term "0,0,0,0,0,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,0,1,1"))
                        (rule "sub_literals" (formula "2") (term "0,0,0,0,0,0,0,1,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,1,1"))
                        (rule "add_literals" (formula "2") (term "1,1,0,1,0,1,1"))
                        (rule "times_zero_1" (formula "2") (term "1,0,1,0,1,1"))
                        (rule "add_zero_right" (formula "2") (term "0,1,0,1,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1,1"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0,0,1,1"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0,0,1,1"))
                        (rule "add_zero_right" (formula "2") (term "0,0,0,1,1"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0,1,1"))
                        (rule "mul_literals" (formula "2") (term "0,0,0,1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,1,1"))
                        (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,1,1"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,1,1"))
                        (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,1,1"))
                        (rule "add_literals" (formula "2") (term "1,1,0,1,0,1,1"))
                        (rule "times_zero_1" (formula "2") (term "1,0,1,0,1,1"))
                        (rule "add_zero_right" (formula "2") (term "0,1,0,1,1"))
                        (rule "qeq_literals" (formula "2") (term "1,0,1,1"))
                        (rule "concrete_and_3" (formula "2") (term "0,1,1"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,1"))
                        (rule "add_literals" (formula "2") (term "0,0,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,1"))
                        (rule "add_literals" (formula "2") (term "0,0,0,0,1,1"))
                        (rule "add_zero_left" (formula "2") (term "0,0,0,1,1"))
                        (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,1,1"))
                        (rule "add_literals" (formula "2") (term "1,0,0,1,1"))
                        (rule "times_zero_1" (formula "2") (term "0,0,1,1"))
                        (rule "leq_literals" (formula "2") (term "0,1,1"))
                        (rule "ifthenelse_true_for" (formula "2") (term "1,1"))
                        (rule "elimGcdGeq" (formula "2") (term "0,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,1"))
                        (rule "sub_literals" (formula "2") (term "0,0,0,0,0,0,0,0,1"))
                        (rule "add_zero_right" (formula "2") (term "0,0,0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1"))
                        (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,0,0,1"))
                        (rule "times_zero_1" (formula "2") (term "0,0,0,1,0,0,1"))
                        (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,1"))
                        (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,1"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0,1"))
                        (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "2") (term "0,1,0,0,1"))
                        (rule "add_literals" (formula "2") (term "1,0,1,0,0,1"))
                        (rule "times_zero_1" (formula "2") (term "0,1,0,0,1"))
                        (rule "leq_literals" (formula "2") (term "1,0,0,1"))
                        (rule "concrete_and_3" (formula "2") (term "0,0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0,0,1"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0,0,1"))
                        (rule "add_zero_right" (formula "2") (term "0,0,0,1"))
                        (rule "qeq_literals" (formula "2") (term "0,0,1"))
                        (rule "ifthenelse_true_for" (formula "2") (term "0,1"))
                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                        (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                        (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "20"))
                        (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                        (rule "ifEqualsNull" (formula "1"))
                        (rule "pullOutSelect" (formula "3") (term "0,0,0,0") (inst "selectSK=arr_1"))
                        (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "20") (term "0") (ifseqformula "3"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "13"))
                        (rule "elementOfFreshLocs" (formula "3") (term "1,0,0"))
                        (rule "equalUnique" (formula "3") (term "0,1,0,0,0"))
                        (rule "concrete_not_2" (formula "3") (term "1,0,0,0"))
                        (rule "concrete_and_3" (formula "3") (term "0,0,0"))
                        (rule "replace_known_right" (formula "3") (term "0,0,1,0,0") (ifseqformula "21"))
                        (rule "concrete_not_2" (formula "3") (term "0,1,0,0"))
                        (rule "concrete_and_1" (formula "3") (term "1,0,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                        (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                        (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                        (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                        (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                        (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                        (rule "concrete_or_2" (formula "1") (term "0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0,1"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,1"))
                        (rule "equalUnique" (formula "1") (term "1,1,0,0,0,1"))
                        (rule "concrete_and_4" (formula "1") (term "1,0,0,0,1"))
                        (rule "concrete_or_4" (formula "1") (term "0,0,0,1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,1"))
                        (rule "equalUnique" (formula "1") (term "1,0,0,0,1"))
                        (rule "concrete_and_4" (formula "1") (term "0,0,0,1"))
                        (rule "concrete_or_2" (formula "1") (term "0,0,1"))
                        (rule "double_not" (formula "1") (term "0,1"))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0,0"))
                        (rule "equalUnique" (formula "3") (term "1,0,0,0,0"))
                        (rule "concrete_and_4" (formula "3") (term "0,0,0,0"))
                        (rule "concrete_or_2" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                        (rule "equalUnique" (formula "3") (term "1,0,0,0"))
                        (rule "concrete_and_4" (formula "3") (term "0,0,0"))
                        (rule "concrete_or_2" (formula "3") (term "0,0"))
                        (rule "ifthenelse_negated" (formula "3") (term "0"))
                        (rule "pullOutSelect" (formula "1") (term "0,1,1") (inst "selectSK=arr_2"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_4" (formula "1") (term "0,0"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "2") (term "0,1,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "1") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                        (rule "applyEq" (formula "2") (term "0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (rule "eqClose" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "24"))
                        (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "24"))
                        (rule "concrete_and_4" (formula "1") (term "0,0"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "2") (term "0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_3"))
                        (rule "simplifySelectOfCreate" (formula "3"))
                        (rule "equalUnique" (formula "3") (term "1,0,0"))
                        (rule "concrete_and_4" (formula "3") (term "0,0"))
                        (rule "ifthenelse_false" (formula "3") (term "0"))
                        (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "nnf_imp2or" (formula "16") (term "0"))
                        (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "11"))
                        (rule "notLeft" (formula "11"))
                        (rule "nnf_notAnd" (formula "15") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                        (rule "commute_and" (formula "4") (term "0"))
                        (rule "commute_or_2" (formula "15") (term "0"))
                        (rule "commute_or" (formula "15") (term "0,0"))
                        (rule "commute_or_2" (formula "15") (term "0"))
                        (rule "cnf_rightDist" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "commute_or" (formula "1"))
                        (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                        (rule "expand_inShort" (formula "19"))
                        (rule "replace_short_MIN" (formula "19") (term "0,1"))
                        (rule "replace_short_MAX" (formula "19") (term "1,0"))
                        (rule "andLeft" (formula "19"))
                        (rule "inEqSimp_commuteLeq" (formula "20"))
                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
                        (rule "leq_literals" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                        (rule "qeq_literals" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                        (rule "qeq_literals" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "cnf_rightDist" (formula "2"))
                        (rule "andLeft" (formula "2"))
                        (rule "commute_or" (formula "2"))
                        (rule "commute_or" (formula "3"))
                        (rule "cnf_rightDist" (formula "1"))
                        (rule "neq_or" (formula "1") (term "0"))
                        (rule "concrete_and_1" (formula "1"))
                        (rule "commute_or" (formula "1"))
                        (rule "cnf_rightDist" (formula "6"))
                        (rule "andLeft" (formula "6"))
                        (rule "commute_or" (formula "6"))
                        (rule "cnf_rightDist" (formula "7"))
                        (rule "andLeft" (formula "7"))
                        (rule "commute_or" (formula "7"))
                        (rule "commute_or" (formula "8"))
                        (rule "cnf_rightDist" (formula "6"))
                        (rule "andLeft" (formula "6"))
                        (rule "inEqSimp_or_tautInEq2" (formula "6"))
                        (rule "add_zero_right" (formula "6") (term "1,1"))
                        (rule "qeq_literals" (formula "6") (term "1"))
                        (rule "concrete_or_3" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "commute_or" (formula "6"))
                        (rule "ifthenelse_split" (formula "5") (term "0"))
                        (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "9") (term "0,0,1") (ifseqformula "6"))
                           (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "6"))
                           (rule "applyEqReverse" (formula "7") (term "0,0,1") (ifseqformula "6"))
                           (rule "applyEqReverse" (formula "10") (term "0,0") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "5"))
                           (rule "concrete_or_1" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "4"))
                           (rule "concrete_not_1" (formula "1") (term "0"))
                           (rule "concrete_or_2" (formula "1"))
                           (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "concrete_or_1" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0,0") (ifseqformula "13"))
                           (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "24"))
                           (rule "concrete_or_2" (formula "20"))
                           (rule "cut_direct" (formula "5") (term "0"))
                           (branch "CUT: j_0 <= 31 TRUE"
                              (rule "concrete_or_1" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "cut_direct" (formula "6") (term "0"))
                              (branch "CUT: j_0 <= -1 + i_0 TRUE"
                                 (rule "concrete_or_1" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "cut_direct" (formula "4") (term "0"))
                                 (branch "CUT: j_0 >= 0 TRUE"
                                    (rule "concrete_or_1" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "6"))
                                    (rule "mul_literals" (formula "4") (term "0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "4"))
                                    (rule "leq_literals" (formula "9") (term "0"))
                                    (rule "concrete_or_1" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
                                    (rule "concrete_or_2" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
                                    (rule "concrete_or_2" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0") (ifseqformula "13"))
                                    (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "4"))
                                    (rule "concrete_or_1" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "allLeft" (formula "19") (inst "t=mul(i_0, Z(2(#)))"))
                                    (rule "replaceKnownSelect_taclet01001000_5" (formula "19") (term "0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet001001000_12" (formula "19") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "26"))
                                    (rule "concrete_or_2" (formula "19") (term "0"))
                                    (rule "inEqSimp_contradInEq3" (formula "19") (term "1") (ifseqformula "11"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                    (rule "greater_literals" (formula "19") (term "0,0,1"))
                                    (rule "concrete_impl_1" (formula "19") (term "0,1"))
                                    (rule "qeq_literals" (formula "19") (term "0,1"))
                                    (rule "concrete_and_2" (formula "19") (term "1"))
                                    (rule "concrete_or_4" (formula "19"))
                                    (rule "inEqSimp_contradInEq5" (formula "19") (ifseqformula "6"))
                                    (rule "mul_literals" (formula "19") (term "1,1,0"))
                                    (rule "greater_literals" (formula "19") (term "0,0"))
                                    (rule "concrete_impl_1" (formula "19") (term "0"))
                                    (rule "qeq_literals" (formula "19") (term "0"))
                                    (rule "concrete_and_2" (formula "19"))
                                    (rule "closeFalse" (formula "19"))
                                 )
                                 (branch "CUT: j_0 >= 0 FALSE"
                                    (rule "concrete_or_2" (formula "4"))
                                    (rule "inEqSimp_geqRight" (formula "22"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "6") (term "0"))
                                    (rule "concrete_or_1" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1"))
                                    (rule "mul_literals" (formula "7") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                    (rule "inEqSimp_contradInEq3" (formula "7") (ifseqformula "6"))
                                    (rule "greater_literals" (formula "7") (term "0,0"))
                                    (rule "concrete_impl_1" (formula "7") (term "0"))
                                    (rule "andLeft" (formula "7"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0"))
                                    (rule "mul_literals" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0"))
                                    (rule "add_zero_right" (formula "7") (term "0"))
                                    (rule "leq_literals" (formula "7"))
                                    (rule "closeFalse" (formula "7"))
                                 )
                              )
                              (branch "CUT: j_0 <= -1 + i_0 FALSE"
                                 (rule "concrete_or_2" (formula "6"))
                                 (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "6"))
                                 (rule "concrete_or_3" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "inEqSimp_leqRight" (formula "21"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "5"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "mul_literals" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=add(Z(1(#)), i_0)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "7") (term "0,0"))
                                 (rule "concrete_or_2" (formula "7") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,0"))
                                 (rule "leq_literals" (formula "7") (term "0"))
                                 (rule "concrete_or_2" (formula "7"))
                                 (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (rule "concrete_or_1" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "6"))
                                 (rule "leq_literals" (formula "10") (term "0"))
                                 (rule "concrete_or_1" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "11"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
                                 (rule "concrete_or_2" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,0") (ifseqformula "12"))
                                 (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "25"))
                                 (rule "concrete_or_2" (formula "9"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "13"))
                                 (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                                 (rule "concrete_or_1" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "allLeft" (formula "19") (inst "t=mul(i_0, Z(2(#)))"))
                                 (rule "replaceKnownSelect_taclet01001000_5" (formula "19") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet001001000_12" (formula "19") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "26"))
                                 (rule "concrete_or_2" (formula "19") (term "0"))
                                 (rule "inEqSimp_contradInEq5" (formula "19") (term "0") (ifseqformula "11"))
                                 (rule "times_zero_1" (formula "19") (term "1,1,0,0"))
                                 (rule "greater_literals" (formula "19") (term "0,0,0"))
                                 (rule "concrete_impl_1" (formula "19") (term "0,0"))
                                 (rule "qeq_literals" (formula "19") (term "0,0"))
                                 (rule "concrete_and_2" (formula "19") (term "0"))
                                 (rule "concrete_or_2" (formula "19"))
                                 (rule "inEqSimp_contradInEq3" (formula "19") (ifseqformula "7"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0"))
                                 (rule "greater_literals" (formula "19") (term "0,0"))
                                 (rule "concrete_impl_1" (formula "19") (term "0"))
                                 (rule "qeq_literals" (formula "19") (term "0"))
                                 (rule "concrete_and_2" (formula "19"))
                                 (rule "closeFalse" (formula "19"))
                              )
                           )
                           (branch "CUT: j_0 <= 31 FALSE"
                              (rule "concrete_or_2" (formula "5"))
                              (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "5"))
                              (rule "concrete_or_1" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_leqRight" (formula "21"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "5") (term "0") (ifseqformula "1"))
                              (rule "leq_literals" (formula "5") (term "0,0"))
                              (rule "concrete_or_1" (formula "5") (term "0"))
                              (rule "concrete_or_1" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "5"))
                              (rule "mul_literals" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "9") (term "0"))
                              (rule "concrete_and_2" (formula "9"))
                              (rule "closeFalse" (formula "9"))
                           )
                        )
                        (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE FALSE"
                           (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "5"))
                           (rule "applyEqReverse" (formula "8") (term "0,0,1") (ifseqformula "5"))
                           (rule "applyEqReverse" (formula "9") (term "0,0") (ifseqformula "5"))
                           (rule "applyEqReverse" (formula "6") (term "0,0,1") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
                           (rule "concrete_or_2" (formula "1"))
                           (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "22"))
                           (rule "concrete_not_2" (formula "2") (term "0"))
                           (rule "concrete_or_1" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "1"))
                           (rule "concrete_or_3" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0,0") (ifseqformula "12"))
                           (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "24"))
                           (rule "concrete_or_2" (formula "19"))
                           (rule "cut_direct" (formula "4") (term "0"))
                           (branch "CUT: j_0 <= 31 TRUE"
                              (rule "concrete_or_1" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "cut_direct" (formula "5") (term "0"))
                              (branch "CUT: j_0 <= -1 + i_0 TRUE"
                                 (rule "concrete_or_1" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "cut_direct" (formula "3") (term "0"))
                                 (branch "CUT: j_0 >= 0 TRUE"
                                    (rule "concrete_or_1" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                                    (rule "times_zero_1" (formula "3") (term "0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "8") (term "0"))
                                    (rule "concrete_or_1" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
                                    (rule "concrete_or_2" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "13"))
                                    (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                                    (rule "concrete_or_1" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "13"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
                                    (rule "concrete_or_2" (formula "1"))
                                    (rule "allLeft" (formula "18") (inst "t=mul(i_0, Z(2(#)))"))
                                    (rule "replaceKnownSelect_taclet01001000_5" (formula "18") (term "0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101001000_12" (formula "18") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "26"))
                                    (rule "concrete_or_2" (formula "18") (term "0"))
                                    (rule "inEqSimp_contradInEq3" (formula "18") (term "1") (ifseqformula "10"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                    (rule "greater_literals" (formula "18") (term "0,0,1"))
                                    (rule "concrete_impl_1" (formula "18") (term "0,1"))
                                    (rule "qeq_literals" (formula "18") (term "0,1"))
                                    (rule "concrete_and_2" (formula "18") (term "1"))
                                    (rule "concrete_or_4" (formula "18"))
                                    (rule "inEqSimp_contradInEq5" (formula "18") (ifseqformula "5"))
                                    (rule "greater_literals" (formula "18") (term "0,0"))
                                    (rule "concrete_impl_1" (formula "18") (term "0"))
                                    (rule "mul_literals" (formula "18") (term "1,0"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                    (rule "concrete_and_2" (formula "18"))
                                    (rule "closeFalse" (formula "18"))
                                 )
                                 (branch "CUT: j_0 >= 0 FALSE"
                                    (rule "concrete_or_2" (formula "3"))
                                    (rule "inEqSimp_geqRight" (formula "21"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                    (rule "concrete_or_1" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "inEqSimp_contradInEq3" (formula "6") (ifseqformula "5"))
                                    (rule "greater_literals" (formula "6") (term "0,0"))
                                    (rule "concrete_impl_1" (formula "6") (term "0"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0"))
                                    (rule "mul_literals" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0"))
                                    (rule "add_literals" (formula "6") (term "0"))
                                    (rule "leq_literals" (formula "6"))
                                    (rule "closeFalse" (formula "6"))
                                 )
                              )
                              (branch "CUT: j_0 <= -1 + i_0 FALSE"
                                 (rule "concrete_or_2" (formula "5"))
                                 (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "5"))
                                 (rule "concrete_or_3" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_leqRight" (formula "20"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=add(Z(1(#)), i_0)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "6") (term "0,0"))
                                 (rule "concrete_or_2" (formula "6") (term "0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0"))
                                 (rule "leq_literals" (formula "6") (term "0"))
                                 (rule "concrete_or_2" (formula "6"))
                                 (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (rule "concrete_or_1" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "3"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "5"))
                                 (rule "leq_literals" (formula "9") (term "0"))
                                 (rule "concrete_or_1" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "10"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
                                 (rule "concrete_or_2" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "13"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
                                 (rule "concrete_or_2" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0") (ifseqformula "14"))
                                 (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "4"))
                                 (rule "concrete_or_1" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "allLeft" (formula "18") (inst "t=mul(i_0, Z(2(#)))"))
                                 (rule "replaceKnownSelect_taclet01001000_5" (formula "18") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet101001000_12" (formula "18") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "26"))
                                 (rule "concrete_or_2" (formula "18") (term "0"))
                                 (rule "inEqSimp_contradInEq5" (formula "18") (term "0") (ifseqformula "10"))
                                 (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "greater_literals" (formula "18") (term "0,0,0"))
                                 (rule "concrete_impl_1" (formula "18") (term "0,0"))
                                 (rule "qeq_literals" (formula "18") (term "0,0"))
                                 (rule "concrete_and_2" (formula "18") (term "0"))
                                 (rule "concrete_or_2" (formula "18"))
                                 (rule "inEqSimp_contradInEq3" (formula "18") (ifseqformula "7"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0"))
                                 (rule "greater_literals" (formula "18") (term "0,0"))
                                 (rule "concrete_impl_1" (formula "18") (term "0"))
                                 (rule "qeq_literals" (formula "18") (term "0"))
                                 (rule "concrete_and_2" (formula "18"))
                                 (rule "closeFalse" (formula "18"))
                              )
                           )
                           (branch "CUT: j_0 <= 31 FALSE"
                              (rule "concrete_or_2" (formula "4"))
                              (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "4"))
                              (rule "concrete_or_1" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "inEqSimp_leqRight" (formula "20"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "4") (term "0") (ifseqformula "1"))
                              (rule "leq_literals" (formula "4") (term "0,0"))
                              (rule "concrete_or_1" (formula "4") (term "0"))
                              (rule "concrete_or_1" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                              (rule "mul_literals" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "8") (term "0"))
                              (rule "concrete_and_2" (formula "8"))
                              (rule "closeFalse" (formula "8"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "case_distinction_r" (formula "16") (userinteraction))
                        (branch "Case 1"
                           (rule "case_distinction_r" (formula "16") (userinteraction))
                           (branch "Case 1"
                              (rule "case_distinction_r" (formula "16") (userinteraction))
                              (branch "Case 1"
                                 (rule "case_distinction_r" (formula "16") (userinteraction))
                                 (branch "Case 1"
                                    (rule "allRight" (formula "16") (inst "sk=i_0"))
                                    (rule "impRight" (formula "16"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "impRight" (formula "18"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "allRight" (formula "20") (inst "sk=j_0"))
                                    (rule "impRight" (formula "20"))
                                    (rule "notRight" (formula "21"))
                                    (rule "jdiv_axiom_inline" (formula "16") (term "1"))
                                    (rule "mul_literals" (formula "16") (term "0,0,2,1"))
                                    (rule "qeq_literals" (formula "16") (term "0,1"))
                                    (rule "ifthenelse_true" (formula "16") (term "1"))
                                    (rule "div_literals" (formula "16") (term "1"))
                                    (rule "jdiv_axiom_inline" (formula "15") (term "1"))
                                    (rule "qeq_literals" (formula "15") (term "0,1"))
                                    (rule "ifthenelse_true" (formula "15") (term "1"))
                                    (rule "div_literals" (formula "15") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,2,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "0,2,0,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,1,1"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "1,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "1,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "1,0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,1,1,0"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "0,1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "0,1,1,0"))
                                    (rule "dismissNonSelectedField" (formula "3") (term "0,1,1"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "3") (term "0,1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "3") (term "0,1,1"))
                                    (rule "dismissNonSelectedField" (formula "18") (term "1,0"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "18") (term "1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "18") (term "1,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "0,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "1,0"))
                                    (rule "dismissNonSelectedField" (formula "3") (term "1,0,1"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "3") (term "1,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "3") (term "1,0,1"))
                                    (rule "dismissNonSelectedField" (formula "5") (term "0,0,1"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "5") (term "0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "5") (term "0,0,1"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "18") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "1,1"))
                                    (rule "polySimp_mulAssoc" (formula "2") (term "1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,1"))
                                    (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "4"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "2") (term "0,1"))
                                    (rule "applyEq" (formula "3") (term "1,0,1,0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "17"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,1,0") (ifseqformula "17"))
                                    (rule "mul_literals" (formula "2") (term "1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,1,0"))
                                    (rule "jdiv_axiom_inline" (formula "5") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,0,2,0,1,0,0"))
                                    (rule "qeq_literals" (formula "5") (term "0,0,1,0,0"))
                                    (rule "ifthenelse_true" (formula "5") (term "0,1,0,0"))
                                    (rule "div_literals" (formula "5") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "1,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0"))
                                    (rule "mul_literals" (formula "2") (term "1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1"))
                                    (rule "elimGcdLeq" (formula "2") (term "1,0") (inst "elimGcdRightDiv=Z(1(3(#)))") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0"))
                                    (rule "sub_literals" (formula "2") (term "0,0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0,0,1,0,1,0"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "2") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,1,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,1,0,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,1,0,1,0"))
                                    (rule "qeq_literals" (formula "2") (term "1,0,1,0"))
                                    (rule "concrete_and_3" (formula "2") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "2") (term "1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "2") (term "0,1,0"))
                                    (rule "ifthenelse_true_for" (formula "2") (term "1,0"))
                                    (rule "elimGcdLeq" (formula "2") (term "1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_0)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0,0,0,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,0,1,1"))
                                    (rule "sub_literals" (formula "2") (term "0,0,0,0,0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,1,1"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,1,0,1,1"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,1,0,1,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,1,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1,1"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,1,1"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,1,1"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,1,0,1,1"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,1,0,1,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,1,0,1,1"))
                                    (rule "qeq_literals" (formula "2") (term "1,0,1,1"))
                                    (rule "concrete_and_3" (formula "2") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,1"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,1"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,1,1"))
                                    (rule "add_zero_left" (formula "2") (term "0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,1,1"))
                                    (rule "add_literals" (formula "2") (term "1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "2") (term "0,0,1,1"))
                                    (rule "leq_literals" (formula "2") (term "0,1,1"))
                                    (rule "ifthenelse_true_for" (formula "2") (term "1,1"))
                                    (rule "elimGcdGeq" (formula "2") (term "0,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,1"))
                                    (rule "sub_literals" (formula "2") (term "0,0,0,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "2") (term "0,0,0,1,0,0,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,1"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "2") (term "0,1,0,0,1"))
                                    (rule "add_literals" (formula "2") (term "1,0,1,0,0,1"))
                                    (rule "times_zero_1" (formula "2") (term "0,1,0,0,1"))
                                    (rule "leq_literals" (formula "2") (term "1,0,0,1"))
                                    (rule "concrete_and_3" (formula "2") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0,1"))
                                    (rule "qeq_literals" (formula "2") (term "0,0,1"))
                                    (rule "ifthenelse_true_for" (formula "2") (term "0,1"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,0,0") (inst "selectSK=arr_0"))
                                    (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "12"))
                                    (rule "elementOfFreshLocs" (formula "2") (term "1,0,0"))
                                    (rule "equalUnique" (formula "2") (term "0,1,0,0,0"))
                                    (rule "concrete_not_2" (formula "2") (term "1,0,0,0"))
                                    (rule "concrete_and_3" (formula "2") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "20"))
                                    (rule "concrete_not_2" (formula "2") (term "0,1,0,0"))
                                    (rule "concrete_and_1" (formula "2") (term "1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                                    (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                    (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                    (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                    (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "21"))
                                    (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                    (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                    (rule "ifEqualsNull" (formula "1"))
                                    (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                                    (rule "equalUnique" (formula "3") (term "1,1,0,0,0"))
                                    (rule "concrete_and_4" (formula "3") (term "1,0,0,0"))
                                    (rule "concrete_or_4" (formula "3") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                    (rule "equalUnique" (formula "3") (term "1,0,0,0"))
                                    (rule "concrete_and_4" (formula "3") (term "0,0,0"))
                                    (rule "concrete_or_2" (formula "3") (term "0,0"))
                                    (rule "ifthenelse_negated" (formula "3") (term "0"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,1"))
                                    (rule "equalUnique" (formula "1") (term "1,0,0,0,0,1"))
                                    (rule "concrete_and_4" (formula "1") (term "0,0,0,0,1"))
                                    (rule "concrete_or_2" (formula "1") (term "0,0,0,1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,1"))
                                    (rule "equalUnique" (formula "1") (term "1,0,0,0,1"))
                                    (rule "concrete_and_4" (formula "1") (term "0,0,0,1"))
                                    (rule "concrete_or_2" (formula "1") (term "0,0,1"))
                                    (rule "double_not" (formula "1") (term "0,1"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                    (rule "equalUnique" (formula "1") (term "1,1,0,0,0"))
                                    (rule "concrete_and_4" (formula "1") (term "1,0,0,0"))
                                    (rule "concrete_or_4" (formula "1") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                    (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                    (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                    (rule "concrete_or_2" (formula "1") (term "0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "0,1,1") (inst "selectSK=arr_2"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "equalUnique" (formula "1") (term "1,0,0"))
                                    (rule "concrete_and_4" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_false" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "2") (term "0,1,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_3"))
                                    (rule "simplifySelectOfCreate" (formula "3"))
                                    (rule "equalUnique" (formula "3") (term "1,0,0"))
                                    (rule "concrete_and_4" (formula "3") (term "0,0"))
                                    (rule "ifthenelse_false" (formula "3") (term "0"))
                                    (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "pullOutSelect" (formula "3") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                                    (rule "applyEq" (formula "1") (term "0,0,1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                                    (rule "simplifySelectOfCreate" (formula "3"))
                                    (rule "eqClose" (formula "3") (term "1,0,0"))
                                    (rule "concrete_and_3" (formula "3") (term "0,0"))
                                    (rule "castDel" (formula "3") (term "1,0"))
                                    (rule "eqSymm" (formula "3") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "24"))
                                    (rule "concrete_not_2" (formula "3") (term "1,0,0"))
                                    (rule "concrete_and_3" (formula "3") (term "0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "3") (term "0,0"))
                                    (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "22"))
                                    (rule "concrete_and_2" (formula "3") (term "0,0"))
                                    (rule "ifthenelse_false" (formula "3") (term "0"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0,1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "nnf_imp2or" (formula "16") (term "0"))
                                    (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "11"))
                                    (rule "notLeft" (formula "11"))
                                    (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                    (rule "commute_and" (formula "4") (term "0"))
                                    (rule "commute_or_2" (formula "15") (term "0"))
                                    (rule "commute_or" (formula "15") (term "0,0"))
                                    (rule "commute_or_2" (formula "15") (term "0"))
                                    (rule "cnf_rightDist" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "commute_or" (formula "1"))
                                    (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                    (rule "qeq_literals" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                    (rule "cnf_rightDist" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "commute_or" (formula "3"))
                                    (rule "commute_or" (formula "2"))
                                    (rule "cnf_rightDist" (formula "1"))
                                    (rule "neq_or" (formula "1") (term "0"))
                                    (rule "concrete_and_1" (formula "1"))
                                    (rule "commute_or" (formula "1"))
                                    (rule "cnf_rightDist" (formula "6"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "commute_or" (formula "6"))
                                    (rule "cnf_rightDist" (formula "7"))
                                    (rule "andLeft" (formula "7"))
                                    (rule "commute_or" (formula "7"))
                                    (rule "commute_or" (formula "8"))
                                    (rule "cnf_rightDist" (formula "6"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "inEqSimp_or_tautInEq2" (formula "6"))
                                    (rule "add_zero_right" (formula "6") (term "1,1"))
                                    (rule "qeq_literals" (formula "6") (term "1"))
                                    (rule "concrete_or_3" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "commute_or" (formula "6"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "7") (term "0,0,1") (ifseqformula "6"))
                                       (rule "applyEqReverse" (formula "10") (term "0,0") (ifseqformula "6"))
                                       (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "6"))
                                       (rule "applyEqReverse" (formula "9") (term "0,0,1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "2") (term "0"))
                                       (rule "concrete_or_2" (formula "2"))
                                       (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "5"))
                                       (rule "concrete_or_1" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                       (rule "concrete_or_1" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "13"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "cut_direct" (formula "6") (term "0"))
                                       (branch "CUT: j_0 <= 31 TRUE"
                                          (rule "concrete_or_1" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "cut_direct" (formula "7") (term "0"))
                                          (branch "CUT: j_0 <= -1 + i_0 TRUE"
                                             (rule "concrete_or_1" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "cut_direct" (formula "5") (term "0"))
                                             (branch "CUT: j_0 >= 0 TRUE"
                                                (rule "concrete_or_1" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "7"))
                                                (rule "times_zero_1" (formula "5") (term "0,0"))
                                                (rule "add_zero_left" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "mul_literals" (formula "5") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "5"))
                                                (rule "leq_literals" (formula "10") (term "0"))
                                                (rule "concrete_or_1" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "12"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                                                (rule "concrete_or_2" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0") (ifseqformula "13"))
                                                (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "4"))
                                                (rule "concrete_or_1" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "13"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "26"))
                                                (rule "concrete_or_2" (formula "1"))
                                                (rule "allLeft" (formula "20") (inst "t=mul(i_0, Z(2(#)))"))
                                                (rule "replaceKnownSelect_taclet000011001000_8" (formula "20") (term "0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000011001000_16" (formula "20") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "27"))
                                                (rule "concrete_or_2" (formula "20") (term "0"))
                                                (rule "inEqSimp_contradInEq3" (formula "20") (term "1") (ifseqformula "12"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,1"))
                                                (rule "greater_literals" (formula "20") (term "0,0,1"))
                                                (rule "concrete_impl_1" (formula "20") (term "0,1"))
                                                (rule "qeq_literals" (formula "20") (term "0,1"))
                                                (rule "concrete_and_2" (formula "20") (term "1"))
                                                (rule "concrete_or_4" (formula "20"))
                                                (rule "inEqSimp_contradInEq5" (formula "20") (ifseqformula "7"))
                                                (rule "mul_literals" (formula "20") (term "1,1,0"))
                                                (rule "greater_literals" (formula "20") (term "0,0"))
                                                (rule "concrete_impl_1" (formula "20") (term "0"))
                                                (rule "qeq_literals" (formula "20") (term "0"))
                                                (rule "concrete_and_2" (formula "20"))
                                                (rule "closeFalse" (formula "20"))
                                             )
                                             (branch "CUT: j_0 >= 0 FALSE"
                                                (rule "concrete_or_2" (formula "5"))
                                                (rule "inEqSimp_geqRight" (formula "23"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "1"))
                                                (rule "leq_literals" (formula "7") (term "0"))
                                                (rule "concrete_or_1" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "6"))
                                                (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                (rule "mul_literals" (formula "8") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                (rule "inEqSimp_contradInEq3" (formula "8") (ifseqformula "7"))
                                                (rule "greater_literals" (formula "8") (term "0,0"))
                                                (rule "concrete_impl_1" (formula "8") (term "0"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "polySimp_rightDist" (formula "8") (term "0"))
                                                (rule "mul_literals" (formula "8") (term "0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "8"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0"))
                                                (rule "add_zero_right" (formula "8") (term "0"))
                                                (rule "leq_literals" (formula "8"))
                                                (rule "closeFalse" (formula "8"))
                                             )
                                          )
                                          (branch "CUT: j_0 <= -1 + i_0 FALSE"
                                             (rule "concrete_or_2" (formula "7"))
                                             (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "7"))
                                             (rule "concrete_or_3" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_leqRight" (formula "22"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "7"))
                                             (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1"))
                                             (rule "mul_literals" (formula "8") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                             (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=add(Z(1(#)), i_0)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "leq_literals" (formula "8") (term "0,0"))
                                             (rule "concrete_or_2" (formula "8") (term "0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0"))
                                             (rule "leq_literals" (formula "8") (term "0"))
                                             (rule "concrete_or_2" (formula "8"))
                                             (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (rule "concrete_or_1" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                             (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                             (rule "add_literals" (formula "7") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "7"))
                                             (rule "leq_literals" (formula "11") (term "0"))
                                             (rule "concrete_or_1" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "12"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "13"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "26"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "0") (ifseqformula "14"))
                                             (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "5"))
                                             (rule "concrete_or_1" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "allLeft" (formula "20") (inst "t=mul(i_0, Z(2(#)))"))
                                             (rule "replaceKnownSelect_taclet000011001000_8" (formula "20") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000011001000_16" (formula "20") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "27"))
                                             (rule "concrete_or_2" (formula "20") (term "0"))
                                             (rule "inEqSimp_contradInEq5" (formula "20") (term "0") (ifseqformula "12"))
                                             (rule "greater_literals" (formula "20") (term "0,0,0"))
                                             (rule "concrete_impl_1" (formula "20") (term "0,0"))
                                             (rule "mul_literals" (formula "20") (term "1,0,0"))
                                             (rule "qeq_literals" (formula "20") (term "0,0"))
                                             (rule "concrete_and_2" (formula "20") (term "0"))
                                             (rule "concrete_or_2" (formula "20"))
                                             (rule "inEqSimp_contradInEq3" (formula "20") (ifseqformula "9"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0"))
                                             (rule "greater_literals" (formula "20") (term "0,0"))
                                             (rule "concrete_impl_1" (formula "20") (term "0"))
                                             (rule "qeq_literals" (formula "20") (term "0"))
                                             (rule "concrete_and_2" (formula "20"))
                                             (rule "closeFalse" (formula "20"))
                                          )
                                       )
                                       (branch "CUT: j_0 <= 31 FALSE"
                                          (rule "concrete_or_2" (formula "6"))
                                          (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "6"))
                                          (rule "concrete_or_1" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "inEqSimp_leqRight" (formula "22"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "6") (term "0,0"))
                                          (rule "concrete_or_1" (formula "6") (term "0"))
                                          (rule "concrete_or_1" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "10") (term "0"))
                                          (rule "concrete_and_2" (formula "10"))
                                          (rule "closeFalse" (formula "10"))
                                       )
                                    )
                                    (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "9") (term "0,0") (ifseqformula "5"))
                                       (rule "applyEqReverse" (formula "8") (term "0,0,1") (ifseqformula "5"))
                                       (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "0,0,1") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "23"))
                                       (rule "concrete_not_2" (formula "2") (term "0"))
                                       (rule "concrete_or_1" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "1"))
                                       (rule "concrete_or_3" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,0") (ifseqformula "12"))
                                       (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "25"))
                                       (rule "concrete_or_2" (formula "15"))
                                       (rule "cut_direct" (formula "4") (term "0"))
                                       (branch "CUT: j_0 <= 31 TRUE"
                                          (rule "concrete_or_1" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "cut_direct" (formula "5") (term "0"))
                                          (branch "CUT: j_0 <= -1 + i_0 TRUE"
                                             (rule "concrete_or_1" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "cut_direct" (formula "3") (term "0"))
                                             (branch "CUT: j_0 >= 0 TRUE"
                                                (rule "concrete_or_1" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                                                (rule "mul_literals" (formula "3") (term "0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
                                                (rule "leq_literals" (formula "8") (term "0"))
                                                (rule "concrete_or_1" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "10"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                                                (rule "concrete_or_2" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0,0") (ifseqformula "13"))
                                                (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "26"))
                                                (rule "concrete_or_2" (formula "8"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "14"))
                                                (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                                                (rule "concrete_or_1" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "allLeft" (formula "19") (inst "t=mul(i_0, Z(2(#)))"))
                                                (rule "replaceKnownSelect_taclet000011001000_8" (formula "19") (term "0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1000011001000_16" (formula "19") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "27"))
                                                (rule "concrete_or_2" (formula "19") (term "0"))
                                                (rule "inEqSimp_contradInEq3" (formula "19") (term "1") (ifseqformula "10"))
                                                (rule "greater_literals" (formula "19") (term "0,0,1"))
                                                (rule "concrete_impl_1" (formula "19") (term "0,1"))
                                                (rule "mul_literals" (formula "19") (term "0,0,1"))
                                                (rule "qeq_literals" (formula "19") (term "0,1"))
                                                (rule "concrete_and_2" (formula "19") (term "1"))
                                                (rule "concrete_or_4" (formula "19"))
                                                (rule "inEqSimp_contradInEq5" (formula "19") (ifseqformula "4"))
                                                (rule "mul_literals" (formula "19") (term "1,1,0"))
                                                (rule "greater_literals" (formula "19") (term "0,0"))
                                                (rule "concrete_impl_1" (formula "19") (term "0"))
                                                (rule "qeq_literals" (formula "19") (term "0"))
                                                (rule "concrete_and_2" (formula "19"))
                                                (rule "closeFalse" (formula "19"))
                                             )
                                             (branch "CUT: j_0 >= 0 FALSE"
                                                (rule "concrete_or_2" (formula "3"))
                                                (rule "inEqSimp_geqRight" (formula "22"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "1"))
                                                (rule "leq_literals" (formula "5") (term "0"))
                                                (rule "concrete_or_1" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                                                (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                (rule "mul_literals" (formula "6") (term "0,1"))
                                                (rule "inEqSimp_contradInEq3" (formula "6") (ifseqformula "5"))
                                                (rule "greater_literals" (formula "6") (term "0,0"))
                                                (rule "concrete_impl_1" (formula "6") (term "0"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "polySimp_rightDist" (formula "6") (term "0"))
                                                (rule "mul_literals" (formula "6") (term "0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "6"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0"))
                                                (rule "add_literals" (formula "6") (term "0"))
                                                (rule "leq_literals" (formula "6"))
                                                (rule "closeFalse" (formula "6"))
                                             )
                                          )
                                          (branch "CUT: j_0 <= -1 + i_0 FALSE"
                                             (rule "concrete_or_2" (formula "5"))
                                             (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "5"))
                                             (rule "concrete_or_3" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "inEqSimp_leqRight" (formula "21"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                             (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1"))
                                             (rule "mul_literals" (formula "6") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                             (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=add(Z(1(#)), i_0)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "6") (term "0,0"))
                                             (rule "concrete_or_2" (formula "6") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                             (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                             (rule "add_literals" (formula "6") (term "0,0"))
                                             (rule "leq_literals" (formula "6") (term "0"))
                                             (rule "concrete_or_2" (formula "6"))
                                             (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (rule "concrete_or_1" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "3"))
                                             (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "9") (term "0"))
                                             (rule "concrete_or_1" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "10"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "13"))
                                             (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                                             (rule "concrete_or_1" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "13"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "26"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "allLeft" (formula "19") (inst "t=mul(i_0, Z(2(#)))"))
                                             (rule "replaceKnownSelect_taclet000011001000_8" (formula "19") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1000011001000_16" (formula "19") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "27"))
                                             (rule "concrete_or_2" (formula "19") (term "0"))
                                             (rule "inEqSimp_contradInEq3" (formula "19") (term "1") (ifseqformula "7"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                             (rule "greater_literals" (formula "19") (term "0,0,1"))
                                             (rule "concrete_impl_1" (formula "19") (term "0,1"))
                                             (rule "qeq_literals" (formula "19") (term "0,1"))
                                             (rule "concrete_and_2" (formula "19") (term "1"))
                                             (rule "concrete_or_4" (formula "19"))
                                             (rule "inEqSimp_contradInEq5" (formula "19") (ifseqformula "10"))
                                             (rule "greater_literals" (formula "19") (term "0,0"))
                                             (rule "concrete_impl_1" (formula "19") (term "0"))
                                             (rule "times_zero_1" (formula "19") (term "1,0"))
                                             (rule "qeq_literals" (formula "19") (term "0"))
                                             (rule "concrete_and_2" (formula "19"))
                                             (rule "closeFalse" (formula "19"))
                                          )
                                       )
                                       (branch "CUT: j_0 <= 31 FALSE"
                                          (rule "concrete_or_2" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "4"))
                                          (rule "concrete_or_1" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_leqRight" (formula "21"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (term "0") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "4") (term "0,0"))
                                          (rule "concrete_or_1" (formula "4") (term "0"))
                                          (rule "concrete_or_1" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "7") (term "0"))
                                          (rule "concrete_or_1" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (rule "concrete_and_2" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "16") (inst "sk=i_0"))
                                    (rule "impRight" (formula "16"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "impRight" (formula "18"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "allRight" (formula "20") (inst "sk=j_0"))
                                    (rule "impRight" (formula "20"))
                                    (rule "notRight" (formula "21"))
                                    (rule "jdiv_axiom_inline" (formula "16") (term "1"))
                                    (rule "mul_literals" (formula "16") (term "0,0,2,1"))
                                    (rule "qeq_literals" (formula "16") (term "0,1"))
                                    (rule "ifthenelse_true" (formula "16") (term "1"))
                                    (rule "div_literals" (formula "16") (term "1"))
                                    (rule "jdiv_axiom_inline" (formula "15") (term "1"))
                                    (rule "qeq_literals" (formula "15") (term "0,1"))
                                    (rule "ifthenelse_true" (formula "15") (term "1"))
                                    (rule "div_literals" (formula "15") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,2,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "0,2,0,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,1,1"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "1,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "1,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "1,0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,1,1,0"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "0,1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "0,1,1,0"))
                                    (rule "dismissNonSelectedField" (formula "3") (term "0,1,1"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "3") (term "0,1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "3") (term "0,1,1"))
                                    (rule "dismissNonSelectedField" (formula "18") (term "1,0"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "18") (term "1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "18") (term "1,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "0,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "1,0"))
                                    (rule "dismissNonSelectedField" (formula "3") (term "1,0,1"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "3") (term "1,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "3") (term "1,0,1"))
                                    (rule "dismissNonSelectedField" (formula "5") (term "0,0,1"))
                                    (rule "replaceKnownSelect_taclet0_1" (formula "5") (term "0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "5") (term "0,0,1"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "18") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "1,1"))
                                    (rule "polySimp_mulAssoc" (formula "2") (term "1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,1"))
                                    (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "4"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "2") (term "0,1"))
                                    (rule "applyEq" (formula "3") (term "1,0,1,0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "17"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,1,0") (ifseqformula "17"))
                                    (rule "mul_literals" (formula "2") (term "1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,1,0"))
                                    (rule "jdiv_axiom_inline" (formula "5") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,0,2,0,1,0,0"))
                                    (rule "qeq_literals" (formula "5") (term "0,0,1,0,0"))
                                    (rule "ifthenelse_true" (formula "5") (term "0,1,0,0"))
                                    (rule "div_literals" (formula "5") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "1,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0"))
                                    (rule "mul_literals" (formula "2") (term "1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1"))
                                    (rule "elimGcdLeq" (formula "2") (term "1,0") (inst "elimGcdRightDiv=Z(1(3(#)))") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0"))
                                    (rule "sub_literals" (formula "2") (term "0,0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0,0,1,0,1,0"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "2") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,1,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,1,0,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,1,0,1,0"))
                                    (rule "qeq_literals" (formula "2") (term "1,0,1,0"))
                                    (rule "concrete_and_3" (formula "2") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "2") (term "1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "2") (term "0,1,0"))
                                    (rule "ifthenelse_true_for" (formula "2") (term "1,0"))
                                    (rule "elimGcdLeq" (formula "2") (term "1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_0)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0,0,0,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,0,1,1"))
                                    (rule "sub_literals" (formula "2") (term "0,0,0,0,0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,1,1"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,1,0,1,1"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,1,0,1,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,1,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1,1"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,1,1"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,1,1"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,1,0,1,1"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,1,0,1,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,1,0,1,1"))
                                    (rule "qeq_literals" (formula "2") (term "1,0,1,1"))
                                    (rule "concrete_and_3" (formula "2") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,1"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,1"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,1,1"))
                                    (rule "add_zero_left" (formula "2") (term "0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,1,1"))
                                    (rule "add_literals" (formula "2") (term "1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "2") (term "0,0,1,1"))
                                    (rule "leq_literals" (formula "2") (term "0,1,1"))
                                    (rule "ifthenelse_true_for" (formula "2") (term "1,1"))
                                    (rule "elimGcdGeq" (formula "2") (term "0,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,1"))
                                    (rule "sub_literals" (formula "2") (term "0,0,0,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "2") (term "0,0,0,1,0,0,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,1"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "2") (term "0,1,0,0,1"))
                                    (rule "add_literals" (formula "2") (term "1,0,1,0,0,1"))
                                    (rule "times_zero_1" (formula "2") (term "0,1,0,0,1"))
                                    (rule "leq_literals" (formula "2") (term "1,0,0,1"))
                                    (rule "concrete_and_3" (formula "2") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0,1"))
                                    (rule "qeq_literals" (formula "2") (term "0,0,1"))
                                    (rule "ifthenelse_true_for" (formula "2") (term "0,1"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,0,0") (inst "selectSK=arr_0"))
                                    (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "12"))
                                    (rule "elementOfFreshLocs" (formula "2") (term "1,0,0"))
                                    (rule "equalUnique" (formula "2") (term "0,1,0,0,0"))
                                    (rule "concrete_not_2" (formula "2") (term "1,0,0,0"))
                                    (rule "concrete_and_3" (formula "2") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "20"))
                                    (rule "concrete_not_2" (formula "2") (term "0,1,0,0"))
                                    (rule "concrete_and_1" (formula "2") (term "1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                                    (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                    (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                    (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                    (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "21"))
                                    (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                    (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                    (rule "ifEqualsNull" (formula "1"))
                                    (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                                    (rule "equalUnique" (formula "3") (term "1,1,0,0,0"))
                                    (rule "concrete_and_4" (formula "3") (term "1,0,0,0"))
                                    (rule "concrete_or_4" (formula "3") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                    (rule "equalUnique" (formula "3") (term "1,0,0,0"))
                                    (rule "concrete_and_4" (formula "3") (term "0,0,0"))
                                    (rule "concrete_or_2" (formula "3") (term "0,0"))
                                    (rule "ifthenelse_negated" (formula "3") (term "0"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,1"))
                                    (rule "equalUnique" (formula "1") (term "1,0,0,0,0,1"))
                                    (rule "concrete_and_4" (formula "1") (term "0,0,0,0,1"))
                                    (rule "concrete_or_2" (formula "1") (term "0,0,0,1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,1"))
                                    (rule "equalUnique" (formula "1") (term "1,0,0,0,1"))
                                    (rule "concrete_and_4" (formula "1") (term "0,0,0,1"))
                                    (rule "concrete_or_2" (formula "1") (term "0,0,1"))
                                    (rule "double_not" (formula "1") (term "0,1"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                    (rule "equalUnique" (formula "1") (term "1,1,0,0,0"))
                                    (rule "concrete_and_4" (formula "1") (term "1,0,0,0"))
                                    (rule "concrete_or_4" (formula "1") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                    (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                    (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                    (rule "concrete_or_2" (formula "1") (term "0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "0,1,1") (inst "selectSK=arr_2"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "equalUnique" (formula "1") (term "1,0,0"))
                                    (rule "concrete_and_4" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_false" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "2") (term "0,1,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_3"))
                                    (rule "simplifySelectOfCreate" (formula "3"))
                                    (rule "equalUnique" (formula "3") (term "1,0,0"))
                                    (rule "concrete_and_4" (formula "3") (term "0,0"))
                                    (rule "ifthenelse_false" (formula "3") (term "0"))
                                    (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "pullOutSelect" (formula "3") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                                    (rule "applyEq" (formula "1") (term "0,0,1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                                    (rule "simplifySelectOfCreate" (formula "3"))
                                    (rule "eqClose" (formula "3") (term "1,0,0"))
                                    (rule "concrete_and_3" (formula "3") (term "0,0"))
                                    (rule "castDel" (formula "3") (term "1,0"))
                                    (rule "eqSymm" (formula "3") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "24"))
                                    (rule "concrete_not_2" (formula "3") (term "1,0,0"))
                                    (rule "concrete_and_3" (formula "3") (term "0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "3") (term "0,0"))
                                    (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "22"))
                                    (rule "concrete_and_2" (formula "3") (term "0,0"))
                                    (rule "ifthenelse_false" (formula "3") (term "0"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0,1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "nnf_imp2or" (formula "16") (term "0"))
                                    (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "11"))
                                    (rule "notLeft" (formula "11"))
                                    (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                    (rule "commute_and" (formula "4") (term "0"))
                                    (rule "commute_or_2" (formula "15") (term "0"))
                                    (rule "commute_or" (formula "15") (term "0,0"))
                                    (rule "commute_or_2" (formula "15") (term "0"))
                                    (rule "cnf_rightDist" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "commute_or" (formula "1"))
                                    (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                    (rule "qeq_literals" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                    (rule "cnf_rightDist" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "commute_or" (formula "3"))
                                    (rule "commute_or" (formula "2"))
                                    (rule "cnf_rightDist" (formula "1"))
                                    (rule "neq_or" (formula "1") (term "0"))
                                    (rule "concrete_and_1" (formula "1"))
                                    (rule "commute_or" (formula "1"))
                                    (rule "cnf_rightDist" (formula "6"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "commute_or" (formula "6"))
                                    (rule "cnf_rightDist" (formula "7"))
                                    (rule "andLeft" (formula "7"))
                                    (rule "commute_or" (formula "7"))
                                    (rule "commute_or" (formula "8"))
                                    (rule "cnf_rightDist" (formula "6"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "inEqSimp_or_tautInEq2" (formula "6"))
                                    (rule "add_zero_right" (formula "6") (term "1,1"))
                                    (rule "qeq_literals" (formula "6") (term "1"))
                                    (rule "concrete_or_3" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "commute_or" (formula "6"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "7") (term "0,0,1") (ifseqformula "6"))
                                       (rule "applyEqReverse" (formula "10") (term "0,0") (ifseqformula "6"))
                                       (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "6"))
                                       (rule "applyEqReverse" (formula "9") (term "0,0,1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "2") (term "0"))
                                       (rule "concrete_or_2" (formula "2"))
                                       (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "5"))
                                       (rule "concrete_or_1" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                       (rule "concrete_or_1" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "13"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "cut_direct" (formula "6") (term "0"))
                                       (branch "CUT: j_0 <= 31 TRUE"
                                          (rule "concrete_or_1" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "cut_direct" (formula "7") (term "0"))
                                          (branch "CUT: j_0 <= -1 + i_0 TRUE"
                                             (rule "concrete_or_1" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "cut_direct" (formula "5") (term "0"))
                                             (branch "CUT: j_0 >= 0 TRUE"
                                                (rule "concrete_or_1" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "7"))
                                                (rule "times_zero_1" (formula "5") (term "0,0"))
                                                (rule "add_zero_left" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "mul_literals" (formula "5") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "5"))
                                                (rule "leq_literals" (formula "10") (term "0"))
                                                (rule "concrete_or_1" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "12"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                                                (rule "concrete_or_2" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0") (ifseqformula "13"))
                                                (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "4"))
                                                (rule "concrete_or_1" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "13"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "26"))
                                                (rule "concrete_or_2" (formula "1"))
                                                (rule "allLeft" (formula "20") (inst "t=mul(i_0, Z(2(#)))"))
                                                (rule "replaceKnownSelect_taclet100011001000_8" (formula "20") (term "0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0100011001000_16" (formula "20") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "27"))
                                                (rule "concrete_or_2" (formula "20") (term "0"))
                                                (rule "inEqSimp_contradInEq3" (formula "20") (term "1") (ifseqformula "12"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,1"))
                                                (rule "greater_literals" (formula "20") (term "0,0,1"))
                                                (rule "concrete_impl_1" (formula "20") (term "0,1"))
                                                (rule "qeq_literals" (formula "20") (term "0,1"))
                                                (rule "concrete_and_2" (formula "20") (term "1"))
                                                (rule "concrete_or_4" (formula "20"))
                                                (rule "inEqSimp_contradInEq5" (formula "20") (ifseqformula "7"))
                                                (rule "mul_literals" (formula "20") (term "1,1,0"))
                                                (rule "greater_literals" (formula "20") (term "0,0"))
                                                (rule "concrete_impl_1" (formula "20") (term "0"))
                                                (rule "qeq_literals" (formula "20") (term "0"))
                                                (rule "concrete_and_2" (formula "20"))
                                                (rule "closeFalse" (formula "20"))
                                             )
                                             (branch "CUT: j_0 >= 0 FALSE"
                                                (rule "concrete_or_2" (formula "5"))
                                                (rule "inEqSimp_geqRight" (formula "23"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "1"))
                                                (rule "leq_literals" (formula "7") (term "0"))
                                                (rule "concrete_or_1" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "6"))
                                                (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                (rule "mul_literals" (formula "8") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                (rule "inEqSimp_contradInEq3" (formula "8") (ifseqformula "7"))
                                                (rule "greater_literals" (formula "8") (term "0,0"))
                                                (rule "concrete_impl_1" (formula "8") (term "0"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "polySimp_rightDist" (formula "8") (term "0"))
                                                (rule "mul_literals" (formula "8") (term "0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "8"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0"))
                                                (rule "add_zero_right" (formula "8") (term "0"))
                                                (rule "leq_literals" (formula "8"))
                                                (rule "closeFalse" (formula "8"))
                                             )
                                          )
                                          (branch "CUT: j_0 <= -1 + i_0 FALSE"
                                             (rule "concrete_or_2" (formula "7"))
                                             (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "7"))
                                             (rule "concrete_or_3" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_leqRight" (formula "22"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "7"))
                                             (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1"))
                                             (rule "mul_literals" (formula "8") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                             (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=add(Z(1(#)), i_0)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "leq_literals" (formula "8") (term "0,0"))
                                             (rule "concrete_or_2" (formula "8") (term "0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0"))
                                             (rule "leq_literals" (formula "8") (term "0"))
                                             (rule "concrete_or_2" (formula "8"))
                                             (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (rule "concrete_or_1" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                             (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                             (rule "add_literals" (formula "7") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "7"))
                                             (rule "leq_literals" (formula "11") (term "0"))
                                             (rule "concrete_or_1" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "12"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "13"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "26"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "0") (ifseqformula "14"))
                                             (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "5"))
                                             (rule "concrete_or_1" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "allLeft" (formula "20") (inst "t=mul(i_0, Z(2(#)))"))
                                             (rule "replaceKnownSelect_taclet100011001000_8" (formula "20") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0100011001000_16" (formula "20") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "27"))
                                             (rule "concrete_or_2" (formula "20") (term "0"))
                                             (rule "inEqSimp_contradInEq5" (formula "20") (term "0") (ifseqformula "12"))
                                             (rule "greater_literals" (formula "20") (term "0,0,0"))
                                             (rule "concrete_impl_1" (formula "20") (term "0,0"))
                                             (rule "mul_literals" (formula "20") (term "1,0,0"))
                                             (rule "qeq_literals" (formula "20") (term "0,0"))
                                             (rule "concrete_and_2" (formula "20") (term "0"))
                                             (rule "concrete_or_2" (formula "20"))
                                             (rule "inEqSimp_contradInEq3" (formula "20") (ifseqformula "9"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0"))
                                             (rule "greater_literals" (formula "20") (term "0,0"))
                                             (rule "concrete_impl_1" (formula "20") (term "0"))
                                             (rule "qeq_literals" (formula "20") (term "0"))
                                             (rule "concrete_and_2" (formula "20"))
                                             (rule "closeFalse" (formula "20"))
                                          )
                                       )
                                       (branch "CUT: j_0 <= 31 FALSE"
                                          (rule "concrete_or_2" (formula "6"))
                                          (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "6"))
                                          (rule "concrete_or_1" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "inEqSimp_leqRight" (formula "22"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "6") (term "0,0"))
                                          (rule "concrete_or_1" (formula "6") (term "0"))
                                          (rule "concrete_or_1" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "10") (term "0"))
                                          (rule "concrete_and_2" (formula "10"))
                                          (rule "closeFalse" (formula "10"))
                                       )
                                    )
                                    (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "9") (term "0,0") (ifseqformula "5"))
                                       (rule "applyEqReverse" (formula "8") (term "0,0,1") (ifseqformula "5"))
                                       (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "0,0,1") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "23"))
                                       (rule "concrete_not_2" (formula "2") (term "0"))
                                       (rule "concrete_or_1" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "1"))
                                       (rule "concrete_or_3" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,0") (ifseqformula "12"))
                                       (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "25"))
                                       (rule "concrete_or_2" (formula "15"))
                                       (rule "cut_direct" (formula "4") (term "0"))
                                       (branch "CUT: j_0 <= 31 TRUE"
                                          (rule "concrete_or_1" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "cut_direct" (formula "5") (term "0"))
                                          (branch "CUT: j_0 <= -1 + i_0 TRUE"
                                             (rule "concrete_or_1" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "cut_direct" (formula "3") (term "0"))
                                             (branch "CUT: j_0 >= 0 TRUE"
                                                (rule "concrete_or_1" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                                                (rule "mul_literals" (formula "3") (term "0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
                                                (rule "leq_literals" (formula "8") (term "0"))
                                                (rule "concrete_or_1" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "10"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                                                (rule "concrete_or_2" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0,0") (ifseqformula "13"))
                                                (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "26"))
                                                (rule "concrete_or_2" (formula "8"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "14"))
                                                (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                                                (rule "concrete_or_1" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "allLeft" (formula "19") (inst "t=mul(i_0, Z(2(#)))"))
                                                (rule "replaceKnownSelect_taclet100011001000_8" (formula "19") (term "0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1100011001000_16" (formula "19") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "27"))
                                                (rule "concrete_or_2" (formula "19") (term "0"))
                                                (rule "inEqSimp_contradInEq3" (formula "19") (term "1") (ifseqformula "10"))
                                                (rule "greater_literals" (formula "19") (term "0,0,1"))
                                                (rule "concrete_impl_1" (formula "19") (term "0,1"))
                                                (rule "mul_literals" (formula "19") (term "0,0,1"))
                                                (rule "qeq_literals" (formula "19") (term "0,1"))
                                                (rule "concrete_and_2" (formula "19") (term "1"))
                                                (rule "concrete_or_4" (formula "19"))
                                                (rule "inEqSimp_contradInEq5" (formula "19") (ifseqformula "4"))
                                                (rule "mul_literals" (formula "19") (term "1,1,0"))
                                                (rule "greater_literals" (formula "19") (term "0,0"))
                                                (rule "concrete_impl_1" (formula "19") (term "0"))
                                                (rule "qeq_literals" (formula "19") (term "0"))
                                                (rule "concrete_and_2" (formula "19"))
                                                (rule "closeFalse" (formula "19"))
                                             )
                                             (branch "CUT: j_0 >= 0 FALSE"
                                                (rule "concrete_or_2" (formula "3"))
                                                (rule "inEqSimp_geqRight" (formula "22"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "1"))
                                                (rule "leq_literals" (formula "5") (term "0"))
                                                (rule "concrete_or_1" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                                                (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                (rule "mul_literals" (formula "6") (term "0,1"))
                                                (rule "inEqSimp_contradInEq3" (formula "6") (ifseqformula "5"))
                                                (rule "greater_literals" (formula "6") (term "0,0"))
                                                (rule "concrete_impl_1" (formula "6") (term "0"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "polySimp_rightDist" (formula "6") (term "0"))
                                                (rule "mul_literals" (formula "6") (term "0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "6"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0"))
                                                (rule "add_literals" (formula "6") (term "0"))
                                                (rule "leq_literals" (formula "6"))
                                                (rule "closeFalse" (formula "6"))
                                             )
                                          )
                                          (branch "CUT: j_0 <= -1 + i_0 FALSE"
                                             (rule "concrete_or_2" (formula "5"))
                                             (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "5"))
                                             (rule "concrete_or_3" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "inEqSimp_leqRight" (formula "21"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                             (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1"))
                                             (rule "mul_literals" (formula "6") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                             (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=add(Z(1(#)), i_0)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "6") (term "0,0"))
                                             (rule "concrete_or_2" (formula "6") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                             (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                             (rule "add_literals" (formula "6") (term "0,0"))
                                             (rule "leq_literals" (formula "6") (term "0"))
                                             (rule "concrete_or_2" (formula "6"))
                                             (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (rule "concrete_or_1" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "3"))
                                             (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "9") (term "0"))
                                             (rule "concrete_or_1" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "10"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "13"))
                                             (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                                             (rule "concrete_or_1" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "13"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "26"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "allLeft" (formula "19") (inst "t=mul(i_0, Z(2(#)))"))
                                             (rule "replaceKnownSelect_taclet100011001000_8" (formula "19") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1100011001000_16" (formula "19") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "27"))
                                             (rule "concrete_or_2" (formula "19") (term "0"))
                                             (rule "inEqSimp_contradInEq3" (formula "19") (term "1") (ifseqformula "7"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                             (rule "greater_literals" (formula "19") (term "0,0,1"))
                                             (rule "concrete_impl_1" (formula "19") (term "0,1"))
                                             (rule "qeq_literals" (formula "19") (term "0,1"))
                                             (rule "concrete_and_2" (formula "19") (term "1"))
                                             (rule "concrete_or_4" (formula "19"))
                                             (rule "inEqSimp_contradInEq5" (formula "19") (ifseqformula "10"))
                                             (rule "greater_literals" (formula "19") (term "0,0"))
                                             (rule "concrete_impl_1" (formula "19") (term "0"))
                                             (rule "times_zero_1" (formula "19") (term "1,0"))
                                             (rule "qeq_literals" (formula "19") (term "0"))
                                             (rule "concrete_and_2" (formula "19"))
                                             (rule "closeFalse" (formula "19"))
                                          )
                                       )
                                       (branch "CUT: j_0 <= 31 FALSE"
                                          (rule "concrete_or_2" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "4"))
                                          (rule "concrete_or_1" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_leqRight" (formula "21"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (term "0") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "4") (term "0,0"))
                                          (rule "concrete_or_1" (formula "4") (term "0"))
                                          (rule "concrete_or_1" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "7") (term "0"))
                                          (rule "concrete_or_1" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (rule "concrete_and_2" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "16") (inst "sk=i_0"))
                                 (rule "impRight" (formula "16"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "impRight" (formula "18"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "allRight" (formula "20") (inst "sk=j_0"))
                                 (rule "impRight" (formula "20"))
                                 (rule "notRight" (formula "21"))
                                 (rule "jdiv_axiom_inline" (formula "16") (term "1"))
                                 (rule "mul_literals" (formula "16") (term "0,0,2,1"))
                                 (rule "qeq_literals" (formula "16") (term "0,1"))
                                 (rule "ifthenelse_true" (formula "16") (term "1"))
                                 (rule "div_literals" (formula "16") (term "1"))
                                 (rule "jdiv_axiom_inline" (formula "15") (term "1"))
                                 (rule "qeq_literals" (formula "15") (term "0,1"))
                                 (rule "ifthenelse_true" (formula "15") (term "1"))
                                 (rule "div_literals" (formula "15") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "0,2,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,2,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,2,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,2,0,1"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,1,1"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "1,0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "1,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "1,0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "0,1,1,0"))
                                 (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "0,1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "0,1,1"))
                                 (rule "replaceKnownSelect_taclet0_1" (formula "3") (term "0,1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "3") (term "0,1,1"))
                                 (rule "dismissNonSelectedField" (formula "18") (term "1,0"))
                                 (rule "replaceKnownSelect_taclet0_1" (formula "18") (term "1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "18") (term "1,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "0,1,0,0,0"))
                                 (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "0,1,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "0,1,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                 (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "1,0"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "1,0,1"))
                                 (rule "replaceKnownSelect_taclet0_1" (formula "3") (term "1,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "3") (term "1,0,1"))
                                 (rule "dismissNonSelectedField" (formula "5") (term "0,0,1"))
                                 (rule "replaceKnownSelect_taclet0_1" (formula "5") (term "0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "5") (term "0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "18") (term "0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2") (term "1,1"))
                                 (rule "polySimp_mulAssoc" (formula "2") (term "1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,1"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "4"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "2") (term "0,1"))
                                 (rule "applyEq" (formula "3") (term "1,0,1,0") (ifseqformula "17"))
                                 (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "17"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "17"))
                                 (rule "applyEq" (formula "2") (term "0,1,0,1,0") (ifseqformula "17"))
                                 (rule "mul_literals" (formula "2") (term "1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,1,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,1,0"))
                                 (rule "jdiv_axiom_inline" (formula "5") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,0,2,0,1,0,0"))
                                 (rule "qeq_literals" (formula "5") (term "0,0,1,0,0"))
                                 (rule "ifthenelse_true" (formula "5") (term "0,1,0,0"))
                                 (rule "div_literals" (formula "5") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "5") (term "1,0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,1,1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,1,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0"))
                                 (rule "mul_literals" (formula "2") (term "1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                 (rule "mul_literals" (formula "5") (term "1"))
                                 (rule "elimGcdLeq" (formula "2") (term "1,0") (inst "elimGcdRightDiv=Z(1(3(#)))") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0"))
                                 (rule "sub_literals" (formula "2") (term "0,0,0,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0,0,1,0,1,0"))
                                 (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "2") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,1,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,1,0,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,1,0,1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,1,0,1,0"))
                                 (rule "qeq_literals" (formula "2") (term "1,0,1,0"))
                                 (rule "concrete_and_3" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "2") (term "1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "2") (term "0,1,0"))
                                 (rule "ifthenelse_true_for" (formula "2") (term "1,0"))
                                 (rule "elimGcdLeq" (formula "2") (term "1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_0)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0,0,0,1,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,0,1,1"))
                                 (rule "sub_literals" (formula "2") (term "0,0,0,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,1,1"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,1,0,1,1"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,1,0,1,1"))
                                 (rule "add_zero_right" (formula "2") (term "0,1,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1,1"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0,0,1,1"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0,0,1,1"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0,1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0,1,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,1,1"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,1,1"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,1,0,1,1"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,1,0,1,1"))
                                 (rule "add_zero_right" (formula "2") (term "0,1,0,1,1"))
                                 (rule "qeq_literals" (formula "2") (term "1,0,1,1"))
                                 (rule "concrete_and_3" (formula "2") (term "0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,1"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,1"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0,1,1"))
                                 (rule "add_zero_left" (formula "2") (term "0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,1,1"))
                                 (rule "add_literals" (formula "2") (term "1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "2") (term "0,0,1,1"))
                                 (rule "leq_literals" (formula "2") (term "0,1,1"))
                                 (rule "ifthenelse_true_for" (formula "2") (term "1,1"))
                                 (rule "elimGcdGeq" (formula "2") (term "0,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,1"))
                                 (rule "sub_literals" (formula "2") (term "0,0,0,0,0,0,0,0,1"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,0,0,1"))
                                 (rule "times_zero_1" (formula "2") (term "0,0,0,1,0,0,1"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,1"))
                                 (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,1"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0,1"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "2") (term "0,1,0,0,1"))
                                 (rule "add_literals" (formula "2") (term "1,0,1,0,0,1"))
                                 (rule "times_zero_1" (formula "2") (term "0,1,0,0,1"))
                                 (rule "leq_literals" (formula "2") (term "1,0,0,1"))
                                 (rule "concrete_and_3" (formula "2") (term "0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,0,1"))
                                 (rule "qeq_literals" (formula "2") (term "0,0,1"))
                                 (rule "ifthenelse_true_for" (formula "2") (term "0,1"))
                                 (rule "pullOutSelect" (formula "2") (term "0,0,0,0") (inst "selectSK=arr_0"))
                                 (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "12"))
                                 (rule "elementOfFreshLocs" (formula "2") (term "1,0,0"))
                                 (rule "equalUnique" (formula "2") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "2") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "2") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "20"))
                                 (rule "concrete_not_2" (formula "2") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "2") (term "1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                 (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                                 (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "21"))
                                 (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                 (rule "ifEqualsNull" (formula "1"))
                                 (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                                 (rule "equalUnique" (formula "3") (term "1,1,0,0,0"))
                                 (rule "concrete_and_4" (formula "3") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "3") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                 (rule "equalUnique" (formula "3") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "3") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "3") (term "0,0"))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0,1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,1"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0,0,1"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0,0,1"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0,0,1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,1"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0,1"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0,1"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0,1"))
                                 (rule "double_not" (formula "1") (term "0,1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0,0"))
                                 (rule "pullOutSelect" (formula "1") (term "0,1,1") (inst "selectSK=arr_2"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (rule "equalUnique" (formula "1") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "2") (term "0,1,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_3"))
                                 (rule "simplifySelectOfCreate" (formula "3"))
                                 (rule "equalUnique" (formula "3") (term "1,0,0"))
                                 (rule "concrete_and_4" (formula "3") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "3") (term "0"))
                                 (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "pullOutSelect" (formula "3") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                                 (rule "applyEq" (formula "1") (term "0,0,1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                                 (rule "simplifySelectOfCreate" (formula "3"))
                                 (rule "eqClose" (formula "3") (term "1,0,0"))
                                 (rule "concrete_and_3" (formula "3") (term "0,0"))
                                 (rule "castDel" (formula "3") (term "1,0"))
                                 (rule "eqSymm" (formula "3") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "24"))
                                 (rule "concrete_not_2" (formula "3") (term "1,0,0"))
                                 (rule "concrete_and_3" (formula "3") (term "0,0"))
                                 (rule "sortsDisjointModuloNull" (formula "3") (term "0,0"))
                                 (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "22"))
                                 (rule "concrete_and_2" (formula "3") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "3") (term "0"))
                                 (rule "applyEqReverse" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "1") (term "0,0,1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "nnf_imp2or" (formula "16") (term "0"))
                                 (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "11"))
                                 (rule "notLeft" (formula "11"))
                                 (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                 (rule "commute_and" (formula "4") (term "0"))
                                 (rule "commute_or_2" (formula "15") (term "0"))
                                 (rule "commute_or" (formula "15") (term "0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0"))
                                 (rule "cnf_rightDist" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "commute_or" (formula "1"))
                                 (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                 (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                 (rule "qeq_literals" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                 (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                 (rule "cnf_rightDist" (formula "2"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "commute_or" (formula "3"))
                                 (rule "commute_or" (formula "2"))
                                 (rule "cnf_rightDist" (formula "1"))
                                 (rule "neq_or" (formula "1") (term "0"))
                                 (rule "concrete_and_1" (formula "1"))
                                 (rule "commute_or" (formula "1"))
                                 (rule "cnf_rightDist" (formula "6"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "commute_or" (formula "6"))
                                 (rule "cnf_rightDist" (formula "7"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "commute_or" (formula "7"))
                                 (rule "commute_or" (formula "8"))
                                 (rule "cnf_rightDist" (formula "6"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "inEqSimp_or_tautInEq2" (formula "6"))
                                 (rule "add_zero_right" (formula "6") (term "1,1"))
                                 (rule "qeq_literals" (formula "6") (term "1"))
                                 (rule "concrete_or_3" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "commute_or" (formula "6"))
                                 (rule "ifthenelse_split" (formula "5") (term "0"))
                                 (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "7") (term "0,0,1") (ifseqformula "6"))
                                    (rule "applyEqReverse" (formula "10") (term "0,0") (ifseqformula "6"))
                                    (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "6"))
                                    (rule "applyEqReverse" (formula "9") (term "0,0,1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "5"))
                                    (rule "concrete_not_1" (formula "2") (term "0"))
                                    (rule "concrete_or_2" (formula "2"))
                                    (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "5"))
                                    (rule "concrete_or_1" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "concrete_or_1" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "13"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
                                    (rule "concrete_or_2" (formula "1"))
                                    (rule "cut_direct" (formula "6") (term "0"))
                                    (branch "CUT: j_0 <= 31 TRUE"
                                       (rule "concrete_or_1" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "cut_direct" (formula "7") (term "0"))
                                       (branch "CUT: j_0 <= -1 + i_0 TRUE"
                                          (rule "concrete_or_1" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "cut_direct" (formula "5") (term "0"))
                                          (branch "CUT: j_0 >= 0 TRUE"
                                             (rule "concrete_or_1" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "7"))
                                             (rule "times_zero_1" (formula "5") (term "0,0"))
                                             (rule "add_zero_left" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "mul_literals" (formula "5") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "10") (term "0"))
                                             (rule "concrete_or_1" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "12"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0") (ifseqformula "13"))
                                             (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "4"))
                                             (rule "concrete_or_1" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "13"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "26"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "allLeft" (formula "20") (inst "t=mul(i_0, Z(2(#)))"))
                                             (rule "replaceKnownSelect_taclet10011001000_7" (formula "20") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet010011001000_15" (formula "20") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "27"))
                                             (rule "concrete_or_2" (formula "20") (term "0"))
                                             (rule "inEqSimp_contradInEq3" (formula "20") (term "1") (ifseqformula "12"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0,1"))
                                             (rule "greater_literals" (formula "20") (term "0,0,1"))
                                             (rule "concrete_impl_1" (formula "20") (term "0,1"))
                                             (rule "qeq_literals" (formula "20") (term "0,1"))
                                             (rule "concrete_and_2" (formula "20") (term "1"))
                                             (rule "concrete_or_4" (formula "20"))
                                             (rule "inEqSimp_contradInEq5" (formula "20") (ifseqformula "7"))
                                             (rule "mul_literals" (formula "20") (term "1,1,0"))
                                             (rule "greater_literals" (formula "20") (term "0,0"))
                                             (rule "concrete_impl_1" (formula "20") (term "0"))
                                             (rule "qeq_literals" (formula "20") (term "0"))
                                             (rule "concrete_and_2" (formula "20"))
                                             (rule "closeFalse" (formula "20"))
                                          )
                                          (branch "CUT: j_0 >= 0 FALSE"
                                             (rule "concrete_or_2" (formula "5"))
                                             (rule "inEqSimp_geqRight" (formula "23"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "7") (term "0"))
                                             (rule "concrete_or_1" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "6"))
                                             (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1"))
                                             (rule "mul_literals" (formula "8") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                             (rule "inEqSimp_contradInEq3" (formula "8") (ifseqformula "7"))
                                             (rule "greater_literals" (formula "8") (term "0,0"))
                                             (rule "concrete_impl_1" (formula "8") (term "0"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "polySimp_rightDist" (formula "8") (term "0"))
                                             (rule "mul_literals" (formula "8") (term "0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0"))
                                             (rule "add_zero_right" (formula "8") (term "0"))
                                             (rule "leq_literals" (formula "8"))
                                             (rule "closeFalse" (formula "8"))
                                          )
                                       )
                                       (branch "CUT: j_0 <= -1 + i_0 FALSE"
                                          (rule "concrete_or_2" (formula "7"))
                                          (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "7"))
                                          (rule "concrete_or_3" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_leqRight" (formula "22"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "7"))
                                          (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1"))
                                          (rule "mul_literals" (formula "8") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                          (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=add(Z(1(#)), i_0)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "leq_literals" (formula "8") (term "0,0"))
                                          (rule "concrete_or_2" (formula "8") (term "0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0"))
                                          (rule "leq_literals" (formula "8") (term "0"))
                                          (rule "concrete_or_2" (formula "8"))
                                          (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (rule "concrete_or_1" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                          (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0"))
                                          (rule "add_literals" (formula "7") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "7"))
                                          (rule "leq_literals" (formula "11") (term "0"))
                                          (rule "concrete_or_1" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "12"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "13"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "26"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "0") (ifseqformula "14"))
                                          (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "5"))
                                          (rule "concrete_or_1" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "allLeft" (formula "20") (inst "t=mul(i_0, Z(2(#)))"))
                                          (rule "replaceKnownSelect_taclet10011001000_7" (formula "20") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010011001000_15" (formula "20") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "27"))
                                          (rule "concrete_or_2" (formula "20") (term "0"))
                                          (rule "inEqSimp_contradInEq5" (formula "20") (term "0") (ifseqformula "12"))
                                          (rule "greater_literals" (formula "20") (term "0,0,0"))
                                          (rule "concrete_impl_1" (formula "20") (term "0,0"))
                                          (rule "mul_literals" (formula "20") (term "1,0,0"))
                                          (rule "qeq_literals" (formula "20") (term "0,0"))
                                          (rule "concrete_and_2" (formula "20") (term "0"))
                                          (rule "concrete_or_2" (formula "20"))
                                          (rule "inEqSimp_contradInEq3" (formula "20") (ifseqformula "9"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0"))
                                          (rule "greater_literals" (formula "20") (term "0,0"))
                                          (rule "concrete_impl_1" (formula "20") (term "0"))
                                          (rule "qeq_literals" (formula "20") (term "0"))
                                          (rule "concrete_and_2" (formula "20"))
                                          (rule "closeFalse" (formula "20"))
                                       )
                                    )
                                    (branch "CUT: j_0 <= 31 FALSE"
                                       (rule "concrete_or_2" (formula "6"))
                                       (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "6"))
                                       (rule "concrete_or_1" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_leqRight" (formula "22"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "6") (term "0,0"))
                                       (rule "concrete_or_1" (formula "6") (term "0"))
                                       (rule "concrete_or_1" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "10") (term "0"))
                                       (rule "concrete_and_2" (formula "10"))
                                       (rule "closeFalse" (formula "10"))
                                    )
                                 )
                                 (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE FALSE"
                                    (rule "applyEqReverse" (formula "9") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEqReverse" (formula "8") (term "0,0,1") (ifseqformula "5"))
                                    (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "0,0,1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "23"))
                                    (rule "concrete_not_2" (formula "2") (term "0"))
                                    (rule "concrete_or_1" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
                                    (rule "concrete_or_2" (formula "1"))
                                    (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "1"))
                                    (rule "concrete_or_3" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,0") (ifseqformula "12"))
                                    (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "25"))
                                    (rule "concrete_or_2" (formula "15"))
                                    (rule "cut_direct" (formula "4") (term "0"))
                                    (branch "CUT: j_0 <= 31 TRUE"
                                       (rule "concrete_or_1" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "cut_direct" (formula "5") (term "0"))
                                       (branch "CUT: j_0 <= -1 + i_0 TRUE"
                                          (rule "concrete_or_1" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "cut_direct" (formula "3") (term "0"))
                                          (branch "CUT: j_0 >= 0 TRUE"
                                             (rule "concrete_or_1" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                                             (rule "mul_literals" (formula "3") (term "0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
                                             (rule "leq_literals" (formula "8") (term "0"))
                                             (rule "concrete_or_1" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "10"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0,0") (ifseqformula "13"))
                                             (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "26"))
                                             (rule "concrete_or_2" (formula "8"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "14"))
                                             (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                                             (rule "concrete_or_1" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "allLeft" (formula "19") (inst "t=mul(i_0, Z(2(#)))"))
                                             (rule "replaceKnownSelect_taclet10011001000_7" (formula "19") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet110011001000_15" (formula "19") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "27"))
                                             (rule "concrete_or_2" (formula "19") (term "0"))
                                             (rule "inEqSimp_contradInEq3" (formula "19") (term "1") (ifseqformula "10"))
                                             (rule "greater_literals" (formula "19") (term "0,0,1"))
                                             (rule "concrete_impl_1" (formula "19") (term "0,1"))
                                             (rule "mul_literals" (formula "19") (term "0,0,1"))
                                             (rule "qeq_literals" (formula "19") (term "0,1"))
                                             (rule "concrete_and_2" (formula "19") (term "1"))
                                             (rule "concrete_or_4" (formula "19"))
                                             (rule "inEqSimp_contradInEq5" (formula "19") (ifseqformula "4"))
                                             (rule "mul_literals" (formula "19") (term "1,1,0"))
                                             (rule "greater_literals" (formula "19") (term "0,0"))
                                             (rule "concrete_impl_1" (formula "19") (term "0"))
                                             (rule "qeq_literals" (formula "19") (term "0"))
                                             (rule "concrete_and_2" (formula "19"))
                                             (rule "closeFalse" (formula "19"))
                                          )
                                          (branch "CUT: j_0 >= 0 FALSE"
                                             (rule "concrete_or_2" (formula "3"))
                                             (rule "inEqSimp_geqRight" (formula "22"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "5") (term "0"))
                                             (rule "concrete_or_1" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                                             (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                             (rule "mul_literals" (formula "6") (term "0,1"))
                                             (rule "inEqSimp_contradInEq3" (formula "6") (ifseqformula "5"))
                                             (rule "greater_literals" (formula "6") (term "0,0"))
                                             (rule "concrete_impl_1" (formula "6") (term "0"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "polySimp_rightDist" (formula "6") (term "0"))
                                             (rule "mul_literals" (formula "6") (term "0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                             (rule "mul_literals" (formula "6") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0"))
                                             (rule "add_literals" (formula "6") (term "0"))
                                             (rule "leq_literals" (formula "6"))
                                             (rule "closeFalse" (formula "6"))
                                          )
                                       )
                                       (branch "CUT: j_0 <= -1 + i_0 FALSE"
                                          (rule "concrete_or_2" (formula "5"))
                                          (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "5"))
                                          (rule "concrete_or_3" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "inEqSimp_leqRight" (formula "21"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                          (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1"))
                                          (rule "mul_literals" (formula "6") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                          (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=add(Z(1(#)), i_0)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "6") (term "0,0"))
                                          (rule "concrete_or_2" (formula "6") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0"))
                                          (rule "leq_literals" (formula "6") (term "0"))
                                          (rule "concrete_or_2" (formula "6"))
                                          (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (rule "concrete_or_1" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "3"))
                                          (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "add_literals" (formula "5") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "9") (term "0"))
                                          (rule "concrete_or_1" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "10"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "13"))
                                          (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                                          (rule "concrete_or_1" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "13"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "26"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "allLeft" (formula "19") (inst "t=mul(i_0, Z(2(#)))"))
                                          (rule "replaceKnownSelect_taclet10011001000_7" (formula "19") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110011001000_15" (formula "19") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "27"))
                                          (rule "concrete_or_2" (formula "19") (term "0"))
                                          (rule "inEqSimp_contradInEq3" (formula "19") (term "1") (ifseqformula "7"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                          (rule "greater_literals" (formula "19") (term "0,0,1"))
                                          (rule "concrete_impl_1" (formula "19") (term "0,1"))
                                          (rule "qeq_literals" (formula "19") (term "0,1"))
                                          (rule "concrete_and_2" (formula "19") (term "1"))
                                          (rule "concrete_or_4" (formula "19"))
                                          (rule "inEqSimp_contradInEq5" (formula "19") (ifseqformula "10"))
                                          (rule "greater_literals" (formula "19") (term "0,0"))
                                          (rule "concrete_impl_1" (formula "19") (term "0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0"))
                                          (rule "qeq_literals" (formula "19") (term "0"))
                                          (rule "concrete_and_2" (formula "19"))
                                          (rule "closeFalse" (formula "19"))
                                       )
                                    )
                                    (branch "CUT: j_0 <= 31 FALSE"
                                       (rule "concrete_or_2" (formula "4"))
                                       (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "4"))
                                       (rule "concrete_or_1" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "inEqSimp_leqRight" (formula "21"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "4") (term "0") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "4") (term "0,0"))
                                       (rule "concrete_or_1" (formula "4") (term "0"))
                                       (rule "concrete_or_1" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "7") (term "0"))
                                       (rule "concrete_or_1" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (rule "concrete_and_2" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "16") (inst "sk=i_0"))
                              (rule "impRight" (formula "16"))
                              (rule "andLeft" (formula "1"))
                              (rule "impRight" (formula "18"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "allRight" (formula "20") (inst "sk=j_0"))
                              (rule "impRight" (formula "20"))
                              (rule "notRight" (formula "21"))
                              (rule "jdiv_axiom_inline" (formula "16") (term "1"))
                              (rule "mul_literals" (formula "16") (term "0,0,2,1"))
                              (rule "qeq_literals" (formula "16") (term "0,1"))
                              (rule "ifthenelse_true" (formula "16") (term "1"))
                              (rule "div_literals" (formula "16") (term "1"))
                              (rule "jdiv_axiom_inline" (formula "15") (term "1"))
                              (rule "qeq_literals" (formula "15") (term "0,1"))
                              (rule "ifthenelse_true" (formula "15") (term "1"))
                              (rule "div_literals" (formula "15") (term "1"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "0,2,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,2,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,2,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,2,0,1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,1,1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,1,1"))
                              (rule "dismissNonSelectedField" (formula "2") (term "1,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "1,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "1,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "0,1,1,0"))
                              (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "0,1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,1,1"))
                              (rule "replaceKnownSelect_taclet0_1" (formula "3") (term "0,1,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "3") (term "0,1,1"))
                              (rule "dismissNonSelectedField" (formula "18") (term "1,0"))
                              (rule "replaceKnownSelect_taclet0_1" (formula "18") (term "1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "18") (term "1,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "0,1,0,0,0"))
                              (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "0,1,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "0,1,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                              (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "1,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "1,0,1"))
                              (rule "replaceKnownSelect_taclet0_1" (formula "3") (term "1,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "3") (term "1,0,1"))
                              (rule "dismissNonSelectedField" (formula "5") (term "0,0,1"))
                              (rule "replaceKnownSelect_taclet0_1" (formula "5") (term "0,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "5") (term "0,0,1"))
                              (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "18") (term "0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "2") (term "1,1"))
                              (rule "polySimp_mulAssoc" (formula "2") (term "1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,1"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "4"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "2") (term "0,1"))
                              (rule "applyEq" (formula "3") (term "1,0,1,0") (ifseqformula "17"))
                              (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "17"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "17"))
                              (rule "applyEq" (formula "2") (term "0,1,0,1,0") (ifseqformula "17"))
                              (rule "mul_literals" (formula "2") (term "1,0,1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,1,0"))
                              (rule "add_literals" (formula "2") (term "0,0,1,0"))
                              (rule "jdiv_axiom_inline" (formula "5") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "5") (term "0,0,2,0,1,0,0"))
                              (rule "qeq_literals" (formula "5") (term "0,0,1,0,0"))
                              (rule "ifthenelse_true" (formula "5") (term "0,1,0,0"))
                              (rule "div_literals" (formula "5") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "5") (term "1,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1,1,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0"))
                              (rule "mul_literals" (formula "2") (term "1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                              (rule "mul_literals" (formula "5") (term "1"))
                              (rule "elimGcdLeq" (formula "2") (term "1,0") (inst "elimGcdRightDiv=Z(1(3(#)))") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "2") (term "0,0,0,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,1,0,1,0"))
                              (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,1,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0,0,1,0,1,0"))
                              (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0,0,1,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0,0,1,0"))
                              (rule "add_zero_left" (formula "2") (term "0,0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,1,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,1,0,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,1,0,1,0"))
                              (rule "add_zero_right" (formula "2") (term "0,1,0,1,0"))
                              (rule "qeq_literals" (formula "2") (term "1,0,1,0"))
                              (rule "concrete_and_3" (formula "2") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,1,0"))
                              (rule "add_literals" (formula "2") (term "1,0,0,1,0"))
                              (rule "times_zero_1" (formula "2") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "2") (term "0,1,0"))
                              (rule "ifthenelse_true_for" (formula "2") (term "1,0"))
                              (rule "elimGcdLeq" (formula "2") (term "1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_0)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,1"))
                              (rule "mul_literals" (formula "2") (term "0,0,0,0,0,1,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,0,1,1"))
                              (rule "sub_literals" (formula "2") (term "0,0,0,0,0,0,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,1,1"))
                              (rule "add_literals" (formula "2") (term "1,1,0,1,0,1,1"))
                              (rule "times_zero_1" (formula "2") (term "1,0,1,0,1,1"))
                              (rule "add_zero_right" (formula "2") (term "0,1,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1,1"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0,0,1,1"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0,0,1,1"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0,1,1"))
                              (rule "mul_literals" (formula "2") (term "0,0,0,1,0,1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,1,1"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,1,1"))
                              (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,1,1"))
                              (rule "add_literals" (formula "2") (term "1,1,0,1,0,1,1"))
                              (rule "times_zero_1" (formula "2") (term "1,0,1,0,1,1"))
                              (rule "add_zero_right" (formula "2") (term "0,1,0,1,1"))
                              (rule "qeq_literals" (formula "2") (term "1,0,1,1"))
                              (rule "concrete_and_3" (formula "2") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,1"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,1"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0,1,1"))
                              (rule "add_zero_left" (formula "2") (term "0,0,0,1,1"))
                              (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,1,1"))
                              (rule "add_literals" (formula "2") (term "1,0,0,1,1"))
                              (rule "times_zero_1" (formula "2") (term "0,0,1,1"))
                              (rule "leq_literals" (formula "2") (term "0,1,1"))
                              (rule "ifthenelse_true_for" (formula "2") (term "1,1"))
                              (rule "elimGcdGeq" (formula "2") (term "0,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,1"))
                              (rule "sub_literals" (formula "2") (term "0,0,0,0,0,0,0,0,1"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,0,0,1"))
                              (rule "times_zero_1" (formula "2") (term "0,0,0,1,0,0,1"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,1"))
                              (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,1"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0,1"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,1"))
                              (rule "polySimp_pullOutFactor0" (formula "2") (term "0,1,0,0,1"))
                              (rule "add_literals" (formula "2") (term "1,0,1,0,0,1"))
                              (rule "times_zero_1" (formula "2") (term "0,1,0,0,1"))
                              (rule "leq_literals" (formula "2") (term "1,0,0,1"))
                              (rule "concrete_and_3" (formula "2") (term "0,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0,0,1"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0,0,1"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,1"))
                              (rule "qeq_literals" (formula "2") (term "0,0,1"))
                              (rule "ifthenelse_true_for" (formula "2") (term "0,1"))
                              (rule "pullOutSelect" (formula "2") (term "0,0,0,0") (inst "selectSK=arr_0"))
                              (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
                              (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "12"))
                              (rule "elementOfFreshLocs" (formula "2") (term "1,0,0"))
                              (rule "equalUnique" (formula "2") (term "0,1,0,0,0"))
                              (rule "concrete_not_2" (formula "2") (term "1,0,0,0"))
                              (rule "concrete_and_3" (formula "2") (term "0,0,0"))
                              (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "20"))
                              (rule "concrete_not_2" (formula "2") (term "0,1,0,0"))
                              (rule "concrete_and_1" (formula "2") (term "1,0,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                              (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                              (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                              (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "21"))
                              (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                              (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                              (rule "ifEqualsNull" (formula "1"))
                              (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                              (rule "equalUnique" (formula "3") (term "1,1,0,0,0"))
                              (rule "concrete_and_4" (formula "3") (term "1,0,0,0"))
                              (rule "concrete_or_4" (formula "3") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                              (rule "equalUnique" (formula "3") (term "1,0,0,0"))
                              (rule "concrete_and_4" (formula "3") (term "0,0,0"))
                              (rule "concrete_or_2" (formula "3") (term "0,0"))
                              (rule "ifthenelse_negated" (formula "3") (term "0"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,1"))
                              (rule "equalUnique" (formula "1") (term "1,0,0,0,0,1"))
                              (rule "concrete_and_4" (formula "1") (term "0,0,0,0,1"))
                              (rule "concrete_or_2" (formula "1") (term "0,0,0,1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,1"))
                              (rule "equalUnique" (formula "1") (term "1,0,0,0,1"))
                              (rule "concrete_and_4" (formula "1") (term "0,0,0,1"))
                              (rule "concrete_or_2" (formula "1") (term "0,0,1"))
                              (rule "double_not" (formula "1") (term "0,1"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                              (rule "equalUnique" (formula "1") (term "1,1,0,0,0"))
                              (rule "concrete_and_4" (formula "1") (term "1,0,0,0"))
                              (rule "concrete_or_4" (formula "1") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                              (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                              (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                              (rule "concrete_or_2" (formula "1") (term "0,0"))
                              (rule "pullOutSelect" (formula "1") (term "0,1,1") (inst "selectSK=arr_2"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (rule "equalUnique" (formula "1") (term "1,0,0"))
                              (rule "concrete_and_4" (formula "1") (term "0,0"))
                              (rule "ifthenelse_false" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "2") (term "0,1,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_3"))
                              (rule "simplifySelectOfCreate" (formula "3"))
                              (rule "equalUnique" (formula "3") (term "1,0,0"))
                              (rule "concrete_and_4" (formula "3") (term "0,0"))
                              (rule "ifthenelse_false" (formula "3") (term "0"))
                              (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "pullOutSelect" (formula "3") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                              (rule "applyEq" (formula "1") (term "0,0,1") (ifseqformula "3"))
                              (rule "applyEq" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                              (rule "simplifySelectOfCreate" (formula "3"))
                              (rule "eqClose" (formula "3") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "3") (term "0,0"))
                              (rule "castDel" (formula "3") (term "1,0"))
                              (rule "eqSymm" (formula "3") (term "0,0,0"))
                              (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "24"))
                              (rule "concrete_not_2" (formula "3") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "3") (term "0,0"))
                              (rule "sortsDisjointModuloNull" (formula "3") (term "0,0"))
                              (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "22"))
                              (rule "concrete_and_2" (formula "3") (term "0,0"))
                              (rule "ifthenelse_false" (formula "3") (term "0"))
                              (rule "applyEqReverse" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "1") (term "0,0,1") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "nnf_imp2or" (formula "16") (term "0"))
                              (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "11"))
                              (rule "notLeft" (formula "11"))
                              (rule "nnf_notAnd" (formula "15") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                              (rule "commute_and" (formula "4") (term "0"))
                              (rule "commute_or_2" (formula "15") (term "0"))
                              (rule "commute_or" (formula "15") (term "0,0"))
                              (rule "commute_or_2" (formula "15") (term "0"))
                              (rule "cnf_rightDist" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "commute_or" (formula "1"))
                              (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                              (rule "qeq_literals" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                              (rule "cnf_rightDist" (formula "2"))
                              (rule "andLeft" (formula "2"))
                              (rule "commute_or" (formula "3"))
                              (rule "commute_or" (formula "2"))
                              (rule "cnf_rightDist" (formula "1"))
                              (rule "neq_or" (formula "1") (term "0"))
                              (rule "concrete_and_1" (formula "1"))
                              (rule "commute_or" (formula "1"))
                              (rule "cnf_rightDist" (formula "6"))
                              (rule "andLeft" (formula "6"))
                              (rule "commute_or" (formula "6"))
                              (rule "cnf_rightDist" (formula "7"))
                              (rule "andLeft" (formula "7"))
                              (rule "commute_or" (formula "7"))
                              (rule "commute_or" (formula "8"))
                              (rule "cnf_rightDist" (formula "6"))
                              (rule "andLeft" (formula "6"))
                              (rule "inEqSimp_or_tautInEq2" (formula "6"))
                              (rule "add_zero_right" (formula "6") (term "1,1"))
                              (rule "qeq_literals" (formula "6") (term "1"))
                              (rule "concrete_or_3" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "commute_or" (formula "6"))
                              (rule "ifthenelse_split" (formula "5") (term "0"))
                              (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "7") (term "0,0,1") (ifseqformula "6"))
                                 (rule "applyEqReverse" (formula "10") (term "0,0") (ifseqformula "6"))
                                 (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "6"))
                                 (rule "applyEqReverse" (formula "9") (term "0,0,1") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "5"))
                                 (rule "concrete_not_1" (formula "2") (term "0"))
                                 (rule "concrete_or_2" (formula "2"))
                                 (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "5"))
                                 (rule "concrete_or_1" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                 (rule "concrete_or_1" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "13"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
                                 (rule "concrete_or_2" (formula "1"))
                                 (rule "cut_direct" (formula "6") (term "0"))
                                 (branch "CUT: j_0 <= 31 TRUE"
                                    (rule "concrete_or_1" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "cut_direct" (formula "7") (term "0"))
                                    (branch "CUT: j_0 <= -1 + i_0 TRUE"
                                       (rule "concrete_or_1" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "cut_direct" (formula "5") (term "0"))
                                       (branch "CUT: j_0 >= 0 TRUE"
                                          (rule "concrete_or_1" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "7"))
                                          (rule "times_zero_1" (formula "5") (term "0,0"))
                                          (rule "add_zero_left" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "10") (term "0"))
                                          (rule "concrete_or_1" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "12"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0") (ifseqformula "13"))
                                          (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "4"))
                                          (rule "concrete_or_1" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "13"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "26"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "allLeft" (formula "20") (inst "t=mul(i_0, Z(2(#)))"))
                                          (rule "replaceKnownSelect_taclet1011001000_6" (formula "20") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet01011001000_14" (formula "20") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "27"))
                                          (rule "concrete_or_2" (formula "20") (term "0"))
                                          (rule "inEqSimp_contradInEq3" (formula "20") (term "1") (ifseqformula "12"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,1"))
                                          (rule "greater_literals" (formula "20") (term "0,0,1"))
                                          (rule "concrete_impl_1" (formula "20") (term "0,1"))
                                          (rule "qeq_literals" (formula "20") (term "0,1"))
                                          (rule "concrete_and_2" (formula "20") (term "1"))
                                          (rule "concrete_or_4" (formula "20"))
                                          (rule "inEqSimp_contradInEq5" (formula "20") (ifseqformula "7"))
                                          (rule "mul_literals" (formula "20") (term "1,1,0"))
                                          (rule "greater_literals" (formula "20") (term "0,0"))
                                          (rule "concrete_impl_1" (formula "20") (term "0"))
                                          (rule "qeq_literals" (formula "20") (term "0"))
                                          (rule "concrete_and_2" (formula "20"))
                                          (rule "closeFalse" (formula "20"))
                                       )
                                       (branch "CUT: j_0 >= 0 FALSE"
                                          (rule "concrete_or_2" (formula "5"))
                                          (rule "inEqSimp_geqRight" (formula "23"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "7") (term "0"))
                                          (rule "concrete_or_1" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "6"))
                                          (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1"))
                                          (rule "mul_literals" (formula "8") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                          (rule "inEqSimp_contradInEq3" (formula "8") (ifseqformula "7"))
                                          (rule "greater_literals" (formula "8") (term "0,0"))
                                          (rule "concrete_impl_1" (formula "8") (term "0"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "polySimp_rightDist" (formula "8") (term "0"))
                                          (rule "mul_literals" (formula "8") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0"))
                                          (rule "add_zero_right" (formula "8") (term "0"))
                                          (rule "leq_literals" (formula "8"))
                                          (rule "closeFalse" (formula "8"))
                                       )
                                    )
                                    (branch "CUT: j_0 <= -1 + i_0 FALSE"
                                       (rule "concrete_or_2" (formula "7"))
                                       (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "7"))
                                       (rule "concrete_or_3" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "inEqSimp_leqRight" (formula "22"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "7"))
                                       (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1"))
                                       (rule "mul_literals" (formula "8") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                       (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=add(Z(1(#)), i_0)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "leq_literals" (formula "8") (term "0,0"))
                                       (rule "concrete_or_2" (formula "8") (term "0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0"))
                                       (rule "leq_literals" (formula "8") (term "0"))
                                       (rule "concrete_or_2" (formula "8"))
                                       (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "8"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (rule "concrete_or_1" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                       (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                       (rule "concrete_or_1" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "12"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "13"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "26"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "0") (ifseqformula "14"))
                                       (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "5"))
                                       (rule "concrete_or_1" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "allLeft" (formula "20") (inst "t=mul(i_0, Z(2(#)))"))
                                       (rule "replaceKnownSelect_taclet1011001000_6" (formula "20") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet01011001000_14" (formula "20") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "27"))
                                       (rule "concrete_or_2" (formula "20") (term "0"))
                                       (rule "inEqSimp_contradInEq5" (formula "20") (term "0") (ifseqformula "12"))
                                       (rule "greater_literals" (formula "20") (term "0,0,0"))
                                       (rule "concrete_impl_1" (formula "20") (term "0,0"))
                                       (rule "mul_literals" (formula "20") (term "1,0,0"))
                                       (rule "qeq_literals" (formula "20") (term "0,0"))
                                       (rule "concrete_and_2" (formula "20") (term "0"))
                                       (rule "concrete_or_2" (formula "20"))
                                       (rule "inEqSimp_contradInEq3" (formula "20") (ifseqformula "9"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0"))
                                       (rule "greater_literals" (formula "20") (term "0,0"))
                                       (rule "concrete_impl_1" (formula "20") (term "0"))
                                       (rule "qeq_literals" (formula "20") (term "0"))
                                       (rule "concrete_and_2" (formula "20"))
                                       (rule "closeFalse" (formula "20"))
                                    )
                                 )
                                 (branch "CUT: j_0 <= 31 FALSE"
                                    (rule "concrete_or_2" (formula "6"))
                                    (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "6"))
                                    (rule "concrete_or_1" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_leqRight" (formula "22"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "6") (term "0,0"))
                                    (rule "concrete_or_1" (formula "6") (term "0"))
                                    (rule "concrete_or_1" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "10") (term "0"))
                                    (rule "concrete_and_2" (formula "10"))
                                    (rule "closeFalse" (formula "10"))
                                 )
                              )
                              (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "9") (term "0,0") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "8") (term "0,0,1") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "6") (term "0,0,1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "23"))
                                 (rule "concrete_not_2" (formula "2") (term "0"))
                                 (rule "concrete_or_1" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
                                 (rule "concrete_or_2" (formula "1"))
                                 (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "1"))
                                 (rule "concrete_or_3" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,0") (ifseqformula "12"))
                                 (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "25"))
                                 (rule "concrete_or_2" (formula "15"))
                                 (rule "cut_direct" (formula "4") (term "0"))
                                 (branch "CUT: j_0 <= 31 TRUE"
                                    (rule "concrete_or_1" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "cut_direct" (formula "5") (term "0"))
                                    (branch "CUT: j_0 <= -1 + i_0 TRUE"
                                       (rule "concrete_or_1" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "cut_direct" (formula "3") (term "0"))
                                       (branch "CUT: j_0 >= 0 TRUE"
                                          (rule "concrete_or_1" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                                          (rule "mul_literals" (formula "3") (term "0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "8") (term "0"))
                                          (rule "concrete_or_1" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "10"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0,0") (ifseqformula "13"))
                                          (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "26"))
                                          (rule "concrete_or_2" (formula "8"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "14"))
                                          (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                                          (rule "concrete_or_1" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "allLeft" (formula "19") (inst "t=mul(i_0, Z(2(#)))"))
                                          (rule "replaceKnownSelect_taclet1011001000_6" (formula "19") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11011001000_14" (formula "19") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "27"))
                                          (rule "concrete_or_2" (formula "19") (term "0"))
                                          (rule "inEqSimp_contradInEq3" (formula "19") (term "1") (ifseqformula "10"))
                                          (rule "greater_literals" (formula "19") (term "0,0,1"))
                                          (rule "concrete_impl_1" (formula "19") (term "0,1"))
                                          (rule "mul_literals" (formula "19") (term "0,0,1"))
                                          (rule "qeq_literals" (formula "19") (term "0,1"))
                                          (rule "concrete_and_2" (formula "19") (term "1"))
                                          (rule "concrete_or_4" (formula "19"))
                                          (rule "inEqSimp_contradInEq5" (formula "19") (ifseqformula "4"))
                                          (rule "mul_literals" (formula "19") (term "1,1,0"))
                                          (rule "greater_literals" (formula "19") (term "0,0"))
                                          (rule "concrete_impl_1" (formula "19") (term "0"))
                                          (rule "qeq_literals" (formula "19") (term "0"))
                                          (rule "concrete_and_2" (formula "19"))
                                          (rule "closeFalse" (formula "19"))
                                       )
                                       (branch "CUT: j_0 >= 0 FALSE"
                                          (rule "concrete_or_2" (formula "3"))
                                          (rule "inEqSimp_geqRight" (formula "22"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "5") (term "0"))
                                          (rule "concrete_or_1" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                                          (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                          (rule "mul_literals" (formula "6") (term "0,1"))
                                          (rule "inEqSimp_contradInEq3" (formula "6") (ifseqformula "5"))
                                          (rule "greater_literals" (formula "6") (term "0,0"))
                                          (rule "concrete_impl_1" (formula "6") (term "0"))
                                          (rule "andLeft" (formula "6"))
                                          (rule "polySimp_rightDist" (formula "6") (term "0"))
                                          (rule "mul_literals" (formula "6") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0"))
                                          (rule "add_literals" (formula "6") (term "0"))
                                          (rule "leq_literals" (formula "6"))
                                          (rule "closeFalse" (formula "6"))
                                       )
                                    )
                                    (branch "CUT: j_0 <= -1 + i_0 FALSE"
                                       (rule "concrete_or_2" (formula "5"))
                                       (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "5"))
                                       (rule "concrete_or_3" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_leqRight" (formula "21"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                       (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                       (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=add(Z(1(#)), i_0)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "6") (term "0,0"))
                                       (rule "concrete_or_2" (formula "6") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "leq_literals" (formula "6") (term "0"))
                                       (rule "concrete_or_2" (formula "6"))
                                       (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (rule "concrete_or_1" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "3"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "5"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                       (rule "concrete_or_1" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "10"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "13"))
                                       (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                                       (rule "concrete_or_1" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "13"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "26"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "allLeft" (formula "19") (inst "t=mul(i_0, Z(2(#)))"))
                                       (rule "replaceKnownSelect_taclet1011001000_6" (formula "19") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet11011001000_14" (formula "19") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "27"))
                                       (rule "concrete_or_2" (formula "19") (term "0"))
                                       (rule "inEqSimp_contradInEq3" (formula "19") (term "1") (ifseqformula "7"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                       (rule "greater_literals" (formula "19") (term "0,0,1"))
                                       (rule "concrete_impl_1" (formula "19") (term "0,1"))
                                       (rule "qeq_literals" (formula "19") (term "0,1"))
                                       (rule "concrete_and_2" (formula "19") (term "1"))
                                       (rule "concrete_or_4" (formula "19"))
                                       (rule "inEqSimp_contradInEq5" (formula "19") (ifseqformula "10"))
                                       (rule "greater_literals" (formula "19") (term "0,0"))
                                       (rule "concrete_impl_1" (formula "19") (term "0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0"))
                                       (rule "qeq_literals" (formula "19") (term "0"))
                                       (rule "concrete_and_2" (formula "19"))
                                       (rule "closeFalse" (formula "19"))
                                    )
                                 )
                                 (branch "CUT: j_0 <= 31 FALSE"
                                    (rule "concrete_or_2" (formula "4"))
                                    (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "4"))
                                    (rule "concrete_or_1" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_leqRight" (formula "21"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "4") (term "0") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "4") (term "0,0"))
                                    (rule "concrete_or_1" (formula "4") (term "0"))
                                    (rule "concrete_or_1" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                    (rule "concrete_or_1" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (rule "concrete_and_2" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "eqTermCut" (formula "11") (term "1") (inst "s=Z(1(2(#)))") (userinteraction))
                           (branch "Assume jdiv(64, 3) = 21"
                              (rule "applyEq" (formula "12") (term "1") (ifseqformula "11") (userinteraction))
                              (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "11") (userinteraction))
                              (rule "allRight" (formula "17") (inst "sk=i_0"))
                              (rule "impRight" (formula "17"))
                              (rule "andLeft" (formula "1"))
                              (rule "impRight" (formula "19"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "allRight" (formula "21") (inst "sk=j_0"))
                              (rule "impRight" (formula "21"))
                              (rule "notRight" (formula "22"))
                              (rule "jdiv_axiom_inline" (formula "16") (term "0"))
                              (rule "mul_literals" (formula "16") (term "0,0,2,0"))
                              (rule "qeq_literals" (formula "16") (term "0,0"))
                              (rule "ifthenelse_true" (formula "16") (term "0"))
                              (rule "div_literals" (formula "16") (term "0"))
                              (rule "eqClose" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,2,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,1,1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,1,1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,2,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,2,0,1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "0,2,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,1,1"))
                              (rule "replaceKnownSelect_taclet0_1" (formula "3") (term "0,1,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "3") (term "0,1,1"))
                              (rule "dismissNonSelectedField" (formula "5") (term "0,0,1"))
                              (rule "replaceKnownSelect_taclet0_1" (formula "5") (term "0,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "5") (term "0,0,1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                              (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "1,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "1,0,1"))
                              (rule "replaceKnownSelect_taclet0_1" (formula "3") (term "1,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "3") (term "1,0,1"))
                              (rule "dismissNonSelectedField" (formula "2") (term "1,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "1,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "1,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "0,1,1,0"))
                              (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "0,1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "18") (term "1,0"))
                              (rule "replaceKnownSelect_taclet0_1" (formula "18") (term "1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "18") (term "1,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "0,1,0,0,0"))
                              (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "0,1,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "0,1,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "2") (term "1,1"))
                              (rule "polySimp_mulAssoc" (formula "2") (term "1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,1"))
                              (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "18") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "4"))
                              (rule "inEqSimp_commuteLeq" (formula "2") (term "0,1"))
                              (rule "applyEq" (formula "2") (term "0,1,0,1,0") (ifseqformula "17"))
                              (rule "mul_literals" (formula "2") (term "1,0,1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,1,0"))
                              (rule "add_literals" (formula "2") (term "0,0,1,0"))
                              (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "17"))
                              (rule "jdiv_axiom_inline" (formula "5") (term "0,1,0"))
                              (rule "mul_literals" (formula "5") (term "0,0,2,0,1,0"))
                              (rule "qeq_literals" (formula "5") (term "0,0,1,0"))
                              (rule "ifthenelse_true" (formula "5") (term "0,1,0"))
                              (rule "div_literals" (formula "5") (term "0,1,0"))
                              (rule "mul_literals" (formula "5") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "0,0"))
                              (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "17"))
                              (rule "applyEq" (formula "3") (term "1,0,1,0") (ifseqformula "17"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1,1,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0"))
                              (rule "mul_literals" (formula "2") (term "1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                              (rule "mul_literals" (formula "5") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "elimGcdLeq" (formula "2") (term "1,0") (inst "elimGcdRightDiv=Z(1(3(#)))") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "2") (term "0,0,0,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,1,0,1,0"))
                              (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,1,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0,0,1,0,1,0"))
                              (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0,0,1,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0,0,1,0"))
                              (rule "add_zero_left" (formula "2") (term "0,0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,1,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,1,0,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,1,0,1,0"))
                              (rule "add_zero_right" (formula "2") (term "0,1,0,1,0"))
                              (rule "qeq_literals" (formula "2") (term "1,0,1,0"))
                              (rule "concrete_and_3" (formula "2") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,1,0"))
                              (rule "add_literals" (formula "2") (term "1,0,0,1,0"))
                              (rule "times_zero_1" (formula "2") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "2") (term "0,1,0"))
                              (rule "ifthenelse_true_for" (formula "2") (term "1,0"))
                              (rule "elimGcdLeq" (formula "2") (term "1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_0)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,1"))
                              (rule "mul_literals" (formula "2") (term "0,0,0,0,0,1,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,0,1,1"))
                              (rule "sub_literals" (formula "2") (term "0,0,0,0,0,0,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,1,1"))
                              (rule "add_literals" (formula "2") (term "1,1,0,1,0,1,1"))
                              (rule "times_zero_1" (formula "2") (term "1,0,1,0,1,1"))
                              (rule "add_zero_right" (formula "2") (term "0,1,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1,1"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0,0,1,1"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0,0,1,1"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0,1,1"))
                              (rule "mul_literals" (formula "2") (term "0,0,0,1,0,1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,1,1"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,1,1"))
                              (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,1,1"))
                              (rule "add_literals" (formula "2") (term "1,1,0,1,0,1,1"))
                              (rule "times_zero_1" (formula "2") (term "1,0,1,0,1,1"))
                              (rule "add_zero_right" (formula "2") (term "0,1,0,1,1"))
                              (rule "qeq_literals" (formula "2") (term "1,0,1,1"))
                              (rule "concrete_and_3" (formula "2") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,1"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,1"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0,1,1"))
                              (rule "add_zero_left" (formula "2") (term "0,0,0,1,1"))
                              (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,1,1"))
                              (rule "add_literals" (formula "2") (term "1,0,0,1,1"))
                              (rule "times_zero_1" (formula "2") (term "0,0,1,1"))
                              (rule "leq_literals" (formula "2") (term "0,1,1"))
                              (rule "ifthenelse_true_for" (formula "2") (term "1,1"))
                              (rule "elimGcdGeq" (formula "2") (term "0,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,1"))
                              (rule "sub_literals" (formula "2") (term "0,0,0,0,0,0,0,0,1"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,0,0,1"))
                              (rule "times_zero_1" (formula "2") (term "0,0,0,1,0,0,1"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,1"))
                              (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,1"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0,1"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,1"))
                              (rule "polySimp_pullOutFactor0" (formula "2") (term "0,1,0,0,1"))
                              (rule "add_literals" (formula "2") (term "1,0,1,0,0,1"))
                              (rule "times_zero_1" (formula "2") (term "0,1,0,0,1"))
                              (rule "leq_literals" (formula "2") (term "1,0,0,1"))
                              (rule "concrete_and_3" (formula "2") (term "0,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0,0,1"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0,0,1"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,1"))
                              (rule "qeq_literals" (formula "2") (term "0,0,1"))
                              (rule "ifthenelse_true_for" (formula "2") (term "0,1"))
                              (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                              (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                              (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "20"))
                              (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                              (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                              (rule "ifEqualsNull" (formula "1"))
                              (rule "pullOutSelect" (formula "3") (term "0,0,0,0") (inst "selectSK=arr_1"))
                              (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "20") (term "0") (ifseqformula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "13"))
                              (rule "elementOfFreshLocs" (formula "3") (term "1,0,0"))
                              (rule "equalUnique" (formula "3") (term "0,1,0,0,0"))
                              (rule "concrete_not_2" (formula "3") (term "1,0,0,0"))
                              (rule "concrete_and_3" (formula "3") (term "0,0,0"))
                              (rule "replace_known_right" (formula "3") (term "0,0,1,0,0") (ifseqformula "21"))
                              (rule "concrete_not_2" (formula "3") (term "0,1,0,0"))
                              (rule "concrete_and_1" (formula "3") (term "1,0,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                              (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                              (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                              (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                              (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                              (rule "concrete_or_2" (formula "1") (term "0,0"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,1"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,1"))
                              (rule "equalUnique" (formula "1") (term "1,1,0,0,0,1"))
                              (rule "concrete_and_4" (formula "1") (term "1,0,0,0,1"))
                              (rule "concrete_or_4" (formula "1") (term "0,0,0,1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,1"))
                              (rule "equalUnique" (formula "1") (term "1,0,0,0,1"))
                              (rule "concrete_and_4" (formula "1") (term "0,0,0,1"))
                              (rule "concrete_or_2" (formula "1") (term "0,0,1"))
                              (rule "double_not" (formula "1") (term "0,1"))
                              (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "0,0,0,0"))
                              (rule "equalUnique" (formula "3") (term "1,0,0,0,0"))
                              (rule "concrete_and_4" (formula "3") (term "0,0,0,0"))
                              (rule "concrete_or_2" (formula "3") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                              (rule "equalUnique" (formula "3") (term "1,0,0,0"))
                              (rule "concrete_and_4" (formula "3") (term "0,0,0"))
                              (rule "concrete_or_2" (formula "3") (term "0,0"))
                              (rule "ifthenelse_negated" (formula "3") (term "0"))
                              (rule "pullOutSelect" (formula "1") (term "0,1,1") (inst "selectSK=arr_2"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (rule "equalUnique" (formula "1") (term "1,0,0"))
                              (rule "concrete_and_4" (formula "1") (term "0,0"))
                              (rule "ifthenelse_false" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "2") (term "0,1,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                              (rule "applyEq" (formula "2") (term "0,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (rule "eqClose" (formula "1") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "1") (term "0,0"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "24"))
                              (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "1") (term "0,0"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "24"))
                              (rule "concrete_and_4" (formula "1") (term "0,0"))
                              (rule "ifthenelse_false" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "2") (term "0,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_3"))
                              (rule "simplifySelectOfCreate" (formula "3"))
                              (rule "equalUnique" (formula "3") (term "1,0,0"))
                              (rule "concrete_and_4" (formula "3") (term "0,0"))
                              (rule "ifthenelse_false" (formula "3") (term "0"))
                              (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "nnf_imp2or" (formula "16") (term "0"))
                              (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "11"))
                              (rule "notLeft" (formula "11"))
                              (rule "nnf_notAnd" (formula "15") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                              (rule "commute_and" (formula "4") (term "0"))
                              (rule "commute_or_2" (formula "15") (term "0"))
                              (rule "commute_or" (formula "15") (term "0,0"))
                              (rule "commute_or_2" (formula "15") (term "0"))
                              (rule "cnf_rightDist" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "commute_or" (formula "1"))
                              (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                              (rule "expand_inShort" (formula "19"))
                              (rule "replace_short_MIN" (formula "19") (term "0,1"))
                              (rule "replace_short_MAX" (formula "19") (term "1,0"))
                              (rule "andLeft" (formula "19"))
                              (rule "inEqSimp_commuteLeq" (formula "20"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
                              (rule "leq_literals" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                              (rule "qeq_literals" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                              (rule "qeq_literals" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "cnf_rightDist" (formula "2"))
                              (rule "andLeft" (formula "2"))
                              (rule "commute_or" (formula "2"))
                              (rule "commute_or" (formula "3"))
                              (rule "cnf_rightDist" (formula "1"))
                              (rule "neq_or" (formula "1") (term "0"))
                              (rule "concrete_and_1" (formula "1"))
                              (rule "commute_or" (formula "1"))
                              (rule "cnf_rightDist" (formula "6"))
                              (rule "andLeft" (formula "6"))
                              (rule "commute_or" (formula "6"))
                              (rule "cnf_rightDist" (formula "7"))
                              (rule "andLeft" (formula "7"))
                              (rule "commute_or" (formula "7"))
                              (rule "commute_or" (formula "8"))
                              (rule "cnf_rightDist" (formula "6"))
                              (rule "andLeft" (formula "6"))
                              (rule "inEqSimp_or_tautInEq2" (formula "6"))
                              (rule "add_zero_right" (formula "6") (term "1,1"))
                              (rule "qeq_literals" (formula "6") (term "1"))
                              (rule "concrete_or_3" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "commute_or" (formula "6"))
                              (rule "ifthenelse_split" (formula "5") (term "0"))
                              (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "9") (term "0,0,1") (ifseqformula "6"))
                                 (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "6"))
                                 (rule "applyEqReverse" (formula "7") (term "0,0,1") (ifseqformula "6"))
                                 (rule "applyEqReverse" (formula "10") (term "0,0") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "5"))
                                 (rule "concrete_or_1" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "4"))
                                 (rule "concrete_not_1" (formula "1") (term "0"))
                                 (rule "concrete_or_2" (formula "1"))
                                 (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                 (rule "concrete_or_1" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0,0") (ifseqformula "13"))
                                 (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "24"))
                                 (rule "concrete_or_2" (formula "20"))
                                 (rule "cut_direct" (formula "5") (term "0"))
                                 (branch "CUT: j_0 <= 31 TRUE"
                                    (rule "concrete_or_1" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "cut_direct" (formula "6") (term "0"))
                                    (branch "CUT: j_0 <= -1 + i_0 TRUE"
                                       (rule "concrete_or_1" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "cut_direct" (formula "4") (term "0"))
                                       (branch "CUT: j_0 >= 0 TRUE"
                                          (rule "concrete_or_1" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "6"))
                                          (rule "mul_literals" (formula "4") (term "0,0"))
                                          (rule "add_zero_left" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                          (rule "mul_literals" (formula "4") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "4"))
                                          (rule "leq_literals" (formula "9") (term "0"))
                                          (rule "concrete_or_1" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "11"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "12"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0") (ifseqformula "13"))
                                          (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "4"))
                                          (rule "concrete_or_1" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "allLeft" (formula "19") (inst "t=mul(i_0, Z(2(#)))"))
                                          (rule "replaceKnownSelect_taclet0111001000_6" (formula "19") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00111001000_13" (formula "19") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "26"))
                                          (rule "concrete_or_2" (formula "19") (term "0"))
                                          (rule "inEqSimp_contradInEq3" (formula "19") (term "1") (ifseqformula "11"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                          (rule "greater_literals" (formula "19") (term "0,0,1"))
                                          (rule "concrete_impl_1" (formula "19") (term "0,1"))
                                          (rule "qeq_literals" (formula "19") (term "0,1"))
                                          (rule "concrete_and_2" (formula "19") (term "1"))
                                          (rule "concrete_or_4" (formula "19"))
                                          (rule "inEqSimp_contradInEq5" (formula "19") (ifseqformula "6"))
                                          (rule "mul_literals" (formula "19") (term "1,1,0"))
                                          (rule "greater_literals" (formula "19") (term "0,0"))
                                          (rule "concrete_impl_1" (formula "19") (term "0"))
                                          (rule "qeq_literals" (formula "19") (term "0"))
                                          (rule "concrete_and_2" (formula "19"))
                                          (rule "closeFalse" (formula "19"))
                                       )
                                       (branch "CUT: j_0 >= 0 FALSE"
                                          (rule "concrete_or_2" (formula "4"))
                                          (rule "inEqSimp_geqRight" (formula "22"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "6") (term "0"))
                                          (rule "concrete_or_1" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                          (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1"))
                                          (rule "mul_literals" (formula "7") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                          (rule "inEqSimp_contradInEq3" (formula "7") (ifseqformula "6"))
                                          (rule "greater_literals" (formula "7") (term "0,0"))
                                          (rule "concrete_impl_1" (formula "7") (term "0"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "polySimp_rightDist" (formula "7") (term "0"))
                                          (rule "mul_literals" (formula "7") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "7"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0"))
                                          (rule "add_zero_right" (formula "7") (term "0"))
                                          (rule "leq_literals" (formula "7"))
                                          (rule "closeFalse" (formula "7"))
                                       )
                                    )
                                    (branch "CUT: j_0 <= -1 + i_0 FALSE"
                                       (rule "concrete_or_2" (formula "6"))
                                       (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "6"))
                                       (rule "concrete_or_3" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "inEqSimp_leqRight" (formula "21"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "5"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                                       (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1"))
                                       (rule "mul_literals" (formula "7") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                       (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=add(Z(1(#)), i_0)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "7") (term "0,0"))
                                       (rule "concrete_or_2" (formula "7") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0"))
                                       (rule "leq_literals" (formula "7") (term "0"))
                                       (rule "concrete_or_2" (formula "7"))
                                       (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (rule "concrete_or_1" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                                       (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "6"))
                                       (rule "leq_literals" (formula "10") (term "0"))
                                       (rule "concrete_or_1" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "11"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,0") (ifseqformula "12"))
                                       (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "25"))
                                       (rule "concrete_or_2" (formula "9"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "13"))
                                       (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                                       (rule "concrete_or_1" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "allLeft" (formula "19") (inst "t=mul(i_0, Z(2(#)))"))
                                       (rule "replaceKnownSelect_taclet0111001000_6" (formula "19") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00111001000_13" (formula "19") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "26"))
                                       (rule "concrete_or_2" (formula "19") (term "0"))
                                       (rule "inEqSimp_contradInEq5" (formula "19") (term "0") (ifseqformula "11"))
                                       (rule "times_zero_1" (formula "19") (term "1,1,0,0"))
                                       (rule "greater_literals" (formula "19") (term "0,0,0"))
                                       (rule "concrete_impl_1" (formula "19") (term "0,0"))
                                       (rule "qeq_literals" (formula "19") (term "0,0"))
                                       (rule "concrete_and_2" (formula "19") (term "0"))
                                       (rule "concrete_or_2" (formula "19"))
                                       (rule "inEqSimp_contradInEq3" (formula "19") (ifseqformula "7"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0"))
                                       (rule "greater_literals" (formula "19") (term "0,0"))
                                       (rule "concrete_impl_1" (formula "19") (term "0"))
                                       (rule "qeq_literals" (formula "19") (term "0"))
                                       (rule "concrete_and_2" (formula "19"))
                                       (rule "closeFalse" (formula "19"))
                                    )
                                 )
                                 (branch "CUT: j_0 <= 31 FALSE"
                                    (rule "concrete_or_2" (formula "5"))
                                    (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "5"))
                                    (rule "concrete_or_1" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "inEqSimp_leqRight" (formula "21"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (term "0") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "5") (term "0,0"))
                                    (rule "concrete_or_1" (formula "5") (term "0"))
                                    (rule "concrete_or_1" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "5"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "9") (term "0"))
                                    (rule "concrete_and_2" (formula "9"))
                                    (rule "closeFalse" (formula "9"))
                                 )
                              )
                              (branch " (v_1.table@anon_heap_init<<anonHeapFunction>>).<created> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "8") (term "0,0,1") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "9") (term "0,0") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "6") (term "0,0,1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
                                 (rule "concrete_or_2" (formula "1"))
                                 (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "22"))
                                 (rule "concrete_not_2" (formula "2") (term "0"))
                                 (rule "concrete_or_1" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "1"))
                                 (rule "concrete_or_3" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0,0") (ifseqformula "12"))
                                 (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "24"))
                                 (rule "concrete_or_2" (formula "19"))
                                 (rule "cut_direct" (formula "4") (term "0"))
                                 (branch "CUT: j_0 <= 31 TRUE"
                                    (rule "concrete_or_1" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "cut_direct" (formula "5") (term "0"))
                                    (branch "CUT: j_0 <= -1 + i_0 TRUE"
                                       (rule "concrete_or_1" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "cut_direct" (formula "3") (term "0"))
                                       (branch "CUT: j_0 >= 0 TRUE"
                                          (rule "concrete_or_1" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                                          (rule "times_zero_1" (formula "3") (term "0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "8") (term "0"))
                                          (rule "concrete_or_1" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "10"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "13"))
                                          (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                                          (rule "concrete_or_1" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "13"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "allLeft" (formula "18") (inst "t=mul(i_0, Z(2(#)))"))
                                          (rule "replaceKnownSelect_taclet0111001000_6" (formula "18") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10111001000_13" (formula "18") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "26"))
                                          (rule "concrete_or_2" (formula "18") (term "0"))
                                          (rule "inEqSimp_contradInEq3" (formula "18") (term "1") (ifseqformula "10"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                          (rule "greater_literals" (formula "18") (term "0,0,1"))
                                          (rule "concrete_impl_1" (formula "18") (term "0,1"))
                                          (rule "qeq_literals" (formula "18") (term "0,1"))
                                          (rule "concrete_and_2" (formula "18") (term "1"))
                                          (rule "concrete_or_4" (formula "18"))
                                          (rule "inEqSimp_contradInEq5" (formula "18") (ifseqformula "5"))
                                          (rule "greater_literals" (formula "18") (term "0,0"))
                                          (rule "concrete_impl_1" (formula "18") (term "0"))
                                          (rule "mul_literals" (formula "18") (term "1,0"))
                                          (rule "qeq_literals" (formula "18") (term "0"))
                                          (rule "concrete_and_2" (formula "18"))
                                          (rule "closeFalse" (formula "18"))
                                       )
                                       (branch "CUT: j_0 >= 0 FALSE"
                                          (rule "concrete_or_2" (formula "3"))
                                          (rule "inEqSimp_geqRight" (formula "21"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "5") (term "0"))
                                          (rule "concrete_or_1" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                                          (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1"))
                                          (rule "mul_literals" (formula "6") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                          (rule "inEqSimp_contradInEq3" (formula "6") (ifseqformula "5"))
                                          (rule "greater_literals" (formula "6") (term "0,0"))
                                          (rule "concrete_impl_1" (formula "6") (term "0"))
                                          (rule "andLeft" (formula "6"))
                                          (rule "polySimp_rightDist" (formula "6") (term "0"))
                                          (rule "mul_literals" (formula "6") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0"))
                                          (rule "add_literals" (formula "6") (term "0"))
                                          (rule "leq_literals" (formula "6"))
                                          (rule "closeFalse" (formula "6"))
                                       )
                                    )
                                    (branch "CUT: j_0 <= -1 + i_0 FALSE"
                                       (rule "concrete_or_2" (formula "5"))
                                       (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "5"))
                                       (rule "concrete_or_3" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_leqRight" (formula "20"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                       (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                       (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=add(Z(1(#)), i_0)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "6") (term "0,0"))
                                       (rule "concrete_or_2" (formula "6") (term "0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "leq_literals" (formula "6") (term "0"))
                                       (rule "concrete_or_2" (formula "6"))
                                       (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (rule "concrete_or_1" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "3"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "5"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                       (rule "concrete_or_1" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "10"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "13"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0") (ifseqformula "14"))
                                       (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "4"))
                                       (rule "concrete_or_1" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "allLeft" (formula "18") (inst "t=mul(i_0, Z(2(#)))"))
                                       (rule "replaceKnownSelect_taclet0111001000_6" (formula "18") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10111001000_13" (formula "18") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "26"))
                                       (rule "concrete_or_2" (formula "18") (term "0"))
                                       (rule "inEqSimp_contradInEq5" (formula "18") (term "0") (ifseqformula "10"))
                                       (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                       (rule "greater_literals" (formula "18") (term "0,0,0"))
                                       (rule "concrete_impl_1" (formula "18") (term "0,0"))
                                       (rule "qeq_literals" (formula "18") (term "0,0"))
                                       (rule "concrete_and_2" (formula "18") (term "0"))
                                       (rule "concrete_or_2" (formula "18"))
                                       (rule "inEqSimp_contradInEq3" (formula "18") (ifseqformula "7"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0"))
                                       (rule "greater_literals" (formula "18") (term "0,0"))
                                       (rule "concrete_impl_1" (formula "18") (term "0"))
                                       (rule "qeq_literals" (formula "18") (term "0"))
                                       (rule "concrete_and_2" (formula "18"))
                                       (rule "closeFalse" (formula "18"))
                                    )
                                 )
                                 (branch "CUT: j_0 <= 31 FALSE"
                                    (rule "concrete_or_2" (formula "4"))
                                    (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "4"))
                                    (rule "concrete_or_1" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_leqRight" (formula "20"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "4") (term "0") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "4") (term "0,0"))
                                    (rule "concrete_or_1" (formula "4") (term "0"))
                                    (rule "concrete_or_1" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "8") (term "0"))
                                    (rule "concrete_and_2" (formula "8"))
                                    (rule "closeFalse" (formula "8"))
                                 )
                              )
                           )
                           (branch "Assume jdiv(64, 3) != 21"
                              (rule "notLeft" (formula "11"))
                              (rule "allRight" (formula "17") (inst "sk=i_0"))
                              (rule "impRight" (formula "17"))
                              (rule "impRight" (formula "18"))
                              (rule "andLeft" (formula "2"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "allRight" (formula "21") (inst "sk=j_0"))
                              (rule "impRight" (formula "21"))
                              (rule "notRight" (formula "22"))
                              (rule "jdiv_axiom_inline" (formula "16") (term "1"))
                              (rule "mul_literals" (formula "16") (term "0,0,2,1"))
                              (rule "div_literals" (formula "16") (term "1,1"))
                              (rule "qeq_literals" (formula "16") (term "0,1"))
                              (rule "ifthenelse_true" (formula "16") (term "1"))
                              (rule "jdiv_axiom_inline" (formula "15") (term "1"))
                              (rule "qeq_literals" (formula "15") (term "0,1"))
                              (rule "ifthenelse_true" (formula "15") (term "1"))
                              (rule "div_literals" (formula "15") (term "1"))
                              (rule "jdiv_axiom_inline" (formula "19") (term "0"))
                              (rule "div_literals" (formula "19") (term "1,0"))
                              (rule "ifthenelse_concrete3" (formula "19"))
                              (rule "mul_literals" (formula "19") (term "0,0,0,1"))
                              (rule "qeq_literals" (formula "19") (term "0"))
                              (rule "concrete_or_1" (formula "19"))
                              (rule "closeTrue" (formula "19"))
                           )
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "jdiv_axiom_inline" (formula "11") (term "1"))
                  (rule "mul_literals" (formula "11") (term "0,0,2,1"))
                  (rule "div_literals" (formula "11") (term "1,1"))
                  (rule "qeq_literals" (formula "11") (term "0,1"))
                  (rule "ifthenelse_true" (formula "11") (term "1"))
                  (rule "jdiv_axiom_inline" (formula "10") (term "1"))
                  (rule "qeq_literals" (formula "10") (term "0,1"))
                  (rule "ifthenelse_true" (formula "10") (term "1"))
                  (rule "div_literals" (formula "10") (term "1"))
                  (rule "dismissNonSelectedField" (formula "16") (term "0,0"))
                  (rule "replaceKnownSelect_taclet0_1" (formula "16") (term "0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "16") (term "0,0"))
                  (rule "close" (formula "16") (ifseqformula "8"))
               )
            )
            (branch "Case 2"
               (rule "andRight" (formula "16"))
               (branch "Case 1"
                  (rule "eqTermCut" (formula "16") (term "0") (inst "s=Z(0(#))") (userinteraction))
                  (branch "Assume v_1.modCount@heapAfter_init[v_1.<initialized> := TRUE] = 0"
                     (rule "applyEq" (formula "17") (term "0") (ifseqformula "1") (userinteraction))
                     (rule "expand_inInt" (formula "17"))
                     (rule "replace_int_MIN" (formula "17") (term "0,1"))
                     (rule "replace_int_MAX" (formula "17") (term "1,0"))
                     (rule "leq_literals" (formula "17") (term "1"))
                     (rule "concrete_and_3" (formula "17"))
                     (rule "leq_literals" (formula "17"))
                     (rule "closeTrue" (formula "17"))
                  )
                  (branch "Assume v_1.modCount@heapAfter_init[v_1.<initialized> := TRUE] != 0"
                     (rule "expand_inInt" (formula "17"))
                     (rule "replace_int_MIN" (formula "17") (term "0,1"))
                     (rule "replace_int_MAX" (formula "17") (term "1,0"))
                     (rule "notLeft" (formula "1"))
                     (rule "jdiv_axiom_inline" (formula "11") (term "1"))
                     (rule "div_literals" (formula "11") (term "1,1"))
                     (rule "qeq_literals" (formula "11") (term "0,1"))
                     (rule "ifthenelse_true" (formula "11") (term "1"))
                     (rule "jdiv_axiom_inline" (formula "10") (term "1"))
                     (rule "qeq_literals" (formula "10") (term "0,1"))
                     (rule "ifthenelse_true" (formula "10") (term "1"))
                     (rule "div_literals" (formula "10") (term "1"))
                     (rule "dismissNonSelectedField" (formula "17") (term "1,1"))
                     (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                     (rule "dismissNonSelectedField" (formula "13") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "17") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                     (rule "pullOutSelect" (formula "17") (term "0,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_modCount_0"))
                     (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "7"))
                     (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                     (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                     (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                     (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "17"))
                     (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                     (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "eqClose" (formula "1") (term "0,0,0,0,0"))
                     (rule "concrete_and_1" (formula "1") (term "0,0,0,0"))
                     (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                     (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                     (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                     (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                     (rule "concrete_or_2" (formula "1") (term "0,0"))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (rule "eqClose" (formula "1") (term "1,0,0"))
                     (rule "concrete_and_3" (formula "1") (term "0,0"))
                     (rule "eqClose" (formula "1") (term "0,0,0"))
                     (rule "concrete_and_1" (formula "1") (term "0,0"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "18"))
                     (rule "concrete_not_2" (formula "1") (term "0,0"))
                     (rule "ifthenelse_true" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                     (rule "boolean_equal" (formula "2") (term "0,0"))
                     (rule "ifthenelse_true" (formula "2") (term "0"))
                     (rule "simplifySelectOfStore" (formula "2"))
                     (rule "equalUnique" (formula "2") (term "1,0,0,0"))
                     (rule "concrete_and_3" (formula "2") (term "0,0,0"))
                     (rule "eqClose" (formula "2") (term "0,0,0"))
                     (rule "concrete_and_1" (formula "2") (term "0,0"))
                     (rule "equalUnique" (formula "2") (term "0,0,0"))
                     (rule "concrete_not_2" (formula "2") (term "0,0"))
                     (rule "ifthenelse_true" (formula "2") (term "0"))
                     (rule "castDel" (formula "2") (term "0"))
                     (rule "applyEqReverse" (formula "19") (term "0,0") (ifseqformula "2"))
                     (rule "leq_literals" (formula "19") (term "0"))
                     (rule "concrete_and_1" (formula "19"))
                     (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "2"))
                     (rule "eqClose" (formula "15"))
                     (rule "closeTrue" (formula "15"))
                  )
               )
               (branch "Case 2"
                  (rule "eqTermCut" (formula "16") (term "0") (inst "s=Z(1(2(#)))") (userinteraction))
                  (branch "Assume v_1.threshold@heapAfter_init[v_1.<initialized> := TRUE] = 21"
                     (rule "expand_inInt" (formula "17"))
                     (rule "replace_int_MIN" (formula "17") (term "0,1"))
                     (rule "replace_int_MAX" (formula "17") (term "1,0"))
                     (rule "jdiv_axiom_inline" (formula "11") (term "1"))
                     (rule "mul_literals" (formula "11") (term "0,0,2,1"))
                     (rule "div_literals" (formula "11") (term "1,1"))
                     (rule "qeq_literals" (formula "11") (term "0,1"))
                     (rule "ifthenelse_true" (formula "11") (term "1"))
                     (rule "jdiv_axiom_inline" (formula "12") (term "1"))
                     (rule "div_literals" (formula "12") (term "1,1"))
                     (rule "mul_literals" (formula "12") (term "0,0,2,1"))
                     (rule "qeq_literals" (formula "12") (term "0,1"))
                     (rule "ifthenelse_true" (formula "12") (term "1"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0"))
                     (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,0"))
                     (rule "replaceKnownSelect_taclet0_0" (formula "16") (term "0,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "1,1"))
                     (rule "replaceKnownSelect_taclet0_0" (formula "16") (term "1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "16") (term "1"))
                     (rule "applyEqRigid" (formula "16") (term "0,0") (ifseqformula "11"))
                     (rule "leq_literals" (formula "16") (term "0"))
                     (rule "concrete_and_1" (formula "16"))
                     (rule "inEqSimp_geqRight" (formula "16"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "12"))
                     (rule "add_literals" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Assume v_1.threshold@heapAfter_init[v_1.<initialized> := TRUE] != 21"
                     (rule "expand_inInt" (formula "17"))
                     (rule "replace_int_MIN" (formula "17") (term "0,1"))
                     (rule "replace_int_MAX" (formula "17") (term "1,0"))
                     (rule "notLeft" (formula "1"))
                     (rule "jdiv_axiom_inline" (formula "11") (term "1"))
                     (rule "div_literals" (formula "11") (term "1,1"))
                     (rule "qeq_literals" (formula "11") (term "0,1"))
                     (rule "ifthenelse_true" (formula "11") (term "1"))
                     (rule "jdiv_axiom_inline" (formula "10") (term "1"))
                     (rule "qeq_literals" (formula "10") (term "0,1"))
                     (rule "ifthenelse_true" (formula "10") (term "1"))
                     (rule "div_literals" (formula "10") (term "1"))
                     (rule "dismissNonSelectedField" (formula "17") (term "1,1"))
                     (rule "replaceKnownSelect_taclet0_0" (formula "17") (term "1,1"))
                     (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                     (rule "replaceKnownSelect_taclet0_0" (formula "17") (term "0,0"))
                     (rule "dismissNonSelectedField" (formula "13") (term "0"))
                     (rule "replaceKnownSelect_taclet0_0" (formula "13") (term "0"))
                     (rule "close" (formula "13") (ifseqformula "11"))
                  )
               )
            )
         )
      )
      (branch "Case 2"
         (rule "eqClose" (formula "16") (userinteraction))
         (rule "closeTrue" (formula "16") (userinteraction))
      )
   )
   (branch "Null Reference (self_1 = null)"
      (rule "false_right" (formula "17"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "jdiv_axiom_inline" (formula "12") (term "1"))
      (rule "qeq_literals" (formula "12") (term "0,1"))
      (rule "ifthenelse_true" (formula "12") (term "1"))
      (rule "div_literals" (formula "12") (term "1"))
      (rule "jdiv_axiom_inline" (formula "11") (term "1"))
      (rule "qeq_literals" (formula "11") (term "0,1"))
      (rule "ifthenelse_true" (formula "11") (term "1"))
      (rule "div_literals" (formula "11") (term "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "close" (formula "16") (ifseqformula "1"))
   )
)
(branch "Exceptional Post (init)"
   (rule "insert_constant_value" (formula "6") (term "1,1,1,0,1,1,1,1,1"))
   (rule "insert_constant_value" (formula "6") (term "1,0,1,1,0,0,1,1,1,1,1"))
   (rule "mul_literals" (formula "6") (term "1,1,0,1,1,1,1,1"))
   (rule "mul_literals" (formula "6") (term "0,1,1,0,0,1,1,1,1,1"))
   (rule "simplifyUpdate2" (formula "6"))
   (rule "simplifyUpdate2" (formula "6") (term "1"))
   (rule "andLeft" (formula "6"))
   (rule "sequentialToParallel2" (formula "10"))
   (rule "simplifyUpdate2" (formula "10"))
   (rule "simplifyUpdate3" (formula "10") (term "1,0"))
   (rule "sequentialToParallel2" (formula "7"))
   (rule "simplifyUpdate2" (formula "7"))
   (rule "simplifyUpdate3" (formula "7") (term "1,0"))
   (rule "andLeft" (formula "7"))
   (rule "simplifyUpdate2" (formula "7"))
   (rule "andLeft" (formula "8"))
   (rule "simplifyUpdate2" (formula "9"))
   (rule "andLeft" (formula "7"))
   (rule "simplifyUpdate2" (formula "7"))
   (rule "andLeft" (formula "9"))
   (rule "notLeft" (formula "7"))
   (rule "close" (formula "11") (ifseqformula "10"))
)
(branch "Pre (init)"
   (rule "simplifyUpdate2" (formula "7") (userinteraction))
   (rule "sequentialToParallel2" (formula "7") (userinteraction))
   (rule "simplifyUpdate2" (formula "7") (userinteraction))
   (rule "simplifyUpdate3" (formula "7") (term "1,0"))
   (rule "parallelWithSkip2" (formula "7") (term "0"))
   (rule "applyOnRigidFormula" (formula "7"))
   (rule "simplifyUpdate2" (formula "7") (term "1"))
   (rule "applyOnRigidFormula" (formula "7") (term "0"))
   (rule "simplifyUpdate2" (formula "7") (term "0,0"))
   (rule "applyOnRigidFormula" (formula "7") (term "1"))
   (rule "simplifyUpdate2" (formula "7") (term "1,1"))
   (rule "applyOnRigidFormula" (formula "7") (term "1,0"))
   (rule "applyOnRigidFormula" (formula "7") (term "0,1"))
   (rule "applyOnRigidTerm" (formula "7") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "7") (term "2,0,1,0"))
   (rule "simplifyUpdate1" (formula "7") (term "1,0,1,0"))
   (rule "simplifyUpdate1" (formula "7") (term "0,0,1,0"))
   (rule "andRight" (formula "7"))
   (branch "Case 1"
      (rule "andRight" (formula "7"))
      (branch "Case 1"
         (rule "andRight" (formula "7"))
         (branch "Case 1"
            (rule "andRight" (formula "7"))
            (branch "Case 1"
               (rule "andRight" (formula "7"))
               (branch "Case 1"
                  (rule "andRight" (formula "7"))
                  (branch "Case 1"
                     (rule "insert_constant_value" (formula "7") (term "0"))
                     (rule "eqClose" (formula "7"))
                     (rule "closeTrue" (formula "7"))
                  )
                  (branch "Case 2"
                     (rule "insert_constant_value" (formula "7") (term "0"))
                     (rule "eqClose" (formula "7"))
                     (rule "closeTrue" (formula "7"))
                  )
               )
               (branch "Case 2"
                  (rule "insert_constant_value" (formula "7") (term "1,1,0") (userinteraction))
                  (rule "insert_constant_value" (formula "7") (term "1,1,0,0") (userinteraction))
                  (rule "exRightHide" (formula "7") (inst "t=Z(5(#))") (userinteraction))
                  (rule "leq_literals" (formula "7") (term "0,0"))
                  (rule "concrete_and_1" (formula "7") (term "0"))
                  (rule "pow_literals" (formula "7") (term "0,1"))
                  (rule "eqClose" (formula "7") (term "1"))
                  (rule "concrete_and_3" (formula "7"))
                  (rule "less_literals" (formula "7"))
                  (rule "closeTrue" (formula "7"))
               )
            )
            (branch "Case 2"
               (rule "insert_constant_value" (formula "7") (term "0"))
               (rule "insert_constant_value" (formula "7") (term "1"))
               (rule "qeq_literals" (formula "7"))
               (rule "closeTrue" (formula "7"))
            )
         )
         (branch "Case 2"
            (rule "insert_constant_value" (formula "7") (term "0"))
            (rule "insert_constant_value" (formula "7") (term "1"))
            (rule "leq_literals" (formula "7"))
            (rule "closeTrue" (formula "7"))
         )
      )
      (branch "Case 2"
         (rule "expand_inInt" (formula "7"))
         (rule "replace_int_MIN" (formula "7") (term "0,1"))
         (rule "replace_int_MAX" (formula "7") (term "1,0"))
         (rule "applyOnPV" (formula "7") (term "1,0,0"))
         (rule "applyOnPV" (formula "7") (term "0,0,0"))
         (rule "applyOnPV" (formula "7") (term "0,1,1"))
         (rule "applyOnPV" (formula "7") (term "1,1,1"))
         (rule "dismissNonSelectedField" (formula "7") (term "0,0"))
         (rule "dismissNonSelectedField" (formula "7") (term "1,1"))
         (rule "dismissNonSelectedField" (formula "7") (term "0,0"))
         (rule "dismissNonSelectedField" (formula "7") (term "1,1"))
         (rule "inEqSimp_commuteLeq" (formula "7") (term "1"))
         (rule "pullOutSelect" (formula "7") (term "0,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_modCount_0"))
         (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "1"))
         (rule "simplifySelectOfStore" (formula "1"))
         (rule "eqClose" (formula "1") (term "1,0,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0,0"))
         (rule "eqClose" (formula "1") (term "0,0,0"))
         (rule "concrete_and_1" (formula "1") (term "0,0"))
         (rule "equalUnique" (formula "1") (term "0,0,0"))
         (rule "concrete_not_2" (formula "1") (term "0,0"))
         (rule "ifthenelse_true" (formula "1") (term "0"))
         (rule "castDel" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "8") (term "0,0") (ifseqformula "1"))
         (rule "leq_literals" (formula "8") (term "0"))
         (rule "concrete_and_1" (formula "8"))
         (rule "applyEqReverse" (formula "8") (term "0") (ifseqformula "1"))
         (rule "qeq_literals" (formula "8"))
         (rule "closeTrue" (formula "8"))
      )
   )
   (branch "Case 2"
      (rule "andRight" (formula "7"))
      (branch "Case 1"
         (rule "applyOnPV" (formula "7") (term "0"))
         (rule "wellFormedStoreObject" (formula "7"))
         (rule "instanceof_static_type" (formula "7") (term "0,1,1,1"))
         (rule "boolean_equal" (formula "7") (term "1,1,1"))
         (rule "wellFormedStorePrimitive" (formula "7") (term "0"))
         (rule "wellFormedStorePrimitive" (formula "7") (term "0"))
         (rule "wellFormedStorePrimitive" (formula "7") (term "0"))
         (rule "eqClose" (formula "7") (term "0,1"))
         (rule "concrete_or_1" (formula "7") (term "1"))
         (rule "concrete_and_3" (formula "7"))
         (rule "wellFormedStoreObject" (formula "7"))
         (rule "instanceof_not_compatible" (formula "7") (term "1,1,1"))
         (rule "eqClose" (formula "7") (term "0,1"))
         (rule "concrete_or_1" (formula "7") (term "1"))
         (rule "concrete_and_3" (formula "7"))
         (rule "wellFormedStoreObject" (formula "7"))
         (rule "instanceof_static_type" (formula "7") (term "0,1,1,1"))
         (rule "boolean_equal" (formula "7") (term "1,1,1"))
         (rule "eqClose" (formula "7") (term "0,1"))
         (rule "concrete_or_1" (formula "7") (term "1"))
         (rule "concrete_and_3" (formula "7"))
         (rule "wellFormedStoreObject" (formula "7"))
         (rule "instanceof_static_type" (formula "7") (term "0,1,1,1"))
         (rule "boolean_equal" (formula "7") (term "1,1,1"))
         (rule "wellFormedStorePrimitive" (formula "7") (term "0"))
         (rule "wellFormedCreate" (formula "7") (term "0"))
         (rule "eqClose" (formula "7") (term "0,1"))
         (rule "concrete_or_1" (formula "7") (term "1"))
         (rule "concrete_and_3" (formula "7"))
         (rule "close" (formula "7") (ifseqformula "2"))
      )
      (branch "Case 2"
         (rule "insert_constant_value" (formula "7") (term "0"))
         (rule "expand_inInt" (formula "7"))
         (rule "replace_int_MAX" (formula "7") (term "1,0"))
         (rule "replace_int_MIN" (formula "7") (term "0,1"))
         (rule "leq_literals" (formula "7") (term "0"))
         (rule "concrete_and_1" (formula "7"))
         (rule "leq_literals" (formula "7"))
         (rule "closeTrue" (formula "7"))
      )
   )
)
)
}
