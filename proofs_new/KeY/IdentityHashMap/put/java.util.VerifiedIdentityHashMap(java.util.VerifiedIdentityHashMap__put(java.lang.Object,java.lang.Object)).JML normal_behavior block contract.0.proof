\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Jun 11 16:29:00 CEST 2021
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , javaLoopTreatment-javaLoopTreatment\\:efficient
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\bootclasspath "../../../../jre";

\javaSource "../../../../src";

\include "../../../../functions.key";

\proofObligation "#Proof Obligation Settings
#Fri Jun 11 16:29:00 CEST 2021
contract=java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap\\:\\:put(java.lang.Object,java.lang.Object)].JML normal_behavior block contract.0
name=java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap\\:\\:put(java.lang.Object,java.lang.Object)].JML normal_behavior block contract.0
class=de.uka.ilkd.key.proof.init.FunctionalBlockContractPO
";

\proof {
(keyLog "0" (keyUser "martindeboer" ) (keyVersion "a6034b00a3"))

(autoModeTime "35501")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "self,anonOut_heap,heap_Before_METHOD,savedHeap_Before_METHOD,len_Before_METHOD#5,result#3,exc#4,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f,anonIn_heap,anonIn_len"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,0,1"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,0,1"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,0,1"))
(rule "impRight" (formula "1"))
(rule "impRight" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "2"))
(rule "translateJavaAddInt" (formula "13") (term "0,0,1,0,0,1"))
(rule "eqSymm" (formula "13") (term "1,0,0,1,0,1"))
(rule "translateJavaAddInt" (formula "3") (term "0"))
(rule "translateJavaMulInt" (formula "11") (term "1,1,0"))
(rule "translateJavaAddInt" (formula "11") (term "0,0,0"))
(rule "translateJavaSubInt" (formula "11") (term "1,1"))
(rule "elementOfSingleton" (formula "13") (term "0,0,0,0,1,0,1"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "inEqSimp_commuteGeq" (formula "11") (term "0,0"))
(rule "variableDeclarationAssign" (formula "13") (term "1"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "exc#4_1"))
(rule "assignment" (formula "13") (term "1"))
 (builtin "One Step Simplification" (formula "13"))
(rule "pullOutSelect" (formula "3") (term "1") (inst "selectSK=java_util_VerifiedIdentityHashMap_threshold_0"))
(rule "simplifySelectOfAnon" (formula "3"))
 (builtin "One Step Simplification" (formula "3"))
(rule "replaceKnownSelect_taclet_0" (formula "12") (term "0,1"))
(rule "replaceKnownSelect_taclet_0" (formula "12") (term "0,0,0"))
(rule "hideAuxiliaryEq" (formula "3"))
(rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "3") (term "1"))
(rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "11") (term "0,1"))
(rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "11") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0"))
(rule "pullOutSelect" (formula "3") (term "0,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_size_0"))
(rule "simplifySelectOfAnon" (formula "3"))
 (builtin "One Step Simplification" (formula "3"))
(rule "replaceKnownSelect_taclet_2" (formula "12") (term "0,0,0,0"))
(rule "hideAuxiliaryEq" (formula "3"))
(rule "replaceKnownAuxiliaryConstant_taclet_3" (formula "3") (term "0,0"))
(rule "replaceKnownAuxiliaryConstant_taclet_3" (formula "11") (term "0,0,0,0"))
(rule "inEqSimp_commuteGeq" (formula "11") (term "0,0"))
(rule "expand_mulJint" (formula "11") (term "1,1,0"))
(rule "mul_literals" (formula "11") (term "0,1,1,0"))
(rule "expand_subJint" (formula "11") (term "1,1"))
(rule "sub_literals" (formula "11") (term "0,1,1"))
(rule "expand_addJint" (formula "13") (term "0,0,1,0,0,1"))
(rule "polySimp_addComm0" (formula "13") (term "0,0,0,1,0,0,1"))
(rule "expand_addJint" (formula "3") (term "0"))
(rule "polySimp_addComm0" (formula "3") (term "0,0"))
(rule "expand_addJint" (formula "11") (term "1,0,0"))
(rule "polySimp_addComm0" (formula "11") (term "0,1,0,0"))
(rule "expand_moduloInteger" (formula "11") (term "1,1,0"))
(rule "replace_int_MIN" (formula "11") (term "0,1,1,0"))
(rule "replace_int_RANGE" (formula "11") (term "1,1,1,1,0"))
(rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,1,1,0"))
(rule "add_literals" (formula "11") (term "0,1,1,1,0"))
(rule "expand_moduloInteger" (formula "11") (term "1,1"))
(rule "replace_int_MIN" (formula "11") (term "0,1,1"))
(rule "replace_int_RANGE" (formula "11") (term "1,1,1,1"))
(rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,1,1"))
(rule "add_literals" (formula "11") (term "0,1,1,1"))
(rule "expand_moduloInteger" (formula "13") (term "0,0,1,0,0,1"))
(rule "replace_int_RANGE" (formula "13") (term "1,1,0,0,1,0,0,1"))
(rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,0,1,0,0,1"))
(rule "replace_int_MIN" (formula "13") (term "0,0,0,1,0,0,1"))
(rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,1,0,0,1"))
(rule "add_literals" (formula "13") (term "0,0,1,0,0,1,0,0,1"))
(rule "expand_moduloInteger" (formula "3") (term "0"))
(rule "replace_int_RANGE" (formula "3") (term "1,1,0"))
(rule "replace_int_MIN" (formula "3") (term "0,0"))
(rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0"))
(rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
(rule "add_literals" (formula "3") (term "0,0,1,0"))
(rule "expand_moduloInteger" (formula "11") (term "1,0,0"))
(rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,1,0,0"))
(rule "replace_int_RANGE" (formula "11") (term "1,1,1,0,0"))
(rule "replace_int_MIN" (formula "11") (term "0,1,0,0"))
(rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0"))
(rule "add_literals" (formula "11") (term "0,0,1,1,0,0"))
(rule "commute_and" (formula "11") (term "0"))
(rule "commute_and_2" (formula "11"))
(rule "applyEq_and_int7" (formula "11"))
(rule "commute_and_2" (formula "11"))
(rule "commute_and" (formula "11") (term "0"))
(rule "ifUnfold" (formula "13") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "x"))
(rule "compound_greater_equal_than_comparison_2" (formula "13") (term "1") (inst "#v1=x_2") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "13") (term "1"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "x_1"))
(rule "preincrement_assignment_attribute" (formula "13") (term "1") (inst "#v=v"))
(rule "variableDeclarationAssign" (formula "13") (term "1"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "v"))
(rule "assignment" (formula "13") (term "1"))
 (builtin "One Step Simplification" (formula "13"))
(rule "eval_order_access4" (formula "13") (term "1") (inst "#v1=x_3") (inst "#v0=v_1"))
(rule "variableDeclarationAssign" (formula "13") (term "1"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "v_1"))
(rule "assignment" (formula "13") (term "1"))
 (builtin "One Step Simplification" (formula "13"))
(rule "variableDeclarationAssign" (formula "13") (term "1"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "x_3"))
(rule "compound_int_cast_expression" (formula "13") (term "1") (inst "#v=x_4"))
(rule "variableDeclarationAssign" (formula "13") (term "1"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "x_4"))
(rule "remove_parentheses_right" (formula "13") (term "1"))
(rule "compound_addition_1" (formula "13") (term "1") (inst "#v=x_5"))
(rule "variableDeclarationAssign" (formula "13") (term "1"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "x_5"))
(rule "assignment_read_attribute" (formula "13"))
(branch "Normal Execution (v != null)"
    (builtin "One Step Simplification" (formula "13"))
   (rule "replaceKnownSelect_taclet_2" (formula "13") (term "0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet_3" (formula "13") (term "0,1,0"))
   (rule "assignmentAdditionInt" (formula "13") (term "1"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "translateJavaAddInt" (formula "13") (term "0,1,0"))
   (rule "expand_addJint" (formula "13") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0"))
   (rule "expand_moduloInteger" (formula "13") (term "0,1,0"))
   (rule "replace_int_RANGE" (formula "13") (term "1,1,0,1,0"))
   (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,1,0"))
   (rule "replace_int_MIN" (formula "13") (term "0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,1,0"))
   (rule "add_literals" (formula "13") (term "0,0,1,0,1,0"))
   (rule "widening_identity_cast_5" (formula "13") (term "1"))
   (rule "assignment" (formula "13") (term "1"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "assignment_write_attribute" (formula "13"))
   (branch "Normal Execution (v_1 != null)"
       (builtin "One Step Simplification" (formula "13"))
      (rule "assignment_read_attribute" (formula "13"))
      (branch "Normal Execution (v != null)"
          (builtin "One Step Simplification" (formula "13"))
         (rule "pullOutSelect" (formula "13") (term "0,1,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_size_1"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "0"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_5" (formula "13") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "13") (term "1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_2"))
         (rule "assignment_read_attribute_this" (formula "13"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "dismissNonSelectedField" (formula "13") (term "0,1,0"))
         (rule "replaceKnownSelect_taclet_0" (formula "13") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "13") (term "0,1,0"))
         (rule "greater_equal_than_comparison_simple" (formula "13") (term "1"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "inEqSimp_commuteGeq" (formula "13") (term "0,0,1,0"))
         (rule "arrayLengthNotNegative" (formula "11") (term "0,1,0"))
         (rule "arrayLengthIsAShort" (formula "12") (term "0,1,0"))
         (rule "expand_inShort" (formula "1"))
         (rule "replace_short_MIN" (formula "1") (term "0,1"))
         (rule "replace_short_MAX" (formula "1") (term "1,0"))
         (rule "andLeft" (formula "1"))
         (rule "inEqSimp_commuteLeq" (formula "2"))
         (rule "ifSplit" (formula "16"))
         (branch "if x true"
             (builtin "One Step Simplification" (formula "17"))
             (builtin "One Step Simplification" (formula "1"))
             (builtin "Use Operation Contract" (formula "17") (newnames "heapBefore_resize,exc,heapAfter_resize,anon_heap_resize") (contract "java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap::resize(int)].JML exceptional_behavior operation contract.0#java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap::resize(int)].JML normal_behavior operation contract.0"))
            (branch "Post (resize)"
                (builtin "One Step Simplification" (formula "16"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "17"))
               (rule "typeEqDerived" (formula "18") (term "0,1,1,1,0") (ifseqformula "17"))
                (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")) (ifInst ""  (formula "17")))
               (rule "andLeft" (formula "18"))
               (rule "notLeft" (formula "18"))
               (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0,0,1,0"))
               (rule "translateJavaMulInt" (formula "16") (term "1,0,0,0,0,1,0"))
               (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0,1,1,0"))
               (rule "translateJavaMulInt" (formula "16") (term "1,1,0,0,0,1,1,0"))
               (rule "translateJavaMulInt" (formula "18") (term "1,1,0,0,0"))
               (rule "eqSymm" (formula "18") (term "0,0,1,1,0,1"))
               (rule "eqSymm" (formula "18") (term "1,1,0,1,0,0,1,1"))
               (rule "translateJavaMulInt" (formula "18") (term "1,1,1,1,0,1"))
               (rule "translateJavaMulInt" (formula "18") (term "1,0,0,1,0,1,1,0,1"))
               (rule "translateJavaMulInt" (formula "18") (term "1,0,0,1,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "18") (term "1,1,0,0"))
               (rule "eqSymm" (formula "18") (term "1,0,0,1,0,1"))
               (rule "eqSymm" (formula "18") (term "0,1,0,1,0,0,1,1"))
               (rule "translateJavaMulInt" (formula "18") (term "1,1,1,0,1,1,0,1"))
               (rule "translateJavaSubInt" (formula "18") (term "1,0,0,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "18") (term "1,0,0,1"))
               (rule "translateJavaMulInt" (formula "18") (term "1,1,1,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "19") (term "1,0,0"))
               (rule "translateJavaSubInt" (formula "19") (term "1,1,0"))
               (rule "replace_known_right" (formula "16") (term "0,0,1,0") (ifseqformula "19"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "polySimp_addComm0" (formula "18") (term "0,2,0,1,1,0,1,0,0,1,1"))
               (rule "polySimp_addComm0" (formula "18") (term "0,2,1,1,1,0,1,0,0,1,1"))
               (rule "dismissNonSelectedField" (formula "18") (term "0,0,1,1,0,1,1,0,1"))
               (rule "dismissNonSelectedField" (formula "18") (term "0,1,1,0,0,0,0,1,1"))
               (rule "dismissNonSelectedField" (formula "18") (term "0,0,0,0,1,0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "18") (term "0,0,0,0,1"))
               (rule "dismissNonSelectedField" (formula "18") (term "0,0,1,0,0,0"))
               (rule "dismissNonSelectedField" (formula "18") (term "0,0,1,1,0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "18") (term "0,1,0,0"))
               (rule "replaceKnownSelect_taclet_0" (formula "18") (term "0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "18") (term "0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "18") (term "0,0,0,0,1,0,1,1,0,1"))
               (rule "dismissNonSelectedField" (formula "19") (term "0,1,0"))
               (rule "replaceKnownSelect_taclet_0" (formula "19") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "19") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "19") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "18") (term "0,0,0,0,1,1,0,1"))
               (rule "dismissNonSelectedField" (formula "18") (term "1,1,1,1,0,1,0,0,1,1"))
               (rule "dismissNonSelectedField" (formula "18") (term "0,0,1,0,0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "18") (term "1,1,0,1,0,1,0,0,1,1"))
               (rule "dismissNonSelectedField" (formula "16") (term "0,1,1,1,0"))
               (rule "dismissNonSelectedField" (formula "16") (term "0,1,0,0,1,0"))
               (rule "replaceKnownSelect_taclet_0" (formula "16") (term "0,1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "16") (term "0,1,0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "16") (term "0,0,1,0,0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "18") (term "1,1,1,0,1,0,0,1,1"))
               (rule "dismissNonSelectedField" (formula "18") (term "1,0,1,0,1,0,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,1,0,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0,0,0,0,1,0"))
               (rule "pullOutSelect" (formula "18") (term "0,0,0,0,1,0,1") (inst "selectSK=java_util_VerifiedIdentityHashMap_threshold_1"))
               (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "16"))
                (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "22")))
               (rule "eqSymm" (formula "19") (term "0,0,0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "18") (term "2,0"))
               (rule "replaceKnownSelect_taclet_0" (formula "18") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "18") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "18") (term "0,0,1,0,0"))
                (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "11")))
               (rule "pullOutSelect" (formula "19") (term "0,0,1,1,1,0,1") (inst "selectSK=java_util_VerifiedIdentityHashMap_table_0"))
               (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "16"))
                (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "23")))
               (rule "replaceKnownSelect_taclet00000_7" (formula "20") (term "0,1,1,0,0,1,0,1"))
               (rule "replaceKnownSelect_taclet00000_7" (formula "20") (term "0,1,0,0,1,1,0,1"))
               (rule "replaceKnownSelect_taclet00000_7" (formula "20") (term "1,0,1,1,0,1,0,0,1,1"))
               (rule "replaceKnownSelect_taclet00000_7" (formula "20") (term "1,0,0,1,0,1,0,0,1,1"))
               (rule "replaceKnownSelect_taclet00000_7" (formula "20") (term "0,1,1,0,0,0,1,0,0,1,1"))
               (rule "dismissNonSelectedField" (formula "19") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "19") (term "0,0,1,0,0"))
                (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "11")))
               (rule "pullOutSelect" (formula "20") (term "0,0,1,1,0,1,1,0,1") (inst "selectSK=java_util_VerifiedIdentityHashMap_table_1"))
               (rule "simplifySelectOfAnon" (formula "20"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "replaceKnownSelect_taclet00000_8" (formula "19") (term "2,0"))
               (rule "replaceKnownSelect_taclet00000_8" (formula "22") (term "0,0,0,0"))
               (rule "replaceKnownSelect_taclet00000_8" (formula "16") (term "0,1,1,1,0"))
               (rule "replaceKnownSelect_taclet00000_8" (formula "21") (term "0,0,0,0,1"))
               (rule "replaceKnownSelect_taclet00000_8" (formula "19") (term "0,1,1,2,0,0"))
               (rule "replaceKnownSelect_taclet00000_8" (formula "21") (term "0,0,1,0,0,0"))
               (rule "replaceKnownSelect_taclet00000_8" (formula "18") (term "0,1,1,2,0,0"))
               (rule "replaceKnownSelect_taclet00000_8" (formula "16") (term "0,0,1,0,0,0,1,0"))
               (rule "replaceKnownSelect_taclet00000_8" (formula "21") (term "0,0,0,0,1,1,0,1"))
               (rule "replaceKnownSelect_taclet00000_8" (formula "21") (term "0,0,1,0,0,1,0,1"))
               (rule "replaceKnownSelect_taclet00000_8" (formula "21") (term "0,0,1,1,0,1,0,1"))
               (rule "replaceKnownSelect_taclet00000_8" (formula "19") (term "0,0,1,0,0,0,2,0,0"))
               (rule "replaceKnownSelect_taclet00000_8" (formula "21") (term "0,1,1,0,0,0,0,1,1"))
               (rule "replaceKnownSelect_taclet00000_8" (formula "18") (term "0,0,1,0,0,0,2,0,0"))
               (rule "replaceKnownSelect_taclet00000_8" (formula "21") (term "0,0,0,0,1,0,1,0,1"))
               (rule "replaceKnownSelect_taclet00000_8" (formula "21") (term "1,1,0,1,0,1,0,0,1,1"))
               (rule "replaceKnownSelect_taclet00000_8" (formula "21") (term "0,0,0,0,1,0,1,1,0,1"))
               (rule "replaceKnownSelect_taclet00000_8" (formula "21") (term "1,1,1,1,0,1,0,0,1,1"))
               (rule "hideAuxiliaryEq" (formula "20"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_9" (formula "19") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_9" (formula "21") (term "0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_9" (formula "16") (term "0,1,1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_9" (formula "20") (term "0,0,0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_9" (formula "20") (term "0,0,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_9" (formula "19") (term "0,1,1,2,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_9" (formula "18") (term "0,1,1,2,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_9" (formula "20") (term "0,0,1,0,0,1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_9" (formula "20") (term "0,0,1,1,0,1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_9" (formula "20") (term "0,0,0,0,1,1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_9" (formula "16") (term "0,0,1,0,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_9" (formula "19") (term "0,0,1,0,0,0,2,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_9" (formula "18") (term "0,0,1,0,0,0,2,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_9" (formula "20") (term "0,1,1,0,0,0,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_9" (formula "20") (term "0,0,1,1,0,1,1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_9" (formula "20") (term "0,0,0,0,1,0,1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_9" (formula "20") (term "1,1,1,1,0,1,0,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_9" (formula "20") (term "0,0,0,0,1,0,1,1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_9" (formula "20") (term "1,1,0,1,0,1,0,0,1,1"))
               (rule "commuteUnion" (formula "16") (term "0,1,1,0"))
               (rule "commuteUnion" (formula "18") (term "0,1,2,0,0"))
               (rule "commuteUnion" (formula "19") (term "0,1,2,0,0"))
               (rule "expand_mulJint" (formula "20") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0"))
               (rule "expand_mulJint" (formula "20") (term "1,1,1,1,0,1"))
               (rule "expand_mulJint" (formula "20") (term "1,0,0,1,0,1,1,0,1"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,1,1,0,1"))
               (rule "expand_mulJint" (formula "20") (term "1,0,0,1,0,1,0,1"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,1,0,1"))
               (rule "expand_subJint" (formula "20") (term "1,1,0,0"))
               (rule "sub_literals" (formula "20") (term "0,1,1,0,0"))
               (rule "expand_mulJint" (formula "20") (term "1,1,1,0,1,1,0,1"))
               (rule "expand_mulJint" (formula "20") (term "1,0,0,1"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
               (rule "expand_mulJint" (formula "20") (term "1,1,1,0,1,0,1"))
               (rule "expand_mulJint" (formula "21") (term "1,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0"))
               (rule "expand_subJint" (formula "21") (term "1,1,0"))
               (rule "sub_literals" (formula "21") (term "0,1,1,0"))
               (rule "expand_subJint" (formula "16") (term "1,1,0,0,1,0"))
               (rule "sub_literals" (formula "16") (term "0,1,1,0,0,1,0"))
               (rule "expand_mulJint" (formula "16") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0,1,0"))
               (rule "expand_subJint" (formula "20") (term "0,0,0,0,1,0,1"))
               (rule "sub_literals" (formula "20") (term "0,0,0,0,0,1,0,1"))
               (rule "expand_subJint" (formula "18") (term "1,1,0,0,2,0,0"))
               (rule "sub_literals" (formula "18") (term "0,1,1,0,0,2,0,0"))
               (rule "expand_mulJint" (formula "18") (term "1,1,0,0,0,2,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0,2,0,0"))
               (rule "expand_subJint" (formula "19") (term "1,1,0,0,2,0,0"))
               (rule "sub_literals" (formula "19") (term "0,1,1,0,0,2,0,0"))
               (rule "expand_mulJint" (formula "19") (term "1,1,0,0,0,2,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0,2,0,0"))
               (rule "expand_moduloInteger" (formula "20") (term "1,1,0,0,0"))
               (rule "replace_int_MIN" (formula "20") (term "0,1,1,0,0,0"))
               (rule "replace_int_HALFRANGE" (formula "20") (term "0,0,1,1,1,0,0,0"))
               (rule "replace_int_RANGE" (formula "20") (term "1,1,1,1,0,0,0"))
               (rule "add_literals" (formula "20") (term "0,1,1,1,0,0,0"))
               (rule "expand_moduloInteger" (formula "20") (term "1,1,1,1,0,1"))
               (rule "replace_int_HALFRANGE" (formula "20") (term "0,0,1,1,1,1,1,0,1"))
               (rule "replace_int_RANGE" (formula "20") (term "1,1,1,1,1,1,0,1"))
               (rule "replace_int_MIN" (formula "20") (term "0,1,1,1,1,0,1"))
               (rule "expand_moduloInteger" (formula "20") (term "1,0,0,1,0,1,1,0,1"))
               (rule "replace_int_RANGE" (formula "20") (term "1,1,1,0,0,1,0,1,1,0,1"))
               (rule "replace_int_MIN" (formula "20") (term "0,1,0,0,1,0,1,1,0,1"))
               (rule "replace_int_HALFRANGE" (formula "20") (term "0,0,1,1,0,0,1,0,1,1,0,1"))
               (rule "add_literals" (formula "20") (term "0,1,1,0,0,1,0,1,1,0,1"))
               (rule "expand_moduloInteger" (formula "20") (term "1,0,0,1,0,1,0,1"))
               (rule "replace_int_MIN" (formula "20") (term "0,1,0,0,1,0,1,0,1"))
               (rule "replace_int_RANGE" (formula "20") (term "1,1,1,0,0,1,0,1,0,1"))
               (rule "replace_int_HALFRANGE" (formula "20") (term "0,0,1,1,0,0,1,0,1,0,1"))
               (rule "add_literals" (formula "20") (term "0,1,1,0,0,1,0,1,0,1"))
               (rule "expand_moduloInteger" (formula "20") (term "1,1,0,0"))
               (rule "replace_int_HALFRANGE" (formula "20") (term "0,0,1,1,1,0,0"))
               (rule "replace_int_MIN" (formula "20") (term "0,1,1,0,0"))
               (rule "replace_int_RANGE" (formula "20") (term "1,1,1,1,0,0"))
               (rule "add_literals" (formula "20") (term "0,1,1,1,0,0"))
               (rule "expand_moduloInteger" (formula "20") (term "1,1,1,0,1,1,0,1"))
               (rule "replace_int_RANGE" (formula "20") (term "1,1,1,1,1,0,1,1,0,1"))
               (rule "replace_int_HALFRANGE" (formula "20") (term "0,0,1,1,1,1,0,1,1,0,1"))
               (rule "replace_int_MIN" (formula "20") (term "0,1,1,1,0,1,1,0,1"))
               (rule "expand_moduloInteger" (formula "20") (term "1,0,0,1"))
               (rule "replace_int_MIN" (formula "20") (term "0,1,0,0,1"))
               (rule "replace_int_HALFRANGE" (formula "20") (term "0,0,1,1,0,0,1"))
               (rule "replace_int_RANGE" (formula "20") (term "1,1,1,0,0,1"))
               (rule "add_literals" (formula "20") (term "0,1,1,0,0,1"))
               (rule "expand_moduloInteger" (formula "21") (term "1,1,0"))
               (rule "replace_int_MIN" (formula "21") (term "0,1,1,0"))
               (rule "replace_int_HALFRANGE" (formula "21") (term "0,0,1,1,1,0"))
               (rule "replace_int_RANGE" (formula "21") (term "1,1,1,1,0"))
               (rule "add_literals" (formula "21") (term "0,1,1,1,0"))
               (rule "expand_moduloInteger" (formula "19") (term "1,1,0,0,0,2,0,0"))
               (rule "replace_int_MIN" (formula "19") (term "0,1,1,0,0,0,2,0,0"))
               (rule "replace_int_RANGE" (formula "19") (term "1,1,1,1,0,0,0,2,0,0"))
               (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,1,1,0,0,0,2,0,0"))
               (rule "add_literals" (formula "19") (term "0,1,1,1,0,0,0,2,0,0"))
               (rule "expand_moduloInteger" (formula "16") (term "1,1,0,0,1,0"))
               (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,1,1,0,0,1,0"))
               (rule "replace_int_MIN" (formula "16") (term "0,1,1,0,0,1,0"))
               (rule "replace_int_RANGE" (formula "16") (term "1,1,1,1,0,0,1,0"))
               (rule "add_literals" (formula "16") (term "0,1,1,1,0,0,1,0"))
               (rule "expand_moduloInteger" (formula "20") (term "0,0,0,0,1,0,1"))
               (rule "replace_int_MIN" (formula "20") (term "0,0,0,0,0,1,0,1"))
               (rule "replace_int_HALFRANGE" (formula "20") (term "0,0,1,0,0,0,0,1,0,1"))
               (rule "replace_int_RANGE" (formula "20") (term "1,1,0,0,0,0,1,0,1"))
               (rule "add_literals" (formula "20") (term "0,1,0,0,0,0,1,0,1"))
               (rule "expand_moduloInteger" (formula "19") (term "1,1,0,0,2,0,0"))
               (rule "replace_int_MIN" (formula "19") (term "0,1,1,0,0,2,0,0"))
               (rule "replace_int_RANGE" (formula "19") (term "1,1,1,1,0,0,2,0,0"))
               (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,1,1,0,0,2,0,0"))
               (rule "add_literals" (formula "19") (term "0,1,1,1,0,0,2,0,0"))
               (rule "expand_moduloInteger" (formula "21") (term "1,0,0"))
               (rule "replace_int_RANGE" (formula "21") (term "1,1,1,0,0"))
               (rule "replace_int_MIN" (formula "21") (term "0,1,0,0"))
               (rule "replace_int_HALFRANGE" (formula "21") (term "0,0,1,1,0,0"))
               (rule "add_literals" (formula "21") (term "0,1,1,0,0"))
               (rule "expand_moduloInteger" (formula "16") (term "1,1,0,0,0,1,0"))
               (rule "replace_int_MIN" (formula "16") (term "0,1,1,0,0,0,1,0"))
               (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,1,1,0,0,0,1,0"))
               (rule "replace_int_RANGE" (formula "16") (term "1,1,1,1,0,0,0,1,0"))
               (rule "add_literals" (formula "16") (term "0,1,1,1,0,0,0,1,0"))
               (rule "expand_moduloInteger" (formula "20") (term "1,1,1,0,1,0,1"))
               (rule "replace_int_HALFRANGE" (formula "20") (term "0,0,1,1,1,1,0,1,0,1"))
               (rule "replace_int_MIN" (formula "20") (term "0,1,1,1,0,1,0,1"))
               (rule "replace_int_RANGE" (formula "20") (term "1,1,1,1,1,0,1,0,1"))
               (rule "expand_moduloInteger" (formula "18") (term "1,1,0,0,2,0,0"))
               (rule "replace_int_MIN" (formula "18") (term "0,1,1,0,0,2,0,0"))
               (rule "replace_int_RANGE" (formula "18") (term "1,1,1,1,0,0,2,0,0"))
               (rule "replace_int_HALFRANGE" (formula "18") (term "0,0,1,1,1,0,0,2,0,0"))
               (rule "add_literals" (formula "18") (term "0,1,1,1,0,0,2,0,0"))
               (rule "expand_moduloInteger" (formula "18") (term "1,1,0,0,0,2,0,0"))
               (rule "replace_int_HALFRANGE" (formula "18") (term "0,0,1,1,1,0,0,0,2,0,0"))
               (rule "replace_int_MIN" (formula "18") (term "0,1,1,0,0,0,2,0,0"))
               (rule "replace_int_RANGE" (formula "18") (term "1,1,1,1,0,0,0,2,0,0"))
               (rule "add_literals" (formula "18") (term "0,1,1,1,0,0,0,2,0,0"))
               (rule "commute_and_2" (formula "21"))
               (rule "commute_and" (formula "21") (term "0"))
               (rule "commute_and_2" (formula "21"))
               (rule "commute_and" (formula "20") (term "0,1,1,0,1"))
               (rule "tryEmpty" (formula "24") (term "1"))
               (rule "blockEmptyLabel" (formula "24") (term "1"))
               (rule "blockEmpty" (formula "24") (term "1"))
               (rule "commute_and_2" (formula "20") (term "0,1,0,0,1,1"))
               (rule "commute_and" (formula "20") (term "0,0,0,0,1,1"))
               (rule "commute_and" (formula "20") (term "0,0,0,0,0,0"))
               (rule "commute_and_2" (formula "20") (term "0,1,0,1"))
               (rule "commute_and" (formula "16") (term "0,0,0,0,0,0,1,0"))
               (rule "methodCallEmpty" (formula "24") (term "1"))
               (rule "emptyModality" (formula "24") (term "1"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "eqSymm" (formula "24") (term "0,0"))
               (rule "polySimp_homoEq" (formula "20") (term "0,0,0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,1,0,1"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0,1"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0,1"))
               (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0,0,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,0,0,0,2,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0,0,0,0,2,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,0,0,0,2,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,0,0,0,2,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,2,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0,2,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0,2,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0,2,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,0,2,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1,1,0,1"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,1,0,1"))
               (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,2,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,2,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,2,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,2,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,2,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,2,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,2,0,0"))
               (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,2,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,1,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "7"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,2,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0,2,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0,2,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,2,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,2,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,1,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0,2,0,0"))
               (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,2,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
               (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
               (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
               (rule "add_zero_left" (formula "22") (term "0,0,0,0"))
               (rule "mod_axiom" (formula "22") (term "1,1,1"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,1"))
               (rule "div_literals" (formula "22") (term "0,1,1,1,1"))
               (rule "times_zero_2" (formula "22") (term "1,1,1,1"))
               (rule "add_literals" (formula "22") (term "1,1,1"))
               (rule "add_literals" (formula "22") (term "1,1"))
               (rule "mod_axiom" (formula "21") (term "1,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,0"))
               (rule "div_literals" (formula "21") (term "0,1,1,1,1,0"))
               (rule "mul_literals" (formula "21") (term "1,1,1,1,0"))
               (rule "add_literals" (formula "21") (term "1,1,1,0"))
               (rule "add_literals" (formula "21") (term "1,1,0"))
               (rule "mod_axiom" (formula "22") (term "1,1,1,0"))
               (rule "div_literals" (formula "22") (term "0,0,1,1,1,1,0"))
               (rule "times_zero_2" (formula "22") (term "0,1,1,1,1,0"))
               (rule "times_zero_2" (formula "22") (term "1,1,1,1,0"))
               (rule "add_literals" (formula "22") (term "1,1,1,0"))
               (rule "add_literals" (formula "22") (term "1,1,0"))
               (rule "mod_axiom" (formula "20") (term "1,1,0,0,1,0,0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,0,0,1,0,1"))
               (rule "div_literals" (formula "20") (term "0,1,1,1,0,0,1,0,0,1,0,1"))
               (rule "mul_literals" (formula "20") (term "1,1,1,0,0,1,0,0,1,0,1"))
               (rule "add_zero_right" (formula "20") (term "1,1,0,0,1,0,0,1,0,1"))
               (rule "add_literals" (formula "20") (term "1,0,0,1,0,0,1,0,1"))
               (rule "mod_axiom" (formula "20") (term "1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1"))
               (rule "div_literals" (formula "20") (term "0,1,1,1,0,0,1"))
               (rule "mul_literals" (formula "20") (term "1,1,1,0,0,1"))
               (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
               (rule "add_literals" (formula "20") (term "1,0,0,1"))
               (rule "mod_axiom" (formula "20") (term "1,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,0,1,1,0,1"))
               (rule "div_literals" (formula "20") (term "0,1,1,1,0,0,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "20") (term "1,1,1,0,0,0,0,1,1,0,1"))
               (rule "add_zero_right" (formula "20") (term "1,1,0,0,0,0,1,1,0,1"))
               (rule "add_literals" (formula "20") (term "1,0,0,0,0,1,1,0,1"))
               (rule "mod_axiom" (formula "21") (term "1,1,1"))
               (rule "div_literals" (formula "21") (term "0,0,1,1,1,1"))
               (rule "mul_literals" (formula "21") (term "0,1,1,1,1"))
               (rule "mul_literals" (formula "21") (term "1,1,1,1"))
               (rule "add_literals" (formula "21") (term "1,1,1"))
               (rule "add_literals" (formula "21") (term "1,1"))
               (rule "mod_axiom" (formula "20") (term "0,1,0,0,0,0,1,0,1"))
               (rule "div_literals" (formula "20") (term "0,0,1,0,1,0,0,0,0,1,0,1"))
               (rule "mul_literals" (formula "20") (term "0,1,0,1,0,0,0,0,1,0,1"))
               (rule "mul_literals" (formula "20") (term "1,0,1,0,0,0,0,1,0,1"))
               (rule "add_literals" (formula "20") (term "0,1,0,0,0,0,1,0,1"))
               (rule "mul_literals" (formula "20") (term "1,0,0,0,0,1,0,1"))
               (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,1,0,1"))
               (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0,1"))
               (rule "mod_axiom" (formula "19") (term "0,1,0,0,1,0,0,0,2,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,1,0,0,0,2,0,0"))
               (rule "div_literals" (formula "19") (term "0,1,0,1,0,0,1,0,0,0,2,0,0"))
               (rule "mul_literals" (formula "19") (term "1,0,1,0,0,1,0,0,0,2,0,0"))
               (rule "add_zero_right" (formula "19") (term "0,1,0,0,1,0,0,0,2,0,0"))
               (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0,0,2,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,1,0,0,0,2,0,0"))
               (rule "mod_axiom" (formula "16") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,1,0,0,1,0"))
               (rule "div_literals" (formula "16") (term "0,1,0,1,0,0,1,0,0,1,0"))
               (rule "times_zero_2" (formula "16") (term "1,0,1,0,0,1,0,0,1,0"))
               (rule "add_zero_right" (formula "16") (term "0,1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "16") (term "0,0,1,0,0,1,0"))
               (rule "mod_axiom" (formula "18") (term "0,1,0,0,1,0,0,2,0,0"))
               (rule "div_literals" (formula "18") (term "0,0,1,0,1,0,0,1,0,0,2,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,1,0,0,2,0,0"))
               (rule "times_zero_2" (formula "18") (term "1,0,1,0,0,1,0,0,2,0,0"))
               (rule "add_zero_right" (formula "18") (term "0,1,0,0,1,0,0,2,0,0"))
               (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0,2,0,0"))
               (rule "add_literals" (formula "18") (term "0,0,1,0,0,2,0,0"))
               (rule "mod_axiom" (formula "19") (term "0,1,0,0,1,0,0,2,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,1,0,0,2,0,0"))
               (rule "div_literals" (formula "19") (term "0,1,0,1,0,0,1,0,0,2,0,0"))
               (rule "mul_literals" (formula "19") (term "1,0,1,0,0,1,0,0,2,0,0"))
               (rule "add_zero_right" (formula "19") (term "0,1,0,0,1,0,0,2,0,0"))
               (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0,2,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,1,0,0,2,0,0"))
               (rule "mod_axiom" (formula "16") (term "0,1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,1,0,0,0,1,0"))
               (rule "div_literals" (formula "16") (term "0,1,0,1,0,0,1,0,0,0,1,0"))
               (rule "times_zero_2" (formula "16") (term "1,0,1,0,0,1,0,0,0,1,0"))
               (rule "add_zero_right" (formula "16") (term "0,1,0,0,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0,0,1,0"))
               (rule "add_literals" (formula "16") (term "0,0,1,0,0,0,1,0"))
               (rule "mod_axiom" (formula "20") (term "0,1,0,0,1,0,0"))
               (rule "div_literals" (formula "20") (term "0,0,1,0,1,0,0,1,0,0"))
               (rule "times_zero_2" (formula "20") (term "0,1,0,1,0,0,1,0,0"))
               (rule "times_zero_2" (formula "20") (term "1,0,1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "20") (term "0,1,0,0,1,0,0"))
               (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
               (rule "mod_axiom" (formula "20") (term "0,1,0,0,1,0,0,0"))
               (rule "div_literals" (formula "20") (term "0,0,1,0,1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0,1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "20") (term "1,0,1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "20") (term "0,1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0,0"))
               (rule "add_literals" (formula "20") (term "0,0,1,0,0,0"))
               (rule "mod_axiom" (formula "18") (term "0,1,0,0,1,0,0,0,2,0,0"))
               (rule "div_literals" (formula "18") (term "0,0,1,0,1,0,0,1,0,0,0,2,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,1,0,0,0,2,0,0"))
               (rule "times_zero_2" (formula "18") (term "1,0,1,0,0,1,0,0,0,2,0,0"))
               (rule "add_literals" (formula "18") (term "0,1,0,0,1,0,0,0,2,0,0"))
               (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0,0,2,0,0"))
               (rule "add_literals" (formula "18") (term "0,0,1,0,0,0,2,0,0"))
               (rule "mod_axiom" (formula "22") (term "0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,0"))
               (rule "div_literals" (formula "22") (term "0,1,0,0,0,0,0"))
               (rule "times_zero_2" (formula "22") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "22") (term "0,0,0,0"))
               (rule "mod_axiom" (formula "18") (term "1,3,0,1,0,2,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,3,0,1,0,2,0,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "3,0,1,0,2,0,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "0,3,0,1,0,2,0,0"))
               (rule "add_literals" (formula "18") (term "0,0,3,0,1,0,2,0,0"))
               (rule "mod_axiom" (formula "16") (term "1,3,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,3,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "3,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,3,0,1,0,1,0"))
               (rule "add_literals" (formula "16") (term "0,0,3,0,1,0,1,0"))
               (rule "mod_axiom" (formula "20") (term "1,1,1,1,0,0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,1,1,0,0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "20") (term "1,1,1,0,0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,1,1,1,0,0,1,0,1"))
               (rule "add_literals" (formula "20") (term "0,0,1,1,1,0,0,1,0,1"))
               (rule "add_zero_left" (formula "20") (term "0,1,1,1,0,0,1,0,1"))
               (rule "jmod_axiom" (formula "20") (term "0,1,0,1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,1,0,0,1,1"))
               (rule "mod_axiom" (formula "20") (term "1,1,1,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,1,1,1,0,1"))
               (rule "polySimp_addAssoc" (formula "20") (term "1,1,1,1,0,1"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,1,1,1,1,0,1"))
               (rule "add_literals" (formula "20") (term "0,0,1,1,1,1,0,1"))
               (rule "add_zero_left" (formula "20") (term "0,1,1,1,1,0,1"))
               (rule "mod_axiom" (formula "1") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "mod_axiom" (formula "21") (term "1,3,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,3,0,0,0"))
               (rule "polySimp_addAssoc" (formula "21") (term "3,0,0,0"))
               (rule "polySimp_addAssoc" (formula "21") (term "0,3,0,0,0"))
               (rule "add_literals" (formula "21") (term "0,0,3,0,0,0"))
               (rule "mod_axiom" (formula "16") (term "1,3,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,3,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "3,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,3,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,3,0,0"))
               (rule "mod_axiom" (formula "20") (term "1,3,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,3,0,1,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "3,0,1,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,3,0,1,0"))
               (rule "add_literals" (formula "20") (term "0,0,3,0,1,0"))
               (rule "jmod_axiom" (formula "20") (term "0,1,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,0,1,1"))
               (rule "mod_axiom" (formula "19") (term "1,3,0,1,0,2,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,3,0,1,0,2,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "3,0,1,0,2,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,3,0,1,0,2,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,3,0,1,0,2,0,0"))
               (rule "mod_axiom" (formula "24") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "24") (term "1,0,0"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0"))
               (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
               (rule "mod_axiom" (formula "20") (term "0,1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0,1,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "20") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1,0,0,1,1,0,1"))
               (rule "add_literals" (formula "20") (term "0,0,0,0,1,0,0,1,1,0,1"))
               (rule "mod_axiom" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,0"))
               (rule "mod_axiom" (formula "22") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
               (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
               (rule "polySimp_sepPosMonomial" (formula "20") (term "0,0,0,1,0,1"))
               (rule "mul_literals" (formula "20") (term "1,0,0,0,1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,0,0,0,2,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0,0,0,0,2,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0,0,0,0,2,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0,0,0,0,2,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0,0,0,0,2,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0,0,0,0,2,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,0,0,0,2,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0,0,0,0,2,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0,0,0,0,2,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0,0,0,0,2,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0,0,0,0,2,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0,0,0,0,2,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,1,0,0,1,1"))
               (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,1,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,1,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0,1,1"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,0,0,1,1"))
               (rule "polySimp_sepNegMonomial" (formula "20") (term "1,0,1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,1,0,0,1,1"))
               (rule "polySimp_sepNegMonomial" (formula "20") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,2,0,0"))
               (rule "mul_literals" (formula "19") (term "1,1,0,0,0,2,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "1,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,2,0,0"))
               (rule "mul_literals" (formula "18") (term "1,1,0,0,2,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,2,0,0"))
               (rule "mul_literals" (formula "19") (term "1,1,0,0,2,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
               (rule "mul_literals" (formula "20") (term "1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
               (rule "mul_literals" (formula "20") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,2,0,0"))
               (rule "mul_literals" (formula "18") (term "1,1,0,0,0,2,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1,1,0,1"))
               (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,1,0,1"))
               (rule "polySimp_rightDist" (formula "20") (term "0,1,1,0,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "20") (term "0,0,1,1,0,0,1,1,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "7"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
               (rule "polySimp_elimOne" (formula "7") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
               (rule "inEqSimp_contradEq3" (formula "22") (term "1,0") (ifseqformula "2"))
               (rule "mul_literals" (formula "22") (term "1,0,0,1,0"))
               (rule "add_literals" (formula "22") (term "0,0,1,0"))
               (rule "qeq_literals" (formula "22") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "false_right" (formula "22"))
               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
               (rule "leq_literals" (formula "3") (term "0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
               (rule "mul_literals" (formula "1") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_literals" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Exceptional Post (resize)"
                (builtin "One Step Simplification" (formula "16"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "andLeft" (formula "16"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0") (ifseqformula "16"))
               (rule "andLeft" (formula "17"))
               (rule "andLeft" (formula "18"))
               (rule "andLeft" (formula "17"))
               (rule "notLeft" (formula "17"))
               (rule "translateJavaMulInt" (formula "16") (term "1,1,0,0,0,1,1,0"))
               (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0,1,1,0"))
               (rule "translateJavaMulInt" (formula "16") (term "1,0,0,0,0,1,0"))
               (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0,0,1,0"))
               (rule "translateJavaSubInt" (formula "18") (term "1,1,0,0"))
               (rule "translateJavaMulInt" (formula "19") (term "1,1,1,0,1,0,0,1"))
               (rule "translateJavaMulInt" (formula "19") (term "1,1,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "19") (term "1,0,0,0,1,0,0,1"))
               (rule "translateJavaMulInt" (formula "19") (term "1,0,0,1,0,1,0,0,1"))
               (rule "eqSymm" (formula "19") (term "1,0,0,1,0,0,1"))
               (rule "eqSymm" (formula "19") (term "0,0,1,1,0,0,1"))
               (rule "translateJavaMulInt" (formula "18") (term "1,0,0,0"))
               (rule "eqSymm" (formula "19") (term "0,1,0,1,0,0,1,0,1"))
               (rule "eqSymm" (formula "19") (term "1,1,0,1,0,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "19") (term "1,1,0,0,0"))
               (rule "translateJavaSubInt" (formula "19") (term "1,1,0,0"))
               (rule "translateJavaMulInt" (formula "19") (term "1,1,1,0,1,1,0,0,1"))
               (rule "translateJavaMulInt" (formula "19") (term "1,0,0,1,0,1,1,0,0,1"))
               (rule "translateJavaMulInt" (formula "19") (term "1,0,0,0,1"))
               (rule "replace_known_right" (formula "18") (term "0,0,1") (ifseqformula "20"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "replace_known_right" (formula "19") (term "1,1") (ifseqformula "20"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "notLeft" (formula "19"))
               (rule "replace_known_right" (formula "16") (term "0,1,1,0") (ifseqformula "19"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "dismissNonSelectedField" (formula "18") (term "0,1,0,0"))
               (rule "replaceKnownSelect_taclet_0" (formula "18") (term "0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "18") (term "0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "18") (term "0,0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "19") (term "0,1,0"))
               (rule "replaceKnownSelect_taclet_0" (formula "19") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "19") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "19") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "16") (term "0,1,0,0,1,0"))
               (rule "replaceKnownSelect_taclet_0" (formula "16") (term "0,1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "16") (term "0,1,0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "16") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,0,0"))
               (rule "pullOutSelect" (formula "18") (term "0,0,0,0,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_table_0"))
               (rule "simplifySelectOfAnon" (formula "18"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "replaceKnownSelect_taclet10000_6" (formula "20") (term "0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet10000_6" (formula "16") (term "0,0,0,0,0,1,0"))
               (rule "hideAuxiliaryEq" (formula "18"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "19") (term "0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "18") (term "0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "16") (term "0,0,0,0,0,1,0"))
               (rule "expand_subJint" (formula "18") (term "1,1,0,0"))
               (rule "sub_literals" (formula "18") (term "0,1,1,0,0"))
               (rule "expand_mulJint" (formula "18") (term "1,0,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
               (rule "expand_mulJint" (formula "19") (term "1,1,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
               (rule "expand_subJint" (formula "19") (term "1,1,0"))
               (rule "sub_literals" (formula "19") (term "0,1,1,0"))
               (rule "expand_subJint" (formula "16") (term "1,1,0,0,1,0"))
               (rule "sub_literals" (formula "16") (term "0,1,1,0,0,1,0"))
               (rule "expand_mulJint" (formula "16") (term "1,0,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,0,1,0"))
               (rule "expand_moduloInteger" (formula "18") (term "1,1,0,0"))
               (rule "replace_int_HALFRANGE" (formula "18") (term "0,0,1,1,1,0,0"))
               (rule "replace_int_RANGE" (formula "18") (term "1,1,1,1,0,0"))
               (rule "replace_int_MIN" (formula "18") (term "0,1,1,0,0"))
               (rule "add_literals" (formula "18") (term "0,1,1,1,0,0"))
               (rule "expand_moduloInteger" (formula "18") (term "1,0,0,0"))
               (rule "replace_int_MIN" (formula "18") (term "0,1,0,0,0"))
               (rule "replace_int_HALFRANGE" (formula "18") (term "0,0,1,1,0,0,0"))
               (rule "replace_int_RANGE" (formula "18") (term "1,1,1,0,0,0"))
               (rule "add_literals" (formula "18") (term "0,1,1,0,0,0"))
               (rule "expand_moduloInteger" (formula "19") (term "1,1,0,0"))
               (rule "replace_int_MIN" (formula "19") (term "0,1,1,0,0"))
               (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,1,1,0,0"))
               (rule "replace_int_RANGE" (formula "19") (term "1,1,1,1,0,0"))
               (rule "add_literals" (formula "19") (term "0,1,1,1,0,0"))
               (rule "expand_moduloInteger" (formula "19") (term "1,1,0"))
               (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,1,1,0"))
               (rule "replace_int_RANGE" (formula "19") (term "1,1,1,1,0"))
               (rule "replace_int_MIN" (formula "19") (term "0,1,1,0"))
               (rule "add_literals" (formula "19") (term "0,1,1,1,0"))
               (rule "expand_moduloInteger" (formula "16") (term "1,1,0,0,1,0"))
               (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,1,1,0,0,1,0"))
               (rule "replace_int_MIN" (formula "16") (term "0,1,1,0,0,1,0"))
               (rule "replace_int_RANGE" (formula "16") (term "1,1,1,1,0,0,1,0"))
               (rule "add_literals" (formula "16") (term "0,1,1,1,0,0,1,0"))
               (rule "expand_moduloInteger" (formula "16") (term "1,0,0,0,1,0"))
               (rule "replace_int_RANGE" (formula "16") (term "1,1,1,0,0,0,1,0"))
               (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,1,0,0,0,1,0"))
               (rule "replace_int_MIN" (formula "16") (term "0,1,0,0,0,1,0"))
               (rule "add_literals" (formula "16") (term "0,1,1,0,0,0,1,0"))
               (rule "commute_and" (formula "18") (term "1"))
               (rule "commute_and_2" (formula "18") (term "0"))
               (rule "tryCatchThrow" (formula "23") (term "1"))
               (rule "commute_and" (formula "18") (term "0,0"))
               (rule "commute_and_2" (formula "18") (term "0"))
               (rule "commute_and_2" (formula "16") (term "0,1,0"))
               (rule "commute_and" (formula "16") (term "0,0,1,0"))
               (rule "commute_and_2" (formula "16") (term "0,1,0"))
               (rule "unusedLabel" (formula "23") (term "1"))
               (rule "ifElseUnfold" (formula "23") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_6"))
               (rule "equality_comparison_simple" (formula "23") (term "1"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "replace_known_right" (formula "23") (term "0,0,1,0") (ifseqformula "20"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "arrayLengthIsAShort" (formula "19") (term "0,1,0,0"))
               (rule "expand_inShort" (formula "1"))
               (rule "replace_short_MIN" (formula "1") (term "0,1"))
               (rule "replace_short_MAX" (formula "1") (term "1,0"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_commuteLeq" (formula "2"))
               (rule "arrayLengthNotNegative" (formula "21") (term "0,1,0,0"))
               (rule "ifElseSplit" (formula "26"))
               (branch "if x_6 true"
                   (builtin "One Step Simplification" (formula "27"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_6 false"
                   (builtin "One Step Simplification" (formula "27"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "ifElseSplit" (formula "26"))
                  (branch "if exc instanceof java.lang.Throwable true"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                     (rule "true_left" (formula "1"))
                     (rule "variableDeclaration" (formula "26") (term "1") (newnames "e"))
                     (rule "delete_unnecessary_cast" (formula "26") (term "1"))
                      (builtin "One Step Simplification" (formula "27"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "assignment" (formula "26") (term "1"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "methodCallEmpty" (formula "26") (term "1"))
                     (rule "emptyModality" (formula "26") (term "1"))
                      (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "23")))
                     (rule "false_right" (formula "26"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                     (rule "add_zero_left" (formula "24") (term "0,0,0,0"))
                     (rule "mod_axiom" (formula "21") (term "1,1,1,0"))
                     (rule "div_literals" (formula "21") (term "0,0,1,1,1,1,0"))
                     (rule "times_zero_2" (formula "21") (term "0,1,1,1,1,0"))
                     (rule "mul_literals" (formula "21") (term "1,1,1,1,0"))
                     (rule "add_zero_right" (formula "21") (term "1,1,1,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0"))
                     (rule "mod_axiom" (formula "21") (term "1,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,0,0"))
                     (rule "div_literals" (formula "21") (term "0,1,1,1,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,1,1,1,0,0"))
                     (rule "add_zero_right" (formula "21") (term "1,1,1,0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0"))
                     (rule "mod_axiom" (formula "19") (term "1,1,1,0,0,1,0"))
                     (rule "div_literals" (formula "19") (term "0,0,1,1,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "19") (term "1,1,1,1,0,0,1,0"))
                     (rule "add_zero_right" (formula "19") (term "1,1,1,0,0,1,0"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                     (rule "mod_axiom" (formula "19") (term "1,1,1,0,1,0"))
                     (rule "div_literals" (formula "19") (term "0,0,1,1,1,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,0,1,0"))
                     (rule "mul_literals" (formula "19") (term "1,1,1,1,0,1,0"))
                     (rule "add_zero_right" (formula "19") (term "1,1,1,0,1,0"))
                     (rule "add_literals" (formula "19") (term "1,1,0,1,0"))
                     (rule "mod_axiom" (formula "24") (term "1,1,1,0"))
                     (rule "div_literals" (formula "24") (term "0,0,1,1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,1,0"))
                     (rule "times_zero_2" (formula "24") (term "1,1,1,1,0"))
                     (rule "add_zero_right" (formula "24") (term "1,1,1,0"))
                     (rule "add_literals" (formula "24") (term "1,1,0"))
                     (rule "mod_axiom" (formula "24") (term "1,1,1"))
                     (rule "div_literals" (formula "24") (term "0,0,1,1,1,1"))
                     (rule "mul_literals" (formula "24") (term "0,1,1,1,1"))
                     (rule "mul_literals" (formula "24") (term "1,1,1,1"))
                     (rule "add_zero_right" (formula "24") (term "1,1,1"))
                     (rule "add_literals" (formula "24") (term "1,1"))
                     (rule "mod_axiom" (formula "22") (term "0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0,1,0"))
                     (rule "div_literals" (formula "22") (term "0,1,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "22") (term "1,0,1,0,0,1,0"))
                     (rule "add_zero_right" (formula "22") (term "0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "22") (term "1,0,0,1,0"))
                     (rule "add_literals" (formula "22") (term "0,0,1,0"))
                     (rule "mod_axiom" (formula "22") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0,1,0,0"))
                     (rule "div_literals" (formula "22") (term "0,1,0,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,0,1,0,0,1,0,0"))
                     (rule "add_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "22") (term "0,0,1,0,0"))
                     (rule "mod_axiom" (formula "24") (term "0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0"))
                     (rule "div_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,0,0,0"))
                     (rule "mod_axiom" (formula "22") (term "1,3,0,1"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,3,0,1"))
                     (rule "polySimp_addAssoc" (formula "22") (term "3,0,1"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,3,0,1"))
                     (rule "add_literals" (formula "22") (term "0,0,3,0,1"))
                     (rule "mod_axiom" (formula "4") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1"))
                     (rule "polySimp_addAssoc" (formula "4") (term "1"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                     (rule "add_literals" (formula "4") (term "0,0,1"))
                     (rule "mod_axiom" (formula "19") (term "1,3,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,3,0,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "3,0,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,3,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "19") (term "0,0,3,0,0,0,0,1,0"))
                     (rule "mod_axiom" (formula "21") (term "1,3,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,3,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "3,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,3,0,0,0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,3,0,0,0,0"))
                     (rule "mod_axiom" (formula "19") (term "1,3,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,3,0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "3,0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,3,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,3,0,0"))
                     (rule "mod_axiom" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0"))
                     (rule "mod_axiom" (formula "24") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0"))
                     (rule "mul_literals" (formula "22") (term "1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                     (rule "inEqSimp_contradEq3" (formula "21") (term "1,0") (ifseqformula "2"))
                     (rule "mul_literals" (formula "21") (term "1,0,0,1,0"))
                     (rule "add_literals" (formula "21") (term "0,0,1,0"))
                     (rule "qeq_literals" (formula "21") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "inEqSimp_contradEq3" (formula "23") (term "1,0") (ifseqformula "5"))
                     (rule "mul_literals" (formula "23") (term "1,0,0,1,0"))
                     (rule "add_literals" (formula "23") (term "0,0,1,0"))
                     (rule "qeq_literals" (formula "23") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "false_right" (formula "23"))
                     (rule "inEqSimp_contradEq3" (formula "19") (term "1,0,1,0") (ifseqformula "2"))
                     (rule "mul_literals" (formula "19") (term "1,0,0,1,0,1,0"))
                     (rule "add_literals" (formula "19") (term "0,0,1,0,1,0"))
                     (rule "qeq_literals" (formula "19") (term "0,1,0,1,0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
                     (rule "leq_literals" (formula "6") (term "0"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                     (rule "leq_literals" (formula "3") (term "0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_subsumption0" (formula "19") (term "1,0,0") (ifseqformula "2"))
                     (rule "leq_literals" (formula "19") (term "0,1,0,0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "8"))
                     (rule "andLeft" (formula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,1,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0"))
                     (rule "add_zero_right" (formula "3") (term "0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,1,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0"))
                     (rule "add_zero_right" (formula "3") (term "0"))
                     (rule "leq_literals" (formula "3"))
                     (rule "closeFalse" (formula "3"))
                  )
                  (branch "if exc instanceof java.lang.Throwable false"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
            (branch "Pre (resize)"
                (builtin "One Step Simplification" (formula "17"))
               (rule "wellFormedStorePrimitive" (formula "17") (term "0,1"))
               (rule "wellFormedAnon" (formula "17") (term "0,1"))
               (rule "expand_inInt" (formula "17") (term "1,1"))
               (rule "replace_int_MAX" (formula "17") (term "1,0,1,1"))
               (rule "replace_int_MIN" (formula "17") (term "0,1,1,1"))
               (rule "translateJavaMulInt" (formula "17") (term "1,0,0,0,0"))
               (rule "translateJavaSubInt" (formula "17") (term "1,1,0,0,0"))
               (rule "translateJavaSubInt" (formula "17") (term "1,1,0,1,0"))
               (rule "translateJavaMulInt" (formula "17") (term "1,1,0,0,1,0"))
               (rule "replace_known_left" (formula "17") (term "0,1,1") (ifseqformula "9"))
                (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "13")) (ifInst ""  (formula "14")))
               (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,1,0"))
               (rule "replaceKnownSelect_taclet_0" (formula "17") (term "0,1,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "17") (term "0,1,0,1,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,0,0"))
               (rule "replaceKnownSelect_taclet_0" (formula "17") (term "0,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "17") (term "0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "7"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "17") (term "1"))
               (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "10"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "orRight" (formula "17"))
               (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
               (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
               (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
               (rule "add_zero_left" (formula "15") (term "0,0,0,0"))
               (rule "mod_axiom" (formula "15") (term "1,1,1,0"))
               (rule "div_literals" (formula "15") (term "0,0,1,1,1,1,0"))
               (rule "mul_literals" (formula "15") (term "0,1,1,1,1,0"))
               (rule "mul_literals" (formula "15") (term "1,1,1,1,0"))
               (rule "add_zero_right" (formula "15") (term "1,1,1,0"))
               (rule "add_literals" (formula "15") (term "1,1,0"))
               (rule "mod_axiom" (formula "15") (term "1,1,1"))
               (rule "div_literals" (formula "15") (term "0,0,1,1,1,1"))
               (rule "mul_literals" (formula "15") (term "0,1,1,1,1"))
               (rule "mul_literals" (formula "15") (term "1,1,1,1"))
               (rule "add_zero_right" (formula "15") (term "1,1,1"))
               (rule "add_literals" (formula "15") (term "1,1"))
               (rule "mod_axiom" (formula "15") (term "0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,0"))
               (rule "div_literals" (formula "15") (term "0,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "15") (term "0,0,0,0"))
               (rule "mod_axiom" (formula "1") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "mod_axiom" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,0"))
               (rule "mod_axiom" (formula "17") (term "1,3,0,1"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,3,0,1"))
               (rule "polySimp_addAssoc" (formula "17") (term "3,0,1"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,3,0,1"))
               (rule "add_literals" (formula "17") (term "0,0,3,0,1"))
               (rule "mod_axiom" (formula "18") (term "1,3,0,1"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,3,0,1"))
               (rule "polySimp_addAssoc" (formula "18") (term "3,0,1"))
               (rule "polySimp_addAssoc" (formula "18") (term "0,3,0,1"))
               (rule "add_literals" (formula "18") (term "0,0,3,0,1"))
               (rule "mod_axiom" (formula "15") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
               (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,1,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0"))
               (rule "mul_literals" (formula "18") (term "0,1,1,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "7"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
               (rule "polySimp_elimOne" (formula "7") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
               (rule "inEqSimp_contradEq3" (formula "15") (term "1,0") (ifseqformula "2"))
               (rule "mul_literals" (formula "15") (term "1,0,0,1,0"))
               (rule "add_literals" (formula "15") (term "0,0,1,0"))
               (rule "qeq_literals" (formula "15") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "false_right" (formula "15"))
               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
               (rule "leq_literals" (formula "3") (term "0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
               (rule "andLeft" (formula "6"))
               (rule "inEqSimp_homoInEq1" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
               (rule "mul_literals" (formula "6") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "polySimp_addComm1" (formula "6") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "times_zero_1" (formula "6") (term "1,0"))
               (rule "add_zero_right" (formula "6") (term "0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "polySimp_addComm1" (formula "6") (term "0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "times_zero_1" (formula "6") (term "1,0"))
               (rule "add_literals" (formula "6") (term "0"))
               (rule "leq_literals" (formula "6"))
               (rule "closeFalse" (formula "6"))
            )
         )
         (branch "if x false"
             (builtin "One Step Simplification" (formula "17"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "tryEmpty" (formula "17") (term "1"))
            (rule "blockEmptyLabel" (formula "17") (term "1"))
            (rule "blockEmpty" (formula "17") (term "1"))
            (rule "methodCallEmpty" (formula "17") (term "1"))
            (rule "emptyModality" (formula "17") (term "1"))
            (rule "andRight" (formula "17") (userinteraction))
            (branch "Case 1"
               (rule "andRight" (formula "17") (userinteraction))
               (branch "Case 1"
                  (rule "case_distinction_r" (formula "17") (userinteraction))
                  (branch "Case 1"
                     (rule "case_distinction_r" (formula "17") (userinteraction))
                     (branch "Case 1"
                        (rule "case_distinction_r" (formula "17") (userinteraction))
                        (branch "Case 1"
                           (rule "andRight" (formula "15") (userinteraction))
                           (branch "Case 1"
                              (rule "andRight" (formula "15") (userinteraction))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "closeTrue" (formula "17"))
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "closeTrue" (formula "17"))
                              )
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "closeTrue" (formula "17"))
                           )
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "closeTrue" (formula "17"))
                        )
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "closeTrue" (formula "17"))
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "closeTrue" (formula "17"))
                  )
               )
               (branch "Case 2"
                  (rule "andRight" (formula "15") (userinteraction))
                  (branch "Case 1"
                     (rule "andRight" (formula "15") (userinteraction))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "replaceKnownSelect_taclet000_4" (formula "17") (term "1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet000_5" (formula "17") (term "1,0"))
                        (rule "polySimp_homoEq" (formula "17") (term "0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,0,0"))
                        (rule "inEqSimp_leqRight" (formula "15"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_leqRight" (formula "15"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "8"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "8") (term "0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                        (rule "add_literals" (formula "8") (term "0,0,0"))
                        (rule "mod_axiom" (formula "2") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                        (rule "div_literals" (formula "2") (term "0,1,1,0,0"))
                        (rule "mul_literals" (formula "2") (term "1,1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "1,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0"))
                        (rule "mod_axiom" (formula "17") (term "1,3,0,1"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,3,0,1"))
                        (rule "polySimp_addAssoc" (formula "17") (term "3,0,1"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,3,0,1"))
                        (rule "add_literals" (formula "17") (term "0,0,3,0,1"))
                        (rule "mod_axiom" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0"))
                        (rule "mod_axiom" (formula "2") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0"))
                        (rule "mod_axiom" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0"))
                        (rule "mod_axiom" (formula "8") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                        (rule "add_literals" (formula "8") (term "0,0,0,0"))
                        (rule "mod_axiom" (formula "17") (term "0,1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,1,0,0,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "17") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                        (rule "mul_literals" (formula "1") (term "0,0,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                        (rule "polySimp_elimOne" (formula "8") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
                        (rule "leq_literals" (formula "4") (term "0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "polyDiv_pullOut" (formula "1") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "equal_literals" (formula "1") (term "0,0,1,1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,1"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,1"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,1,1"))
                        (rule "polySimp_addComm0" (formula "1") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                        (rule "mul_literals" (formula "1") (term "0,1,1"))
                        (rule "polySimp_addAssoc" (formula "1") (term "1"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                        (rule "add_literals" (formula "1") (term "0,0,1"))
                        (rule "polyDiv_pullOut" (formula "2") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "equal_literals" (formula "2") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                        (rule "mul_literals" (formula "2") (term "1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0"))
                        (rule "mul_literals" (formula "2") (term "0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polyDiv_pullOut" (formula "15") (term "0,0,0") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "equal_literals" (formula "15") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "15") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,1,1,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                        (rule "mul_literals" (formula "15") (term "0,0,0"))
                        (rule "polySimp_homoEq" (formula "15") (term "0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "15") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0"))
                        (rule "polyDiv_pullOut" (formula "15") (term "0,1,0,1,0") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "equal_literals" (formula "15") (term "0,0,1,0,1,0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0,1,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0,1,1,0,1,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,1,1,0,1,0"))
                        (rule "polySimp_addComm0" (formula "15") (term "1,1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,1,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,1,0"))
                        (rule "add_zero_left" (formula "15") (term "0,0,1,0"))
                        (rule "polyDiv_pullOut" (formula "15") (term "0,1,3,0,1") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "equal_literals" (formula "15") (term "0,0,1,3,0,1"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,3,0,1"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0,1,3,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,3,0,1"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0,1,1,3,0,1"))
                        (rule "add_literals" (formula "15") (term "0,0,0,1,1,3,0,1"))
                        (rule "polySimp_addComm0" (formula "15") (term "1,1,3,0,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,3,0,1"))
                        (rule "mul_literals" (formula "15") (term "0,1,3,0,1"))
                        (rule "polySimp_addAssoc" (formula "15") (term "3,0,1"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,3,0,1"))
                        (rule "add_literals" (formula "15") (term "0,0,3,0,1"))
                        (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "15") (term "1") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "expand_inInt" (formula "15") (term "0,1,1"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "expand_inInt" (formula "15") (term "1,1,1"))
                        (rule "replace_int_MIN" (formula "15") (term "0,1,0,1,1"))
                        (rule "replace_int_MAX" (formula "15") (term "1,0,0,1,1"))
                        (rule "replace_int_MIN" (formula "15") (term "0,1,1,1,1"))
                        (rule "replace_int_MAX" (formula "15") (term "1,0,1,1,1"))
                        (rule "eqSymm" (formula "15") (term "1,0,0,0,0,0,0,1"))
                        (rule "eqSymm" (formula "15") (term "1,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "eqSymm" (formula "15") (term "1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,2,0,0,0,0,1,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,2,1,1,1,0,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,2,0,1,0,1,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,1,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,2,0,0,0,0,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,2,1,0,0,0,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,2,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,2,1,0,0,0,0,0,1,1,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,2,0,0,1,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,2,1,1,1,0,1,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,2,0,0,1,0,1,1,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,2,0,0,0,2,0,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,2,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,2,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "15") (term "0,2,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,0,0,1,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,1,0,1,1,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,2,1,1,0,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,2,0,0,0,0,0,1,1,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,1,1,1,0,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,1,0,0,1,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,0,0,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,0,0,0,0,1,1,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,1,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,1,0,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,0,1,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,1,0,1,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,1,0,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,0,0,0,0,1,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,1,1,1,0,1,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,2,0,0,0,0,0,1,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,0,0,1,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,2,1,1,0,1,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0,1,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,1,0,0,0,0,0,0,0,1"))
                        (rule "replaceKnownSelect_taclet_0" (formula "15") (term "0,1,0,0,0,0,0,0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "15") (term "0,1,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,1,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,1,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,1,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,1,1,1,1"))
                        (rule "replaceKnownSelect_taclet_0" (formula "15") (term "1,1,1,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "15") (term "1,1,1,1,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,1,1"))
                        (rule "replaceKnownSelect_taclet_0" (formula "15") (term "0,0,1,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "15") (term "0,0,1,1,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,0,2,0,1,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,1,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,1,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,1,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,1,1,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,1,1,0,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulAssoc" (formula "15") (term "1,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,0,0,0,1,1,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,1,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,0,0,0,1,1,0,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0,1,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,1,1,0,1,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,1,0,1,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,1,0,1,0,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,0,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,0,0,1"))
                        (rule "ifthenelse_negated" (formula "15") (term "2,0,1,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0,0,0,0,0,0,1"))
                        (rule "add_literals" (formula "15") (term "0,0,1,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,0,1,0,0,1"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,1,0,1,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_gtToGeq" (formula "15") (term "1,0,1,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,0,1,0,0,0,1"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,1,0,1,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,2,0,1,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_commuteGeq" (formula "15") (term "1,1,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,1,1"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "1,1,1,1"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,1,0,1,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,0,1,1,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,1,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,1,0,1,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,1,0,1,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,1,0,1,0,0,0,1"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,1,0,1,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,1,0,1,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0,1,1,0,1,0,0,1"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,1,1,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,1"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0,0,1"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "15") (term "1,1,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "1,0,1,0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1,0,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,1,0,1,0,1,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0,1,0,1,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1,0,1,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,1,0,1,0,1,0,0,0,1"))
                        (rule "elimGcdLeq" (formula "15") (term "1,1,0,0,1,1,0,1,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "sub_literals" (formula "15") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "mul_literals" (formula "15") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_literals" (formula "15") (term "1,1,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "times_zero_1" (formula "15") (term "1,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_zero_right" (formula "15") (term "0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_literals" (formula "15") (term "1,1,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "mul_literals" (formula "15") (term "0,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_literals" (formula "15") (term "0,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_literals" (formula "15") (term "1,1,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "times_zero_1" (formula "15") (term "1,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_zero_right" (formula "15") (term "0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "qeq_literals" (formula "15") (term "1,0,1,1,0,0,1,1,0,1,0,0,1"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_literals" (formula "15") (term "0,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_literals" (formula "15") (term "0,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_zero_left" (formula "15") (term "0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_literals" (formula "15") (term "1,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "times_zero_1" (formula "15") (term "0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "leq_literals" (formula "15") (term "0,1,1,0,0,1,1,0,1,0,0,1"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "elimGcdGeq" (formula "15") (term "0,1,0,0,1,1,0,1,0,0,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "sub_literals" (formula "15") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "times_zero_1" (formula "15") (term "0,0,0,1,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "15") (term "0,1,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_literals" (formula "15") (term "1,0,1,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "times_zero_1" (formula "15") (term "0,1,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "leq_literals" (formula "15") (term "1,0,0,1,0,0,1,1,0,1,0,0,1"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_literals" (formula "15") (term "1,1,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "qeq_literals" (formula "15") (term "0,0,1,0,0,1,1,0,1,0,0,1"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "nonNull" (formula "15") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1") (inst "i=i"))
                        (rule "sub_literals" (formula "15") (term "2,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "greater_literals" (formula "15") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "pullOutSelect" (formula "15") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,1") (inst "selectSK=java_util_VerifiedIdentityHashMap_table_0"))
                        (rule "applyEq" (formula "16") (term "1,0,0,1,0,1,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "0,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "1,1,1,0,0,0,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "1,1,0,1,0,0,0,1,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "1,0,0,0,0,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "0,0,1,0,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "1,0,1,0,1,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "1,0,0,1,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "0,2,0,1,0,0,0,1,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "0,2,0,1,0,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "1,1,0,1,0,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "0,1,1,0,1,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "0,1,1,1,0,0,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "0,0,1,1,1,0,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "0,2,1,0,0,0,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "0,1,1,1,0,0,1,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "1,0,0,2,0,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "0,0,1,1,1,0,0,1,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "0,2,0,1,0,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "0,0,1,1,1,0,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "1,1,0,1,0,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "1,0,0,1,0,1,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "1,1,1,0,0,0,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "1,1,0,1,0,0,0,1,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "1,0,0,0,0,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,0,1,0,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "1,0,1,0,1,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "1,0,0,1,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,2,0,1,0,0,0,1,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,2,0,1,0,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "1,1,0,1,0,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,1,1,0,1,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,1,1,1,0,0,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,0,1,1,1,0,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,2,1,0,0,0,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,1,1,1,0,0,1,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "1,0,0,2,0,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,0,1,1,1,0,0,1,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,2,0,1,0,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,0,1,1,1,0,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "1,1,0,1,0,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "15") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1") (inst "selectSK=java_util_VerifiedIdentityHashMap_NULL_KEY_0"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "15") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,1") (inst "selectSK=java_util_VerifiedIdentityHashMap_entrySet_0"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "15") (term "0,0,0,1,1") (inst "selectSK=java_util_VerifiedIdentityHashMap_modCount_0"))
                        (rule "applyEq" (formula "16") (term "0,1,0,1,1") (ifseqformula "1"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,0,0,1,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,1,0,1,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "15") (term "1,1,0,0,0,0,0,0,1") (inst "selectSK=java_util_VerifiedIdentityHashMap_size_2"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "16") (term "1,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "6") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "replaceKnownSelect_taclet00101000_12" (formula "6") (term "0,0,1"))
                        (rule "replaceKnownSelect_taclet_0" (formula "6") (term "0,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_13" (formula "6") (term "0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "6") (term "0,1,1"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "0,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "0,0,1,0"))
                        (rule "replaceKnownSelect_taclet_2" (formula "6") (term "0,1,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet_3" (formula "6") (term "0,1,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet_0" (formula "6") (term "0,1,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "1,0,1,0,1,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "0,0,1,1,0,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "6") (term "0,1,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "1,0,0,0,0,1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "1,1,1,1,0,1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "0,2,1,1,0,1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "0,1,1,0,1,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "0,0,1,1,0,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "1,0,1,0,1,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "0,0,1,1,0,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "1,0,0,0,0,1,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "0,0,1,1,1,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "1,0,0,1,0,1,1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "1,1,1,1,0,1,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "0,2,1,1,0,1,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "0,1,1,0,0,1,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "0,0,1,1,0,0,1,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "1,0,0,0,0,1,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "1,1,1,1,0,1,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "0,2,1,1,0,1,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "0,1,1,0,1,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "0,0,1,1,0,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "1,0,0,1,0,1,1,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "0,1,1,0,0,0,1,1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "1,1,0,0,0,0,0,1,1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "0,2,0,0,0,0,0,1,1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "1,0,0,0,2,1,1,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "1,0,0,0,0,1,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "0,0,1,1,1,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "1,0,0,1,0,1,1,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "1,1,1,1,0,1,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "0,2,1,1,0,1,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "0,1,1,0,0,1,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "0,0,1,1,0,0,1,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "0,2,0,0,0,0,0,1,1,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "0,1,1,1,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "1,1,0,0,0,0,0,1,1,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_10" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "0,1,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_8" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "1,0,0,1,0,1,1,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "0,1,1,0,0,0,1,1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "1,1,0,0,0,0,0,1,1,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "0,2,0,0,0,0,0,1,1,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "1,0,0,0,2,1,1,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "0,0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00101000_6" (formula "6") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "0,2,0,0,0,0,0,1,1,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "0,1,1,1,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "1,1,0,0,0,0,0,1,1,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_11" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "0,1,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_9" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "0,0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101000_7" (formula "6") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                        (rule "expand_inInt" (formula "6") (term "0,1"))
                        (rule "expand_inInt" (formula "6") (term "1,1"))
                        (rule "replace_int_MIN" (formula "6") (term "0,1,0,1"))
                        (rule "replace_int_MAX" (formula "6") (term "1,0,0,1"))
                        (rule "replace_int_MIN" (formula "6") (term "0,1,1,1"))
                        (rule "replace_int_MAX" (formula "6") (term "1,0,1,1"))
                        (rule "andLeft" (formula "6"))
                        (rule "andLeft" (formula "7"))
                        (rule "andLeft" (formula "6"))
                        (rule "andLeft" (formula "8"))
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "6"))
                        (rule "andLeft" (formula "6"))
                        (rule "andLeft" (formula "6"))
                        (rule "andLeft" (formula "6"))
                        (rule "andLeft" (formula "6"))
                        (rule "andLeft" (formula "6"))
                        (rule "andLeft" (formula "6"))
                        (rule "andLeft" (formula "6"))
                        (rule "andLeft" (formula "6"))
                        (rule "andLeft" (formula "6"))
                        (rule "andLeft" (formula "8"))
                        (rule "andLeft" (formula "6"))
                        (rule "notLeft" (formula "8"))
                        (rule "andLeft" (formula "8"))
                        (rule "notLeft" (formula "7"))
                        (rule "notLeft" (formula "7"))
                        (rule "exLeft" (formula "14") (inst "sk=i_1_0"))
                        (rule "andLeft" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "exLeft" (formula "13") (inst "sk=i_2_0"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "eqSymm" (formula "12"))
                        (rule "eqSymm" (formula "10") (term "1,0,1,0,1,0"))
                        (rule "eqSymm" (formula "10") (term "1,1,0,1,0"))
                        (rule "eqSymm" (formula "15"))
                        (rule "replace_known_left" (formula "37") (term "1,0,1") (ifseqformula "21"))
                         (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "33")) (ifInst ""  (formula "22")) (ifInst ""  (formula "24")))
                        (rule "polySimp_mulComm0" (formula "20") (term "0,2,0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "0,2,1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "0,2,1,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "0,2,0,0,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "0,2,0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "0,2,1,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "0,2,0,0,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "0,2,1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "0,2,0,0,0,0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "0,2,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0,2,0,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "0,2,1,1,0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "0,2,0,1,0,1,0,1,0"))
                        (rule "polySimp_addComm0" (formula "9") (term "0,2,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "11"))
                        (rule "mul_literals" (formula "11") (term "1,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "17"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "14"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0"))
                        (rule "ifthenelse_negated" (formula "12") (term "2,0"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_mulAssoc" (formula "20") (term "1,0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,1,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "23"))
                        (rule "replace_known_left" (formula "37") (term "0,1,1") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "inEqSimp_commuteLeq" (formula "25"))
                        (rule "replace_known_left" (formula "37") (term "1,1") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "inEqSimp_gtToGeq" (formula "19") (term "1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,1,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "8"))
                        (rule "replace_known_left" (formula "37") (term "1,1,0,0,0,0,0,0,0,0,1") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "inEqSimp_commuteLeq" (formula "7"))
                        (rule "replace_known_left" (formula "37") (term "1,0,0,0,0,0,0,0,0,1") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "inEqSimp_commuteLeq" (formula "16"))
                        (rule "inEqSimp_commuteLeq" (formula "13"))
                        (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "20") (term "0,1,0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,1,0"))
                        (rule "applyEq" (formula "20") (term "2,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "37") (term "0,1,0,1,0,0,0,0,1") (ifseqformula "15"))
                        (rule "applyEq" (formula "37") (term "1,1,1,0,0,1,0,0,0,1") (ifseqformula "15"))
                        (rule "applyEq" (formula "37") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "15"))
                        (rule "applyEq" (formula "37") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,1") (ifseqformula "15"))
                        (rule "applyEq" (formula "19") (term "2,0,1,0,1,0,1,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "19") (term "2,0,1,0,0,0,1,1,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "37") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "15"))
                        (rule "applyEq" (formula "37") (term "0,1,1,1,0,0,1,0,0,1") (ifseqformula "15"))
                        (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "37") (term "0,1,1,1,0,0,1,1") (ifseqformula "15"))
                        (rule "applyEq" (formula "20") (term "2,0,1,0,1,0,1,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "37") (term "2,0,1,0,1,0,1,0,1") (ifseqformula "15"))
                        (rule "applyEq" (formula "37") (term "2,0,1,0,1,0,1,1") (ifseqformula "15"))
                        (rule "applyEq" (formula "37") (term "1,1,1,0,0,0,1,1,0,1,1") (ifseqformula "15"))
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "15"))
                        (rule "applyEq" (formula "37") (term "2,1,0,0,0,0,1,1,0,1,1") (ifseqformula "15"))
                        (rule "applyEq" (formula "37") (term "2,0,1,0,0,0,1,1,0,1,0,1") (ifseqformula "15"))
                        (rule "applyEq" (formula "7") (term "0") (ifseqformula "15"))
                        (rule "applyEq" (formula "17") (term "0,0,1,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "37") (term "0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,1") (ifseqformula "15"))
                        (rule "applyEq" (formula "37") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,1") (ifseqformula "15"))
                        (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "10") (term "0,0,1,0,0,1,0,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "37") (term "1,1,0,1,0,0,0,1") (ifseqformula "15"))
                        (rule "applyEq" (formula "10") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "9") (term "0,0,1,0,0,1,0,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "20") (term "0,0,1,0,0,1,0,0") (ifseqformula "15"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                        (rule "mul_literals" (formula "11") (term "1"))
                        (rule "replace_known_left" (formula "37") (term "1,0,0,0,0,0,1") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "0,1,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                        (rule "polySimp_elimOne" (formula "14") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "0,1,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                        (rule "polySimp_elimOne" (formula "17") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                        (rule "replace_known_left" (formula "37") (term "1,0,0,0,0,0,1") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                        (rule "replace_known_left" (formula "37") (term "1,0,0,0,0,0,1") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                        (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "11"))
                        (rule "leq_literals" (formula "24") (term "0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "nonNull" (formula "6") (inst "i=i"))
                        (rule "greater_literals" (formula "6") (term "0,1"))
                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "32")))
                        (rule "sub_literals" (formula "6") (term "2,1,0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                        (rule "applyEq" (formula "6") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
                        (rule "replace_known_left" (formula "36") (term "0,0,0,0,0,1") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "elimGcdLeq" (formula "20") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1,1,0,0,1,1,0"))
                        (rule "sub_literals" (formula "20") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "20") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0,0,1,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,0,1,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,1,0,1,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "20") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,1,0,1,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "20") (term "0,1,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "0,0,1,0,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "20") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,0,1,0,1,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,1,0,1,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "20") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,1,0,1,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "20") (term "0,1,0,1,1,0,0,1,1,0"))
                        (rule "qeq_literals" (formula "20") (term "1,0,1,1,0,0,1,1,0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,0,1,1,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "20") (term "0,0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_pullOutFactor0" (formula "20") (term "0,0,1,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "20") (term "1,0,0,1,1,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "20") (term "0,0,1,1,0,0,1,1,0"))
                        (rule "leq_literals" (formula "20") (term "0,1,1,0,0,1,1,0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "elimGcdGeq" (formula "20") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                        (rule "sub_literals" (formula "20") (term "0,0,0,0,0,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,0,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "20") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0,0,0,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,0,1,0,0,1,1,0"))
                        (rule "qeq_literals" (formula "20") (term "0,0,0,1,0,0,1,1,0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "polySimp_pullOutFactor0" (formula "20") (term "0,0,0,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "20") (term "1,0,0,0,1,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "20") (term "0,0,0,1,0,0,1,1,0"))
                        (rule "leq_literals" (formula "20") (term "0,0,1,0,0,1,1,0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_0"))
                        (rule "simplifySelectOfAnon" (formula "18"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                        (rule "hideAuxiliaryEq" (formula "18"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "11"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "8"))
                        (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                        (rule "mul_literals" (formula "14") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0"))
                        (rule "add_literals" (formula "14") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                        (rule "polySimp_elimOne" (formula "14") (term "0"))
                        (rule "cut_direct" (formula "29") (term "0"))
                        (branch "CUT: self.<created> = TRUE TRUE"
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "true_left" (formula "30"))
                           (rule "div_axiom" (formula "1") (term "0,1,1") (inst "quotient=quotient_0"))
                           (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                           (rule "qeq_literals" (formula "1") (term "0,1,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "equal_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                           (rule "add_literals" (formula "3") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                           (rule "add_literals" (formula "3") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "applyEq" (formula "40") (term "0,1,3,0,0,1,0,1,0,1,0,1") (ifseqformula "1"))
                           (rule "polySimp_addComm1" (formula "40") (term "3,0,0,1,0,1,0,1,0,1"))
                           (rule "applyEq" (formula "40") (term "0,0,0") (ifseqformula "1"))
                           (rule "polySimp_homoEq" (formula "40") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "40") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "40") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "40") (term "0,0,0,0"))
                           (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "1"))
                           (rule "polySimp_addComm1" (formula "4") (term "1"))
                           (rule "applyEq" (formula "40") (term "0,1,3,0,1,0,0,0,0,1,1,0,1,1") (ifseqformula "1"))
                           (rule "polySimp_addComm1" (formula "40") (term "3,0,1,0,0,0,0,1,1,0,1,1"))
                           (rule "applyEq" (formula "40") (term "0,1,3,0,0,1,0,0,0,1,1,0,1,0,1") (ifseqformula "1"))
                           (rule "polySimp_addComm1" (formula "40") (term "3,0,0,1,0,0,0,1,1,0,1,0,1"))
                           (rule "applyEq" (formula "40") (term "0,1,3,0,0,1,0,1,0,1,1") (ifseqformula "1"))
                           (rule "polySimp_addComm1" (formula "40") (term "3,0,0,1,0,1,0,1,1"))
                           (rule "applyEq" (formula "40") (term "0,1,1,0,0,0,0,1") (ifseqformula "1"))
                           (rule "polySimp_addComm1" (formula "40") (term "1,0,0,0,0,1"))
                           (rule "polySimp_sepPosMonomial" (formula "40") (term "0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "40") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0"))
                           (rule "qeq_literals" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "13"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "nnf_imp2or" (formula "11") (term "1,0"))
                           (rule "nnf_imp2or" (formula "12") (term "1,0,1,0"))
                           (rule "nnf_imp2or" (formula "22") (term "1,0"))
                           (rule "nnf_imp2or" (formula "8") (term "0"))
                           (rule "nnf_imp2or" (formula "23") (term "0"))
                           (rule "nnf_imp2or" (formula "39") (term "0,1,1"))
                           (rule "nnf_imp2or" (formula "39") (term "0,1,0,1"))
                           (rule "nnf_imp2or" (formula "11") (term "0"))
                           (rule "nnf_imp2or" (formula "12") (term "0"))
                           (rule "nnf_imp2or" (formula "22") (term "0"))
                           (rule "nnf_notAnd" (formula "8") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                           (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                           (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "23") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                           (rule "nnf_imp2or" (formula "23") (term "1,0"))
                           (rule "nnf_notAnd" (formula "11") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "12") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                           (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                           (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "22") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                           (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                           (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "12") (term "0,1,0"))
                           (rule "nnf_notAnd" (formula "22") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "inEqSimp_notLeq" (formula "22") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,1,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "22") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,0"))
                           (rule "nnf_notAnd" (formula "39") (term "0,0,1,1"))
                           (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,1"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,1"))
                           (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,1"))
                           (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,1"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,1"))
                           (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1,1"))
                           (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0,1,1"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1,1"))
                           (rule "mul_literals" (formula "39") (term "1,0,0,0,1,1"))
                           (rule "nnf_imp2or" (formula "39") (term "1,0,1,1"))
                           (rule "nnf_imp2or" (formula "39") (term "1,0,1,0,1"))
                           (rule "nnf_notAnd" (formula "39") (term "0,0,1,0,1"))
                           (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1,0,1"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,1,0,1"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1,0,1"))
                           (rule "mul_literals" (formula "39") (term "1,0,0,0,1,0,1"))
                           (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,0,1"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,0,1"))
                           (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,0,1"))
                           (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,0,1"))
                           (rule "nnf_notAnd" (formula "23") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_notGeq" (formula "23") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "23") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,0"))
                           (rule "nnf_notAnd" (formula "12") (term "0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,0"))
                           (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1,0"))
                           (rule "nnf_imp2or" (formula "22") (term "0,1,1,0"))
                           (rule "nnf_notAnd" (formula "12") (term "0,1,0,1,0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "nnf_notAnd" (formula "39") (term "0,1,0,1,1"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "inEqSimp_notGeq" (formula "39") (term "1,0,1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,0,1,0,1,1"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,1,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,1,0,1,1"))
                           (rule "add_literals" (formula "39") (term "0,0,0,1,0,1,0,1,1"))
                           (rule "add_zero_left" (formula "39") (term "0,0,1,0,1,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,1,0,1,1"))
                           (rule "nnf_imp2or" (formula "23") (term "0,1,1,0"))
                           (rule "nnf_notAnd" (formula "22") (term "0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,1,0"))
                           (rule "jdiv_axiom" (formula "14") (term "1,0"))
                           (rule "eqSymm" (formula "14"))
                           (rule "inEqSimp_subsumption1" (formula "14") (term "0,0") (ifseqformula "9"))
                           (rule "leq_literals" (formula "14") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "eqSymm" (formula "14"))
                           (rule "applyEq" (formula "12") (term "1,1,0,0,1,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "40") (term "1,1,0,0,1,1") (ifseqformula "14"))
                           (rule "applyEq" (formula "40") (term "1,0,0,0,0,0,1") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "40") (term "1,1,0,0,1,0,1") (ifseqformula "14"))
                           (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "40") (term "1,1,1,0,0,1,0,0,1") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "12") (term "1,1,0,0") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "23") (term "1,1,0,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "14"))
                           (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                           (rule "expand_inShort" (formula "19"))
                           (rule "replace_short_MIN" (formula "19") (term "0,1"))
                           (rule "replace_short_MAX" (formula "19") (term "1,0"))
                           (rule "andLeft" (formula "19"))
                           (rule "inEqSimp_commuteLeq" (formula "20"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
                           (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                           (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "9"))
                           (rule "leq_literals" (formula "20") (term "0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "19"))
                           (rule "leq_literals" (formula "10") (term "0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
                           (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                           (rule "mul_literals" (formula "17") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "17"))
                           (rule "leq_literals" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "9"))
                           (rule "leq_literals" (formula "19") (term "0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "nnf_imp2or" (formula "40") (term "0,1,1,0,1,1"))
                           (rule "nnf_notAnd" (formula "40") (term "0,1,0,1,0,1"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "inEqSimp_notLeq" (formula "40") (term "1,0,1,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,1,0,1,0,1"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,1,0,1,0,1"))
                           (rule "add_literals" (formula "40") (term "0,0,0,1,0,1,0,1,0,1"))
                           (rule "add_zero_left" (formula "40") (term "0,0,1,0,1,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,1,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0,1,0,1"))
                           (rule "nnf_notOr" (formula "24") (term "0,0,1,1,0"))
                           (rule "commute_or_2" (formula "8") (term "0"))
                           (rule "nnf_notAnd" (formula "24") (term "0,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,1,0"))
                           (rule "nnf_notAnd" (formula "24") (term "1,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "24") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,1,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "24") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "24") (term "0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "24") (term "1,0,1,0,0,1,1,0"))
                           (rule "nnf_imp2or" (formula "40") (term "0,1,1,0,1,0,1"))
                           (rule "nnf_notOr" (formula "40") (term "0,0,1,1,0,1,1"))
                           (rule "nnf_notAnd" (formula "40") (term "0,0,1,1,0,1,0,1"))
                           (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,1,1,0,1,0,1"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,1,1,0,1,0,1"))
                           (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,1,1,0,1,0,1"))
                           (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,1,1,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,1,1,0,1,0,1"))
                           (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,1,1,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1,1,0,1,0,1"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,1,1,0,1,0,1"))
                           (rule "nnf_notAnd" (formula "40") (term "1,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_notLeq" (formula "40") (term "1,1,0,0,1,1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,1,0,0,1,1,0,1,1"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,1,1,0,0,1,1,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,1,0,0,1,1,0,1,1"))
                           (rule "add_literals" (formula "40") (term "0,0,0,1,1,0,0,1,1,0,1,1"))
                           (rule "add_zero_left" (formula "40") (term "0,0,1,1,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,1,0,0,1,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,1,0,1,1"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_notGeq" (formula "40") (term "0,1,0,0,1,1,0,1,1"))
                           (rule "mul_literals" (formula "40") (term "1,0,0,0,1,0,0,1,1,0,1,1"))
                           (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,1,0,0,1,1,0,1,1"))
                           (rule "mul_literals" (formula "40") (term "1,0,1,0,0,1,1,0,1,1"))
                           (rule "nnf_notAnd" (formula "40") (term "0,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,0,1,1,0,1,1"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,0,1,1,0,1,1"))
                           (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,0,1,1,0,1,1"))
                           (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,1,1,0,1,1"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,1,1,0,1,1"))
                           (rule "commute_or_2" (formula "10") (term "0"))
                           (rule "commute_or_2" (formula "23") (term "0,1,1,0"))
                           (rule "commute_or" (formula "11") (term "0,0,1,0"))
                           (rule "commute_or" (formula "8") (term "0,0"))
                           (rule "commute_or" (formula "24") (term "0,1,1,0"))
                           (rule "commute_or" (formula "10") (term "0,0"))
                           (rule "shift_paren_or" (formula "11") (term "0,1,0"))
                           (rule "commute_or_2" (formula "11") (term "0,0,1,0"))
                           (rule "inEqSimp_or_weaken2" (formula "11") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "1,0,1,0,1,0"))
                           (rule "add_literals" (formula "11") (term "0,1,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "11") (term "1,0,1,0,1,0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "commute_or" (formula "11") (term "0,0,1,0"))
                           (rule "commute_or" (formula "23") (term "0,0,1,1,0"))
                           (rule "commute_or_2" (formula "23") (term "0,1,1,0"))
                           (rule "div_axiom" (formula "13") (term "1") (inst "quotient=quotient_1"))
                           (rule "mul_literals" (formula "13") (term "1,1,1,1,1"))
                           (rule "equal_literals" (formula "13") (term "0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "qeq_literals" (formula "13") (term "0,1"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "polySimp_addComm1" (formula "15") (term "1"))
                           (rule "add_literals" (formula "15") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "14"))
                           (rule "inEqSimp_homoInEq1" (formula "15"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0"))
                           (rule "applyEqRigid" (formula "43") (term "1,1,0,0,1,0,1") (ifseqformula "13"))
                           (rule "applyEq" (formula "26") (term "1,1,0,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "43") (term "1,1,0,0,1,1") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "11") (term "1,1,0,0,1,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "43") (term "1,1,1,0,0,1,0,0,1") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq1" (formula "24"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "applyEqRigid" (formula "10") (term "1,1,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "27") (term "1,1,0,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "17") (term "1,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "43") (term "1,0,0,0,0,0,1") (ifseqformula "13"))
                           (rule "applyEq" (formula "16") (term "1") (ifseqformula "13"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1"))
                           (rule "polySimp_rightDist" (formula "15") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                           (rule "mul_literals" (formula "15") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1"))
                           (rule "polySimp_rightDist" (formula "24") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                           (rule "mul_literals" (formula "24") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                           (rule "mul_literals" (formula "23") (term "0,0"))
                           (rule "add_zero_left" (formula "23") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                           (rule "mul_literals" (formula "23") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "15"))
                           (rule "mul_literals" (formula "9") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0"))
                           (rule "add_literals" (formula "9") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                           (rule "mul_literals" (formula "9") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "9") (term "0,0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0"))
                           (rule "leq_literals" (formula "9") (term "0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "9"))
                           (rule "leq_literals" (formula "24") (term "0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "16"))
                           (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                           (rule "mul_literals" (formula "21") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                           (rule "add_literals" (formula "21") (term "0,0,0"))
                           (rule "add_zero_left" (formula "21") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "23"))
                           (rule "polySimp_mulAssoc" (formula "15") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "15") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                           (rule "neg_literal" (formula "15") (term "0,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "15") (term "0,0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0"))
                           (rule "qeq_literals" (formula "15") (term "0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "22"))
                           (rule "mul_literals" (formula "20") (term "0,0"))
                           (rule "add_zero_left" (formula "20") (term "0"))
                           (rule "inEqSimp_subsumption6" (formula "20") (ifseqformula "9"))
                           (rule "greater_literals" (formula "20") (term "0,0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "mul_literals" (formula "20") (term "1,0"))
                           (rule "leq_literals" (formula "20") (term "0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "commute_or" (formula "30") (term "0,1,0,1,1,0"))
                           (rule "div_axiom" (formula "46") (term "0,1,1,0") (inst "quotient=quotient_2"))
                           (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                           (rule "qeq_literals" (formula "1") (term "0,1,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "equal_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                           (rule "add_literals" (formula "3") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                           (rule "add_literals" (formula "3") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "applyEq" (formula "49") (term "0,1,1,0") (ifseqformula "1"))
                           (rule "polySimp_addComm1" (formula "49") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "49") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "all_pull_out3" (formula "49") (term "1,0,1,0,1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "44"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "45"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0,0") (ifseqformula "46"))
                           (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "48"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "all_pull_out3" (formula "34") (term "1,0"))
                           (rule "shift_paren_or" (formula "34") (term "0,1,0"))
                           (rule "cnf_rightDist" (formula "35") (term "0,1,1,0"))
                           (rule "shift_paren_or" (formula "34") (term "0,0,1,0"))
                           (rule "commute_or_2" (formula "35") (term "1,0,1,1,0"))
                           (rule "commute_or_2" (formula "34") (term "0,0,0,1,0"))
                           (rule "all_pull_out3" (formula "17") (term "0"))
                           (rule "shift_paren_or" (formula "17") (term "0,0"))
                           (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                           (rule "commute_or_2" (formula "17") (term "0,0,0,0"))
                           (rule "commute_or" (formula "17") (term "0,0,0,0,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,1,1,0"))
                           (rule "commute_or" (formula "35") (term "0,1,0,1,1,0"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "0") (ifseqformula "47"))
                           (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "34"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "all_pull_out3" (formula "34") (term "0"))
                           (rule "shift_paren_or" (formula "34") (term "0,0"))
                           (rule "shift_paren_or" (formula "34") (term "0,0,0"))
                           (rule "shift_paren_or" (formula "34") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "34") (term "0,0,0,0,0"))
                           (rule "commute_or" (formula "34") (term "0,0,0,0,0,0"))
                           (rule "all_pull_out3" (formula "35") (term "1,0"))
                           (rule "cnf_rightDist" (formula "35") (term "0,1,0"))
                           (rule "commute_or_2" (formula "35") (term "1,0,1,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,1,0"))
                           (rule "commute_or_2" (formula "35") (term "0,1,0,1,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,0,1,0"))
                           (rule "commute_or_2" (formula "35") (term "0,0,0,0,1,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,1,0,1,0"))
                           (rule "commute_or" (formula "35") (term "0,0,0,1,0,1,0"))
                           (rule "all_pull_out3" (formula "35") (term "0"))
                           (rule "cnf_rightDist" (formula "35") (term "0,0"))
                           (rule "distr_forallAnd" (formula "35") (term "0"))
                           (rule "distr_forallAnd" (formula "35"))
                           (rule "andLeft" (formula "35"))
                           (rule "commute_or_2" (formula "36") (term "0,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0"))
                           (rule "commute_or_2" (formula "36") (term "0,0,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,0"))
                           (rule "commute_or_2" (formula "36") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "35") (term "0,0,0,0,0"))
                           (rule "shift_paren_or" (formula "36") (term "0,0,0,0,0"))
                           (rule "commute_or" (formula "35") (term "0,0,0,0,0,0"))
                           (rule "allLeft" (formula "13") (inst "t=mul(i_1_0, Z(2(#)))"))
                           (rule "replaceKnownSelect_taclet00101000_16" (formula "13") (term "0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00101000_17" (formula "13") (term "0,0,0,0"))
                           (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "34"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                           (rule "inEqSimp_contradInEq5" (formula "13") (term "0") (ifseqformula "32"))
                           (rule "greater_literals" (formula "13") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0"))
                           (rule "qeq_literals" (formula "13") (term "0,0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "13"))
                           (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                           (rule "mul_literals" (formula "29") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                           (rule "polySimp_elimOne" (formula "29") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "13"))
                           (rule "mul_literals" (formula "16") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                           (rule "mul_literals" (formula "16") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=i_1_0") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "16") (term "0,0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                           (rule "add_literals" (formula "16") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0"))
                           (rule "leq_literals" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "16"))
                           (rule "leq_literals" (formula "34") (term "0"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "true_left" (formula "34"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "13"))
                           (rule "polySimp_mulAssoc" (formula "23") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1"))
                           (rule "inEqSimp_contradInEq3" (formula "23") (ifseqformula "35"))
                           (rule "greater_literals" (formula "23") (term "0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "andLeft" (formula "23"))
                           (rule "polySimp_rightDist" (formula "23") (term "0"))
                           (rule "mul_literals" (formula "23") (term "0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "23") (term "0"))
                           (rule "add_literals" (formula "23") (term "1,1,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0"))
                           (rule "add_literals" (formula "23") (term "0"))
                           (rule "leq_literals" (formula "23"))
                           (rule "closeFalse" (formula "23"))
                        )
                        (branch "CUT: self.<created> = TRUE FALSE"
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "div_axiom" (formula "1") (term "0,1,1") (inst "quotient=quotient_0"))
                           (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                           (rule "equal_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "qeq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                           (rule "add_literals" (formula "3") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                           (rule "add_literals" (formula "3") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "1"))
                           (rule "polySimp_addComm1" (formula "4") (term "1"))
                           (rule "applyEq" (formula "41") (term "0,1,3,0,0,1,0,0,0,1,1,0,1,0,1") (ifseqformula "1"))
                           (rule "polySimp_addComm1" (formula "41") (term "3,0,0,1,0,0,0,1,1,0,1,0,1"))
                           (rule "applyEq" (formula "41") (term "0,1,3,0,0,1,0,1,0,1,0,1") (ifseqformula "1"))
                           (rule "polySimp_addComm1" (formula "41") (term "3,0,0,1,0,1,0,1,0,1"))
                           (rule "applyEq" (formula "41") (term "0,1,3,0,1,0,0,0,0,1,1,0,1,1") (ifseqformula "1"))
                           (rule "polySimp_addComm1" (formula "41") (term "3,0,1,0,0,0,0,1,1,0,1,1"))
                           (rule "applyEq" (formula "41") (term "0,0,0") (ifseqformula "1"))
                           (rule "polySimp_homoEq" (formula "41") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "41") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "41") (term "0,0,0,0"))
                           (rule "applyEq" (formula "41") (term "0,1,3,0,0,1,0,1,0,1,1") (ifseqformula "1"))
                           (rule "polySimp_addComm1" (formula "41") (term "3,0,0,1,0,1,0,1,1"))
                           (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "applyEq" (formula "41") (term "0,1,1,0,0,0,0,1") (ifseqformula "1"))
                           (rule "polySimp_addComm1" (formula "41") (term "1,0,0,0,0,1"))
                           (rule "polySimp_sepPosMonomial" (formula "41") (term "0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "41") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0"))
                           (rule "qeq_literals" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "13"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "nnf_imp2or" (formula "11") (term "1,0"))
                           (rule "nnf_imp2or" (formula "12") (term "1,0,1,0"))
                           (rule "nnf_imp2or" (formula "22") (term "1,0"))
                           (rule "nnf_imp2or" (formula "8") (term "0"))
                           (rule "nnf_imp2or" (formula "23") (term "0"))
                           (rule "nnf_imp2or" (formula "40") (term "0,1,0,1"))
                           (rule "nnf_imp2or" (formula "40") (term "0,1,1"))
                           (rule "nnf_imp2or" (formula "11") (term "0"))
                           (rule "nnf_imp2or" (formula "12") (term "0"))
                           (rule "nnf_imp2or" (formula "22") (term "0"))
                           (rule "nnf_notAnd" (formula "8") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                           (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                           (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "23") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "23") (term "1,0"))
                           (rule "nnf_notAnd" (formula "11") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "12") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                           (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                           (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "22") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                           (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                           (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                           (rule "nnf_imp2or" (formula "12") (term "0,1,0"))
                           (rule "nnf_notAnd" (formula "22") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "inEqSimp_notLeq" (formula "22") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,1,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "22") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,0"))
                           (rule "nnf_notAnd" (formula "40") (term "0,0,1,1"))
                           (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,1,1"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,1,1"))
                           (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,1,1"))
                           (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,1"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,1,1"))
                           (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,1,1"))
                           (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0,1,1"))
                           (rule "add_literals" (formula "40") (term "0,0,0,0,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,1,1"))
                           (rule "mul_literals" (formula "40") (term "1,0,0,0,1,1"))
                           (rule "nnf_imp2or" (formula "40") (term "1,0,1,1"))
                           (rule "nnf_imp2or" (formula "40") (term "1,0,1,0,1"))
                           (rule "nnf_notAnd" (formula "40") (term "0,0,1,0,1"))
                           (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,1,0,1"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,1,0,1"))
                           (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,1,0,1"))
                           (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,1,0,1"))
                           (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,1,0,1"))
                           (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0,1,0,1"))
                           (rule "add_literals" (formula "40") (term "0,0,0,0,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,1,0,1"))
                           (rule "mul_literals" (formula "40") (term "1,0,0,0,1,0,1"))
                           (rule "nnf_notAnd" (formula "23") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_notGeq" (formula "23") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "23") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,0"))
                           (rule "nnf_notAnd" (formula "12") (term "0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,0"))
                           (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,0"))
                           (rule "nnf_imp2or" (formula "22") (term "0,1,1,0"))
                           (rule "nnf_notAnd" (formula "12") (term "0,1,0,1,0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "nnf_notAnd" (formula "40") (term "0,1,0,1,1"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "inEqSimp_notGeq" (formula "40") (term "1,0,1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,1,0,1,1"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,0,1,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,1,0,1,1"))
                           (rule "add_literals" (formula "40") (term "0,0,0,1,0,1,0,1,1"))
                           (rule "add_zero_left" (formula "40") (term "0,0,1,0,1,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0,1,1"))
                           (rule "nnf_imp2or" (formula "23") (term "0,1,1,0"))
                           (rule "nnf_notAnd" (formula "22") (term "0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,1,0"))
                           (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                           (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                           (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "9"))
                           (rule "leq_literals" (formula "18") (term "0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "jdiv_axiom" (formula "14") (term "1,0"))
                           (rule "eqSymm" (formula "14"))
                           (rule "inEqSimp_subsumption1" (formula "14") (term "0,0") (ifseqformula "9"))
                           (rule "leq_literals" (formula "14") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "eqSymm" (formula "14"))
                           (rule "applyEq" (formula "41") (term "1,0,0,0,0,0,1") (ifseqformula "14"))
                           (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "41") (term "1,1,0,0,1,1") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "14"))
                           (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "15") (term "1,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "12") (term "1,1,0,0,1,0") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "41") (term "1,1,0,0,1,0,1") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "23") (term "1,1,0,0") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "41") (term "1,1,1,0,0,1,0,0,1") (ifseqformula "14"))
                           (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                           (rule "expand_inShort" (formula "19"))
                           (rule "replace_short_MIN" (formula "19") (term "0,1"))
                           (rule "replace_short_MAX" (formula "19") (term "1,0"))
                           (rule "andLeft" (formula "19"))
                           (rule "inEqSimp_commuteLeq" (formula "20"))
                           (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
                           (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "19"))
                           (rule "leq_literals" (formula "10") (term "0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "9"))
                           (rule "leq_literals" (formula "19") (term "0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
                           (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                           (rule "mul_literals" (formula "17") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "17"))
                           (rule "leq_literals" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "nnf_notOr" (formula "24") (term "0,0,1,1,0"))
                           (rule "nnf_imp2or" (formula "41") (term "0,1,1,0,1,1"))
                           (rule "nnf_notAnd" (formula "41") (term "0,1,0,1,0,1"))
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "inEqSimp_notLeq" (formula "41") (term "1,0,1,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,0,1,0,1,0,1"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,1,0,1,0,1"))
                           (rule "add_literals" (formula "41") (term "0,0,0,1,0,1,0,1,0,1"))
                           (rule "add_zero_left" (formula "41") (term "0,0,1,0,1,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,1,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,0,1,0,1"))
                           (rule "commute_or_2" (formula "8") (term "0"))
                           (rule "nnf_notAnd" (formula "24") (term "0,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,1,1,0"))
                           (rule "nnf_notAnd" (formula "24") (term "1,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "24") (term "0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "24") (term "1,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "24") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,1,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "24") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,1,0"))
                           (rule "nnf_notOr" (formula "41") (term "0,0,1,1,0,1,1"))
                           (rule "nnf_imp2or" (formula "41") (term "0,1,1,0,1,0,1"))
                           (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,1,0,1,1"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,1,0,1,1"))
                           (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,1,0,1,1"))
                           (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,1,1,0,1,1"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,1,1,0,1,1"))
                           (rule "nnf_notAnd" (formula "41") (term "1,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_notGeq" (formula "41") (term "0,1,0,0,1,1,0,1,1"))
                           (rule "mul_literals" (formula "41") (term "1,0,0,0,1,0,0,1,1,0,1,1"))
                           (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,1,0,0,1,1,0,1,1"))
                           (rule "mul_literals" (formula "41") (term "1,0,1,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_notLeq" (formula "41") (term "1,1,0,0,1,1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,1,0,0,1,1,0,1,1"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,1,1,0,0,1,1,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,1,0,0,1,1,0,1,1"))
                           (rule "add_literals" (formula "41") (term "0,0,0,1,1,0,0,1,1,0,1,1"))
                           (rule "add_zero_left" (formula "41") (term "0,0,1,1,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,1,0,0,1,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,1,0,1,1"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,1,0,1,1"))
                           (rule "nnf_notAnd" (formula "41") (term "0,0,1,1,0,1,0,1"))
                           (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,1,1,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,1,0,1,0,1"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,1,1,0,1,0,1"))
                           (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,1,1,0,1,0,1"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,1,1,0,1,0,1"))
                           (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,1,1,0,1,0,1"))
                           (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,1,1,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,1,1,0,1,0,1"))
                           (rule "commute_or_2" (formula "10") (term "0"))
                           (rule "commute_or_2" (formula "23") (term "0,1,1,0"))
                           (rule "shift_paren_or" (formula "11") (term "0,1,0"))
                           (rule "commute_or" (formula "8") (term "0,0"))
                           (rule "commute_or" (formula "24") (term "0,1,1,0"))
                           (rule "commute_or" (formula "10") (term "0,0"))
                           (rule "commute_or_2" (formula "11") (term "0,0,1,0"))
                           (rule "commute_or" (formula "23") (term "0,0,1,1,0"))
                           (rule "commute_or_2" (formula "23") (term "0,1,1,0"))
                           (rule "commute_or" (formula "11") (term "0,0,0,1,0"))
                           (rule "commute_or_2" (formula "11") (term "0,0,1,0"))
                           (rule "inEqSimp_or_weaken2" (formula "11") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "1,0,1,0,1,0"))
                           (rule "add_literals" (formula "11") (term "0,1,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "11") (term "1,0,1,0,1,0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "div_axiom" (formula "13") (term "1") (inst "quotient=quotient_1"))
                           (rule "mul_literals" (formula "13") (term "1,1,1,1,1"))
                           (rule "qeq_literals" (formula "13") (term "0,1,1"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "equal_literals" (formula "13") (term "0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "polySimp_addComm1" (formula "15") (term "1"))
                           (rule "add_literals" (formula "15") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "14"))
                           (rule "inEqSimp_homoInEq1" (formula "15"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0"))
                           (rule "applyEqRigid" (formula "44") (term "1,1,0,0,1,0,1") (ifseqformula "13"))
                           (rule "applyEq" (formula "44") (term "1,1,0,0,1,1") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq1" (formula "24"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "applyEqRigid" (formula "11") (term "1,1,0,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "17") (term "1,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "44") (term "1,1,1,0,0,1,0,0,1") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "10") (term "1,1,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "11") (term "1,1,0,0,1,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "44") (term "1,0,0,0,0,0,1") (ifseqformula "13"))
                           (rule "applyEq" (formula "26") (term "1,1,0,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "27") (term "1,1,0,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "16") (term "1") (ifseqformula "13"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1"))
                           (rule "polySimp_rightDist" (formula "15") (term "1"))
                           (rule "mul_literals" (formula "15") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1"))
                           (rule "polySimp_rightDist" (formula "24") (term "1"))
                           (rule "mul_literals" (formula "24") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "15"))
                           (rule "mul_literals" (formula "9") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0"))
                           (rule "add_literals" (formula "9") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                           (rule "mul_literals" (formula "9") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                           (rule "leq_literals" (formula "9") (term "0,0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0"))
                           (rule "leq_literals" (formula "9") (term "0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "22"))
                           (rule "polySimp_mulAssoc" (formula "15") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "15") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,1,0"))
                           (rule "neg_literal" (formula "15") (term "0,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "15") (term "0,0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0"))
                           (rule "qeq_literals" (formula "15") (term "0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                           (rule "mul_literals" (formula "25") (term "0,0"))
                           (rule "add_zero_left" (formula "25") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                           (rule "mul_literals" (formula "25") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "9"))
                           (rule "leq_literals" (formula "25") (term "0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "17"))
                           (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                           (rule "mul_literals" (formula "22") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0"))
                           (rule "add_zero_left" (formula "22") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "22"))
                           (rule "mul_literals" (formula "20") (term "0,0"))
                           (rule "add_zero_left" (formula "20") (term "0"))
                           (rule "inEqSimp_subsumption6" (formula "20") (ifseqformula "9"))
                           (rule "mul_literals" (formula "20") (term "1,1,0"))
                           (rule "greater_literals" (formula "20") (term "0,0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "leq_literals" (formula "20") (term "0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "commute_or" (formula "30") (term "0,1,0,1,1,0"))
                           (rule "div_axiom" (formula "47") (term "0,1,1,0") (inst "quotient=quotient_2"))
                           (rule "equal_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "qeq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1,1,1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                           (rule "add_literals" (formula "3") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                           (rule "add_literals" (formula "3") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "applyEq" (formula "50") (term "0,1,1,0") (ifseqformula "1"))
                           (rule "polySimp_addComm1" (formula "50") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "50") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0,0") (ifseqformula "44"))
                           (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "47"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "45"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "46"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "all_pull_out3" (formula "53") (term "1,0,1,0,1"))
                           (rule "all_pull_out3" (formula "34") (term "1,0"))
                           (rule "shift_paren_or" (formula "34") (term "0,1,0"))
                           (rule "cnf_rightDist" (formula "35") (term "0,1,1,0"))
                           (rule "shift_paren_or" (formula "34") (term "0,0,1,0"))
                           (rule "all_pull_out3" (formula "17") (term "0"))
                           (rule "shift_paren_or" (formula "17") (term "0,0"))
                           (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                           (rule "commute_or_2" (formula "17") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "35") (term "1,0,1,1,0"))
                           (rule "commute_or_2" (formula "34") (term "0,0,0,1,0"))
                           (rule "commute_or" (formula "17") (term "0,0,0,0,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,1,1,0"))
                           (rule "commute_or" (formula "35") (term "0,1,0,1,1,0"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "0") (ifseqformula "47"))
                           (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "34"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "all_pull_out3" (formula "34") (term "0"))
                           (rule "shift_paren_or" (formula "34") (term "0,0"))
                           (rule "shift_paren_or" (formula "34") (term "0,0,0"))
                           (rule "shift_paren_or" (formula "34") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "34") (term "0,0,0,0,0"))
                           (rule "commute_or" (formula "34") (term "0,0,0,0,0,0"))
                           (rule "all_pull_out3" (formula "35") (term "1,0"))
                           (rule "cnf_rightDist" (formula "35") (term "0,1,0"))
                           (rule "commute_or_2" (formula "35") (term "1,0,1,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,1,0"))
                           (rule "commute_or_2" (formula "35") (term "0,1,0,1,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,0,1,0"))
                           (rule "commute_or_2" (formula "35") (term "0,0,0,0,1,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,1,0,1,0"))
                           (rule "commute_or" (formula "35") (term "0,0,0,1,0,1,0"))
                           (rule "all_pull_out3" (formula "35") (term "0"))
                           (rule "cnf_rightDist" (formula "35") (term "0,0"))
                           (rule "distr_forallAnd" (formula "35") (term "0"))
                           (rule "distr_forallAnd" (formula "35"))
                           (rule "andLeft" (formula "35"))
                           (rule "commute_or_2" (formula "36") (term "0,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0"))
                           (rule "commute_or_2" (formula "36") (term "0,0,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,0"))
                           (rule "commute_or_2" (formula "36") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "35") (term "0,0,0,0,0"))
                           (rule "shift_paren_or" (formula "36") (term "0,0,0,0,0"))
                           (rule "commute_or" (formula "35") (term "0,0,0,0,0,0"))
                           (rule "allLeft" (formula "13") (inst "t=mul(i_1_0, Z(2(#)))"))
                           (rule "replaceKnownSelect_taclet00101000_16" (formula "13") (term "0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00101000_17" (formula "13") (term "0,0,0,0"))
                           (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "34"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                           (rule "inEqSimp_contradInEq5" (formula "13") (term "0") (ifseqformula "32"))
                           (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                           (rule "greater_literals" (formula "13") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "qeq_literals" (formula "13") (term "0,0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "13"))
                           (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                           (rule "mul_literals" (formula "29") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                           (rule "polySimp_elimOne" (formula "29") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "13"))
                           (rule "polySimp_mulAssoc" (formula "22") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1"))
                           (rule "inEqSimp_contradInEq3" (formula "22") (ifseqformula "35"))
                           (rule "greater_literals" (formula "22") (term "0,0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "andLeft" (formula "22"))
                           (rule "polySimp_rightDist" (formula "22") (term "0"))
                           (rule "mul_literals" (formula "22") (term "0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "22"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0"))
                           (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "22") (term "0"))
                           (rule "add_literals" (formula "22") (term "1,1,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0"))
                           (rule "add_literals" (formula "22") (term "0"))
                           (rule "leq_literals" (formula "22"))
                           (rule "closeFalse" (formula "22"))
                        )
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "replaceKnownSelect_taclet000_4" (formula "17") (term "1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet000_5" (formula "17") (term "1,0"))
                        (rule "polySimp_homoEq" (formula "17") (term "0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,0,0"))
                        (rule "inEqSimp_leqRight" (formula "14"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0"))
                        (rule "mod_axiom" (formula "15") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1"))
                        (rule "div_literals" (formula "15") (term "0,1,1,1"))
                        (rule "times_zero_2" (formula "15") (term "1,1,1"))
                        (rule "add_literals" (formula "15") (term "1,1"))
                        (rule "add_literals" (formula "15") (term "1"))
                        (rule "mod_axiom" (formula "17") (term "1,3,0,1"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,3,0,1"))
                        (rule "polySimp_addAssoc" (formula "17") (term "3,0,1"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,3,0,1"))
                        (rule "add_literals" (formula "17") (term "0,0,3,0,1"))
                        (rule "mod_axiom" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0"))
                        (rule "mod_axiom" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0"))
                        (rule "mod_axiom" (formula "7") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0,0"))
                        (rule "mod_axiom" (formula "17") (term "0,1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,1,0,0,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "17") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                        (rule "mul_literals" (formula "1") (term "0,0,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0"))
                        (rule "inEqSimp_contradEq3" (formula "14") (ifseqformula "2"))
                        (rule "mul_literals" (formula "14") (term "1,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0"))
                        (rule "qeq_literals" (formula "14") (term "0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "false_right" (formula "14"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
                        (rule "leq_literals" (formula "3") (term "0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "polyDiv_pullOut" (formula "1") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,2,0,1,1"))
                        (rule "equal_literals" (formula "1") (term "0,0,1,1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,1"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,1,1"))
                        (rule "polySimp_addComm0" (formula "1") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                        (rule "mul_literals" (formula "1") (term "0,1,1"))
                        (rule "polySimp_addAssoc" (formula "1") (term "1"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                        (rule "add_literals" (formula "1") (term "0,0,1"))
                        (rule "polyDiv_pullOut" (formula "14") (term "0,0,0") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0,0,0"))
                        (rule "equal_literals" (formula "14") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                        (rule "mul_literals" (formula "14") (term "0,0,0"))
                        (rule "polySimp_homoEq" (formula "14") (term "0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "14") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                        (rule "polyDiv_pullOut" (formula "14") (term "0,1,0,1,0") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0,1,0,1,0"))
                        (rule "equal_literals" (formula "14") (term "0,0,1,0,1,0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0"))
                        (rule "polySimp_addComm0" (formula "14") (term "1,1,0,1,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,0,1,0"))
                        (rule "add_literals" (formula "14") (term "0,0,1,1,1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,1,0"))
                        (rule "add_zero_left" (formula "14") (term "0,0,1,0"))
                        (rule "polyDiv_pullOut" (formula "14") (term "0,1,3,0,1") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,2,0,1,3,0,1"))
                        (rule "equal_literals" (formula "14") (term "0,0,1,3,0,1"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,0,1,3,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,3,0,1"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1,3,0,1"))
                        (rule "add_literals" (formula "14") (term "0,0,0,1,1,3,0,1"))
                        (rule "polySimp_addComm0" (formula "14") (term "1,1,3,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,3,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,3,0,1"))
                        (rule "polySimp_addAssoc" (formula "14") (term "3,0,1"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,3,0,1"))
                        (rule "add_literals" (formula "14") (term "0,0,3,0,1"))
                        (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "14") (term "1") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "expand_inInt" (formula "14") (term "0,1,1"))
                        (rule "expand_inInt" (formula "14") (term "1,1,1"))
                        (rule "replace_int_MIN" (formula "14") (term "0,1,0,1,1"))
                        (rule "replace_int_MAX" (formula "14") (term "1,0,0,1,1"))
                        (rule "replace_int_MIN" (formula "14") (term "0,1,1,1,1"))
                        (rule "replace_int_MAX" (formula "14") (term "1,0,1,1,1"))
                        (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "eqSymm" (formula "14") (term "1,0,0,0,0,0,0,1"))
                        (rule "eqSymm" (formula "14") (term "1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,2,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,2,1,1,1,0,1,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,2,1,0,0,0,0,0,1,1,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,2,0,1,0,1,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,2,1,1,1,0,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,2,0,0,1,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,2,0,0,1,0,1,1,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,2,1,0,0,0,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,2,0,0,0,0,1,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,2,0,0,0,0,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,1,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,2,0,0,0,2,0,1,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,2,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,2,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "14") (term "0,2,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,0,0,0,0,0,0,1"))
                        (rule "replaceKnownSelect_taclet_0" (formula "14") (term "0,1,0,0,0,0,0,0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "14") (term "0,1,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,2,0,0,0,0,0,1,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,2,0,0,0,0,0,1,1,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,0,1,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,0,0,1,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,1,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,1,0,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,0,0,0,0,1,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,0,0,1,0,1,1,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,1,1,1,0,1,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,1,0,0,0,0,0,1,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,2,1,1,0,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,0,0,0,0,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,1,1,1,0,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,0,0,1,0,1,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,1,0,0,0,0,0,1,1,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,2,1,1,0,1,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,1,0,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,1,0,0,1,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,0,1,0,1,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,0,0,0,1,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,1,0,1,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,0,1,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,1,1"))
                        (rule "replaceKnownSelect_taclet_0" (formula "14") (term "0,0,1,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "14") (term "0,0,1,1,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,1,1,1,1"))
                        (rule "replaceKnownSelect_taclet_0" (formula "14") (term "1,1,1,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "14") (term "1,1,1,1,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,0,0,0,2,0,1,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,0,1,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,1,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,1,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulAssoc" (formula "14") (term "1,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,0,0,1,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,0,1,1,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,1,1,0,1,0,1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,0,0,0,0,0,1,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,0,0,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,1,1,0,1,0,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0,0,0,0,0,0,1"))
                        (rule "add_literals" (formula "14") (term "0,0,1,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,0,1,1,0,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,0,0,0,0,0,1,1,0,1,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,0,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,1,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,0,0,1"))
                        (rule "ifthenelse_negated" (formula "14") (term "2,0,1,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0,1,1,0,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_commuteGeq" (formula "14") (term "1,1,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_gtToGeq" (formula "14") (term "1,0,1,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,0,1,0,0,0,1"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,1,0,1,0,1,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,0,1,0,0,1"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,1,0,1,0,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,2,0,1,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,1,1"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "1,1,1,1"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0,1,1,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,1,0,1,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,1,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,1,0,1,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,1,0,1,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,1,0,1,0,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,1,0,1,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,1,0,1,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "1,1,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,0,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,0,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,0,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,0,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,1,1,0,1,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,1,1,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "1,0,1,0,1,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1,0,1,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "0,1,0,1,0,1,0,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0,1,0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1,0,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "0,1,0,1,0,1,0,0,1"))
                        (rule "nonNull" (formula "14") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1") (inst "i=i"))
                        (rule "greater_literals" (formula "14") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "sub_literals" (formula "14") (term "2,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                        (rule "elimGcdLeq" (formula "14") (term "1,1,0,0,1,1,0,1,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_literals" (formula "14") (term "1,1,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "times_zero_1" (formula "14") (term "1,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_zero_right" (formula "14") (term "0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_literals" (formula "14") (term "1,1,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_zero_right" (formula "14") (term "0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_literals" (formula "14") (term "1,1,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "times_zero_1" (formula "14") (term "1,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_zero_right" (formula "14") (term "0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "qeq_literals" (formula "14") (term "1,0,1,1,0,0,1,1,0,1,0,0,1"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_literals" (formula "14") (term "0,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_literals" (formula "14") (term "0,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_zero_left" (formula "14") (term "0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_literals" (formula "14") (term "1,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "times_zero_1" (formula "14") (term "0,0,1,1,0,0,1,1,0,1,0,0,1"))
                        (rule "leq_literals" (formula "14") (term "0,1,1,0,0,1,1,0,1,0,0,1"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "elimGcdGeq" (formula "14") (term "0,1,0,0,1,1,0,1,0,0,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "times_zero_1" (formula "14") (term "0,0,0,1,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "14") (term "0,1,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_literals" (formula "14") (term "1,0,1,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "times_zero_1" (formula "14") (term "0,1,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "leq_literals" (formula "14") (term "1,0,0,1,0,0,1,1,0,1,0,0,1"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_literals" (formula "14") (term "1,1,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,0,1,1,0,1,0,0,1"))
                        (rule "qeq_literals" (formula "14") (term "0,0,1,0,0,1,1,0,1,0,0,1"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "pullOutSelect" (formula "14") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0,1") (inst "selectSK=java_util_VerifiedIdentityHashMap_table_0"))
                        (rule "applyEq" (formula "15") (term "1,0,0,0,0,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,1,1,0,1,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "1,1,0,1,0,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,0,1,1,1,0,0,1,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,2,0,1,0,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,1,1,1,0,0,1,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "1,0,1,0,1,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,1,1,1,0,0,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "1,1,0,1,0,0,0,1,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "1,0,0,1,0,1,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "1,1,0,1,0,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "1,0,0,2,0,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,2,1,0,0,0,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,0,1,1,1,0,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,0,1,0,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,0,1,1,1,0,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "1,1,1,0,0,0,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "1,0,0,1,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,2,0,1,0,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,2,0,1,0,0,0,1,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "1,0,0,0,0,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,1,1,0,1,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "1,1,0,1,0,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,1,1,1,0,0,1,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,2,0,1,0,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,1,1,1,0,0,1,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "1,0,1,0,1,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,1,1,1,0,0,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "1,1,0,1,0,0,0,1,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "1,0,0,1,0,1,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "1,1,0,1,0,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "1,0,0,2,0,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,2,1,0,0,0,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,1,1,1,0,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,1,0,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,1,1,1,0,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "1,1,1,0,0,0,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "1,0,0,1,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,2,0,1,0,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,2,0,1,0,0,0,1,1,0,1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "14") (term "1,1,0,0,0,0,0,0,1") (inst "selectSK=java_util_VerifiedIdentityHashMap_size_2"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "15") (term "1,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "14") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1") (inst "selectSK=java_util_VerifiedIdentityHashMap_NULL_KEY_0"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "14") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,1") (inst "selectSK=java_util_VerifiedIdentityHashMap_entrySet_0"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "14") (term "0,0,0,1,1") (inst "selectSK=java_util_VerifiedIdentityHashMap_modCount_0"))
                        (rule "applyEq" (formula "15") (term "0,1,0,1,1") (ifseqformula "1"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,0,1,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,1,0,1,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "5") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "replaceKnownSelect_taclet10101000_14" (formula "5") (term "0,0,1"))
                        (rule "replaceKnownSelect_taclet_0" (formula "5") (term "0,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_15" (formula "5") (term "0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "5") (term "0,1,1"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "0,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "0,0,1,0"))
                        (rule "replaceKnownSelect_taclet_2" (formula "5") (term "0,1,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet_3" (formula "5") (term "0,1,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "1,0,1,0,1,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet_0" (formula "5") (term "0,1,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "0,0,1,1,0,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "1,0,1,0,1,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "0,0,1,1,0,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "1,0,0,0,0,1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "1,1,1,1,0,1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "0,2,1,1,0,1,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "5") (term "0,1,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "0,1,1,0,1,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "0,0,1,1,0,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "0,0,1,1,1,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "1,0,0,0,0,1,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "1,1,1,1,0,1,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "0,2,1,1,0,1,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "0,1,1,0,0,1,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "1,0,0,1,0,1,1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "0,0,1,1,0,0,1,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "0,0,1,1,0,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "1,0,0,0,0,1,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "1,1,1,1,0,1,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "0,2,1,1,0,1,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "0,1,1,0,1,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "0,1,1,0,0,0,1,1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "1,0,0,1,0,1,1,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "0,0,1,1,1,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "1,0,0,0,2,1,1,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "1,1,0,0,0,0,0,1,1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "0,2,0,0,0,0,0,1,1,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "1,0,0,0,0,1,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "1,1,1,1,0,1,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "0,2,1,1,0,1,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "0,1,1,0,0,1,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "1,0,0,1,0,1,1,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "0,0,1,1,0,0,1,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "1,1,0,0,0,0,0,1,1,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "0,2,0,0,0,0,0,1,1,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_12" (formula "5") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "0,1,1,1,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "0,1,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_10" (formula "5") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "0,1,1,0,0,0,1,1,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "1,0,0,1,0,1,1,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "1,0,0,0,2,1,1,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "1,1,0,0,0,0,0,1,1,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "0,2,0,0,0,0,0,1,1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "0,0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10101000_6" (formula "5") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "1,1,0,0,0,0,0,1,1,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "0,2,0,0,0,0,0,1,1,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_13" (formula "5") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "0,1,1,1,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "0,1,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_11" (formula "5") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "0,0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10101000_7" (formula "5") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                        (rule "expand_inInt" (formula "5") (term "0,1"))
                        (rule "expand_inInt" (formula "5") (term "1,1"))
                        (rule "replace_int_MIN" (formula "5") (term "0,1,0,1"))
                        (rule "replace_int_MAX" (formula "5") (term "1,0,0,1"))
                        (rule "replace_int_MIN" (formula "5") (term "0,1,1,1"))
                        (rule "replace_int_MAX" (formula "5") (term "1,0,1,1"))
                        (rule "andLeft" (formula "5"))
                        (rule "andLeft" (formula "6"))
                        (rule "andLeft" (formula "5"))
                        (rule "andLeft" (formula "7"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "5"))
                        (rule "andLeft" (formula "5"))
                        (rule "andLeft" (formula "5"))
                        (rule "andLeft" (formula "5"))
                        (rule "andLeft" (formula "5"))
                        (rule "andLeft" (formula "5"))
                        (rule "andLeft" (formula "5"))
                        (rule "andLeft" (formula "5"))
                        (rule "andLeft" (formula "5"))
                        (rule "andLeft" (formula "5"))
                        (rule "andLeft" (formula "7"))
                        (rule "andLeft" (formula "5"))
                        (rule "notLeft" (formula "7"))
                        (rule "andLeft" (formula "7"))
                        (rule "notLeft" (formula "6"))
                        (rule "notLeft" (formula "6"))
                        (rule "exLeft" (formula "13") (inst "sk=i_1_0"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "exLeft" (formula "12") (inst "sk=i_2_0"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "eqSymm" (formula "11"))
                        (rule "eqSymm" (formula "9") (term "1,0,1,0,1,0"))
                        (rule "eqSymm" (formula "9") (term "1,1,0,1,0"))
                        (rule "eqSymm" (formula "14"))
                        (rule "replace_known_right" (formula "36") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "32"))
                         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "32")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "20")) (ifInst ""  (formula "21")) (ifInst ""  (formula "23")))
                        (rule "polySimp_mulComm0" (formula "19") (term "0,2,1,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "0,2,0,0,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "0,2,0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "0,2,1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "0,2,1,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "0,2,0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "0,2,1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "0,2,0,0,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "0,2,0,0,0,0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "0,2,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "0,2,0,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "0,2,1,1,0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "0,2,0,1,0,1,0,1,0"))
                        (rule "polySimp_addComm0" (formula "8") (term "0,2,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10"))
                        (rule "mul_literals" (formula "10") (term "1,0,0"))
                        (rule "add_literals" (formula "10") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "13"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "13") (term "0"))
                        (rule "ifthenelse_negated" (formula "11") (term "2,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_mulAssoc" (formula "19") (term "1,0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "22"))
                        (rule "replace_known_left" (formula "36") (term "0,1,1") (ifseqformula "22"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "inEqSimp_commuteLeq" (formula "24"))
                        (rule "replace_known_left" (formula "36") (term "1,1") (ifseqformula "24"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "18") (term "1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0,1,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "7"))
                        (rule "replace_known_left" (formula "36") (term "1,1,0,0,0,0,0,0,0,0,1") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "inEqSimp_commuteLeq" (formula "6"))
                        (rule "replace_known_left" (formula "36") (term "1,0,0,0,0,0,0,0,0,1") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "inEqSimp_commuteLeq" (formula "15"))
                        (rule "inEqSimp_commuteLeq" (formula "12"))
                        (rule "inEqSimp_commuteLeq" (formula "19") (term "0,1,0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,1,0"))
                        (rule "applyEq" (formula "18") (term "2,0,1,0,0,0,1,1,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "19") (term "2,1,0,0,0,0,1,1,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "36") (term "0,1,1,1,0,0,1,1") (ifseqformula "14"))
                        (rule "applyEq" (formula "36") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,1") (ifseqformula "14"))
                        (rule "applyEq" (formula "36") (term "0,1,1,1,0,0,1,0,0,1") (ifseqformula "14"))
                        (rule "applyEq" (formula "36") (term "1,1,1,0,0,1,0,0,0,1") (ifseqformula "14"))
                        (rule "applyEq" (formula "36") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "14"))
                        (rule "applyEq" (formula "36") (term "1,1,1,0,0,0,1,1,0,1,1") (ifseqformula "14"))
                        (rule "applyEq" (formula "36") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "14"))
                        (rule "applyEq" (formula "36") (term "2,0,1,0,1,0,1,1") (ifseqformula "14"))
                        (rule "applyEq" (formula "36") (term "0,1,0,1,0,0,0,0,1") (ifseqformula "14"))
                        (rule "applyEq" (formula "36") (term "2,1,0,0,0,0,1,1,0,1,1") (ifseqformula "14"))
                        (rule "applyEq" (formula "36") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,1") (ifseqformula "14"))
                        (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "36") (term "0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,1") (ifseqformula "14"))
                        (rule "applyEq" (formula "7") (term "0") (ifseqformula "14"))
                        (rule "applyEq" (formula "36") (term "2,0,1,0,1,0,1,0,1") (ifseqformula "14"))
                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "14"))
                        (rule "applyEq" (formula "19") (term "2,0,1,0,1,0,1,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "18") (term "2,0,1,0,1,0,1,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "36") (term "2,0,1,0,0,0,1,1,0,1,0,1") (ifseqformula "14"))
                        (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "36") (term "1,1,0,1,0,0,0,1") (ifseqformula "14"))
                        (rule "applyEq" (formula "9") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "8") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "9") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                        (rule "mul_literals" (formula "10") (term "1"))
                        (rule "replace_known_left" (formula "36") (term "1,0,0,0,0,0,1") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "0,1,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "0,1,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                        (rule "polySimp_elimOne" (formula "13") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                        (rule "polySimp_elimOne" (formula "16") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                        (rule "replace_known_left" (formula "36") (term "1,0,0,0,0,0,0,1") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                        (rule "replace_known_left" (formula "36") (term "1,0,0,0,0,0,1") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "10"))
                        (rule "leq_literals" (formula "23") (term "0"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "nonNull" (formula "5") (inst "i=i"))
                        (rule "sub_literals" (formula "5") (term "2,1,0,1,1"))
                         (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "31")))
                        (rule "greater_literals" (formula "5") (term "0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
                        (rule "applyEq" (formula "5") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0"))
                        (rule "replace_known_left" (formula "35") (term "0,0,0,0,0,1") (ifseqformula "5"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "elimGcdLeq" (formula "19") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "19") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                        (rule "sub_literals" (formula "19") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,1,0,1,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,1,0,1,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "19") (term "0,1,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,0,1,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "0,0,1,0,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "19") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,1,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "19") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,1,0,1,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,1,0,1,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "19") (term "0,1,0,1,1,0,0,1,1,0"))
                        (rule "qeq_literals" (formula "19") (term "1,0,1,1,0,0,1,1,0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "19") (term "0,0,0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "19") (term "0,0,0,0,1,1,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "19") (term "0,0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0,1,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "19") (term "1,0,0,1,1,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "19") (term "0,0,1,1,0,0,1,1,0"))
                        (rule "leq_literals" (formula "19") (term "0,1,1,0,0,1,1,0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "elimGcdGeq" (formula "19") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                        (rule "sub_literals" (formula "19") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "19") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_pullOutFactor0" (formula "19") (term "0,1,0,0,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "19") (term "1,0,1,0,0,1,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "19") (term "0,1,0,0,1,0,0,1,1,0"))
                        (rule "leq_literals" (formula "19") (term "1,0,0,1,0,0,1,1,0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,0,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0,0,1,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,0,1,1,0"))
                        (rule "qeq_literals" (formula "19") (term "0,0,1,0,0,1,1,0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=arr_0"))
                        (rule "simplifySelectOfAnon" (formula "17"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "17"))
                        (rule "hideAuxiliaryEq" (formula "17"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "10"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "8"))
                        (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                        (rule "mul_literals" (formula "14") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0"))
                        (rule "add_literals" (formula "14") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                        (rule "polySimp_elimOne" (formula "14") (term "0"))
                        (rule "div_axiom" (formula "2") (term "0,1,1") (inst "quotient=quotient_0"))
                        (rule "mul_literals" (formula "2") (term "1,1,1,1,1"))
                        (rule "qeq_literals" (formula "2") (term "0,1,1"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "equal_literals" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "andLeft" (formula "2"))
                        (rule "andLeft" (formula "2"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                        (rule "add_literals" (formula "4") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "4") (term "1"))
                        (rule "add_literals" (formula "4") (term "0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "applyEq" (formula "40") (term "0,1,3,0,0,1,0,1,0,1,0,1") (ifseqformula "2"))
                        (rule "polySimp_addComm1" (formula "40") (term "3,0,0,1,0,1,0,1,0,1"))
                        (rule "applyEq" (formula "40") (term "0,1,3,0,0,1,0,1,0,1,1") (ifseqformula "2"))
                        (rule "polySimp_addComm1" (formula "40") (term "3,0,0,1,0,1,0,1,1"))
                        (rule "applyEq" (formula "40") (term "0,1,3,0,0,1,0,0,0,1,1,0,1,0,1") (ifseqformula "2"))
                        (rule "polySimp_addComm1" (formula "40") (term "3,0,0,1,0,0,0,1,1,0,1,0,1"))
                        (rule "applyEq" (formula "40") (term "0,0,0") (ifseqformula "2"))
                        (rule "polySimp_homoEq" (formula "40") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "40") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "40") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "40") (term "0,0,0,0"))
                        (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "2"))
                        (rule "polySimp_addComm1" (formula "5") (term "1"))
                        (rule "applyEq" (formula "40") (term "0,1,3,0,1,0,0,0,0,1,1,0,1,1") (ifseqformula "2"))
                        (rule "polySimp_addComm1" (formula "40") (term "3,0,1,0,0,0,0,1,1,0,1,1"))
                        (rule "applyEq" (formula "40") (term "0,1,1,0,0,0,0,1") (ifseqformula "2"))
                        (rule "polySimp_addComm1" (formula "40") (term "1,0,0,0,0,1"))
                        (rule "polySimp_sepPosMonomial" (formula "40") (term "0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "40") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0"))
                        (rule "add_zero_right" (formula "4") (term "0,0"))
                        (rule "qeq_literals" (formula "4") (term "0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "13"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "cut_direct" (formula "31") (term "0"))
                        (branch "CUT: self.<created> = TRUE TRUE"
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "nnf_imp2or" (formula "11") (term "1,0"))
                           (rule "nnf_imp2or" (formula "12") (term "1,0,1,0"))
                           (rule "nnf_imp2or" (formula "22") (term "1,0"))
                           (rule "nnf_imp2or" (formula "8") (term "0"))
                           (rule "nnf_imp2or" (formula "23") (term "0"))
                           (rule "nnf_imp2or" (formula "39") (term "0,1,0,1"))
                           (rule "nnf_imp2or" (formula "39") (term "0,1,1"))
                           (rule "nnf_imp2or" (formula "11") (term "0"))
                           (rule "nnf_imp2or" (formula "12") (term "0"))
                           (rule "nnf_imp2or" (formula "22") (term "0"))
                           (rule "nnf_notAnd" (formula "8") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                           (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                           (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "23") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                           (rule "nnf_imp2or" (formula "23") (term "1,0"))
                           (rule "nnf_notAnd" (formula "11") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "12") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                           (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                           (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "22") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                           (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                           (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "12") (term "0,1,0"))
                           (rule "nnf_notAnd" (formula "22") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "inEqSimp_notLeq" (formula "22") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,1,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "22") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,0"))
                           (rule "nnf_notAnd" (formula "39") (term "0,0,1,1"))
                           (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,1"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,1"))
                           (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,1"))
                           (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,1"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,1"))
                           (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1,1"))
                           (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0,1,1"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1,1"))
                           (rule "mul_literals" (formula "39") (term "1,0,0,0,1,1"))
                           (rule "nnf_imp2or" (formula "39") (term "1,0,1,1"))
                           (rule "nnf_notAnd" (formula "39") (term "0,0,1,0,1"))
                           (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1,0,1"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,1,0,1"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1,0,1"))
                           (rule "mul_literals" (formula "39") (term "1,0,0,0,1,0,1"))
                           (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,0,1"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,0,1"))
                           (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,0,1"))
                           (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,0,1"))
                           (rule "nnf_imp2or" (formula "39") (term "1,0,1,0,1"))
                           (rule "nnf_notAnd" (formula "23") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_notGeq" (formula "23") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "23") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,0"))
                           (rule "nnf_notAnd" (formula "12") (term "0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,0"))
                           (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1,0"))
                           (rule "nnf_imp2or" (formula "22") (term "0,1,1,0"))
                           (rule "nnf_notAnd" (formula "12") (term "0,1,0,1,0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "nnf_notAnd" (formula "39") (term "0,1,0,1,1"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "inEqSimp_notGeq" (formula "39") (term "1,0,1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,0,1,0,1,1"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,1,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,1,0,1,1"))
                           (rule "add_literals" (formula "39") (term "0,0,0,1,0,1,0,1,1"))
                           (rule "add_zero_left" (formula "39") (term "0,0,1,0,1,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,1,0,1,1"))
                           (rule "nnf_imp2or" (formula "23") (term "0,1,1,0"))
                           (rule "nnf_notAnd" (formula "22") (term "0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,1,0"))
                           (rule "jdiv_axiom" (formula "14") (term "1,0"))
                           (rule "eqSymm" (formula "14"))
                           (rule "inEqSimp_subsumption1" (formula "14") (term "0,0") (ifseqformula "9"))
                           (rule "leq_literals" (formula "14") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "eqSymm" (formula "14"))
                           (rule "applyEqRigid" (formula "40") (term "1,1,1,0,0,1,0,0,1") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "40") (term "1,1,0,0,1,1") (ifseqformula "14"))
                           (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "23") (term "1,1,0,0") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "40") (term "1,0,0,0,0,0,1") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "40") (term "1,1,0,0,1,0,1") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "11") (term "1,1,0,0") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "12") (term "1,1,0,0,1,0") (ifseqformula "14"))
                           (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                           (rule "expand_inShort" (formula "19"))
                           (rule "replace_short_MIN" (formula "19") (term "0,1"))
                           (rule "replace_short_MAX" (formula "19") (term "1,0"))
                           (rule "andLeft" (formula "19"))
                           (rule "inEqSimp_commuteLeq" (formula "20"))
                           (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
                           (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "9"))
                           (rule "leq_literals" (formula "20") (term "0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "19"))
                           (rule "leq_literals" (formula "10") (term "0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
                           (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                           (rule "mul_literals" (formula "17") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "17"))
                           (rule "leq_literals" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "9"))
                           (rule "leq_literals" (formula "19") (term "0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "nnf_notOr" (formula "24") (term "0,0,1,1,0"))
                           (rule "nnf_imp2or" (formula "40") (term "0,1,1,0,1,1"))
                           (rule "nnf_notAnd" (formula "40") (term "0,1,0,1,0,1"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "inEqSimp_notLeq" (formula "40") (term "1,0,1,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,1,0,1,0,1"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,1,0,1,0,1"))
                           (rule "add_literals" (formula "40") (term "0,0,0,1,0,1,0,1,0,1"))
                           (rule "add_zero_left" (formula "40") (term "0,0,1,0,1,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,1,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0,1,0,1"))
                           (rule "commute_or_2" (formula "8") (term "0"))
                           (rule "nnf_notAnd" (formula "24") (term "0,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,1,0"))
                           (rule "nnf_notAnd" (formula "24") (term "1,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "24") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,1,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "24") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "24") (term "0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "24") (term "1,0,1,0,0,1,1,0"))
                           (rule "nnf_imp2or" (formula "40") (term "0,1,1,0,1,0,1"))
                           (rule "nnf_notOr" (formula "40") (term "0,0,1,1,0,1,1"))
                           (rule "nnf_notAnd" (formula "40") (term "0,0,1,1,0,1,0,1"))
                           (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,1,1,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1,1,0,1,0,1"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,1,1,0,1,0,1"))
                           (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,1,1,0,1,0,1"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,1,1,0,1,0,1"))
                           (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,1,1,0,1,0,1"))
                           (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,1,1,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,1,1,0,1,0,1"))
                           (rule "nnf_notAnd" (formula "40") (term "1,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_notLeq" (formula "40") (term "1,1,0,0,1,1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,1,0,0,1,1,0,1,1"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,1,1,0,0,1,1,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,1,0,0,1,1,0,1,1"))
                           (rule "add_literals" (formula "40") (term "0,0,0,1,1,0,0,1,1,0,1,1"))
                           (rule "add_zero_left" (formula "40") (term "0,0,1,1,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,1,0,0,1,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,1,0,1,1"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_notGeq" (formula "40") (term "0,1,0,0,1,1,0,1,1"))
                           (rule "mul_literals" (formula "40") (term "1,0,0,0,1,0,0,1,1,0,1,1"))
                           (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,1,0,0,1,1,0,1,1"))
                           (rule "mul_literals" (formula "40") (term "1,0,1,0,0,1,1,0,1,1"))
                           (rule "nnf_notAnd" (formula "40") (term "0,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,1,1,0,1,1"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,0,1,1,0,1,1"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,0,1,1,0,1,1"))
                           (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,0,1,1,0,1,1"))
                           (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,1,1,0,1,1"))
                           (rule "commute_or_2" (formula "10") (term "0"))
                           (rule "commute_or_2" (formula "23") (term "0,1,1,0"))
                           (rule "commute_or" (formula "11") (term "0,0,1,0"))
                           (rule "commute_or" (formula "8") (term "0,0"))
                           (rule "commute_or" (formula "24") (term "0,1,1,0"))
                           (rule "commute_or" (formula "10") (term "0,0"))
                           (rule "shift_paren_or" (formula "11") (term "0,1,0"))
                           (rule "commute_or_2" (formula "11") (term "0,0,1,0"))
                           (rule "inEqSimp_or_weaken2" (formula "11") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "1,0,1,0,1,0"))
                           (rule "add_literals" (formula "11") (term "0,1,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "11") (term "1,0,1,0,1,0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "commute_or" (formula "11") (term "0,0,1,0"))
                           (rule "commute_or" (formula "23") (term "0,0,1,1,0"))
                           (rule "commute_or_2" (formula "23") (term "0,1,1,0"))
                           (rule "div_axiom" (formula "13") (term "1") (inst "quotient=quotient_1"))
                           (rule "mul_literals" (formula "13") (term "1,1,1,1,1"))
                           (rule "equal_literals" (formula "13") (term "0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "qeq_literals" (formula "13") (term "0,1"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "polySimp_addComm1" (formula "15") (term "1"))
                           (rule "add_literals" (formula "15") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "14"))
                           (rule "inEqSimp_homoInEq1" (formula "15"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0"))
                           (rule "applyEqRigid" (formula "11") (term "1,1,0,0,1,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "43") (term "1,1,0,0,1,1") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "43") (term "1,1,0,0,1,0,1") (ifseqformula "13"))
                           (rule "applyEq" (formula "43") (term "1,0,0,0,0,0,1") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "11") (term "1,1,0,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "43") (term "1,1,1,0,0,1,0,0,1") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "26") (term "1,1,0,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "27") (term "1,1,0,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "10") (term "1,1,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq1" (formula "24"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "applyEq" (formula "16") (term "1") (ifseqformula "13"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1"))
                           (rule "polySimp_rightDist" (formula "15") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                           (rule "mul_literals" (formula "15") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1"))
                           (rule "polySimp_rightDist" (formula "24") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                           (rule "mul_literals" (formula "24") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "21"))
                           (rule "polySimp_mulAssoc" (formula "14") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "14") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                           (rule "neg_literal" (formula "14") (term "0,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "14") (term "0,0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                           (rule "add_literals" (formula "14") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0"))
                           (rule "qeq_literals" (formula "14") (term "0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "16"))
                           (rule "mul_literals" (formula "9") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0"))
                           (rule "add_literals" (formula "9") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                           (rule "mul_literals" (formula "9") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "9") (term "0,0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0"))
                           (rule "leq_literals" (formula "9") (term "0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "17"))
                           (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                           (rule "mul_literals" (formula "22") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0"))
                           (rule "add_zero_left" (formula "22") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                           (rule "mul_literals" (formula "26") (term "0,0"))
                           (rule "add_zero_left" (formula "26") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                           (rule "mul_literals" (formula "26") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "9"))
                           (rule "leq_literals" (formula "26") (term "0"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "22"))
                           (rule "mul_literals" (formula "20") (term "0,0"))
                           (rule "add_zero_left" (formula "20") (term "0"))
                           (rule "inEqSimp_subsumption6" (formula "20") (ifseqformula "9"))
                           (rule "greater_literals" (formula "20") (term "0,0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "mul_literals" (formula "20") (term "1,0"))
                           (rule "leq_literals" (formula "20") (term "0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "commute_or" (formula "30") (term "0,1,0,1,1,0"))
                           (rule "div_axiom" (formula "46") (term "0,1,1,0") (inst "quotient=quotient_2"))
                           (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                           (rule "qeq_literals" (formula "1") (term "0,1,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "equal_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                           (rule "add_literals" (formula "3") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                           (rule "add_literals" (formula "3") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "applyEq" (formula "49") (term "0,1,1,0") (ifseqformula "1"))
                           (rule "polySimp_addComm1" (formula "49") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "49") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "all_pull_out3" (formula "49") (term "1,0,1,0,1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0,0") (ifseqformula "44"))
                           (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "46"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "45"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "46"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "all_pull_out3" (formula "34") (term "1,0"))
                           (rule "shift_paren_or" (formula "34") (term "0,1,0"))
                           (rule "cnf_rightDist" (formula "35") (term "0,1,1,0"))
                           (rule "all_pull_out3" (formula "17") (term "0"))
                           (rule "shift_paren_or" (formula "17") (term "0,0"))
                           (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                           (rule "commute_or_2" (formula "17") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "34") (term "0,0,1,0"))
                           (rule "commute_or_2" (formula "35") (term "1,0,1,1,0"))
                           (rule "commute_or" (formula "17") (term "0,0,0,0,0"))
                           (rule "commute_or_2" (formula "34") (term "0,0,0,1,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,1,1,0"))
                           (rule "commute_or" (formula "35") (term "0,1,0,1,1,0"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "0") (ifseqformula "47"))
                           (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "34"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "all_pull_out3" (formula "34") (term "0"))
                           (rule "shift_paren_or" (formula "34") (term "0,0"))
                           (rule "shift_paren_or" (formula "34") (term "0,0,0"))
                           (rule "shift_paren_or" (formula "34") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "34") (term "0,0,0,0,0"))
                           (rule "commute_or" (formula "34") (term "0,0,0,0,0,0"))
                           (rule "all_pull_out3" (formula "35") (term "1,0"))
                           (rule "cnf_rightDist" (formula "35") (term "0,1,0"))
                           (rule "commute_or_2" (formula "35") (term "1,0,1,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,1,0"))
                           (rule "commute_or_2" (formula "35") (term "0,1,0,1,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,0,1,0"))
                           (rule "commute_or_2" (formula "35") (term "0,0,0,0,1,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,1,0,1,0"))
                           (rule "commute_or" (formula "35") (term "0,0,0,1,0,1,0"))
                           (rule "all_pull_out3" (formula "35") (term "0"))
                           (rule "cnf_rightDist" (formula "35") (term "0,0"))
                           (rule "distr_forallAnd" (formula "35") (term "0"))
                           (rule "distr_forallAnd" (formula "35"))
                           (rule "andLeft" (formula "35"))
                           (rule "commute_or_2" (formula "36") (term "0,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0"))
                           (rule "commute_or_2" (formula "36") (term "0,0,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,0"))
                           (rule "commute_or_2" (formula "36") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "35") (term "0,0,0,0,0"))
                           (rule "shift_paren_or" (formula "36") (term "0,0,0,0,0"))
                           (rule "commute_or" (formula "35") (term "0,0,0,0,0,0"))
                           (rule "allLeft" (formula "13") (inst "t=mul(i_1_0, Z(2(#)))"))
                           (rule "replaceKnownSelect_taclet10101000_16" (formula "13") (term "0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10101000_17" (formula "13") (term "0,0,0,0"))
                           (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "34"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                           (rule "inEqSimp_contradInEq5" (formula "13") (term "0") (ifseqformula "32"))
                           (rule "greater_literals" (formula "13") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0"))
                           (rule "qeq_literals" (formula "13") (term "0,0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "13"))
                           (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                           (rule "mul_literals" (formula "29") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                           (rule "polySimp_elimOne" (formula "29") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "13"))
                           (rule "mul_literals" (formula "16") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                           (rule "mul_literals" (formula "16") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=i_1_0") (inst "elimGcd=Z(2(#))"))
                           (rule "leq_literals" (formula "16") (term "0,0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                           (rule "add_literals" (formula "16") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0"))
                           (rule "leq_literals" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "16"))
                           (rule "leq_literals" (formula "34") (term "0"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "true_left" (formula "34"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "13"))
                           (rule "polySimp_mulAssoc" (formula "23") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1"))
                           (rule "inEqSimp_contradInEq3" (formula "23") (ifseqformula "35"))
                           (rule "greater_literals" (formula "23") (term "0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "andLeft" (formula "23"))
                           (rule "polySimp_rightDist" (formula "23") (term "0"))
                           (rule "mul_literals" (formula "23") (term "0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "23") (term "0"))
                           (rule "add_literals" (formula "23") (term "1,1,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0"))
                           (rule "add_literals" (formula "23") (term "0"))
                           (rule "leq_literals" (formula "23"))
                           (rule "closeFalse" (formula "23"))
                        )
                        (branch "CUT: self.<created> = TRUE FALSE"
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "nnf_imp2or" (formula "11") (term "1,0"))
                           (rule "nnf_imp2or" (formula "12") (term "1,0,1,0"))
                           (rule "nnf_imp2or" (formula "22") (term "1,0"))
                           (rule "nnf_imp2or" (formula "8") (term "0"))
                           (rule "nnf_imp2or" (formula "23") (term "0"))
                           (rule "nnf_imp2or" (formula "40") (term "0,1,1"))
                           (rule "nnf_imp2or" (formula "40") (term "0,1,0,1"))
                           (rule "nnf_imp2or" (formula "11") (term "0"))
                           (rule "nnf_imp2or" (formula "12") (term "0"))
                           (rule "nnf_imp2or" (formula "22") (term "0"))
                           (rule "nnf_notAnd" (formula "8") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                           (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                           (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "23") (term "1,0"))
                           (rule "nnf_notAnd" (formula "23") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "11") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "12") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                           (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                           (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "22") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                           (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                           (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                           (rule "nnf_imp2or" (formula "12") (term "0,1,0"))
                           (rule "nnf_notAnd" (formula "22") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "inEqSimp_notLeq" (formula "22") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,1,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "22") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,0"))
                           (rule "nnf_notAnd" (formula "40") (term "0,0,1,1"))
                           (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,1,1"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,1,1"))
                           (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,1,1"))
                           (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,1"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,1,1"))
                           (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,1,1"))
                           (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0,1,1"))
                           (rule "add_literals" (formula "40") (term "0,0,0,0,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,1,1"))
                           (rule "mul_literals" (formula "40") (term "1,0,0,0,1,1"))
                           (rule "nnf_imp2or" (formula "40") (term "1,0,1,1"))
                           (rule "nnf_notAnd" (formula "23") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_notGeq" (formula "23") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "23") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,0"))
                           (rule "nnf_imp2or" (formula "40") (term "1,0,1,0,1"))
                           (rule "nnf_notAnd" (formula "40") (term "0,0,1,0,1"))
                           (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,1,0,1"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,1,0,1"))
                           (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,1,0,1"))
                           (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,1,0,1"))
                           (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,1,0,1"))
                           (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0,1,0,1"))
                           (rule "add_literals" (formula "40") (term "0,0,0,0,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,1,0,1"))
                           (rule "mul_literals" (formula "40") (term "1,0,0,0,1,0,1"))
                           (rule "nnf_notAnd" (formula "12") (term "0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,0"))
                           (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,0"))
                           (rule "nnf_imp2or" (formula "22") (term "0,1,1,0"))
                           (rule "nnf_notAnd" (formula "12") (term "0,1,0,1,0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "nnf_imp2or" (formula "23") (term "0,1,1,0"))
                           (rule "nnf_notAnd" (formula "40") (term "0,1,0,1,1"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "inEqSimp_notGeq" (formula "40") (term "1,0,1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,1,0,1,1"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,0,1,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,1,0,1,1"))
                           (rule "add_literals" (formula "40") (term "0,0,0,1,0,1,0,1,1"))
                           (rule "add_zero_left" (formula "40") (term "0,0,1,0,1,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0,1,1"))
                           (rule "nnf_notAnd" (formula "22") (term "0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,1,0"))
                           (rule "nnf_notOr" (formula "23") (term "0,0,1,1,0"))
                           (rule "jdiv_axiom" (formula "14") (term "1,0"))
                           (rule "eqSymm" (formula "14"))
                           (rule "inEqSimp_subsumption1" (formula "14") (term "0,0") (ifseqformula "9"))
                           (rule "leq_literals" (formula "14") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "eqSymm" (formula "14"))
                           (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "23") (term "1,1,0,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "12") (term "1,1,0,0,1,0") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "24") (term "1,1,0,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "41") (term "1,0,0,0,0,0,1") (ifseqformula "14"))
                           (rule "applyEq" (formula "41") (term "1,1,0,0,1,1") (ifseqformula "14"))
                           (rule "applyEq" (formula "41") (term "1,1,0,0,1,0,1") (ifseqformula "14"))
                           (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "14"))
                           (rule "applyEq" (formula "41") (term "1,1,1,0,0,1,0,0,1") (ifseqformula "14"))
                           (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "9"))
                           (rule "leq_literals" (formula "19") (term "0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                           (rule "expand_inShort" (formula "19"))
                           (rule "replace_short_MIN" (formula "19") (term "0,1"))
                           (rule "replace_short_MAX" (formula "19") (term "1,0"))
                           (rule "andLeft" (formula "19"))
                           (rule "inEqSimp_commuteLeq" (formula "20"))
                           (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
                           (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "9"))
                           (rule "leq_literals" (formula "20") (term "0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "19"))
                           (rule "leq_literals" (formula "10") (term "0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
                           (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                           (rule "mul_literals" (formula "17") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "17"))
                           (rule "leq_literals" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "nnf_imp2or" (formula "41") (term "0,1,1,0,1,1"))
                           (rule "nnf_notAnd" (formula "41") (term "0,1,0,1,0,1"))
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "inEqSimp_notLeq" (formula "41") (term "1,0,1,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,0,1,0,1,0,1"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,1,0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,1,0,1,0,1"))
                           (rule "add_literals" (formula "41") (term "0,0,0,1,0,1,0,1,0,1"))
                           (rule "add_zero_left" (formula "41") (term "0,0,1,0,1,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,1,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,0,1,0,1"))
                           (rule "nnf_notAnd" (formula "24") (term "1,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "24") (term "0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "24") (term "1,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "24") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,1,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "24") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,1,0"))
                           (rule "nnf_notAnd" (formula "24") (term "0,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,1,1,0"))
                           (rule "commute_or_2" (formula "8") (term "0"))
                           (rule "nnf_imp2or" (formula "41") (term "0,1,1,0,1,0,1"))
                           (rule "nnf_notOr" (formula "41") (term "0,0,1,1,0,1,1"))
                           (rule "nnf_notAnd" (formula "41") (term "0,0,1,1,0,1,0,1"))
                           (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,1,1,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,1,0,1,0,1"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,1,1,0,1,0,1"))
                           (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,1,1,0,1,0,1"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,1,1,0,1,0,1"))
                           (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,1,1,0,1,0,1"))
                           (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,1,1,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,1,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,1,1,0,1,0,1"))
                           (rule "nnf_notAnd" (formula "41") (term "1,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_notGeq" (formula "41") (term "0,1,0,0,1,1,0,1,1"))
                           (rule "mul_literals" (formula "41") (term "1,0,0,0,1,0,0,1,1,0,1,1"))
                           (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,1,0,0,1,1,0,1,1"))
                           (rule "mul_literals" (formula "41") (term "1,0,1,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_notLeq" (formula "41") (term "1,1,0,0,1,1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,1,0,0,1,1,0,1,1"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,1,1,0,0,1,1,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,1,0,0,1,1,0,1,1"))
                           (rule "add_literals" (formula "41") (term "0,0,0,1,1,0,0,1,1,0,1,1"))
                           (rule "add_zero_left" (formula "41") (term "0,0,1,1,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,1,0,0,1,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,1,0,1,1"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,1,0,1,1"))
                           (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,1,0,1,1"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,1,0,1,1"))
                           (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,1,0,1,1"))
                           (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,1,1,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,1,1,0,1,1"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,1,1,0,1,1"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,1,1,0,1,1"))
                           (rule "commute_or_2" (formula "10") (term "0"))
                           (rule "commute_or_2" (formula "23") (term "0,1,1,0"))
                           (rule "commute_or" (formula "11") (term "0,0,1,0"))
                           (rule "commute_or" (formula "8") (term "0,0"))
                           (rule "commute_or" (formula "24") (term "0,1,1,0"))
                           (rule "commute_or" (formula "10") (term "0,0"))
                           (rule "shift_paren_or" (formula "11") (term "0,1,0"))
                           (rule "commute_or_2" (formula "11") (term "0,0,1,0"))
                           (rule "inEqSimp_or_weaken2" (formula "11") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "1,0,1,0,1,0"))
                           (rule "add_literals" (formula "11") (term "0,1,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "11") (term "1,0,1,0,1,0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "commute_or" (formula "11") (term "0,0,1,0"))
                           (rule "commute_or" (formula "23") (term "0,0,1,1,0"))
                           (rule "commute_or_2" (formula "23") (term "0,1,1,0"))
                           (rule "div_axiom" (formula "13") (term "1") (inst "quotient=quotient_1"))
                           (rule "mul_literals" (formula "13") (term "1,1,1,1,1"))
                           (rule "qeq_literals" (formula "13") (term "0,1,1"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "equal_literals" (formula "13") (term "0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "polySimp_addComm1" (formula "15") (term "1"))
                           (rule "add_literals" (formula "15") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "14"))
                           (rule "inEqSimp_homoInEq1" (formula "15"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0"))
                           (rule "applyEqRigid" (formula "11") (term "1,1,0,0,1,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "44") (term "1,0,0,0,0,0,1") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "44") (term "1,1,0,0,1,0,1") (ifseqformula "13"))
                           (rule "applyEq" (formula "24") (term "0") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq1" (formula "24"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "applyEqRigid" (formula "26") (term "1,1,0,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "44") (term "1,1,1,0,0,1,0,0,1") (ifseqformula "13"))
                           (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "44") (term "1,1,0,0,1,1") (ifseqformula "13"))
                           (rule "applyEq" (formula "27") (term "1,1,0,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "11") (term "1,1,0,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "16") (term "1") (ifseqformula "13"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1"))
                           (rule "polySimp_rightDist" (formula "15") (term "1"))
                           (rule "mul_literals" (formula "15") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1"))
                           (rule "polySimp_rightDist" (formula "24") (term "1"))
                           (rule "mul_literals" (formula "24") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "21"))
                           (rule "polySimp_mulAssoc" (formula "14") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "14") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                           (rule "leq_literals" (formula "14") (term "0,0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                           (rule "neg_literal" (formula "14") (term "0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                           (rule "add_literals" (formula "14") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0"))
                           (rule "qeq_literals" (formula "14") (term "0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "16"))
                           (rule "mul_literals" (formula "9") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0"))
                           (rule "add_literals" (formula "9") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                           (rule "mul_literals" (formula "9") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                           (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "9") (term "0,0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0"))
                           (rule "leq_literals" (formula "9") (term "0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "17"))
                           (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                           (rule "mul_literals" (formula "22") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0"))
                           (rule "add_zero_left" (formula "22") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                           (rule "times_zero_1" (formula "26") (term "0,0"))
                           (rule "add_zero_left" (formula "26") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                           (rule "mul_literals" (formula "26") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "9"))
                           (rule "leq_literals" (formula "26") (term "0"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "22"))
                           (rule "mul_literals" (formula "20") (term "0,0"))
                           (rule "add_zero_left" (formula "20") (term "0"))
                           (rule "inEqSimp_subsumption6" (formula "20") (ifseqformula "9"))
                           (rule "mul_literals" (formula "20") (term "1,1,0"))
                           (rule "greater_literals" (formula "20") (term "0,0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "leq_literals" (formula "20") (term "0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "commute_or" (formula "30") (term "0,1,0,1,1,0"))
                           (rule "div_axiom" (formula "47") (term "0,1,1,0") (inst "quotient=quotient_2"))
                           (rule "equal_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "qeq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1,1,1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                           (rule "add_literals" (formula "3") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                           (rule "add_literals" (formula "3") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "applyEq" (formula "50") (term "0,1,1,0") (ifseqformula "1"))
                           (rule "polySimp_addComm1" (formula "50") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "50") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "all_pull_out3" (formula "50") (term "1,0,1,0,1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0,0") (ifseqformula "44"))
                           (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "47"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "45"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "46"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "all_pull_out3" (formula "34") (term "1,0"))
                           (rule "shift_paren_or" (formula "34") (term "0,1,0"))
                           (rule "cnf_rightDist" (formula "35") (term "0,1,1,0"))
                           (rule "shift_paren_or" (formula "34") (term "0,0,1,0"))
                           (rule "commute_or_2" (formula "35") (term "1,0,1,1,0"))
                           (rule "commute_or_2" (formula "34") (term "0,0,0,1,0"))
                           (rule "all_pull_out3" (formula "17") (term "0"))
                           (rule "shift_paren_or" (formula "17") (term "0,0"))
                           (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                           (rule "commute_or_2" (formula "17") (term "0,0,0,0"))
                           (rule "commute_or" (formula "17") (term "0,0,0,0,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,1,1,0"))
                           (rule "commute_or" (formula "35") (term "0,1,0,1,1,0"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "0") (ifseqformula "47"))
                           (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "34"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "all_pull_out3" (formula "34") (term "0"))
                           (rule "shift_paren_or" (formula "34") (term "0,0"))
                           (rule "shift_paren_or" (formula "34") (term "0,0,0"))
                           (rule "shift_paren_or" (formula "34") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "34") (term "0,0,0,0,0"))
                           (rule "commute_or" (formula "34") (term "0,0,0,0,0,0"))
                           (rule "all_pull_out3" (formula "35") (term "1,0"))
                           (rule "cnf_rightDist" (formula "35") (term "0,1,0"))
                           (rule "commute_or_2" (formula "35") (term "1,0,1,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,1,0"))
                           (rule "commute_or_2" (formula "35") (term "0,1,0,1,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,0,1,0"))
                           (rule "commute_or_2" (formula "35") (term "0,0,0,0,1,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,1,0,1,0"))
                           (rule "commute_or" (formula "35") (term "0,0,0,1,0,1,0"))
                           (rule "all_pull_out3" (formula "35") (term "0"))
                           (rule "cnf_rightDist" (formula "35") (term "0,0"))
                           (rule "distr_forallAnd" (formula "35") (term "0"))
                           (rule "distr_forallAnd" (formula "35"))
                           (rule "andLeft" (formula "35"))
                           (rule "commute_or_2" (formula "36") (term "0,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0"))
                           (rule "commute_or_2" (formula "36") (term "0,0,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,0"))
                           (rule "commute_or_2" (formula "36") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "35") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "35") (term "0,0,0,0,0"))
                           (rule "shift_paren_or" (formula "36") (term "0,0,0,0,0"))
                           (rule "commute_or" (formula "35") (term "0,0,0,0,0,0"))
                           (rule "allLeft" (formula "13") (inst "t=mul(i_1_0, Z(2(#)))"))
                           (rule "replaceKnownSelect_taclet10101000_16" (formula "13") (term "0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10101000_17" (formula "13") (term "0,0,0,0"))
                           (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "34"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                           (rule "inEqSimp_contradInEq5" (formula "13") (term "0") (ifseqformula "32"))
                           (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                           (rule "greater_literals" (formula "13") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "qeq_literals" (formula "13") (term "0,0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "13"))
                           (rule "mul_literals" (formula "16") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                           (rule "mul_literals" (formula "16") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=i_1_0") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "16") (term "0,0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                           (rule "add_literals" (formula "16") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0"))
                           (rule "leq_literals" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "16"))
                           (rule "leq_literals" (formula "33") (term "0"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "13"))
                           (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                           (rule "mul_literals" (formula "30") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "30") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                           (rule "polySimp_elimOne" (formula "30") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "13"))
                           (rule "polySimp_mulAssoc" (formula "23") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1"))
                           (rule "inEqSimp_contradInEq3" (formula "23") (ifseqformula "35"))
                           (rule "greater_literals" (formula "23") (term "0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "andLeft" (formula "23"))
                           (rule "polySimp_rightDist" (formula "23") (term "0"))
                           (rule "mul_literals" (formula "23") (term "0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "23") (term "0"))
                           (rule "add_literals" (formula "23") (term "1,1,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0"))
                           (rule "add_literals" (formula "23") (term "0"))
                           (rule "leq_literals" (formula "23"))
                           (rule "closeFalse" (formula "23"))
                        )
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "replaceKnownSelect_taclet000_4" (formula "17") (term "1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet000_5" (formula "17") (term "1,0"))
                     (rule "polySimp_homoEq" (formula "17") (term "0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0"))
                     (rule "add_zero_left" (formula "17") (term "0,0,0"))
                     (rule "inEqSimp_leqRight" (formula "14"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "7"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0"))
                     (rule "mod_axiom" (formula "15") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1"))
                     (rule "div_literals" (formula "15") (term "0,1,1,1"))
                     (rule "times_zero_2" (formula "15") (term "1,1,1"))
                     (rule "add_literals" (formula "15") (term "1,1"))
                     (rule "add_literals" (formula "15") (term "1"))
                     (rule "mod_axiom" (formula "17") (term "1,3,0,1"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,3,0,1"))
                     (rule "polySimp_addAssoc" (formula "17") (term "3,0,1"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,3,0,1"))
                     (rule "add_literals" (formula "17") (term "0,0,3,0,1"))
                     (rule "mod_axiom" (formula "17") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                     (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0"))
                     (rule "mod_axiom" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0"))
                     (rule "mod_axiom" (formula "7") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0"))
                     (rule "mod_axiom" (formula "17") (term "0,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,1,0,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "17") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                     (rule "mul_literals" (formula "1") (term "0,0,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
                     (rule "leq_literals" (formula "3") (term "0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "polyDiv_pullOut" (formula "1") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,1"))
                     (rule "equal_literals" (formula "1") (term "0,0,1,1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,1"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,1,1"))
                     (rule "polySimp_addComm0" (formula "1") (term "1,1,1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                     (rule "mul_literals" (formula "1") (term "0,1,1"))
                     (rule "polySimp_addAssoc" (formula "1") (term "1"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                     (rule "add_literals" (formula "1") (term "0,0,1"))
                     (rule "polyDiv_pullOut" (formula "15") (term "0,0,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "equal_literals" (formula "15") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,1,1,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                     (rule "mul_literals" (formula "15") (term "0,0,0"))
                     (rule "polySimp_homoEq" (formula "15") (term "0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "15") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0,0"))
                     (rule "polyDiv_pullOut" (formula "15") (term "0,1,0,1,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0,1,0,1,0"))
                     (rule "equal_literals" (formula "15") (term "0,0,1,0,1,0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,0,1,1,0,1,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,1,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "1,1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,1,0"))
                     (rule "add_zero_left" (formula "15") (term "0,0,1,0"))
                     (rule "polyDiv_pullOut" (formula "15") (term "0,1,3,0,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0,1,3,0,1"))
                     (rule "equal_literals" (formula "15") (term "0,0,1,3,0,1"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,0,1,3,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,3,0,1"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,0,1,1,3,0,1"))
                     (rule "add_literals" (formula "15") (term "0,0,0,1,1,3,0,1"))
                     (rule "polySimp_addComm0" (formula "15") (term "1,1,3,0,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,3,0,1"))
                     (rule "mul_literals" (formula "15") (term "0,1,3,0,1"))
                     (rule "polySimp_addAssoc" (formula "15") (term "3,0,1"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,3,0,1"))
                     (rule "add_literals" (formula "15") (term "0,0,3,0,1"))
                     (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "15") (term "1") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "10"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0,1"))
                     (rule "expand_inInt" (formula "15") (term "0,1,1"))
                     (rule "expand_inInt" (formula "15") (term "1,1,1"))
                     (rule "replace_int_MAX" (formula "15") (term "1,0,0,1,1"))
                     (rule "replace_int_MIN" (formula "15") (term "0,1,0,1,1"))
                     (rule "replace_int_MIN" (formula "15") (term "0,1,1,1,1"))
                     (rule "replace_int_MAX" (formula "15") (term "1,0,1,1,1"))
                     (rule "eqSymm" (formula "15") (term "1,0,0,0,0,0,0,1"))
                     (rule "eqSymm" (formula "15") (term "1,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "eqSymm" (formula "15") (term "1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,2,0,0,1,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,2,1,0,0,0,0,0,1,1,0,1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,2,0,0,1,0,1,1,0,1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,2,1,0,0,0,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,2,1,1,1,0,1,0,1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,2,0,0,0,0,1,0,1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,2,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,1,0,1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,2,1,1,1,0,1,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,2,0,1,0,1,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,2,0,0,0,0,1,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,1,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,2,0,0,0,2,0,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,2,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,2,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_addComm0" (formula "15") (term "0,2,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,1,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,1,0,1,1,0,1,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,1,0,0,0,0,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,2,0,0,0,0,0,1,1,0,1,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,1,0,1,1,0,1,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,2,1,1,0,1,0,1,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,1,0,0,1,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,0,1,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,1,0,0,0,0,0,0,0,1"))
                     (rule "replaceKnownSelect_taclet_0" (formula "15") (term "0,1,0,0,0,0,0,0,0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "15") (term "0,1,0,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,1,1,1,0,1,0,1,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,0,0,1,0,1,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,2,0,0,0,0,0,1,1,0,1,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,1,0,0,1,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,0,0,1,0,1,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,1,1,1,0,1,0,1,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0,1,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,0,0,1,1,0,1,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,0,0,0,0,1,1,0,1,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,1,0,0,1,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,2,1,1,0,1,0,1,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,0,0,0,0,1,1,0,1,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,1,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,1,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,1,1,1,1"))
                     (rule "replaceKnownSelect_taclet_0" (formula "15") (term "1,1,1,1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "15") (term "1,1,1,1,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,1,1"))
                     (rule "replaceKnownSelect_taclet_0" (formula "15") (term "0,0,1,1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "15") (term "0,0,1,1,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,1,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,0,2,0,1,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,1,0,1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,1,0,1,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,1,1,0,1,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,1,1,0,1,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,1,0,0,0,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_mulAssoc" (formula "15") (term "1,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,1,1,0,1,0,1,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,1,0,1,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,1,0,1,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,1,1,0,1,0,1,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,1,0,1,0,0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,0,0,0,1,1,0,1,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,0,0,0,1,1,0,1,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0,0,0,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0,0,0,0,0,0,1"))
                     (rule "add_literals" (formula "15") (term "0,0,1,0,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,0,0,0,1"))
                     (rule "ifthenelse_negated" (formula "15") (term "2,0,1,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0,1,1,0,1,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "0,1,0,0,1,1,0,1,0,0,1"))
                     (rule "inEqSimp_commuteGeq" (formula "15") (term "1,1,0,0,0,0,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,1,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,0,1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,1,0,1,0,1,0,0,1"))
                     (rule "inEqSimp_gtToGeq" (formula "15") (term "1,0,1,0,1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,0,1,0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,1,0,1,0,1,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,2,0,1,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,1,1"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "1,1,1,1"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,0,1,1,0,1,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,1,0,1,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,1,0,1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,1,0,1,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,1,0,1,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,1,0,1,0,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,1,0,1,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,1,0,1,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0,0,0,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "1,1,0,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,1,1,0,1,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,1,1,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "1,0,1,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1,0,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "15") (term "0,1,0,1,0,1,0,0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0,1,0,1,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1,0,1,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "15") (term "0,1,0,1,0,1,0,0,0,1"))
                     (rule "nonNull" (formula "15") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1") (inst "i=i"))
                     (rule "greater_literals" (formula "15") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "sub_literals" (formula "15") (term "2,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                     (rule "elimGcdLeq" (formula "15") (term "1,1,0,0,1,1,0,1,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "sub_literals" (formula "15") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "add_literals" (formula "15") (term "1,1,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "times_zero_1" (formula "15") (term "1,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "add_zero_right" (formula "15") (term "0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "0,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "0,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "add_literals" (formula "15") (term "0,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "add_literals" (formula "15") (term "1,1,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "times_zero_1" (formula "15") (term "1,0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "add_zero_right" (formula "15") (term "0,1,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "qeq_literals" (formula "15") (term "1,0,1,1,0,0,1,1,0,1,0,0,1"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "add_literals" (formula "15") (term "0,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "add_literals" (formula "15") (term "0,0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "add_zero_left" (formula "15") (term "0,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "add_literals" (formula "15") (term "1,0,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "times_zero_1" (formula "15") (term "0,0,1,1,0,0,1,1,0,1,0,0,1"))
                     (rule "leq_literals" (formula "15") (term "0,1,1,0,0,1,1,0,1,0,0,1"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "elimGcdGeq" (formula "15") (term "0,1,0,0,1,1,0,1,0,0,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,1,0,0,1,1,0,1,0,0,1"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,0,1,0,0,1,1,0,1,0,0,1"))
                     (rule "sub_literals" (formula "15") (term "0,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,1,0,0,1,0,0,1,1,0,1,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "0,0,0,1,0,0,1,0,0,1,1,0,1,0,0,1"))
                     (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                     (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,1,0,0,1,1,0,1,0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                     (rule "qeq_literals" (formula "15") (term "0,0,0,1,0,0,1,1,0,1,0,0,1"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,0,1,0,0,1,1,0,1,0,0,1"))
                     (rule "add_literals" (formula "15") (term "1,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                     (rule "times_zero_1" (formula "15") (term "0,0,0,1,0,0,1,1,0,1,0,0,1"))
                     (rule "leq_literals" (formula "15") (term "0,0,1,0,0,1,1,0,1,0,0,1"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "pullOutSelect" (formula "15") (term "0,0,0,1,1") (inst "selectSK=java_util_VerifiedIdentityHashMap_modCount_0"))
                     (rule "applyEq" (formula "16") (term "0,1,0,1,1") (ifseqformula "1"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,0,0,1,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,1,0,1,1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "15") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1") (inst "selectSK=java_util_VerifiedIdentityHashMap_table_0"))
                     (rule "applyEq" (formula "16") (term "1,1,0,1,0,0,0,1,1,0,1,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "1,1,0,1,0,1,0,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,1,1,1,0,0,1,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "1,0,0,2,0,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "1,0,0,1,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "1,1,0,1,0,1,0,1,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,0,1,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,2,0,1,0,0,0,1,1,0,1,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "1,0,0,0,0,1,0,1,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,1,1,1,0,0,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,0,1,0,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,0,1,1,1,0,0,1,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,2,0,1,0,1,0,1,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,1,1,0,1,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,0,1,1,1,0,0,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "1,1,1,0,0,0,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,2,0,1,0,1,0,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,2,1,0,0,0,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,0,1,1,1,0,0,1,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "1,0,0,1,0,1,1,0,1,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "1,0,1,0,1,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "1,1,0,1,0,0,0,1,1,0,1,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "1,1,0,1,0,1,0,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,1,1,1,0,0,1,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "1,0,0,2,0,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "1,0,0,1,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "1,1,0,1,0,1,0,1,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,0,1,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,2,0,1,0,0,0,1,1,0,1,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "1,0,0,0,0,1,0,1,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,1,1,1,0,0,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,0,1,0,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,0,1,1,1,0,0,1,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,2,0,1,0,1,0,1,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,1,1,0,1,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,0,1,1,1,0,0,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "1,1,1,0,0,0,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,2,0,1,0,1,0,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,2,1,0,0,0,0,1,1,0,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,0,1,1,1,0,0,1,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "1,0,0,1,0,1,1,0,1,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "1,0,1,0,1,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "15") (term "1,1,0,0,0,0,0,0,1") (inst "selectSK=java_util_VerifiedIdentityHashMap_size_2"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "16") (term "1,1,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "15") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,1") (inst "selectSK=java_util_VerifiedIdentityHashMap_entrySet_0"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "15") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1") (inst "selectSK=java_util_VerifiedIdentityHashMap_NULL_KEY_0"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "16") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "5") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "10"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "replaceKnownSelect_taclet1101000_6" (formula "5") (term "0,0,1"))
                     (rule "replaceKnownSelect_taclet_0" (formula "5") (term "0,1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_7" (formula "5") (term "0,0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "5") (term "0,1,1"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "0,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "0,0,1,0"))
                     (rule "replaceKnownSelect_taclet_2" (formula "5") (term "0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet_3" (formula "5") (term "0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "0,0,1,1,0,0,1,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "1,0,1,0,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet_0" (formula "5") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "0,0,1,1,0,0,1,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "0,1,1,0,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "1,0,0,0,0,1,0,1,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "1,1,1,1,0,1,0,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "1,0,1,0,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "0,2,1,1,0,1,0,1,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "0,0,1,1,0,0,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "5") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "0,1,1,0,0,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "0,0,1,1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "1,0,0,1,0,1,1,0,1,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "1,0,0,0,0,1,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "0,0,1,1,0,0,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "1,1,1,1,0,1,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "0,2,1,1,0,1,0,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "0,1,1,0,1,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "1,0,0,0,0,1,0,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "1,1,1,1,0,1,0,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "0,2,1,1,0,1,0,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "0,0,1,1,0,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "0,1,1,0,0,0,1,1,0,1,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "1,0,0,1,0,1,1,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "1,1,0,0,0,0,0,1,1,0,1,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "1,0,0,0,2,1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "0,1,1,0,0,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "0,2,0,0,0,0,0,1,1,0,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "0,0,1,1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "1,0,0,1,0,1,1,0,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "1,0,0,0,0,1,0,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "0,0,1,1,0,0,1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "1,1,1,1,0,1,0,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "0,2,1,1,0,1,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "0,1,1,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_12" (formula "5") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "1,1,0,0,0,0,0,1,1,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "0,2,0,0,0,0,0,1,1,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "0,1,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_14" (formula "5") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "0,1,1,0,0,0,1,1,0,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "1,0,0,1,0,1,1,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "1,1,0,0,0,0,0,1,1,0,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "1,0,0,0,2,1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "0,2,0,0,0,0,0,1,1,0,1,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "0,0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1101000_8" (formula "5") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "0,1,1,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_13" (formula "5") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "1,1,0,0,0,0,0,1,1,0,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "0,2,0,0,0,0,0,1,1,0,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "0,1,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_15" (formula "5") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "0,0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_9" (formula "5") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "expand_inInt" (formula "5") (term "0,1"))
                     (rule "expand_inInt" (formula "5") (term "1,1"))
                     (rule "replace_int_MAX" (formula "5") (term "1,0,0,1"))
                     (rule "replace_int_MIN" (formula "5") (term "0,1,0,1"))
                     (rule "replace_int_MIN" (formula "5") (term "0,1,1,1"))
                     (rule "replace_int_MAX" (formula "5") (term "1,0,1,1"))
                     (rule "andLeft" (formula "5"))
                     (rule "andLeft" (formula "5"))
                     (rule "andLeft" (formula "7"))
                     (rule "andLeft" (formula "5"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "5"))
                     (rule "andLeft" (formula "5"))
                     (rule "andLeft" (formula "5"))
                     (rule "andLeft" (formula "5"))
                     (rule "andLeft" (formula "5"))
                     (rule "andLeft" (formula "5"))
                     (rule "andLeft" (formula "5"))
                     (rule "andLeft" (formula "5"))
                     (rule "andLeft" (formula "6"))
                     (rule "andLeft" (formula "5"))
                     (rule "andLeft" (formula "7"))
                     (rule "notLeft" (formula "6"))
                     (rule "andLeft" (formula "5"))
                     (rule "notLeft" (formula "7"))
                     (rule "notLeft" (formula "6"))
                     (rule "exLeft" (formula "13") (inst "sk=i_1_0"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "exLeft" (formula "12") (inst "sk=i_2_0"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "eqSymm" (formula "11"))
                     (rule "eqSymm" (formula "9") (term "1,0,1,0,1,0"))
                     (rule "eqSymm" (formula "9") (term "1,1,0,1,0"))
                     (rule "eqSymm" (formula "14"))
                     (rule "replace_known_right" (formula "37") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "32"))
                      (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "33")) (ifInst ""  (formula "20")) (ifInst ""  (formula "21")) (ifInst ""  (formula "23")))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,2,0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,2,1,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,2,0,0,1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,2,1,1,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "0,2,1,1,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "0,2,0,0,1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "0,2,0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "0,2,1,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,2,0,0,0,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "0,2,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,2,0,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,2,1,1,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,2,0,1,0,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "8") (term "0,2,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "16"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "13"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0"))
                     (rule "ifthenelse_negated" (formula "11") (term "2,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "19") (term "1,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "18") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "18") (term "0,1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "22"))
                     (rule "replace_known_left" (formula "37") (term "0,1,1") (ifseqformula "22"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "inEqSimp_commuteLeq" (formula "24"))
                     (rule "replace_known_left" (formula "37") (term "1,1") (ifseqformula "24"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "7"))
                     (rule "replace_known_left" (formula "37") (term "1,1,0,0,0,0,0,0,0,0,1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "inEqSimp_commuteLeq" (formula "6"))
                     (rule "replace_known_left" (formula "37") (term "1,0,0,0,0,0,0,0,0,1") (ifseqformula "6"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "inEqSimp_commuteLeq" (formula "15"))
                     (rule "inEqSimp_commuteLeq" (formula "12"))
                     (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "19") (term "0,1,0,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,1,0"))
                     (rule "applyEq" (formula "18") (term "2,0,1,0,0,0,1,1,0") (ifseqformula "14"))
                     (rule "applyEq" (formula "37") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "14"))
                     (rule "applyEq" (formula "19") (term "2,0,1,0,1,0,1,0") (ifseqformula "14"))
                     (rule "applyEq" (formula "37") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,1") (ifseqformula "14"))
                     (rule "applyEq" (formula "37") (term "2,0,1,0,1,0,1,0,1") (ifseqformula "14"))
                     (rule "applyEq" (formula "37") (term "1,1,1,0,0,1,0,0,0,1") (ifseqformula "14"))
                     (rule "applyEq" (formula "37") (term "0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,1") (ifseqformula "14"))
                     (rule "applyEq" (formula "37") (term "2,0,1,0,0,0,1,1,0,1,0,1") (ifseqformula "14"))
                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "14"))
                     (rule "applyEq" (formula "37") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "14"))
                     (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "14"))
                     (rule "applyEq" (formula "37") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,1") (ifseqformula "14"))
                     (rule "applyEq" (formula "37") (term "2,1,0,0,0,0,1,1,0,1,1") (ifseqformula "14"))
                     (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "14"))
                     (rule "applyEq" (formula "18") (term "2,0,1,0,1,0,1,0") (ifseqformula "14"))
                     (rule "applyEq" (formula "37") (term "1,1,1,0,0,0,1,1,0,1,1") (ifseqformula "14"))
                     (rule "applyEq" (formula "37") (term "0,1,1,1,0,0,1,0,0,1") (ifseqformula "14"))
                     (rule "applyEq" (formula "37") (term "0,1,1,1,0,0,1,1") (ifseqformula "14"))
                     (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "14"))
                     (rule "applyEq" (formula "19") (term "2,1,0,0,0,0,1,1,0") (ifseqformula "14"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "14"))
                     (rule "applyEq" (formula "37") (term "0,1,0,1,0,0,0,0,1") (ifseqformula "14"))
                     (rule "applyEq" (formula "37") (term "2,0,1,0,1,0,1,1") (ifseqformula "14"))
                     (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "14"))
                     (rule "applyEq" (formula "8") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                     (rule "applyEq" (formula "9") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                     (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                     (rule "applyEq" (formula "9") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "14"))
                     (rule "applyEq" (formula "37") (term "1,1,0,1,0,0,0,1") (ifseqformula "14"))
                     (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1"))
                     (rule "replace_known_left" (formula "37") (term "1,0,0,0,0,0,1") (ifseqformula "10"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "0,1,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                     (rule "polySimp_elimOne" (formula "16") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "0,1,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                     (rule "polySimp_elimOne" (formula "13") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                     (rule "replace_known_left" (formula "37") (term "1,0,0,0,0,0,0,1") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0"))
                     (rule "replace_known_left" (formula "37") (term "1,0,0,0,0,0,1") (ifseqformula "9"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                     (rule "inEqSimp_strengthen0" (formula "10") (ifseqformula "35"))
                     (rule "add_literals" (formula "10") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "35") (ifseqformula "10"))
                     (rule "mul_literals" (formula "35") (term "1,0,0"))
                     (rule "add_literals" (formula "35") (term "0,0"))
                     (rule "qeq_literals" (formula "35") (term "0"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "false_right" (formula "35"))
                     (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "10"))
                     (rule "leq_literals" (formula "23") (term "0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "nonNull" (formula "5") (inst "i=i"))
                     (rule "sub_literals" (formula "5") (term "2,1,0,1,1"))
                      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "32")))
                     (rule "greater_literals" (formula "5") (term "0"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
                     (rule "applyEq" (formula "5") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0"))
                     (rule "replace_known_left" (formula "35") (term "0,0,0,0,0,1") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "elimGcdLeq" (formula "19") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "19") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                     (rule "sub_literals" (formula "19") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,1,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "19") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,1,0,1,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "19") (term "0,1,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "19") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,0,1,0,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "19") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,1,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "19") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,1,0,1,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "19") (term "0,1,0,1,1,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "19") (term "1,0,1,1,0,0,1,1,0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "19") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "19") (term "1,0,0,1,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "19") (term "0,0,1,1,0,0,1,1,0"))
                     (rule "leq_literals" (formula "19") (term "0,1,1,0,0,1,1,0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "elimGcdGeq" (formula "19") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "sub_literals" (formula "19") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "19") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "19") (term "0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "19") (term "1,0,1,0,0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "19") (term "0,1,0,0,1,0,0,1,1,0"))
                     (rule "leq_literals" (formula "19") (term "1,0,0,1,0,0,1,1,0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0,0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "19") (term "0,0,1,0,0,1,1,0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=arr_0"))
                     (rule "simplifySelectOfAnon" (formula "17"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "17"))
                     (rule "hideAuxiliaryEq" (formula "17"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "10"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "8"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                     (rule "mul_literals" (formula "14") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0"))
                     (rule "add_literals" (formula "14") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                     (rule "polySimp_elimOne" (formula "14") (term "0"))
                     (rule "div_axiom" (formula "2") (term "0,1,1") (inst "quotient=quotient_0"))
                     (rule "mul_literals" (formula "2") (term "1,1,1,1,1"))
                     (rule "qeq_literals" (formula "2") (term "0,1,1"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "equal_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "2"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                     (rule "add_literals" (formula "4") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "4") (term "1"))
                     (rule "add_literals" (formula "4") (term "0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "2"))
                     (rule "polySimp_addComm1" (formula "5") (term "1"))
                     (rule "applyEq" (formula "40") (term "0,1,3,0,1,0,0,0,0,1,1,0,1,1") (ifseqformula "2"))
                     (rule "polySimp_addComm1" (formula "40") (term "3,0,1,0,0,0,0,1,1,0,1,1"))
                     (rule "applyEq" (formula "40") (term "0,0,0") (ifseqformula "2"))
                     (rule "polySimp_homoEq" (formula "40") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "40") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "40") (term "0,0,0"))
                     (rule "polySimp_addComm0" (formula "40") (term "0,0,0,0"))
                     (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "applyEq" (formula "40") (term "0,1,3,0,0,1,0,1,0,1,1") (ifseqformula "2"))
                     (rule "polySimp_addComm1" (formula "40") (term "3,0,0,1,0,1,0,1,1"))
                     (rule "applyEq" (formula "40") (term "0,1,3,0,0,1,0,1,0,1,0,1") (ifseqformula "2"))
                     (rule "polySimp_addComm1" (formula "40") (term "3,0,0,1,0,1,0,1,0,1"))
                     (rule "applyEq" (formula "40") (term "0,1,3,0,0,1,0,0,0,1,1,0,1,0,1") (ifseqformula "2"))
                     (rule "polySimp_addComm1" (formula "40") (term "3,0,0,1,0,0,0,1,1,0,1,0,1"))
                     (rule "applyEq" (formula "40") (term "0,1,1,0,0,0,0,1") (ifseqformula "2"))
                     (rule "polySimp_addComm1" (formula "40") (term "1,0,0,0,0,1"))
                     (rule "polySimp_sepPosMonomial" (formula "40") (term "0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "40") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "40") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "mul_literals" (formula "3") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "mul_literals" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "qeq_literals" (formula "4") (term "0"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "13"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "cut_direct" (formula "31") (term "0"))
                     (branch "CUT: self.<created> = TRUE TRUE"
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "true_left" (formula "32"))
                        (rule "nnf_imp2or" (formula "11") (term "1,0"))
                        (rule "nnf_imp2or" (formula "12") (term "1,0,1,0"))
                        (rule "nnf_imp2or" (formula "22") (term "1,0"))
                        (rule "nnf_imp2or" (formula "8") (term "0"))
                        (rule "nnf_imp2or" (formula "23") (term "0"))
                        (rule "nnf_imp2or" (formula "39") (term "0,1,1"))
                        (rule "nnf_imp2or" (formula "39") (term "0,1,0,1"))
                        (rule "nnf_imp2or" (formula "11") (term "0"))
                        (rule "nnf_imp2or" (formula "12") (term "0"))
                        (rule "nnf_imp2or" (formula "22") (term "0"))
                        (rule "nnf_notAnd" (formula "8") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                        (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                        (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "23") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                        (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                        (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                        (rule "nnf_imp2or" (formula "23") (term "1,0"))
                        (rule "nnf_notAnd" (formula "11") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "12") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                        (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                        (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "22") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                        (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                        (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                        (rule "nnf_imp2or" (formula "12") (term "0,1,0"))
                        (rule "nnf_notAnd" (formula "22") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_notLeq" (formula "22") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,1,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,1,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,1,0,1,0"))
                        (rule "add_zero_left" (formula "22") (term "0,0,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,0"))
                        (rule "nnf_notAnd" (formula "39") (term "0,0,1,1"))
                        (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,1"))
                        (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,1"))
                        (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,1"))
                        (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,1"))
                        (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,1"))
                        (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1,1"))
                        (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0,1,1"))
                        (rule "add_literals" (formula "39") (term "0,0,0,0,0,1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1,1"))
                        (rule "mul_literals" (formula "39") (term "1,0,0,0,1,1"))
                        (rule "nnf_imp2or" (formula "39") (term "1,0,1,1"))
                        (rule "nnf_notAnd" (formula "39") (term "0,0,1,0,1"))
                        (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1,0,1"))
                        (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,1,0,1"))
                        (rule "add_literals" (formula "39") (term "0,0,0,0,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1,0,1"))
                        (rule "mul_literals" (formula "39") (term "1,0,0,0,1,0,1"))
                        (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,0,1"))
                        (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,0,1"))
                        (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,0,1"))
                        (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,0,1"))
                        (rule "nnf_imp2or" (formula "39") (term "1,0,1,0,1"))
                        (rule "nnf_notAnd" (formula "23") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "inEqSimp_notGeq" (formula "23") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,0"))
                        (rule "add_zero_left" (formula "23") (term "0,0,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,0"))
                        (rule "nnf_notAnd" (formula "12") (term "0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,1,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,0"))
                        (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1,0"))
                        (rule "nnf_imp2or" (formula "22") (term "0,1,1,0"))
                        (rule "nnf_notAnd" (formula "12") (term "0,1,0,1,0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "nnf_notAnd" (formula "39") (term "0,1,0,1,1"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "inEqSimp_notGeq" (formula "39") (term "1,0,1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,1,0,1,1"))
                        (rule "add_literals" (formula "39") (term "0,0,0,1,0,1,0,1,1"))
                        (rule "add_zero_left" (formula "39") (term "0,0,1,0,1,0,1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,1,0,1,1"))
                        (rule "nnf_imp2or" (formula "23") (term "0,1,1,0"))
                        (rule "jdiv_axiom" (formula "14") (term "1,0"))
                        (rule "eqSymm" (formula "14"))
                        (rule "inEqSimp_subsumption1" (formula "14") (term "0,0") (ifseqformula "9"))
                        (rule "leq_literals" (formula "14") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "eqSymm" (formula "14"))
                        (rule "applyEqRigid" (formula "40") (term "1,1,0,0,1,0,1") (ifseqformula "14"))
                        (rule "applyEqRigid" (formula "40") (term "1,1,1,0,0,1,0,0,1") (ifseqformula "14"))
                        (rule "applyEq" (formula "40") (term "1,1,0,0,1,1") (ifseqformula "14"))
                        (rule "applyEqRigid" (formula "12") (term "1,1,0,0") (ifseqformula "14"))
                        (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "14"))
                        (rule "applyEqRigid" (formula "12") (term "1,1,0,0,1,0") (ifseqformula "14"))
                        (rule "applyEqRigid" (formula "23") (term "1,1,0,0") (ifseqformula "14"))
                        (rule "applyEqRigid" (formula "24") (term "1,1,0,0") (ifseqformula "14"))
                        (rule "applyEqRigid" (formula "15") (term "1,0") (ifseqformula "14"))
                        (rule "applyEqRigid" (formula "11") (term "1,1,0,0") (ifseqformula "14"))
                        (rule "applyEqRigid" (formula "40") (term "1,0,0,0,0,0,1") (ifseqformula "14"))
                        (rule "nnf_notAnd" (formula "23") (term "0,0,1,1,0"))
                        (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                        (rule "expand_inShort" (formula "19"))
                        (rule "replace_short_MIN" (formula "19") (term "0,1"))
                        (rule "replace_short_MAX" (formula "19") (term "1,0"))
                        (rule "andLeft" (formula "19"))
                        (rule "inEqSimp_commuteLeq" (formula "20"))
                        (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
                        (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "19"))
                        (rule "leq_literals" (formula "10") (term "0"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "9"))
                        (rule "leq_literals" (formula "19") (term "0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                        (rule "mul_literals" (formula "17") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0"))
                        (rule "add_literals" (formula "17") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                        (rule "polySimp_elimOne" (formula "17") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "17"))
                        (rule "leq_literals" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                        (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "9"))
                        (rule "leq_literals" (formula "19") (term "0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "nnf_imp2or" (formula "40") (term "0,1,1,0,1,1"))
                        (rule "nnf_notOr" (formula "24") (term "0,0,1,1,0"))
                        (rule "nnf_notAnd" (formula "40") (term "0,1,0,1,0,1"))
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "inEqSimp_notLeq" (formula "40") (term "1,0,1,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,1,0,1,0,1"))
                        (rule "add_literals" (formula "40") (term "0,0,0,1,0,1,0,1,0,1"))
                        (rule "add_zero_left" (formula "40") (term "0,0,1,0,1,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,1,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0,1,0,1"))
                        (rule "commute_or_2" (formula "8") (term "0"))
                        (rule "nnf_notAnd" (formula "24") (term "0,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,1,0"))
                        (rule "nnf_notAnd" (formula "24") (term "1,0,0,1,1,0"))
                        (rule "inEqSimp_notLeq" (formula "24") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,1,1,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "24") (term "0,0,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "24") (term "0,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "24") (term "1,0,1,0,0,1,1,0"))
                        (rule "nnf_imp2or" (formula "40") (term "0,1,1,0,1,0,1"))
                        (rule "nnf_notOr" (formula "40") (term "0,0,1,1,0,1,1"))
                        (rule "nnf_notAnd" (formula "40") (term "0,0,1,1,0,1,0,1"))
                        (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,1,1,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1,1,0,1,0,1"))
                        (rule "mul_literals" (formula "40") (term "0,1,0,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,1,1,0,1,0,1"))
                        (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,1,1,0,1,0,1"))
                        (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,1,1,0,1,0,1"))
                        (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,1,1,0,1,0,1"))
                        (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,1,1,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,1,1,0,1,0,1"))
                        (rule "nnf_notAnd" (formula "40") (term "0,0,0,1,1,0,1,1"))
                        (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,0,1,1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,0,1,1,0,1,1"))
                        (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,0,1,1,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,0,1,1,0,1,1"))
                        (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,0,1,1,0,1,1"))
                        (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,0,1,1,0,1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,0,1,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,1,1,0,1,1"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,1,1,0,1,1"))
                        (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,0,1,1,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,1,1,0,1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,1,1,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,1,1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,1,1,0,1,1"))
                        (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,1,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,1,1,0,1,1"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,1,1,0,1,1"))
                        (rule "nnf_notAnd" (formula "40") (term "1,0,0,1,1,0,1,1"))
                        (rule "inEqSimp_notLeq" (formula "40") (term "1,1,0,0,1,1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,1,0,0,1,1,0,1,1"))
                        (rule "mul_literals" (formula "40") (term "0,1,0,0,1,1,0,0,1,1,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,1,0,0,1,1,0,1,1"))
                        (rule "add_literals" (formula "40") (term "0,0,0,1,1,0,0,1,1,0,1,1"))
                        (rule "add_zero_left" (formula "40") (term "0,0,1,1,0,0,1,1,0,1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,1,0,0,1,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,1,0,1,1"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,1,0,1,1"))
                        (rule "inEqSimp_notGeq" (formula "40") (term "0,1,0,0,1,1,0,1,1"))
                        (rule "mul_literals" (formula "40") (term "1,0,0,0,1,0,0,1,1,0,1,1"))
                        (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,1,1,0,1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,1,0,0,1,1,0,1,1"))
                        (rule "mul_literals" (formula "40") (term "1,0,1,0,0,1,1,0,1,1"))
                        (rule "commute_or_2" (formula "10") (term "0"))
                        (rule "commute_or" (formula "11") (term "0,0,1,0"))
                        (rule "commute_or_2" (formula "23") (term "0,1,1,0"))
                        (rule "commute_or" (formula "8") (term "0,0"))
                        (rule "commute_or" (formula "24") (term "0,1,1,0"))
                        (rule "commute_or" (formula "10") (term "0,0"))
                        (rule "shift_paren_or" (formula "11") (term "0,1,0"))
                        (rule "commute_or_2" (formula "11") (term "0,0,1,0"))
                        (rule "inEqSimp_or_weaken2" (formula "11") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "1,0,1,0,1,0"))
                        (rule "add_literals" (formula "11") (term "0,1,0,1,0,1,0"))
                        (rule "add_zero_left" (formula "11") (term "1,0,1,0,1,0"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "div_axiom" (formula "13") (term "1") (inst "quotient=quotient_1"))
                        (rule "equal_literals" (formula "13") (term "0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "mul_literals" (formula "13") (term "1,1,1,1"))
                        (rule "qeq_literals" (formula "13") (term "0,1"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "polySimp_addComm1" (formula "15") (term "1"))
                        (rule "add_literals" (formula "15") (term "0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "14"))
                        (rule "inEqSimp_homoInEq1" (formula "15"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0"))
                        (rule "applyEqRigid" (formula "43") (term "1,1,1,0,0,1,0,0,1") (ifseqformula "13"))
                        (rule "applyEqRigid" (formula "26") (term "1,1,0,0") (ifseqformula "13"))
                        (rule "applyEq" (formula "43") (term "1,0,0,0,0,0,1") (ifseqformula "13"))
                        (rule "applyEqRigid" (formula "27") (term "1,1,0,0") (ifseqformula "13"))
                        (rule "applyEqRigid" (formula "11") (term "1,1,0,0") (ifseqformula "13"))
                        (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "13"))
                        (rule "applyEqRigid" (formula "43") (term "1,1,0,0,1,1") (ifseqformula "13"))
                        (rule "applyEq" (formula "11") (term "1,0,0,0,1,0") (ifseqformula "13"))
                        (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "13"))
                        (rule "inEqSimp_homoInEq1" (formula "24"))
                        (rule "polySimp_addComm1" (formula "24") (term "0"))
                        (rule "applyEq" (formula "43") (term "1,1,0,0,1,0,1") (ifseqformula "13"))
                        (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "13"))
                        (rule "applyEqRigid" (formula "16") (term "1") (ifseqformula "13"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                        (rule "mul_literals" (formula "15") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1"))
                        (rule "polySimp_rightDist" (formula "24") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                        (rule "mul_literals" (formula "24") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                        (rule "mul_literals" (formula "23") (term "0,0"))
                        (rule "add_zero_left" (formula "23") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                        (rule "mul_literals" (formula "23") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "15"))
                        (rule "mul_literals" (formula "9") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0"))
                        (rule "add_literals" (formula "9") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                        (rule "mul_literals" (formula "9") (term "1"))
                        (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                        (rule "leq_literals" (formula "9") (term "0,0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                        (rule "add_literals" (formula "9") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                        (rule "add_literals" (formula "9") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "9") (term "1,0,0"))
                        (rule "add_literals" (formula "9") (term "0,0"))
                        (rule "leq_literals" (formula "9") (term "0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "9"))
                        (rule "leq_literals" (formula "24") (term "0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "16"))
                        (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                        (rule "mul_literals" (formula "21") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "21") (term "0"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                        (rule "add_literals" (formula "21") (term "0,0,0"))
                        (rule "add_zero_left" (formula "21") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                        (rule "polySimp_elimOne" (formula "21") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "23"))
                        (rule "polySimp_mulAssoc" (formula "15") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "15") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                        (rule "elimGcdLeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                        (rule "neg_literal" (formula "15") (term "0,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "15") (term "0,0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                        (rule "add_literals" (formula "15") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0"))
                        (rule "qeq_literals" (formula "15") (term "0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "22"))
                        (rule "mul_literals" (formula "20") (term "0,0"))
                        (rule "add_zero_left" (formula "20") (term "0"))
                        (rule "inEqSimp_subsumption6" (formula "20") (ifseqformula "9"))
                        (rule "greater_literals" (formula "20") (term "0,0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "mul_literals" (formula "20") (term "1,0"))
                        (rule "leq_literals" (formula "20") (term "0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "commute_or" (formula "29") (term "0,0,1,1,0"))
                        (rule "commute_or" (formula "12") (term "0,0,1,0"))
                        (rule "commute_or" (formula "30") (term "0,1,0,1,1,0"))
                        (rule "div_axiom" (formula "46") (term "0,1,1,0") (inst "quotient=quotient_2"))
                        (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                        (rule "qeq_literals" (formula "1") (term "0,1,1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "equal_literals" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                        (rule "add_literals" (formula "3") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "3") (term "1"))
                        (rule "add_literals" (formula "3") (term "0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "applyEq" (formula "49") (term "0,1,1,0") (ifseqformula "1"))
                        (rule "polySimp_addComm1" (formula "49") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "49") (term "0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "all_pull_out3" (formula "49") (term "1,0,1,0,1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "44"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "0,0") (ifseqformula "45"))
                        (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "46"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "commute_or_2" (formula "34") (term "0,1,1,0"))
                        (rule "cnf_rightDist" (formula "35") (term "0,1,1,0"))
                        (rule "commute_or_2" (formula "35") (term "1,0,1,1,0"))
                        (rule "shift_paren_or" (formula "35") (term "0,0,1,1,0"))
                        (rule "commute_or" (formula "35") (term "0,1,0,1,1,0"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "0") (ifseqformula "47"))
                        (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "34"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "true_left" (formula "33"))
                        (rule "all_pull_out3" (formula "17") (term "0"))
                        (rule "shift_paren_or" (formula "17") (term "0,0"))
                        (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                        (rule "commute_or_2" (formula "17") (term "0,0,0,0"))
                        (rule "commute_or" (formula "17") (term "0,0,0,0,0"))
                        (rule "all_pull_out3" (formula "34") (term "1,0"))
                        (rule "shift_paren_or" (formula "34") (term "0,1,0"))
                        (rule "shift_paren_or" (formula "34") (term "0,0,1,0"))
                        (rule "commute_or_2" (formula "34") (term "0,0,0,1,0"))
                        (rule "all_pull_out3" (formula "35") (term "1,0"))
                        (rule "cnf_rightDist" (formula "35") (term "0,1,0"))
                        (rule "commute_or_2" (formula "35") (term "1,0,1,0"))
                        (rule "shift_paren_or" (formula "35") (term "0,0,1,0"))
                        (rule "commute_or_2" (formula "35") (term "0,1,0,1,0"))
                        (rule "shift_paren_or" (formula "35") (term "0,0,0,1,0"))
                        (rule "commute_or_2" (formula "35") (term "0,0,0,0,1,0"))
                        (rule "shift_paren_or" (formula "35") (term "0,0,1,0,1,0"))
                        (rule "commute_or" (formula "35") (term "0,0,0,1,0,1,0"))
                        (rule "all_pull_out3" (formula "34") (term "0"))
                        (rule "shift_paren_or" (formula "34") (term "0,0"))
                        (rule "shift_paren_or" (formula "34") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "34") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "34") (term "0,0,0,0,0"))
                        (rule "commute_or" (formula "34") (term "0,0,0,0,0,0"))
                        (rule "all_pull_out3" (formula "35") (term "0"))
                        (rule "cnf_rightDist" (formula "35") (term "0,0"))
                        (rule "distr_forallAnd" (formula "35") (term "0"))
                        (rule "distr_forallAnd" (formula "35"))
                        (rule "andLeft" (formula "35"))
                        (rule "commute_or_2" (formula "36") (term "0,0"))
                        (rule "shift_paren_or" (formula "35") (term "0,0"))
                        (rule "commute_or_2" (formula "36") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "35") (term "0,0,0"))
                        (rule "commute_or_2" (formula "36") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "35") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "35") (term "0,0,0,0,0"))
                        (rule "shift_paren_or" (formula "36") (term "0,0,0,0,0"))
                        (rule "commute_or" (formula "35") (term "0,0,0,0,0,0"))
                        (rule "allLeft" (formula "13") (inst "t=mul(i_1_0, Z(2(#)))"))
                        (rule "replaceKnownSelect_taclet1101000_16" (formula "13") (term "0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1101000_17" (formula "13") (term "0,0,0,0"))
                        (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "34"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                        (rule "inEqSimp_contradInEq5" (formula "13") (term "0") (ifseqformula "32"))
                        (rule "greater_literals" (formula "13") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0"))
                        (rule "qeq_literals" (formula "13") (term "0,0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "13"))
                        (rule "mul_literals" (formula "16") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                        (rule "mul_literals" (formula "16") (term "1"))
                        (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=i_1_0") (inst "elimGcd=Z(2(#))"))
                        (rule "leq_literals" (formula "16") (term "0,0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                        (rule "add_literals" (formula "16") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0"))
                        (rule "leq_literals" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "16"))
                        (rule "leq_literals" (formula "33") (term "0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "true_left" (formula "33"))
                        (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "13"))
                        (rule "polySimp_mulAssoc" (formula "23") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1"))
                        (rule "inEqSimp_contradInEq3" (formula "23") (ifseqformula "34"))
                        (rule "greater_literals" (formula "23") (term "0,0"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "andLeft" (formula "23"))
                        (rule "polySimp_rightDist" (formula "23") (term "0"))
                        (rule "mul_literals" (formula "23") (term "0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0"))
                        (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "23") (term "0"))
                        (rule "add_literals" (formula "23") (term "1,1,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0"))
                        (rule "add_literals" (formula "23") (term "0"))
                        (rule "leq_literals" (formula "23"))
                        (rule "closeFalse" (formula "23"))
                     )
                     (branch "CUT: self.<created> = TRUE FALSE"
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "nnf_imp2or" (formula "11") (term "1,0"))
                        (rule "nnf_imp2or" (formula "12") (term "1,0,1,0"))
                        (rule "nnf_imp2or" (formula "22") (term "1,0"))
                        (rule "nnf_imp2or" (formula "8") (term "0"))
                        (rule "nnf_imp2or" (formula "23") (term "0"))
                        (rule "nnf_imp2or" (formula "40") (term "0,1,1"))
                        (rule "nnf_imp2or" (formula "40") (term "0,1,0,1"))
                        (rule "nnf_imp2or" (formula "11") (term "0"))
                        (rule "nnf_imp2or" (formula "12") (term "0"))
                        (rule "nnf_imp2or" (formula "22") (term "0"))
                        (rule "nnf_notAnd" (formula "8") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                        (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                        (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                        (rule "nnf_imp2or" (formula "23") (term "1,0"))
                        (rule "nnf_notAnd" (formula "23") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                        (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                        (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "11") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "12") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                        (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                        (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "22") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                        (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                        (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                        (rule "nnf_imp2or" (formula "12") (term "0,1,0"))
                        (rule "nnf_notAnd" (formula "22") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_notLeq" (formula "22") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,1,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,1,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,1,0,1,0"))
                        (rule "add_zero_left" (formula "22") (term "0,0,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,0"))
                        (rule "nnf_notAnd" (formula "40") (term "0,0,1,1"))
                        (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,1,1"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,1,1"))
                        (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,1,1"))
                        (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,1,1"))
                        (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,1,1"))
                        (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,1,1"))
                        (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0,1,1"))
                        (rule "add_literals" (formula "40") (term "0,0,0,0,0,1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,1,1"))
                        (rule "mul_literals" (formula "40") (term "1,0,0,0,1,1"))
                        (rule "nnf_imp2or" (formula "40") (term "1,0,1,1"))
                        (rule "nnf_notAnd" (formula "23") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "inEqSimp_notGeq" (formula "23") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,0"))
                        (rule "add_zero_left" (formula "23") (term "0,0,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,0"))
                        (rule "nnf_notAnd" (formula "40") (term "0,0,1,0,1"))
                        (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,1,0,1"))
                        (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,1,0,1"))
                        (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,1,0,1"))
                        (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,1,0,1"))
                        (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,1,0,1"))
                        (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0,1,0,1"))
                        (rule "add_literals" (formula "40") (term "0,0,0,0,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,1,0,1"))
                        (rule "mul_literals" (formula "40") (term "1,0,0,0,1,0,1"))
                        (rule "nnf_imp2or" (formula "40") (term "1,0,1,0,1"))
                        (rule "nnf_notAnd" (formula "12") (term "0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,1,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,0"))
                        (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,0"))
                        (rule "nnf_imp2or" (formula "22") (term "0,1,1,0"))
                        (rule "nnf_notAnd" (formula "12") (term "0,1,0,1,0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "nnf_imp2or" (formula "23") (term "0,1,1,0"))
                        (rule "nnf_notAnd" (formula "40") (term "0,1,0,1,1"))
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "inEqSimp_notGeq" (formula "40") (term "1,0,1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,0,1,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,1,0,1,1"))
                        (rule "add_literals" (formula "40") (term "0,0,0,1,0,1,0,1,1"))
                        (rule "add_zero_left" (formula "40") (term "0,0,1,0,1,0,1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0,1,1"))
                        (rule "jdiv_axiom" (formula "14") (term "1,0"))
                        (rule "eqSymm" (formula "14"))
                        (rule "inEqSimp_subsumption1" (formula "14") (term "0,0") (ifseqformula "9"))
                        (rule "leq_literals" (formula "14") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "eqSymm" (formula "14"))
                        (rule "applyEqRigid" (formula "24") (term "1,1,0,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "41") (term "1,0,0,0,0,0,1") (ifseqformula "14"))
                        (rule "applyEqRigid" (formula "23") (term "1,1,0,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "21") (term "0") (ifseqformula "14"))
                        (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "41") (term "1,1,1,0,0,1,0,0,1") (ifseqformula "14"))
                        (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "41") (term "1,1,0,0,1,0,1") (ifseqformula "14"))
                        (rule "applyEq" (formula "41") (term "1,1,0,0,1,1") (ifseqformula "14"))
                        (rule "applyEqRigid" (formula "12") (term "1,1,0,0,1,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "14"))
                        (rule "nnf_notAnd" (formula "23") (term "0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,1,0"))
                        (rule "nnf_notOr" (formula "24") (term "0,0,1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                        (rule "expand_inShort" (formula "19"))
                        (rule "replace_short_MIN" (formula "19") (term "0,1"))
                        (rule "replace_short_MAX" (formula "19") (term "1,0"))
                        (rule "andLeft" (formula "19"))
                        (rule "inEqSimp_commuteLeq" (formula "20"))
                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
                        (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                        (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "9"))
                        (rule "leq_literals" (formula "20") (term "0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "19"))
                        (rule "leq_literals" (formula "10") (term "0"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                        (rule "mul_literals" (formula "17") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0"))
                        (rule "add_literals" (formula "17") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                        (rule "polySimp_elimOne" (formula "17") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "17"))
                        (rule "leq_literals" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                        (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "9"))
                        (rule "leq_literals" (formula "19") (term "0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "nnf_imp2or" (formula "41") (term "0,1,1,0,1,1"))
                        (rule "nnf_notAnd" (formula "41") (term "0,1,0,1,0,1"))
                         (builtin "One Step Simplification" (formula "41"))
                        (rule "inEqSimp_notLeq" (formula "41") (term "1,0,1,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,0,1,0,1,0,1"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,1,0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,1,0,1,0,1"))
                        (rule "add_literals" (formula "41") (term "0,0,0,1,0,1,0,1,0,1"))
                        (rule "add_zero_left" (formula "41") (term "0,0,1,0,1,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,1,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,0,1,0,1"))
                        (rule "nnf_notAnd" (formula "24") (term "1,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "24") (term "0,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "24") (term "1,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_notLeq" (formula "24") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,1,1,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "24") (term "0,0,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,1,0"))
                        (rule "nnf_notAnd" (formula "24") (term "0,0,0,1,1,0"))
                        (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,1,1,0"))
                        (rule "commute_or_2" (formula "8") (term "0"))
                        (rule "nnf_imp2or" (formula "41") (term "0,1,1,0,1,0,1"))
                        (rule "nnf_notOr" (formula "41") (term "0,0,1,1,0,1,1"))
                        (rule "nnf_notAnd" (formula "41") (term "0,0,1,1,0,1,0,1"))
                        (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,1,1,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,1,0,1,0,1"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,1,1,0,1,0,1"))
                        (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,1,1,0,1,0,1"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,1,1,0,1,0,1"))
                        (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,1,1,0,1,0,1"))
                        (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,1,1,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,1,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,1,1,0,1,0,1"))
                        (rule "nnf_notAnd" (formula "41") (term "1,0,0,1,1,0,1,1"))
                        (rule "inEqSimp_notGeq" (formula "41") (term "0,1,0,0,1,1,0,1,1"))
                        (rule "mul_literals" (formula "41") (term "1,0,0,0,1,0,0,1,1,0,1,1"))
                        (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,1,1,0,1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,1,0,0,1,1,0,1,1"))
                        (rule "mul_literals" (formula "41") (term "1,0,1,0,0,1,1,0,1,1"))
                        (rule "inEqSimp_notLeq" (formula "41") (term "1,1,0,0,1,1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,1,0,0,1,1,0,1,1"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,1,1,0,0,1,1,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,1,0,0,1,1,0,1,1"))
                        (rule "add_literals" (formula "41") (term "0,0,0,1,1,0,0,1,1,0,1,1"))
                        (rule "add_zero_left" (formula "41") (term "0,0,1,1,0,0,1,1,0,1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,1,0,0,1,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,1,0,1,1"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,1,0,1,1"))
                        (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,1,0,1,1"))
                        (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,1,1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,1,0,1,1"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,1,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,1,0,1,1"))
                        (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,1,0,1,1"))
                        (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0,1,1,0,1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,1,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,1,0,1,1"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,1,1,0,1,1"))
                        (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,0,1,1,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,1,1,0,1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,1,1,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,1,1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,1,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,1,1,0,1,1"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,1,1,0,1,1"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,1,1,0,1,1"))
                        (rule "commute_or_2" (formula "10") (term "0"))
                        (rule "commute_or" (formula "11") (term "0,0,1,0"))
                        (rule "commute_or_2" (formula "23") (term "0,1,1,0"))
                        (rule "commute_or" (formula "8") (term "0,0"))
                        (rule "commute_or" (formula "24") (term "0,1,1,0"))
                        (rule "commute_or" (formula "10") (term "0,0"))
                        (rule "shift_paren_or" (formula "11") (term "0,1,0"))
                        (rule "commute_or_2" (formula "11") (term "0,0,1,0"))
                        (rule "inEqSimp_or_weaken2" (formula "11") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "1,0,1,0,1,0"))
                        (rule "add_literals" (formula "11") (term "0,1,0,1,0,1,0"))
                        (rule "add_zero_left" (formula "11") (term "1,0,1,0,1,0"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "div_axiom" (formula "13") (term "1") (inst "quotient=quotient_1"))
                        (rule "equal_literals" (formula "13") (term "0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "mul_literals" (formula "13") (term "1,1,1,1"))
                        (rule "qeq_literals" (formula "13") (term "0,1"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "polySimp_addComm1" (formula "15") (term "1"))
                        (rule "add_literals" (formula "15") (term "0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "14"))
                        (rule "inEqSimp_homoInEq1" (formula "15"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0"))
                        (rule "applyEqRigid" (formula "17") (term "1,0") (ifseqformula "13"))
                        (rule "applyEqRigid" (formula "44") (term "1,1,0,0,1,1") (ifseqformula "13"))
                        (rule "applyEqRigid" (formula "11") (term "1,1,0,0") (ifseqformula "13"))
                        (rule "applyEqRigid" (formula "27") (term "1,1,0,0") (ifseqformula "13"))
                        (rule "applyEqRigid" (formula "44") (term "1,1,1,0,0,1,0,0,1") (ifseqformula "13"))
                        (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "13"))
                        (rule "applyEqRigid" (formula "44") (term "1,0,0,0,0,0,1") (ifseqformula "13"))
                        (rule "applyEq" (formula "11") (term "1,0,0,0,1,0") (ifseqformula "13"))
                        (rule "applyEqRigid" (formula "26") (term "1,1,0,0") (ifseqformula "13"))
                        (rule "applyEq" (formula "24") (term "0") (ifseqformula "13"))
                        (rule "inEqSimp_homoInEq1" (formula "24"))
                        (rule "polySimp_addComm1" (formula "24") (term "0"))
                        (rule "applyEq" (formula "44") (term "1,1,0,0,1,0,1") (ifseqformula "13"))
                        (rule "applyEqRigid" (formula "16") (term "1") (ifseqformula "13"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1"))
                        (rule "mul_literals" (formula "15") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1"))
                        (rule "polySimp_rightDist" (formula "24") (term "1"))
                        (rule "mul_literals" (formula "24") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "21"))
                        (rule "polySimp_mulAssoc" (formula "14") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "14") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                        (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                        (rule "leq_literals" (formula "14") (term "0,0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                        (rule "neg_literal" (formula "14") (term "0,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                        (rule "add_literals" (formula "14") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0"))
                        (rule "qeq_literals" (formula "14") (term "0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "16"))
                        (rule "mul_literals" (formula "9") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0"))
                        (rule "add_literals" (formula "9") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                        (rule "mul_literals" (formula "9") (term "1"))
                        (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                        (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                        (rule "leq_literals" (formula "9") (term "0,0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                        (rule "add_literals" (formula "9") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                        (rule "add_literals" (formula "9") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "9") (term "1,0,0"))
                        (rule "add_literals" (formula "9") (term "0,0"))
                        (rule "leq_literals" (formula "9") (term "0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "17"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                        (rule "mul_literals" (formula "22") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0"))
                        (rule "add_zero_left" (formula "22") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                        (rule "polySimp_elimOne" (formula "22") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                        (rule "times_zero_1" (formula "26") (term "0,0"))
                        (rule "add_zero_left" (formula "26") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                        (rule "mul_literals" (formula "26") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "9"))
                        (rule "leq_literals" (formula "26") (term "0"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "22"))
                        (rule "mul_literals" (formula "20") (term "0,0"))
                        (rule "add_zero_left" (formula "20") (term "0"))
                        (rule "inEqSimp_subsumption6" (formula "20") (ifseqformula "9"))
                        (rule "mul_literals" (formula "20") (term "1,1,0"))
                        (rule "greater_literals" (formula "20") (term "0,0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "leq_literals" (formula "20") (term "0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "commute_or" (formula "29") (term "0,0,1,1,0"))
                        (rule "commute_or" (formula "12") (term "0,0,1,0"))
                        (rule "commute_or" (formula "30") (term "0,1,0,1,1,0"))
                        (rule "div_axiom" (formula "47") (term "0,1,1,0") (inst "quotient=quotient_2"))
                        (rule "equal_literals" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "qeq_literals" (formula "1") (term "0,1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1,1,1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                        (rule "add_literals" (formula "3") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "3") (term "1"))
                        (rule "add_literals" (formula "3") (term "0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "applyEq" (formula "50") (term "0,1,1,0") (ifseqformula "1"))
                        (rule "polySimp_addComm1" (formula "50") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "50") (term "0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "all_pull_out3" (formula "50") (term "1,0,1,0,1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "44"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "45"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "46"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "commute_or_2" (formula "35") (term "0,1,1,0"))
                        (rule "cnf_rightDist" (formula "36") (term "0,1,1,0"))
                        (rule "commute_or_2" (formula "36") (term "1,0,1,1,0"))
                        (rule "shift_paren_or" (formula "36") (term "0,0,1,1,0"))
                        (rule "commute_or" (formula "36") (term "0,1,0,1,1,0"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0") (ifseqformula "47"))
                        (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "35"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "true_left" (formula "34"))
                        (rule "all_pull_out3" (formula "18") (term "0"))
                        (rule "shift_paren_or" (formula "18") (term "0,0"))
                        (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                        (rule "commute_or_2" (formula "18") (term "0,0,0,0"))
                        (rule "commute_or" (formula "18") (term "0,0,0,0,0"))
                        (rule "all_pull_out3" (formula "35") (term "1,0"))
                        (rule "shift_paren_or" (formula "35") (term "0,1,0"))
                        (rule "shift_paren_or" (formula "35") (term "0,0,1,0"))
                        (rule "commute_or_2" (formula "35") (term "0,0,0,1,0"))
                        (rule "all_pull_out3" (formula "36") (term "1,0"))
                        (rule "cnf_rightDist" (formula "36") (term "0,1,0"))
                        (rule "commute_or_2" (formula "36") (term "1,0,1,0"))
                        (rule "shift_paren_or" (formula "36") (term "0,0,1,0"))
                        (rule "commute_or_2" (formula "36") (term "0,1,0,1,0"))
                        (rule "shift_paren_or" (formula "36") (term "0,0,0,1,0"))
                        (rule "commute_or_2" (formula "36") (term "0,0,0,0,1,0"))
                        (rule "shift_paren_or" (formula "36") (term "0,0,1,0,1,0"))
                        (rule "commute_or" (formula "36") (term "0,0,0,1,0,1,0"))
                        (rule "all_pull_out3" (formula "35") (term "0"))
                        (rule "shift_paren_or" (formula "35") (term "0,0"))
                        (rule "shift_paren_or" (formula "35") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "35") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "35") (term "0,0,0,0,0"))
                        (rule "commute_or" (formula "35") (term "0,0,0,0,0,0"))
                        (rule "all_pull_out3" (formula "36") (term "0"))
                        (rule "cnf_rightDist" (formula "36") (term "0,0"))
                        (rule "distr_forallAnd" (formula "36") (term "0"))
                        (rule "distr_forallAnd" (formula "36"))
                        (rule "andLeft" (formula "36"))
                        (rule "commute_or_2" (formula "37") (term "0,0"))
                        (rule "shift_paren_or" (formula "36") (term "0,0"))
                        (rule "commute_or_2" (formula "37") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "36") (term "0,0,0"))
                        (rule "commute_or_2" (formula "37") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "36") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "36") (term "0,0,0,0,0"))
                        (rule "shift_paren_or" (formula "37") (term "0,0,0,0,0"))
                        (rule "commute_or" (formula "36") (term "0,0,0,0,0,0"))
                        (rule "allLeft" (formula "14") (inst "t=mul(i_1_0, Z(2(#)))"))
                        (rule "replaceKnownSelect_taclet1101000_16" (formula "14") (term "0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1101000_17" (formula "14") (term "0,0,0,0"))
                        (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "35"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                        (rule "inEqSimp_contradInEq5" (formula "14") (term "0") (ifseqformula "33"))
                        (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                        (rule "greater_literals" (formula "14") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "qeq_literals" (formula "14") (term "0,0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "14"))
                        (rule "polySimp_mulAssoc" (formula "23") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1"))
                        (rule "inEqSimp_contradInEq3" (formula "23") (ifseqformula "35"))
                        (rule "greater_literals" (formula "23") (term "0,0"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "andLeft" (formula "23"))
                        (rule "polySimp_rightDist" (formula "23") (term "0"))
                        (rule "mul_literals" (formula "23") (term "0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0"))
                        (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "23") (term "0"))
                        (rule "add_literals" (formula "23") (term "1,1,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0"))
                        (rule "add_literals" (formula "23") (term "0"))
                        (rule "leq_literals" (formula "23"))
                        (rule "closeFalse" (formula "23"))
                     )
                  )
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "17"))
               (rule "allRight" (formula "17") (inst "sk=f_0"))
               (rule "allRight" (formula "17") (inst "sk=o_0"))
               (rule "orRight" (formula "17"))
               (rule "orRight" (formula "17"))
               (rule "eqSymm" (formula "19"))
               (rule "inEqSimp_leqRight" (formula "14"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "7"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
               (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
               (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
               (rule "add_zero_left" (formula "15") (term "0,0,0,0"))
               (rule "mod_axiom" (formula "15") (term "1,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,0"))
               (rule "div_literals" (formula "15") (term "0,1,1,1,1,0"))
               (rule "mul_literals" (formula "15") (term "1,1,1,1,0"))
               (rule "add_zero_right" (formula "15") (term "1,1,1,0"))
               (rule "add_literals" (formula "15") (term "1,1,0"))
               (rule "mod_axiom" (formula "15") (term "1,1,1"))
               (rule "div_literals" (formula "15") (term "0,0,1,1,1,1"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1"))
               (rule "mul_literals" (formula "15") (term "1,1,1,1"))
               (rule "add_zero_right" (formula "15") (term "1,1,1"))
               (rule "add_literals" (formula "15") (term "1,1"))
               (rule "mod_axiom" (formula "15") (term "0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,0"))
               (rule "div_literals" (formula "15") (term "0,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "15") (term "0,0,0,0"))
               (rule "mod_axiom" (formula "19") (term "1,3,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,3,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "3,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,3,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,3,0,0"))
               (rule "mod_axiom" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,0"))
               (rule "mod_axiom" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,0"))
               (rule "mod_axiom" (formula "15") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
               (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "polySimp_rightDist" (formula "1") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
               (rule "mul_literals" (formula "1") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "7"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
               (rule "polySimp_elimOne" (formula "7") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
               (rule "inEqSimp_contradEq3" (formula "14") (term "1,0") (ifseqformula "2"))
               (rule "mul_literals" (formula "14") (term "1,0,0,1,0"))
               (rule "add_literals" (formula "14") (term "0,0,1,0"))
               (rule "qeq_literals" (formula "14") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "false_right" (formula "14"))
               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
               (rule "leq_literals" (formula "3") (term "0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "polyDiv_pullOut" (formula "1") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,1"))
               (rule "equal_literals" (formula "1") (term "0,0,1,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
               (rule "polySimp_addComm0" (formula "1") (term "1,1,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1,1,1,1"))
               (rule "add_literals" (formula "1") (term "0,0,1,1,1,1"))
               (rule "polySimp_rightDist" (formula "1") (term "1,1"))
               (rule "mul_literals" (formula "1") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "polyDiv_pullOut" (formula "16") (term "0,1,3,0,0") (inst "polyDivCoeff=Z(1(#))"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,2,0,1,3,0,0"))
               (rule "equal_literals" (formula "16") (term "0,0,1,3,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "mul_literals" (formula "16") (term "1,0,0,0,1,3,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,3,0,0"))
               (rule "polySimp_addComm0" (formula "16") (term "1,1,3,0,0"))
               (rule "polySimp_addComm1" (formula "16") (term "0,1,1,1,3,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,1,1,1,3,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,3,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,3,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "3,0,0"))
               (rule "polySimp_addComm1" (formula "16") (term "0,3,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,3,0,0"))
               (rule "pullOutSelect" (formula "16") (term "1") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfAnon" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=f_0_1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "replaceKnownSelect_taclet11000_6" (formula "1") (term "2,0"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "16"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "closeTrue" (formula "18"))
            )
         )
      )
      (branch "Null Reference (v = null)"
         (rule "false_right" (formula "14"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (v_1 = null)"
      (rule "false_right" (formula "14"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Null Reference (v = null)"
   (rule "false_right" (formula "14"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
   (rule "closeFalse" (formula "1"))
)
)
}
