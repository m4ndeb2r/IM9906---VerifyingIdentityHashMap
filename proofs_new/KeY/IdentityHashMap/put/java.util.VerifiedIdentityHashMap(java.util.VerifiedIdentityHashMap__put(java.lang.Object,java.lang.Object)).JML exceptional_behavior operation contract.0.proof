\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Jun 11 19:00:13 CEST 2021
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , javaLoopTreatment-javaLoopTreatment\\:efficient
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=6000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\bootclasspath "../../../../jre";

\javaSource "../../../../src";

\include "../../../../functions.key";

\proofObligation "#Proof Obligation Settings
#Fri Jun 11 19:00:13 CEST 2021
contract=java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap\\:\\:put(java.lang.Object,java.lang.Object)].JML exceptional_behavior operation contract.0
name=java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap\\:\\:put(java.lang.Object,java.lang.Object)].JML exceptional_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "martindeboer" ) (keyVersion "a6034b00a3"))

(autoModeTime "23386")

(branch "dummy ID"
(rule "instanceof_static_type" (formula "1") (term "0,0,0,1,0,0,1,1") (newnames "key,value,self,result,exc,heapAtPre,o,f"))
(rule "boolean_equal" (formula "1") (term "0,0,1,0,0,1,1"))
(rule "insert_constant_value" (formula "1") (term "0,1,1,0,1,0"))
(rule "concrete_impl_1" (formula "1") (term "0,1,0,0,1,1"))
(rule "insert_constant_value" (formula "1") (term "1,1,1,0,0,1,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "14") (term "1,0,0,1,0,1"))
(rule "translateJavaSubInt" (formula "9") (term "1"))
(rule "translateJavaMulInt" (formula "8") (term "1"))
(rule "translateJavaAddInt" (formula "7") (term "0"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "13"))
(rule "concrete_or_2" (formula "4"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "12"))
(rule "concrete_or_2" (formula "5"))
(rule "inEqSimp_commuteGeq" (formula "7"))
(rule "assignment" (formula "14") (term "1"))
(rule "sequentialToParallel2" (formula "14"))
(rule "simplifyUpdate3" (formula "14") (term "1,0"))
(rule "elementOfUnion" (formula "14") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "14") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "14") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfAllFields" (formula "14") (term "1,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "14") (term "0,0,0,0,0,0,1,0,1"))
(rule "expand_subJint" (formula "9") (term "1"))
(rule "sub_literals" (formula "9") (term "0,1"))
(rule "expand_mulJint" (formula "8") (term "1"))
(rule "mul_literals" (formula "8") (term "0,1"))
(rule "expand_addJint" (formula "7") (term "1"))
(rule "polySimp_addComm0" (formula "7") (term "0,1"))
(rule "expand_moduloInteger" (formula "9") (term "1"))
(rule "replace_int_MIN" (formula "9") (term "0,1"))
(rule "replace_int_RANGE" (formula "9") (term "1,1,1"))
(rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,1"))
(rule "add_literals" (formula "9") (term "0,1,1"))
(rule "expand_moduloInteger" (formula "8") (term "1"))
(rule "replace_int_MIN" (formula "8") (term "0,1"))
(rule "replace_int_RANGE" (formula "8") (term "1,1,1"))
(rule "replace_int_HALFRANGE" (formula "8") (term "0,0,1,1"))
(rule "add_literals" (formula "8") (term "0,1,1"))
(rule "expand_moduloInteger" (formula "7") (term "1"))
(rule "replace_int_RANGE" (formula "7") (term "1,1,1"))
(rule "replace_int_MIN" (formula "7") (term "0,1"))
(rule "replace_int_HALFRANGE" (formula "7") (term "0,0,1,1"))
(rule "polySimp_addAssoc" (formula "7") (term "0,1,1"))
(rule "add_literals" (formula "7") (term "0,0,1,1"))
(rule "methodBodyExpand" (formula "14") (term "1") (newnames "heapBefore_put,savedHeapBefore_put,_keyBefore_put,_valueBefore_put,lenBefore_put,iBefore_put,kBefore_put,tabBefore_put"))
(rule "simplifyUpdate2" (formula "14") (term "1"))
(rule "sequentialToParallel2" (formula "14"))
(rule "simplifyUpdate3" (formula "14") (term "1,0"))
(rule "variableDeclarationAssign" (formula "14") (term "1"))
(rule "variableDeclaration" (formula "14") (term "1") (newnames "k"))
 (builtin "Use Operation Contract" (formula "14") (newnames "heapBefore_maskNull,result_0,exc_0") (contract "java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap::maskNull(java.lang.Object)].JML normal_behavior operation contract.0"))
(branch "Post (maskNull)"
   (rule "simplifyUpdate2" (formula "15"))
   (rule "simplifyUpdate2" (formula "11"))
   (rule "simplifyUpdate2" (formula "11") (term "1"))
   (rule "andLeft" (formula "11"))
   (rule "simplifyUpdate2" (formula "11"))
   (rule "andLeft" (formula "12"))
   (rule "simplifyUpdate2" (formula "13"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "13"))
   (rule "simplifyUpdate2" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "notLeft" (formula "15"))
   (rule "eqSymm" (formula "12") (term "1,1"))
   (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "16"))
   (rule "concrete_or_2" (formula "11"))
   (rule "applyOnRigidFormula" (formula "13"))
   (rule "applyOnRigidFormula" (formula "12"))
   (rule "simplifyUpdate2" (formula "12") (term "1"))
   (rule "applyOnRigidFormula" (formula "13") (term "0"))
   (rule "applyOnRigidFormula" (formula "13") (term "1"))
   (rule "simplifyUpdate1" (formula "13") (term "0,1"))
   (rule "applyOnPV" (formula "13") (term "1,1"))
   (rule "applyOnRigidFormula" (formula "12") (term "0"))
   (rule "simplifyUpdate1" (formula "12") (term "1,0"))
   (rule "applyOnPV" (formula "12") (term "0,0"))
   (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "19"))
   (rule "concrete_impl_2" (formula "12"))
   (rule "true_left" (formula "12"))
   (rule "applyOnRigidFormula" (formula "12") (term "0,0"))
   (rule "simplifyUpdate1" (formula "12") (term "1,0,0"))
   (rule "applyOnPV" (formula "12") (term "0,0,0"))
   (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "18"))
   (rule "concrete_not_2" (formula "12") (term "0"))
   (rule "concrete_impl_1" (formula "12"))
   (rule "assignment" (formula "19") (term "1"))
   (rule "sequentialToParallel2" (formula "19"))
   (rule "simplifyUpdate3" (formula "19") (term "1,0"))
   (rule "variableDeclarationAssign" (formula "19") (term "1"))
   (rule "variableDeclaration" (formula "19") (term "1") (newnames "tab"))
   (rule "assignment_read_attribute_this" (formula "19"))
   (rule "sequentialToParallel2" (formula "19"))
   (rule "simplifyUpdate3" (formula "19") (term "1,0"))
   (rule "variableDeclarationAssign" (formula "19") (term "1"))
   (rule "variableDeclaration" (formula "19") (term "1") (newnames "len"))
   (rule "assignment_read_length" (formula "19"))
   (branch "Normal Execution (tab != null)"
      (rule "sequentialToParallel2" (formula "19"))
      (rule "simplifyUpdate3" (formula "19") (term "1,0"))
      (rule "applyOnElementary" (formula "19") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "19") (term "0,1,0"))
      (rule "applyOnPV" (formula "19") (term "0,0,1,0"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "i"))
       (builtin "Use Operation Contract" (formula "19") (newnames "heapBefore_hash,result_1,exc_1") (contract "java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap::hash(java.lang.Object,int)].JML normal_behavior operation contract.0#java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap::hash(java.lang.Object,int)].JML normal_behavior operation contract.1"))
      (branch "Post (hash)"
         (rule "expand_inInt" (formula "15") (term "1,0,1,1"))
         (rule "replace_int_MIN" (formula "15") (term "0,1,1,0,1,1"))
         (rule "replace_int_MAX" (formula "15") (term "1,0,1,0,1,1"))
         (rule "simplifyUpdate2" (formula "15"))
         (rule "translateJavaMod" (formula "15") (term "0,1,0,0,0,0,1,0,1,1,1"))
         (rule "eqSymm" (formula "15") (term "0,0,0,0,0,1,0,1,1,1"))
         (rule "sequentialToParallel2" (formula "15"))
         (rule "simplifyUpdate3" (formula "15") (term "1,0"))
         (rule "andLeft" (formula "15"))
         (rule "simplifyUpdate2" (formula "15"))
         (rule "andLeft" (formula "16"))
         (rule "simplifyUpdate2" (formula "17"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "16"))
         (rule "applyOnRigidFormula" (formula "18"))
         (rule "simplifyUpdate2" (formula "18") (term "0"))
         (rule "simplifyUpdate2" (formula "18") (term "1"))
         (rule "applyOnRigidFormula" (formula "19"))
         (rule "simplifyUpdate2" (formula "19") (term "1"))
         (rule "replace_known_left" (formula "19") (term "1,1") (ifseqformula "15"))
         (rule "concrete_and_3" (formula "19") (term "1"))
         (rule "replace_known_left" (formula "19") (term "1,1") (ifseqformula "13"))
         (rule "concrete_and_3" (formula "19") (term "1"))
         (rule "applyOnRigidFormula" (formula "18") (term "0"))
         (rule "simplifyUpdate2" (formula "18") (term "0,0"))
         (rule "applyOnRigidFormula" (formula "18") (term "1"))
         (rule "simplifyUpdate2" (formula "18") (term "1,1"))
         (rule "replace_known_left" (formula "18") (term "1,1") (ifseqformula "15"))
         (rule "concrete_and_3" (formula "18") (term "1"))
         (rule "applyOnRigidFormula" (formula "19") (term "0"))
         (rule "simplifyUpdate2" (formula "19") (term "0,0"))
         (rule "applyOnRigidFormula" (formula "18") (term "1,0"))
         (rule "simplifyUpdate2" (formula "18") (term "0,1,0"))
         (rule "simplifyUpdate2" (formula "18") (term "1,1,0"))
         (rule "applyOnRigidFormula" (formula "18") (term "0,0"))
         (rule "applyOnRigidFormula" (formula "18") (term "1"))
         (rule "simplifyUpdate2" (formula "18") (term "1,1"))
         (rule "replace_known_left" (formula "18") (term "1,1") (ifseqformula "13"))
         (rule "concrete_and_3" (formula "18") (term "1"))
         (rule "applyOnRigidFormula" (formula "19") (term "1,0"))
         (rule "simplifyUpdate2" (formula "19") (term "0,1,0"))
         (rule "simplifyUpdate2" (formula "19") (term "1,1,0"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,0"))
         (rule "simplifyUpdate1" (formula "19") (term "1,0,0"))
         (rule "applyOnPV" (formula "19") (term "0,0,0"))
         (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "20"))
         (rule "concrete_and_2" (formula "19") (term "0"))
         (rule "concrete_impl_2" (formula "19"))
         (rule "true_left" (formula "19"))
         (rule "applyOnRigidFormula" (formula "18") (term "0,1,0"))
         (rule "applyOnPV" (formula "18") (term "0,0,1,0"))
         (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "13"))
         (rule "concrete_and_1" (formula "18") (term "1,0"))
         (rule "applyOnRigidFormula" (formula "18") (term "0,0,0"))
         (rule "applyOnPV" (formula "18") (term "0,0,0,0"))
         (rule "simplifyUpdate1" (formula "18") (term "1,0,0,0"))
         (rule "replace_known_right" (formula "18") (term "0,0,0") (ifseqformula "19"))
         (rule "concrete_not_2" (formula "18") (term "0,0"))
         (rule "concrete_and_1" (formula "18") (term "0"))
         (rule "applyOnRigidFormula" (formula "18") (term "1"))
         (rule "simplifyUpdate2" (formula "18") (term "1,1"))
         (rule "applyOnRigidFormula" (formula "18") (term "0"))
         (rule "applyOnRigidFormula" (formula "18") (term "0,1"))
         (rule "simplifyUpdate2" (formula "18") (term "1,0,1"))
         (rule "applyOnRigidFormula" (formula "18") (term "0,0"))
         (rule "simplifyUpdate1" (formula "18") (term "1,0,0"))
         (rule "applyOnPV" (formula "18") (term "0,0,0"))
         (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "19"))
         (rule "concrete_not_2" (formula "18") (term "0"))
         (rule "concrete_impl_1" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "simplifyUpdate2" (formula "19"))
         (rule "applyOnRigidFormula" (formula "20"))
         (rule "applyOnPV" (formula "20") (term "1"))
         (rule "simplifyUpdate1" (formula "20") (term "0"))
         (rule "applyOnRigidFormula" (formula "18"))
         (rule "simplifyUpdate1" (formula "18") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "17"))
         (rule "applyOnRigidTerm" (formula "18") (term "0"))
         (rule "simplifyUpdate1" (formula "18") (term "0,0"))
         (rule "simplifyUpdate1" (formula "18") (term "1,0"))
         (rule "applyOnPV" (formula "18") (term "0,0"))
         (rule "applyOnPV" (formula "18") (term "1,0"))
         (rule "assignment" (formula "26") (term "1"))
         (rule "sequentialToParallel2" (formula "26"))
         (rule "simplifyUpdate3" (formula "26") (term "1,0"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "item"))
         (rule "variableDeclarationGhostAssign" (formula "26") (term "1"))
         (rule "variableDeclarationGhost" (formula "26") (term "1") (newnames "hash"))
         (rule "assignment" (formula "26") (term "1"))
         (rule "sequentialToParallel2" (formula "26"))
         (rule "simplifyUpdate3" (formula "26") (term "1,0"))
         (rule "applyOnElementary" (formula "26") (term "1,0"))
         (rule "applyOnPV" (formula "26") (term "0,1,0"))
         (rule "arrayLengthIsAShort" (formula "8") (term "0"))
         (rule "expand_inShort" (formula "8"))
         (rule "replace_short_MAX" (formula "8") (term "1,0"))
         (rule "replace_short_MIN" (formula "8") (term "0,1"))
         (rule "andLeft" (formula "8"))
         (rule "inEqSimp_commuteLeq" (formula "9"))
         (rule "arrayLengthNotNegative" (formula "10") (term "0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0,0") (ifseqformula "1"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_4_in_VerifiedIdentityHashMap" (formula "14"))
         (rule "notLeft" (formula "14"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "27"))
         (rule "concrete_or_2" (formula "1"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_19_in_VerifiedIdentityHashMap" (formula "15") (inst "i=i_1") (inst "j=j"))
         (rule "polySimp_mulComm0" (formula "15") (term "0,2,0,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "0,2,1,1,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "0,2,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "0,2,0,0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,1,0"))
         (rule "commute_and" (formula "15") (term "0,0"))
         (rule "commute_and" (formula "15") (term "0,0,1,1,0"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_23_in_VerifiedIdentityHashMap" (formula "16"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_2_in_VerifiedIdentityHashMap" (formula "17"))
         (rule "nonNull" (formula "17") (inst "i=i_1"))
         (rule "sub_literals" (formula "17") (term "2,1,0,1,1"))
         (rule "nonNullZero" (formula "17") (term "1,0,1,1"))
         (rule "greater_literals" (formula "17") (term "0,1"))
         (rule "concrete_impl_1" (formula "17") (term "1"))
         (rule "andLeft" (formula "17"))
         (rule "notLeft" (formula "17"))
         (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "30"))
         (rule "concrete_or_2" (formula "12"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
         (rule "commute_and" (formula "17") (term "0,0"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_VerifiedIdentityHashMap" (formula "18") (inst "i=i_1") (inst "j=j"))
         (rule "eqSymm" (formula "18") (term "1,1,0,1,0"))
         (rule "eqSymm" (formula "18") (term "1,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "0,2,0,0,0,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "0,2,1,1,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "0,2,0,1,0,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0"))
         (rule "commute_and" (formula "18") (term "0,0"))
         (rule "commute_and" (formula "18") (term "0,0,1,0"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_21_in_VerifiedIdentityHashMap" (formula "19") (inst "i=i_1") (inst "j=j"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,2,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,2,1,1,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,2,0,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,2,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,1,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,1,1,0"))
         (rule "commute_and" (formula "19") (term "0,0"))
         (rule "commute_and" (formula "19") (term "1,0,0,1,1,0"))
         (rule "commute_and" (formula "19") (term "0,0,0,1,1,0"))
         (rule "cnf_rightDist" (formula "19") (term "0,0,1,1,0"))
         (rule "commute_or" (formula "19") (term "0,0,0,1,1,0"))
         (rule "cnf_rightDist" (formula "19") (term "1,0,0,1,1,0"))
         (rule "commute_or" (formula "19") (term "1,1,0,0,1,1,0"))
         (rule "commute_or" (formula "19") (term "0,1,0,0,1,1,0"))
         (rule "cnf_rightDist" (formula "19") (term "0,0,0,1,1,0"))
         (rule "commute_or" (formula "19") (term "1,0,0,0,1,1,0"))
         (rule "commute_or" (formula "19") (term "0,0,0,0,1,1,0"))
         (rule "shift_paren_and" (formula "19") (term "0,0,1,1,0"))
         (rule "commute_and_2" (formula "19") (term "0,0,1,1,0"))
         (rule "commute_and_2" (formula "19") (term "0,0,0,1,1,0"))
         (rule "commute_and_2" (formula "19") (term "0,0,1,1,0"))
         (rule "commute_and" (formula "19") (term "0,0,0,0,1,1,0"))
         (rule "commute_and_2" (formula "19") (term "0,0,0,1,1,0"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_VerifiedIdentityHashMap" (formula "20") (inst "i=i_1"))
         (rule "polySimp_addComm0" (formula "20") (term "0,2,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
         (rule "commute_and" (formula "20") (term "0,0"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_3_in_VerifiedIdentityHashMap" (formula "21"))
         (rule "notLeft" (formula "21"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "34"))
         (rule "concrete_or_2" (formula "1"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_15_in_VerifiedIdentityHashMap" (formula "22") (inst "i=i_1"))
         (rule "exLeft" (formula "22") (inst "sk=i_1_0"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "eqSymm" (formula "24"))
         (rule "inEqSimp_commuteLeq" (formula "22"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_17_in_VerifiedIdentityHashMap" (formula "25") (inst "i=i_1"))
         (rule "exLeft" (formula "25") (inst "sk=i_1_1"))
         (rule "andLeft" (formula "25"))
         (rule "andLeft" (formula "25"))
         (rule "polySimp_mulComm0" (formula "27") (term "0,2,0"))
         (rule "inEqSimp_commuteLeq" (formula "25"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "3"))
         (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "28"))
         (rule "concrete_or_1" (formula "27"))
         (rule "true_left" (formula "27"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_5_in_VerifiedIdentityHashMap" (formula "28"))
         (rule "insert_constant_value" (formula "28") (term "0,0,1"))
         (rule "insert_constant_value" (formula "28") (term "0,1,0,0"))
         (rule "eqClose" (formula "28") (term "1,0,0"))
         (rule "concrete_and_3" (formula "28") (term "0,0"))
         (rule "insert_constant_value" (formula "28") (term "0,0,1,0"))
         (rule "insert_constant_value" (formula "28") (term "0,1,0,0"))
         (rule "eqClose" (formula "28") (term "1,0,0"))
         (rule "concrete_and_3" (formula "28") (term "0,0"))
         (rule "insert_constant_value" (formula "28") (term "0,1,0,0"))
         (rule "eqClose" (formula "28") (term "1,0,0"))
         (rule "concrete_and_3" (formula "28") (term "0,0"))
         (rule "mul_literals" (formula "28") (term "0,1"))
         (rule "mul_literals" (formula "28") (term "0,1,0"))
         (rule "andLeft" (formula "28"))
         (rule "andLeft" (formula "28"))
         (rule "notLeft" (formula "28"))
         (rule "inEqSimp_commuteGeq" (formula "29"))
         (rule "inEqSimp_commuteLeq" (formula "28"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_11_in_VerifiedIdentityHashMap" (formula "30"))
         (rule "insert_constant_value" (formula "30") (term "1"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_25_in_VerifiedIdentityHashMap" (formula "31"))
         (rule "expand_inInt" (formula "31") (term "0"))
         (rule "expand_inInt" (formula "31") (term "1"))
         (rule "replace_int_MIN" (formula "31") (term "0,1,0"))
         (rule "replace_int_MAX" (formula "31") (term "1,0,0"))
         (rule "replace_int_MIN" (formula "31") (term "0,1,1"))
         (rule "replace_int_MAX" (formula "31") (term "1,0,1"))
         (rule "andLeft" (formula "31"))
         (rule "andLeft" (formula "32"))
         (rule "andLeft" (formula "31"))
         (rule "inEqSimp_commuteLeq" (formula "34"))
         (rule "inEqSimp_commuteLeq" (formula "32"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_13_in_VerifiedIdentityHashMap" (formula "35") (inst "i=i_1"))
         (rule "eqSymm" (formula "35"))
         (rule "polySimp_mulComm0" (formula "35") (term "0,2,0,0,0,2,0"))
         (rule "ifthenelse_negated" (formula "35") (term "2,0"))
         (rule "Partial_inv_axiom_for_static_JML_class_invariant_nr_3_in_VerifiedIdentityHashMap" (formula "39"))
         (rule "notLeft" (formula "39"))
          (builtin "Loop Invariant" (formula "55") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,itemBefore_LOOP,i_0,item_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
         (branch "Invariant Initially Valid"
            (rule "simplifyUpdate2" (formula "55"))
            (rule "eqSymm" (formula "55") (term "1,0,0,0,0,0,0,0,0,1"))
            (rule "eqSymm" (formula "55") (term "0,0,1,0,1,0,1"))
            (rule "eqSymm" (formula "55") (term "1,0,1,0,0,1"))
            (rule "eqSymm" (formula "55") (term "0,0,0,0,0,0,0,0,0,1"))
            (rule "polySimp_elimSub" (formula "55") (term "1,1,0,0,0,0,0,0,1"))
            (rule "mul_literals" (formula "55") (term "1,1,1,0,0,0,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "0,2,0,0,1,1,0,1,1,1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,0,1,1,1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "0,2,0,0,0,1,0,1,1,0,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "0,2,0,0,1,1,0,0,1,1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "0,2,0,0,0,1,0,1,1,1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,0,1,1,0,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "0,2,0,1,1,0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "0,2,0,0,0,1,0,0,1,1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,1,1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,1,1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "0,2,0,0,1,1,0,1,1,0,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,0,0,1,1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,1,0,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "0,0,2,1,0,0,1,0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "0,0,2,0,0,0,1,0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "0,2,1,1,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "0,2,0,1,0,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "55") (term "1,1,0,0,0,0,0,0,1"))
            (rule "polySimp_addComm0" (formula "55") (term "0,2,1,0,0,1,0,1,0,1"))
            (rule "polySimp_addComm0" (formula "55") (term "0,2,0,0,0,1,0,1,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "23"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "23") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulAssoc" (formula "20") (term "1,0,0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,0,1,1,0"))
            (rule "polySimp_mulAssoc" (formula "20") (term "1,0,0,0,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0,0,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "26"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "26") (term "0"))
            (rule "inEqSimp_gtToGeq" (formula "16") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "46"))
            (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "46") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "30"))
            (rule "mul_literals" (formula "30") (term "1,0,0"))
            (rule "add_literals" (formula "30") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "55") (term "0,1,0,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0,0,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,1,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,1,1,1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,1,1,1,0,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,1,1,0,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,1,1,0,0,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,0,1,1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,0,1,1,0,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,0,0,0,0,1"))
            (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0,0,0,0,0,0,1"))
            (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0,0,0,0,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,0,1,1,0,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,1,1,1,0,0,0,1"))
            (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0,0,0,0,0,1"))
            (rule "add_literals" (formula "55") (term "0,0,0,1,0,0,0,0,0,0,1"))
            (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,0,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,1,1,0,0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "55"))
            (rule "simplifyUpdate2" (formula "55") (term "1"))
            (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "3"))
            (rule "concrete_and_3" (formula "55"))
            (rule "applyOnRigidFormula" (formula "55"))
            (rule "simplifyUpdate2" (formula "55") (term "1"))
            (rule "applyOnRigidFormula" (formula "55") (term "0"))
            (rule "simplifyUpdate2" (formula "55") (term "0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "1"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,1"))
            (rule "simplifyUpdate2" (formula "55") (term "0,0,1"))
            (rule "simplifyUpdate2" (formula "55") (term "1,0,1"))
            (rule "applyOnRigidFormula" (formula "55") (term "1,0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "0,1,0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "1,0,0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,1,0"))
            (rule "simplifyUpdate2" (formula "55") (term "0,0,1,0"))
            (rule "simplifyUpdate2" (formula "55") (term "1,0,1,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,0,1"))
            (rule "simplifyUpdate2" (formula "55") (term "0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "55") (term "1,0,1"))
            (rule "simplifyUpdate2" (formula "55") (term "1,1,0,1"))
            (rule "simplifyUpdate2" (formula "55") (term "0,1,0,1"))
            (rule "applyOnRigidFormula" (formula "55") (term "1,1,0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "0,1,1,0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "1,1,1,0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,1,0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "0,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "1,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,0,1,0"))
            (rule "simplifyUpdate2" (formula "55") (term "0,0,0,1,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,1,0,1,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,1"))
            (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "55") (term "1,1,0,1"))
            (rule "simplifyUpdate1" (formula "55") (term "0,1,1,0,1"))
            (rule "simplifyUpdate1" (formula "55") (term "1,1,1,0,1"))
            (rule "applyOnPV" (formula "55") (term "1,1,1,0,1"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,1,0,1"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,1,1,0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "1,1,1,0,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "0,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,0,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "0,0,0,1,0,0"))
            (rule "applyOnPV" (formula "55") (term "1,0,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "55") (term "0,0,1,0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "1,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "1,0,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,1,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "0,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "55") (term "2,0,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "55") (term "0,0,1,0,1,0"))
            (rule "applyOnPV" (formula "55") (term "1,0,1,0,1,0"))
            (rule "applyOnPV" (formula "55") (term "0,0,1,0,1,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "1,1,0,1,0"))
            (rule "applyOnPV" (formula "55") (term "1,1,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "55") (term "2,1,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "55") (term "0,1,1,0,1,0"))
            (rule "eqClose" (formula "55") (term "1,0,1,0"))
            (rule "concrete_impl_4" (formula "55") (term "0,1,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,0,1"))
            (rule "applyOnRigidTerm" (formula "55") (term "0,1,1,0,1"))
            (rule "applyOnPV" (formula "55") (term "1,0,1,1,0,1"))
            (rule "simplifyUpdate1" (formula "55") (term "2,0,1,1,0,1"))
            (rule "simplifyUpdate1" (formula "55") (term "0,0,1,1,0,1"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "55") (term "1,0,0,1,0,1"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,0,1,1,0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "0,0,0,1,1,0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "1,0,0,1,1,0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,1,1,1,0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "1,0,1,1,1,0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "0,0,1,1,1,0,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "1,0,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "0,1,0,0,1,0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,1,1,0,0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "0,0,1,1,0,0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "1,0,1,1,0,0,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "0,0,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,0,0,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "0,0,0,1,0,0,0"))
            (rule "applyOnPV" (formula "55") (term "1,0,0,1,0,0,0"))
            (rule "polySimp_addComm0" (formula "55") (term "0,0,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,0,0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "1,0,0,0,0,0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "0,0,0,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,0,0,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "0,1,0,0,0,0"))
            (rule "applyOnPV" (formula "55") (term "0,0,1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,0,0,0"))
            (rule "replace_known_left" (formula "55") (term "1,0,0,0,0") (ifseqformula "45"))
            (rule "concrete_and_3" (formula "55") (term "0,0,0,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "0,0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "55") (term "0,0,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "55") (term "0,0,0,1,0,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "0,0,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "55") (term "0,0,0,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "55") (term "2,0,0,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "55") (term "1,0,0,0,1,0,1"))
            (rule "applyOnPV" (formula "55") (term "0,0,0,0,1,0,1"))
            (rule "applyOnPV" (formula "55") (term "1,0,0,0,1,0,1"))
            (rule "applyOnRigidTerm" (formula "55") (term "1,0,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "55") (term "2,1,0,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "55") (term "0,1,0,0,1,0,1"))
            (rule "applyOnPV" (formula "55") (term "1,1,0,0,1,0,1"))
            (rule "eqClose" (formula "55") (term "0,0,1,0,1"))
            (rule "concrete_not_1" (formula "55") (term "0,1,0,1"))
            (rule "concrete_impl_2" (formula "55") (term "1,0,1"))
            (rule "concrete_impl_4" (formula "55") (term "0,1"))
            (rule "eq_and_2" (formula "55"))
            (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,1,1,0"))
            (rule "simplifyUpdate2" (formula "55") (term "1,1,0,0,1,1,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "1,0,1,1,0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "1,1,0,1,1,0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,1,1,0"))
            (rule "simplifyUpdate2" (formula "55") (term "1,0,0,0,1,1,0"))
            (rule "simplifyUpdate2" (formula "55") (term "0,0,0,0,1,1,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "1,0,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "55") (term "0,0,0,1,0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "0,0,0,0,0,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "0,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "0,0,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,0,0"))
            (rule "applyOnPV" (formula "55") (term "0,1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,0,0"))
            (rule "replace_known_left" (formula "55") (term "1,0,0,0,0") (ifseqformula "47"))
            (rule "concrete_and_3" (formula "55") (term "0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,0,1,1,0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "0,0,0,1,1,0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "1,0,0,1,1,0,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,1,0"))
            (rule "applyOnPV" (formula "55") (term "0,1,0,0,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1,0"))
            (rule "add_literals" (formula "55") (term "1,1,0,0,1,0"))
            (rule "times_zero_1" (formula "55") (term "1,0,0,1,0"))
            (rule "add_literals" (formula "55") (term "0,0,1,0"))
            (rule "leq_literals" (formula "55") (term "0,1,0"))
            (rule "concrete_impl_2" (formula "55") (term "1,0"))
            (rule "concrete_and_3" (formula "55") (term "0"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,0"))
            (rule "applyOnPV" (formula "55") (term "1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "0,0,0,0,0"))
            (rule "eqClose" (formula "55") (term "0,0,0,0"))
            (rule "concrete_and_1" (formula "55") (term "0,0,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,1,0"))
            (rule "applyOnPV" (formula "55") (term "0,1,0,0,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1,0"))
            (rule "add_literals" (formula "55") (term "1,1,0,0,1,0"))
            (rule "times_zero_1" (formula "55") (term "1,0,0,1,0"))
            (rule "add_literals" (formula "55") (term "0,0,1,0"))
            (rule "qeq_literals" (formula "55") (term "0,1,0"))
            (rule "concrete_impl_2" (formula "55") (term "1,0"))
            (rule "concrete_and_3" (formula "55") (term "0"))
            (rule "applyOnRigidTerm" (formula "55") (term "1,0,1,0"))
            (rule "applyOnPV" (formula "55") (term "0,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,1,0,1,0"))
            (rule "polySimp_addComm0" (formula "55") (term "0,1,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "0,0,0"))
            (rule "applyOnPV" (formula "55") (term "1,0,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "1,0,1,0"))
            (rule "applyOnPV" (formula "55") (term "1,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "55") (term "0,1,0,1,0"))
            (rule "polySimp_addComm0" (formula "55") (term "0,1,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "0,0,0"))
            (rule "applyOnPV" (formula "55") (term "0,0,0,0"))
            (rule "eqClose" (formula "55") (term "0,0"))
            (rule "concrete_and_1" (formula "55") (term "0"))
            (rule "mod_axiom" (formula "14") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1"))
            (rule "div_literals" (formula "14") (term "0,1,1,1"))
            (rule "times_zero_2" (formula "14") (term "1,1,1"))
            (rule "add_literals" (formula "14") (term "1,1"))
            (rule "add_literals" (formula "14") (term "1"))
            (rule "mod_axiom" (formula "15") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1"))
            (rule "div_literals" (formula "15") (term "0,1,1,1"))
            (rule "times_zero_2" (formula "15") (term "1,1,1"))
            (rule "add_literals" (formula "15") (term "1,1"))
            (rule "add_literals" (formula "15") (term "1"))
            (rule "applyEq" (formula "20") (term "2,1,1,0,0,0,0,0,1,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "28") (term "0") (ifseqformula "24"))
            (rule "applyEq" (formula "14") (term "0") (ifseqformula "24"))
            (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "38"))
            (rule "applyEq" (formula "20") (term "2,1,1,1,0,0,1,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "51") (term "0") (ifseqformula "38"))
            (rule "applyEq" (formula "16") (term "2,0,1,1,0,0,1,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "29") (term "0") (ifseqformula "24"))
            (rule "applyEq" (formula "10") (term "0") (ifseqformula "24"))
            (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "38"))
            (rule "applyEq" (formula "11") (term "0") (ifseqformula "24"))
            (rule "applyEq" (formula "12") (term "0") (ifseqformula "24"))
            (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "34") (term "0") (ifseqformula "15"))
            (rule "qeq_literals" (formula "34"))
            (rule "true_left" (formula "34"))
            (rule "applyEq" (formula "20") (term "2,0,1,0,1,0,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "33") (term "0") (ifseqformula "15"))
            (rule "leq_literals" (formula "33"))
            (rule "true_left" (formula "33"))
            (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "15"))
            (rule "add_literals" (formula "30") (term "0"))
            (rule "leq_literals" (formula "30"))
            (rule "true_left" (formula "30"))
            (rule "applyEq" (formula "50") (term "0,1,0,0") (ifseqformula "24"))
            (rule "applyEq" (formula "16") (term "2,0,1,0,1,0,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "9") (term "0") (ifseqformula "15"))
            (rule "inEqSimp_homoInEq0" (formula "9"))
            (rule "mul_literals" (formula "9") (term "1,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0"))
            (rule "add_literals" (formula "9") (term "0,0"))
            (rule "applyEq" (formula "20") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "16") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
            (rule "applyEq" (formula "21") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
            (rule "applyEq" (formula "19") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
            (rule "applyEq" (formula "18") (term "0,1,0,0,0,0,0") (ifseqformula "24"))
            (rule "applyEq" (formula "19") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "20") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
            (rule "applyEq" (formula "20") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "20") (term "2,1,1,0,0,0,0,0,1,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "20") (term "2,1,1,1,0,0,1,1,0") (ifseqformula "14"))
            (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "14"))
            (rule "qeq_literals" (formula "28"))
            (rule "true_left" (formula "28"))
            (rule "applyEq" (formula "24") (term "1") (ifseqformula "14"))
            (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "16") (term "2,0,1,1,0,0,1,1,0") (ifseqformula "14"))
            (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "14"))
            (rule "leq_literals" (formula "28"))
            (rule "true_left" (formula "28"))
            (rule "applyEq" (formula "20") (term "2,0,1,0,1,0,1,0") (ifseqformula "14"))
            (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "14"))
            (rule "qeq_literals" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "13"))
            (rule "qeq_literals" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "12"))
            (rule "leq_literals" (formula "10"))
            (rule "closeFalse" (formula "10"))
         )
         (branch "Body Preserves Invariant"
            (rule "simplifyUpdate2" (formula "49"))
            (rule "sequentialToParallel2" (formula "49"))
            (rule "simplifyUpdate2" (formula "49"))
            (rule "simplifyUpdate3" (formula "49") (term "1,0"))
            (rule "applyOnParallel" (formula "49") (term "1,0"))
            (rule "simplifyUpdate3" (formula "49") (term "0,1,0"))
            (rule "applyOnElementary" (formula "49") (term "1,1,0"))
            (rule "applyOnRigidFormula" (formula "49"))
            (rule "simplifyUpdate2" (formula "49") (term "1"))
            (rule "simplifyUpdate2" (formula "49") (term "0"))
            (rule "applyOnRigidTerm" (formula "49") (term "0,1,0,1"))
            (rule "simplifyUpdate1" (formula "49") (term "2,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,1,0,1"))
            (rule "applyOnRigidTerm" (formula "49") (term "0,1,1,0,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "1,0,1,0,1"))
            (rule "applyOnRigidTerm" (formula "49") (term "1,0,1,1,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1"))
            (rule "simplifyUpdate2" (formula "49") (term "1,1"))
            (rule "simplifyUpdate2" (formula "49") (term "0,1"))
            (rule "applyOnRigidFormula" (formula "49") (term "0"))
            (rule "simplifyUpdate2" (formula "49") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,1"))
            (rule "simplifyUpdate2" (formula "49") (term "0,1,1"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,1"))
            (rule "applyOnPV" (formula "49") (term "0,0,1"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "1,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,1,1"))
            (rule "simplifyUpdate1" (formula "49") (term "1,1,1,1"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,1,1"))
            (rule "applyOnPV" (formula "49") (term "0,0,1,1"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,1,1"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,1,0"))
            (rule "simplifyUpdate2" (formula "49") (term "1,0,1,0"))
            (rule "simplifyUpdate2" (formula "49") (term "0,0,1,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "0,1,1,1"))
            (rule "simplifyUpdate1" (formula "49") (term "2,0,1,1,1"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,1,1,1"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,1,1,1"))
            (rule "applyOnPV" (formula "49") (term "0,0,1,1,1"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,1,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "1,0,1,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "0,0,1,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "1,0,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "0,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "0,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,0,1,0"))
            (rule "simplifyUpdate2" (formula "49") (term "1,1,0,1,0"))
            (rule "simplifyUpdate2" (formula "49") (term "0,1,0,1,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,0,1,0"))
            (rule "simplifyUpdate2" (formula "49") (term "0,0,0,1,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,1,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,1,0,1,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,0,1,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "0,0,0,1,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,0,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "0,1,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,0,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "1,0,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,1,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "1,1,1,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "0,1,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,1,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "1,0,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,1,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,1,1,0,1,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,1,0,1,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,1,0,0,1,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "1,1,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "2,1,1,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,1,1,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,1,1,0,1,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,1,0,1,0,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "0,1,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "2,0,1,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,1,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,1,0,1,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,0,1,0,1,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,0,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,1,0,0,1,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,1,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,1,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,0,0,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "1,0,0,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,0,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,1,0,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,1,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,1,1,0,0,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "0,1,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "49") (term "2,0,1,1,0,1,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,0,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,0,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,0,1,0,1,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "1,1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,1,1,0,0,1,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "1,1,0,0,1,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,1,1,0,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "1,0,1,1,0,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "0,0,1,1,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,0,0,0,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "1,0,0,0,0,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "0,0,0,0,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,0,0,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,1,0,0,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,1,0,0,0,0,0,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "0,1,0,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,1,0,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,1,1,1,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "1,0,1,1,1,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "0,0,1,1,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,0,1,1,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "1,0,0,1,1,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "0,0,0,1,1,0,0,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "1,0,0,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "49") (term "2,1,0,0,1,0,1,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "0,0,0,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "49") (term "2,0,0,0,1,0,1,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "1,1,1,0,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,1,1,1,0,0,1,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,0,1,1,0,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "1,1,0,1,1,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,0,1,1,0,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "1,0,0,1,1,0,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "0,0,0,1,1,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,0,0,0,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,0,0,0,0,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "1,0,0,0,0,0,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "0,0,0,0,0,0,0,0,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "1,1,0,0,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,1,1,0,0,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,0,1,1,1,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "1,1,0,1,1,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,0,1,1,1,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "0,0,0,1,1,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,0,0,1,1,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "1,1,0,0,1,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,0,0,1,1,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "1,0,0,0,1,1,0,0,0"))
            (rule "simplifyUpdate2" (formula "49") (term "0,0,0,0,1,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,1,0,1,1,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,1,0,1,1,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,0,0,1,1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,1,0,0,1,1,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,0,0,1,1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,0,0,1,1,0,0,0,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "1,1,0,0,0,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,1,1,0,0,0,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,0,0,0,0,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,1,0,0,0,0,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,1,0,0,0,0,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,0,0,0,0,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,0,0,0,0,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,1,0,1,1,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,1,0,1,1,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,0,0,1,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,1,0,0,1,1,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,1,0,0,1,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,1,0,0,1,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "1,0,0,0,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,1,0,0,0,1,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,0,0,0,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,0,0,0,1,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,0,1,0,1,1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,0,1,0,1,1,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,1,1,0,1,1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,1,1,0,1,1,0,0,0,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "1,0,0,0,0,0,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "2,1,0,0,0,0,0,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,1,0,0,0,0,0,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,0,1,0,1,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,0,1,0,1,1,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,1,1,0,1,1,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,0,1,0,0,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,0,1,0,0,1,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "49") (term "0,1,1,0,0,1,1,0,0,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "0,0,0,1,0,1,1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "2,0,0,0,1,0,1,1,0,0,0,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "0,0,1,1,0,1,1,0,0,0,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "0,0,0,1,0,1,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "2,0,0,0,1,0,1,1,1,0,0,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "0,0,1,1,0,1,1,1,0,0,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "0,0,0,1,0,0,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "2,0,0,0,1,0,0,1,1,0,0,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "0,0,1,1,0,0,1,1,0,0,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "2,0,0,1,1,0,1,1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,2,0,0,1,1,0,1,1,0,0,0,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "2,0,0,1,1,0,1,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,2,0,0,1,1,0,1,1,1,0,0,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "2,0,0,1,1,0,0,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,2,0,0,1,1,0,0,1,1,0,0,0"))
            (rule "simplifyUpdate2" (formula "57") (term "1"))
            (rule "applyOnPV" (formula "49") (term "1,0,1,1,1"))
            (rule "applyOnPV" (formula "49") (term "0,0,1,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "1,1,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,1,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,1,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,1,0,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "1,0,1,0,1,0,0"))
            (rule "applyOnPV" (formula "49") (term "1,1,1,0,1,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,1,0,0,1,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,0,0,1,1,1"))
            (rule "applyOnPV" (formula "49") (term "0,0,1,1,0,1,0"))
            (rule "applyOnPV" (formula "49") (term "1,0,1,1,0,1,0"))
            (rule "applyOnPV" (formula "49") (term "0,0,1,0,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "1,0,1,0,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,1,0,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,0,0,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,1,0,0,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,0,1,0,1,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,0,0,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,0,0,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "49") (term "2,0,0,1,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,1,0,0,1,0,1,0"))
            (rule "applyOnPV" (formula "49") (term "0,0,1,0,0,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,1,0,0,0,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,0,0,0,0,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,0,0,1,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "2,0,0,1,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,0,1,1,0,1,0"))
            (rule "applyOnPV" (formula "49") (term "1,0,0,0,1,0,1,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,0,0,1,0,1,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,0,0,0,0,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,0,0,0,1,1,0,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "1,1,0,0,1,1,0,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,0,0,0,0,1,1,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "1,1,0,0,0,1,1,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "1,1,0,0,1,1,1,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,0,0,0,1,0,1,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,0,0,1,1,0,1,0"))
            (rule "applyOnPV" (formula "49") (term "1,1,0,0,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,1,1,0,0,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,0,1,0,1,1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,1,1,0,1,1,1,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,0,0,0,0,0,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,0,1,0,0,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,0,1,0,1,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,0,0,1,0,1,1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,0,1,1,0,1,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,0,0,1,0,1,1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,0,1,1,0,0,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,0,1,1,0,1,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,0,0,1,0,0,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,0,1,1,0,0,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,0,0,1,0,1,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,0,1,1,0,1,1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0,0,1,1,0,1,1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,0,0,1,0,1,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,0,0,1,0,0,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,0,0,0,1,0,1,0"))
            (rule "simplifyUpdate1" (formula "49") (term "2,0,0,0,0,1,0,1,0"))
            (rule "applyOnPV" (formula "49") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,0,0,0,0,1,0,1,0"))
            (rule "applyOnPV" (formula "49") (term "1,0,0,1,0,1,1,0,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "1,0,0,1,0,0,1,1,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "1,0,0,1,0,1,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "2,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,0,0,0,1,0,1,1,0,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,0,0,1,1,0,1,1,1,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "1,0,0,0,1,0,1,1,0,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "1,0,0,1,1,0,0,1,1,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "1,0,0,1,1,0,1,1,1,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "1,0,0,0,1,0,0,1,1,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,0,0,1,1,0,0,1,1,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "1,0,0,0,1,0,1,1,1,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,0,0,1,1,0,1,1,0,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "1,0,0,1,1,0,1,1,0,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,0,0,0,1,0,1,1,1,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,0,0,0,1,0,0,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "2,0,0,0,0,1,0,1,1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,0,0,0,1,0,1,1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,0,0,1,1,0,1,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "2,0,0,0,1,1,0,1,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,0,0,1,1,0,0,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "2,0,0,0,1,1,0,0,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,0,0,1,1,0,1,1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "2,0,0,0,1,1,0,1,1,0,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,0,0,0,0,1,0,1,1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,0,0,0,1,0,1,1,1,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,0,0,0,1,1,0,1,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "2,0,0,0,0,1,0,1,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,0,0,0,1,0,0,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "2,0,0,0,0,1,0,0,1,1,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,0,0,0,1,1,0,0,1,1,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,0,0,0,1,1,0,1,1,0,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,0,0,0,0,1,0,1,1,1,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,0,0,0,0,1,0,0,1,1,0,0,0"))
            (rule "sequentialToParallel2" (formula "57") (term "1,1"))
            (rule "simplifyUpdate3" (formula "57") (term "1,0,1,1"))
            (rule "applyOnElementary" (formula "57") (term "1,0,1,1"))
            (rule "applyOnRigidTerm" (formula "49") (term "1,1,0,0,0,0,0,0,0,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,1,0,0,0,0,0,0,0,0"))
            (rule "sequentialToParallel2" (formula "57") (term "1"))
            (rule "simplifyUpdate3" (formula "57") (term "1,0,1"))
            (rule "sequentialToParallel2" (formula "57"))
            (rule "simplifyUpdate2" (formula "57"))
            (rule "simplifyUpdate3" (formula "57") (term "1,0"))
            (rule "applyOnParallel" (formula "57") (term "1,0"))
            (rule "simplifyUpdate3" (formula "57") (term "0,1,0"))
            (rule "applyOnParallel" (formula "57") (term "1,1,0"))
            (rule "simplifyUpdate3" (formula "57") (term "1,1,1,0"))
            (rule "simplifyUpdate3" (formula "57") (term "0,1,1,0"))
            (rule "applyOnElementary" (formula "57") (term "1,1,1,0"))
            (rule "applyOnParallel" (formula "57") (term "0,1,1,0"))
            (rule "simplifyUpdate3" (formula "57") (term "0,0,1,1,0"))
            (rule "applyOnElementary" (formula "57") (term "1,0,1,1,0"))
            (rule "sequentialToParallel1" (formula "57") (term "0,1,1,1,0"))
            (rule "simplifyUpdate1" (formula "57") (term "0,1,1,1,0"))
            (rule "simplifyUpdate3" (formula "57") (term "1,0,0,1,1,1,0"))
            (rule "applyOnRigidTerm" (formula "57") (term "0,1,0,1,1,0"))
            (rule "simplifyUpdate1" (formula "57") (term "2,0,1,0,1,1,0"))
            (rule "simplifyUpdate1" (formula "57") (term "0,0,1,0,1,1,0"))
            (rule "applyOnRigidTerm" (formula "57") (term "0,1,1,1,0"))
            (rule "simplifyUpdate1" (formula "57") (term "0,0,1,1,1,0"))
            (rule "applyOnPV" (formula "57") (term "0,0,1,1,1,0"))
            (rule "applyOnRigidTerm" (formula "57") (term "1,0,1,0,1,1,0"))
            (rule "applyOnPV" (formula "57") (term "0,1,0,1,0,1,1,0"))
            (rule "applyOnRigidTerm" (formula "57") (term "1,0,1,1,1,0"))
            (rule "simplifyUpdate1" (formula "57") (term "1,1,0,1,1,1,0"))
            (rule "applyOnPV" (formula "57") (term "1,1,0,1,1,1,0"))
            (rule "applyOnRigidTerm" (formula "57") (term "0,1,0,1,1,1,0"))
            (rule "simplifyUpdate1" (formula "57") (term "1,0,1,0,1,1,1,0"))
            (rule "simplifyUpdate1" (formula "57") (term "0,0,1,0,1,1,1,0"))
            (rule "applyOnPV" (formula "57") (term "1,0,1,0,1,1,1,0"))
            (rule "applyOnRigidTerm" (formula "57") (term "0,0,1,0,1,1,1,0"))
            (rule "simplifyUpdate1" (formula "57") (term "1,0,0,1,0,1,1,1,0"))
            (rule "simplifyUpdate1" (formula "57") (term "0,0,0,1,0,1,1,1,0"))
            (rule "applyOnPV" (formula "57") (term "1,0,0,1,0,1,1,1,0"))
            (rule "applyOnPV" (formula "57") (term "0,0,0,1,0,1,1,1,0"))
            (rule "applyOnRigidFormula" (formula "57"))
            (rule "simplifyUpdate2" (formula "57") (term "0"))
            (rule "selectCreatedOfAnonAsFormula" (formula "49") (term "1,1,1"))
            (rule "eqClose" (formula "49") (term "1,0,0,0,0,0,0,0,0"))
            (rule "concrete_and_3" (formula "49") (term "0,0,0,0,0,0,0,0"))
            (rule "elementOfAllFields" (formula "57") (term "0,0,0,0,1,0,1,1,1,0,1,1"))
            (rule "expand_inInt" (formula "49") (term "0,1"))
            (rule "replace_int_MAX" (formula "49") (term "1,0,0,1"))
            (rule "replace_int_MIN" (formula "49") (term "0,1,0,1"))
            (rule "impRight" (formula "57"))
            (rule "andLeft" (formula "50"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "50"))
            (rule "andLeft" (formula "52"))
            (rule "andLeft" (formula "50"))
            (rule "andLeft" (formula "50"))
            (rule "andLeft" (formula "50"))
            (rule "andLeft" (formula "50"))
            (rule "andLeft" (formula "50"))
            (rule "andLeft" (formula "50"))
            (rule "eqSymm" (formula "68") (term "1,0,0,1,0,1,1,1,0,1"))
            (rule "eqSymm" (formula "68") (term "0,0,1,0,1,0,0,1,1,1,0,1"))
            (rule "eqSymm" (formula "68") (term "1,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
            (rule "eqSymm" (formula "68") (term "0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
            (rule "eqSymm" (formula "68") (term "1,0,1,0,0,0,1,1,1,0,1"))
            (rule "eqSymm" (formula "50"))
            (rule "polySimp_elimSub" (formula "68") (term "0,1,0,1,1,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "68") (term "1,1,0,0,0,0,0,0,0,1,1,1,0,1"))
            (rule "mul_literals" (formula "68") (term "1,1,1,0,0,0,0,0,0,0,1,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "68") (term "0,1,1,1,0"))
            (rule "polySimp_elimSub" (formula "52") (term "1"))
            (rule "mul_literals" (formula "52") (term "1,1"))
            (rule "polySimp_elimSub" (formula "68") (term "0,1,1,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "68") (term "0,0,1,0,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "68") (term "0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "68") (term "0,2,0,0,1,1,0,1,1,1,0,0,0,0,1,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "68") (term "0,2,0,0,1,1,0,1,1,0,0,0,0,0,1,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,1,1,0,0,0,0,0,1,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "68") (term "0,2,0,0,1,1,0,0,1,1,0,0,0,0,1,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "68") (term "0,2,0,0,0,1,0,0,1,1,0,0,0,0,1,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "68") (term "0,1,0,0,0,1,1,0,0,0,0,1,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "68") (term "0,2,0,0,0,1,0,1,1,0,0,0,0,0,1,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,1,1,0,0,0,0,1,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,1,1,1,0,0,0,0,1,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "68") (term "0,1,0,0,1,1,0,0,0,0,0,1,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "68") (term "0,2,0,1,1,0,1,0,0,1,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "68") (term "0,2,0,0,0,1,0,1,1,1,0,0,0,0,1,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "57") (term "0,0,2,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "57") (term "0,2,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "57") (term "0,0,2,1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "56") (term "0,2,0,1,0"))
            (rule "polySimp_mulComm0" (formula "56") (term "0,2,1,1,0"))
            (rule "polySimp_mulComm0" (formula "55") (term "0,2,0,0,0,1,0,1,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "0,2,0,0,1,1,0,1,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "0,2,0,0,1,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "0,2,0,0,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "54") (term "0,2,0,0,0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "54") (term "0,2,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "68") (term "0,0,2,0,0,0,1,0,1,0,0,1,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "68") (term "0,0,2,1,0,0,1,0,1,0,0,1,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "68") (term "0,2,1,1,0,1,0,0,0,1,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "68") (term "0,2,0,1,0,1,0,0,0,1,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "68") (term "1,1,0,0,0,0,0,0,0,1,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "52") (term "1"))
            (rule "polySimp_addComm1" (formula "68") (term "0,0,1,0,1,1,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "68") (term "0,0,0,1,0,1,1,1,0"))
            (rule "polySimp_addComm0" (formula "57") (term "0,2,0,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "57") (term "0,2,1,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "68") (term "0,2,0,0,0,1,0,1,0,0,1,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "68") (term "0,2,1,0,0,1,0,1,0,0,1,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "68") (term "0,0,0,1,0,1,1,1,1,0,1"))
            (rule "polySimp_addComm1" (formula "68") (term "0,0,1,0,1,1,1,0"))
            (rule "polySimp_addComm1" (formula "68") (term "0,0,1,0,1,1,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0,1,0,0,0,1,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0,1,0,0,1,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "59"))
            (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0,1,1,0,0,0,0,0,1,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0,0,1,1,0,0,0,0,1,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0,1,1,1,0,0,0,0,1,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,1,1"))
            (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1"))
            (rule "variableDeclarationAssign" (formula "1") (term "1"))
            (rule "variableDeclarationAssign" (formula "68") (term "1"))
            (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_1"))
            (rule "variableDeclaration" (formula "68") (term "1") (newnames "rtrn"))
            (rule "assignment" (formula "68") (term "1"))
            (rule "sequentialToParallel2" (formula "68"))
            (rule "simplifyUpdate3" (formula "68") (term "1,0"))
            (rule "variableDeclaration" (formula "68") (term "1") (newnames "returnExpr"))
            (rule "variableDeclarationAssign" (formula "68") (term "1"))
            (rule "variableDeclaration" (formula "68") (term "1") (newnames "exc_2"))
            (rule "assignment" (formula "68") (term "1"))
            (rule "sequentialToParallel2" (formula "68"))
            (rule "simplifyUpdate3" (formula "68") (term "1,0"))
            (rule "variableDeclaration" (formula "68") (term "1") (newnames "thrownExc"))
            (rule "blockReturn" (formula "68") (term "1,0,1,0,1"))
            (rule "blockThrow" (formula "68") (term "1,0,0,1"))
            (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=java_util_VerifiedIdentityHashMap_table_0"))
            (rule "simplifySelectOfAnon" (formula "50"))
            (rule "elementOfFreshLocs" (formula "50") (term "1,0,0"))
            (rule "elementOfAllFields" (formula "50") (term "0,0,0,0"))
            (rule "equalUnique" (formula "50") (term "0,1,0,0,0"))
            (rule "concrete_not_2" (formula "50") (term "1,0,0,0"))
            (rule "concrete_and_3" (formula "50") (term "0,0,0"))
            (rule "eqSymm" (formula "51"))
            (rule "hideAuxiliaryEq" (formula "51"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_1" (formula "50") (term "1"))
            (rule "ifthenelse_concrete4" (formula "50"))
            (rule "eqSymm" (formula "50") (term "0,0,0"))
            (rule "replace_known_right" (formula "50") (term "0,0,1,0,0") (ifseqformula "65"))
            (rule "concrete_not_2" (formula "50") (term "0,1,0,0"))
            (rule "concrete_and_1" (formula "50") (term "1,0,0"))
            (rule "replace_known_left" (formula "50") (term "0,1,0,0") (ifseqformula "5"))
            (rule "concrete_not_1" (formula "50") (term "1,0,0"))
            (rule "concrete_or_4" (formula "50") (term "0,0"))
            (rule "sortsDisjointModuloNull" (formula "50") (term "0,0"))
            (rule "replace_known_right" (formula "50") (term "0,0,0") (ifseqformula "62"))
            (rule "concrete_and_2" (formula "50") (term "0,0"))
            (rule "concrete_not_2" (formula "50") (term "0"))
            (rule "concrete_or_1" (formula "50"))
            (rule "true_left" (formula "50"))
            (rule "boxToDiamond" (formula "1") (term "1"))
            (rule "notLeft" (formula "1"))
            (rule "shift_paren_or" (formula "58"))
            (rule "commute_and" (formula "55") (term "0,0"))
            (rule "commute_and" (formula "52") (term "1,0,1"))
            (rule "commute_and" (formula "54") (term "0,0"))
            (rule "commute_and" (formula "53") (term "1,0,1,1"))
            (rule "commute_and" (formula "53") (term "1,0,0,1"))
            (rule "commute_and" (formula "52") (term "0,0,1"))
            (rule "commute_and" (formula "53") (term "0,0,1,1"))
            (rule "commute_and" (formula "53") (term "0,0,0,1"))
            (rule "compound_inequality_comparison_1" (formula "59") (term "1") (inst "#v0=o"))
            (rule "variableDeclarationAssign" (formula "59") (term "1"))
            (rule "variableDeclaration" (formula "59") (term "1") (newnames "o"))
            (rule "remove_parentheses_right" (formula "59") (term "1"))
            (rule "iterated_assignments_0" (formula "59") (term "1"))
            (rule "assignment_array2" (formula "59"))
            (branch "Normal Execution (tab != null)"
               (rule "sequentialToParallel2" (formula "59"))
               (rule "simplifyUpdate2" (formula "59"))
               (rule "simplifyUpdate3" (formula "59") (term "1,0"))
               (rule "applyOnElementary" (formula "59") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "59") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "59") (term "2,0,1,0"))
               (rule "simplifyUpdate1" (formula "59") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "59") (term "0,0,1,0"))
               (rule "applyOnPV" (formula "59") (term "1,0,1,0"))
               (rule "applyOnPV" (formula "59") (term "0,0,1,0"))
               (rule "applyOnRigidTerm" (formula "59") (term "2,0,1,0"))
               (rule "applyOnPV" (formula "59") (term "0,2,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "53") (term "0"))
               (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
               (rule "polySimp_addComm1" (formula "53") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "23"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "23") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "50"))
               (rule "polySimp_rightDist" (formula "50") (term "1,0,0"))
               (rule "mul_literals" (formula "50") (term "0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "16") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "16") (term "0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "30"))
               (rule "mul_literals" (formula "30") (term "1,0,0"))
               (rule "add_literals" (formula "30") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulAssoc" (formula "20") (term "1,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,0,0,0,1,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,0,0,0,1,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_mulAssoc" (formula "20") (term "1,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_gtToGeq" (formula "52") (term "0"))
               (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
               (rule "polySimp_addComm1" (formula "52") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "46"))
               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "46") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,0,0,0,0,0,1,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,1,1,0,0,0,0,1,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,1"))
               (rule "inEqSimp_gtToGeq" (formula "67") (term "0,1,0,0,0,0,0,1,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,1,0,0,0,0,0,1,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,1,0,0,0,0,0,1,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,1,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "67") (term "0,1,0,0,0,0,1,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,1,0,0,0,0,1,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,0,0,1,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,0,1,1,0,0,0,0,1,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,0,1,1,0,0,0,0,1,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "26"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
               (rule "polySimp_addAssoc" (formula "50") (term "0,0"))
               (rule "add_literals" (formula "50") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0,0,0,0,0,0,1,1,1,0,1"))
               (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0,0,0,0,0,0,1,1,1,0,1"))
               (rule "polySimp_addComm1" (formula "26") (term "0"))
               (rule "polySimp_addComm1" (formula "50") (term "0"))
               (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0,0,0,0,0,0,0,1,1,1,0,1"))
               (rule "add_literals" (formula "67") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,1,0,1"))
               (rule "polySimp_addComm1" (formula "67") (term "0,1,0,0,0,0,0,0,0,1,1,1,0,1"))
               (rule "pullOutSelect" (formula "59") (term "0,1,0") (inst "selectSK=arr_0"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
               (rule "eqClose" (formula "1") (term "0,0,0,0"))
               (rule "concrete_and_1" (formula "1") (term "0,0,0"))
               (rule "equalUnique" (formula "1") (term "0,0,0,0"))
               (rule "concrete_not_2" (formula "1") (term "0,0,0"))
               (rule "concrete_or_1" (formula "1") (term "0,0"))
               (rule "ifthenelse_true" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "60") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "assignment" (formula "59") (term "1"))
               (rule "sequentialToParallel2" (formula "59"))
               (rule "simplifyUpdate2" (formula "59"))
               (rule "simplifyUpdate3" (formula "59") (term "1,0"))
               (rule "applyOnElementary" (formula "59") (term "1,0"))
               (rule "applyOnPV" (formula "59") (term "0,1,0"))
               (rule "mod_axiom" (formula "15") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1"))
               (rule "div_literals" (formula "15") (term "0,1,1,1"))
               (rule "times_zero_2" (formula "15") (term "1,1,1"))
               (rule "add_zero_right" (formula "15") (term "1,1"))
               (rule "add_literals" (formula "15") (term "1"))
               (rule "mod_axiom" (formula "14") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1"))
               (rule "div_literals" (formula "14") (term "0,1,1,1"))
               (rule "times_zero_2" (formula "14") (term "1,1,1"))
               (rule "add_zero_right" (formula "14") (term "1,1"))
               (rule "add_literals" (formula "14") (term "1"))
               (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "28") (term "0") (ifseqformula "24"))
               (rule "applyEq" (formula "67") (term "1,0,1,0,1,1,1,0,0,0") (ifseqformula "24"))
               (rule "applyEq" (formula "67") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "38"))
               (rule "applyEq" (formula "67") (term "0,1,0,0,0,0,0") (ifseqformula "24"))
               (rule "applyEq" (formula "16") (term "2,0,1,1,0,0,1,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "38"))
               (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "12") (term "0") (ifseqformula "24"))
               (rule "applyEq" (formula "11") (term "0") (ifseqformula "24"))
               (rule "applyEq" (formula "54") (term "1,1,1,0") (ifseqformula "37"))
               (rule "applyEq" (formula "62") (term "0") (ifseqformula "37"))
               (rule "applyEq" (formula "51") (term "1,0,1,1,0,1") (ifseqformula "37"))
               (rule "applyEq" (formula "20") (term "2,1,1,1,0,0,1,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "37"))
               (rule "applyEq" (formula "52") (term "1,0,1,1,0,1,1") (ifseqformula "37"))
               (rule "applyEq" (formula "20") (term "2,1,1,0,0,0,0,0,1,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "10") (term "0") (ifseqformula "24"))
               (rule "applyEq" (formula "52") (term "1,0,1,1,0,0,1") (ifseqformula "37"))
               (rule "applyEq" (formula "29") (term "0") (ifseqformula "24"))
               (rule "applyEq" (formula "14") (term "0") (ifseqformula "24"))
               (rule "applyEq" (formula "65") (term "1,0,0,1,0,1,1,1,0,0,0") (ifseqformula "24"))
               (rule "polySimp_addComm0" (formula "65") (term "0,1,1,1,0,0,0"))
               (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "15"))
               (rule "add_literals" (formula "30") (term "0"))
               (rule "leq_literals" (formula "30"))
               (rule "true_left" (formula "30"))
               (rule "applyEq" (formula "9") (term "0") (ifseqformula "15"))
               (rule "inEqSimp_homoInEq0" (formula "9"))
               (rule "mul_literals" (formula "9") (term "1,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0"))
               (rule "add_literals" (formula "9") (term "0,0"))
               (rule "applyEq" (formula "32") (term "0") (ifseqformula "15"))
               (rule "leq_literals" (formula "32"))
               (rule "true_left" (formula "32"))
               (rule "applyEq" (formula "47") (term "0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "20") (term "2,0,1,0,1,0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "32") (term "0") (ifseqformula "15"))
               (rule "qeq_literals" (formula "32"))
               (rule "true_left" (formula "32"))
               (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "16") (term "2,0,1,0,1,0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "49") (term "0,1,0,0,0,0,0,0,1") (ifseqformula "24"))
               (rule "applyEq" (formula "21") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
               (rule "applyEq" (formula "16") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
               (rule "applyEq" (formula "20") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "19") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
               (rule "applyEq" (formula "19") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "20") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "51") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
               (rule "applyEq" (formula "20") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
               (rule "applyEq" (formula "50") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
               (rule "applyEq" (formula "18") (term "0,1,0,0,0,0,0") (ifseqformula "24"))
               (rule "applyEqRigid" (formula "40") (term "1,0") (ifseqformula "14"))
               (rule "applyEq" (formula "28") (term "0") (ifseqformula "14"))
               (rule "qeq_literals" (formula "28"))
               (rule "true_left" (formula "28"))
               (rule "applyEqRigid" (formula "61") (term "0,1,0,0,0,0,0") (ifseqformula "14"))
               (rule "applyEq" (formula "16") (term "2,0,1,1,0,0,1,1,0") (ifseqformula "14"))
               (rule "applyEq" (formula "24") (term "1") (ifseqformula "14"))
               (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "14"))
               (rule "leq_literals" (formula "28"))
               (rule "true_left" (formula "28"))
               (rule "applyEqRigid" (formula "20") (term "2,1,1,0,0,0,0,0,1,1,0") (ifseqformula "14"))
               (rule "applyEqRigid" (formula "30") (term "0,1,0") (ifseqformula "14"))
               (rule "jdiv_axiom_inline" (formula "30") (term "1,0"))
               (rule "div_literals" (formula "30") (term "1,1,0"))
               (rule "qeq_literals" (formula "30") (term "0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0"))
               (rule "sub_literals" (formula "30") (term "1,0,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,0"))
               (rule "polySimp_homoEq" (formula "30"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,1,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,1,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,1,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,1,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,1,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,1,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,1,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,1,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,1,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,1,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,1,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,1,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,1,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,1,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,1,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,1,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "bsum_induction_upper_concrete_2" (formula "30") (term "0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "0,0,2,0,0,1,1,0,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "30") (term "1,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,2,0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "14"))
               (rule "leq_literals" (formula "10"))
               (rule "closeFalse" (formula "10"))
            )
            (branch "Null Reference (tab = null)"
               (rule "false_right" (formula "60"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "applyOnPV" (formula "1") (term "0"))
               (rule "simplifyUpdate1" (formula "1") (term "1"))
               (rule "close" (formula "61") (ifseqformula "1"))
            )
            (branch "Index Out of Bounds (tab != null, but i Out of Bounds!)"
               (rule "false_right" (formula "60"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "simplifyUpdate2" (formula "1") (term "1"))
               (rule "applyOnRigidFormula" (formula "60"))
               (rule "simplifyUpdate1" (formula "60") (term "1"))
               (rule "applyOnPV" (formula "60") (term "0"))
               (rule "applyOnRigidFormula" (formula "1") (term "0"))
               (rule "simplifyUpdate1" (formula "1") (term "1,0"))
               (rule "simplifyUpdate1" (formula "1") (term "0,0"))
               (rule "applyOnPV" (formula "1") (term "1,0"))
               (rule "applyOnRigidFormula" (formula "1") (term "1"))
               (rule "simplifyUpdate1" (formula "1") (term "1,1"))
               (rule "applyOnPV" (formula "1") (term "0,1"))
               (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
               (rule "applyOnPV" (formula "1") (term "0,0,0"))
               (rule "commute_or" (formula "1"))
               (rule "ifUnfold" (formula "67") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "67") (term "1") (newnames "x"))
               (rule "compound_inequality_comparison_1" (formula "67") (term "1") (inst "#v0=o"))
               (rule "variableDeclarationAssign" (formula "67") (term "1"))
               (rule "variableDeclaration" (formula "67") (term "1") (newnames "o_1"))
               (rule "remove_parentheses_right" (formula "67") (term "1"))
               (rule "iterated_assignments_0" (formula "67") (term "1"))
               (rule "assignment_array2" (formula "67"))
               (branch "Normal Execution (tab != null)"
                  (rule "sequentialToParallel2" (formula "67"))
                  (rule "simplifyUpdate2" (formula "67"))
                  (rule "simplifyUpdate3" (formula "67") (term "1,0"))
                  (rule "applyOnElementary" (formula "67") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "67") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "67") (term "2,0,1,0"))
                  (rule "simplifyUpdate1" (formula "67") (term "1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "67") (term "0,0,1,0"))
                  (rule "applyOnPV" (formula "67") (term "1,0,1,0"))
                  (rule "applyOnPV" (formula "67") (term "0,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "67") (term "2,0,1,0"))
                  (rule "applyOnPV" (formula "67") (term "0,2,0,1,0"))
                  (rule "pullOutSelect" (formula "67") (term "0,1,0") (inst "selectSK=arr_0"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                  (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                  (rule "eqClose" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                  (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "1") (term "0,0"))
                  (rule "ifthenelse_true" (formula "1") (term "0"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet021000_3" (formula "67") (term "0,1,0"))
                  (rule "assignment" (formula "67") (term "1"))
                  (rule "sequentialToParallel2" (formula "67"))
                  (rule "simplifyUpdate3" (formula "67") (term "1,0"))
                  (rule "applyOnElementary" (formula "67") (term "1,0"))
                  (rule "applyOnPV" (formula "67") (term "0,1,0"))
                  (rule "inequality_comparison_simple" (formula "67") (term "1"))
                  (rule "sequentialToParallel2" (formula "67"))
                  (rule "simplifyUpdate2" (formula "67"))
                  (rule "simplifyUpdate3" (formula "67") (term "1,0"))
                  (rule "applyOnElementary" (formula "67") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "67") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "67") (term "2,0,1,0"))
                  (rule "simplifyUpdate1" (formula "67") (term "1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "67") (term "0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "67") (term "1,0,0,1,0"))
                  (rule "applyOnPV" (formula "67") (term "0,0,0,1,0"))
                  (rule "ifSplit" (formula "67"))
                  (branch "if x true"
                     (rule "simplifyUpdate2" (formula "68"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "applyOnPV" (formula "1") (term "0"))
                     (rule "simplifyUpdate1" (formula "1") (term "1"))
                     (rule "ifthenelse_concrete4" (formula "1"))
                     (rule "boolean_not_equal_2" (formula "1") (term "1"))
                     (rule "concrete_or_4" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "ifUnfold" (formula "68") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "68") (term "1") (newnames "x_1"))
                     (rule "equality_comparison_simple" (formula "68") (term "1"))
                     (rule "eqSymm" (formula "68") (term "0,0,0,1"))
                     (rule "sequentialToParallel2" (formula "68"))
                     (rule "simplifyUpdate2" (formula "68"))
                     (rule "simplifyUpdate3" (formula "68") (term "1,0"))
                     (rule "applyOnElementary" (formula "68") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "68") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "2,0,1,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,0,0,1,0"))
                     (rule "applyOnPV" (formula "68") (term "1,0,0,1,0"))
                     (rule "applyOnPV" (formula "68") (term "0,0,0,1,0"))
                     (rule "eqSymm" (formula "68") (term "0,0,1,0"))
                     (rule "ifSplit" (formula "68"))
                     (branch "if x_1 true"
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "simplifyUpdate2" (formula "69"))
                        (rule "applyOnRigidFormula" (formula "1"))
                        (rule "applyOnPV" (formula "1") (term "0"))
                        (rule "simplifyUpdate1" (formula "1") (term "1"))
                        (rule "ifthenelse_concrete3" (formula "1"))
                        (rule "boolean_not_equal_2" (formula "1") (term "1"))
                        (rule "concrete_or_4" (formula "1"))
                        (rule "variableDeclarationAssign" (formula "69") (term "1"))
                        (rule "variableDeclaration" (formula "69") (term "1") (newnames "oldValue"))
                        (rule "compound_reference_cast_expression" (formula "69") (term "1") (inst "#v=o"))
                        (rule "variableDeclarationAssign" (formula "69") (term "1"))
                        (rule "variableDeclaration" (formula "69") (term "1") (newnames "o_2"))
                        (rule "eval_order_array_access5" (formula "69") (term "1") (inst "#v1=x") (inst "#ar1=o_arr"))
                        (rule "variableDeclarationAssign" (formula "69") (term "1"))
                        (rule "variableDeclaration" (formula "69") (term "1") (newnames "o_arr"))
                        (rule "assignment" (formula "69") (term "1"))
                        (rule "sequentialToParallel2" (formula "69"))
                        (rule "simplifyUpdate3" (formula "69") (term "1,0"))
                        (rule "applyOnElementary" (formula "69") (term "1,0"))
                        (rule "applyOnPV" (formula "69") (term "0,1,0"))
                        (rule "variableDeclarationAssign" (formula "69") (term "1"))
                        (rule "variableDeclaration" (formula "69") (term "1") (newnames "x_2"))
                        (rule "assignmentAdditionInt" (formula "69") (term "1"))
                        (rule "translateJavaAddInt" (formula "69") (term "0,0,1"))
                        (rule "sequentialToParallel2" (formula "69"))
                        (rule "simplifyUpdate3" (formula "69") (term "1,0"))
                        (rule "applyOnElementary" (formula "69") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "69") (term "0,1,0"))
                        (rule "applyOnPV" (formula "69") (term "0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "69") (term "1,0,1,0"))
                        (rule "assignment_array2" (formula "69"))
                        (branch "Normal Execution (o_arr != null)"
                           (rule "sequentialToParallel2" (formula "69"))
                           (rule "simplifyUpdate2" (formula "69"))
                           (rule "simplifyUpdate3" (formula "69") (term "1,0"))
                           (rule "applyOnElementary" (formula "69") (term "1,0"))
                           (rule "applyOnRigidTerm" (formula "69") (term "0,1,0"))
                           (rule "simplifyUpdate1" (formula "69") (term "2,0,1,0"))
                           (rule "simplifyUpdate1" (formula "69") (term "0,0,1,0"))
                           (rule "simplifyUpdate1" (formula "69") (term "1,0,1,0"))
                           (rule "applyOnPV" (formula "69") (term "0,0,1,0"))
                           (rule "applyOnPV" (formula "69") (term "1,0,1,0"))
                           (rule "applyOnRigidTerm" (formula "69") (term "2,0,1,0"))
                           (rule "applyOnPV" (formula "69") (term "0,2,0,1,0"))
                           (rule "pullOutSelect" (formula "69") (term "0,1,0") (inst "selectSK=arr_1"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                           (rule "eqClose" (formula "1") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                           (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "1") (term "0,0"))
                           (rule "ifthenelse_true" (formula "1") (term "0"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000021000_5" (formula "69") (term "0,1,0"))
                           (rule "expand_addJint" (formula "69") (term "0,2,0,1,0"))
                           (rule "polySimp_addComm0" (formula "69") (term "0,0,2,0,1,0"))
                           (rule "expand_moduloInteger" (formula "69") (term "0,2,0,1,0"))
                           (rule "replace_int_MIN" (formula "69") (term "0,0,2,0,1,0"))
                           (rule "replace_int_RANGE" (formula "69") (term "1,1,0,2,0,1,0"))
                           (rule "replace_int_HALFRANGE" (formula "69") (term "0,0,1,0,2,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "69") (term "0,1,0,2,0,1,0"))
                           (rule "add_literals" (formula "69") (term "0,0,1,0,2,0,1,0"))
                           (rule "delete_unnecessary_cast" (formula "69") (term "1"))
                           (rule "instanceof_static_type" (formula "1") (term "0,1,1"))
                           (rule "boolean_equal" (formula "1") (term "1,1"))
                           (rule "concrete_or_3" (formula "1") (term "1"))
                           (rule "true_left" (formula "1"))
                           (rule "sequentialToParallel2" (formula "69"))
                           (rule "simplifyUpdate2" (formula "69"))
                           (rule "simplifyUpdate3" (formula "69") (term "1,0"))
                           (rule "applyOnElementary" (formula "69") (term "1,0"))
                           (rule "applyOnPV" (formula "69") (term "0,1,0"))
                           (rule "eval_order_array_access2" (formula "69") (term "1") (inst "#v0=x") (inst "#ar1=o_arr"))
                           (rule "variableDeclarationAssign" (formula "69") (term "1"))
                           (rule "variableDeclaration" (formula "69") (term "1") (newnames "o_arr_1"))
                           (rule "assignment" (formula "69") (term "1"))
                           (rule "sequentialToParallel2" (formula "69"))
                           (rule "simplifyUpdate3" (formula "69") (term "1,0"))
                           (rule "applyOnElementary" (formula "69") (term "1,0"))
                           (rule "applyOnPV" (formula "69") (term "0,1,0"))
                           (rule "variableDeclarationAssign" (formula "69") (term "1"))
                           (rule "variableDeclaration" (formula "69") (term "1") (newnames "x_3"))
                           (rule "assignmentAdditionInt" (formula "69") (term "1"))
                           (rule "translateJavaAddInt" (formula "69") (term "0,0,1"))
                           (rule "sequentialToParallel2" (formula "69"))
                           (rule "simplifyUpdate3" (formula "69") (term "1,0"))
                           (rule "applyOnElementary" (formula "69") (term "1,0"))
                           (rule "applyOnRigidTerm" (formula "69") (term "0,1,0"))
                           (rule "simplifyUpdate1" (formula "69") (term "1,0,1,0"))
                           (rule "applyOnPV" (formula "69") (term "0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "32"))
                           (rule "mul_literals" (formula "32") (term "1,0,0"))
                           (rule "add_literals" (formula "32") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "52"))
                           (rule "polySimp_rightDist" (formula "52") (term "1,0,0"))
                           (rule "mul_literals" (formula "52") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "52") (term "0,0"))
                           (rule "add_literals" (formula "52") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "52") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "28"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "22") (term "1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "48"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "48") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,0,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "22") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,1,1,1,0,0,0,0,1,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,0,0,0,0,0,1,1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "69") (term "1,0,0,1,0,0,0,0,0,0,0,1,1,1,0,1"))
                           (rule "mul_literals" (formula "69") (term "0,1,0,0,1,0,0,0,0,0,0,0,1,1,1,0,1"))
                           (rule "inEqSimp_gtToGeq" (formula "69") (term "0,1,0,0,0,0,0,1,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,1,0,0,0,0,0,1,1,1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,1,1,0,0,0,0,0,1,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,1,1,1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "69") (term "0,1,0,0,0,0,1,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,1,0,0,0,0,1,1,1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "2") (term "0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_gtToGeq" (formula "18") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_gtToGeq" (formula "54") (term "0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,0,1,1,0,0,0,0,1,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,0,1,1,0,0,0,0,1,1,1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,1,0,0,0,1,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,1,0,0,0,1,1,1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,1,0,0,1,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
                           (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "69") (term "0,0,1,0,0,0,0,0,0,0,1,1,1,0,1"))
                           (rule "add_literals" (formula "69") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,1,0,1"))
                           (rule "polySimp_addComm1" (formula "69") (term "0,1,0,0,0,0,0,0,0,1,1,1,0,1"))
                           (rule "assignment_to_reference_array_component" (formula "69"))
                           (branch "Normal Execution (o_arr_1 != null)"
                              (rule "sequentialToParallel2" (formula "69"))
                              (rule "simplifyUpdate2" (formula "69"))
                              (rule "simplifyUpdate3" (formula "69") (term "1,0"))
                              (rule "applyOnElementary" (formula "69") (term "1,0"))
                              (rule "applyOnRigidTerm" (formula "69") (term "0,1,0"))
                              (rule "simplifyUpdate1" (formula "69") (term "1,0,1,0"))
                              (rule "simplifyUpdate1" (formula "69") (term "2,0,1,0"))
                              (rule "simplifyUpdate1" (formula "69") (term "3,0,1,0"))
                              (rule "simplifyUpdate1" (formula "69") (term "0,0,1,0"))
                              (rule "applyOnPV" (formula "69") (term "1,0,1,0"))
                              (rule "applyOnPV" (formula "69") (term "3,0,1,0"))
                              (rule "applyOnPV" (formula "69") (term "0,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "69") (term "2,0,1,0"))
                              (rule "applyOnPV" (formula "69") (term "0,2,0,1,0"))
                              (rule "assignment" (formula "69") (term "1"))
                              (rule "sequentialToParallel2" (formula "69"))
                              (rule "simplifyUpdate2" (formula "69"))
                              (rule "simplifyUpdate3" (formula "69") (term "1,0"))
                              (rule "mod_axiom" (formula "16") (term "1,1"))
                              (rule "div_literals" (formula "16") (term "0,0,1,1,1"))
                              (rule "mul_literals" (formula "16") (term "0,1,1,1"))
                              (rule "mul_literals" (formula "16") (term "1,1,1"))
                              (rule "add_zero_right" (formula "16") (term "1,1"))
                              (rule "add_literals" (formula "16") (term "1"))
                              (rule "mod_axiom" (formula "17") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
                              (rule "div_literals" (formula "17") (term "0,1,1,1"))
                              (rule "times_zero_2" (formula "17") (term "1,1,1"))
                              (rule "add_zero_right" (formula "17") (term "1,1"))
                              (rule "add_literals" (formula "17") (term "1"))
                              (rule "assignment" (formula "69") (term "1"))
                              (rule "sequentialToParallel2" (formula "69"))
                              (rule "simplifyUpdate2" (formula "69"))
                              (rule "simplifyUpdate3" (formula "69") (term "1,0"))
                              (rule "applyOnElementary" (formula "69") (term "1,0"))
                              (rule "applyOnPV" (formula "69") (term "0,1,0"))
                              (rule "blockBreakNoLabel" (formula "69") (term "1"))
                              (rule "applyEq" (formula "2") (term "0,1") (ifseqformula "26"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "26"))
                              (rule "applyEq" (formula "22") (term "2,1,1,1,0,0,1,1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "1") (term "1") (ifseqformula "40"))
                              (rule "applyEq" (formula "54") (term "1,0,1,1,0,1") (ifseqformula "40"))
                              (rule "applyEq" (formula "55") (term "1,0,1,1,0,0,1") (ifseqformula "40"))
                              (rule "applyEq" (formula "18") (term "2,0,1,1,0,0,1,1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "30") (term "0") (ifseqformula "26"))
                              (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "40"))
                              (rule "applyEq" (formula "65") (term "0") (ifseqformula "40"))
                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "26"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "26"))
                              (rule "applyEq" (formula "57") (term "1,1,1,0") (ifseqformula "40"))
                              (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "22") (term "2,1,1,0,0,0,0,0,1,1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "31") (term "0") (ifseqformula "26"))
                              (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "55") (term "1,0,1,1,0,1,1") (ifseqformula "40"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "26"))
                              (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "40"))
                              (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "17"))
                              (rule "add_literals" (formula "32") (term "0"))
                              (rule "leq_literals" (formula "32"))
                              (rule "true_left" (formula "32"))
                              (rule "applyEq" (formula "22") (term "2,0,1,0,1,0,1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "28") (term "0,0,1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "50") (term "0,1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "18") (term "2,0,1,0,1,0,1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "46") (term "0,1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq0" (formula "11"))
                              (rule "mul_literals" (formula "11") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0"))
                              (rule "add_literals" (formula "11") (term "0,0"))
                              (rule "applyEq" (formula "34") (term "0") (ifseqformula "17"))
                              (rule "leq_literals" (formula "34"))
                              (rule "true_left" (formula "34"))
                              (rule "applyEq" (formula "34") (term "0") (ifseqformula "17"))
                              (rule "qeq_literals" (formula "34"))
                              (rule "true_left" (formula "34"))
                              (rule "applyEq" (formula "20") (term "0,1,0,0,0,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "21") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "18") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "21") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "22") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "52") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "53") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "51") (term "0,1,0,0,0,0,0,0,1") (ifseqformula "26"))
                              (rule "applyEq" (formula "23") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "22") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "22") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "64") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "64") (term "0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "36"))
                              (rule "applyEq" (formula "64") (term "1,0,0,1,0,1,1,1,0,0,0,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "64") (term "1,0,1,0,1,1,1,0,0,0,0,0") (ifseqformula "26"))
                              (rule "polySimp_addComm0" (formula "64") (term "0,1,1,1,0,0,0,0,0"))
                              (rule "applyEq" (formula "57") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "26") (term "1") (ifseqformula "16"))
                              (rule "applyEqRigid" (formula "2") (term "0,1") (ifseqformula "16"))
                              (rule "inEqSimp_commuteLeq" (formula "2") (term "1"))
                              (rule "applyEqRigid" (formula "22") (term "2,1,1,1,0,0,1,1,0") (ifseqformula "16"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "16"))
                              (rule "leq_literals" (formula "12"))
                              (rule "closeFalse" (formula "12"))
                           )
                           (branch "Null Reference (o_arr_1 = null)"
                              (rule "false_right" (formula "70"))
                              (rule "simplifyUpdate2" (formula "1"))
                              (rule "applyOnRigidFormula" (formula "1"))
                              (rule "applyOnPV" (formula "1") (term "0"))
                              (rule "simplifyUpdate1" (formula "1") (term "1"))
                              (rule "close" (formula "64") (ifseqformula "1"))
                           )
                           (branch "Index Out of Bounds (o_arr_1 != null, but x_3 Out of Bounds!)"
                              (rule "false_right" (formula "70"))
                              (rule "simplifyUpdate2" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "simplifyUpdate2" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "applyOnRigidFormula" (formula "1"))
                              (rule "simplifyUpdate2" (formula "1") (term "1"))
                              (rule "applyOnRigidFormula" (formula "62"))
                              (rule "simplifyUpdate1" (formula "62") (term "1"))
                              (rule "applyOnPV" (formula "62") (term "0"))
                              (rule "applyOnRigidFormula" (formula "1") (term "0"))
                              (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                              (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                              (rule "applyOnPV" (formula "1") (term "1,0"))
                              (rule "applyOnRigidFormula" (formula "1") (term "1"))
                              (rule "applyOnPV" (formula "1") (term "0,1"))
                              (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                              (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                              (rule "applyOnPV" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "mod_axiom" (formula "17") (term "1,1"))
                              (rule "div_literals" (formula "17") (term "0,0,1,1,1"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
                              (rule "mul_literals" (formula "17") (term "1,1,1"))
                              (rule "add_zero_right" (formula "17") (term "1,1"))
                              (rule "add_literals" (formula "17") (term "1"))
                              (rule "mod_axiom" (formula "18") (term "1,1"))
                              (rule "div_literals" (formula "18") (term "0,0,1,1,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                              (rule "mul_literals" (formula "18") (term "1,1,1"))
                              (rule "add_zero_right" (formula "18") (term "1,1"))
                              (rule "add_literals" (formula "18") (term "1"))
                              (rule "applyEq" (formula "38") (term "0,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "23") (term "2,1,1,1,0,0,1,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "32") (term "0") (ifseqformula "27"))
                              (rule "applyEq" (formula "31") (term "0") (ifseqformula "27"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "27"))
                              (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                              (rule "applyEq" (formula "19") (term "2,0,1,1,0,0,1,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "27"))
                              (rule "applyEq" (formula "2") (term "1") (ifseqformula "41"))
                              (rule "applyEq" (formula "65") (term "0") (ifseqformula "41"))
                              (rule "applyEq" (formula "58") (term "1,1,1,0") (ifseqformula "41"))
                              (rule "applyEq" (formula "23") (term "2,1,1,0,0,0,0,0,1,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "41"))
                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "27"))
                              (rule "applyEq" (formula "55") (term "1,0,1,1,0,0,1") (ifseqformula "40"))
                              (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "54") (term "1,0,1,1,0,1") (ifseqformula "40"))
                              (rule "applyEq" (formula "55") (term "1,0,1,1,0,1,1") (ifseqformula "40"))
                              (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "40"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "27"))
                              (rule "applyEq" (formula "3") (term "0,1") (ifseqformula "27"))
                              (rule "applyEq" (formula "36") (term "0") (ifseqformula "18"))
                              (rule "leq_literals" (formula "36"))
                              (rule "true_left" (formula "36"))
                              (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "18"))
                              (rule "add_literals" (formula "33") (term "0"))
                              (rule "leq_literals" (formula "33"))
                              (rule "true_left" (formula "33"))
                              (rule "applyEq" (formula "46") (term "0,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "50") (term "0,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "29") (term "0,0,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "23") (term "2,0,1,0,1,0,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "18"))
                              (rule "inEqSimp_homoInEq0" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "add_literals" (formula "12") (term "0,0"))
                              (rule "applyEq" (formula "26") (term "0,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "19") (term "2,0,1,0,1,0,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "35") (term "0") (ifseqformula "18"))
                              (rule "qeq_literals" (formula "35"))
                              (rule "true_left" (formula "35"))
                              (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "52") (term "0,1,0,0,0,0,0,0,1") (ifseqformula "27"))
                              (rule "applyEq" (formula "23") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "19") (term "0,0,1,0,0,0,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "23") (term "0,0,1,0,0,0,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "22") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "22") (term "0,0,1,0,0,0,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "24") (term "0,0,1,0,0,0,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "23") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "21") (term "0,1,0,0,0,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "54") (term "0,0,1,0,0,0,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "53") (term "0,0,1,0,0,0,0,0") (ifseqformula "27"))
                              (rule "applyEqRigid" (formula "35") (term "0,1,0") (ifseqformula "17"))
                              (rule "jdiv_axiom_inline" (formula "35") (term "1,0"))
                              (rule "div_literals" (formula "35") (term "1,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,0,2,1,0"))
                              (rule "qeq_literals" (formula "35") (term "0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0"))
                              (rule "polySimp_homoEq" (formula "35"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "bsum_induction_upper_concrete_2" (formula "35") (term "0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,1,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "1,0,0,1,0"))
                              (rule "sub_literals" (formula "35") (term "0,0,2,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "35") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,2,0,0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                              (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "17"))
                              (rule "qeq_literals" (formula "31"))
                              (rule "true_left" (formula "31"))
                              (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "17"))
                              (rule "leq_literals" (formula "13"))
                              (rule "closeFalse" (formula "13"))
                           )
                           (branch "Array Store Exception (incompatible dynamic element type of o_arr_1 and _value)"
                              (rule "false_right" (formula "70"))
                              (rule "simplifyUpdate2" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "simplifyUpdate2" (formula "1"))
                              (rule "simplifyUpdate2" (formula "2"))
                              (rule "andLeft" (formula "1"))
                              (rule "simplifyUpdate2" (formula "2"))
                              (rule "notLeft" (formula "3"))
                              (rule "andLeft" (formula "1"))
                              (rule "simplifyUpdate2" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "applyOnRigidFormula" (formula "2"))
                              (rule "applyOnPV" (formula "2") (term "0"))
                              (rule "simplifyUpdate1" (formula "2") (term "1"))
                              (rule "applyOnRigidFormula" (formula "64"))
                              (rule "simplifyUpdate1" (formula "64") (term "0"))
                              (rule "simplifyUpdate1" (formula "64") (term "1"))
                              (rule "applyOnPV" (formula "64") (term "0"))
                              (rule "applyOnPV" (formula "64") (term "1"))
                              (rule "applyOnRigidFormula" (formula "1"))
                              (rule "simplifyUpdate1" (formula "1") (term "0"))
                              (rule "simplifyUpdate1" (formula "1") (term "1"))
                              (rule "applyOnPV" (formula "1") (term "0"))
                              (rule "applyOnRigidFormula" (formula "63"))
                              (rule "simplifyUpdate1" (formula "63") (term "1"))
                              (rule "applyOnPV" (formula "63") (term "0"))
                              (rule "applyOnRigidTerm" (formula "1") (term "1"))
                              (rule "applyOnPV" (formula "1") (term "0,1"))
                              (rule "array_store_known_dynamic_array_type" (formula "63") (ifseqformula "21"))
                              (rule "instanceof_static_type" (formula "63") (term "0,1"))
                              (rule "boolean_equal" (formula "63") (term "1"))
                              (rule "concrete_or_3" (formula "63"))
                              (rule "closeTrue" (formula "63"))
                           )
                        )
                        (branch "Null Reference (o_arr = null)"
                           (rule "false_right" (formula "70"))
                           (rule "simplifyUpdate2" (formula "1"))
                           (rule "applyOnRigidFormula" (formula "1"))
                           (rule "applyOnPV" (formula "1") (term "0"))
                           (rule "simplifyUpdate1" (formula "1") (term "1"))
                           (rule "close" (formula "64") (ifseqformula "1"))
                        )
                        (branch "Index Out of Bounds (o_arr != null, but x_2 Out of Bounds!)"
                           (rule "false_right" (formula "70"))
                           (rule "simplifyUpdate2" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "simplifyUpdate2" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "applyOnRigidFormula" (formula "1"))
                           (rule "simplifyUpdate2" (formula "1") (term "1"))
                           (rule "applyOnRigidFormula" (formula "62"))
                           (rule "simplifyUpdate1" (formula "62") (term "1"))
                           (rule "applyOnPV" (formula "62") (term "0"))
                           (rule "applyOnRigidFormula" (formula "1") (term "0"))
                           (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                           (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                           (rule "applyOnPV" (formula "1") (term "1,0"))
                           (rule "applyOnRigidFormula" (formula "1") (term "1"))
                           (rule "applyOnPV" (formula "1") (term "0,1"))
                           (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                           (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                           (rule "applyOnPV" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "29"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "56") (term "0"))
                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "56") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,0,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "23") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "53"))
                           (rule "polySimp_rightDist" (formula "53") (term "1,0,0"))
                           (rule "mul_literals" (formula "53") (term "0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "55") (term "0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "33"))
                           (rule "mul_literals" (formula "33") (term "1,0,0"))
                           (rule "add_literals" (formula "33") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "49"))
                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "49") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "23") (term "1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_gtToGeq" (formula "19") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "53") (term "0,0"))
                           (rule "add_literals" (formula "53") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "53") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "mod_axiom" (formula "17") (term "1,1"))
                           (rule "div_literals" (formula "17") (term "0,0,1,1,1"))
                           (rule "mul_literals" (formula "17") (term "0,1,1,1"))
                           (rule "times_zero_2" (formula "17") (term "1,1,1"))
                           (rule "add_zero_right" (formula "17") (term "1,1"))
                           (rule "add_literals" (formula "17") (term "1"))
                           (rule "mod_axiom" (formula "18") (term "1,1"))
                           (rule "div_literals" (formula "18") (term "0,0,1,1,1"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                           (rule "times_zero_2" (formula "18") (term "1,1,1"))
                           (rule "add_zero_right" (formula "18") (term "1,1"))
                           (rule "add_literals" (formula "18") (term "1"))
                           (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "41"))
                           (rule "applyEq" (formula "55") (term "1,0,1,1,0,1") (ifseqformula "41"))
                           (rule "applyEq" (formula "32") (term "0") (ifseqformula "27"))
                           (rule "applyEq" (formula "2") (term "1") (ifseqformula "41"))
                           (rule "applyEq" (formula "58") (term "1,1,1,0") (ifseqformula "41"))
                           (rule "applyEq" (formula "56") (term "1,0,1,1,0,1,1") (ifseqformula "41"))
                           (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "41"))
                           (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "23") (term "2,1,1,1,0,0,1,1,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "27"))
                           (rule "applyEq" (formula "23") (term "2,1,1,0,0,0,0,0,1,1,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "55") (term "1,0,1,1,0,0,1") (ifseqformula "40"))
                           (rule "applyEq" (formula "14") (term "0") (ifseqformula "27"))
                           (rule "applyEq" (formula "65") (term "0") (ifseqformula "40"))
                           (rule "applyEq" (formula "13") (term "0") (ifseqformula "27"))
                           (rule "applyEq" (formula "3") (term "0,1") (ifseqformula "27"))
                           (rule "applyEq" (formula "19") (term "2,0,1,1,0,0,1,1,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "27"))
                           (rule "applyEq" (formula "38") (term "0,1,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "31") (term "0") (ifseqformula "27"))
                           (rule "applyEq" (formula "36") (term "0") (ifseqformula "18"))
                           (rule "leq_literals" (formula "36"))
                           (rule "true_left" (formula "36"))
                           (rule "applyEq" (formula "23") (term "2,0,1,0,1,0,1,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "36") (term "0") (ifseqformula "18"))
                           (rule "qeq_literals" (formula "36"))
                           (rule "true_left" (formula "36"))
                           (rule "applyEq" (formula "50") (term "0,1,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "46") (term "0,1,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq0" (formula "12"))
                           (rule "mul_literals" (formula "12") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "12") (term "0"))
                           (rule "add_literals" (formula "12") (term "0,0"))
                           (rule "applyEq" (formula "19") (term "2,0,1,0,1,0,1,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "18"))
                           (rule "add_literals" (formula "33") (term "0"))
                           (rule "leq_literals" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "applyEq" (formula "29") (term "0,0,1,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "26") (term "0,1,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "22") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "52") (term "0,1,0,0,0,0,0,0,1") (ifseqformula "27"))
                           (rule "applyEq" (formula "23") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "22") (term "0,0,1,0,0,0,0,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "23") (term "0,0,1,0,0,0,0,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "54") (term "0,0,1,0,0,0,0,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "24") (term "0,0,1,0,0,0,0,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "53") (term "0,0,1,0,0,0,0,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "23") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "19") (term "0,0,1,0,0,0,0,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "21") (term "0,1,0,0,0,0,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "58") (term "0") (ifseqformula "2"))
                           (rule "applyEq" (formula "32") (term "0") (ifseqformula "17"))
                           (rule "leq_literals" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "applyEq" (formula "27") (term "1") (ifseqformula "17"))
                           (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "17"))
                           (rule "qeq_literals" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "17"))
                           (rule "leq_literals" (formula "13"))
                           (rule "closeFalse" (formula "13"))
                        )
                     )
                     (branch "if x_1 false"
                        (rule "false_to_not_true" (formula "1") (term "1"))
                        (rule "simplifyUpdate2" (formula "69"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "applyOnRigidFormula" (formula "60"))
                        (rule "applyOnPV" (formula "60") (term "0"))
                        (rule "simplifyUpdate1" (formula "60") (term "1"))
                        (rule "ifthenelse_concrete3" (formula "60"))
                        (rule "boolean_not_equal_2" (formula "60") (term "1"))
                        (rule "concrete_or_4" (formula "60"))
                        (rule "unusedLabel" (formula "69") (term "1"))
                         (builtin "Use Operation Contract" (formula "69") (newnames "heapBefore_nextKeyIndex,result_2,exc_3") (contract "java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap::nextKeyIndex(int,int)].JML normal_behavior operation contract.0"))
                        (branch "Post (nextKeyIndex)"
                           (rule "expand_inInt" (formula "60") (term "1,0,1,1"))
                           (rule "replace_int_MAX" (formula "60") (term "1,0,1,0,1,1"))
                           (rule "replace_int_MIN" (formula "60") (term "0,1,1,0,1,1"))
                           (rule "simplifyUpdate2" (formula "60"))
                           (rule "simplifyUpdate2" (formula "60") (term "1"))
                           (rule "andLeft" (formula "60"))
                           (rule "simplifyUpdate2" (formula "60"))
                           (rule "andLeft" (formula "61"))
                           (rule "simplifyUpdate2" (formula "62"))
                           (rule "andLeft" (formula "60"))
                           (rule "andLeft" (formula "61"))
                           (rule "simplifyUpdate2" (formula "61"))
                           (rule "simplifyUpdate2" (formula "62"))
                           (rule "andLeft" (formula "60"))
                           (rule "eqSymm" (formula "62") (term "0,0,1,1"))
                           (rule "translateJavaAddInt" (formula "62") (term "0,0,1"))
                           (rule "translateJavaAddInt" (formula "62") (term "0,1,0,1,1"))
                           (rule "translateJavaAddInt" (formula "62") (term "0,0,0,1,1"))
                           (rule "applyOnRigidFormula" (formula "63"))
                           (rule "applyOnPV" (formula "63") (term "0"))
                           (rule "applyOnRigidFormula" (formula "62"))
                           (rule "applyOnRigidFormula" (formula "62") (term "0"))
                           (rule "simplifyUpdate1" (formula "62") (term "1,0"))
                           (rule "simplifyUpdate1" (formula "62") (term "0,0"))
                           (rule "applyOnPV" (formula "62") (term "1,0"))
                           (rule "applyOnRigidFormula" (formula "62") (term "1"))
                           (rule "simplifyUpdate2" (formula "62") (term "1,1"))
                           (rule "applyOnRigidTerm" (formula "62") (term "0,0"))
                           (rule "applyOnPV" (formula "62") (term "0,0,0"))
                           (rule "simplifyUpdate1" (formula "62") (term "1,0,0"))
                           (rule "applyOnRigidFormula" (formula "62") (term "0,1"))
                           (rule "simplifyUpdate2" (formula "62") (term "0,0,1"))
                           (rule "applyOnRigidFormula" (formula "62") (term "1,0,1"))
                           (rule "simplifyUpdate1" (formula "62") (term "1,1,0,1"))
                           (rule "simplifyUpdate1" (formula "62") (term "0,1,0,1"))
                           (rule "applyOnPV" (formula "62") (term "1,1,0,1"))
                           (rule "applyOnRigidFormula" (formula "62") (term "0,0,1"))
                           (rule "simplifyUpdate1" (formula "62") (term "1,0,0,1"))
                           (rule "applyOnRigidTerm" (formula "62") (term "0,1,0,1"))
                           (rule "simplifyUpdate1" (formula "62") (term "1,0,1,0,1"))
                           (rule "applyOnPV" (formula "62") (term "0,0,1,0,1"))
                           (rule "applyOnRigidTerm" (formula "62") (term "0,0,0,1"))
                           (rule "simplifyUpdate1" (formula "62") (term "1,0,0,0,1"))
                           (rule "applyOnPV" (formula "62") (term "0,0,0,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "61"))
                           (rule "inEqSimp_commuteGeq" (formula "62") (term "1,0,1"))
                           (rule "assignment" (formula "74") (term "1"))
                           (rule "sequentialToParallel2" (formula "74"))
                           (rule "simplifyUpdate2" (formula "74"))
                           (rule "simplifyUpdate3" (formula "74") (term "1,0"))
                           (rule "expand_addJint" (formula "62") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "62") (term "0,0,0"))
                           (rule "expand_addJint" (formula "62") (term "0,0,0,1"))
                           (rule "polySimp_addComm0" (formula "62") (term "0,0,0,0,1"))
                           (rule "expand_addJint" (formula "62") (term "1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "62") (term "0,1,1,0,1"))
                           (rule "expand_moduloInteger" (formula "62") (term "0,0"))
                           (rule "replace_int_RANGE" (formula "62") (term "1,1,0,0"))
                           (rule "replace_int_HALFRANGE" (formula "62") (term "0,0,1,0,0"))
                           (rule "replace_int_MIN" (formula "62") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "62") (term "0,1,0,0"))
                           (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                           (rule "expand_moduloInteger" (formula "62") (term "0,0,0,1"))
                           (rule "replace_int_HALFRANGE" (formula "62") (term "0,0,1,0,0,0,1"))
                           (rule "replace_int_MIN" (formula "62") (term "0,0,0,0,1"))
                           (rule "replace_int_RANGE" (formula "62") (term "1,1,0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "62") (term "0,1,0,0,0,1"))
                           (rule "add_literals" (formula "62") (term "0,0,1,0,0,0,1"))
                           (rule "expand_moduloInteger" (formula "62") (term "1,1,0,1"))
                           (rule "replace_int_MIN" (formula "62") (term "0,1,1,0,1"))
                           (rule "replace_int_HALFRANGE" (formula "62") (term "0,0,1,1,1,0,1"))
                           (rule "replace_int_RANGE" (formula "62") (term "1,1,1,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "62") (term "0,1,1,1,0,1"))
                           (rule "add_literals" (formula "62") (term "0,0,1,1,1,0,1"))
                           (rule "tryEmpty" (formula "74") (term "1"))
                           (rule "methodCallEmpty" (formula "74") (term "1"))
                           (rule "emptyModality" (formula "74") (term "1"))
                           (rule "applyOnRigidFormula" (formula "74"))
                           (rule "simplifyUpdate2" (formula "74") (term "0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,1"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,1"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,1"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,0,1"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,0,1"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,1"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,1,1"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,1,1"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,0,0"))
                           (rule "boolean_not_equal_2" (formula "74") (term "0,0"))
                           (rule "concrete_impl_2" (formula "74") (term "0"))
                           (rule "concrete_and_1" (formula "74"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,1"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,1,1"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,1,1"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,1"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,0"))
                           (rule "boolean_not_equal_2" (formula "74") (term "0,0"))
                           (rule "concrete_impl_2" (formula "74") (term "0"))
                           (rule "concrete_and_1" (formula "74"))
                           (rule "impRight" (formula "74"))
                           (rule "notLeft" (formula "1"))
                           (rule "orRight" (formula "65"))
                           (rule "simplifyUpdate2" (formula "65"))
                           (rule "simplifyUpdate2" (formula "66"))
                           (rule "polySimp_homoEq" (formula "62") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,1"))
                           (rule "mul_literals" (formula "62") (term "0,1,0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,1"))
                           (rule "polySimp_addComm0" (formula "62") (term "0,0,0,0,1"))
                           (rule "applyOnRigidFormula" (formula "76") (term "1"))
                           (rule "simplifyUpdate1" (formula "76") (term "1,1"))
                           (rule "simplifyUpdate1" (formula "76") (term "0,1"))
                           (rule "applyOnPV" (formula "76") (term "1,1"))
                           (rule "applyOnRigidFormula" (formula "76") (term "0"))
                           (rule "simplifyUpdate2" (formula "76") (term "1,0"))
                           (rule "simplifyUpdate2" (formula "76") (term "0,0"))
                           (rule "applyOnRigidFormula" (formula "65"))
                           (rule "simplifyUpdate1" (formula "65") (term "1"))
                           (rule "applyOnPV" (formula "65") (term "0"))
                           (rule "boolean_not_equal_2" (formula "65"))
                           (rule "false_right" (formula "65"))
                           (rule "applyOnRigidFormula" (formula "65"))
                           (rule "simplifyUpdate1" (formula "65") (term "1"))
                           (rule "applyOnPV" (formula "65") (term "0"))
                           (rule "boolean_not_equal_2" (formula "65"))
                           (rule "false_right" (formula "65"))
                           (rule "applyOnRigidTerm" (formula "74") (term "0,1"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,0,1"))
                           (rule "applyOnPV" (formula "74") (term "0,0,1"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,0,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "21") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "54") (term "0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "21") (term "1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_gtToGeq" (formula "17") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "31"))
                           (rule "mul_literals" (formula "31") (term "1,0,0"))
                           (rule "add_literals" (formula "31") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "51"))
                           (rule "inEqSimp_ltToLeq" (formula "47"))
                           (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "47") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "53") (term "0"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "53") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "62") (term "0"))
                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                           (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "polySimp_addComm1" (formula "62") (term "0,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "1,0,1"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,1,0,1"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,1,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                           (rule "add_literals" (formula "51") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "51") (term "0"))
                           (rule "polySimp_addAssoc" (formula "62") (term "0,0,0"))
                           (rule "add_literals" (formula "62") (term "0,0,0,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "0,1,0,1"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,1,0,1"))
                           (rule "applyOnPV" (formula "74") (term "1,0,1,0,1"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,1,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,0,0,1,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,0,0,1,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,1,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,0,1,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,0,1,0,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "0,0,1,0,1"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,0,0,1,0,1"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,0,1,0,1"))
                           (rule "applyOnPV" (formula "74") (term "1,0,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "74") (term "0,0,1,0,1"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,0,1,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,0,0,0,1,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,0,0,0,1,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,0,0,1,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,1,0,0,1,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,1,0,0,1,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,0,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,0,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,1,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,1,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,0,1,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,0,1,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,1,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,0,0,1,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,0,1,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,1,0,1,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,1,0,1,0,0"))
                           (rule "precOfInt" (formula "74") (term "1"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,0,0,1,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,0,0,0,0,1,0"))
                           (rule "applyOnPV" (formula "74") (term "1,0,0,0,0,1,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,0,0,0,1,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,1,0,0,0,1,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "1,1,0,0,1,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "2,1,1,0,0,1,0"))
                           (rule "applyOnPV" (formula "74") (term "0,1,1,0,0,1,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,1,1,0,0,1,0"))
                           (rule "eqSymm" (formula "74") (term "1,0,0,1,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,0,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,1,0,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,0,0,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,1,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,1,1,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,1,1,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,0,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,1,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,0,1,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,0,1,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,0,1,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,1,0,1,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,1,0,1,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,1,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,0,0,1,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,0,0,1,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,1,0,0,1,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,1,0,1,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,1,0,1,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,1,1,0,1,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,1,1,0,1,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,1,1,0,1,0,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "1,0,0,1,1,0,1"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,1,0,0,1,1,0,1"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,1,0,0,1,1,0,1"))
                           (rule "applyOnPV" (formula "74") (term "1,1,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "74") (term "1,0,0,1,1,0,1"))
                           (rule "applyOnRigidTerm" (formula "74") (term "1,0,0,1,0,1,1"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,1,0,0,1,0,1,1"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,1,0,0,1,0,1,1"))
                           (rule "applyOnPV" (formula "74") (term "1,1,0,0,1,0,1,1"))
                           (rule "polySimp_addComm0" (formula "74") (term "1,0,0,1,0,1,1"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,1,0,0,0,1,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "1,1,0,0,1,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "2,1,1,0,0,1,0"))
                           (rule "applyOnPV" (formula "74") (term "0,1,1,0,0,1,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,1,1,0,0,1,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,1,0,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,1,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,0,1,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,1,0,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,0,1,0,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,0,1,0,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,0,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,0,0,0,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,0,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,1,0,0,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,1,1,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,1,1,0,0,0,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "1,1,0,1,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,1,1,0,1,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "2,1,1,0,1,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,1,1,0,1,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,1,1,0,1,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,1,1,0,1,0,0,0"))
                           (rule "eqSymm" (formula "74") (term "1,0,1,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,0,0,1,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,1,0,0,1,0,0,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "1,1,0,0,1,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,1,1,0,0,1,0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,1,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "74") (term "0,0,0,1,1,0,1"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,1,0,1,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,0,1,0,1,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,0,0,1,0,1,0,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "0,1,1,0,1,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "2,0,1,1,0,1,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,0,1,1,0,1,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,1,1,0,1,0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,0,1,1,0,1,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,0,1,1,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,0,1,1"))
                           (rule "polySimp_addComm0" (formula "74") (term "0,0,0,1,0,1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "74") (term "0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,1,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,1,1,0,0,0,1,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,1,1,0,0,0,1,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,1,1,0,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,0,1,1,0,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,0,1,1,0,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,0,0,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,0,0,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,1,0,0,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,1,0,0,0,0,0,0,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "0,1,0,0,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,0,1,0,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,1,0,0,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,1,1,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,0,0,1,1,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,0,0,1,1,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,1,1,1,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,0,1,1,1,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,0,1,1,1,0,0,0,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "1,1,0,1,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "2,1,1,0,1,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,1,1,0,1,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,1,1,0,1,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,1,1,0,1,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,1,1,0,1,0,0,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "1,1,0,0,1,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,1,1,0,0,1,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,1,1,0,0,1,0,0,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "1,0,0,1,1,0,1"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,1,0,0,1,1,0,1"))
                           (rule "applyOnPV" (formula "74") (term "0,1,0,0,1,1,0,1"))
                           (rule "polySimp_addComm1" (formula "74") (term "0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "74") (term "0,0,0,1,1,0,1"))
                           (rule "inEqSimp_gtToGeq" (formula "74") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,1,0,0,0,0,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "1,0,0,1,0,1,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "2,1,0,0,1,0,1,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,1,0,0,1,0,1,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,1,0,0,1,0,1,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,1,0,0,1,0,1,0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,1,0,0,1,0,1,0,0"))
                           (rule "eqSymm" (formula "74") (term "0,0,1,0,1,0,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "1,0,0,1,0,1,1"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,1,0,0,1,0,1,1"))
                           (rule "applyOnPV" (formula "74") (term "0,1,0,0,1,0,1,1"))
                           (rule "polySimp_addComm1" (formula "74") (term "0,0,1,0,1,1"))
                           (rule "polySimp_addComm0" (formula "74") (term "0,0,0,1,0,1,1"))
                           (rule "applyOnRigidTerm" (formula "74") (term "0,0,1,1,0,0,0,1,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "2,0,0,1,1,0,0,0,1,0"))
                           (rule "applyOnPV" (formula "74") (term "0,0,0,1,1,0,0,0,1,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,0,1,1,0,0,0,1,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,1,1,0,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,0,0,1,1,0,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,0,0,1,1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0,1,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,0,1,1,0,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,1,0,1,1,0,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,1,0,0,0,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,0,0,0,0,0,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,0,0,0,0,0,0,0,0,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,1,1,0,0,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,1,1,0,0,0,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,0,1,1,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,0,0,0,1,1,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,0,0,0,1,1,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,0,0,1,1,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,1,0,0,1,1,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,0,1,1,1,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "1,1,0,1,1,1,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,1,1,1,0,0,0,0"))
                           (rule "simplifyUpdate2" (formula "74") (term "0,0,0,1,1,1,0,0,0,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "1,0,0,1,0,1,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,1,0,0,1,0,1,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,1,0,0,1,0,1,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "2,1,0,0,1,0,1,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,1,0,0,1,0,1,0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,1,0,0,1,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0,1,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,0,1,1,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,0,0,0,1,1,0,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,0,0,0,1,1,0,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,0,0,1,1,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,1,0,0,1,1,0,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,1,0,0,1,1,0,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,1,0,1,1,0,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,1,0,1,1,0,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,0,0,0,0,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,1,0,0,0,0,0,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,0,0,0,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "74") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,1,1"))
                           (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "74") (term "0,1,0,0,1,1"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,0,0,1,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,0,0,0,0,1,1,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,0,0,0,0,1,1,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,0,0,0,1,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,1,0,0,0,1,1,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,1,0,0,0,1,1,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,1,0,0,1,1,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,1,0,0,1,1,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,1,0,1,1,1,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,1,0,1,1,1,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "1,0,0,1,1,1,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,1,0,0,1,1,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,1,0,0,1,1,1,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "74") (term "0,1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,1,0,1,1,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,0,0,1,0,1,1,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,0,1,0,1,1,0,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,0,0,1,0,1,1,0,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,1,1,0,1,1,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,1,1,0,1,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,1"))
                           (rule "applyOnRigidTerm" (formula "74") (term "0,1,0,0,0,0,0,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                           (rule "eqClose" (formula "74") (term "1,0,0,0,0,0,0,0,0,0"))
                           (rule "concrete_and_3" (formula "74") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0,1,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0,1,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,0,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "74") (term "0,0,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "74") (term "0,1,0,0,0,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,1,0,0,1,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,0,1,0,0,1,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,0,0,1,0,0,1,1,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,0,0,1,0,0,1,1,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,1,1,0,0,1,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,1,1,0,0,1,1,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,0,1,0,1,1,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,0,1,0,1,1,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,0,0,1,0,1,1,1,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,0,0,1,0,1,1,1,0,0,0,0"))
                           (rule "applyOnRigidFormula" (formula "74") (term "0,1,1,0,1,1,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,1,1,0,1,1,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "74") (term "0,1,1"))
                           (rule "polySimp_addComm1" (formula "74") (term "0,0,1,1"))
                           (rule "polySimp_pullOutFactor2b" (formula "74") (term "0,0,0,1,1"))
                           (rule "add_literals" (formula "74") (term "1,1,0,0,0,1,1"))
                           (rule "times_zero_1" (formula "74") (term "1,0,0,0,1,1"))
                           (rule "add_zero_right" (formula "74") (term "0,0,0,1,1"))
                           (rule "applyOnRigidTerm" (formula "74") (term "0,0,0,1,0,1,1,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,0,0,1,0,1,1,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,0,0,0,1,0,1,1,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "2,0,0,0,1,0,1,1,0,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,0,0,0,1,0,1,1,0,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,0,0,0,1,0,1,1,0,0,0,0,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "0,0,1,1,0,1,1,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,0,0,1,1,0,1,1,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,0,1,1,0,1,1,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "2,0,0,1,1,0,1,1,0,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,0,0,1,1,0,1,1,0,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,0,0,1,1,0,1,1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0,0,1,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0,0,1,1,0,0,0,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "0,0,0,0,0,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "2,0,0,0,0,0,0,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet1000_0" (formula "74") (term "0,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet1000_1" (formula "74") (term "0,0,0,0,0,0,0,0,0,0"))
                           (rule "eqClose" (formula "74") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "concrete_and_1" (formula "74") (term "0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "74") (term "0,1"))
                           (rule "times_zero_2" (formula "74") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "74") (term "0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0,1,1,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0,1,1,1,0,0,0,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "0,0,0,1,0,0,1,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,0,0,1,0,0,1,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,0,0,0,1,0,0,1,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "2,0,0,0,1,0,0,1,1,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,0,0,0,1,0,0,1,1,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,0,0,0,1,0,0,1,1,0,0,0,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "0,0,1,1,0,0,1,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,0,0,1,1,0,0,1,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,0,1,1,0,0,1,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "2,0,0,1,1,0,0,1,1,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,0,0,1,1,0,0,1,1,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,0,0,1,1,0,0,1,1,0,0,0,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "0,0,0,1,0,1,1,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,0,0,1,0,1,1,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,0,0,0,1,0,1,1,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "2,0,0,0,1,0,1,1,1,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,0,0,0,1,0,1,1,1,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,0,0,0,1,0,1,1,1,0,0,0,0"))
                           (rule "applyOnRigidTerm" (formula "74") (term "0,0,1,1,0,1,1,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "0,0,0,1,1,0,1,1,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "1,0,0,1,1,0,1,1,1,0,0,0,0"))
                           (rule "simplifyUpdate1" (formula "74") (term "2,0,0,1,1,0,1,1,1,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "0,0,0,1,1,0,1,1,1,0,0,0,0"))
                           (rule "applyOnPV" (formula "74") (term "1,0,0,1,1,0,1,1,1,0,0,0,0"))
                           (rule "mod_axiom" (formula "15") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1"))
                           (rule "div_literals" (formula "15") (term "0,1,1,1"))
                           (rule "times_zero_2" (formula "15") (term "1,1,1"))
                           (rule "add_zero_right" (formula "15") (term "1,1"))
                           (rule "add_literals" (formula "15") (term "1"))
                           (rule "mod_axiom" (formula "16") (term "1,1"))
                           (rule "div_literals" (formula "16") (term "0,0,1,1,1"))
                           (rule "mul_literals" (formula "16") (term "0,1,1,1"))
                           (rule "mul_literals" (formula "16") (term "1,1,1"))
                           (rule "add_zero_right" (formula "16") (term "1,1"))
                           (rule "add_literals" (formula "16") (term "1"))
                           (rule "applyEq" (formula "21") (term "2,1,1,0,0,0,0,0,1,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "65") (term "1") (ifseqformula "39"))
                           (rule "applyEq" (formula "21") (term "2,1,1,1,0,0,1,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "39"))
                           (rule "applyEq" (formula "69") (term "0") (ifseqformula "38"))
                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "25"))
                           (rule "applyEq" (formula "61") (term "0,1,0,1") (ifseqformula "25"))
                           (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "38"))
                           (rule "applyEq" (formula "1") (term "0,1") (ifseqformula "25"))
                           (rule "applyEq" (formula "55") (term "1,1,1,0") (ifseqformula "38"))
                           (rule "applyEq" (formula "53") (term "1,0,1,1,0,1,1") (ifseqformula "38"))
                           (rule "applyEq" (formula "13") (term "0") (ifseqformula "25"))
                           (rule "applyEq" (formula "53") (term "1,0,1,1,0,0,1") (ifseqformula "38"))
                           (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "30") (term "0") (ifseqformula "25"))
                           (rule "applyEq" (formula "17") (term "2,0,1,1,0,0,1,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "52") (term "1,0,1,1,0,1") (ifseqformula "38"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "25"))
                           (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "11") (term "0") (ifseqformula "25"))
                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "25"))
                           (rule "applyEq" (formula "72") (term "1,0,0,1,0,1,1") (ifseqformula "25"))
                           (rule "polySimp_addComm1" (formula "72") (term "0,1,1"))
                           (rule "applyEq" (formula "72") (term "1,0,0,1,0,0,1") (ifseqformula "25"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "16"))
                           (rule "inEqSimp_homoInEq0" (formula "10"))
                           (rule "mul_literals" (formula "10") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0"))
                           (rule "add_literals" (formula "10") (term "0,0"))
                           (rule "applyEq" (formula "35") (term "0") (ifseqformula "16"))
                           (rule "qeq_literals" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "applyEq" (formula "71") (term "1,0,1,0,0,1") (ifseqformula "25"))
                           (rule "polySimp_addComm0" (formula "71") (term "0,0,1"))
                           (rule "applyEq" (formula "21") (term "2,0,1,0,1,0,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "17") (term "2,0,1,0,1,0,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "71") (term "1,0,0,1,0,1,1,1,0,0,0,0") (ifseqformula "37"))
                           (rule "applyEq" (formula "71") (term "1,0,0,1,0,0,1,1,0,0,0,0") (ifseqformula "37"))
                           (rule "applyEq" (formula "24") (term "0,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "71") (term "0,1,0,1,0,0,0,0,0,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "71") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "37"))
                           (rule "applyEq" (formula "34") (term "0") (ifseqformula "16"))
                           (rule "leq_literals" (formula "34"))
                           (rule "true_left" (formula "34"))
                           (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "16"))
                           (rule "add_literals" (formula "31") (term "0"))
                           (rule "leq_literals" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "applyEq" (formula "69") (term "1,1,1,0,1,0,0") (ifseqformula "35"))
                           (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "47") (term "0,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "58") (term "0,1,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "27") (term "0,0,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "69") (term "0,0,1,0,0,1,0,0,1,0,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "20") (term "0,0,1,0,0,0,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "69") (term "0,1,0,0,1,0,0,0,1,1,0,0,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "51") (term "0,0,1,0,0,0,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "21") (term "0,0,1,0,0,0,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "19") (term "0,1,0,0,0,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "20") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "21") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "22") (term "0,0,1,0,0,0,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "69") (term "0,0,1,0,0,1,0,0,1,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "17") (term "0,0,1,0,0,0,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "52") (term "0,0,1,0,0,0,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "50") (term "0,1,0,0,0,0,0,0,1") (ifseqformula "25"))
                           (rule "applyEq" (formula "21") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "25"))
                           (rule "applyEqRigid" (formula "21") (term "2,1,1,0,0,0,0,0,1,1,0") (ifseqformula "15"))
                           (rule "mod_axiom" (formula "58") (term "1,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "58") (term "1,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "58") (term "0,1,1,0,1"))
                           (rule "add_literals" (formula "58") (term "0,0,1,1,0,1"))
                           (rule "jmod_axiom" (formula "42") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,0"))
                           (rule "jmod_axiom" (formula "48") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0"))
                           (rule "mod_axiom" (formula "58") (term "0,1,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "58") (term "1,0,1,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "58") (term "0,1,0,0,0,1"))
                           (rule "mul_literals" (formula "58") (term "0,0,1,0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "58") (term "0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0,1"))
                           (rule "add_literals" (formula "58") (term "0,0,0,0,0,0,1"))
                           (rule "applyEq" (formula "21") (term "2,1,1,1,0,0,1,1,0") (ifseqformula "15"))
                           (rule "applyEqRigid" (formula "29") (term "0") (ifseqformula "15"))
                           (rule "qeq_literals" (formula "29"))
                           (rule "true_left" (formula "29"))
                           (rule "applyEqRigid" (formula "25") (term "1") (ifseqformula "15"))
                           (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "15"))
                           (rule "jdiv_axiom_inline" (formula "32") (term "1,0"))
                           (rule "qeq_literals" (formula "32") (term "0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0"))
                           (rule "div_literals" (formula "32") (term "1,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0"))
                           (rule "polySimp_homoEq" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                           (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,2,0,0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "applyEq" (formula "13") (term "0") (ifseqformula "15"))
                           (rule "qeq_literals" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "14"))
                           (rule "leq_literals" (formula "11"))
                           (rule "closeFalse" (formula "11"))
                        )
                        (branch "Exceptional Post (nextKeyIndex)"
                           (rule "simplifyUpdate2" (formula "60"))
                           (rule "simplifyUpdate2" (formula "60") (term "1"))
                           (rule "andLeft" (formula "60"))
                           (rule "simplifyUpdate2" (formula "60"))
                           (rule "andLeft" (formula "61"))
                           (rule "simplifyUpdate2" (formula "62"))
                           (rule "andLeft" (formula "60"))
                           (rule "simplifyUpdate2" (formula "60"))
                           (rule "andLeft" (formula "62"))
                           (rule "simplifyUpdate2" (formula "63"))
                           (rule "simplifyUpdate2" (formula "62"))
                           (rule "notLeft" (formula "60"))
                           (rule "close" (formula "64") (ifseqformula "63"))
                        )
                        (branch "Pre (nextKeyIndex)"
                           (rule "expand_inInt" (formula "69") (term "1,0,1,1,1"))
                           (rule "expand_inInt" (formula "69") (term "1,1,1,1"))
                           (rule "replace_int_MAX" (formula "69") (term "1,0,1,0,1,1,1"))
                           (rule "replace_int_MIN" (formula "69") (term "0,1,1,0,1,1,1"))
                           (rule "replace_int_MAX" (formula "69") (term "1,0,1,1,1,1"))
                           (rule "replace_int_MIN" (formula "69") (term "0,1,1,1,1,1"))
                           (rule "simplifyUpdate2" (formula "69"))
                           (rule "simplifyUpdate2" (formula "69") (term "1"))
                           (rule "applyOnRigidFormula" (formula "69"))
                           (rule "simplifyUpdate2" (formula "69") (term "0"))
                           (rule "applyOnRigidFormula" (formula "69") (term "1"))
                           (rule "simplifyUpdate2" (formula "69") (term "1,1"))
                           (rule "simplifyUpdate2" (formula "69") (term "0,1"))
                           (rule "applyOnRigidFormula" (formula "69") (term "0"))
                           (rule "applyOnPV" (formula "69") (term "0,0"))
                           (rule "applyOnRigidFormula" (formula "69") (term "1,1"))
                           (rule "applyOnRigidFormula" (formula "69") (term "0,1"))
                           (rule "simplifyUpdate2" (formula "69") (term "0,0,1"))
                           (rule "simplifyUpdate2" (formula "69") (term "1,0,1"))
                           (rule "applyOnRigidFormula" (formula "69") (term "0,1,1"))
                           (rule "applyOnPV" (formula "69") (term "0,0,1,1"))
                           (rule "simplifyUpdate1" (formula "69") (term "1,0,1,1"))
                           (rule "applyOnRigidFormula" (formula "69") (term "1,1,1"))
                           (rule "applyOnPV" (formula "69") (term "1,1,1,1"))
                           (rule "simplifyUpdate1" (formula "69") (term "0,1,1,1"))
                           (rule "applyOnRigidFormula" (formula "69") (term "0,0,1"))
                           (rule "applyOnPV" (formula "69") (term "0,0,0,1"))
                           (rule "wellFormedAnon" (formula "69") (term "0,0,1"))
                           (rule "replace_known_left" (formula "69") (term "0,0,0,1") (ifseqformula "4"))
                           (rule "concrete_and_1" (formula "69") (term "0,0,1"))
                           (rule "replace_known_left" (formula "69") (term "0,0,1") (ifseqformula "49"))
                           (rule "concrete_and_1" (formula "69") (term "0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "47"))
                           (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "47") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "51"))
                           (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                           (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,0,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "21") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "53") (term "0"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "53") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "21") (term "1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "31"))
                           (rule "mul_literals" (formula "31") (term "1,0,0"))
                           (rule "add_literals" (formula "31") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "54") (term "0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "17") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                           (rule "add_literals" (formula "51") (term "0,0,0"))
                           (rule "applyOnRigidFormula" (formula "69") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "51") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "69") (term "1,1,1"))
                           (rule "applyOnRigidFormula" (formula "69") (term "1,0,1"))
                           (rule "applyOnPV" (formula "69") (term "1,1,0,1"))
                           (rule "simplifyUpdate1" (formula "69") (term "0,1,0,1"))
                           (rule "applyOnRigidFormula" (formula "69") (term "0,0,1"))
                           (rule "simplifyUpdate1" (formula "69") (term "1,0,0,1"))
                           (rule "applyOnPV" (formula "69") (term "0,0,0,1"))
                           (rule "replace_known_left" (formula "69") (term "0,0,1") (ifseqformula "57"))
                           (rule "concrete_and_1" (formula "69") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "69") (term "0,1"))
                           (rule "replace_known_left" (formula "69") (term "0,1") (ifseqformula "58"))
                           (rule "concrete_and_1" (formula "69") (term "1"))
                           (rule "mod_axiom" (formula "15") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1"))
                           (rule "div_literals" (formula "15") (term "0,1,1,1"))
                           (rule "times_zero_2" (formula "15") (term "1,1,1"))
                           (rule "add_literals" (formula "15") (term "1,1"))
                           (rule "add_literals" (formula "15") (term "1"))
                           (rule "mod_axiom" (formula "16") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
                           (rule "div_literals" (formula "16") (term "0,1,1,1"))
                           (rule "times_zero_2" (formula "16") (term "1,1,1"))
                           (rule "add_literals" (formula "16") (term "1,1"))
                           (rule "add_literals" (formula "16") (term "1"))
                           (rule "applyEq" (formula "17") (term "2,0,1,1,0,0,1,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "25"))
                           (rule "applyEq" (formula "13") (term "0") (ifseqformula "25"))
                           (rule "applyEq" (formula "1") (term "0,1") (ifseqformula "25"))
                           (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "56") (term "1,1,1,0") (ifseqformula "39"))
                           (rule "applyEq" (formula "21") (term "2,1,1,1,0,0,1,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "21") (term "2,1,1,0,0,0,0,0,1,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "65") (term "0") (ifseqformula "39"))
                           (rule "applyEq" (formula "53") (term "1,0,1,1,0,1") (ifseqformula "39"))
                           (rule "applyEq" (formula "54") (term "1,0,1,1,0,0,1") (ifseqformula "39"))
                           (rule "applyEq" (formula "54") (term "1,0,1,1,0,1,1") (ifseqformula "39"))
                           (rule "applyEq" (formula "60") (term "1") (ifseqformula "39"))
                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "25"))
                           (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "39"))
                           (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "39"))
                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "25"))
                           (rule "applyEq" (formula "30") (term "0") (ifseqformula "25"))
                           (rule "applyEq" (formula "11") (term "0") (ifseqformula "25"))
                           (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "16"))
                           (rule "add_literals" (formula "31") (term "0"))
                           (rule "leq_literals" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "applyEq" (formula "45") (term "0,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "34") (term "0") (ifseqformula "16"))
                           (rule "qeq_literals" (formula "34"))
                           (rule "true_left" (formula "34"))
                           (rule "applyEq" (formula "17") (term "2,0,1,0,1,0,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "16"))
                           (rule "inEqSimp_homoInEq0" (formula "10"))
                           (rule "mul_literals" (formula "10") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0"))
                           (rule "add_literals" (formula "10") (term "0,0"))
                           (rule "applyEq" (formula "48") (term "0,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "65") (term "0,1,1") (ifseqformula "25"))
                           (rule "applyEq" (formula "27") (term "0,0,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "24") (term "0,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "65") (term "0,0,1") (ifseqformula "25"))
                           (rule "applyEq" (formula "33") (term "0") (ifseqformula "16"))
                           (rule "leq_literals" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "applyEq" (formula "21") (term "2,0,1,0,1,0,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "21") (term "0,0,1,0,0,0,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "22") (term "0,0,1,0,0,0,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "51") (term "0,0,1,0,0,0,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "21") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "21") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "20") (term "0,0,1,0,0,0,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "20") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "19") (term "0,1,0,0,0,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "50") (term "0,1,0,0,0,0,0,0,1") (ifseqformula "25"))
                           (rule "applyEq" (formula "52") (term "0,0,1,0,0,0,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "17") (term "0,0,1,0,0,0,0,0") (ifseqformula "25"))
                           (rule "applyEqRigid" (formula "17") (term "2,0,1,1,0,0,1,1,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "1") (term "0,1") (ifseqformula "15"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "1"))
                           (rule "applyEq" (formula "13") (term "0") (ifseqformula "15"))
                           (rule "qeq_literals" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "14"))
                           (rule "qeq_literals" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "applyEq" (formula "23") (term "1") (ifseqformula "13"))
                           (rule "applyEq" (formula "62") (term "0,1,1") (ifseqformula "13"))
                           (rule "qeq_literals" (formula "62") (term "1,1"))
                           (rule "concrete_and_3" (formula "62") (term "1"))
                           (rule "applyEqRigid" (formula "22") (term "0,1,0") (ifseqformula "13"))
                           (rule "mul_literals" (formula "22") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0"))
                           (rule "add_literals" (formula "22") (term "0,0"))
                           (rule "applyEq" (formula "45") (term "0,1,0") (ifseqformula "13"))
                           (rule "mul_literals" (formula "45") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "45") (term "0"))
                           (rule "add_literals" (formula "45") (term "0,0"))
                           (rule "applyEqRigid" (formula "41") (term "0,1,0") (ifseqformula "13"))
                           (rule "mul_literals" (formula "41") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "41") (term "0"))
                           (rule "add_literals" (formula "41") (term "0,0"))
                           (rule "applyEqRigid" (formula "25") (term "0,0,1,0") (ifseqformula "13"))
                           (rule "jdiv_axiom_inline" (formula "25") (term "0,1,0"))
                           (rule "mul_literals" (formula "25") (term "0,0,2,0,1,0"))
                           (rule "div_literals" (formula "25") (term "1,0,1,0"))
                           (rule "qeq_literals" (formula "25") (term "0,0,1,0"))
                           (rule "ifthenelse_true" (formula "25") (term "0,1,0"))
                           (rule "mul_literals" (formula "25") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0"))
                           (rule "add_literals" (formula "25") (term "0,0"))
                           (rule "applyEq" (formula "11") (term "0") (ifseqformula "13"))
                           (rule "leq_literals" (formula "11"))
                           (rule "closeFalse" (formula "11"))
                        )
                     )
                  )
                  (branch "if x false"
                     (rule "false_to_not_true" (formula "1") (term "1"))
                     (rule "simplifyUpdate2" (formula "68"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "60"))
                     (rule "simplifyUpdate1" (formula "60") (term "1"))
                     (rule "applyOnPV" (formula "60") (term "0"))
                     (rule "ifthenelse_concrete4" (formula "60"))
                     (rule "boolean_not_equal_2" (formula "60") (term "1"))
                     (rule "concrete_or_4" (formula "60"))
                     (rule "notRight" (formula "60"))
                     (rule "blockEmptyLabel" (formula "68") (term "1"))
                     (rule "blockEmpty" (formula "68") (term "1"))
                     (rule "tryEmpty" (formula "68") (term "1"))
                     (rule "methodCallEmpty" (formula "68") (term "1"))
                     (rule "emptyModality" (formula "68") (term "1"))
                     (rule "applyOnRigidFormula" (formula "68"))
                     (rule "simplifyUpdate2" (formula "68") (term "0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,1"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,1"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,1"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,1,1"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,1,1"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,1"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,0,1"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,0,1"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0"))
                     (rule "applyOnPV" (formula "68") (term "0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,0,0"))
                     (rule "boolean_not_equal_2" (formula "68") (term "0,0"))
                     (rule "concrete_impl_2" (formula "68") (term "0"))
                     (rule "concrete_and_1" (formula "68"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,0,0"))
                     (rule "applyOnPV" (formula "68") (term "0,0,0"))
                     (rule "boolean_not_equal_2" (formula "68") (term "0,0"))
                     (rule "concrete_impl_2" (formula "68") (term "0"))
                     (rule "concrete_and_1" (formula "68"))
                     (rule "impRight" (formula "68"))
                     (rule "notLeft" (formula "1"))
                     (rule "orRight" (formula "61"))
                     (rule "simplifyUpdate2" (formula "61"))
                     (rule "simplifyUpdate2" (formula "62"))
                     (rule "applyOnRigidFormula" (formula "70"))
                     (rule "simplifyUpdate2" (formula "70") (term "1"))
                     (rule "simplifyUpdate2" (formula "70") (term "0"))
                     (rule "applyOnRigidFormula" (formula "61"))
                     (rule "simplifyUpdate1" (formula "61") (term "1"))
                     (rule "applyOnPV" (formula "61") (term "0"))
                     (rule "boolean_not_equal_2" (formula "61"))
                     (rule "false_right" (formula "61"))
                     (rule "applyOnRigidFormula" (formula "61"))
                     (rule "simplifyUpdate1" (formula "61") (term "1"))
                     (rule "applyOnPV" (formula "61") (term "0"))
                     (rule "boolean_not_equal_2" (formula "61"))
                     (rule "false_right" (formula "61"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,1"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,1"))
                     (rule "applyOnPV" (formula "68") (term "1,1"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_gtToGeq" (formula "18") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "18") (term "0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,0,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "22") (term "1,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,1"))
                     (rule "inEqSimp_gtToGeq" (formula "54") (term "0"))
                     (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "48"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "48") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "2") (term "0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "52"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "22") (term "1,0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,1,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "55") (term "0"))
                     (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "25"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "32"))
                     (rule "mul_literals" (formula "32") (term "1,0,0"))
                     (rule "add_literals" (formula "32") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "52") (term "1,0,0"))
                     (rule "mul_literals" (formula "52") (term "0,1,0,0"))
                     (rule "applyOnRigidTerm" (formula "68") (term "0,1"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,0,1"))
                     (rule "applyOnPV" (formula "68") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "25") (term "0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,0,0"))
                     (rule "polySimp_addAssoc" (formula "52") (term "0,0"))
                     (rule "add_literals" (formula "52") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "52") (term "0"))
                     (rule "applyOnRigidTerm" (formula "68") (term "1,0,1"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,1,0,1"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,1,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,0,0"))
                     (rule "applyOnRigidTerm" (formula "68") (term "0,1,0,1"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,0,1,0,1"))
                     (rule "applyOnPV" (formula "68") (term "1,0,1,0,1"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,1,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,0,0,1,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,1,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,0,1,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,0,1,0,0"))
                     (rule "applyOnRigidTerm" (formula "68") (term "0,0,1,0,1"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,0,0,1,0,1"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,0,0,1,0,1"))
                     (rule "applyOnPV" (formula "68") (term "1,0,0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "68") (term "0,0,1,0,1"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,1,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,1,0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,0,1,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,0,0,0,1,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,0,0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,0,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,1,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,0,1,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,0,1,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,1,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,0,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,0,1,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,1,0,1,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,1,0,1,0,0"))
                     (rule "precOfInt" (formula "68") (term "1"))
                     (rule "applyOnRigidTerm" (formula "68") (term "1,1,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "2,1,1,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,1,1,0,0,1,0"))
                     (rule "applyOnPV" (formula "68") (term "0,1,1,0,0,1,0"))
                     (rule "eqSymm" (formula "68") (term "1,0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,0,0,0,1,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,1,0,0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,0,0,1,0"))
                     (rule "applyOnPV" (formula "68") (term "1,0,0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,0,0,0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,0,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,0,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,1,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,1,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,1,1,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,1,1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,1,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,0,1,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,0,1,0,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "0,0,1,0,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "1,0,1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,1,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,0,0,1,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,0,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,1,0,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,1,0,1,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,1,0,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,1,1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,1,1,0,1,0,0"))
                     (rule "applyOnPV" (formula "68") (term "1,1,1,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,1,0,1,0,0"))
                     (rule "applyOnRigidTerm" (formula "68") (term "1,0,0,1,0,1,1"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,1,0,0,1,0,1,1"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,1,0,0,1,0,1,1"))
                     (rule "applyOnPV" (formula "68") (term "1,1,0,0,1,0,1,1"))
                     (rule "polySimp_addComm0" (formula "68") (term "1,0,0,1,0,1,1"))
                     (rule "applyOnRigidTerm" (formula "68") (term "1,0,0,1,1,0,1"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,1,0,0,1,1,0,1"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,1,0,0,1,1,0,1"))
                     (rule "applyOnPV" (formula "68") (term "1,1,0,0,1,1,0,1"))
                     (rule "polySimp_addComm0" (formula "68") (term "1,0,0,1,1,0,1"))
                     (rule "applyOnRigidTerm" (formula "68") (term "1,1,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "2,1,1,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,1,1,0,0,1,0"))
                     (rule "applyOnPV" (formula "68") (term "0,1,1,0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,1,0,0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,0,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,0,0,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,0,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,1,0,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,1,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,1,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,0,1,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,0,1,0,0,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "1,0,1,0,0,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "0,0,1,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,1,1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,1,1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,0,0,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,1,0,0,1,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "68") (term "1,1,0,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "2,1,1,0,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,1,1,0,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,1,1,0,1,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "1,1,1,0,1,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "0,1,1,0,1,0,0,0"))
                     (rule "eqSymm" (formula "68") (term "1,0,1,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "68") (term "1,1,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,1,1,0,0,1,0,0"))
                     (rule "applyOnPV" (formula "68") (term "0,1,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0,0,1,0,1,1"))
                     (rule "polySimp_addComm0" (formula "68") (term "0,0,0,1,0,1,1"))
                     (rule "applyOnRigidTerm" (formula "68") (term "0,1,1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "2,0,1,1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,0,1,1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,0,1,1,0,1,0,0"))
                     (rule "applyOnPV" (formula "68") (term "1,0,1,1,0,1,0,0"))
                     (rule "applyOnPV" (formula "68") (term "0,0,1,1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0,0,1,1,0,1"))
                     (rule "polySimp_addComm0" (formula "68") (term "0,0,0,1,1,0,1"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,0,0,1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,0,0,1,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "68") (term "0,1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,0,1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,1,1,0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,0,1,1,0,0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,0,0,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,0,0,0,0,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,0,0,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "68") (term "0,1,0,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,0,1,0,0,0,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "0,0,1,0,0,0,0,0,0"))
                     (rule "replace_known_left" (formula "68") (term "1,0,0,0,0,0,0") (ifseqformula "53"))
                     (rule "concrete_and_3" (formula "68") (term "0,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,1,1,0,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,0,1,1,0,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,0,1,1,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,1,1,1,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,0,1,1,1,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,0,1,1,1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,1,1,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,0,0,1,1,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,0,0,1,1,0,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "68") (term "1,1,0,0,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,1,1,0,0,1,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "0,1,1,0,0,1,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "68") (term "1,1,0,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,1,1,0,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "2,1,1,0,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,1,1,0,1,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "0,1,1,0,1,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "1,1,1,0,1,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "68") (term "1,0,0,1,0,1,1"))
                     (rule "applyOnPV" (formula "68") (term "0,1,0,0,1,0,1,1"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,1,0,0,1,0,1,1"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,0,1,0,1,1"))
                     (rule "inEqSimp_gtToGeq" (formula "68") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,0,1,0,0,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "68") (term "1,0,0,1,1,0,1"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,1,0,0,1,1,0,1"))
                     (rule "applyOnPV" (formula "68") (term "0,1,0,0,1,1,0,1"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,0,1,1,0,1"))
                     (rule "applyOnRigidTerm" (formula "68") (term "1,0,0,1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "2,1,0,0,1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,1,0,0,1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,1,0,0,1,0,1,0,0"))
                     (rule "applyOnPV" (formula "68") (term "1,1,0,0,1,0,1,0,0"))
                     (rule "applyOnPV" (formula "68") (term "0,1,0,0,1,0,1,0,0"))
                     (rule "eqSymm" (formula "68") (term "0,0,1,0,1,0,0"))
                     (rule "applyOnRigidTerm" (formula "68") (term "0,0,1,1,0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "2,0,0,1,1,0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,0,0,1,1,0,0,0,1,0"))
                     (rule "applyOnPV" (formula "68") (term "0,0,0,1,1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "68") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,0,0,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,0,0,0,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,0,0,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "replace_known_left" (formula "68") (term "1,0,0,0,0,0,0,0") (ifseqformula "51"))
                     (rule "concrete_and_3" (formula "68") (term "0,0,0,0,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "68") (term "1,1,0,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,1,1,0,0,0,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "1,1,1,0,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,0,1,1,0,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,1,0,1,1,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,1,1,0,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,0,0,1,1,0,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,0,0,1,1,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,0,1,1,1,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,1,0,1,1,1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,1,1,1,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,0,0,1,1,1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,0,0,1,1,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,1,0,0,1,1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,0,1,1,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "0,0,0,0,1,1,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "68") (term "1,0,0,0,1,1,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "68") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0,1,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "68") (term "1,0,0,1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,1,0,0,1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "2,1,0,0,1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,1,0,0,1,0,1,0,0"))
                     (rule "applyOnPV" (formula "68") (term "0,1,0,0,1,0,1,0,0"))
                     (rule "applyOnPV" (formula "68") (term "1,1,0,0,1,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "68") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "68") (term "1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "68") (term "0,1,0,0,1,1"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,0,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,0,0,0,0,0,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "1,0,0,0,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,0,0,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,1,0,1,1,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,1,0,1,1,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,0,0,1,1,0,0,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "1,1,0,0,1,1,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,1,0,0,1,1,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,0,1,1,0,0,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "1,0,0,0,1,1,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,0,0,0,1,1,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,1,0,1,1,1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,1,0,1,1,1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,0,0,1,1,1,0,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "1,1,0,0,1,1,1,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,1,0,0,1,1,1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,1,0,0,1,1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,1,0,0,1,1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,0,0,1,1,0,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "1,0,0,0,0,1,1,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,0,0,0,0,1,1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "1,0,0,0,1,1,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,1,0,0,0,1,1,0,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "1,1,0,0,0,1,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0,0,1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "68") (term "1,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "1,0,0,1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "68") (term "0,1,0,0,1,0,0,0,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "68") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "2,0,0,0,0,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,0,0,0,0,0,0,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000_0" (formula "68") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000_1" (formula "68") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "eqClose" (formula "68") (term "0,0,0,0,0,0,0,0"))
                     (rule "concrete_and_1" (formula "68") (term "0,0,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,1,0,1,1,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,0,0,1,0,1,1,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,0,0,1,0,1,1,0,0,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "1,0,0,1,0,1,1,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,1,1,0,1,1,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,0,1,1,0,1,1,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,0,1,0,1,1,1,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,0,0,1,0,1,1,1,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "0,0,0,1,0,1,1,1,0,0,0,0"))
                     (rule "applyOnPV" (formula "68") (term "1,0,0,1,0,1,1,1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "68") (term "0,1,1,0,1,1,1,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "68") (term "1,0,1,1,0,1,1,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,0,1,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,1,1"))
                     (rule "add_literals" (formula "68") (term "1,1,0,1,1"))
                     (rule "times_zero_1" (formula "68") (term "1,0,1,1"))
                     (rule "add_zero_right" (formula "68") (term "0,1,1"))
                     (rule "polySimp_pullOutFactor2b" (formula "68") (term "0,1,1"))
                     (rule "add_literals" (formula "68") (term "1,1,0,1,1"))
                     (rule "times_zero_1" (formula "68") (term "1,0,1,1"))
                     (rule "add_zero_right" (formula "68") (term "0,1,1"))
                     (rule "leq_literals" (formula "68") (term "1,1"))
                     (rule "concrete_and_4" (formula "68") (term "1"))
                     (rule "concrete_and_4" (formula "68"))
                     (rule "false_right" (formula "68"))
                     (rule "mod_axiom" (formula "16") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
                     (rule "div_literals" (formula "16") (term "0,1,1,1"))
                     (rule "mul_literals" (formula "16") (term "1,1,1"))
                     (rule "add_zero_right" (formula "16") (term "1,1"))
                     (rule "add_literals" (formula "16") (term "1"))
                     (rule "mod_axiom" (formula "17") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
                     (rule "div_literals" (formula "17") (term "0,1,1,1"))
                     (rule "times_zero_2" (formula "17") (term "1,1,1"))
                     (rule "add_literals" (formula "17") (term "1,1"))
                     (rule "add_literals" (formula "17") (term "1"))
                     (rule "applyEq" (formula "22") (term "2,1,1,0,0,0,0,0,1,1,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "57") (term "1,1,1,0") (ifseqformula "40"))
                     (rule "applyEq" (formula "30") (term "0") (ifseqformula "26"))
                     (rule "applyEq" (formula "31") (term "0") (ifseqformula "26"))
                     (rule "applyEq" (formula "18") (term "2,0,1,1,0,0,1,1,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "40"))
                     (rule "applyEq" (formula "13") (term "0") (ifseqformula "26"))
                     (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "39"))
                     (rule "applyEq" (formula "12") (term "0") (ifseqformula "26"))
                     (rule "applyEq" (formula "54") (term "1,0,1,1,0,0,1") (ifseqformula "39"))
                     (rule "applyEq" (formula "16") (term "0") (ifseqformula "26"))
                     (rule "applyEq" (formula "22") (term "2,1,1,1,0,0,1,1,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "14") (term "0") (ifseqformula "26"))
                     (rule "applyEq" (formula "53") (term "1,0,1,1,0,1") (ifseqformula "39"))
                     (rule "applyEq" (formula "2") (term "0,1") (ifseqformula "26"))
                     (rule "applyEq" (formula "54") (term "1,0,1,1,0,1,1") (ifseqformula "39"))
                     (rule "applyEq" (formula "63") (term "0") (ifseqformula "39"))
                     (rule "applyEq" (formula "18") (term "2,0,1,0,1,0,1,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "28") (term "0,0,1,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "17"))
                     (rule "inEqSimp_homoInEq0" (formula "11"))
                     (rule "mul_literals" (formula "11") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0"))
                     (rule "add_literals" (formula "11") (term "0,0"))
                     (rule "applyEq" (formula "51") (term "0,1,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "17"))
                     (rule "add_literals" (formula "32") (term "0"))
                     (rule "leq_literals" (formula "32"))
                     (rule "true_left" (formula "32"))
                     (rule "applyEq" (formula "22") (term "2,0,1,0,1,0,1,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "35") (term "0") (ifseqformula "17"))
                     (rule "qeq_literals" (formula "35"))
                     (rule "true_left" (formula "35"))
                     (rule "applyEq" (formula "34") (term "0") (ifseqformula "17"))
                     (rule "leq_literals" (formula "34"))
                     (rule "true_left" (formula "34"))
                     (rule "applyEq" (formula "44") (term "0,1,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "52") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "21") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "22") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "22") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "51") (term "0,1,0,0,0,0,0,0,1") (ifseqformula "26"))
                     (rule "applyEq" (formula "18") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "20") (term "0,1,0,0,0,0,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "23") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "53") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "22") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "21") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "22") (term "2,1,1,0,0,0,0,0,1,1,0") (ifseqformula "16"))
                     (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "16"))
                     (rule "qeq_literals" (formula "30"))
                     (rule "true_left" (formula "30"))
                     (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "16"))
                     (rule "leq_literals" (formula "30"))
                     (rule "true_left" (formula "30"))
                     (rule "applyEq" (formula "18") (term "2,0,1,1,0,0,1,1,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "16"))
                     (rule "jdiv_axiom_inline" (formula "32") (term "1,0"))
                     (rule "qeq_literals" (formula "32") (term "0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0"))
                     (rule "div_literals" (formula "32") (term "1,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0"))
                     (rule "polySimp_homoEq" (formula "32"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "bsum_induction_upper_concrete_2" (formula "32") (term "0,1,0"))
                     (rule "sub_literals" (formula "32") (term "0,0,2,0,0,1,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,1,0,1,0"))
                     (rule "sub_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,2,0,0,1,1,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true" (formula "32") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                     (rule "applyEqRigid" (formula "26") (term "1") (ifseqformula "16"))
                     (rule "applyEqRigid" (formula "28") (term "0,0,1,0") (ifseqformula "16"))
                     (rule "jdiv_axiom_inline" (formula "28") (term "0,1,0"))
                     (rule "div_literals" (formula "28") (term "1,0,1,0"))
                     (rule "qeq_literals" (formula "28") (term "0,0,1,0"))
                     (rule "ifthenelse_true" (formula "28") (term "0,1,0"))
                     (rule "mul_literals" (formula "28") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                     (rule "add_literals" (formula "28") (term "0,0"))
                     (rule "applyEq" (formula "18") (term "2,0,1,0,1,0,1,0") (ifseqformula "16"))
                     (rule "applyEqRigid" (formula "40") (term "1,0") (ifseqformula "16"))
                     (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "16"))
                     (rule "qeq_literals" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "applyEqRigid" (formula "2") (term "0,1") (ifseqformula "15"))
                     (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "15"))
                     (rule "leq_literals" (formula "12"))
                     (rule "closeFalse" (formula "12"))
                  )
               )
               (branch "Null Reference (tab = null)"
                  (rule "false_right" (formula "68"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "applyOnPV" (formula "1") (term "0"))
                  (rule "simplifyUpdate1" (formula "1") (term "1"))
                  (rule "close" (formula "62") (ifseqformula "1"))
               )
               (branch "Index Out of Bounds (tab != null, but i Out of Bounds!)"
                  (rule "false_right" (formula "68"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate2" (formula "1") (term "1"))
                  (rule "applyOnRigidFormula" (formula "61"))
                  (rule "applyOnPV" (formula "61") (term "0"))
                  (rule "simplifyUpdate1" (formula "61") (term "1"))
                  (rule "applyOnRigidFormula" (formula "1") (term "0"))
                  (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                  (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                  (rule "applyOnPV" (formula "1") (term "1,0"))
                  (rule "applyOnRigidFormula" (formula "1") (term "1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                  (rule "applyOnPV" (formula "1") (term "0,1"))
                  (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                  (rule "applyOnPV" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "28"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "25"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "55") (term "0"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "54") (term "0"))
                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulAssoc" (formula "22") (term "1,0,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,0,1,1,0"))
                  (rule "polySimp_mulAssoc" (formula "22") (term "1,0,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "52"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "32"))
                  (rule "mul_literals" (formula "32") (term "1,0,0"))
                  (rule "add_literals" (formula "32") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "48"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "48") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "18") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2") (term "0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,1"))
                  (rule "polySimp_addAssoc" (formula "52") (term "0,0"))
                  (rule "add_literals" (formula "52") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "52") (term "0"))
                  (rule "mod_axiom" (formula "16") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
                  (rule "div_literals" (formula "16") (term "0,1,1,1"))
                  (rule "times_zero_2" (formula "16") (term "1,1,1"))
                  (rule "add_literals" (formula "16") (term "1,1"))
                  (rule "add_literals" (formula "16") (term "1"))
                  (rule "mod_axiom" (formula "17") (term "1,1"))
                  (rule "div_literals" (formula "17") (term "0,0,1,1,1"))
                  (rule "mul_literals" (formula "17") (term "0,1,1,1"))
                  (rule "times_zero_2" (formula "17") (term "1,1,1"))
                  (rule "add_literals" (formula "17") (term "1,1"))
                  (rule "add_literals" (formula "17") (term "1"))
                  (rule "applyEq" (formula "22") (term "2,1,1,0,0,0,0,0,1,1,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "30") (term "0") (ifseqformula "26"))
                  (rule "applyEq" (formula "13") (term "0") (ifseqformula "26"))
                  (rule "applyEq" (formula "31") (term "0") (ifseqformula "26"))
                  (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "40"))
                  (rule "applyEq" (formula "18") (term "2,0,1,1,0,0,1,1,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "16") (term "0") (ifseqformula "26"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "26"))
                  (rule "applyEq" (formula "56") (term "1,1,1,0") (ifseqformula "39"))
                  (rule "applyEq" (formula "2") (term "0,1") (ifseqformula "26"))
                  (rule "applyEq" (formula "54") (term "1,0,1,1,0,0,1") (ifseqformula "39"))
                  (rule "applyEq" (formula "14") (term "0") (ifseqformula "26"))
                  (rule "applyEq" (formula "53") (term "1,0,1,1,0,1") (ifseqformula "39"))
                  (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "39"))
                  (rule "applyEq" (formula "22") (term "2,1,1,1,0,0,1,1,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "54") (term "1,0,1,1,0,1,1") (ifseqformula "39"))
                  (rule "applyEq" (formula "63") (term "0") (ifseqformula "39"))
                  (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "36") (term "0") (ifseqformula "17"))
                  (rule "qeq_literals" (formula "36"))
                  (rule "true_left" (formula "36"))
                  (rule "applyEq" (formula "35") (term "0") (ifseqformula "17"))
                  (rule "leq_literals" (formula "35"))
                  (rule "true_left" (formula "35"))
                  (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "17"))
                  (rule "add_literals" (formula "32") (term "0"))
                  (rule "leq_literals" (formula "32"))
                  (rule "true_left" (formula "32"))
                  (rule "applyEq" (formula "11") (term "0") (ifseqformula "17"))
                  (rule "inEqSimp_homoInEq0" (formula "11"))
                  (rule "mul_literals" (formula "11") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                  (rule "add_literals" (formula "11") (term "0,0"))
                  (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "18") (term "2,0,1,0,1,0,1,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "28") (term "0,0,1,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "44") (term "0,1,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "48") (term "0,1,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "22") (term "2,0,1,0,1,0,1,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "52") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "23") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "51") (term "0,1,0,0,0,0,0,0,1") (ifseqformula "26"))
                  (rule "applyEq" (formula "22") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "53") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "22") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "21") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "20") (term "0,1,0,0,0,0,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "18") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "22") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "21") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "22") (term "2,1,1,0,0,0,0,0,1,1,0") (ifseqformula "16"))
                  (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "16"))
                  (rule "qeq_literals" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "applyEq" (formula "29") (term "0") (ifseqformula "15"))
                  (rule "qeq_literals" (formula "29"))
                  (rule "true_left" (formula "29"))
                  (rule "applyEqRigid" (formula "29") (term "0") (ifseqformula "15"))
                  (rule "leq_literals" (formula "29"))
                  (rule "true_left" (formula "29"))
                  (rule "applyEqRigid" (formula "17") (term "2,0,1,1,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "25") (term "1") (ifseqformula "15"))
                  (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "21") (term "2,1,1,1,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "15"))
                  (rule "leq_literals" (formula "12"))
                  (rule "closeFalse" (formula "12"))
               )
            )
         )
         (branch "Use Case"
            (rule "false_to_not_true" (formula "57") (term "0,0,1,1"))
            (rule "expand_inInt" (formula "49") (term "0,1,1,1"))
            (rule "simplifyUpdate2" (formula "57"))
            (rule "replace_int_MIN" (formula "49") (term "0,1,0,1,1,1"))
            (rule "replace_int_MAX" (formula "49") (term "1,0,0,1,1,1"))
            (rule "simplifyUpdate2" (formula "49"))
            (rule "eqSymm" (formula "49") (term "1,0,1,0,0,1,1"))
            (rule "eqSymm" (formula "49") (term "0,0,1,0,1,0,1,1"))
            (rule "eqSymm" (formula "49") (term "0,0,0,0,0,0,0,0,0,1,1"))
            (rule "eqSymm" (formula "49") (term "1,0,0,0,0,0,0,0,0,1,1"))
            (rule "polySimp_elimSub" (formula "49") (term "1,1,0,0,0,0,0,0,1,1"))
            (rule "mul_literals" (formula "49") (term "1,1,1,0,0,0,0,0,0,1,1"))
            (rule "sequentialToParallel2" (formula "57"))
            (rule "simplifyUpdate2" (formula "57"))
            (rule "simplifyUpdate3" (formula "57") (term "1,0"))
            (rule "applyOnParallel" (formula "57") (term "1,0"))
            (rule "simplifyUpdate3" (formula "57") (term "0,1,0"))
            (rule "applyOnElementary" (formula "57") (term "1,1,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "0,2,0,0,0,1,0,1,1,0,0,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "49") (term "0,1,0,0,1,1,0,0,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "49") (term "0,2,0,1,1,0,1,0,1,1"))
            (rule "polySimp_mulComm0" (formula "49") (term "0,2,0,0,1,1,0,0,1,1,0,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "49") (term "0,1,0,0,1,1,1,0,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "49") (term "0,2,0,0,0,1,0,1,1,1,0,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,1,0,0,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,1,1,0,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "49") (term "0,2,0,0,1,1,0,1,1,1,0,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "49") (term "0,2,0,0,0,1,0,0,1,1,0,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "49") (term "0,1,0,0,0,1,1,0,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,1,1,0,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "49") (term "0,2,0,0,1,1,0,1,1,0,0,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "49") (term "0,2,1,1,0,1,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "49") (term "0,2,0,1,0,1,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "49") (term "0,0,2,0,0,0,1,0,1,0,1,1"))
            (rule "polySimp_mulComm0" (formula "49") (term "0,0,2,1,0,0,1,0,1,0,1,1"))
            (rule "sequentialToParallel2" (formula "49"))
            (rule "simplifyUpdate2" (formula "49"))
            (rule "simplifyUpdate3" (formula "49") (term "1,0"))
            (rule "andLeft" (formula "49"))
            (rule "simplifyUpdate2" (formula "50"))
            (rule "simplifyUpdate2" (formula "49"))
            (rule "andLeft" (formula "50"))
            (rule "simplifyUpdate2" (formula "50"))
            (rule "simplifyUpdate2" (formula "51"))
            (rule "simplifyUpdate3" (formula "50") (term "0"))
            (rule "andLeft" (formula "49"))
            (rule "simplifyUpdate2" (formula "50"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "49"))
            (rule "simplifyUpdate2" (formula "49"))
            (rule "simplifyUpdate2" (formula "50"))
            (rule "andLeft" (formula "49"))
            (rule "andLeft" (formula "49"))
            (rule "simplifyUpdate2" (formula "50"))
            (rule "simplifyUpdate2" (formula "49"))
            (rule "applyOnParallel" (formula "56") (term "0"))
            (rule "simplifyUpdate3" (formula "56") (term "0,0"))
            (rule "andLeft" (formula "49"))
            (rule "simplifyUpdate2" (formula "50"))
            (rule "simplifyUpdate3" (formula "50") (term "0"))
            (rule "andLeft" (formula "49"))
            (rule "simplifyUpdate2" (formula "50"))
            (rule "simplifyUpdate3" (formula "50") (term "1,0"))
            (rule "andLeft" (formula "49"))
            (rule "simplifyUpdate2" (formula "49"))
            (rule "simplifyUpdate2" (formula "50"))
            (rule "simplifyUpdate3" (formula "50") (term "0"))
            (rule "andLeft" (formula "49"))
            (rule "simplifyUpdate2" (formula "49"))
            (rule "simplifyUpdate2" (formula "50"))
            (rule "applyOnSkip" (formula "50") (term "1,0"))
            (rule "parallelWithSkip2" (formula "50") (term "0"))
            (rule "applyOnElementary" (formula "57") (term "1,0"))
            (rule "applyOnElementary" (formula "56") (term "1,0"))
            (rule "applyOnParallel" (formula "55") (term "1,0"))
            (rule "simplifyUpdate3" (formula "55") (term "0,1,0"))
            (rule "applyOnParallel" (formula "54") (term "1,0"))
            (rule "simplifyUpdate3" (formula "54") (term "0,1,0"))
            (rule "applyOnElementary" (formula "60") (term "1,0"))
            (rule "applyOnElementary" (formula "49") (term "1,0"))
            (rule "applyOnElementary" (formula "55") (term "1,1,0"))
            (rule "applyOnElementary" (formula "54") (term "1,1,0"))
            (rule "polySimp_addComm0" (formula "57") (term "0,2,0,0,0,1,0,1"))
            (rule "polySimp_addComm0" (formula "57") (term "0,2,1,0,0,1,0,1"))
            (rule "polySimp_addComm0" (formula "52") (term "1,1"))
            (rule "applyOnRigidTerm" (formula "68") (term "0,1,1,0"))
            (rule "simplifyUpdate1" (formula "68") (term "2,0,1,1,0"))
            (rule "simplifyUpdate1" (formula "68") (term "0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulAssoc" (formula "20") (term "1,0,0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "26"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "46"))
            (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "23"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "16") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "30"))
            (rule "mul_literals" (formula "30") (term "1,0,0"))
            (rule "add_literals" (formula "30") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
            (rule "polySimp_mulAssoc" (formula "20") (term "1,0,0,0,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0,0,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1,0,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "26") (term "0"))
            (rule "polySimp_addComm1" (formula "46") (term "0"))
            (rule "applyOnRigidFormula" (formula "59"))
            (rule "applyOnPV" (formula "59") (term "1"))
            (rule "simplifyUpdate1" (formula "59") (term "0"))
            (rule "applyOnRigidFormula" (formula "58"))
            (rule "applyOnPV" (formula "58") (term "0"))
            (rule "simplifyUpdate1" (formula "58") (term "1"))
            (rule "polySimp_addComm1" (formula "23") (term "0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,1,0,1,0"))
            (rule "applyOnRigidFormula" (formula "53"))
            (rule "simplifyUpdate1" (formula "53") (term "1"))
            (rule "polySimp_addComm1" (formula "20") (term "0,1,0,1,0"))
            (rule "applyOnRigidFormula" (formula "51"))
            (rule "applyOnPV" (formula "51") (term "0"))
            (rule "simplifyUpdate1" (formula "51") (term "1"))
            (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,0,1,1"))
            (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,1,1,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,1,1,1"))
            (rule "applyOnRigidFormula" (formula "50"))
            (rule "simplifyUpdate1" (formula "50") (term "0"))
            (rule "simplifyUpdate1" (formula "50") (term "1"))
            (rule "applyOnPV" (formula "50") (term "1"))
            (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1"))
            (rule "applyOnRigidTerm" (formula "57") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "57") (term "2,0,1,0"))
            (rule "simplifyUpdate1" (formula "57") (term "0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,1,1"))
            (rule "inEqSimp_gtToGeq" (formula "54") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1"))
            (rule "applyOnRigidTerm" (formula "56") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "56") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "56") (term "2,0,1,0"))
            (rule "applyOnRigidFormula" (formula "60"))
            (rule "simplifyUpdate2" (formula "60") (term "0"))
            (rule "applyOnRigidTerm" (formula "49") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "49") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "49") (term "2,0,1,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "0,1,1,0"))
            (rule "simplifyUpdate1" (formula "55") (term "0,0,1,1,0"))
            (rule "simplifyUpdate1" (formula "55") (term "2,0,1,1,0"))
            (rule "applyOnRigidTerm" (formula "54") (term "0,1,1,0"))
            (rule "simplifyUpdate1" (formula "54") (term "2,0,1,1,0"))
            (rule "simplifyUpdate1" (formula "54") (term "0,0,1,1,0"))
            (rule "applyOnRigidFormula" (formula "52"))
            (rule "simplifyUpdate1" (formula "52") (term "0"))
            (rule "simplifyUpdate1" (formula "52") (term "1"))
            (rule "applyOnPV" (formula "52") (term "0"))
            (rule "applyOnRigidTerm" (formula "68") (term "1,0,1,1,0"))
            (rule "applyOnPV" (formula "68") (term "0,1,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,1,1,1"))
            (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,0,1,1"))
            (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1,1"))
            (rule "applyOnRigidTerm" (formula "53") (term "0"))
            (rule "applyOnPV" (formula "53") (term "0,0"))
            (rule "simplifyUpdate1" (formula "53") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "50") (term "0"))
            (rule "applyOnPV" (formula "50") (term "0,0"))
            (rule "eqClose" (formula "50"))
            (rule "true_left" (formula "50"))
            (rule "applyOnRigidTerm" (formula "56") (term "1,0,1,0"))
            (rule "applyOnPV" (formula "56") (term "0,1,0,1,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "1,0,1,0"))
            (rule "applyOnPV" (formula "55") (term "0,1,0,1,0"))
            (rule "applyOnRigidFormula" (formula "59") (term "1"))
            (rule "simplifyUpdate1" (formula "59") (term "1,1"))
            (rule "applyOnRigidFormula" (formula "59") (term "0"))
            (rule "applyOnPV" (formula "59") (term "0,0"))
            (rule "simplifyUpdate1" (formula "59") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "49") (term "1,0,1,0"))
            (rule "applyOnPV" (formula "49") (term "0,1,0,1,0"))
            (rule "applyOnRigidTerm" (formula "54") (term "1,0,1,1,0"))
            (rule "applyOnPV" (formula "54") (term "0,1,0,1,1,0"))
            (rule "applyOnRigidTerm" (formula "53") (term "1,0,1,1,0"))
            (rule "applyOnPV" (formula "53") (term "0,1,0,1,1,0"))
            (rule "applyOnRigidTerm" (formula "51") (term "1"))
            (rule "simplifyUpdate1" (formula "51") (term "0,1"))
            (rule "applyOnPV" (formula "51") (term "1,1"))
            (rule "inEqSimp_commuteLeq" (formula "58"))
            (rule "applyOnRigidFormula" (formula "56"))
            (rule "applyOnRigidFormula" (formula "55"))
            (rule "applyOnRigidTerm" (formula "59") (term "0,1"))
            (rule "simplifyUpdate1" (formula "59") (term "0,0,1"))
            (rule "simplifyUpdate1" (formula "59") (term "2,0,1"))
            (rule "simplifyUpdate1" (formula "59") (term "1,0,1"))
            (rule "applyOnPV" (formula "59") (term "0,0,1"))
            (rule "applyOnPV" (formula "59") (term "1,0,1"))
            (rule "applyOnRigidFormula" (formula "49"))
            (rule "simplifyUpdate1" (formula "49") (term "1"))
            (rule "simplifyUpdate1" (formula "49") (term "0"))
            (rule "applyOnPV" (formula "49") (term "1"))
            (rule "applyOnRigidFormula" (formula "54"))
            (rule "simplifyUpdate2" (formula "54") (term "0"))
            (rule "applyOnRigidFormula" (formula "53"))
            (rule "simplifyUpdate2" (formula "53") (term "0"))
            (rule "applyOnRigidFormula" (formula "56") (term "0"))
            (rule "simplifyUpdate2" (formula "56") (term "1,0"))
            (rule "simplifyUpdate2" (formula "56") (term "0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "0"))
            (rule "simplifyUpdate2" (formula "55") (term "1,0"))
            (rule "simplifyUpdate2" (formula "55") (term "0,0"))
            (rule "applyOnRigidTerm" (formula "59") (term "0,0,1"))
            (rule "selectCreatedOfAnonAsFormula" (formula "59") (term "1"))
            (rule "simplifyUpdate1" (formula "59") (term "0,0,0,1"))
            (rule "simplifyUpdate1" (formula "59") (term "0,0,1,1"))
            (rule "applyOnRigidTerm" (formula "49") (term "0"))
            (rule "applyOnPV" (formula "49") (term "0,0"))
            (rule "simplifyUpdate1" (formula "49") (term "1,0"))
            (rule "simplifyUpdate1" (formula "49") (term "2,0"))
            (rule "applyOnRigidFormula" (formula "54") (term "1"))
            (rule "simplifyUpdate2" (formula "54") (term "1,1"))
            (rule "simplifyUpdate2" (formula "54") (term "0,1"))
            (rule "applyOnRigidFormula" (formula "54") (term "0"))
            (rule "simplifyUpdate1" (formula "54") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "53") (term "1"))
            (rule "applyOnRigidFormula" (formula "53") (term "0"))
            (rule "simplifyUpdate1" (formula "53") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "56") (term "1,0"))
            (rule "simplifyUpdate2" (formula "56") (term "1,1,0"))
            (rule "simplifyUpdate2" (formula "56") (term "0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "51"))
            (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
            (rule "mul_literals" (formula "51") (term "0,1,0,0"))
            (rule "applyOnRigidFormula" (formula "56") (term "0,0"))
            (rule "simplifyUpdate2" (formula "56") (term "0,0,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "1,0"))
            (rule "simplifyUpdate1" (formula "55") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,1,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "0,0"))
            (rule "simplifyUpdate2" (formula "55") (term "0,0,0"))
            (rule "applyOnRigidFormula" (formula "54") (term "1,1"))
            (rule "applyOnRigidFormula" (formula "54") (term "0,1"))
            (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
            (rule "add_literals" (formula "51") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "51") (term "0"))
            (rule "applyOnRigidTerm" (formula "54") (term "0,0"))
            (rule "simplifyUpdate1" (formula "54") (term "1,0,0"))
            (rule "simplifyUpdate1" (formula "54") (term "0,0,0"))
            (rule "applyOnPV" (formula "54") (term "1,0,0"))
            (rule "polySimp_addComm0" (formula "54") (term "0,0"))
            (rule "applyOnRigidFormula" (formula "53") (term "0,1"))
            (rule "simplifyUpdate2" (formula "53") (term "1,0,1"))
            (rule "simplifyUpdate2" (formula "53") (term "0,0,1"))
            (rule "applyOnRigidTerm" (formula "53") (term "0,0"))
            (rule "simplifyUpdate1" (formula "53") (term "0,0,0"))
            (rule "simplifyUpdate1" (formula "53") (term "1,0,0"))
            (rule "applyOnPV" (formula "53") (term "1,0,0"))
            (rule "polySimp_addComm0" (formula "53") (term "0,0"))
            (rule "applyOnRigidFormula" (formula "56") (term "1,1,0"))
            (rule "simplifyUpdate1" (formula "56") (term "1,1,1,0"))
            (rule "simplifyUpdate1" (formula "56") (term "0,1,1,0"))
            (rule "applyOnPV" (formula "56") (term "1,1,1,0"))
            (rule "applyOnRigidFormula" (formula "56") (term "0,1,0"))
            (rule "applyOnRigidFormula" (formula "56") (term "1,0,0"))
            (rule "simplifyUpdate1" (formula "56") (term "1,1,0,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "55") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "55") (term "2,0,1,0"))
            (rule "applyOnPV" (formula "55") (term "1,0,1,0"))
            (rule "applyOnPV" (formula "55") (term "0,0,1,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "1,1,0"))
            (rule "simplifyUpdate1" (formula "55") (term "0,1,1,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,1,1,0"))
            (rule "simplifyUpdate1" (formula "55") (term "2,1,1,0"))
            (rule "applyOnPV" (formula "55") (term "0,1,1,0"))
            (rule "applyOnPV" (formula "55") (term "1,1,1,0"))
            (rule "eqSymm" (formula "55") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "55") (term "1,0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0"))
            (rule "applyOnRigidFormula" (formula "54") (term "0,1,1"))
            (rule "simplifyUpdate2" (formula "54") (term "0,0,1,1"))
            (rule "simplifyUpdate2" (formula "54") (term "1,0,1,1"))
            (rule "applyOnRigidFormula" (formula "54") (term "0,0,1"))
            (rule "simplifyUpdate2" (formula "54") (term "0,0,0,1"))
            (rule "simplifyUpdate2" (formula "54") (term "1,0,0,1"))
            (rule "applyOnRigidTerm" (formula "54") (term "1,0,0"))
            (rule "simplifyUpdate1" (formula "54") (term "0,1,0,0"))
            (rule "applyOnRigidFormula" (formula "53") (term "1,0,1"))
            (rule "simplifyUpdate2" (formula "53") (term "1,1,0,1"))
            (rule "applyOnRigidFormula" (formula "53") (term "0,0,1"))
            (rule "simplifyUpdate2" (formula "53") (term "1,0,0,1"))
            (rule "simplifyUpdate2" (formula "53") (term "0,0,0,1"))
            (rule "applyOnRigidTerm" (formula "53") (term "1,0,0"))
            (rule "simplifyUpdate1" (formula "53") (term "0,1,0,0"))
            (rule "applyOnRigidTerm" (formula "56") (term "0,1,1,0"))
            (rule "simplifyUpdate1" (formula "56") (term "1,0,1,1,0"))
            (rule "simplifyUpdate1" (formula "56") (term "2,0,1,1,0"))
            (rule "simplifyUpdate1" (formula "56") (term "0,0,1,1,0"))
            (rule "applyOnPV" (formula "56") (term "1,0,1,1,0"))
            (rule "applyOnPV" (formula "56") (term "0,0,1,1,0"))
            (rule "applyOnRigidFormula" (formula "56") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "56") (term "1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "56") (term "0,0,0,1,0"))
            (rule "applyOnRigidTerm" (formula "56") (term "0,1,0,0"))
            (rule "simplifyUpdate1" (formula "56") (term "1,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
            (rule "polySimp_addComm0" (formula "54") (term "0,0,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "0,1,0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,0"))
            (rule "applyOnRigidFormula" (formula "54") (term "0,0,1,1"))
            (rule "simplifyUpdate2" (formula "54") (term "0,0,0,1,1"))
            (rule "applyOnRigidFormula" (formula "54") (term "1,0,1,1"))
            (rule "simplifyUpdate2" (formula "54") (term "1,1,0,1,1"))
            (rule "polySimp_addAssoc" (formula "53") (term "0,0"))
            (rule "polySimp_addComm0" (formula "53") (term "0,0,0"))
            (rule "applyOnRigidFormula" (formula "54") (term "0,0,0,1"))
            (rule "simplifyUpdate2" (formula "54") (term "1,0,0,0,1"))
            (rule "simplifyUpdate2" (formula "54") (term "0,0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "54") (term "1,0,0,1"))
            (rule "simplifyUpdate2" (formula "54") (term "1,1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "53") (term "0,1,0,1"))
            (rule "applyOnRigidFormula" (formula "53") (term "1,1,0,1"))
            (rule "applyOnRigidFormula" (formula "53") (term "1,0,0,1"))
            (rule "simplifyUpdate1" (formula "53") (term "1,1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "53") (term "0,0,0,1"))
            (rule "applyOnPV" (formula "53") (term "1,0,0,0,1"))
            (rule "simplifyUpdate1" (formula "53") (term "0,0,0,0,1"))
            (rule "applyOnRigidTerm" (formula "56") (term "1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "56") (term "1,1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "56") (term "2,1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "56") (term "0,1,0,0,1,0"))
            (rule "applyOnPV" (formula "56") (term "1,1,0,0,1,0"))
            (rule "applyOnPV" (formula "56") (term "0,1,0,0,1,0"))
            (rule "eqSymm" (formula "56") (term "0,0,1,0"))
            (rule "applyOnRigidTerm" (formula "56") (term "0,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "56") (term "0,0,0,1,0,0"))
            (rule "applyOnRigidTerm" (formula "54") (term "1,0,0"))
            (rule "simplifyUpdate1" (formula "54") (term "1,1,0,0"))
            (rule "applyOnPV" (formula "54") (term "0,1,0,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "0,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "0,0,0,1,0,0"))
            (rule "applyOnRigidFormula" (formula "54") (term "1,0,0,1,1"))
            (rule "simplifyUpdate1" (formula "54") (term "1,1,0,0,1,1"))
            (rule "applyOnRigidFormula" (formula "54") (term "0,1,0,1,1"))
            (rule "applyOnRigidFormula" (formula "54") (term "1,1,0,1,1"))
            (rule "applyOnRigidTerm" (formula "53") (term "1,0,0"))
            (rule "simplifyUpdate1" (formula "53") (term "1,1,0,0"))
            (rule "applyOnPV" (formula "53") (term "0,1,0,0"))
            (rule "applyOnRigidFormula" (formula "54") (term "1,0,0,0,1"))
            (rule "simplifyUpdate1" (formula "54") (term "1,1,0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "54") (term "0,0,0,0,1"))
            (rule "applyOnPV" (formula "54") (term "1,0,0,0,0,1"))
            (rule "simplifyUpdate1" (formula "54") (term "0,0,0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "54") (term "0,1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "54") (term "1,1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "53") (term "0,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "53") (term "1,0,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "53") (term "0,0,0,1,0,1"))
            (rule "applyOnPV" (formula "53") (term "1,0,0,1,0,1"))
            (rule "applyOnRigidFormula" (formula "53") (term "0,1,1,0,1"))
            (rule "simplifyUpdate1" (formula "53") (term "1,0,1,1,0,1"))
            (rule "applyOnRigidTerm" (formula "53") (term "0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "53") (term "1,0,1,0,0,1"))
            (rule "applyOnRigidTerm" (formula "56") (term "1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "56") (term "2,1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "56") (term "1,1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "56") (term "0,1,0,0,1,0"))
            (rule "applyOnPV" (formula "56") (term "1,1,0,0,1,0"))
            (rule "applyOnPV" (formula "56") (term "0,1,0,0,1,0"))
            (rule "applyOnRigidTerm" (formula "56") (term "1,0,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "56") (term "1,1,0,0,1,0,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "1,0,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,1,0,0"))
            (rule "applyOnRigidTerm" (formula "54") (term "0,1,0,0,1,1"))
            (rule "simplifyUpdate1" (formula "54") (term "1,0,1,0,0,1,1"))
            (rule "applyOnRigidFormula" (formula "54") (term "0,0,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "54") (term "1,0,0,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "54") (term "0,0,0,1,0,1,1"))
            (rule "applyOnPV" (formula "54") (term "1,0,0,1,0,1,1"))
            (rule "applyOnRigidFormula" (formula "54") (term "0,1,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "54") (term "1,0,1,1,0,1,1"))
            (rule "applyOnRigidTerm" (formula "54") (term "0,1,0,0,0,1"))
            (rule "simplifyUpdate1" (formula "54") (term "1,0,1,0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "54") (term "0,0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "54") (term "1,0,0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "54") (term "0,0,0,1,0,0,1"))
            (rule "applyOnPV" (formula "54") (term "1,0,0,1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "54") (term "0,1,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "54") (term "1,0,1,1,0,0,1"))
            (rule "applyOnRigidTerm" (formula "53") (term "0,0,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "53") (term "1,0,0,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "53") (term "2,0,0,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "53") (term "0,0,0,0,1,0,1"))
            (rule "applyOnPV" (formula "53") (term "1,0,0,0,1,0,1"))
            (rule "applyOnPV" (formula "53") (term "0,0,0,0,1,0,1"))
            (rule "applyOnRigidTerm" (formula "53") (term "0,0,1,1,0,1"))
            (rule "simplifyUpdate1" (formula "53") (term "2,0,0,1,1,0,1"))
            (rule "simplifyUpdate1" (formula "53") (term "0,0,0,1,1,0,1"))
            (rule "simplifyUpdate1" (formula "53") (term "1,0,0,1,1,0,1"))
            (rule "applyOnPV" (formula "53") (term "0,0,0,1,1,0,1"))
            (rule "applyOnPV" (formula "53") (term "1,0,0,1,1,0,1"))
            (rule "applyOnRigidTerm" (formula "53") (term "0,0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "53") (term "0,0,0,1,0,0,1"))
            (rule "applyOnRigidTerm" (formula "56") (term "0,1,0,0,1,0,0"))
            (rule "applyOnPV" (formula "56") (term "0,0,1,0,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "56") (term "1,0,1,0,0,1,0,0"))
            (rule "applyOnRigidTerm" (formula "55") (term "0,1,0,0,1,0,0"))
            (rule "applyOnPV" (formula "55") (term "0,0,1,0,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,0,1,0,0"))
            (rule "applyOnRigidTerm" (formula "54") (term "0,0,1,0,0,1,1"))
            (rule "simplifyUpdate1" (formula "54") (term "0,0,0,1,0,0,1,1"))
            (rule "applyOnRigidTerm" (formula "54") (term "0,0,0,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "54") (term "1,0,0,0,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "54") (term "2,0,0,0,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "54") (term "0,0,0,0,1,0,1,1"))
            (rule "applyOnPV" (formula "54") (term "1,0,0,0,1,0,1,1"))
            (rule "applyOnPV" (formula "54") (term "0,0,0,0,1,0,1,1"))
            (rule "applyOnRigidTerm" (formula "54") (term "0,0,1,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "54") (term "2,0,0,1,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "54") (term "0,0,0,1,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "54") (term "1,0,0,1,1,0,1,1"))
            (rule "applyOnPV" (formula "54") (term "0,0,0,1,1,0,1,1"))
            (rule "applyOnPV" (formula "54") (term "1,0,0,1,1,0,1,1"))
            (rule "applyOnRigidTerm" (formula "54") (term "0,0,1,0,0,0,1"))
            (rule "simplifyUpdate1" (formula "54") (term "0,0,0,1,0,0,0,1"))
            (rule "applyOnRigidTerm" (formula "54") (term "0,0,0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "54") (term "1,0,0,0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "54") (term "2,0,0,0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "54") (term "0,0,0,0,1,0,0,1"))
            (rule "applyOnPV" (formula "54") (term "1,0,0,0,1,0,0,1"))
            (rule "applyOnPV" (formula "54") (term "0,0,0,0,1,0,0,1"))
            (rule "variableDeclarationAssign" (formula "67") (term "1"))
            (rule "applyOnRigidTerm" (formula "54") (term "0,0,1,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "54") (term "2,0,0,1,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "54") (term "0,0,0,1,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "54") (term "1,0,0,1,1,0,0,1"))
            (rule "applyOnPV" (formula "54") (term "0,0,0,1,1,0,0,1"))
            (rule "applyOnPV" (formula "54") (term "1,0,0,1,1,0,0,1"))
            (rule "applyOnRigidTerm" (formula "53") (term "1,0,0,1,0,0,1"))
            (rule "applyOnPV" (formula "53") (term "0,1,0,0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "53") (term "1,1,0,0,1,0,0,1"))
            (rule "applyOnRigidTerm" (formula "54") (term "1,0,0,1,0,0,1,1"))
            (rule "applyOnPV" (formula "54") (term "0,1,0,0,1,0,0,1,1"))
            (rule "simplifyUpdate1" (formula "54") (term "1,1,0,0,1,0,0,1,1"))
            (rule "applyOnRigidTerm" (formula "54") (term "1,0,0,1,0,0,0,1"))
            (rule "simplifyUpdate1" (formula "54") (term "1,1,0,0,1,0,0,0,1"))
            (rule "applyOnPV" (formula "54") (term "0,1,0,0,1,0,0,0,1"))
            (rule "mod_axiom" (formula "14") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1"))
            (rule "div_literals" (formula "14") (term "0,1,1,1"))
            (rule "times_zero_2" (formula "14") (term "1,1,1"))
            (rule "add_zero_right" (formula "14") (term "1,1"))
            (rule "add_literals" (formula "14") (term "1"))
            (rule "mod_axiom" (formula "15") (term "1,1"))
            (rule "div_literals" (formula "15") (term "0,0,1,1,1"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1"))
            (rule "times_zero_2" (formula "15") (term "1,1,1"))
            (rule "add_zero_right" (formula "15") (term "1,1"))
            (rule "add_literals" (formula "15") (term "1"))
            (rule "variableDeclaration" (formula "67") (term "1") (newnames "b_1"))
            (rule "applyEq" (formula "16") (term "2,0,1,1,0,0,1,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "38"))
            (rule "applyEq" (formula "10") (term "0") (ifseqformula "24"))
            (rule "applyEq" (formula "14") (term "0") (ifseqformula "24"))
            (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "12") (term "0") (ifseqformula "24"))
            (rule "applyEq" (formula "11") (term "0") (ifseqformula "24"))
            (rule "applyEq" (formula "28") (term "0") (ifseqformula "24"))
            (rule "applyEq" (formula "29") (term "0") (ifseqformula "24"))
            (rule "applyEq" (formula "63") (term "0") (ifseqformula "38"))
            (rule "applyEq" (formula "20") (term "2,1,1,0,0,0,0,0,1,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "20") (term "2,1,1,1,0,0,1,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "38"))
            (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "20") (term "2,0,1,0,1,0,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "50") (term "0,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "16") (term "2,0,1,0,1,0,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "45") (term "0,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "55") (term "1,1,1,0") (ifseqformula "37"))
            (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "15"))
            (rule "add_literals" (formula "30") (term "0"))
            (rule "leq_literals" (formula "30"))
            (rule "true_left" (formula "30"))
            (rule "applyEq" (formula "9") (term "0") (ifseqformula "15"))
            (rule "inEqSimp_homoInEq0" (formula "9"))
            (rule "mul_literals" (formula "9") (term "1,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0"))
            (rule "add_literals" (formula "9") (term "0,0"))
            (rule "applyEq" (formula "51") (term "1,0,0,1,0,1") (ifseqformula "36"))
            (rule "applyEq" (formula "33") (term "0") (ifseqformula "15"))
            (rule "qeq_literals" (formula "33"))
            (rule "true_left" (formula "33"))
            (rule "applyEq" (formula "51") (term "1,0,0,1,0,1,1") (ifseqformula "35"))
            (rule "applyEq" (formula "51") (term "1,0,0,1,0,0,1") (ifseqformula "35"))
            (rule "applyEq" (formula "32") (term "0") (ifseqformula "15"))
            (rule "leq_literals" (formula "32"))
            (rule "true_left" (formula "32"))
            (rule "applyEq" (formula "20") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "19") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
            (rule "applyEq" (formula "16") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
            (rule "applyEq" (formula "21") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
            (rule "applyEq" (formula "20") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "19") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "18") (term "0,1,0,0,0,0,0") (ifseqformula "24"))
            (rule "applyEq" (formula "20") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
            (rule "applyEq" (formula "52") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
            (rule "applyEq" (formula "51") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
            (rule "jmod_axiom" (formula "41") (term "0"))
            (rule "polySimp_mulLiterals" (formula "41") (term "1,0"))
            (rule "applyEq" (formula "50") (term "0,1,0,0,1,0,0,0,1") (ifseqformula "24"))
            (rule "applyEq" (formula "62") (term "0,1,0,0") (ifseqformula "24"))
            (rule "applyEq" (formula "62") (term "0,1,0,0,0,0") (ifseqformula "34"))
            (rule "applyEq" (formula "16") (term "2,0,1,1,0,0,1,1,0") (ifseqformula "14"))
            (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "14"))
            (rule "leq_literals" (formula "10"))
            (rule "closeFalse" (formula "10"))
         )
      )
      (branch "Exceptional Post (hash)"
         (rule "simplifyUpdate2" (formula "15"))
         (rule "eqSymm" (formula "15") (term "0,0,0,0,0,1,0,1,1,1"))
         (rule "translateJavaMod" (formula "15") (term "0,1,0,0,0,0,1,0,1,1,1"))
         (rule "sequentialToParallel2" (formula "15"))
         (rule "simplifyUpdate3" (formula "15") (term "1,0"))
         (rule "andLeft" (formula "15"))
         (rule "simplifyUpdate2" (formula "15"))
         (rule "andLeft" (formula "16"))
         (rule "simplifyUpdate2" (formula "17"))
         (rule "andLeft" (formula "15"))
         (rule "notLeft" (formula "15"))
         (rule "applyOnRigidFormula" (formula "16"))
         (rule "simplifyUpdate2" (formula "16") (term "1"))
         (rule "simplifyUpdate2" (formula "16") (term "0"))
         (rule "applyOnRigidFormula" (formula "17"))
         (rule "simplifyUpdate2" (formula "17") (term "1"))
         (rule "replace_known_right" (formula "17") (term "1,1") (ifseqformula "18"))
         (rule "concrete_and_4" (formula "17") (term "1"))
         (rule "concrete_impl_3" (formula "17"))
         (rule "notLeft" (formula "17"))
         (rule "applyOnRigidFormula" (formula "16") (term "1"))
         (rule "simplifyUpdate2" (formula "16") (term "1,1"))
         (rule "replace_known_right" (formula "16") (term "1,1") (ifseqformula "18"))
         (rule "concrete_and_4" (formula "16") (term "1"))
         (rule "concrete_impl_3" (formula "16"))
         (rule "notLeft" (formula "16"))
         (rule "applyOnRigidFormula" (formula "17"))
         (rule "simplifyUpdate2" (formula "17") (term "0"))
         (rule "applyOnRigidFormula" (formula "16"))
         (rule "simplifyUpdate2" (formula "16") (term "0"))
         (rule "applyOnRigidFormula" (formula "17") (term "1"))
         (rule "simplifyUpdate2" (formula "17") (term "0,1"))
         (rule "simplifyUpdate2" (formula "17") (term "1,1"))
         (rule "applyOnRigidFormula" (formula "17") (term "0"))
         (rule "applyOnPV" (formula "17") (term "0,0"))
         (rule "simplifyUpdate1" (formula "17") (term "1,0"))
         (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "19"))
         (rule "concrete_and_2" (formula "17"))
         (rule "false_right" (formula "17"))
         (rule "applyOnRigidFormula" (formula "16") (term "1"))
         (rule "simplifyUpdate2" (formula "16") (term "0,1"))
         (rule "simplifyUpdate2" (formula "16") (term "1,1"))
         (rule "applyOnRigidFormula" (formula "16") (term "0"))
         (rule "applyOnRigidFormula" (formula "16") (term "0,1"))
         (rule "applyOnPV" (formula "16") (term "0,0,1"))
         (rule "replace_known_left" (formula "16") (term "0,1") (ifseqformula "13"))
         (rule "concrete_and_1" (formula "16") (term "1"))
         (rule "applyOnRigidFormula" (formula "16") (term "0,0"))
         (rule "applyOnPV" (formula "16") (term "0,0,0"))
         (rule "simplifyUpdate1" (formula "16") (term "1,0,0"))
         (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "18"))
         (rule "concrete_not_2" (formula "16") (term "0"))
         (rule "concrete_and_1" (formula "16"))
         (rule "notRight" (formula "16"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "close" (formula "18") (ifseqformula "1"))
      )
      (branch "Pre (hash)"
         (rule "simplifyUpdate2" (formula "19"))
         (rule "expand_inInt" (formula "19") (term "1,1,1,1"))
         (rule "replace_int_MAX" (formula "19") (term "1,0,1,1,1,1"))
         (rule "replace_int_MIN" (formula "19") (term "0,1,1,1,1,1"))
         (rule "simplifyUpdate2" (formula "19") (term "1"))
         (rule "applyOnRigidFormula" (formula "19"))
         (rule "simplifyUpdate2" (formula "19") (term "0"))
         (rule "applyOnRigidFormula" (formula "19") (term "1"))
         (rule "simplifyUpdate2" (formula "19") (term "1,1"))
         (rule "simplifyUpdate2" (formula "19") (term "0,1"))
         (rule "applyOnRigidFormula" (formula "19") (term "0"))
         (rule "applyOnRigidFormula" (formula "19") (term "1,1"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,1"))
         (rule "simplifyUpdate2" (formula "19") (term "0,0,1"))
         (rule "replace_known_left" (formula "19") (term "0,0,1") (ifseqformula "1"))
         (rule "concrete_and_1" (formula "19") (term "0,1"))
         (rule "applyOnRigidFormula" (formula "19") (term "1,0"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,0"))
         (rule "applyOnRigidFormula" (formula "19") (term "1,1,1"))
         (rule "simplifyUpdate1" (formula "19") (term "0,1,1,1"))
         (rule "applyOnPV" (formula "19") (term "1,1,1,1"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,1,1"))
         (rule "applyOnPV" (formula "19") (term "0,0,1,1"))
         (rule "simplifyUpdate1" (formula "19") (term "1,0,1,1"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,1"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "19") (term "1,0,1,0"))
         (rule "applyOnPV" (formula "19") (term "0,0,1,0"))
         (rule "replace_known_right" (formula "19") (term "0,1,0") (ifseqformula "15"))
         (rule "concrete_and_2" (formula "19") (term "1,0"))
         (rule "concrete_or_4" (formula "19") (term "0"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,0,1"))
         (rule "simplifyUpdate1" (formula "19") (term "1,0,0,1"))
         (rule "applyOnPV" (formula "19") (term "0,0,0,1"))
         (rule "replace_known_right" (formula "19") (term "0,0,1") (ifseqformula "15"))
         (rule "concrete_or_2" (formula "19") (term "0,1"))
         (rule "applyOnRigidFormula" (formula "19") (term "1,0"))
         (rule "simplifyUpdate2" (formula "19") (term "0,1,0"))
         (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "13"))
         (rule "concrete_and_1" (formula "19") (term "1,0"))
         (rule "eq_and" (formula "19") (term "0"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,1"))
         (rule "simplifyUpdate1" (formula "19") (term "1,0,1"))
         (rule "applyOnRigidFormula" (formula "19") (term "0"))
         (rule "applyOnRigidTerm" (formula "19") (term "0,0,1"))
         (rule "simplifyUpdate1" (formula "19") (term "2,0,0,1"))
         (rule "simplifyUpdate1" (formula "19") (term "0,0,0,1"))
         (rule "applyOnPV" (formula "19") (term "1,0,0,1"))
         (rule "replace_known_left" (formula "19") (term "0,1") (ifseqformula "11"))
         (rule "concrete_and_1" (formula "19") (term "1"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,0"))
         (rule "applyOnPV" (formula "19") (term "0,0,0"))
         (rule "simplifyUpdate1" (formula "19") (term "1,0,0"))
         (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "15"))
         (rule "concrete_not_2" (formula "19") (term "0"))
         (rule "concrete_and_1" (formula "19"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "1"))
         (rule "mod_axiom" (formula "8") (term "1,1"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1"))
         (rule "div_literals" (formula "8") (term "0,1,1,1"))
         (rule "times_zero_2" (formula "8") (term "1,1,1"))
         (rule "add_zero_right" (formula "8") (term "1,1"))
         (rule "add_literals" (formula "8") (term "1"))
         (rule "mod_axiom" (formula "9") (term "1,1"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1"))
         (rule "div_literals" (formula "9") (term "0,1,1,1"))
         (rule "times_zero_2" (formula "9") (term "1,1,1"))
         (rule "add_zero_right" (formula "9") (term "1,1"))
         (rule "add_literals" (formula "9") (term "1"))
         (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "12"))
         (rule "applyEq" (formula "14") (term "0") (ifseqformula "11"))
         (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "8"))
         (rule "qeq_literals" (formula "17") (term "1"))
         (rule "concrete_and_3" (formula "17"))
         (rule "inEqSimp_leqRight" (formula "17"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "10"))
         (rule "inEqSimp_homoInEq0" (formula "8"))
         (rule "mul_literals" (formula "8") (term "1,0"))
         (rule "polySimp_addComm1" (formula "8") (term "0"))
         (rule "add_literals" (formula "8") (term "0,0"))
         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "9"))
         (rule "add_literals" (formula "1") (term "0"))
         (rule "qeq_literals" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (tab = null)"
      (rule "false_right" (formula "20"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "mod_axiom" (formula "10") (term "1,1"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1"))
      (rule "div_literals" (formula "10") (term "0,1,1,1"))
      (rule "times_zero_2" (formula "10") (term "1,1,1"))
      (rule "add_zero_right" (formula "10") (term "1,1"))
      (rule "add_literals" (formula "10") (term "1"))
      (rule "mod_axiom" (formula "9") (term "1,1"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1"))
      (rule "div_literals" (formula "9") (term "0,1,1,1"))
      (rule "times_zero_2" (formula "9") (term "1,1,1"))
      (rule "add_zero_right" (formula "9") (term "1,1"))
      (rule "add_literals" (formula "9") (term "1"))
      (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "13"))
      (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "15") (term "0") (ifseqformula "12"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "10"))
      (rule "inEqSimp_homoInEq0" (formula "8"))
      (rule "mul_literals" (formula "8") (term "1,0"))
      (rule "polySimp_addComm1" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "mod_axiom" (formula "8") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
      (rule "add_literals" (formula "8") (term "0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "8"))
      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
      (rule "polyDiv_pullOut" (formula "8") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
      (rule "equal_literals" (formula "8") (term "0,0,0"))
      (rule "ifthenelse_false" (formula "8") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
      (rule "mul_literals" (formula "8") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "0"))
      (rule "polySimp_addComm0" (formula "8") (term "1,0"))
      (rule "polySimp_addComm1" (formula "8") (term "0,1,1,0"))
      (rule "add_literals" (formula "8") (term "0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "8") (term "0"))
      (rule "mul_literals" (formula "8") (term "0,0"))
      (rule "inEqSimp_homoInEq0" (formula "8"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
      (rule "mul_literals" (formula "8") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "polySimp_addComm1" (formula "8") (term "0,0"))
      (rule "add_literals" (formula "8") (term "0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "8"))
      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
      (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "13"))
      (rule "notLeft" (formula "13"))
      (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "11") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "4"))
      (rule "insert_constant_value" (formula "11") (term "1,1,0,0,0,0,0,0,0"))
      (rule "insert_constant_value" (formula "11") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "insert_constant_value" (formula "11") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "eqClose" (formula "11") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "concrete_and_3" (formula "11") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "insert_constant_value" (formula "11") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "insert_constant_value" (formula "11") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "eqClose" (formula "11") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "concrete_and_3" (formula "11") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "insert_constant_value" (formula "11") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "eqClose" (formula "11") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "concrete_and_3" (formula "11") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "expand_inInt" (formula "11") (term "0,1"))
      (rule "expand_inInt" (formula "11") (term "1,1"))
      (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "replace_int_MAX" (formula "11") (term "1,0,0,1"))
      (rule "replace_int_MIN" (formula "11") (term "0,1,0,1"))
      (rule "replace_int_MAX" (formula "11") (term "1,0,1,1"))
      (rule "replace_int_MIN" (formula "11") (term "0,1,1,1"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "13"))
      (rule "notLeft" (formula "12"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "13"))
      (rule "notLeft" (formula "12"))
      (rule "notLeft" (formula "12"))
      (rule "close" (formula "29") (ifseqformula "1"))
   )
)
(branch "Exceptional Post (maskNull)"
   (rule "simplifyUpdate2" (formula "15"))
   (rule "simplifyUpdate2" (formula "11"))
   (rule "simplifyUpdate2" (formula "11") (term "1"))
   (rule "andLeft" (formula "11"))
   (rule "simplifyUpdate2" (formula "11"))
   (rule "andLeft" (formula "12"))
   (rule "simplifyUpdate2" (formula "13"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "13"))
   (rule "notLeft" (formula "11"))
   (rule "close" (formula "15") (ifseqformula "14"))
)
(branch "Pre (maskNull)"
   (rule "simplifyUpdate2" (formula "14"))
   (rule "simplifyUpdate2" (formula "14") (term "1"))
   (rule "applyOnRigidFormula" (formula "14"))
   (rule "applyOnRigidFormula" (formula "14") (term "0"))
   (rule "simplifyUpdate2" (formula "14") (term "0,0"))
   (rule "applyOnRigidFormula" (formula "14") (term "1"))
   (rule "simplifyUpdate2" (formula "14") (term "0,1"))
   (rule "replace_known_left" (formula "14") (term "0,1") (ifseqformula "1"))
   (rule "concrete_and_1" (formula "14") (term "1"))
   (rule "applyOnRigidFormula" (formula "14") (term "1,0"))
   (rule "applyOnRigidFormula" (formula "14") (term "1"))
   (rule "applyOnRigidFormula" (formula "14") (term "0,1,0"))
   (rule "applyOnPV" (formula "14") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
   (rule "replace_known_right" (formula "14") (term "0,1,0") (ifseqformula "13"))
   (rule "concrete_not_2" (formula "14") (term "1,0"))
   (rule "concrete_and_3" (formula "14") (term "0"))
   (rule "applyOnRigidFormula" (formula "14") (term "1,1"))
   (rule "simplifyUpdate1" (formula "14") (term "1,1,1"))
   (rule "applyOnRigidFormula" (formula "14") (term "0,1"))
   (rule "simplifyUpdate1" (formula "14") (term "1,0,1"))
   (rule "applyOnPV" (formula "14") (term "0,0,1"))
   (rule "replace_known_right" (formula "14") (term "0,1") (ifseqformula "13"))
   (rule "concrete_or_2" (formula "14") (term "1"))
   (rule "applyOnRigidTerm" (formula "14") (term "0,1"))
   (rule "simplifyUpdate1" (formula "14") (term "2,0,1"))
   (rule "applyOnPV" (formula "14") (term "1,0,1"))
   (rule "simplifyUpdate1" (formula "14") (term "0,0,1"))
   (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "4"))
   (rule "concrete_and_3" (formula "14"))
   (rule "mod_axiom" (formula "9") (term "1,1"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1"))
   (rule "div_literals" (formula "9") (term "0,1,1,1"))
   (rule "times_zero_2" (formula "9") (term "1,1,1"))
   (rule "add_zero_right" (formula "9") (term "1,1"))
   (rule "add_literals" (formula "9") (term "1"))
   (rule "mod_axiom" (formula "8") (term "1,1"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1"))
   (rule "div_literals" (formula "8") (term "0,1,1,1"))
   (rule "mul_literals" (formula "8") (term "1,1,1"))
   (rule "add_zero_right" (formula "8") (term "1,1"))
   (rule "add_literals" (formula "8") (term "1"))
   (rule "applyEq" (formula "7") (term "0") (ifseqformula "9"))
   (rule "inEqSimp_homoInEq0" (formula "7"))
   (rule "mul_literals" (formula "7") (term "1,0"))
   (rule "polySimp_addComm1" (formula "7") (term "0"))
   (rule "add_literals" (formula "7") (term "0,0"))
   (rule "mod_axiom" (formula "7") (term "1,0"))
   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
   (rule "polySimp_addAssoc" (formula "7") (term "0"))
   (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
   (rule "add_literals" (formula "7") (term "0,0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "7"))
   (rule "polySimp_mulLiterals" (formula "7") (term "0"))
   (rule "polyDiv_pullOut" (formula "7") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
   (rule "mul_literals" (formula "7") (term "0,1,0,0,2,0,0"))
   (rule "equal_literals" (formula "7") (term "0,0,0"))
   (rule "ifthenelse_false" (formula "7") (term "0,0"))
   (rule "mul_literals" (formula "7") (term "1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "0"))
   (rule "polySimp_addComm1" (formula "7") (term "0,0,1,0"))
   (rule "add_literals" (formula "7") (term "0,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "7") (term "1,0"))
   (rule "polySimp_rightDist" (formula "7") (term "0"))
   (rule "mul_literals" (formula "7") (term "0,0"))
   (rule "inEqSimp_homoInEq0" (formula "7"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
   (rule "polySimp_rightDist" (formula "7") (term "1,0"))
   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
   (rule "mul_literals" (formula "7") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "7") (term "0"))
   (rule "polySimp_addComm1" (formula "7") (term "0,0"))
   (rule "add_literals" (formula "7") (term "0,0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "7"))
   (rule "polySimp_mulLiterals" (formula "7") (term "0"))
   (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "14"))
   (rule "notRight" (formula "14"))
   (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "11") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "4"))
   (rule "insert_constant_value" (formula "11") (term "1,1,0,0,0,0,0,0,0"))
   (rule "insert_constant_value" (formula "11") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "insert_constant_value" (formula "11") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "insert_constant_value" (formula "11") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "eqClose" (formula "11") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_3" (formula "11") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "insert_constant_value" (formula "11") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "eqClose" (formula "11") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_3" (formula "11") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "insert_constant_value" (formula "11") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "eqClose" (formula "11") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_3" (formula "11") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "expand_inInt" (formula "11") (term "1,1"))
   (rule "expand_inInt" (formula "11") (term "0,1"))
   (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "11") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "replace_int_MIN" (formula "11") (term "0,1,1,1"))
   (rule "replace_int_MAX" (formula "11") (term "1,0,1,1"))
   (rule "replace_int_MIN" (formula "11") (term "0,1,0,1"))
   (rule "replace_int_MAX" (formula "11") (term "1,0,0,1"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "11"))
   (rule "notLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "notLeft" (formula "12"))
   (rule "close" (formula "28") (ifseqformula "1"))
)
)
}
