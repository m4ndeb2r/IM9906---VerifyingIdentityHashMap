\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Sep 24 17:50:36 CEST 2021
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , javaLoopTreatment-javaLoopTreatment\\:efficient
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[Strategy]Timeout=-1
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\bootclasspath "../../../../jre";

\javaSource "../../../../src";

\include "../../../../functions.key";

\proofObligation "#Proof Obligation Settings
#Fri Sep 24 17:50:36 CEST 2021
contract=java.util.VerifiedIdentityHashMap[java.util.Map\\:\\:containsKey(java.lang.Object)].JML behavior operation contract.0
name=java.util.VerifiedIdentityHashMap[java.util.Map\\:\\:containsKey(java.lang.Object)].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "martindeboer" ) (keyVersion "a6034b00a3"))

(autoModeTime "117054")

(branch "dummy ID"
(rule "instanceof_static_type" (formula "1") (term "0,0,0,1,1,0,0,1,1") (newnames "key,self,result,exc,heapAtPre,o,f"))
(rule "boolean_equal" (formula "1") (term "0,0,1,1,0,0,1,1"))
(rule "concrete_impl_1" (formula "1") (term "0,1,1,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "8"))
(rule "concrete_or_2" (formula "4"))
(rule "assignment" (formula "9") (term "1"))
(rule "sequentialToParallel2" (formula "9"))
(rule "simplifyUpdate3" (formula "9") (term "1,0"))
(rule "elementOfSetMinus" (formula "9") (term "0,0,0,0,1,0,1"))
(rule "elementOfAllLocs" (formula "9") (term "0,0,0,0,0,1,0,1"))
(rule "concrete_and_1" (formula "9") (term "0,0,0,0,1,0,1"))
(rule "elementOfFreshLocs" (formula "9") (term "0,0,0,0,0,1,0,1"))
(rule "neq_or_2" (formula "9") (term "0,0,0,1,0,1"))
(rule "concrete_or_1" (formula "9") (term "0,0,1,0,1"))
(rule "simplifyUpdate2" (formula "9"))
(rule "all_unused" (formula "9") (term "1,0,1"))
(rule "all_unused" (formula "9") (term "1,0,1"))
(rule "concrete_and_3" (formula "9") (term "0,1"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_containsKey,savedHeapBefore_containsKey,_keyBefore_containsKey"))
(rule "simplifyUpdate2" (formula "9") (term "1"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "k"))
 (builtin "Use Operation Contract" (formula "9") (newnames "heapBefore_maskNull,result_0,exc_0") (contract "java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap::maskNull(java.lang.Object)].JML normal_behavior operation contract.0"))
(branch "Post (maskNull)"
   (rule "simplifyUpdate2" (formula "7"))
   (rule "simplifyUpdate2" (formula "10"))
   (rule "simplifyUpdate2" (formula "7") (term "1"))
   (rule "andLeft" (formula "7"))
   (rule "simplifyUpdate2" (formula "7"))
   (rule "andLeft" (formula "8"))
   (rule "simplifyUpdate2" (formula "9"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "9"))
   (rule "simplifyUpdate2" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "notLeft" (formula "11"))
   (rule "eqSymm" (formula "8") (term "1,1"))
   (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "12"))
   (rule "concrete_or_2" (formula "7"))
   (rule "applyOnRigidFormula" (formula "9"))
   (rule "applyOnRigidFormula" (formula "8"))
   (rule "simplifyUpdate2" (formula "8") (term "1"))
   (rule "applyOnRigidFormula" (formula "9") (term "0"))
   (rule "applyOnRigidFormula" (formula "9") (term "1"))
   (rule "applyOnPV" (formula "9") (term "1,1"))
   (rule "simplifyUpdate1" (formula "9") (term "0,1"))
   (rule "applyOnRigidFormula" (formula "8") (term "0"))
   (rule "applyOnPV" (formula "8") (term "0,0"))
   (rule "simplifyUpdate1" (formula "8") (term "1,0"))
   (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "14"))
   (rule "concrete_impl_2" (formula "8"))
   (rule "true_left" (formula "8"))
   (rule "applyOnRigidFormula" (formula "8") (term "0,0"))
   (rule "applyOnPV" (formula "8") (term "0,0,0"))
   (rule "simplifyUpdate1" (formula "8") (term "1,0,0"))
   (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "13"))
   (rule "concrete_not_2" (formula "8") (term "0"))
   (rule "concrete_impl_1" (formula "8"))
   (rule "assignment" (formula "14") (term "1"))
   (rule "sequentialToParallel2" (formula "14"))
   (rule "simplifyUpdate3" (formula "14") (term "1,0"))
   (rule "variableDeclarationAssign" (formula "14") (term "1"))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "tab"))
   (rule "assignment_read_attribute_this" (formula "14"))
   (rule "sequentialToParallel2" (formula "14"))
   (rule "simplifyUpdate3" (formula "14") (term "1,0"))
   (rule "variableDeclarationAssign" (formula "14") (term "1"))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "len"))
   (rule "assignment_read_length" (formula "14"))
   (branch "Normal Execution (tab != null)"
      (rule "sequentialToParallel2" (formula "14"))
      (rule "simplifyUpdate3" (formula "14") (term "1,0"))
      (rule "applyOnElementary" (formula "14") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
      (rule "applyOnPV" (formula "14") (term "0,0,1,0"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "i"))
       (builtin "Use Operation Contract" (formula "14") (newnames "heapBefore_hash,result_1,exc_1") (contract "java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap::hash(java.lang.Object,int)].JML normal_behavior operation contract.0"))
      (branch "Post (hash)"
         (rule "simplifyUpdate2" (formula "11"))
         (rule "simplifyUpdate2" (formula "11") (term "1"))
         (rule "andLeft" (formula "11"))
         (rule "simplifyUpdate2" (formula "11"))
         (rule "andLeft" (formula "12"))
         (rule "simplifyUpdate2" (formula "13"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "12"))
         (rule "simplifyUpdate2" (formula "13"))
         (rule "andLeft" (formula "12"))
         (rule "simplifyUpdate2" (formula "13"))
         (rule "andLeft" (formula "12"))
         (rule "simplifyUpdate2" (formula "13"))
         (rule "andLeft" (formula "12"))
         (rule "simplifyUpdate2" (formula "13"))
         (rule "andLeft" (formula "12"))
         (rule "simplifyUpdate2" (formula "12"))
         (rule "translateJavaMod" (formula "14") (term "0"))
         (rule "eqSymm" (formula "13") (term "1"))
         (rule "applyOnRigidFormula" (formula "15"))
         (rule "simplifyUpdate1" (formula "15") (term "0"))
         (rule "applyOnPV" (formula "15") (term "1"))
         (rule "applyOnRigidFormula" (formula "12"))
         (rule "simplifyUpdate2" (formula "12") (term "1"))
         (rule "applyOnRigidFormula" (formula "13"))
         (rule "simplifyUpdate1" (formula "13") (term "1"))
         (rule "applyOnRigidFormula" (formula "12") (term "0"))
         (rule "simplifyUpdate1" (formula "12") (term "1,0"))
         (rule "applyOnPV" (formula "12") (term "0,0"))
         (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "18"))
         (rule "concrete_impl_2" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "applyOnRigidTerm" (formula "12") (term "0"))
         (rule "simplifyUpdate1" (formula "12") (term "0,0"))
         (rule "simplifyUpdate1" (formula "12") (term "1,0"))
         (rule "applyOnPV" (formula "12") (term "0,0"))
         (rule "applyOnPV" (formula "12") (term "1,0"))
         (rule "assignment" (formula "20") (term "1"))
         (rule "sequentialToParallel2" (formula "20"))
         (rule "simplifyUpdate3" (formula "20") (term "1,0"))
         (rule "variableDeclarationGhostAssign" (formula "20") (term "1"))
         (rule "variableDeclarationGhost" (formula "20") (term "1") (newnames "hash"))
         (rule "assignment" (formula "20") (term "1"))
         (rule "sequentialToParallel2" (formula "20"))
         (rule "simplifyUpdate3" (formula "20") (term "1,0"))
         (rule "applyOnElementary" (formula "20") (term "1,0"))
         (rule "applyOnPV" (formula "20") (term "0,1,0"))
         (rule "arrayLengthIsAShort" (formula "14") (term "1"))
         (rule "arrayLengthNotNegative" (formula "15") (term "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "0,1") (ifseqformula "1"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_11_in_VerifiedIdentityHashMap" (formula "6") (inst "i=i_1"))
         (rule "eqSymm" (formula "6"))
         (rule "polySimp_mulComm0" (formula "6") (term "0,2,0,0,0,2,0"))
         (rule "ifthenelse_negated" (formula "6") (term "2,0"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_3_in_VerifiedIdentityHashMap" (formula "7"))
         (rule "insert_constant_value" (formula "7") (term "0,0,1"))
         (rule "insert_constant_value" (formula "7") (term "0,1,0,0"))
         (rule "eqClose" (formula "7") (term "1,0,0"))
         (rule "concrete_and_3" (formula "7") (term "0,0"))
         (rule "insert_constant_value" (formula "7") (term "0,0,1,0"))
         (rule "insert_constant_value" (formula "7") (term "0,1,0,0"))
         (rule "eqClose" (formula "7") (term "1,0,0"))
         (rule "concrete_and_3" (formula "7") (term "0,0"))
         (rule "insert_constant_value" (formula "7") (term "0,1,0,0"))
         (rule "eqClose" (formula "7") (term "1,0,0"))
         (rule "concrete_and_3" (formula "7") (term "0,0"))
         (rule "mul_literals" (formula "7") (term "0,1"))
         (rule "mul_literals" (formula "7") (term "0,1,0"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "notLeft" (formula "7"))
         (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "23"))
         (rule "concrete_or_2" (formula "19"))
         (rule "inEqSimp_commuteGeq" (formula "8"))
         (rule "inEqSimp_commuteLeq" (formula "7"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_2_in_VerifiedIdentityHashMap" (formula "9"))
         (rule "notLeft" (formula "9"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
         (rule "concrete_or_2" (formula "1"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_17_in_VerifiedIdentityHashMap" (formula "10") (inst "i=i_1") (inst "j=j"))
         (rule "polySimp_mulComm0" (formula "10") (term "0,2,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "0,2,0,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "0,2,0,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "0,2,0,1,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,1,0"))
         (rule "commute_and" (formula "10") (term "0,0"))
         (rule "commute_and" (formula "10") (term "0,0,1,1,0"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_VerifiedIdentityHashMap" (formula "11") (inst "i=i_1") (inst "j=j"))
         (rule "eqSymm" (formula "11") (term "1,1,0,1,0"))
         (rule "eqSymm" (formula "11") (term "1,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "0,2,0,0,0,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "0,2,1,1,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "0,2,0,1,0,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
         (rule "commute_and" (formula "11") (term "0,0"))
         (rule "commute_and" (formula "11") (term "0,0,1,0"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_15_in_VerifiedIdentityHashMap" (formula "12") (inst "i=i_1"))
         (rule "exLeft" (formula "12") (inst "sk=i_1_0"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "12"))
         (rule "polySimp_mulComm0" (formula "14") (term "0,2,0"))
         (rule "inEqSimp_commuteLeq" (formula "12"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0") (ifseqformula "2"))
         (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "15"))
         (rule "concrete_or_1" (formula "14"))
         (rule "true_left" (formula "14"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_23_in_VerifiedIdentityHashMap" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_VerifiedIdentityHashMap" (formula "17"))
         (rule "insert_constant_value" (formula "17") (term "1"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_5_in_VerifiedIdentityHashMap" (formula "18") (inst "i=i_1"))
         (rule "polySimp_addComm0" (formula "18") (term "0,2,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
         (rule "commute_and" (formula "18") (term "0,0"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_13_in_VerifiedIdentityHashMap" (formula "19") (inst "i=i_1"))
         (rule "exLeft" (formula "19") (inst "sk=i_1_1"))
         (rule "andLeft" (formula "19"))
         (rule "andLeft" (formula "19"))
         (rule "eqSymm" (formula "21"))
         (rule "inEqSimp_commuteLeq" (formula "19"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_21_in_VerifiedIdentityHashMap" (formula "22"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_19_in_VerifiedIdentityHashMap" (formula "23") (inst "i=i_1") (inst "j=j"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "0,2,0,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "0,2,0,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "0,2,0,1,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "0,2,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,1,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,0,1,1,0"))
         (rule "commute_and" (formula "23") (term "0,0"))
         (rule "commute_and" (formula "23") (term "1,0,0,1,1,0"))
         (rule "commute_and" (formula "23") (term "0,0,0,1,1,0"))
         (rule "cnf_rightDist" (formula "23") (term "0,0,1,1,0"))
         (rule "commute_or" (formula "23") (term "0,0,0,1,1,0"))
         (rule "cnf_rightDist" (formula "23") (term "1,0,0,1,1,0"))
         (rule "commute_or" (formula "23") (term "0,1,0,0,1,1,0"))
         (rule "commute_or" (formula "23") (term "1,1,0,0,1,1,0"))
         (rule "cnf_rightDist" (formula "23") (term "0,0,0,1,1,0"))
         (rule "commute_or" (formula "23") (term "1,0,0,0,1,1,0"))
         (rule "commute_or" (formula "23") (term "0,0,0,0,1,1,0"))
         (rule "shift_paren_and" (formula "23") (term "0,0,1,1,0"))
         (rule "commute_and_2" (formula "23") (term "0,0,1,1,0"))
         (rule "commute_and_2" (formula "23") (term "0,0,0,1,1,0"))
         (rule "commute_and_2" (formula "23") (term "0,0,1,1,0"))
         (rule "commute_and" (formula "23") (term "0,0,0,0,1,1,0"))
         (rule "commute_and_2" (formula "23") (term "0,0,0,1,1,0"))
         (rule "Partial_inv_axiom_for_static_JML_class_invariant_nr_2_in_VerifiedIdentityHashMap" (formula "27"))
         (rule "notLeft" (formula "27"))
          (builtin "Loop Invariant" (formula "43") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
         (branch "Invariant Initially Valid"
            (rule "expand_inShort" (formula "32"))
            (rule "simplifyUpdate2" (formula "43"))
            (rule "expand_inInt" (formula "29"))
            (rule "expand_inInt" (formula "16"))
            (rule "expand_inInt" (formula "15"))
            (rule "replace_short_MAX" (formula "32") (term "1,0"))
            (rule "replace_short_MIN" (formula "32") (term "0,1"))
            (rule "replace_int_MIN" (formula "29") (term "0,1"))
            (rule "replace_int_MAX" (formula "29") (term "1,0"))
            (rule "replace_int_MIN" (formula "16") (term "0,1"))
            (rule "replace_int_MAX" (formula "16") (term "1,0"))
            (rule "replace_int_MIN" (formula "15") (term "0,1"))
            (rule "replace_int_MAX" (formula "15") (term "1,0"))
            (rule "andLeft" (formula "32"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "15"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "47") (term "0,1,0,0,1,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "47") (term "0,2,0,0,0,1,0,1,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "47") (term "0,2,0,0,1,1,0,1,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "47") (term "0,2,0,0,1,1,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "47") (term "0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "47") (term "0,2,0,0,0,1,0,1,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "47") (term "0,2,0,0,1,1,0,1,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "47") (term "0,2,0,0,0,1,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "47") (term "0,1,0,0,1,1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "10") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "13"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "13") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "25") (term "0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "19"))
            (rule "mul_literals" (formula "19") (term "1,0,0"))
            (rule "add_literals" (formula "19") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "25") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulAssoc" (formula "25") (term "1,0,0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,1,1,0"))
            (rule "polySimp_mulAssoc" (formula "25") (term "1,0,0,0,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,0,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "22"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "22") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "39"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "39") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "47") (term "0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1,0,1"))
            (rule "inEqSimp_gtToGeq" (formula "47") (term "0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0,0,0,1"))
            (rule "polySimp_addComm1" (formula "47") (term "0,1,0,0,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0,1,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0,1,1,1,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0,0,1,1,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0,1,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0,1,1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "36"))
            (rule "inEqSimp_commuteLeq" (formula "32"))
            (rule "inEqSimp_commuteLeq" (formula "18"))
            (rule "inEqSimp_commuteLeq" (formula "16"))
            (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0,1,1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0,1,1,1,0,1"))
            (rule "applyOnRigidFormula" (formula "47"))
            (rule "simplifyUpdate2" (formula "47") (term "1"))
            (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "2"))
            (rule "concrete_and_3" (formula "47"))
            (rule "applyOnRigidFormula" (formula "47"))
            (rule "applyOnRigidFormula" (formula "47") (term "0"))
            (rule "simplifyUpdate2" (formula "47") (term "1,0"))
            (rule "simplifyUpdate2" (formula "47") (term "0,0"))
            (rule "applyOnRigidFormula" (formula "47") (term "1"))
            (rule "simplifyUpdate2" (formula "47") (term "0,1"))
            (rule "applyOnRigidFormula" (formula "47") (term "1,0"))
            (rule "simplifyUpdate2" (formula "47") (term "0,1,0"))
            (rule "applyOnRigidFormula" (formula "47") (term "0,0"))
            (rule "simplifyUpdate2" (formula "47") (term "1,0,0"))
            (rule "applyOnRigidFormula" (formula "47") (term "1,1"))
            (rule "simplifyUpdate2" (formula "47") (term "0,1,1"))
            (rule "simplifyUpdate2" (formula "47") (term "1,1,1"))
            (rule "applyOnRigidFormula" (formula "47") (term "0,1"))
            (rule "simplifyUpdate1" (formula "47") (term "1,0,1"))
            (rule "applyOnRigidFormula" (formula "47") (term "1,1,0"))
            (rule "applyOnRigidFormula" (formula "47") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "47") (term "1,0,1,0"))
            (rule "applyOnRigidFormula" (formula "47") (term "0,0,0"))
            (rule "simplifyUpdate2" (formula "47") (term "0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "47") (term "1,0,0"))
            (rule "simplifyUpdate1" (formula "47") (term "1,1,0,0"))
            (rule "applyOnRigidFormula" (formula "47") (term "0,1,1"))
            (rule "applyOnRigidFormula" (formula "47") (term "1,1,1"))
            (rule "applyOnRigidTerm" (formula "47") (term "0,0,1"))
            (rule "simplifyUpdate1" (formula "47") (term "1,0,0,1"))
            (rule "simplifyUpdate1" (formula "47") (term "0,0,0,1"))
            (rule "applyOnPV" (formula "47") (term "1,0,0,1"))
            (rule "polySimp_addComm0" (formula "47") (term "0,0,1"))
            (rule "applyOnRigidFormula" (formula "47") (term "0,1,1,0"))
            (rule "simplifyUpdate2" (formula "47") (term "0,0,1,1,0"))
            (rule "simplifyUpdate2" (formula "47") (term "1,0,1,1,0"))
            (rule "applyOnRigidTerm" (formula "47") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "47") (term "0,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "47") (term "1,0,0,1,0"))
            (rule "applyOnPV" (formula "47") (term "1,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "47") (term "0,0,1,0"))
            (rule "applyOnRigidFormula" (formula "47") (term "1,0,0,0"))
            (rule "simplifyUpdate1" (formula "47") (term "1,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "47") (term "0,0,0,0"))
            (rule "applyOnPV" (formula "47") (term "0,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "47") (term "1,0,0,0,0"))
            (rule "replace_known_left" (formula "47") (term "0,0,0,0") (ifseqformula "40"))
            (rule "concrete_and_1" (formula "47") (term "0,0,0"))
            (rule "applyOnRigidTerm" (formula "47") (term "0,1,0,0"))
            (rule "applyOnPV" (formula "47") (term "0,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "47") (term "1,0,1,0,0"))
            (rule "replace_known_left" (formula "47") (term "1,0,0") (ifseqformula "34"))
            (rule "concrete_and_3" (formula "47") (term "0,0"))
            (rule "applyOnRigidFormula" (formula "47") (term "0,0,1,1"))
            (rule "simplifyUpdate2" (formula "47") (term "1,0,0,1,1"))
            (rule "simplifyUpdate2" (formula "47") (term "0,0,0,1,1"))
            (rule "applyOnRigidFormula" (formula "47") (term "0,1,1,1"))
            (rule "simplifyUpdate2" (formula "47") (term "1,0,1,1,1"))
            (rule "simplifyUpdate2" (formula "47") (term "0,0,1,1,1"))
            (rule "applyOnRigidTerm" (formula "47") (term "1,0,0,1"))
            (rule "simplifyUpdate1" (formula "47") (term "0,1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "47") (term "0,0,1,1,0"))
            (rule "simplifyUpdate2" (formula "47") (term "0,0,0,1,1,0"))
            (rule "simplifyUpdate2" (formula "47") (term "1,0,0,1,1,0"))
            (rule "applyOnRigidFormula" (formula "47") (term "1,0,1,1,0"))
            (rule "simplifyUpdate2" (formula "47") (term "1,1,0,1,1,0"))
            (rule "applyOnRigidTerm" (formula "47") (term "1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "47") (term "0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0,0,1"))
            (rule "polySimp_addComm0" (formula "47") (term "0,0,0,1"))
            (rule "applyOnRigidTerm" (formula "47") (term "0,0,0"))
            (rule "simplifyUpdate1" (formula "47") (term "0,0,0,0"))
            (rule "simplifyUpdate1" (formula "47") (term "1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "47") (term "1,0,0,1,1"))
            (rule "simplifyUpdate2" (formula "47") (term "1,1,0,0,1,1"))
            (rule "applyOnRigidFormula" (formula "47") (term "0,0,0,1,1"))
            (rule "simplifyUpdate2" (formula "47") (term "1,0,0,0,1,1"))
            (rule "simplifyUpdate2" (formula "47") (term "0,0,0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0"))
            (rule "polySimp_addComm0" (formula "47") (term "0,0,0,1,0"))
            (rule "applyOnRigidFormula" (formula "47") (term "1,0,1,1,1"))
            (rule "simplifyUpdate2" (formula "47") (term "1,1,0,1,1,1"))
            (rule "applyOnRigidFormula" (formula "47") (term "0,0,1,1,1"))
            (rule "simplifyUpdate2" (formula "47") (term "0,0,0,1,1,1"))
            (rule "applyOnRigidFormula" (formula "47") (term "0,0,0,1,1,0"))
            (rule "applyOnPV" (formula "47") (term "1,0,0,0,1,1,0"))
            (rule "simplifyUpdate1" (formula "47") (term "0,0,0,0,1,1,0"))
            (rule "applyOnRigidFormula" (formula "47") (term "1,0,0,1,1,0"))
            (rule "simplifyUpdate1" (formula "47") (term "1,1,0,0,1,1,0"))
            (rule "applyOnRigidFormula" (formula "47") (term "0,1,0,1,1,0"))
            (rule "applyOnRigidFormula" (formula "47") (term "1,1,0,1,1,0"))
            (rule "applyOnRigidTerm" (formula "47") (term "1,0,0,1"))
            (rule "simplifyUpdate1" (formula "47") (term "1,1,0,0,1"))
            (rule "applyOnPV" (formula "47") (term "0,1,0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
            (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "47") (term "0,0,1"))
            (rule "leq_literals" (formula "47") (term "0,1"))
            (rule "concrete_impl_2" (formula "47") (term "1"))
            (rule "concrete_and_3" (formula "47"))
            (rule "applyOnRigidTerm" (formula "47") (term "1,0,0"))
            (rule "applyOnPV" (formula "47") (term "0,1,0,0"))
            (rule "simplifyUpdate1" (formula "47") (term "1,1,0,0"))
            (rule "polySimp_addComm0" (formula "47") (term "0,0"))
            (rule "applyOnRigidTerm" (formula "47") (term "0,1,0,0,1,1"))
            (rule "simplifyUpdate1" (formula "47") (term "1,0,1,0,0,1,1"))
            (rule "applyOnRigidFormula" (formula "47") (term "0,0,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "47") (term "1,0,0,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "47") (term "0,0,0,1,0,1,1"))
            (rule "applyOnPV" (formula "47") (term "1,0,0,1,0,1,1"))
            (rule "applyOnRigidTerm" (formula "47") (term "1,0,0,1"))
            (rule "applyOnPV" (formula "47") (term "0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "47") (term "1,1,0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
            (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "47") (term "0,0,1"))
            (rule "qeq_literals" (formula "47") (term "0,1"))
            (rule "concrete_impl_2" (formula "47") (term "1"))
            (rule "concrete_and_3" (formula "47"))
            (rule "applyOnRigidTerm" (formula "47") (term "1,0"))
            (rule "applyOnPV" (formula "47") (term "1,1,0"))
            (rule "simplifyUpdate1" (formula "47") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "47") (term "0"))
            (rule "close" (formula "47") (ifseqformula "39"))
         )
         (branch "Body Preserves Invariant"
            (rule "simplifyUpdate2" (formula "39"))
            (rule "simplifyUpdate2" (formula "45") (term "1"))
            (rule "eqSymm" (formula "45") (term "0,0,1,0,1,1,1,0,1,1,1,1,1"))
            (rule "polySimp_elimSub" (formula "45") (term "2,0,1,1,1,1,0,1,1,1,1,1"))
            (rule "polySimp_elimSub" (formula "45") (term "1,0,0,1,1,1"))
            (rule "polySimp_elimSub" (formula "45") (term "1,0,1,1,1,1,0,1,1,1,1,1"))
            (rule "polySimp_elimSub" (formula "45") (term "2,0,0,1,1,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,1,1,0,1,1,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,1,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,0,1,0,1,1,1,0,1,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,1,1,0,1,1,1,0,1,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,0,1,1,1,0,1,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,0,1,0,1,1,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,1,1,0,1,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,0,0,1,1,0,1,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,0,1,0,0,1,1,0,1,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,1,1,0,1,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,1,1,0,0,1,1,0,1,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,0,1,1,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "45") (term "0,2,0,0,0,1,0,0,1,1,0,0,1,1,1,0,1,1,1,1,1"))
            (rule "polySimp_mulComm0" (formula "45") (term "0,2,0,0,0,1,0,1,1,1,0,0,1,1,1,0,1,1,1,1,1"))
            (rule "polySimp_mulComm0" (formula "45") (term "0,2,0,0,0,1,0,1,1,0,0,0,1,1,1,0,1,1,1,1,1"))
            (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,0,1,1,0,0,0,1,1,1,0,1,1,1,1,1"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1,1,0,0,0,1,1,1,0,1,1,1,1,1"))
            (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,0,1,1,1,0,0,1,1,1,0,1,1,1,1,1"))
            (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,0,0,1,1,0,0,1,1,1,0,1,1,1,1,1"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,1,1,0,0,1,1,1,0,1,1,1,1,1"))
            (rule "polySimp_mulComm0" (formula "45") (term "0,2,0,0,1,1,0,1,1,0,0,0,1,1,1,0,1,1,1,1,1"))
            (rule "polySimp_mulComm0" (formula "45") (term "0,2,0,0,1,1,0,1,1,1,0,0,1,1,1,0,1,1,1,1,1"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1,1,1,0,0,1,1,1,0,1,1,1,1,1"))
            (rule "polySimp_mulComm0" (formula "45") (term "0,2,0,0,1,1,0,0,1,1,0,0,1,1,1,0,1,1,1,1,1"))
            (rule "sequentialToParallel2" (formula "39"))
            (rule "simplifyUpdate2" (formula "39"))
            (rule "simplifyUpdate3" (formula "39") (term "1,0"))
            (rule "andLeft" (formula "39"))
            (rule "simplifyUpdate2" (formula "40"))
            (rule "andLeft" (formula "39"))
            (rule "andLeft" (formula "39"))
            (rule "simplifyUpdate2" (formula "39"))
            (rule "simplifyUpdate2" (formula "40"))
            (rule "andLeft" (formula "39"))
            (rule "simplifyUpdate2" (formula "40"))
            (rule "andLeft" (formula "39"))
            (rule "simplifyUpdate2" (formula "39"))
            (rule "sequentialToParallel2" (formula "50") (term "1,1"))
            (rule "applyOnElementary" (formula "50") (term "1,0,1,1"))
            (rule "sequentialToParallel2" (formula "50") (term "1"))
            (rule "simplifyUpdate3" (formula "50") (term "1,0,1"))
            (rule "sequentialToParallel2" (formula "50"))
            (rule "simplifyUpdate2" (formula "50"))
            (rule "simplifyUpdate3" (formula "50") (term "1,0"))
            (rule "impRight" (formula "50"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "simplifyUpdate3" (formula "1") (term "0"))
            (rule "applySkip2" (formula "1"))
            (rule "applyOnParallel" (formula "51") (term "1,0"))
            (rule "simplifyUpdate3" (formula "51") (term "0,1,0"))
            (rule "applyOnParallel" (formula "51") (term "1,1,0"))
            (rule "simplifyUpdate3" (formula "51") (term "0,1,1,0"))
            (rule "applyOnElementary" (formula "51") (term "1,1,1,0"))
            (rule "sequentialToParallel1" (formula "51") (term "0,1,1,1,0"))
            (rule "simplifyUpdate1" (formula "51") (term "0,1,1,1,0"))
            (rule "simplifyUpdate3" (formula "51") (term "1,0,0,1,1,1,0"))
            (rule "polySimp_addComm1" (formula "51") (term "2,0,1,1,1,1,0,1"))
            (rule "polySimp_addComm1" (formula "51") (term "2,1,0,1,1,1,0"))
            (rule "applyOnRigidFormula" (formula "45"))
            (rule "applyOnPV" (formula "45") (term "0"))
            (rule "applyOnRigidFormula" (formula "44"))
            (rule "simplifyUpdate2" (formula "44") (term "0"))
            (rule "applyOnRigidFormula" (formula "43"))
            (rule "simplifyUpdate2" (formula "43") (term "0"))
            (rule "applyOnRigidFormula" (formula "42"))
            (rule "simplifyUpdate1" (formula "42") (term "1"))
            (rule "applyOnRigidFormula" (formula "41"))
            (rule "simplifyUpdate1" (formula "41") (term "0"))
            (rule "simplifyUpdate1" (formula "41") (term "1"))
            (rule "applyOnPV" (formula "41") (term "0"))
            (rule "applyOnPV" (formula "41") (term "1"))
            (rule "applyOnRigidFormula" (formula "40"))
            (rule "simplifyUpdate1" (formula "40") (term "1"))
            (rule "applyOnPV" (formula "40") (term "0"))
            (rule "applyOnRigidTerm" (formula "51") (term "0,1,1,1,0"))
            (rule "simplifyUpdate1" (formula "51") (term "1,0,1,1,1,0"))
            (rule "simplifyUpdate2" (formula "51") (term "0,0,1,1,1,0"))
            (rule "applyOnRigidFormula" (formula "44") (term "1"))
            (rule "simplifyUpdate2" (formula "44") (term "0,1"))
            (rule "simplifyUpdate2" (formula "44") (term "1,1"))
            (rule "applyOnRigidFormula" (formula "44") (term "0"))
            (rule "simplifyUpdate1" (formula "44") (term "0,0"))
            (rule "simplifyUpdate1" (formula "44") (term "1,0"))
            (rule "applyOnPV" (formula "44") (term "0,0"))
            (rule "applyOnPV" (formula "44") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "43") (term "1"))
            (rule "applyOnRigidFormula" (formula "43") (term "0"))
            (rule "simplifyUpdate1" (formula "43") (term "1,0"))
            (rule "simplifyUpdate1" (formula "43") (term "0,0"))
            (rule "applyOnPV" (formula "43") (term "1,0"))
            (rule "applyOnPV" (formula "43") (term "0,0"))
            (rule "applyOnRigidTerm" (formula "42") (term "0"))
            (rule "simplifyUpdate1" (formula "42") (term "1,0"))
            (rule "applyOnPV" (formula "42") (term "0,0"))
            (rule "applyOnRigidTerm" (formula "51") (term "2,0,1,1,1,0"))
            (rule "simplifyUpdate1" (formula "51") (term "0,2,0,1,1,1,0"))
            (rule "simplifyUpdate1" (formula "51") (term "1,2,0,1,1,1,0"))
            (rule "applyOnPV" (formula "51") (term "1,2,0,1,1,1,0"))
            (rule "polySimp_addComm0" (formula "51") (term "2,0,1,1,1,0"))
            (rule "applyOnRigidTerm" (formula "51") (term "1,0,1,1,1,0"))
            (rule "simplifyUpdate1" (formula "51") (term "1,1,0,1,1,1,0"))
            (rule "simplifyUpdate1" (formula "51") (term "0,1,0,1,1,1,0"))
            (rule "applyOnPV" (formula "51") (term "0,1,0,1,1,1,0"))
            (rule "applyOnRigidFormula" (formula "51") (term "0,0,1,1,1,0"))
            (rule "simplifyUpdate1" (formula "51") (term "0,0,0,1,1,1,0"))
            (rule "simplifyUpdate1" (formula "51") (term "1,0,0,1,1,1,0"))
            (rule "applyOnPV" (formula "51") (term "0,0,0,1,1,1,0"))
            (rule "applyOnPV" (formula "51") (term "1,0,0,1,1,1,0"))
            (rule "applyOnRigidFormula" (formula "44") (term "0,1"))
            (rule "applyOnRigidFormula" (formula "44") (term "1,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "0,1"))
            (rule "simplifyUpdate2" (formula "43") (term "1,0,1"))
            (rule "simplifyUpdate2" (formula "43") (term "0,0,1"))
            (rule "applyOnRigidTerm" (formula "51") (term "1,2,0,1,1,1,0"))
            (rule "simplifyUpdate1" (formula "51") (term "0,1,2,0,1,1,1,0"))
            (rule "simplifyUpdate1" (formula "51") (term "1,1,2,0,1,1,1,0"))
            (rule "applyOnPV" (formula "51") (term "0,1,2,0,1,1,1,0"))
            (rule "applyOnRigidTerm" (formula "51") (term "1,1,0,1,1,1,0"))
            (rule "simplifyUpdate1" (formula "51") (term "1,1,1,0,1,1,1,0"))
            (rule "applyOnPV" (formula "51") (term "0,1,1,0,1,1,1,0"))
            (rule "polySimp_addComm0" (formula "51") (term "1,0,1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,1,1,1,0,0,1,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,0,1,1,0,0,1,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,1,1,0,0,0,1,1,1,0,1"))
            (rule "polySimp_addAssoc" (formula "51") (term "2,0,1,1,1,0"))
            (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,1,1,0"))
            (rule "applyOnRigidFormula" (formula "44") (term "0,0,1"))
            (rule "simplifyUpdate2" (formula "44") (term "1,0,0,1"))
            (rule "simplifyUpdate2" (formula "44") (term "0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "44") (term "0,1,1"))
            (rule "simplifyUpdate2" (formula "44") (term "0,0,1,1"))
            (rule "simplifyUpdate2" (formula "44") (term "1,0,1,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "1,0,1"))
            (rule "simplifyUpdate2" (formula "43") (term "1,1,0,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "0,0,1"))
            (rule "simplifyUpdate2" (formula "43") (term "1,0,0,1"))
            (rule "simplifyUpdate2" (formula "43") (term "0,0,0,1"))
            (rule "applyOnRigidTerm" (formula "51") (term "1,2,0,1,1,1,0"))
            (rule "simplifyUpdate1" (formula "51") (term "1,1,2,0,1,1,1,0"))
            (rule "applyOnPV" (formula "51") (term "0,1,2,0,1,1,1,0"))
            (rule "polySimp_addComm1" (formula "51") (term "2,0,1,1,1,0"))
            (rule "polySimp_addComm0" (formula "51") (term "0,2,0,1,1,1,0"))
            (rule "applyOnRigidFormula" (formula "44") (term "1,0,0,1"))
            (rule "simplifyUpdate2" (formula "44") (term "1,1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "44") (term "0,0,0,1"))
            (rule "simplifyUpdate2" (formula "44") (term "1,0,0,0,1"))
            (rule "simplifyUpdate2" (formula "44") (term "0,0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "44") (term "0,0,1,1"))
            (rule "simplifyUpdate2" (formula "44") (term "0,0,0,1,1"))
            (rule "applyOnRigidFormula" (formula "44") (term "1,0,1,1"))
            (rule "simplifyUpdate2" (formula "44") (term "1,1,0,1,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "0,1,0,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "1,1,0,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "1,0,0,1"))
            (rule "applyOnPV" (formula "43") (term "1,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "43") (term "0,1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "0,0,0,1"))
            (rule "simplifyUpdate1" (formula "43") (term "1,0,0,0,1"))
            (rule "applyOnPV" (formula "43") (term "0,0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "44") (term "0,1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "44") (term "1,1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "44") (term "1,0,0,0,1"))
            (rule "simplifyUpdate1" (formula "44") (term "0,1,0,0,0,1"))
            (rule "applyOnPV" (formula "44") (term "1,1,0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "44") (term "0,0,0,0,1"))
            (rule "simplifyUpdate1" (formula "44") (term "1,0,0,0,0,1"))
            (rule "applyOnPV" (formula "44") (term "0,0,0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "44") (term "1,0,0,1,1"))
            (rule "applyOnPV" (formula "44") (term "1,1,0,0,1,1"))
            (rule "simplifyUpdate1" (formula "44") (term "0,1,0,0,1,1"))
            (rule "applyOnRigidFormula" (formula "44") (term "0,1,0,1,1"))
            (rule "applyOnRigidFormula" (formula "44") (term "1,1,0,1,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "0,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "43") (term "0,0,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "43") (term "1,0,0,1,0,1"))
            (rule "applyOnPV" (formula "43") (term "1,0,0,1,0,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "0,1,1,0,1"))
            (rule "simplifyUpdate1" (formula "43") (term "1,0,1,1,0,1"))
            (rule "applyOnRigidFormula" (formula "44") (term "0,0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "44") (term "1,0,0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "44") (term "0,0,0,1,0,0,1"))
            (rule "applyOnPV" (formula "44") (term "1,0,0,1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "44") (term "0,1,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "44") (term "1,0,1,1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "44") (term "0,0,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "44") (term "1,0,0,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "44") (term "0,0,0,1,0,1,1"))
            (rule "applyOnPV" (formula "44") (term "1,0,0,1,0,1,1"))
            (rule "applyOnRigidFormula" (formula "44") (term "0,1,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "44") (term "1,0,1,1,0,1,1"))
            (rule "applyOnRigidTerm" (formula "43") (term "0,0,0,1,0,1"))
            (rule "applyOnPV" (formula "43") (term "1,0,0,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "43") (term "2,0,0,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "43") (term "0,0,0,0,1,0,1"))
            (rule "applyOnRigidTerm" (formula "43") (term "0,0,1,1,0,1"))
            (rule "applyOnPV" (formula "43") (term "1,0,0,1,1,0,1"))
            (rule "simplifyUpdate1" (formula "43") (term "2,0,0,1,1,0,1"))
            (rule "simplifyUpdate1" (formula "43") (term "0,0,0,1,1,0,1"))
            (rule "applyOnRigidTerm" (formula "44") (term "0,0,0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "44") (term "2,0,0,0,1,0,0,1"))
            (rule "applyOnPV" (formula "44") (term "1,0,0,0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "44") (term "0,0,0,0,1,0,0,1"))
            (rule "applyOnRigidTerm" (formula "44") (term "0,0,1,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "44") (term "0,0,0,1,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "44") (term "2,0,0,1,1,0,0,1"))
            (rule "applyOnPV" (formula "44") (term "1,0,0,1,1,0,0,1"))
            (rule "applyOnRigidTerm" (formula "44") (term "0,0,0,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "44") (term "2,0,0,0,1,0,1,1"))
            (rule "applyOnPV" (formula "44") (term "1,0,0,0,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "44") (term "0,0,0,0,1,0,1,1"))
            (rule "applyOnRigidTerm" (formula "44") (term "0,0,1,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "44") (term "0,0,0,1,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "44") (term "2,0,0,1,1,0,1,1"))
            (rule "applyOnPV" (formula "44") (term "1,0,0,1,1,0,1,1"))
            (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,1,1"))
            (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0,1"))
            (rule "variableDeclarationAssign" (formula "1"))
            (rule "variableDeclarationAssign" (formula "51") (term "1"))
            (rule "variableDeclaration" (formula "1") (newnames "b_1"))
            (rule "variableDeclaration" (formula "51") (term "1") (newnames "rtrn"))
            (rule "assignment" (formula "1"))
            (rule "assignment" (formula "51") (term "1"))
            (rule "sequentialToParallel2" (formula "51"))
            (rule "simplifyUpdate3" (formula "51") (term "1,0"))
            (rule "variableDeclaration" (formula "51") (term "1") (newnames "returnExpr"))
            (rule "variableDeclarationAssign" (formula "51") (term "1"))
            (rule "variableDeclaration" (formula "51") (term "1") (newnames "exc_2"))
            (rule "assignment" (formula "51") (term "1"))
            (rule "sequentialToParallel2" (formula "51"))
            (rule "simplifyUpdate3" (formula "51") (term "1,0"))
            (rule "variableDeclaration" (formula "51") (term "1") (newnames "thrownExc"))
            (rule "blockThrow" (formula "51") (term "1,0,0,1"))
            (rule "blockReturn" (formula "51") (term "1,0,1,0,1"))
            (rule "boxToDiamond" (formula "1") (term "1"))
            (rule "notLeft" (formula "1"))
            (rule "commute_and" (formula "42") (term "1,0,1"))
            (rule "commute_and" (formula "42") (term "0,0,1"))
            (rule "commute_and" (formula "43") (term "1,0,0,1"))
            (rule "commute_and" (formula "43") (term "1,0,1,1"))
            (rule "commute_and" (formula "43") (term "0,0,1,1"))
            (rule "commute_and" (formula "43") (term "0,0,0,1"))
            (rule "methodCallEmpty" (formula "45") (term "1"))
            (rule "methodCallEmpty" (formula "45") (term "1"))
            (rule "emptyModality" (formula "45") (term "1"))
            (rule "notRight" (formula "45"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "boolean_equal" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifSplit" (formula "50"))
            (branch "if true true"
               (rule "boolean_equal" (formula "1") (term "1"))
               (rule "true_left" (formula "1"))
               (rule "variableDeclarationAssign" (formula "50") (term "1"))
               (rule "variableDeclaration" (formula "50") (term "1") (newnames "item"))
               (rule "assignment_array2" (formula "50"))
               (branch "Normal Execution (tab != null)"
                  (rule "sequentialToParallel2" (formula "50"))
                  (rule "simplifyUpdate3" (formula "50") (term "1,0"))
                  (rule "applyOnElementary" (formula "50") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "50") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "50") (term "2,0,1,0"))
                  (rule "simplifyUpdate1" (formula "50") (term "0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "50") (term "1,0,1,0"))
                  (rule "applyOnPV" (formula "50") (term "1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "50") (term "2,0,1,0"))
                  (rule "applyOnPV" (formula "50") (term "0,2,0,1,0"))
                  (rule "ifUnfold" (formula "50") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "50") (term "1") (newnames "x"))
                  (rule "equality_comparison_simple" (formula "50") (term "1"))
                  (rule "eqSymm" (formula "50") (term "0,0,0,1"))
                  (rule "sequentialToParallel2" (formula "50"))
                  (rule "simplifyUpdate3" (formula "50") (term "1,0"))
                  (rule "applyOnElementary" (formula "50") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "50") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "50") (term "1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "50") (term "2,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "50") (term "0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "50") (term "0,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "50") (term "1,0,0,1,0"))
                  (rule "applyOnPV" (formula "50") (term "0,0,0,1,0"))
                  (rule "applyOnPV" (formula "50") (term "1,0,0,1,0"))
                  (rule "eqSymm" (formula "50") (term "0,0,1,0"))
                  (rule "ifSplit" (formula "50"))
                  (branch "if x true"
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "simplifyUpdate2" (formula "51"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "applyOnPV" (formula "1") (term "0"))
                     (rule "simplifyUpdate1" (formula "1") (term "1"))
                     (rule "ifthenelse_concrete3" (formula "1"))
                     (rule "boolean_not_equal_2" (formula "1") (term "1"))
                     (rule "concrete_or_4" (formula "1"))
                     (rule "assignment" (formula "51") (term "1"))
                     (rule "sequentialToParallel2" (formula "51"))
                     (rule "simplifyUpdate2" (formula "51"))
                     (rule "simplifyUpdate3" (formula "51") (term "1,0"))
                     (rule "assignment" (formula "51") (term "1"))
                     (rule "sequentialToParallel2" (formula "51"))
                     (rule "simplifyUpdate3" (formula "51") (term "1,0"))
                     (rule "blockBreakNoLabel" (formula "51") (term "1"))
                     (rule "blockBreakLabel" (formula "51") (term "1"))
                     (rule "simplifyUpdate2" (formula "51"))
                     (rule "blockEmpty" (formula "51") (term "1"))
                     (rule "tryEmpty" (formula "51") (term "1"))
                     (rule "methodCallEmpty" (formula "51") (term "1"))
                     (rule "emptyModality" (formula "51") (term "1"))
                     (rule "applyOnRigidFormula" (formula "51"))
                     (rule "simplifyUpdate2" (formula "51") (term "0"))
                     (rule "applyOnRigidFormula" (formula "51") (term "1"))
                     (rule "simplifyUpdate2" (formula "51") (term "1,1"))
                     (rule "simplifyUpdate2" (formula "51") (term "0,1"))
                     (rule "applyOnRigidFormula" (formula "51") (term "0"))
                     (rule "simplifyUpdate2" (formula "51") (term "1,0"))
                     (rule "simplifyUpdate2" (formula "51") (term "0,0"))
                     (rule "applyOnRigidFormula" (formula "51") (term "1,1"))
                     (rule "simplifyUpdate2" (formula "51") (term "0,1,1"))
                     (rule "simplifyUpdate2" (formula "51") (term "1,1,1"))
                     (rule "applyOnRigidFormula" (formula "51") (term "0,1"))
                     (rule "simplifyUpdate2" (formula "51") (term "0,0,1"))
                     (rule "simplifyUpdate2" (formula "51") (term "1,0,1"))
                     (rule "applyOnRigidFormula" (formula "51") (term "0,0"))
                     (rule "applyOnPV" (formula "51") (term "0,0,0"))
                     (rule "simplifyUpdate1" (formula "51") (term "1,0,0"))
                     (rule "boolean_not_equal_2" (formula "51") (term "0,0"))
                     (rule "concrete_impl_2" (formula "51") (term "0"))
                     (rule "concrete_and_1" (formula "51"))
                     (rule "applyOnRigidFormula" (formula "51") (term "1,1"))
                     (rule "simplifyUpdate2" (formula "51") (term "1,1,1"))
                     (rule "simplifyUpdate2" (formula "51") (term "0,1,1"))
                     (rule "applyOnRigidFormula" (formula "51") (term "0,1"))
                     (rule "applyOnRigidFormula" (formula "51") (term "0,0"))
                     (rule "applyOnPV" (formula "51") (term "0,0,0"))
                     (rule "simplifyUpdate1" (formula "51") (term "1,0,0"))
                     (rule "boolean_equal" (formula "51") (term "0,0"))
                     (rule "concrete_impl_1" (formula "51") (term "0"))
                     (rule "applyOnRigidFormula" (formula "51") (term "1,1,1"))
                     (rule "simplifyUpdate1" (formula "51") (term "0,1,1,1"))
                     (rule "simplifyUpdate1" (formula "51") (term "1,1,1,1"))
                     (rule "applyOnPV" (formula "51") (term "1,1,1,1"))
                     (rule "applyOnRigidFormula" (formula "51") (term "0,1,1"))
                     (rule "simplifyUpdate2" (formula "51") (term "0,0,1,1"))
                     (rule "simplifyUpdate2" (formula "51") (term "1,0,1,1"))
                     (rule "applyOnRigidFormula" (formula "51") (term "0,0,1"))
                     (rule "simplifyUpdate2" (formula "51") (term "1,0,0,1"))
                     (rule "simplifyUpdate2" (formula "51") (term "0,0,0,1"))
                     (rule "applyOnRigidTerm" (formula "51") (term "0,1,1,1"))
                     (rule "simplifyUpdate2" (formula "51") (term "0,0,1,1,1"))
                     (rule "simplifyUpdate1" (formula "51") (term "1,0,1,1,1"))
                     (rule "applyOnRigidFormula" (formula "51") (term "0,0,1,1"))
                     (rule "applyOnRigidFormula" (formula "51") (term "1,0,1,1"))
                     (rule "applyOnRigidFormula" (formula "51") (term "1,0,0,1"))
                     (rule "simplifyUpdate1" (formula "51") (term "1,1,0,0,1"))
                     (rule "applyOnPV" (formula "51") (term "0,1,0,0,1"))
                     (rule "boolean_not_equal_2" (formula "51") (term "1,0,0,1"))
                     (rule "concrete_or_4" (formula "51") (term "0,0,1"))
                     (rule "applyOnRigidTerm" (formula "51") (term "2,0,1,1,1"))
                     (rule "simplifyUpdate1" (formula "51") (term "0,2,0,1,1,1"))
                     (rule "simplifyUpdate1" (formula "51") (term "1,2,0,1,1,1"))
                     (rule "applyOnPV" (formula "51") (term "1,2,0,1,1,1"))
                     (rule "polySimp_addComm0" (formula "51") (term "2,0,1,1,1"))
                     (rule "applyOnRigidFormula" (formula "51") (term "0,0,1,1,1"))
                     (rule "simplifyUpdate1" (formula "51") (term "1,0,0,1,1,1"))
                     (rule "simplifyUpdate1" (formula "51") (term "0,0,0,1,1,1"))
                     (rule "applyOnPV" (formula "51") (term "1,0,0,1,1,1"))
                     (rule "applyOnPV" (formula "51") (term "0,0,0,1,1,1"))
                     (rule "applyOnRigidTerm" (formula "51") (term "1,0,1,1,1"))
                     (rule "simplifyUpdate1" (formula "51") (term "1,1,0,1,1,1"))
                     (rule "simplifyUpdate1" (formula "51") (term "0,1,0,1,1,1"))
                     (rule "applyOnPV" (formula "51") (term "0,1,0,1,1,1"))
                     (rule "applyOnRigidFormula" (formula "51") (term "0,0,0,1,1"))
                     (rule "simplifyUpdate2" (formula "51") (term "1,0,0,0,1,1"))
                     (rule "simplifyUpdate2" (formula "51") (term "0,0,0,0,1,1"))
                     (rule "applyOnRigidFormula" (formula "51") (term "1,0,0,1,1"))
                     (rule "simplifyUpdate2" (formula "51") (term "0,1,0,0,1,1"))
                     (rule "applyOnRigidFormula" (formula "51") (term "0,1,0,1,1"))
                     (rule "applyOnRigidFormula" (formula "51") (term "0,0,1"))
                     (rule "simplifyUpdate1" (formula "51") (term "1,0,0,1"))
                     (rule "applyOnPV" (formula "51") (term "0,0,0,1"))
                     (rule "boolean_equal" (formula "51") (term "0,0,1"))
                     (rule "concrete_not_1" (formula "51") (term "0,1"))
                     (rule "concrete_impl_2" (formula "51") (term "1"))
                     (rule "concrete_and_3" (formula "51"))
                     (rule "methodCallReturn" (formula "51") (term "1"))
                     (rule "assignment" (formula "51") (term "1"))
                     (rule "simplifyUpdate2" (formula "51") (term "1"))
                     (rule "simplifyUpdate2" (formula "51"))
                     (rule "methodCallEmpty" (formula "51") (term "1"))
                     (rule "tryEmpty" (formula "51") (term "1"))
                     (rule "emptyModality" (formula "51") (term "1"))
                     (rule "expand_inShort" (formula "33"))
                     (rule "expand_inInt" (formula "30"))
                     (rule "expand_inInt" (formula "17"))
                     (rule "expand_inInt" (formula "16"))
                     (rule "expand_inInt" (formula "45"))
                     (rule "replace_short_MAX" (formula "33") (term "1,0"))
                     (rule "replace_short_MIN" (formula "33") (term "0,1"))
                     (rule "replace_int_MAX" (formula "30") (term "1,0"))
                     (rule "replace_int_MIN" (formula "30") (term "0,1"))
                     (rule "replace_int_MAX" (formula "17") (term "1,0"))
                     (rule "replace_int_MIN" (formula "17") (term "0,1"))
                     (rule "replace_int_MIN" (formula "16") (term "0,1"))
                     (rule "replace_int_MAX" (formula "16") (term "1,0"))
                     (rule "replace_int_MIN" (formula "45") (term "0,1"))
                     (rule "replace_int_MAX" (formula "45") (term "1,0"))
                     (rule "andLeft" (formula "33"))
                     (rule "andLeft" (formula "30"))
                     (rule "andLeft" (formula "17"))
                     (rule "andLeft" (formula "16"))
                     (rule "andLeft" (formula "49"))
                     (rule "applyOnRigidFormula" (formula "56"))
                     (rule "inEqSimp_ltToLeq" (formula "20"))
                     (rule "mul_literals" (formula "20") (term "1,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "45"))
                     (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "45") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "40"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "40") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "14"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "48") (term "0"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "23"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "23") (term "0"))
                     (rule "inEqSimp_gtToGeq" (formula "11") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "47") (term "0"))
                     (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "26") (term "1,0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "26") (term "1,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,0,0,1,1,0"))
                     (rule "applyOnRigidFormula" (formula "56") (term "0"))
                     (rule "simplifyUpdate2" (formula "56") (term "1,0"))
                     (rule "replace_known_left" (formula "56") (term "1,0") (ifseqformula "27"))
                     (rule "concrete_impl_4" (formula "56") (term "0"))
                     (rule "concrete_and_1" (formula "56"))
                     (rule "impRight" (formula "56"))
                     (rule "notLeft" (formula "1"))
                     (rule "inEqSimp_commuteLeq" (formula "37"))
                     (rule "inEqSimp_commuteLeq" (formula "33"))
                     (rule "inEqSimp_commuteLeq" (formula "19"))
                     (rule "inEqSimp_commuteLeq" (formula "17"))
                     (rule "inEqSimp_commuteLeq" (formula "50"))
                     (rule "applyOnRigidFormula" (formula "57"))
                     (rule "simplifyUpdate2" (formula "57") (term "0"))
                     (rule "replace_known_left" (formula "57") (term "0") (ifseqformula "27"))
                     (rule "concrete_and_1" (formula "57"))
                     (rule "orRight" (formula "57"))
                     (rule "applyOnRigidFormula" (formula "51"))
                     (rule "applyOnPV" (formula "51") (term "0"))
                     (rule "simplifyUpdate1" (formula "51") (term "1"))
                     (rule "eqClose" (formula "51"))
                     (rule "closeTrue" (formula "51"))
                  )
                  (branch "if x false"
                     (rule "false_to_not_true" (formula "1") (term "1"))
                     (rule "simplifyUpdate2" (formula "51"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "45"))
                     (rule "applyOnPV" (formula "45") (term "0"))
                     (rule "simplifyUpdate1" (formula "45") (term "1"))
                     (rule "ifthenelse_concrete3" (formula "45"))
                     (rule "boolean_not_equal_2" (formula "45") (term "1"))
                     (rule "concrete_or_4" (formula "45"))
                     (rule "ifUnfold" (formula "51") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "51") (term "1") (newnames "x_1"))
                     (rule "equality_comparison_simple" (formula "51") (term "1"))
                     (rule "sequentialToParallel2" (formula "51"))
                     (rule "simplifyUpdate2" (formula "51"))
                     (rule "simplifyUpdate3" (formula "51") (term "1,0"))
                     (rule "applyOnElementary" (formula "51") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "51") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "51") (term "1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "51") (term "2,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "51") (term "0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "51") (term "1,0,0,1,0"))
                     (rule "applyOnPV" (formula "51") (term "0,0,0,1,0"))
                     (rule "ifSplit" (formula "51"))
                     (branch "if x_1 true"
                        (rule "simplifyUpdate2" (formula "52"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "applyOnRigidFormula" (formula "1"))
                        (rule "applyOnPV" (formula "1") (term "0"))
                        (rule "simplifyUpdate1" (formula "1") (term "1"))
                        (rule "ifthenelse_concrete3" (formula "1"))
                        (rule "boolean_not_equal_2" (formula "1") (term "1"))
                        (rule "concrete_or_4" (formula "1"))
                        (rule "assignment" (formula "52") (term "1"))
                        (rule "sequentialToParallel2" (formula "52"))
                        (rule "simplifyUpdate2" (formula "52"))
                        (rule "simplifyUpdate3" (formula "52") (term "1,0"))
                        (rule "assignment" (formula "52") (term "1"))
                        (rule "sequentialToParallel2" (formula "52"))
                        (rule "simplifyUpdate3" (formula "52") (term "1,0"))
                        (rule "blockBreakNoLabel" (formula "52") (term "1"))
                        (rule "blockBreakLabel" (formula "52") (term "1"))
                        (rule "blockEmpty" (formula "52") (term "1"))
                        (rule "tryEmpty" (formula "52") (term "1"))
                        (rule "methodCallEmpty" (formula "52") (term "1"))
                        (rule "emptyModality" (formula "52") (term "1"))
                        (rule "applyOnRigidFormula" (formula "52"))
                        (rule "simplifyUpdate2" (formula "52") (term "0"))
                        (rule "applyOnRigidFormula" (formula "52") (term "1"))
                        (rule "simplifyUpdate2" (formula "52") (term "1,1"))
                        (rule "simplifyUpdate2" (formula "52") (term "0,1"))
                        (rule "applyOnRigidFormula" (formula "52") (term "0"))
                        (rule "simplifyUpdate2" (formula "52") (term "0,0"))
                        (rule "simplifyUpdate2" (formula "52") (term "1,0"))
                        (rule "applyOnRigidFormula" (formula "52") (term "1,1"))
                        (rule "simplifyUpdate2" (formula "52") (term "1,1,1"))
                        (rule "simplifyUpdate2" (formula "52") (term "0,1,1"))
                        (rule "applyOnRigidFormula" (formula "52") (term "0,1"))
                        (rule "simplifyUpdate2" (formula "52") (term "1,0,1"))
                        (rule "simplifyUpdate2" (formula "52") (term "0,0,1"))
                        (rule "applyOnRigidFormula" (formula "52") (term "0,0"))
                        (rule "applyOnPV" (formula "52") (term "0,0,0"))
                        (rule "simplifyUpdate1" (formula "52") (term "1,0,0"))
                        (rule "boolean_not_equal_2" (formula "52") (term "0,0"))
                        (rule "concrete_impl_2" (formula "52") (term "0"))
                        (rule "concrete_and_1" (formula "52"))
                        (rule "applyOnRigidFormula" (formula "52") (term "0,1"))
                        (rule "applyOnRigidFormula" (formula "52") (term "1,1"))
                        (rule "simplifyUpdate2" (formula "52") (term "1,1,1"))
                        (rule "simplifyUpdate2" (formula "52") (term "0,1,1"))
                        (rule "applyOnRigidFormula" (formula "52") (term "0,0"))
                        (rule "simplifyUpdate1" (formula "52") (term "1,0,0"))
                        (rule "applyOnPV" (formula "52") (term "0,0,0"))
                        (rule "boolean_equal" (formula "52") (term "0,0"))
                        (rule "concrete_impl_1" (formula "52") (term "0"))
                        (rule "applyOnRigidFormula" (formula "52") (term "0,0,1"))
                        (rule "simplifyUpdate2" (formula "52") (term "0,0,0,1"))
                        (rule "simplifyUpdate2" (formula "52") (term "1,0,0,1"))
                        (rule "applyOnRigidFormula" (formula "52") (term "1,1,1"))
                        (rule "simplifyUpdate1" (formula "52") (term "1,1,1,1"))
                        (rule "simplifyUpdate1" (formula "52") (term "0,1,1,1"))
                        (rule "applyOnPV" (formula "52") (term "1,1,1,1"))
                        (rule "applyOnRigidFormula" (formula "52") (term "0,1,1"))
                        (rule "simplifyUpdate2" (formula "52") (term "1,0,1,1"))
                        (rule "simplifyUpdate2" (formula "52") (term "0,0,1,1"))
                        (rule "applyOnRigidFormula" (formula "52") (term "0,0,0,1"))
                        (rule "applyOnPV" (formula "52") (term "0,0,0,0,1"))
                        (rule "simplifyUpdate1" (formula "52") (term "1,0,0,0,1"))
                        (rule "boolean_equal" (formula "52") (term "0,0,0,1"))
                        (rule "concrete_or_1" (formula "52") (term "0,0,1"))
                        (rule "concrete_not_1" (formula "52") (term "0,1"))
                        (rule "concrete_impl_2" (formula "52") (term "1"))
                        (rule "concrete_and_3" (formula "52"))
                        (rule "methodCallReturn" (formula "52") (term "1"))
                        (rule "assignment" (formula "52") (term "1"))
                        (rule "simplifyUpdate2" (formula "52") (term "1"))
                        (rule "simplifyUpdate2" (formula "52"))
                        (rule "methodCallEmpty" (formula "52") (term "1"))
                        (rule "tryEmpty" (formula "52") (term "1"))
                        (rule "emptyModality" (formula "52") (term "1"))
                        (rule "expand_inShort" (formula "33"))
                        (rule "expand_inInt" (formula "30"))
                        (rule "expand_inInt" (formula "17"))
                        (rule "expand_inInt" (formula "16"))
                        (rule "expand_inInt" (formula "45"))
                        (rule "replace_short_MIN" (formula "33") (term "0,1"))
                        (rule "replace_short_MAX" (formula "33") (term "1,0"))
                        (rule "replace_int_MIN" (formula "30") (term "0,1"))
                        (rule "replace_int_MAX" (formula "30") (term "1,0"))
                        (rule "replace_int_MAX" (formula "17") (term "1,0"))
                        (rule "replace_int_MIN" (formula "17") (term "0,1"))
                        (rule "replace_int_MAX" (formula "16") (term "1,0"))
                        (rule "replace_int_MIN" (formula "16") (term "0,1"))
                        (rule "replace_int_MAX" (formula "45") (term "1,0"))
                        (rule "replace_int_MIN" (formula "45") (term "0,1"))
                        (rule "andLeft" (formula "33"))
                        (rule "andLeft" (formula "30"))
                        (rule "andLeft" (formula "17"))
                        (rule "andLeft" (formula "16"))
                        (rule "andLeft" (formula "49"))
                        (rule "applyOnRigidFormula" (formula "57"))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "48") (term "0"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_gtToGeq" (formula "47") (term "0"))
                        (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "11") (term "1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,1,0"))
                        (rule "polySimp_addComm1" (formula "11") (term "0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "1,1,0,0,0,1,1,0"))
                        (rule "polySimp_mulAssoc" (formula "26") (term "1,0,0,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0,1,1,0"))
                        (rule "polySimp_mulAssoc" (formula "26") (term "1,0,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "40"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "40") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "20"))
                        (rule "mul_literals" (formula "20") (term "1,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "45"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "45") (term "0"))
                        (rule "applyOnRigidFormula" (formula "57") (term "0"))
                        (rule "simplifyUpdate2" (formula "57") (term "1,0"))
                        (rule "replace_known_left" (formula "57") (term "1,0") (ifseqformula "27"))
                        (rule "concrete_impl_4" (formula "57") (term "0"))
                        (rule "concrete_and_1" (formula "57"))
                        (rule "impRight" (formula "57"))
                        (rule "notLeft" (formula "1"))
                        (rule "inEqSimp_commuteLeq" (formula "37"))
                        (rule "inEqSimp_commuteLeq" (formula "33"))
                        (rule "inEqSimp_commuteLeq" (formula "19"))
                        (rule "inEqSimp_commuteLeq" (formula "17"))
                        (rule "inEqSimp_commuteLeq" (formula "50"))
                        (rule "applyOnRigidFormula" (formula "58"))
                        (rule "simplifyUpdate2" (formula "58") (term "0"))
                        (rule "replace_known_left" (formula "58") (term "0") (ifseqformula "27"))
                        (rule "concrete_and_1" (formula "58"))
                        (rule "orRight" (formula "58"))
                        (rule "applyOnRigidFormula" (formula "51"))
                        (rule "applyOnPV" (formula "51") (term "0"))
                        (rule "simplifyUpdate1" (formula "51") (term "1"))
                        (rule "eqClose" (formula "51"))
                        (rule "closeTrue" (formula "51"))
                     )
                     (branch "if x_1 false"
                        (rule "false_to_not_true" (formula "1") (term "1"))
                        (rule "simplifyUpdate2" (formula "52"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "applyOnRigidFormula" (formula "45"))
                        (rule "simplifyUpdate1" (formula "45") (term "1"))
                        (rule "applyOnPV" (formula "45") (term "0"))
                        (rule "ifthenelse_concrete3" (formula "45"))
                        (rule "boolean_not_equal_2" (formula "45") (term "1"))
                        (rule "concrete_or_4" (formula "45"))
                        (rule "unusedLabel" (formula "52") (term "1"))
                         (builtin "Use Operation Contract" (formula "52") (newnames "heapBefore_nextKeyIndex,result_2,exc_3") (contract "java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap::nextKeyIndex(int,int)].JML normal_behavior operation contract.0"))
                        (branch "Post (nextKeyIndex)"
                           (rule "simplifyUpdate2" (formula "45"))
                           (rule "simplifyUpdate2" (formula "45") (term "1"))
                           (rule "andLeft" (formula "45"))
                           (rule "simplifyUpdate2" (formula "45"))
                           (rule "andLeft" (formula "46"))
                           (rule "simplifyUpdate2" (formula "47"))
                           (rule "andLeft" (formula "45"))
                           (rule "andLeft" (formula "46"))
                           (rule "simplifyUpdate2" (formula "47"))
                           (rule "andLeft" (formula "46"))
                           (rule "translateJavaAddInt" (formula "47") (term "0,0,1"))
                           (rule "translateJavaAddInt" (formula "46") (term "0,0,1"))
                           (rule "eqSymm" (formula "46") (term "1,1"))
                           (rule "translateJavaAddInt" (formula "46") (term "0,1,1"))
                           (rule "applyOnRigidFormula" (formula "47"))
                           (rule "simplifyUpdate2" (formula "47") (term "1"))
                           (rule "applyOnRigidFormula" (formula "46"))
                           (rule "simplifyUpdate2" (formula "46") (term "1"))
                           (rule "applyOnRigidFormula" (formula "47") (term "0"))
                           (rule "simplifyUpdate1" (formula "47") (term "1,0"))
                           (rule "simplifyUpdate1" (formula "47") (term "0,0"))
                           (rule "applyOnPV" (formula "47") (term "1,0"))
                           (rule "applyOnRigidFormula" (formula "46") (term "0"))
                           (rule "simplifyUpdate1" (formula "46") (term "1,0"))
                           (rule "simplifyUpdate1" (formula "46") (term "0,0"))
                           (rule "applyOnPV" (formula "46") (term "1,0"))
                           (rule "applyOnRigidFormula" (formula "46") (term "1"))
                           (rule "simplifyUpdate1" (formula "46") (term "1,1"))
                           (rule "applyOnRigidTerm" (formula "47") (term "0,0"))
                           (rule "applyOnPV" (formula "47") (term "0,0,0"))
                           (rule "simplifyUpdate1" (formula "47") (term "1,0,0"))
                           (rule "applyOnRigidTerm" (formula "46") (term "0,0"))
                           (rule "simplifyUpdate1" (formula "46") (term "1,0,0"))
                           (rule "applyOnPV" (formula "46") (term "0,0,0"))
                           (rule "applyOnRigidTerm" (formula "46") (term "0,1"))
                           (rule "applyOnPV" (formula "46") (term "0,0,1"))
                           (rule "simplifyUpdate1" (formula "46") (term "1,0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "47") (term "0"))
                           (rule "assignment" (formula "56") (term "1"))
                           (rule "sequentialToParallel2" (formula "56"))
                           (rule "simplifyUpdate2" (formula "56"))
                           (rule "simplifyUpdate3" (formula "56") (term "1,0"))
                           (rule "tryEmpty" (formula "56") (term "1"))
                           (rule "methodCallEmpty" (formula "56") (term "1"))
                           (rule "emptyModality" (formula "56") (term "1"))
                           (rule "applyOnRigidFormula" (formula "56"))
                           (rule "simplifyUpdate2" (formula "56") (term "0"))
                           (rule "applyOnRigidFormula" (formula "56") (term "1"))
                           (rule "simplifyUpdate2" (formula "56") (term "0,1"))
                           (rule "simplifyUpdate2" (formula "56") (term "1,1"))
                           (rule "applyOnRigidFormula" (formula "56") (term "0"))
                           (rule "simplifyUpdate2" (formula "56") (term "0,0"))
                           (rule "simplifyUpdate2" (formula "56") (term "1,0"))
                           (rule "applyOnRigidFormula" (formula "56") (term "0,1"))
                           (rule "simplifyUpdate2" (formula "56") (term "1,0,1"))
                           (rule "simplifyUpdate2" (formula "56") (term "0,0,1"))
                           (rule "applyOnRigidFormula" (formula "56") (term "1,1"))
                           (rule "simplifyUpdate2" (formula "56") (term "1,1,1"))
                           (rule "simplifyUpdate2" (formula "56") (term "0,1,1"))
                           (rule "applyOnRigidFormula" (formula "56") (term "0,0"))
                           (rule "applyOnPV" (formula "56") (term "0,0,0"))
                           (rule "simplifyUpdate1" (formula "56") (term "1,0,0"))
                           (rule "boolean_not_equal_2" (formula "56") (term "0,0"))
                           (rule "concrete_impl_2" (formula "56") (term "0"))
                           (rule "concrete_and_1" (formula "56"))
                           (rule "applyOnRigidFormula" (formula "56") (term "1,1"))
                           (rule "simplifyUpdate2" (formula "56") (term "1,1,1"))
                           (rule "simplifyUpdate2" (formula "56") (term "0,1,1"))
                           (rule "applyOnRigidFormula" (formula "56") (term "0,1"))
                           (rule "applyOnRigidFormula" (formula "56") (term "0,0"))
                           (rule "applyOnPV" (formula "56") (term "0,0,0"))
                           (rule "simplifyUpdate1" (formula "56") (term "1,0,0"))
                           (rule "boolean_not_equal_2" (formula "56") (term "0,0"))
                           (rule "concrete_impl_2" (formula "56") (term "0"))
                           (rule "andRight" (formula "56") (userinteraction))
                           (branch "Case 1"
                              (rule "impLeft" (formula "43") (userinteraction))
                              (branch "Case 1"
                                 (rule "closeTrue" (formula "56"))
                              )
                              (branch "Case 2"
                                 (rule "closeTrue" (formula "56"))
                              )
                           )
                           (branch "Case 2"
                              (rule "applyOnRigidFormula" (formula "56") (term "1,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,1,1"))
                              (rule "applyOnPV" (formula "56") (term "1,1,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "1,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0"))
                              (rule "simplifyUpdate2" (formula "56") (term "1,0,0"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,0,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "0,1,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,1,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,0,1,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,0,0"))
                              (rule "applyOnPV" (formula "56") (term "0,1,0,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,0,0"))
                              (rule "applyOnPV" (formula "56") (term "0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "2,0,1,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,2,0,1,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,2,0,1,1"))
                              (rule "applyOnPV" (formula "56") (term "1,2,0,1,1"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,0,1,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,0,1,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,1,0,1,1"))
                              (rule "applyOnPV" (formula "56") (term "0,1,0,1,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,1,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,0,1,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,0,0,1,1"))
                              (rule "applyOnPV" (formula "56") (term "1,0,0,1,1"))
                              (rule "applyOnPV" (formula "56") (term "0,0,0,1,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "1,0,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,0,0,0,1"))
                              (rule "applyOnRigidTerm" (formula "56") (term "0,2,0,1,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,0,2,0,1,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,2,0,1,1"))
                              (rule "applyOnPV" (formula "56") (term "0,0,2,0,1,1"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,1,0,1,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,1,0,1,1"))
                              (rule "applyOnPV" (formula "56") (term "0,1,1,0,1,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,1,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,0,1,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,1,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "1,1,1,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,1,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,0,1,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "1,0,1,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "0,0,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,1,0,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "1,0,0,0,0,1"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,0,2,0,1,1"))
                              (rule "applyOnPV" (formula "56") (term "0,1,0,2,0,1,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,0,2,0,1,1"))
                              (rule "applyOnRigidTerm" (formula "56") (term "0,0,0,1,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,0,0,0,1,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,0,0,1,0,1"))
                              (rule "applyOnPV" (formula "56") (term "0,0,0,0,1,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,1,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,1,0,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,1,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,0,1,0,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "1,0,1,0,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "0,0,1,0,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,0,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,0,0,0,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,0,0,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1,1,1,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "1,0,1,1,1,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,0,1,1,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,1,1,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "1,0,0,1,1,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,0,0,1,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1,1,0,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "1,0,1,1,0,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,0,1,1,0,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,0,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,0,0,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,1,0,0,0,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "1,1,0,0,0,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "0,1,0,0,0,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,0,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,0,0,0,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "0,0,0,0,0,0,0,1"))
                              (rule "applyOnRigidTerm" (formula "56") (term "0,1,0,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,1,0,0,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "0,0,1,0,0,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,1,1,1,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "1,1,0,1,1,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,1,1,1,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,0,0,1,1,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,0,1,1,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "1,1,0,0,1,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,0,1,1,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "1,0,0,0,1,1,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,0,0,0,1,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,1,1,0,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "1,1,0,1,1,0,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,1,1,0,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "1,0,0,1,1,0,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,0,0,1,1,0,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1,0,1,1,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,1,0,1,1,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,0,1,1,1,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "1,1,0,0,1,1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,1,0,0,1,1,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1,0,0,1,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,1,0,0,1,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,0,0,1,1,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "1,1,0,0,0,1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,1,0,0,0,1,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,0,0,1,1,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "1,0,0,0,0,1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,0,0,0,0,1,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1,0,1,1,0,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,1,0,1,1,0,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,0,1,1,0,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "1,1,0,0,1,1,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,1,0,0,1,1,0,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,0,1,1,0,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "1,0,0,0,1,1,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,0,0,0,1,1,0,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,1,0,1,1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,0,1,0,1,1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,0,0,1,0,1,1,1,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "1,0,0,1,0,1,1,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1,1,0,1,1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,1,1,0,1,1,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,1,0,0,1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,0,1,0,0,1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,0,0,1,0,0,1,1,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "1,0,0,1,0,0,1,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1,1,0,0,1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,1,1,0,0,1,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,1,0,1,1,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,0,1,0,1,1,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,0,0,1,0,1,1,0,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "1,0,0,1,0,1,1,0,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1,1,0,1,1,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,1,1,0,1,1,0,0,0,1"))
                              (rule "applyOnRigidTerm" (formula "56") (term "0,0,0,1,0,1,1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,0,0,0,1,0,1,1,1,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "1,0,0,0,1,0,1,1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,0,0,0,1,0,1,1,1,0,0,1"))
                              (rule "applyOnRigidTerm" (formula "56") (term "0,0,1,1,0,1,1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,0,0,1,1,0,1,1,1,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "1,0,0,1,1,0,1,1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,0,0,1,1,0,1,1,1,0,0,1"))
                              (rule "applyOnRigidTerm" (formula "56") (term "0,0,0,1,0,0,1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,0,0,0,1,0,0,1,1,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "1,0,0,0,1,0,0,1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,0,0,0,1,0,0,1,1,0,0,1"))
                              (rule "applyOnRigidTerm" (formula "56") (term "0,0,1,1,0,0,1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,0,0,1,1,0,0,1,1,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "1,0,0,1,1,0,0,1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,0,0,1,1,0,0,1,1,0,0,1"))
                              (rule "applyOnRigidTerm" (formula "56") (term "0,0,0,1,0,1,1,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,0,0,0,1,0,1,1,0,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "1,0,0,0,1,0,1,1,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,0,0,0,1,0,1,1,0,0,0,1"))
                              (rule "applyOnRigidTerm" (formula "56") (term "0,0,1,1,0,1,1,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,0,0,1,1,0,1,1,0,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "1,0,0,1,1,0,1,1,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,0,0,1,1,0,1,1,0,0,0,1"))
                              (rule "impRight" (formula "56") (userinteraction))
                              (rule "andRight" (formula "57"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "57"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "57"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "57"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "57"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "57"))
                                             (branch "Case 1"
                                                (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                                                (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                                                (rule "concrete_or_2" (formula "1") (term "0"))
                                                (rule "concrete_not_2" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "expand_inInt" (formula "44"))
                                                (rule "expand_inInt" (formula "29"))
                                                (rule "expand_inShort" (formula "32"))
                                                (rule "expand_inInt" (formula "45"))
                                                (rule "expand_inInt" (formula "15"))
                                                (rule "expand_inInt" (formula "16"))
                                                (rule "replace_int_MIN" (formula "44") (term "0,1"))
                                                (rule "replace_int_MAX" (formula "44") (term "1,0"))
                                                (rule "replace_int_MIN" (formula "29") (term "0,1"))
                                                (rule "replace_int_MAX" (formula "29") (term "1,0"))
                                                (rule "replace_short_MAX" (formula "32") (term "1,0"))
                                                (rule "replace_short_MIN" (formula "32") (term "0,1"))
                                                (rule "replace_int_MIN" (formula "45") (term "0,1"))
                                                (rule "replace_int_MAX" (formula "45") (term "1,0"))
                                                (rule "replace_int_MIN" (formula "15") (term "0,1"))
                                                (rule "replace_int_MAX" (formula "15") (term "1,0"))
                                                (rule "replace_int_MAX" (formula "16") (term "1,0"))
                                                (rule "replace_int_MIN" (formula "16") (term "0,1"))
                                                (rule "andLeft" (formula "44"))
                                                (rule "andLeft" (formula "29"))
                                                (rule "andLeft" (formula "33"))
                                                (rule "andLeft" (formula "48"))
                                                (rule "andLeft" (formula "15"))
                                                (rule "andLeft" (formula "17"))
                                                (rule "inEqSimp_geqRight" (formula "62"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "47") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "53") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "53") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "40"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "26") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "45"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "45") (term "0"))
                                                (rule "inEqSimp_gtToGeq" (formula "11") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "11") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "26") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "20"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "48") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "50"))
                                                (rule "inEqSimp_commuteLeq" (formula "33"))
                                                (rule "inEqSimp_commuteLeq" (formula "37"))
                                                (rule "inEqSimp_commuteLeq" (formula "52"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "inEqSimp_commuteLeq" (formula "19"))
                                                (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "29"))
                                                (rule "applyEq" (formula "37") (term "0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "14") (term "0,0,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "11") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "53") (term "0,1,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "60") (term "0") (ifseqformula "29"))
                                                (rule "applyEq" (formula "57") (term "1") (ifseqformula "29"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "11") (term "1,0,1,0,1,0,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "48") (term "1,0,1,1,0,1,1") (ifseqformula "29"))
                                                (rule "applyEq" (formula "36") (term "0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "26") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "38") (term "0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "45") (term "0,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "47") (term "1,0,1,1,0,1") (ifseqformula "29"))
                                                (rule "applyEq" (formula "26") (term "1,0,1,0,1,0,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "48") (term "1,0,1,1,0,0,1") (ifseqformula "29"))
                                                (rule "applyEq" (formula "26") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "29"))
                                                (rule "applyEq" (formula "26") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "26") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "21") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "26") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "11") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "12") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "47") (term "0,1,0,0,0,0,0,0,1") (ifseqformula "24"))
                                                (rule "applyEq" (formula "12") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "24"))
                                                (rule "jmod_axiom" (formula "34") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                                (rule "jmod_axiom" (formula "45") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "34"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "45"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "0,0"))
                                                (rule "polySimp_elimOne" (formula "46") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "47") (term "0,1,0,0,0,1,1"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0,1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                                (rule "mul_literals" (formula "20") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "47") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "0,0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "52") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "52") (term "0,0"))
                                                (rule "polySimp_elimOne" (formula "52") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "39"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1,0"))
                                                (rule "inEqSimp_contradEq3" (formula "53") (term "1") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "53") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "53") (term "0,0,1"))
                                                (rule "qeq_literals" (formula "53") (term "0,1"))
                                                (rule "concrete_and_2" (formula "53") (term "1"))
                                                (rule "concrete_impl_3" (formula "53"))
                                                (rule "notLeft" (formula "53"))
                                                (rule "inEqSimp_leqRight" (formula "54"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "replace_known_left" (formula "53") (term "0") (ifseqformula "1"))
                                                (rule "concrete_impl_1" (formula "53"))
                                                (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "53"))
                                                (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "21"))
                                                (rule "leq_literals" (formula "19") (term "0"))
                                                (rule "concrete_or_1" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "35"))
                                                (rule "leq_literals" (formula "11") (term "0"))
                                                (rule "concrete_or_1" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "42"))
                                                (rule "leq_literals" (formula "48") (term "0"))
                                                (rule "concrete_or_1" (formula "48"))
                                                (rule "true_left" (formula "48"))
                                                (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "10"))
                                                (rule "leq_literals" (formula "36") (term "0"))
                                                (rule "concrete_or_1" (formula "36"))
                                                (rule "true_left" (formula "36"))
                                                (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "10"))
                                                (rule "leq_literals" (formula "35") (term "0"))
                                                (rule "concrete_or_1" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "inEqSimp_subsumption0" (formula "46") (ifseqformula "2"))
                                                (rule "leq_literals" (formula "46") (term "0"))
                                                (rule "concrete_or_1" (formula "46"))
                                                (rule "true_left" (formula "46"))
                                                (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "37"))
                                                (rule "leq_literals" (formula "31") (term "0"))
                                                (rule "concrete_or_1" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "elimGcdLeq" (formula "25") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "sub_literals" (formula "25") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "25") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "25") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "qeq_literals" (formula "25") (term "1,0,1,1,0,0,0,1,1,0"))
                                                (rule "concrete_and_3" (formula "25") (term "0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "25") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "25") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "leq_literals" (formula "25") (term "0,1,1,0,0,0,1,1,0"))
                                                (rule "ifthenelse_true_for" (formula "25") (term "1,1,0,0,0,1,1,0"))
                                                (rule "elimGcdLeq" (formula "25") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "25") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "sub_literals" (formula "25") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "25") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "qeq_literals" (formula "25") (term "1,0,0,1,0,0,1,1,0"))
                                                (rule "concrete_and_3" (formula "25") (term "0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "25") (term "0,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "25") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "leq_literals" (formula "25") (term "0,0,1,0,0,1,1,0"))
                                                (rule "ifthenelse_true_for" (formula "25") (term "0,1,0,0,1,1,0"))
                                                (rule "elimGcdGeq" (formula "25") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "25") (term "0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "sub_literals" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "qeq_literals" (formula "25") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "concrete_and_1" (formula "25") (term "0,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "25") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "leq_literals" (formula "25") (term "0,0,0,0,0,0,0,1,1,0"))
                                                (rule "ifthenelse_true_for" (formula "25") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "elimGcdGeq" (formula "25") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "sub_literals" (formula "25") (term "0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "25") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "25") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "leq_literals" (formula "25") (term "1,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "concrete_and_3" (formula "25") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "qeq_literals" (formula "25") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "ifthenelse_true_for" (formula "25") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "elimGcdGeq" (formula "43") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0,0,1,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,1,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,1,0,0,1,1"))
                                                (rule "sub_literals" (formula "43") (term "0,0,0,0,0,0,0,1,0,0,1,1"))
                                                (rule "add_zero_right" (formula "43") (term "0,0,0,1,0,1,0,0,1,1"))
                                                (rule "add_zero_right" (formula "43") (term "0,0,0,0,0,1,0,0,1,1"))
                                                (rule "times_zero_1" (formula "43") (term "0,0,0,1,0,1,0,0,1,1"))
                                                (rule "add_zero_right" (formula "43") (term "0,0,0,0,0,1,0,0,1,1"))
                                                (rule "add_zero_left" (formula "43") (term "0,0,1,0,1,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,0,1,0,0,1,1"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,0,0,1,0,0,1,1"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0,0,1,0,0,1,1"))
                                                (rule "add_zero_right" (formula "43") (term "0,0,0,1,0,0,1,1"))
                                                (rule "qeq_literals" (formula "43") (term "0,0,1,0,0,1,1"))
                                                (rule "concrete_and_1" (formula "43") (term "0,1,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "43") (term "0,0,1,0,0,1,1"))
                                                (rule "add_literals" (formula "43") (term "1,0,0,1,0,0,1,1"))
                                                (rule "times_zero_1" (formula "43") (term "0,0,1,0,0,1,1"))
                                                (rule "leq_literals" (formula "43") (term "0,1,0,0,1,1"))
                                                (rule "ifthenelse_true_for" (formula "43") (term "1,0,0,1,1"))
                                                (rule "newSym_eq" (formula "32") (inst "l=l_0") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                                (rule "times_zero_1" (formula "32") (term "1,1"))
                                                (rule "add_zero_right" (formula "32") (term "1"))
                                                (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                                                (rule "eqSymm" (formula "33"))
                                                (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "33"))
                                                (rule "inEqSimp_homoInEq1" (formula "44") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "44") (term "0,0"))
                                                (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "33"))
                                                (rule "applyEq" (formula "37") (term "0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "33"))
                                                (rule "inEqSimp_homoInEq0" (formula "43") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "43") (term "0,0"))
                                                (rule "applyEq" (formula "43") (term "1,1,0,0,1") (ifseqformula "33"))
                                                (rule "applyEq" (formula "44") (term "1,1,0,0,0,1") (ifseqformula "33"))
                                                (rule "applyEq" (formula "30") (term "0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "31") (term "1") (ifseqformula "33"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "44") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "44") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0"))
                                                (rule "mul_literals" (formula "44") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0"))
                                                (rule "mul_literals" (formula "43") (term "0,1,0"))
                                                (rule "elimGcdLeq_antec" (formula "30") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0"))
                                                (rule "neg_literal" (formula "30") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "30") (term "0,0"))
                                                (rule "concrete_or_2" (formula "30") (term "0"))
                                                (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "30") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                                                (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "30") (term "0,0"))
                                                (rule "qeq_literals" (formula "30") (term "0"))
                                                (rule "concrete_or_2" (formula "30"))
                                                (rule "elimGcdGeq_antec" (formula "37") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "37") (term "0,0"))
                                                (rule "concrete_or_2" (formula "37") (term "0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                                (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0"))
                                                (rule "leq_literals" (formula "37") (term "0"))
                                                (rule "concrete_or_2" (formula "37"))
                                                (rule "elimGcdGeq" (formula "44") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                                (rule "sub_literals" (formula "44") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "44") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,1,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,1,0,1,0,0,0,1"))
                                                (rule "add_literals" (formula "44") (term "1,1,0,1,0,1,0,0,0,1"))
                                                (rule "times_zero_1" (formula "44") (term "1,0,1,0,1,0,0,0,1"))
                                                (rule "add_zero_right" (formula "44") (term "0,1,0,1,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0,0,1,0,0,0,1"))
                                                (rule "add_literals" (formula "44") (term "1,1,0,0,0,1,0,0,0,1"))
                                                (rule "times_zero_1" (formula "44") (term "1,0,0,0,1,0,0,0,1"))
                                                (rule "add_zero_right" (formula "44") (term "0,0,0,1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "44") (term "0,0,1,0,1,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "44") (term "0,1,0,1,0,0,0,1"))
                                                (rule "add_literals" (formula "44") (term "1,0,1,0,1,0,0,0,1"))
                                                (rule "times_zero_1" (formula "44") (term "0,1,0,1,0,0,0,1"))
                                                (rule "leq_literals" (formula "44") (term "1,0,1,0,0,0,1"))
                                                (rule "concrete_and_3" (formula "44") (term "0,1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0,1,0,0,0,1"))
                                                (rule "add_literals" (formula "44") (term "1,1,0,0,1,0,0,0,1"))
                                                (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0,0,1"))
                                                (rule "add_zero_right" (formula "44") (term "0,0,1,0,0,0,1"))
                                                (rule "qeq_literals" (formula "44") (term "0,1,0,0,0,1"))
                                                (rule "ifthenelse_true_for" (formula "44") (term "1,0,0,0,1"))
                                                (rule "elimGcdGeq" (formula "43") (term "1,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "43") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                                (rule "sub_literals" (formula "43") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,1,0,1,0,0,1"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,1,0,1,0,0,1"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,1,0,1,0,0,1"))
                                                (rule "add_zero_right" (formula "43") (term "0,1,0,1,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,0,0,1,0,0,1"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0,0,1,0,0,1"))
                                                (rule "add_zero_right" (formula "43") (term "0,0,0,1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "0,0,1,0,1,0,0,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "43") (term "0,1,0,1,0,0,1"))
                                                (rule "add_literals" (formula "43") (term "1,0,1,0,1,0,0,1"))
                                                (rule "times_zero_1" (formula "43") (term "0,1,0,1,0,0,1"))
                                                (rule "leq_literals" (formula "43") (term "1,0,1,0,0,1"))
                                                (rule "concrete_and_3" (formula "43") (term "0,1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,0,1,0,0,1"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0,1"))
                                                (rule "add_zero_right" (formula "43") (term "0,0,1,0,0,1"))
                                                (rule "qeq_literals" (formula "43") (term "0,1,0,0,1"))
                                                (rule "ifthenelse_true_for" (formula "43") (term "1,0,0,1"))
                                                (rule "newSym_eq" (formula "42") (inst "l=l_1") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                                (rule "times_zero_1" (formula "42") (term "1,1"))
                                                (rule "add_zero_right" (formula "42") (term "1"))
                                                (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "43"))
                                                (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "43"))
                                                (rule "applyEqRigid" (formula "45") (term "1,1,0,0,0,1,1") (ifseqformula "43"))
                                                (rule "applyEqRigid" (formula "45") (term "0,0") (ifseqformula "43"))
                                                (rule "inEqSimp_homoInEq0" (formula "45") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                                (rule "applyEqRigid" (formula "44") (term "0,0") (ifseqformula "43"))
                                                (rule "inEqSimp_homoInEq1" (formula "44") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "44") (term "0,0"))
                                                (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "43"))
                                                (rule "applyEq" (formula "51") (term "0,2,0") (ifseqformula "43"))
                                                (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "43"))
                                                (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "43"))
                                                (rule "applyEq" (formula "50") (term "0,2,0") (ifseqformula "43"))
                                                (rule "applyEq" (formula "46") (term "0") (ifseqformula "43"))
                                                (rule "applyEqRigid" (formula "44") (term "1,1,0,0,0,1") (ifseqformula "43"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                                (rule "mul_literals" (formula "45") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "44") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "44") (term "1,0"))
                                                (rule "mul_literals" (formula "44") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0"))
                                                (rule "elimGcdLeq_antec" (formula "46") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0"))
                                                (rule "neg_literal" (formula "46") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "46") (term "0,0"))
                                                (rule "concrete_or_2" (formula "46") (term "0"))
                                                (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "46") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "46") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0"))
                                                (rule "add_literals" (formula "46") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "46") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "46") (term "0,0"))
                                                (rule "qeq_literals" (formula "46") (term "0"))
                                                (rule "concrete_or_2" (formula "46"))
                                                (rule "elimGcdGeq_antec" (formula "40") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
                                                (rule "add_zero_right" (formula "40") (term "0,0,0,1,0"))
                                                (rule "leq_literals" (formula "40") (term "0,0"))
                                                (rule "concrete_or_2" (formula "40") (term "0"))
                                                (rule "times_zero_1" (formula "40") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                                (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "40") (term "0,0"))
                                                (rule "leq_literals" (formula "40") (term "0"))
                                                (rule "concrete_or_2" (formula "40"))
                                                (rule "elimGcdLeq" (formula "45") (term "0,0,0,1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                                (rule "sub_literals" (formula "45") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0,0,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "45") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,1,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "45") (term "1,1,0,1,0,0,0,0,1,1"))
                                                (rule "times_zero_1" (formula "45") (term "1,0,1,0,0,0,0,1,1"))
                                                (rule "add_zero_right" (formula "45") (term "0,1,0,0,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "45") (term "1,1,0,0,0,0,0,0,1,1"))
                                                (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,0,1,1"))
                                                (rule "add_zero_right" (formula "45") (term "0,0,0,0,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "45") (term "0,0,1,0,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "45") (term "0,0,0,1,0,0,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,1,0,0,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "45") (term "0,0,1,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,1,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "45") (term "1,1,0,1,0,0,0,0,1,1"))
                                                (rule "times_zero_1" (formula "45") (term "1,0,1,0,0,0,0,1,1"))
                                                (rule "add_zero_right" (formula "45") (term "0,1,0,0,0,0,1,1"))
                                                (rule "qeq_literals" (formula "45") (term "1,0,0,0,0,1,1"))
                                                (rule "concrete_and_3" (formula "45") (term "0,0,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "45") (term "0,0,0,0,0,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "45") (term "0,0,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "45") (term "0,0,0,0,0,0,0,1,1"))
                                                (rule "add_zero_left" (formula "45") (term "0,0,0,0,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "45") (term "0,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "45") (term "1,0,0,0,0,0,1,1"))
                                                (rule "times_zero_1" (formula "45") (term "0,0,0,0,0,1,1"))
                                                (rule "leq_literals" (formula "45") (term "0,0,0,0,1,1"))
                                                (rule "ifthenelse_true_for" (formula "45") (term "0,0,0,1,1"))
                                                (rule "elimGcdLeq" (formula "44") (term "0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "44") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,0,0,0,1"))
                                                (rule "sub_literals" (formula "44") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,1,0,0,0,0,1"))
                                                (rule "add_literals" (formula "44") (term "1,1,0,1,0,0,0,0,1"))
                                                (rule "times_zero_1" (formula "44") (term "1,0,1,0,0,0,0,1"))
                                                (rule "add_zero_right" (formula "44") (term "0,1,0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "44") (term "1,1,0,0,0,0,0,0,1"))
                                                (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,0,1"))
                                                (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "44") (term "0,0,1,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "44") (term "0,0,0,1,0,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "44") (term "0,1,0,0,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "44") (term "0,0,1,0,0,0,0,1"))
                                                (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,1,0,0,0,0,1"))
                                                (rule "add_literals" (formula "44") (term "1,1,0,1,0,0,0,0,1"))
                                                (rule "times_zero_1" (formula "44") (term "1,0,1,0,0,0,0,1"))
                                                (rule "add_zero_right" (formula "44") (term "0,1,0,0,0,0,1"))
                                                (rule "qeq_literals" (formula "44") (term "1,0,0,0,0,1"))
                                                (rule "concrete_and_3" (formula "44") (term "0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,0,1"))
                                                (rule "add_zero_left" (formula "44") (term "0,0,0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "44") (term "0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "44") (term "1,0,0,0,0,0,1"))
                                                (rule "times_zero_1" (formula "44") (term "0,0,0,0,0,1"))
                                                (rule "leq_literals" (formula "44") (term "0,0,0,0,1"))
                                                (rule "ifthenelse_true_for" (formula "44") (term "0,0,0,1"))
                                                (rule "elimGcdLeq" (formula "44") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "44") (term "0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0"))
                                                (rule "sub_literals" (formula "44") (term "0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "44") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "44") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "44") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "44") (term "1,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "44") (term "1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "44") (term "0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "44") (term "0,0,1,0,0"))
                                                (rule "mul_literals" (formula "44") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "44") (term "0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "44") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "44") (term "1,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "44") (term "1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "44") (term "0,1,0,0"))
                                                (rule "qeq_literals" (formula "44") (term "1,0,0"))
                                                (rule "concrete_and_3" (formula "44") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "44") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "44") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "44") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "44") (term "0,0,0"))
                                                (rule "add_literals" (formula "44") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "44") (term "0,0,0"))
                                                (rule "leq_literals" (formula "44") (term "0,0"))
                                                (rule "ifthenelse_true_for" (formula "44") (term "0"))
                                                (rule "elimGcdGeq" (formula "45") (term "0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "sub_literals" (formula "45") (term "0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0,0"))
                                                (rule "mul_literals" (formula "45") (term "0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "45") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "45") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "45") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "45") (term "1,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "45") (term "1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "45") (term "0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "0,0,1,0,0"))
                                                (rule "mul_literals" (formula "45") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "45") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "45") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "45") (term "1,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "45") (term "1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "45") (term "0,1,0,0"))
                                                (rule "leq_literals" (formula "45") (term "1,0,0"))
                                                (rule "concrete_and_3" (formula "45") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "45") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "45") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "45") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "45") (term "0,0,0"))
                                                (rule "add_literals" (formula "45") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "45") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "45") (term "0,0"))
                                                (rule "ifthenelse_true_for" (formula "45") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "34"))
                                                (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                (rule "mul_literals" (formula "22") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                (rule "add_literals" (formula "22") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "35"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "3"))
                                                (rule "leq_literals" (formula "1") (term "0"))
                                                (rule "concrete_or_1" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "35"))
                                                (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0"))
                                                (rule "mul_literals" (formula "37") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                (rule "add_literals" (formula "37") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "37") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "37") (term "0,0"))
                                                (rule "concrete_or_2" (formula "37") (term "0"))
                                                (rule "neg_literal" (formula "37") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "37") (term "0,0,0,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                                (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0"))
                                                (rule "qeq_literals" (formula "37") (term "0"))
                                                (rule "concrete_or_2" (formula "37"))
                                                (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "37"))
                                                (rule "leq_literals" (formula "31") (term "0"))
                                                (rule "concrete_or_1" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "34"))
                                                (rule "polySimp_rightDist" (formula "42") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                                                (rule "mul_literals" (formula "42") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "42") (term "0"))
                                                (rule "add_literals" (formula "42") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "42") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "42") (term "0,0"))
                                                (rule "concrete_or_2" (formula "42") (term "0"))
                                                (rule "neg_literal" (formula "42") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "42") (term "0,0,0,0"))
                                                (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                                                (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "42") (term "0,0"))
                                                (rule "qeq_literals" (formula "42") (term "0"))
                                                (rule "concrete_or_2" (formula "42"))
                                                (rule "inEqSimp_subsumption0" (formula "48") (ifseqformula "42"))
                                                (rule "leq_literals" (formula "48") (term "0"))
                                                (rule "concrete_or_1" (formula "48"))
                                                (rule "true_left" (formula "48"))
                                                (rule "nnf_imp2or" (formula "20") (term "1,0"))
                                                (rule "nnf_imp2or" (formula "12") (term "1,0,1,0"))
                                                (rule "nnf_imp2or" (formula "11") (term "1,0"))
                                                (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "29"))
                                                (rule "notLeft" (formula "29"))
                                                (rule "nnf_imp2or" (formula "26") (term "0"))
                                                (rule "commute_and" (formula "20") (term "0,0"))
                                                (rule "nnf_imp2or" (formula "46") (term "0,0,1"))
                                                (rule "commute_and" (formula "11") (term "0,0"))
                                                (rule "expand_addJint" (formula "48") (term "0"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                (rule "commute_and" (formula "12") (term "0,0"))
                                                (rule "jdiv_axiom" (formula "9") (term "1,0"))
                                                (rule "eqSymm" (formula "9"))
                                                (rule "inEqSimp_subsumption1" (formula "9") (term "0,0") (ifseqformula "11"))
                                                (rule "leq_literals" (formula "9") (term "0,0,0"))
                                                (rule "concrete_or_1" (formula "9") (term "0,0"))
                                                (rule "ifthenelse_true" (formula "9") (term "0"))
                                                (rule "eqSymm" (formula "9"))
                                                (rule "applyEqRigid" (formula "13") (term "1,1,1,0,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "13") (term "1,1,0,0,0,1,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "12") (term "1,1,1,0,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "27") (term "1,1,0,0,0,0") (ifseqformula "9"))
                                                (rule "applyEqRigid" (formula "21") (term "1,1,1,0,0") (ifseqformula "9"))
                                                (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "9"))
                                                (rule "nnf_imp2or" (formula "47") (term "0,1,1"))
                                                (rule "nnf_imp2or" (formula "46") (term "0,1"))
                                                (rule "expand_moduloInteger" (formula "49") (term "0"))
                                                (rule "replace_int_RANGE" (formula "49") (term "1,1,0"))
                                                (rule "replace_int_HALFRANGE" (formula "49") (term "0,0,1,0"))
                                                (rule "replace_int_MIN" (formula "49") (term "0,0"))
                                                (rule "polySimp_homoEq" (formula "49"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,1,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                (rule "polySimp_addComm0" (formula "49") (term "0,0"))
                                                (rule "mod_axiom" (formula "49") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "49") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "49"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "49") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1"))
                                                (rule "mul_literals" (formula "49") (term "0,0,1"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "49"))
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "49"))
                                                (rule "inEqSimp_homoInEq1" (formula "48"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "0,1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0"))
                                                (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "49"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                                (rule "add_literals" (formula "1") (term "0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                (rule "mul_literals" (formula "48") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                (rule "elimGcdLeq_antec" (formula "48") (inst "elimGcdRightDiv=add(Z(5(2(8(1(4(7(3(7(0(1(#))))))))))), l_1)") (inst "elimGcdLeftDiv=mul(div(add(Z(0(5(6(3(8(4(7(4(1(2(#))))))))))),
            mul(l_1, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "48") (term "0,0"))
                                                (rule "concrete_or_2" (formula "48") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                                                (rule "neg_literal" (formula "48") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                                                (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "48") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "48") (term "0,0,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                                                (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "48") (term "0,0"))
                                                (rule "qeq_literals" (formula "48") (term "0"))
                                                (rule "concrete_or_2" (formula "48"))
                                                (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(2(#)), l_1)") (inst "elimGcdLeftDiv=mul(div(add(Z(0(5(6(3(8(4(7(4(1(2(#))))))))))),
            mul(l_1, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "2") (term "0,0"))
                                                (rule "concrete_or_2" (formula "2") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0"))
                                                (rule "leq_literals" (formula "2") (term "0"))
                                                (rule "concrete_or_2" (formula "2"))
                                                (rule "polyDiv_pullOut" (formula "1") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,1"))
                                                (rule "equal_literals" (formula "1") (term "0,0,1,1"))
                                                (rule "ifthenelse_false" (formula "1") (term "0,1,1"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,1"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,1,1"))
                                                (rule "polySimp_addComm0" (formula "1") (term "1,1,1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                                (rule "add_literals" (formula "1") (term "0,0,1"))
                                                (rule "polyDiv_pullOut" (formula "49") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "equal_literals" (formula "49") (term "0,0,1,1"))
                                                (rule "ifthenelse_false" (formula "49") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "49") (term "1,0,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1,1"))
                                                (rule "polySimp_addComm0" (formula "49") (term "1,1,1"))
                                                (rule "polySimp_addComm1" (formula "49") (term "0,1,1,1,1"))
                                                (rule "add_literals" (formula "49") (term "0,0,1,1,1,1"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,1"))
                                                (rule "mul_literals" (formula "49") (term "0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "1"))
                                                (rule "polySimp_addComm1" (formula "49") (term "0,1"))
                                                (rule "add_literals" (formula "49") (term "0,0,1"))
                                                (rule "polyDiv_pullOut" (formula "2") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "equal_literals" (formula "2") (term "0,0,0"))
                                                (rule "ifthenelse_false" (formula "2") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0"))
                                                (rule "mul_literals" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polyDiv_pullOut" (formula "48") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                                (rule "equal_literals" (formula "48") (term "0,0,0"))
                                                (rule "ifthenelse_false" (formula "48") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "48") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "0"))
                                                (rule "polySimp_addComm0" (formula "48") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "48") (term "0,1,1,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "0"))
                                                (rule "mul_literals" (formula "48") (term "0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "48"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "34"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_subsumption5" (formula "1") (ifseqformula "3"))
                                                (rule "greater_literals" (formula "1") (term "0,0,0"))
                                                (rule "concrete_and_1" (formula "1") (term "0,0"))
                                                (rule "greater_literals" (formula "1") (term "0,0"))
                                                (rule "concrete_and_1" (formula "1") (term "0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                (rule "concrete_or_1" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "nnf_imp2or" (formula "27") (term "1,0"))
                                                (rule "nnf_imp2or" (formula "13") (term "0"))
                                                (rule "nnf_imp2or" (formula "12") (term "0"))
                                                (rule "nnf_imp2or" (formula "21") (term "0"))
                                                (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
                                                (rule "mul_literals" (formula "27") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                (rule "mul_literals" (formula "27") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "47") (term "0,0,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,0,1"))
                                                (rule "add_zero_left" (formula "47") (term "0,0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "47") (term "0,1,1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,0,1"))
                                                (rule "nnf_notAnd" (formula "46") (term "0,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "46") (term "0,0,0,0,0,0,1"))
                                                (rule "add_zero_left" (formula "46") (term "0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,1"))
                                                (rule "mul_literals" (formula "46") (term "0,1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,1"))
                                                (rule "nnf_notAnd" (formula "47") (term "0,0,1,1"))
                                                (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,1,1"))
                                                (rule "add_zero_left" (formula "47") (term "0,0,0,0,0,1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0,1,1"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0,1,1"))
                                                (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0,1,1"))
                                                (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0,1,1"))
                                                (rule "add_zero_right" (formula "47") (term "0,0,1,0,0,1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,1,1"))
                                                (rule "mul_literals" (formula "47") (term "1,1,0,0,1,1"))
                                                (rule "jdiv_axiom" (formula "32") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "0,0,2,1"))
                                                (rule "eqSymm" (formula "32"))
                                                (rule "applyEq" (formula "32") (term "1") (ifseqformula "33"))
                                                (rule "inEqSimp_subsumption6" (formula "32") (term "0,0") (ifseqformula "39"))
                                                (rule "greater_literals" (formula "32") (term "0,0,0,0"))
                                                (rule "concrete_and_1" (formula "32") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                                                (rule "leq_literals" (formula "32") (term "0,0,0"))
                                                (rule "concrete_or_1" (formula "32") (term "0,0"))
                                                (rule "ifthenelse_true" (formula "32") (term "0"))
                                                (rule "polyDiv_pullOut" (formula "32") (term "0") (inst "polyDivCoeff=l_0"))
                                                (rule "equal_literals" (formula "32") (term "0,0"))
                                                (rule "ifthenelse_false" (formula "32") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "32") (term "0,0,0"))
                                                (rule "add_literals" (formula "32") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "32") (term "0,0,0"))
                                                (rule "div_literals" (formula "32") (term "0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0"))
                                                (rule "eqClose" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "jdiv_axiom" (formula "44") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "0,0,2,1"))
                                                (rule "eqSymm" (formula "44"))
                                                (rule "applyEq" (formula "44") (term "1") (ifseqformula "45"))
                                                (rule "inEqSimp_subsumption6" (formula "44") (term "0,0") (ifseqformula "41"))
                                                (rule "times_zero_1" (formula "44") (term "1,1,0,0,0"))
                                                (rule "greater_literals" (formula "44") (term "0,0,0,0"))
                                                (rule "concrete_and_1" (formula "44") (term "0,0,0"))
                                                (rule "leq_literals" (formula "44") (term "0,0,0"))
                                                (rule "concrete_or_1" (formula "44") (term "0,0"))
                                                (rule "ifthenelse_true" (formula "44") (term "0"))
                                                (rule "polyDiv_pullOut" (formula "44") (term "0") (inst "polyDivCoeff=l_1"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,2,0"))
                                                (rule "equal_literals" (formula "44") (term "0,0"))
                                                (rule "ifthenelse_false" (formula "44") (term "0"))
                                                (rule "polySimp_pullOutFactor0" (formula "44") (term "0,0,0"))
                                                (rule "add_literals" (formula "44") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "44") (term "0,0,0"))
                                                (rule "div_literals" (formula "44") (term "0,0"))
                                                (rule "add_zero_left" (formula "44") (term "0"))
                                                (rule "eqClose" (formula "44"))
                                                (rule "true_left" (formula "44"))
                                                (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "28") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "6"))
                                                (rule "insert_constant_value" (formula "28") (term "1,1,0,0,0,0,0,0,0"))
                                                (rule "insert_constant_value" (formula "28") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "insert_constant_value" (formula "28") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "eqClose" (formula "28") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "concrete_and_3" (formula "28") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "insert_constant_value" (formula "28") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "insert_constant_value" (formula "28") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "eqClose" (formula "28") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "concrete_and_3" (formula "28") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "insert_constant_value" (formula "28") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "eqClose" (formula "28") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "concrete_and_3" (formula "28") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "expand_inInt" (formula "28") (term "1,1"))
                                                (rule "expand_inInt" (formula "28") (term "0,1"))
                                                (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "replace_int_MIN" (formula "28") (term "0,1,1,1"))
                                                (rule "replace_int_MAX" (formula "28") (term "1,0,1,1"))
                                                (rule "replace_int_MIN" (formula "28") (term "0,1,0,1"))
                                                (rule "replace_int_MAX" (formula "28") (term "1,0,0,1"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "andLeft" (formula "29"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "andLeft" (formula "30"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "notLeft" (formula "28"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "notLeft" (formula "28"))
                                                (rule "exLeft" (formula "35") (inst "sk=i_1_2"))
                                                (rule "andLeft" (formula "35"))
                                                (rule "andLeft" (formula "35"))
                                                (rule "exLeft" (formula "34") (inst "sk=i_2_0"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "eqSymm" (formula "33"))
                                                (rule "eqSymm" (formula "31") (term "1,1,0,1,0"))
                                                (rule "eqSymm" (formula "31") (term "1,0,1,0,1,0"))
                                                (rule "eqSymm" (formula "36"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,0,1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "0,2,0,0,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "0,2,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "0,2,0,0,0,2,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "0,2,0,1,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "0,2,1,1,0,1,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "30") (term "0,2,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "32"))
                                                (rule "mul_literals" (formula "32") (term "1,0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "38"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "35"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                (rule "ifthenelse_negated" (formula "33") (term "2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "41") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "41") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "41") (term "1,0,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "40") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "40") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "42"))
                                                (rule "inEqSimp_commuteLeq" (formula "43"))
                                                (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "29"))
                                                (rule "inEqSimp_commuteLeq" (formula "28"))
                                                (rule "inEqSimp_commuteLeq" (formula "37"))
                                                (rule "inEqSimp_commuteLeq" (formula "34"))
                                                (rule "inEqSimp_commuteLeq" (formula "41") (term "0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,1,1,0"))
                                                (rule "applyEq" (formula "40") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "41") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "41") (term "1,0,1,0,1,0,1,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "40") (term "1,0,1,0,1,0,1,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "38") (term "0,0,1,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "25") (term "0") (ifseqformula "36"))
                                                (rule "applyEq" (formula "28") (term "0") (ifseqformula "36"))
                                                (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "36"))
                                                (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "36"))
                                                (rule "applyEq" (formula "29") (term "0") (ifseqformula "36"))
                                                (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,0,0") (ifseqformula "36"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "36"))
                                                (rule "applyEq" (formula "41") (term "0,0,1,0,0,1,0,0") (ifseqformula "36"))
                                                (rule "applyEq" (formula "40") (term "0,0,1,0,0,1,0,0") (ifseqformula "36"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "36"))
                                                (rule "applyEq" (formula "41") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "36"))
                                                (rule "applyEq" (formula "38") (term "0,1,0") (ifseqformula "9"))
                                                (rule "applyEqRigid" (formula "36") (term "1") (ifseqformula "25"))
                                                (rule "applyEqRigid" (formula "29") (term "0") (ifseqformula "25"))
                                                (rule "applyEqRigid" (formula "33") (term "0,1,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "28") (term "0") (ifseqformula "25"))
                                                (rule "applyEqRigid" (formula "32") (term "1,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "29") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                                (rule "applyEqRigid" (formula "30") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                                (rule "applyEqRigid" (formula "39") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                                (rule "applyEqRigid" (formula "38") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "39") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "25"))
                                                (rule "applyEqRigid" (formula "38") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                                (rule "applyEqRigid" (formula "39") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "9"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31"))
                                                (rule "mul_literals" (formula "31") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0"))
                                                (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "45"))
                                                (rule "leq_literals" (formula "28") (term "0"))
                                                (rule "concrete_or_1" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "inEqSimp_subsumption0" (formula "38") (ifseqformula "20"))
                                                (rule "leq_literals" (formula "38") (term "0"))
                                                (rule "concrete_or_1" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "elimGcdLeq" (formula "37") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                                (rule "sub_literals" (formula "37") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,1,0,1,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "37") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,1,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0,0,1,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "37") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "37") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,1,0,1,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "37") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,1,0,1,1,0,0,1,1,0"))
                                                (rule "qeq_literals" (formula "37") (term "1,0,1,1,0,0,1,1,0"))
                                                (rule "concrete_and_3" (formula "37") (term "0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "37") (term "0,0,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "37") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "37") (term "1,0,0,1,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "37") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "leq_literals" (formula "37") (term "0,1,1,0,0,1,1,0"))
                                                (rule "ifthenelse_true_for" (formula "37") (term "1,1,0,0,1,1,0"))
                                                (rule "elimGcdGeq" (formula "37") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "sub_literals" (formula "37") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "37") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "37") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "37") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "37") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "37") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "leq_literals" (formula "37") (term "1,0,0,1,0,0,1,1,0"))
                                                (rule "concrete_and_3" (formula "37") (term "0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "37") (term "1,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "qeq_literals" (formula "37") (term "0,0,1,0,0,1,1,0"))
                                                (rule "ifthenelse_true_for" (formula "37") (term "0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "43"))
                                                (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                (rule "add_literals" (formula "31") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "27") (term "0,1,0"))
                                                (rule "double_not" (formula "27") (term "0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "27") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "27") (term "0,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "27") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,1,0"))
                                                (rule "nnf_imp2or" (formula "13") (term "0,1,0"))
                                                (rule "nnf_notAnd" (formula "12") (term "0,1,0"))
                                                (rule "double_not" (formula "12") (term "0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "12") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "12") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,0"))
                                                (rule "nnf_imp2or" (formula "27") (term "0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "12") (term "0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "28") (term "1,0"))
                                                (rule "nnf_imp2or" (formula "29") (term "1,0,1,0"))
                                                (rule "cut_direct" (formula "56") (term "0"))
                                                (branch "CUT: l_0 <= -1 + l_1 TRUE"
                                                   (rule "concrete_impl_1" (formula "57"))
                                                   (rule "inEqSimp_contradInEq0" (formula "58") (term "0") (ifseqformula "56"))
                                                   (rule "inEqSimp_homoInEq1" (formula "58") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "58") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "58") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "58") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,0"))
                                                   (rule "add_literals" (formula "58") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "58") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "58") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "58") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "58") (term "0"))
                                                   (rule "concrete_impl_2" (formula "58"))
                                                   (rule "true_left" (formula "58"))
                                                   (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "56"))
                                                   (rule "times_zero_1" (formula "48") (term "0,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                                   (rule "mul_literals" (formula "48") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "48"))
                                                   (rule "leq_literals" (formula "52") (term "0"))
                                                   (rule "concrete_or_1" (formula "52"))
                                                   (rule "true_left" (formula "52"))
                                                   (rule "div_axiom" (formula "9") (term "1") (inst "quotient=quotient_0"))
                                                   (rule "qeq_literals" (formula "9") (term "0,1,1"))
                                                   (rule "ifthenelse_true_for" (formula "9") (term "1,1"))
                                                   (rule "equal_literals" (formula "9") (term "0"))
                                                   (rule "concrete_or_2" (formula "9"))
                                                   (rule "mul_literals" (formula "9") (term "1,1,1"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "1"))
                                                   (rule "add_literals" (formula "11") (term "0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "10"))
                                                   (rule "inEqSimp_homoInEq1" (formula "11"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                   (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "9"))
                                                   (rule "inEqSimp_homoInEq1" (formula "38"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                   (rule "applyEq" (formula "41") (term "1,1,1,0,0") (ifseqformula "9"))
                                                   (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "9"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                   (rule "applyEqRigid" (formula "16") (term "1,1,0,0") (ifseqformula "9"))
                                                   (rule "applyEqRigid" (formula "31") (term "1,1,1,0,0") (ifseqformula "9"))
                                                   (rule "applyEqRigid" (formula "40") (term "1,1,1,0,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "16") (term "1,1,0,0,0,0,1,0") (ifseqformula "9"))
                                                   (rule "applyEqRigid" (formula "24") (term "1,1,0,0") (ifseqformula "9"))
                                                   (rule "applyEqRigid" (formula "13") (term "1,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "32") (term "1,1,1,0,0,1,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "15") (term "1,1,0,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "30") (term "1,0,0,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "32") (term "1,1,1,0,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "12") (term "1") (ifseqformula "9"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                   (rule "mul_literals" (formula "11") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1"))
                                                   (rule "mul_literals" (formula "38") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "11"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                                   (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=add(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        mul(quotient_0, Z(neglit(1(#))))),
    l_1)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_1, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "1") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "1") (term "0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "leq_literals" (formula "1") (term "0"))
                                                   (rule "concrete_or_2" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "57") (ifseqformula "12"))
                                                   (rule "polySimp_rightDist" (formula "57") (term "0,0"))
                                                   (rule "mul_literals" (formula "57") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "57") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                                   (rule "add_literals" (formula "57") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "57") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "57"))
                                                   (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                                   (rule "elimGcdLeq_antec" (formula "57") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "57") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "neg_literal" (formula "57") (term "0,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "57") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "57") (term "0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "57") (term "0,0"))
                                                   (rule "add_literals" (formula "57") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "57") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "57") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "57") (term "0,0"))
                                                   (rule "add_literals" (formula "57") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "57") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "57") (term "0,0"))
                                                   (rule "qeq_literals" (formula "57") (term "0"))
                                                   (rule "concrete_or_2" (formula "57"))
                                                   (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "12"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "28") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "40"))
                                                   (rule "mul_literals" (formula "39") (term "0,0"))
                                                   (rule "add_zero_left" (formula "39") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                   (rule "mul_literals" (formula "39") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "12"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                                                   (rule "times_zero_1" (formula "18") (term "0,0"))
                                                   (rule "add_zero_left" (formula "18") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                   (rule "mul_literals" (formula "18") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "51"))
                                                   (rule "polySimp_mulAssoc" (formula "11") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "11") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                   (rule "elimGcdLeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0"))
                                                   (rule "neg_literal" (formula "11") (term "0,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "11") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "11") (term "0"))
                                                   (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                   (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "11") (term "0,0"))
                                                   (rule "qeq_literals" (formula "11") (term "0"))
                                                   (rule "concrete_or_2" (formula "11"))
                                                   (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "13"))
                                                   (rule "polySimp_rightDist" (formula "55") (term "0,0"))
                                                   (rule "mul_literals" (formula "55") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "55") (term "0,0"))
                                                   (rule "add_literals" (formula "55") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "55") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "55"))
                                                   (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                                   (rule "elimGcdLeq_antec" (formula "55") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                   (rule "neg_literal" (formula "55") (term "0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "55") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "55") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0"))
                                                   (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "55") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0"))
                                                   (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "55") (term "0,0"))
                                                   (rule "qeq_literals" (formula "55") (term "0"))
                                                   (rule "concrete_or_2" (formula "55"))
                                                   (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "13"))
                                                   (rule "mul_literals" (formula "16") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                   (rule "add_literals" (formula "16") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                   (rule "mul_literals" (formula "16") (term "1"))
                                                   (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "16") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "16") (term "0"))
                                                   (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0"))
                                                   (rule "leq_literals" (formula "16") (term "0"))
                                                   (rule "concrete_or_2" (formula "16"))
                                                   (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "16"))
                                                   (rule "leq_literals" (formula "42") (term "0"))
                                                   (rule "concrete_or_1" (formula "42"))
                                                   (rule "true_left" (formula "42"))
                                                   (rule "inEqSimp_exactShadow3" (formula "58") (ifseqformula "55"))
                                                   (rule "times_zero_1" (formula "58") (term "0,0"))
                                                   (rule "add_zero_left" (formula "58") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "58") (ifseqformula "16"))
                                                   (rule "leq_literals" (formula "58") (term "0"))
                                                   (rule "concrete_or_1" (formula "58"))
                                                   (rule "true_left" (formula "58"))
                                                   (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "30"))
                                                   (rule "times_zero_1" (formula "28") (term "0,0"))
                                                   (rule "add_zero_left" (formula "28") (term "0"))
                                                   (rule "inEqSimp_subsumption6" (formula "28") (ifseqformula "16"))
                                                   (rule "greater_literals" (formula "28") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "28") (term "0"))
                                                   (rule "mul_literals" (formula "28") (term "1,0"))
                                                   (rule "leq_literals" (formula "28") (term "0"))
                                                   (rule "concrete_or_1" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "inEqSimp_exactShadow0" (formula "1") (ifseqformula "68"))
                                                   (rule "eq_and" (formula "1") (term "0"))
                                                   (rule "greater_literals" (formula "1") (term "0"))
                                                   (rule "concrete_impl_1" (formula "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_subsumption6" (formula "1") (ifseqformula "17"))
                                                   (rule "greater_literals" (formula "1") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0"))
                                                   (rule "leq_literals" (formula "1") (term "0"))
                                                   (rule "concrete_or_1" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "57") (ifseqformula "62"))
                                                   (rule "mul_literals" (formula "57") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                   (rule "mul_literals" (formula "57") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "57") (ifseqformula "16"))
                                                   (rule "leq_literals" (formula "57") (term "0"))
                                                   (rule "concrete_or_1" (formula "57"))
                                                   (rule "true_left" (formula "57"))
                                                   (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "39"))
                                                   (rule "times_zero_1" (formula "37") (term "0,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0"))
                                                   (rule "inEqSimp_subsumption6" (formula "37") (ifseqformula "16"))
                                                   (rule "greater_literals" (formula "37") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "37") (term "0"))
                                                   (rule "mul_literals" (formula "37") (term "1,0"))
                                                   (rule "leq_literals" (formula "37") (term "0"))
                                                   (rule "concrete_or_1" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "nnf_imp2or" (formula "45") (term "1,0"))
                                                   (rule "div_axiom" (formula "2") (term "0,1,1") (inst "quotient=quotient_1"))
                                                   (rule "mul_literals" (formula "2") (term "1,1,1,1,1"))
                                                   (rule "qeq_literals" (formula "2") (term "0,1,1"))
                                                   (rule "ifthenelse_true_for" (formula "2") (term "1,1"))
                                                   (rule "equal_literals" (formula "2") (term "0"))
                                                   (rule "concrete_or_2" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                                                   (rule "add_literals" (formula "4") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "1"))
                                                   (rule "add_literals" (formula "4") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "applyEq" (formula "71") (term "0,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "71"))
                                                   (rule "polySimp_mulLiterals" (formula "71") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                   (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "6"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "2"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                   (rule "applyEqRigid" (formula "72") (term "0,1,1") (ifseqformula "2"))
                                                   (rule "polySimp_addComm1" (formula "72") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                   (rule "mul_literals" (formula "4") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "71"))
                                                   (rule "polySimp_mulComm0" (formula "71") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "71") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "71") (term "1,1"))
                                                   (rule "mul_literals" (formula "71") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                   (rule "mul_literals" (formula "6") (term "0,1"))
                                                   (rule "inEqSimp_subsumption6" (formula "3") (ifseqformula "71"))
                                                   (rule "greater_literals" (formula "3") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "3") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "0,0"))
                                                   (rule "qeq_literals" (formula "3") (term "0"))
                                                   (rule "concrete_or_1" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "5"))
                                                   (rule "greater_literals" (formula "3") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "3") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0,0"))
                                                   (rule "qeq_literals" (formula "3") (term "0"))
                                                   (rule "concrete_or_1" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "inEqSimp_exactShadow3" (formula "58") (ifseqformula "4"))
                                                   (rule "mul_literals" (formula "58") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "58") (term "0"))
                                                   (rule "add_literals" (formula "58") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "58"))
                                                   (rule "mul_literals" (formula "58") (term "1"))
                                                   (rule "elimGcdGeq_antec" (formula "58") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                   (rule "polySimp_mulLiterals" (formula "58") (term "1,0,1,0"))
                                                   (rule "times_zero_1" (formula "58") (term "1,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "58") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "58") (term "0"))
                                                   (rule "polySimp_addLiterals" (formula "58") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "58") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "58") (term "0,0"))
                                                   (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "58") (term "0,0"))
                                                   (rule "leq_literals" (formula "58") (term "0"))
                                                   (rule "concrete_or_2" (formula "58"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "53"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "5"))
                                                   (rule "greater_literals" (formula "3") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "3") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0,0"))
                                                   (rule "qeq_literals" (formula "3") (term "0"))
                                                   (rule "concrete_or_1" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "1"))
                                                   (rule "mul_literals" (formula "59") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "59") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "59") (term "0,0"))
                                                   (rule "add_literals" (formula "59") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "59"))
                                                   (rule "polySimp_mulComm0" (formula "59") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "59") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "59") (term "1,1"))
                                                   (rule "mul_literals" (formula "59") (term "0,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "71") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "71") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "71") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "71") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "71") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "71") (term "0,0,0"))
                                                   (rule "add_literals" (formula "71") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "71") (term "0,0"))
                                                   (rule "add_literals" (formula "71") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "71") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "71") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "71"))
                                                   (rule "mul_literals" (formula "71") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "71") (ifseqformula "17"))
                                                   (rule "leq_literals" (formula "71") (term "0"))
                                                   (rule "concrete_or_1" (formula "71"))
                                                   (rule "true_left" (formula "71"))
                                                   (rule "inEqSimp_exactShadow3" (formula "71") (ifseqformula "64"))
                                                   (rule "polySimp_rightDist" (formula "71") (term "0,0"))
                                                   (rule "mul_literals" (formula "71") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                   (rule "add_literals" (formula "71") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "71"))
                                                   (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                                   (rule "inEqSimp_contradInEq5" (formula "71") (ifseqformula "58"))
                                                   (rule "mul_literals" (formula "71") (term "1,1,0"))
                                                   (rule "greater_literals" (formula "71") (term "0,0"))
                                                   (rule "concrete_impl_1" (formula "71") (term "0"))
                                                   (rule "qeq_literals" (formula "71") (term "0"))
                                                   (rule "concrete_and_2" (formula "71"))
                                                   (rule "closeFalse" (formula "71"))
                                                )
                                                (branch "CUT: l_0 <= -1 + l_1 FALSE"
                                                   (rule "concrete_impl_2" (formula "56"))
                                                   (rule "true_left" (formula "56"))
                                                   (rule "inEqSimp_leqRight" (formula "60"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "47"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "div_axiom" (formula "10") (term "1") (inst "quotient=quotient_0"))
                                                   (rule "qeq_literals" (formula "10") (term "0,1,1"))
                                                   (rule "ifthenelse_true_for" (formula "10") (term "1,1"))
                                                   (rule "equal_literals" (formula "10") (term "0"))
                                                   (rule "concrete_or_2" (formula "10"))
                                                   (rule "mul_literals" (formula "10") (term "1,1,1"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "1"))
                                                   (rule "add_literals" (formula "12") (term "0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "11"))
                                                   (rule "inEqSimp_homoInEq1" (formula "12"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                   (rule "applyEqRigid" (formula "14") (term "1,0") (ifseqformula "10"))
                                                   (rule "applyEqRigid" (formula "32") (term "1,1,1,0,0") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "39") (term "0") (ifseqformula "10"))
                                                   (rule "inEqSimp_homoInEq1" (formula "39"))
                                                   (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                   (rule "applyEq" (formula "16") (term "1,1,0,0") (ifseqformula "10"))
                                                   (rule "applyEqRigid" (formula "17") (term "1,1,0,0") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "33") (term "1,1,1,0,0") (ifseqformula "10"))
                                                   (rule "applyEqRigid" (formula "31") (term "1,0,0,0") (ifseqformula "10"))
                                                   (rule "applyEqRigid" (formula "42") (term "1,1,1,0,0") (ifseqformula "10"))
                                                   (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "10"))
                                                   (rule "inEqSimp_homoInEq1" (formula "19"))
                                                   (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                   (rule "applyEqRigid" (formula "41") (term "1,1,1,0,0") (ifseqformula "10"))
                                                   (rule "applyEqRigid" (formula "17") (term "1,1,0,0,0,0,1,0") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "25") (term "1,1,0,0") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "33") (term "1,1,1,0,0,1,0") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "13") (term "1") (ifseqformula "10"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                   (rule "mul_literals" (formula "12") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "39"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                                   (rule "mul_literals" (formula "39") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                   (rule "mul_literals" (formula "19") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                   (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                   (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        mul(quotient_0, Z(neglit(1(#))))),
    l_1)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_1, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                                   (rule "leq_literals" (formula "2") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "2") (term "0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0"))
                                                   (rule "leq_literals" (formula "2") (term "0"))
                                                   (rule "concrete_or_2" (formula "2"))
                                                   (rule "inEqSimp_exactShadow3" (formula "58") (ifseqformula "13"))
                                                   (rule "polySimp_rightDist" (formula "58") (term "0,0"))
                                                   (rule "mul_literals" (formula "58") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "58") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                                                   (rule "add_literals" (formula "58") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "58") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "58"))
                                                   (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                                                   (rule "elimGcdLeq_antec" (formula "58") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "58") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "58") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "58") (term "0"))
                                                   (rule "neg_literal" (formula "58") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "58") (term "0,0"))
                                                   (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "58") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "58") (term "0,0"))
                                                   (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "58") (term "0,0"))
                                                   (rule "qeq_literals" (formula "58") (term "0"))
                                                   (rule "concrete_or_2" (formula "58"))
                                                   (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "13"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                   (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                   (rule "add_literals" (formula "29") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "29") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "13"))
                                                   (rule "mul_literals" (formula "16") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                   (rule "add_literals" (formula "16") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                   (rule "mul_literals" (formula "16") (term "1"))
                                                   (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "16") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "16") (term "0"))
                                                   (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0"))
                                                   (rule "leq_literals" (formula "16") (term "0"))
                                                   (rule "concrete_or_2" (formula "16"))
                                                   (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "42"))
                                                   (rule "times_zero_1" (formula "41") (term "0,0"))
                                                   (rule "add_zero_left" (formula "41") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                                   (rule "mul_literals" (formula "41") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "16"))
                                                   (rule "leq_literals" (formula "41") (term "0"))
                                                   (rule "concrete_or_1" (formula "41"))
                                                   (rule "true_left" (formula "41"))
                                                   (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                                                   (rule "times_zero_1" (formula "20") (term "0,0"))
                                                   (rule "add_zero_left" (formula "20") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                   (rule "mul_literals" (formula "20") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "16"))
                                                   (rule "leq_literals" (formula "20") (term "0"))
                                                   (rule "concrete_or_1" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "51"))
                                                   (rule "polySimp_mulAssoc" (formula "12") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "12") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                   (rule "elimGcdLeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1,0"))
                                                   (rule "neg_literal" (formula "12") (term "0,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "12") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "12") (term "0"))
                                                   (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                                   (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                   (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "12") (term "0,0"))
                                                   (rule "qeq_literals" (formula "12") (term "0"))
                                                   (rule "concrete_or_2" (formula "12"))
                                                   (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "14"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                                   (rule "add_literals" (formula "40") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "40") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "14"))
                                                   (rule "polySimp_rightDist" (formula "56") (term "0,0"))
                                                   (rule "mul_literals" (formula "56") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "56") (term "0,0"))
                                                   (rule "add_literals" (formula "56") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "56") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "56"))
                                                   (rule "polySimp_mulLiterals" (formula "56") (term "0"))
                                                   (rule "elimGcdLeq_antec" (formula "56") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "56") (term "1,0,1,0"))
                                                   (rule "neg_literal" (formula "56") (term "0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "56") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "56") (term "0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "56") (term "0,0"))
                                                   (rule "add_literals" (formula "56") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "56") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "56") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "56") (term "0,0"))
                                                   (rule "add_literals" (formula "56") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "56") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "56") (term "0,0"))
                                                   (rule "qeq_literals" (formula "56") (term "0"))
                                                   (rule "concrete_or_2" (formula "56"))
                                                   (rule "inEqSimp_exactShadow0" (formula "2") (ifseqformula "68"))
                                                   (rule "eq_and" (formula "2") (term "0"))
                                                   (rule "greater_literals" (formula "2") (term "0"))
                                                   (rule "concrete_impl_1" (formula "2"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "mul_literals" (formula "2") (term "1"))
                                                   (rule "inEqSimp_subsumption6" (formula "2") (ifseqformula "18"))
                                                   (rule "greater_literals" (formula "2") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "2") (term "0"))
                                                   (rule "mul_literals" (formula "2") (term "1,0"))
                                                   (rule "leq_literals" (formula "2") (term "0"))
                                                   (rule "concrete_or_1" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "56"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "31"))
                                                   (rule "times_zero_1" (formula "29") (term "0,0"))
                                                   (rule "add_zero_left" (formula "29") (term "0"))
                                                   (rule "inEqSimp_subsumption6" (formula "29") (ifseqformula "17"))
                                                   (rule "greater_literals" (formula "29") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "29") (term "0"))
                                                   (rule "mul_literals" (formula "29") (term "1,0"))
                                                   (rule "leq_literals" (formula "29") (term "0"))
                                                   (rule "concrete_or_1" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "inEqSimp_exactShadow3" (formula "61") (ifseqformula "63"))
                                                   (rule "times_zero_1" (formula "61") (term "0,0"))
                                                   (rule "add_zero_left" (formula "61") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "61") (ifseqformula "17"))
                                                   (rule "leq_literals" (formula "61") (term "0"))
                                                   (rule "concrete_or_1" (formula "61"))
                                                   (rule "true_left" (formula "61"))
                                                   (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "40"))
                                                   (rule "mul_literals" (formula "38") (term "0,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0"))
                                                   (rule "inEqSimp_subsumption6" (formula "38") (ifseqformula "17"))
                                                   (rule "greater_literals" (formula "38") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "38") (term "0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0"))
                                                   (rule "leq_literals" (formula "38") (term "0"))
                                                   (rule "concrete_or_1" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "inEqSimp_exactShadow3" (formula "58") (ifseqformula "56"))
                                                   (rule "times_zero_1" (formula "58") (term "0,0"))
                                                   (rule "add_zero_left" (formula "58") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "58") (ifseqformula "17"))
                                                   (rule "leq_literals" (formula "58") (term "0"))
                                                   (rule "concrete_or_1" (formula "58"))
                                                   (rule "true_left" (formula "58"))
                                                   (rule "cut_direct" (formula "67") (term "0"))
                                                   (branch "CUT: l_0 >= 1 + l_1 TRUE"
                                                      (rule "concrete_impl_1" (formula "68"))
                                                      (rule "andLeft" (formula "68"))
                                                      (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "67"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                      (rule "concrete_or_1" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "66") (ifseqformula "55"))
                                                      (rule "polySimp_rightDist" (formula "66") (term "0,0"))
                                                      (rule "mul_literals" (formula "66") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "66") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "66"))
                                                      (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "66") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "62") (ifseqformula "66"))
                                                      (rule "inEqSimp_homoInEq0" (formula "62") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "62") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "62") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "62") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "62") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0"))
                                                      (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "62") (term "0,0"))
                                                      (rule "qeq_literals" (formula "62") (term "0"))
                                                      (rule "concrete_or_1" (formula "62"))
                                                      (rule "true_left" (formula "62"))
                                                      (rule "inEqSimp_exactShadow3" (formula "66") (ifseqformula "54"))
                                                      (rule "polySimp_rightDist" (formula "66") (term "0,0"))
                                                      (rule "mul_literals" (formula "66") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "66") (term "0"))
                                                      (rule "add_literals" (formula "66") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "66"))
                                                      (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "66") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "61") (ifseqformula "66"))
                                                      (rule "leq_literals" (formula "61") (term "0"))
                                                      (rule "concrete_or_1" (formula "61"))
                                                      (rule "true_left" (formula "61"))
                                                      (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "64"))
                                                      (rule "times_zero_1" (formula "60") (term "0,0"))
                                                      (rule "add_zero_left" (formula "60") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "60"))
                                                      (rule "mul_literals" (formula "60") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "60") (ifseqformula "16"))
                                                      (rule "leq_literals" (formula "60") (term "0"))
                                                      (rule "concrete_or_1" (formula "60"))
                                                      (rule "true_left" (formula "60"))
                                                      (rule "nnf_imp2or" (formula "45") (term "1,0"))
                                                      (rule "div_axiom" (formula "2") (term "0,1,1") (inst "quotient=quotient_1"))
                                                      (rule "mul_literals" (formula "2") (term "1,1,1,1,1"))
                                                      (rule "qeq_literals" (formula "2") (term "0,1,1"))
                                                      (rule "ifthenelse_true_for" (formula "2") (term "1,1"))
                                                      (rule "equal_literals" (formula "2") (term "0"))
                                                      (rule "concrete_or_2" (formula "2"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                                                      (rule "add_literals" (formula "4") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "1"))
                                                      (rule "add_literals" (formula "4") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "2"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                      (rule "applyEqRigid" (formula "1") (term "0,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                      (rule "applyEq" (formula "72") (term "0,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "72"))
                                                      (rule "polySimp_mulLiterals" (formula "72") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "72") (term "0"))
                                                      (rule "applyEq" (formula "73") (term "0,1,1") (ifseqformula "2"))
                                                      (rule "polySimp_addComm1" (formula "73") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "mul_literals" (formula "3") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                      (rule "mul_literals" (formula "4") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                      (rule "mul_literals" (formula "6") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "72"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "72") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "72") (term "1,1"))
                                                      (rule "mul_literals" (formula "72") (term "0,1"))
                                                      (rule "inEqSimp_subsumption6" (formula "3") (ifseqformula "72"))
                                                      (rule "greater_literals" (formula "3") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "3") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "0,0"))
                                                      (rule "qeq_literals" (formula "3") (term "0"))
                                                      (rule "concrete_or_1" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "5"))
                                                      (rule "greater_literals" (formula "3") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "3") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0,0"))
                                                      (rule "qeq_literals" (formula "3") (term "0"))
                                                      (rule "concrete_or_1" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "inEqSimp_exactShadow3" (formula "61") (ifseqformula "4"))
                                                      (rule "times_zero_1" (formula "61") (term "0,0"))
                                                      (rule "add_zero_left" (formula "61") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "61"))
                                                      (rule "mul_literals" (formula "61") (term "1"))
                                                      (rule "elimGcdGeq_antec" (formula "61") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                      (rule "polySimp_mulLiterals" (formula "61") (term "1,0,1,0"))
                                                      (rule "times_zero_1" (formula "61") (term "1,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "61") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "61") (term "0"))
                                                      (rule "polySimp_addLiterals" (formula "61") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "61") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "61") (term "0,0"))
                                                      (rule "add_literals" (formula "61") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "61") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "61") (term "0,0"))
                                                      (rule "leq_literals" (formula "61") (term "0"))
                                                      (rule "concrete_or_2" (formula "61"))
                                                      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "14"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "1"))
                                                      (rule "greater_literals" (formula "3") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "3") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "0,0"))
                                                      (rule "qeq_literals" (formula "3") (term "0"))
                                                      (rule "concrete_or_1" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "1"))
                                                      (rule "times_zero_1" (formula "62") (term "0,0"))
                                                      (rule "add_zero_left" (formula "62") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "62"))
                                                      (rule "polySimp_mulComm0" (formula "62") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "62") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "62") (term "1,1"))
                                                      (rule "mul_literals" (formula "62") (term "0,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "72") (ifseqformula "67"))
                                                      (rule "polySimp_rightDist" (formula "72") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "72") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "72") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "72") (term "0,0"))
                                                      (rule "add_literals" (formula "72") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "72"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "72") (term "1"))
                                                      (rule "mul_literals" (formula "72") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "72") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "73") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "73") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "73") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "73") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "73") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "73") (term "0,0,0"))
                                                      (rule "add_literals" (formula "73") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "73") (term "0,0"))
                                                      (rule "add_literals" (formula "73") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "73") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "73") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "73"))
                                                      (rule "mul_literals" (formula "73") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "73") (ifseqformula "17"))
                                                      (rule "leq_literals" (formula "73") (term "0"))
                                                      (rule "concrete_or_1" (formula "73"))
                                                      (rule "true_left" (formula "73"))
                                                      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "53"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "5"))
                                                      (rule "greater_literals" (formula "3") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "3") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0,0"))
                                                      (rule "qeq_literals" (formula "3") (term "0"))
                                                      (rule "concrete_or_1" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "inEqSimp_exactShadow3" (formula "73") (ifseqformula "68"))
                                                      (rule "polySimp_rightDist" (formula "73") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "73") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "73") (term "0"))
                                                      (rule "add_literals" (formula "73") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "73"))
                                                      (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                                      (rule "inEqSimp_contradInEq5" (formula "73") (ifseqformula "61"))
                                                      (rule "times_zero_1" (formula "73") (term "1,1,0"))
                                                      (rule "greater_literals" (formula "73") (term "0,0"))
                                                      (rule "concrete_impl_1" (formula "73") (term "0"))
                                                      (rule "qeq_literals" (formula "73") (term "0"))
                                                      (rule "concrete_and_2" (formula "73"))
                                                      (rule "closeFalse" (formula "73"))
                                                   )
                                                   (branch "CUT: l_0 >= 1 + l_1 FALSE"
                                                      (rule "concrete_impl_2" (formula "67"))
                                                      (rule "true_left" (formula "67"))
                                                      (rule "inEqSimp_geqRight" (formula "70"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "58") (term "0,1,1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "58") (term "0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "0"))
                                                      (rule "qeq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "55") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "61") (term "0") (ifseqformula "51"))
                                                      (rule "applyEq" (formula "50") (term "0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "52") (term "0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "51") (term "1") (ifseqformula "1"))
                                                      (rule "nnf_imp2or" (formula "46") (term "1,0"))
                                                      (rule "div_axiom" (formula "3") (term "0,1,1") (inst "quotient=quotient_1"))
                                                      (rule "equal_literals" (formula "3") (term "0"))
                                                      (rule "concrete_or_2" (formula "3"))
                                                      (rule "qeq_literals" (formula "3") (term "0,1"))
                                                      (rule "ifthenelse_true_for" (formula "3") (term "1"))
                                                      (rule "mul_literals" (formula "3") (term "1,1,1"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                      (rule "add_literals" (formula "5") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                      (rule "add_literals" (formula "5") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "7"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                      (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                      (rule "applyEqRigid" (formula "65") (term "0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq0" (formula "65"))
                                                      (rule "polySimp_mulLiterals" (formula "65") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "65") (term "0"))
                                                      (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "3"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1") (ifseqformula "3"))
                                                      (rule "polySimp_addComm1" (formula "66") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                      (rule "mul_literals" (formula "4") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                      (rule "mul_literals" (formula "5") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                      (rule "mul_literals" (formula "7") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "65"))
                                                      (rule "polySimp_mulComm0" (formula "65") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "65") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "65") (term "1,1"))
                                                      (rule "mul_literals" (formula "65") (term "0,1"))
                                                      (rule "inEqSimp_subsumption4" (formula "5") (ifseqformula "7"))
                                                      (rule "greater_literals" (formula "5") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "5") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "5") (term "0,0"))
                                                      (rule "qeq_literals" (formula "5") (term "0"))
                                                      (rule "concrete_or_1" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "inEqSimp_subsumption6" (formula "4") (ifseqformula "64"))
                                                      (rule "greater_literals" (formula "4") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "4") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "4") (term "0,0"))
                                                      (rule "qeq_literals" (formula "4") (term "0"))
                                                      (rule "concrete_or_1" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "54"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                      (rule "inEqSimp_subsumption4" (formula "4") (ifseqformula "6"))
                                                      (rule "greater_literals" (formula "4") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "4") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "4") (term "0,0"))
                                                      (rule "qeq_literals" (formula "4") (term "0"))
                                                      (rule "concrete_or_1" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "15"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                      (rule "inEqSimp_subsumption4" (formula "4") (ifseqformula "2"))
                                                      (rule "greater_literals" (formula "4") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "4") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "4") (term "0,0"))
                                                      (rule "qeq_literals" (formula "4") (term "0"))
                                                      (rule "concrete_or_1" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "inEqSimp_exactShadow3" (formula "58") (ifseqformula "5"))
                                                      (rule "times_zero_1" (formula "58") (term "0,0"))
                                                      (rule "add_zero_left" (formula "58") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "58"))
                                                      (rule "mul_literals" (formula "58") (term "1"))
                                                      (rule "elimGcdGeq_antec" (formula "58") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                      (rule "polySimp_mulLiterals" (formula "58") (term "1,0,1,0"))
                                                      (rule "times_zero_1" (formula "58") (term "1,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "58") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "58") (term "0"))
                                                      (rule "polySimp_addLiterals" (formula "58") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "58") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "58") (term "0,0"))
                                                      (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "58") (term "0,0"))
                                                      (rule "leq_literals" (formula "58") (term "0"))
                                                      (rule "concrete_or_2" (formula "58"))
                                                      (rule "inEqSimp_exactShadow3" (formula "64") (ifseqformula "2"))
                                                      (rule "polySimp_rightDist" (formula "64") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "64") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "64") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "64") (term "0,0,0"))
                                                      (rule "add_literals" (formula "64") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,0"))
                                                      (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "64") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "64"))
                                                      (rule "mul_literals" (formula "64") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "64") (ifseqformula "18"))
                                                      (rule "leq_literals" (formula "64") (term "0"))
                                                      (rule "concrete_or_1" (formula "64"))
                                                      (rule "true_left" (formula "64"))
                                                      (rule "inEqSimp_exactShadow3" (formula "64") (ifseqformula "60"))
                                                      (rule "polySimp_rightDist" (formula "64") (term "0,0"))
                                                      (rule "mul_literals" (formula "64") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "64") (term "0"))
                                                      (rule "add_literals" (formula "64") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "64"))
                                                      (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                                      (rule "inEqSimp_contradInEq5" (formula "64") (ifseqformula "58"))
                                                      (rule "times_zero_1" (formula "64") (term "1,1,0"))
                                                      (rule "greater_literals" (formula "64") (term "0,0"))
                                                      (rule "concrete_impl_1" (formula "64") (term "0"))
                                                      (rule "qeq_literals" (formula "64") (term "0"))
                                                      (rule "concrete_and_2" (formula "64"))
                                                      (rule "closeFalse" (formula "64"))
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                                                (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                                                (rule "concrete_or_2" (formula "1") (term "0"))
                                                (rule "concrete_not_2" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "expand_inInt" (formula "44"))
                                                (rule "expand_inInt" (formula "29"))
                                                (rule "expand_inInt" (formula "45"))
                                                (rule "expand_inInt" (formula "15"))
                                                (rule "expand_inInt" (formula "16"))
                                                (rule "expand_inShort" (formula "32"))
                                                (rule "replace_int_MIN" (formula "44") (term "0,1"))
                                                (rule "replace_int_MAX" (formula "44") (term "1,0"))
                                                (rule "replace_int_MAX" (formula "29") (term "1,0"))
                                                (rule "replace_int_MIN" (formula "29") (term "0,1"))
                                                (rule "replace_int_MAX" (formula "45") (term "1,0"))
                                                (rule "replace_int_MIN" (formula "45") (term "0,1"))
                                                (rule "replace_int_MIN" (formula "15") (term "0,1"))
                                                (rule "replace_int_MAX" (formula "15") (term "1,0"))
                                                (rule "replace_int_MIN" (formula "16") (term "0,1"))
                                                (rule "replace_int_MAX" (formula "16") (term "1,0"))
                                                (rule "replace_short_MAX" (formula "32") (term "1,0"))
                                                (rule "replace_short_MIN" (formula "32") (term "0,1"))
                                                (rule "andLeft" (formula "44"))
                                                (rule "andLeft" (formula "29"))
                                                (rule "andLeft" (formula "47"))
                                                (rule "andLeft" (formula "15"))
                                                (rule "andLeft" (formula "17"))
                                                (rule "andLeft" (formula "35"))
                                                (rule "inEqSimp_ltRight" (formula "62"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "48") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "26") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "40"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "45"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "45") (term "0"))
                                                (rule "inEqSimp_gtToGeq" (formula "47") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "53") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "53") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "11") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "11") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "20"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "26") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "50"))
                                                (rule "inEqSimp_commuteLeq" (formula "33"))
                                                (rule "inEqSimp_commuteLeq" (formula "52"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "inEqSimp_commuteLeq" (formula "19"))
                                                (rule "inEqSimp_commuteLeq" (formula "37"))
                                                (rule "applyEq" (formula "36") (term "0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "29"))
                                                (rule "applyEq" (formula "14") (term "0,0,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "45") (term "0,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "37") (term "0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "11") (term "1,0,1,0,1,0,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "57") (term "1") (ifseqformula "29"))
                                                (rule "applyEq" (formula "47") (term "1,0,1,1,0,1") (ifseqformula "29"))
                                                (rule "applyEq" (formula "26") (term "1,0,1,0,1,0,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "38") (term "0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "48") (term "1,0,1,1,0,1,1") (ifseqformula "29"))
                                                (rule "applyEq" (formula "53") (term "0,1,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "26") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "26") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "60") (term "0") (ifseqformula "29"))
                                                (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "29"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "47") (term "1,0,1,1,0,0,1") (ifseqformula "28"))
                                                (rule "applyEq" (formula "11") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "12") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "47") (term "0,1,0,0,0,0,0,0,1") (ifseqformula "24"))
                                                (rule "applyEq" (formula "21") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "26") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "26") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "11") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "26") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "12") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
                                                (rule "jmod_axiom" (formula "45") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,0"))
                                                (rule "jmod_axiom" (formula "34") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "45"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "34"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "47") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "0,0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,1"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "0,0"))
                                                (rule "polySimp_elimOne" (formula "46") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                                (rule "mul_literals" (formula "20") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "47") (term "0,1,0,0,0,1,1"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0,1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "39"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "52") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "52") (term "0,0"))
                                                (rule "polySimp_elimOne" (formula "52") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "36") (term "0"))
                                                (rule "concrete_or_1" (formula "36"))
                                                (rule "true_left" (formula "36"))
                                                (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "20"))
                                                (rule "leq_literals" (formula "18") (term "0"))
                                                (rule "concrete_or_1" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "34"))
                                                (rule "leq_literals" (formula "10") (term "0"))
                                                (rule "concrete_or_1" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "34") (term "0"))
                                                (rule "concrete_or_1" (formula "34"))
                                                (rule "true_left" (formula "34"))
                                                (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "36"))
                                                (rule "leq_literals" (formula "30") (term "0"))
                                                (rule "concrete_or_1" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "38"))
                                                (rule "leq_literals" (formula "44") (term "0"))
                                                (rule "concrete_or_1" (formula "44"))
                                                (rule "true_left" (formula "44"))
                                                (rule "elimGcdLeq" (formula "24") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "sub_literals" (formula "24") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "qeq_literals" (formula "24") (term "1,0,0,1,0,0,1,1,0"))
                                                (rule "concrete_and_3" (formula "24") (term "0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "24") (term "0,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "24") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "leq_literals" (formula "24") (term "0,0,1,0,0,1,1,0"))
                                                (rule "ifthenelse_true_for" (formula "24") (term "0,1,0,0,1,1,0"))
                                                (rule "elimGcdLeq" (formula "24") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                                (rule "sub_literals" (formula "24") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "qeq_literals" (formula "24") (term "1,0,1,1,0,0,0,1,1,0"))
                                                (rule "concrete_and_3" (formula "24") (term "0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "24") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "24") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "leq_literals" (formula "24") (term "0,1,1,0,0,0,1,1,0"))
                                                (rule "ifthenelse_true_for" (formula "24") (term "1,1,0,0,0,1,1,0"))
                                                (rule "elimGcdGeq" (formula "42") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                                (rule "add_zero_right" (formula "42") (term "0,0,0,1,0,1,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,1,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0,1,0,0,1,1"))
                                                (rule "sub_literals" (formula "42") (term "0,0,0,0,0,0,0,1,0,0,1,1"))
                                                (rule "times_zero_1" (formula "42") (term "0,0,0,1,0,1,0,0,1,1"))
                                                (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,0,1,0,0,1,1"))
                                                (rule "add_zero_left" (formula "42") (term "0,0,1,0,1,0,0,1,1"))
                                                (rule "polySimp_addLiterals" (formula "42") (term "0,0,0,0,0,1,0,0,1,1"))
                                                (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,1,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "42") (term "0,1,0,1,0,0,1,1"))
                                                (rule "add_literals" (formula "42") (term "1,0,1,0,1,0,0,1,1"))
                                                (rule "times_zero_1" (formula "42") (term "0,1,0,1,0,0,1,1"))
                                                (rule "leq_literals" (formula "42") (term "1,0,1,0,0,1,1"))
                                                (rule "concrete_and_3" (formula "42") (term "0,1,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,1,0,0,1,1"))
                                                (rule "add_literals" (formula "42") (term "1,1,0,0,1,0,0,1,1"))
                                                (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,1,1"))
                                                (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,1,1"))
                                                (rule "qeq_literals" (formula "42") (term "0,1,0,0,1,1"))
                                                (rule "ifthenelse_true_for" (formula "42") (term "1,0,0,1,1"))
                                                (rule "elimGcdGeq" (formula "24") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "sub_literals" (formula "24") (term "0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "24") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "24") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "leq_literals" (formula "24") (term "1,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "concrete_and_3" (formula "24") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "qeq_literals" (formula "24") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "ifthenelse_true_for" (formula "24") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "elimGcdGeq" (formula "24") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "sub_literals" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "qeq_literals" (formula "24") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "concrete_and_1" (formula "24") (term "0,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "24") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "leq_literals" (formula "24") (term "0,0,0,0,0,0,0,1,1,0"))
                                                (rule "ifthenelse_true_for" (formula "24") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "newSym_eq" (formula "31") (inst "l=l_0") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                                (rule "times_zero_1" (formula "31") (term "1,1"))
                                                (rule "add_zero_right" (formula "31") (term "1"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "31"))
                                                (rule "eqSymm" (formula "32"))
                                                (rule "applyEq" (formula "42") (term "1,1,0,0,1") (ifseqformula "32"))
                                                (rule "applyEq" (formula "29") (term "0") (ifseqformula "32"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                                (rule "applyEq" (formula "36") (term "0") (ifseqformula "32"))
                                                (rule "applyEq" (formula "43") (term "1,1,0,0,0,1") (ifseqformula "32"))
                                                (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "32"))
                                                (rule "inEqSimp_homoInEq1" (formula "43") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "43") (term "0,0"))
                                                (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "32"))
                                                (rule "inEqSimp_homoInEq0" (formula "42") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                                (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "32"))
                                                (rule "applyEq" (formula "30") (term "1") (ifseqformula "32"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                                (rule "mul_literals" (formula "43") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                                (rule "mul_literals" (formula "42") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0"))
                                                (rule "elimGcdGeq_antec" (formula "36") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "36") (term "0,0"))
                                                (rule "concrete_or_2" (formula "36") (term "0"))
                                                (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                                                (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                                                (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "36") (term "0,0"))
                                                (rule "leq_literals" (formula "36") (term "0"))
                                                (rule "concrete_or_2" (formula "36"))
                                                (rule "elimGcdLeq_antec" (formula "29") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,1,0"))
                                                (rule "neg_literal" (formula "29") (term "0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "29") (term "0,0"))
                                                (rule "concrete_or_2" (formula "29") (term "0"))
                                                (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "29") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                                                (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "29") (term "0,0"))
                                                (rule "qeq_literals" (formula "29") (term "0"))
                                                (rule "concrete_or_2" (formula "29"))
                                                (rule "elimGcdGeq" (formula "43") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "43") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                                (rule "sub_literals" (formula "43") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,1,0,1,0,0,0,1"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,1,0,1,0,0,0,1"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,1,0,1,0,0,0,1"))
                                                (rule "add_zero_right" (formula "43") (term "0,1,0,1,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,0,1,0,0,0,1"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,0,0,1,0,0,0,1"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0,0,1,0,0,0,1"))
                                                (rule "add_zero_right" (formula "43") (term "0,0,0,1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "0,0,1,0,1,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "43") (term "0,1,0,1,0,0,0,1"))
                                                (rule "add_literals" (formula "43") (term "1,0,1,0,1,0,0,0,1"))
                                                (rule "times_zero_1" (formula "43") (term "0,1,0,1,0,0,0,1"))
                                                (rule "leq_literals" (formula "43") (term "1,0,1,0,0,0,1"))
                                                (rule "concrete_and_3" (formula "43") (term "0,1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,1,0,0,0,1"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,0,1,0,0,0,1"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0,0,1"))
                                                (rule "add_zero_right" (formula "43") (term "0,0,1,0,0,0,1"))
                                                (rule "qeq_literals" (formula "43") (term "0,1,0,0,0,1"))
                                                (rule "ifthenelse_true_for" (formula "43") (term "1,0,0,0,1"))
                                                (rule "elimGcdGeq" (formula "42") (term "1,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "42") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                                (rule "sub_literals" (formula "42") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,1,0,1,0,0,1"))
                                                (rule "add_literals" (formula "42") (term "1,1,0,1,0,1,0,0,1"))
                                                (rule "times_zero_1" (formula "42") (term "1,0,1,0,1,0,0,1"))
                                                (rule "add_zero_right" (formula "42") (term "0,1,0,1,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "42") (term "1,1,0,0,0,1,0,0,1"))
                                                (rule "times_zero_1" (formula "42") (term "1,0,0,0,1,0,0,1"))
                                                (rule "add_zero_right" (formula "42") (term "0,0,0,1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,0,1,0,0,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "42") (term "0,1,0,1,0,0,1"))
                                                (rule "add_literals" (formula "42") (term "1,0,1,0,1,0,0,1"))
                                                (rule "times_zero_1" (formula "42") (term "0,1,0,1,0,0,1"))
                                                (rule "leq_literals" (formula "42") (term "1,0,1,0,0,1"))
                                                (rule "concrete_and_3" (formula "42") (term "0,1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "42") (term "1,1,0,0,1,0,0,1"))
                                                (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,1"))
                                                (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,1"))
                                                (rule "qeq_literals" (formula "42") (term "0,1,0,0,1"))
                                                (rule "ifthenelse_true_for" (formula "42") (term "1,0,0,1"))
                                                (rule "newSym_eq" (formula "41") (inst "l=l_1") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                                (rule "times_zero_1" (formula "41") (term "1,1"))
                                                (rule "add_zero_right" (formula "41") (term "1"))
                                                (rule "applyEqRigid" (formula "42") (term "0,0") (ifseqformula "41"))
                                                (rule "eqSymm" (formula "42"))
                                                (rule "applyEqRigid" (formula "44") (term "0,0") (ifseqformula "42"))
                                                (rule "inEqSimp_homoInEq0" (formula "44") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "44") (term "0,0"))
                                                (rule "applyEqRigid" (formula "43") (term "0,0") (ifseqformula "42"))
                                                (rule "inEqSimp_homoInEq1" (formula "43") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "43") (term "0,0"))
                                                (rule "applyEqRigid" (formula "43") (term "1,1,0,0,0,1") (ifseqformula "42"))
                                                (rule "applyEqRigid" (formula "45") (term "0") (ifseqformula "42"))
                                                (rule "applyEqRigid" (formula "49") (term "0,1,0") (ifseqformula "42"))
                                                (rule "applyEqRigid" (formula "52") (term "0,2,0") (ifseqformula "42"))
                                                (rule "applyEqRigid" (formula "39") (term "0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "42"))
                                                (rule "applyEqRigid" (formula "44") (term "1,1,0,0,0,1,1") (ifseqformula "42"))
                                                (rule "applyEq" (formula "51") (term "0,2,0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "48") (term "0,1,1,0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "48") (term "0,0,1") (ifseqformula "42"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "44") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "44") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0"))
                                                (rule "mul_literals" (formula "44") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0"))
                                                (rule "mul_literals" (formula "43") (term "0,1,0"))
                                                (rule "elimGcdGeq_antec" (formula "39") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "39") (term "0,0"))
                                                (rule "concrete_or_2" (formula "39") (term "0"))
                                                (rule "add_zero_right" (formula "39") (term "0,0,0,0"))
                                                (rule "times_zero_1" (formula "39") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "39") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                                                (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "39") (term "0,0"))
                                                (rule "leq_literals" (formula "39") (term "0"))
                                                (rule "concrete_or_2" (formula "39"))
                                                (rule "elimGcdLeq_antec" (formula "45") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "neg_literal" (formula "45") (term "0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "45") (term "0,0"))
                                                (rule "concrete_or_2" (formula "45") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                                                (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "45") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "45") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
                                                (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "45") (term "0,0"))
                                                (rule "qeq_literals" (formula "45") (term "0"))
                                                (rule "concrete_or_2" (formula "45"))
                                                (rule "elimGcdLeq" (formula "44") (term "0,0,0,1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "44") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,0,0,0,1,1"))
                                                (rule "sub_literals" (formula "44") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,1,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "44") (term "1,1,0,1,0,0,0,0,1,1"))
                                                (rule "times_zero_1" (formula "44") (term "1,0,1,0,0,0,0,1,1"))
                                                (rule "add_zero_right" (formula "44") (term "0,1,0,0,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "44") (term "1,1,0,0,0,0,0,0,1,1"))
                                                (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,0,1,1"))
                                                (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "44") (term "0,0,1,0,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "44") (term "0,0,0,1,0,0,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "44") (term "0,1,0,0,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "44") (term "0,0,1,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,1,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "44") (term "1,1,0,1,0,0,0,0,1,1"))
                                                (rule "times_zero_1" (formula "44") (term "1,0,1,0,0,0,0,1,1"))
                                                (rule "add_zero_right" (formula "44") (term "0,1,0,0,0,0,1,1"))
                                                (rule "qeq_literals" (formula "44") (term "1,0,0,0,0,1,1"))
                                                (rule "concrete_and_3" (formula "44") (term "0,0,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,0,1,1"))
                                                (rule "add_zero_left" (formula "44") (term "0,0,0,0,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "44") (term "0,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "44") (term "1,0,0,0,0,0,1,1"))
                                                (rule "times_zero_1" (formula "44") (term "0,0,0,0,0,1,1"))
                                                (rule "leq_literals" (formula "44") (term "0,0,0,0,1,1"))
                                                (rule "ifthenelse_true_for" (formula "44") (term "0,0,0,1,1"))
                                                (rule "elimGcdLeq" (formula "43") (term "0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                                (rule "sub_literals" (formula "43") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "43") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,1,0,0,0,0,1"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,1,0,0,0,0,1"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,1,0,0,0,0,1"))
                                                (rule "add_zero_right" (formula "43") (term "0,1,0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,0,0,0,0,0,1"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0,0,1"))
                                                (rule "add_zero_right" (formula "43") (term "0,0,0,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "43") (term "0,0,1,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "43") (term "0,0,0,1,0,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,0,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "43") (term "0,0,1,0,0,0,0,1"))
                                                (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,1,0,0,0,0,1"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,1,0,0,0,0,1"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,1,0,0,0,0,1"))
                                                (rule "add_zero_right" (formula "43") (term "0,1,0,0,0,0,1"))
                                                (rule "qeq_literals" (formula "43") (term "1,0,0,0,0,1"))
                                                (rule "concrete_and_3" (formula "43") (term "0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0,1"))
                                                (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "43") (term "0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "43") (term "1,0,0,0,0,0,1"))
                                                (rule "times_zero_1" (formula "43") (term "0,0,0,0,0,1"))
                                                (rule "leq_literals" (formula "43") (term "0,0,0,0,1"))
                                                (rule "ifthenelse_true_for" (formula "43") (term "0,0,0,1"))
                                                (rule "elimGcdLeq" (formula "43") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "43") (term "0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,0"))
                                                (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "sub_literals" (formula "43") (term "0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "43") (term "0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "43") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "43") (term "0,0,1,0,0"))
                                                (rule "mul_literals" (formula "43") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "43") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "43") (term "0,1,0,0"))
                                                (rule "qeq_literals" (formula "43") (term "1,0,0"))
                                                (rule "concrete_and_3" (formula "43") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "43") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "43") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "43") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "43") (term "0,0,0"))
                                                (rule "add_literals" (formula "43") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "43") (term "0,0,0"))
                                                (rule "leq_literals" (formula "43") (term "0,0"))
                                                (rule "ifthenelse_true_for" (formula "43") (term "0"))
                                                (rule "elimGcdGeq" (formula "44") (term "0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,0"))
                                                (rule "mul_literals" (formula "44") (term "0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "sub_literals" (formula "44") (term "0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "44") (term "1,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "44") (term "1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "44") (term "0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "44") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "44") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "44") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "44") (term "0,0,1,0,0"))
                                                (rule "mul_literals" (formula "44") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "44") (term "0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "44") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "44") (term "1,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "44") (term "1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "44") (term "0,1,0,0"))
                                                (rule "leq_literals" (formula "44") (term "1,0,0"))
                                                (rule "concrete_and_3" (formula "44") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "44") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "44") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "44") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "44") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "44") (term "0,0,0"))
                                                (rule "add_literals" (formula "44") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "44") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "44") (term "0,0"))
                                                (rule "ifthenelse_true_for" (formula "44") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "9") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                (rule "mul_literals" (formula "9") (term "1"))
                                                (rule "inEqSimp_contradEq7" (formula "50") (term "1") (ifseqformula "9"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "50") (term "0,0,1"))
                                                (rule "leq_literals" (formula "50") (term "0,1"))
                                                (rule "concrete_and_2" (formula "50") (term "1"))
                                                (rule "concrete_impl_3" (formula "50"))
                                                (rule "notLeft" (formula "50"))
                                                (rule "inEqSimp_leqRight" (formula "51"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "replace_known_left" (formula "50") (term "0") (ifseqformula "1"))
                                                (rule "concrete_impl_1" (formula "50"))
                                                (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "50"))
                                                (rule "inEqSimp_subsumption1" (formula "49") (ifseqformula "10"))
                                                (rule "leq_literals" (formula "49") (term "0"))
                                                (rule "concrete_or_1" (formula "49"))
                                                (rule "true_left" (formula "49"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_zero_right" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                                             (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                                             (rule "concrete_or_2" (formula "1") (term "0"))
                                             (rule "concrete_not_2" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "expand_inShort" (formula "32"))
                                             (rule "expand_inInt" (formula "44"))
                                             (rule "expand_inInt" (formula "45"))
                                             (rule "expand_inInt" (formula "15"))
                                             (rule "expand_inInt" (formula "16"))
                                             (rule "expand_inInt" (formula "29"))
                                             (rule "replace_short_MAX" (formula "32") (term "1,0"))
                                             (rule "replace_short_MIN" (formula "32") (term "0,1"))
                                             (rule "replace_int_MIN" (formula "44") (term "0,1"))
                                             (rule "replace_int_MAX" (formula "44") (term "1,0"))
                                             (rule "replace_int_MAX" (formula "45") (term "1,0"))
                                             (rule "replace_int_MIN" (formula "45") (term "0,1"))
                                             (rule "replace_int_MAX" (formula "15") (term "1,0"))
                                             (rule "replace_int_MIN" (formula "15") (term "0,1"))
                                             (rule "replace_int_MAX" (formula "16") (term "1,0"))
                                             (rule "replace_int_MIN" (formula "16") (term "0,1"))
                                             (rule "replace_int_MAX" (formula "29") (term "1,0"))
                                             (rule "replace_int_MIN" (formula "29") (term "0,1"))
                                             (rule "andLeft" (formula "32"))
                                             (rule "andLeft" (formula "45"))
                                             (rule "andLeft" (formula "47"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "andLeft" (formula "17"))
                                             (rule "andLeft" (formula "31"))
                                             (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "25") (term "1,0,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "13"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "44"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "44") (term "0"))
                                             (rule "inEqSimp_gtToGeq" (formula "46") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "10") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "19"))
                                             (rule "mul_literals" (formula "19") (term "1,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "39"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "52") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "52") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "25") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "47") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "22"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "36"))
                                             (rule "inEqSimp_commuteLeq" (formula "49"))
                                             (rule "inEqSimp_commuteLeq" (formula "51"))
                                             (rule "inEqSimp_commuteLeq" (formula "16"))
                                             (rule "inEqSimp_commuteLeq" (formula "18"))
                                             (rule "inEqSimp_commuteLeq" (formula "32"))
                                             (rule "applyEq" (formula "25") (term "1,0,1,0,1,0,1,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "10") (term "1,0,1,0,1,0,1,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "28"))
                                             (rule "applyEq" (formula "10") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "22") (term "0,1,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "39") (term "0,1,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "52") (term "0,1,0,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "59") (term "0") (ifseqformula "28"))
                                             (rule "applyEq" (formula "9") (term "0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "44") (term "0,1,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "28"))
                                             (rule "applyEq" (formula "55") (term "1") (ifseqformula "27"))
                                             (rule "applyEq" (formula "46") (term "1,0,1,1,0,0,1") (ifseqformula "27"))
                                             (rule "applyEq" (formula "45") (term "1,0,1,1,0,1") (ifseqformula "27"))
                                             (rule "applyEq" (formula "13") (term "0,0,1,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "25") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "46") (term "1,0,1,1,0,1,1") (ifseqformula "27"))
                                             (rule "applyEq" (formula "34") (term "0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "25") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "25") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "25") (term "0,0,1,0,0,0,0,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "10") (term "0,0,1,0,0,0,0,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "11") (term "0,0,1,0,0,0,0,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "25") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "11") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "46") (term "0,1,0,0,0,0,0,0,1") (ifseqformula "23"))
                                             (rule "applyEq" (formula "20") (term "0,0,1,0,0,0,0,0") (ifseqformula "23"))
                                             (rule "jmod_axiom" (formula "33") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                             (rule "jmod_axiom" (formula "60") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "60") (term "1,0"))
                                             (rule "jmod_axiom" (formula "44") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "33"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                             (rule "polySimp_sepNegMonomial" (formula "60"))
                                             (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                             (rule "polySimp_sepNegMonomial" (formula "44"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "45") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "45") (term "0,1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                             (rule "mul_literals" (formula "19") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "38"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "51") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "51") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "43"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,0,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "39"))
                                             (rule "leq_literals" (formula "31") (term "0"))
                                             (rule "concrete_or_1" (formula "31"))
                                             (rule "true_left" (formula "31"))
                                             (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "34") (term "0"))
                                             (rule "concrete_or_1" (formula "34"))
                                             (rule "true_left" (formula "34"))
                                             (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "40"))
                                             (rule "leq_literals" (formula "46") (term "0"))
                                             (rule "concrete_or_1" (formula "46"))
                                             (rule "true_left" (formula "46"))
                                             (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "33"))
                                             (rule "leq_literals" (formula "9") (term "0"))
                                             (rule "concrete_or_1" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "18"))
                                             (rule "leq_literals" (formula "16") (term "0"))
                                             (rule "concrete_or_1" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "32") (term "0"))
                                             (rule "concrete_or_1" (formula "32"))
                                             (rule "true_left" (formula "32"))
                                             (rule "elimGcdLeq" (formula "23") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "23") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "23") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "23") (term "1,0,1,1,0,0,0,1,1,0"))
                                             (rule "concrete_and_3" (formula "23") (term "0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "23") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "leq_literals" (formula "23") (term "0,1,1,0,0,0,1,1,0"))
                                             (rule "ifthenelse_true_for" (formula "23") (term "1,1,0,0,0,1,1,0"))
                                             (rule "elimGcdLeq" (formula "23") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                             (rule "mul_literals" (formula "23") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                             (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,0,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,1,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "23") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,0,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,1,0,0,1,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "23") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "concrete_and_3" (formula "23") (term "0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "23") (term "0,0,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,0,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "1,0,0,0,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,0,1,1,0"))
                                             (rule "leq_literals" (formula "23") (term "0,0,1,0,0,1,1,0"))
                                             (rule "ifthenelse_true_for" (formula "23") (term "0,1,0,0,1,1,0"))
                                             (rule "elimGcdGeq" (formula "41") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,1,0,0,1,1"))
                                             (rule "add_zero_right" (formula "41") (term "0,0,0,1,0,1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,1,0,0,1,1"))
                                             (rule "add_zero_right" (formula "41") (term "0,0,0,0,0,1,0,0,1,1"))
                                             (rule "times_zero_1" (formula "41") (term "0,0,0,1,0,1,0,0,1,1"))
                                             (rule "sub_literals" (formula "41") (term "0,0,0,0,0,0,1,0,0,1,1"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0,1,0,0,1,1"))
                                             (rule "add_zero_left" (formula "41") (term "0,0,1,0,1,0,0,1,1"))
                                             (rule "add_literals" (formula "41") (term "0,0,0,0,0,1,0,0,1,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "41") (term "0,1,0,1,0,0,1,1"))
                                             (rule "add_literals" (formula "41") (term "1,0,1,0,1,0,0,1,1"))
                                             (rule "times_zero_1" (formula "41") (term "0,1,0,1,0,0,1,1"))
                                             (rule "leq_literals" (formula "41") (term "1,0,1,0,0,1,1"))
                                             (rule "concrete_and_3" (formula "41") (term "0,1,0,0,1,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,1,0,0,1,1"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,0,1,0,0,1,1"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0,1,1"))
                                             (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,1,1"))
                                             (rule "qeq_literals" (formula "41") (term "0,1,0,0,1,1"))
                                             (rule "ifthenelse_true_for" (formula "41") (term "1,0,0,1,1"))
                                             (rule "elimGcdGeq" (formula "23") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "23") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "leq_literals" (formula "23") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "concrete_and_3" (formula "23") (term "0,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "23") (term "0,0,0,0,0,0,0,1,1,0"))
                                             (rule "ifthenelse_true_for" (formula "23") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "elimGcdGeq" (formula "23") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                             (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "23") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "23") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "concrete_and_1" (formula "23") (term "0,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "leq_literals" (formula "23") (term "0,1,1,0,0,0,0,1,1,0"))
                                             (rule "ifthenelse_true_for" (formula "23") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "newSym_eq" (formula "30") (inst "l=l_0") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                             (rule "times_zero_1" (formula "30") (term "1,1"))
                                             (rule "add_zero_right" (formula "30") (term "1"))
                                             (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "30"))
                                             (rule "eqSymm" (formula "31"))
                                             (rule "applyEq" (formula "42") (term "1,1,0,0,0,1") (ifseqformula "31"))
                                             (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "31"))
                                             (rule "inEqSimp_homoInEq1" (formula "42") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                             (rule "applyEq" (formula "35") (term "0") (ifseqformula "31"))
                                             (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "31"))
                                             (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "31"))
                                             (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "31"))
                                             (rule "inEqSimp_homoInEq0" (formula "41") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0,0"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "31"))
                                             (rule "applyEq" (formula "41") (term "1,1,0,0,1") (ifseqformula "31"))
                                             (rule "applyEq" (formula "29") (term "1") (ifseqformula "31"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0"))
                                             (rule "mul_literals" (formula "42") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0"))
                                             (rule "elimGcdLeq_antec" (formula "28") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,1,0"))
                                             (rule "neg_literal" (formula "28") (term "0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "28") (term "0,0"))
                                             (rule "concrete_or_2" (formula "28") (term "0"))
                                             (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "28") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0"))
                                             (rule "qeq_literals" (formula "28") (term "0"))
                                             (rule "concrete_or_2" (formula "28"))
                                             (rule "elimGcdGeq_antec" (formula "35") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "35") (term "0,0"))
                                             (rule "concrete_or_2" (formula "35") (term "0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0"))
                                             (rule "leq_literals" (formula "35") (term "0"))
                                             (rule "concrete_or_2" (formula "35"))
                                             (rule "elimGcdGeq" (formula "42") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "42") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,1,0,0,0,1"))
                                             (rule "sub_literals" (formula "42") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,1,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "42") (term "1,1,0,1,0,1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,1,0,1,0,0,0,1"))
                                             (rule "add_zero_right" (formula "42") (term "0,1,0,1,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "42") (term "1,1,0,0,0,1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,0,0,1,0,0,0,1"))
                                             (rule "add_zero_right" (formula "42") (term "0,0,0,1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,0,1,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "42") (term "0,1,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "42") (term "1,0,1,0,1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "42") (term "0,1,0,1,0,0,0,1"))
                                             (rule "leq_literals" (formula "42") (term "1,0,1,0,0,0,1"))
                                             (rule "concrete_and_3" (formula "42") (term "0,1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "42") (term "1,1,0,0,1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0,1"))
                                             (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0,1"))
                                             (rule "qeq_literals" (formula "42") (term "0,1,0,0,0,1"))
                                             (rule "ifthenelse_true_for" (formula "42") (term "1,0,0,0,1"))
                                             (rule "elimGcdGeq" (formula "41") (term "1,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "41") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                             (rule "sub_literals" (formula "41") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,1,0,1,0,0,1"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,1,0,1,0,0,1"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,1,0,1,0,0,1"))
                                             (rule "add_zero_right" (formula "41") (term "0,1,0,1,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,0,0,1,0,0,1"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0,0,1,0,0,1"))
                                             (rule "add_zero_right" (formula "41") (term "0,0,0,1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0,1,0,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "41") (term "0,1,0,1,0,0,1"))
                                             (rule "add_literals" (formula "41") (term "1,0,1,0,1,0,0,1"))
                                             (rule "times_zero_1" (formula "41") (term "0,1,0,1,0,0,1"))
                                             (rule "leq_literals" (formula "41") (term "1,0,1,0,0,1"))
                                             (rule "concrete_and_3" (formula "41") (term "0,1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,0,1,0,0,1"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0,1"))
                                             (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,1"))
                                             (rule "qeq_literals" (formula "41") (term "0,1,0,0,1"))
                                             (rule "ifthenelse_true_for" (formula "41") (term "1,0,0,1"))
                                             (rule "newSym_eq" (formula "40") (inst "l=l_1") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                             (rule "times_zero_1" (formula "40") (term "1,1"))
                                             (rule "add_zero_right" (formula "40") (term "1"))
                                             (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "40"))
                                             (rule "eqSymm" (formula "41"))
                                             (rule "applyEqRigid" (formula "40") (term "0,0") (ifseqformula "41"))
                                             (rule "applyEq" (formula "44") (term "0") (ifseqformula "41"))
                                             (rule "applyEqRigid" (formula "42") (term "1,1,0,0,0,1") (ifseqformula "41"))
                                             (rule "applyEq" (formula "50") (term "0,2,0") (ifseqformula "41"))
                                             (rule "applyEq" (formula "48") (term "0,1,0") (ifseqformula "41"))
                                             (rule "applyEqRigid" (formula "42") (term "0,0") (ifseqformula "41"))
                                             (rule "inEqSimp_homoInEq1" (formula "42") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                             (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "41"))
                                             (rule "inEqSimp_homoInEq0" (formula "43") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,0"))
                                             (rule "applyEq" (formula "51") (term "0,2,0") (ifseqformula "41"))
                                             (rule "applyEq" (formula "43") (term "1,1,0,0,0,1,1") (ifseqformula "41"))
                                             (rule "applyEq" (formula "38") (term "0") (ifseqformula "41"))
                                             (rule "applyEqRigid" (formula "39") (term "1,1") (ifseqformula "41"))
                                             (rule "applyEqRigid" (formula "47") (term "0,1,1,0") (ifseqformula "41"))
                                             (rule "applyEqRigid" (formula "47") (term "0,0,1") (ifseqformula "41"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0"))
                                             (rule "mul_literals" (formula "42") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0"))
                                             (rule "elimGcdGeq_antec" (formula "38") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                             (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "38") (term "0,0"))
                                             (rule "concrete_or_2" (formula "38") (term "0"))
                                             (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                                             (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "38") (term "0,0"))
                                             (rule "leq_literals" (formula "38") (term "0"))
                                             (rule "concrete_or_2" (formula "38"))
                                             (rule "elimGcdLeq_antec" (formula "44") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0,1,0"))
                                             (rule "neg_literal" (formula "44") (term "0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "44") (term "0,0"))
                                             (rule "concrete_or_2" (formula "44") (term "0"))
                                             (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "44") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "44") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0"))
                                             (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "44") (term "0,0"))
                                             (rule "qeq_literals" (formula "44") (term "0"))
                                             (rule "concrete_or_2" (formula "44"))
                                             (rule "elimGcdLeq" (formula "42") (term "0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                             (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0,0,0,1"))
                                             (rule "sub_literals" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "42") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "42") (term "1,1,0,0,0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,1,0,0,0,0,1"))
                                             (rule "add_literals" (formula "42") (term "1,1,0,1,0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,1,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "42") (term "0,1,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "42") (term "0,0,1,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "42") (term "0,0,0,1,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,0,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "42") (term "0,0,1,0,0,0,0,1"))
                                             (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,1,0,0,0,0,1"))
                                             (rule "add_literals" (formula "42") (term "1,1,0,1,0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,1,0,0,0,0,1"))
                                             (rule "add_literals" (formula "42") (term "0,1,0,0,0,0,1"))
                                             (rule "qeq_literals" (formula "42") (term "1,0,0,0,0,1"))
                                             (rule "concrete_and_3" (formula "42") (term "0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "42") (term "0,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0,1"))
                                             (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "42") (term "0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "42") (term "1,0,0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "42") (term "0,0,0,0,0,1"))
                                             (rule "leq_literals" (formula "42") (term "0,0,0,0,1"))
                                             (rule "ifthenelse_true_for" (formula "42") (term "0,0,0,1"))
                                             (rule "elimGcdLeq" (formula "43") (term "0,0,0,1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "43") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                                             (rule "sub_literals" (formula "43") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,1,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,1,0,0,0,0,1,1"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,1,0,0,0,0,1,1"))
                                             (rule "add_zero_right" (formula "43") (term "0,1,0,0,0,0,1,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0,0,0,0,0,1,1"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0,0,1,1"))
                                             (rule "add_zero_right" (formula "43") (term "0,0,0,0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "43") (term "0,0,1,0,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "43") (term "0,0,0,1,0,0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,0,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,0,1,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0,0,1,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,1,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,1,0,0,0,0,1,1"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,1,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "43") (term "0,1,0,0,0,0,1,1"))
                                             (rule "qeq_literals" (formula "43") (term "1,0,0,0,0,1,1"))
                                             (rule "concrete_and_3" (formula "43") (term "0,0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0,1,1"))
                                             (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,0,1,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "43") (term "0,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "43") (term "1,0,0,0,0,0,1,1"))
                                             (rule "times_zero_1" (formula "43") (term "0,0,0,0,0,1,1"))
                                             (rule "leq_literals" (formula "43") (term "0,0,0,0,1,1"))
                                             (rule "ifthenelse_true_for" (formula "43") (term "0,0,0,1,1"))
                                             (rule "elimGcdGeq" (formula "43") (term "0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,0,0,0,0,1,0,0"))
                                             (rule "sub_literals" (formula "43") (term "0,0,0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,1,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "0,0,1,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,1,0,0"))
                                             (rule "leq_literals" (formula "43") (term "1,0,0"))
                                             (rule "concrete_and_3" (formula "43") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "43") (term "0,0,0"))
                                             (rule "add_literals" (formula "43") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "43") (term "0,0"))
                                             (rule "ifthenelse_true_for" (formula "43") (term "0"))
                                             (rule "elimGcdLeq" (formula "42") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,0"))
                                             (rule "mul_literals" (formula "42") (term "0,0,0,0,0,1,0,0"))
                                             (rule "sub_literals" (formula "42") (term "0,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "42") (term "1,1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,1,0,0"))
                                             (rule "add_zero_right" (formula "42") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "42") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "42") (term "0,0,1,0,0"))
                                             (rule "mul_literals" (formula "42") (term "0,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "42") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "42") (term "1,1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,1,0,0"))
                                             (rule "add_literals" (formula "42") (term "0,1,0,0"))
                                             (rule "qeq_literals" (formula "42") (term "1,0,0"))
                                             (rule "concrete_and_3" (formula "42") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "42") (term "0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "42") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "42") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "42") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "42") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "42") (term "0,0,0"))
                                             (rule "add_literals" (formula "42") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "42") (term "0,0,0"))
                                             (rule "leq_literals" (formula "42") (term "0,0"))
                                             (rule "ifthenelse_true_for" (formula "42") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "32"))
                                             (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                             (rule "mul_literals" (formula "20") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0"))
                                             (rule "add_literals" (formula "20") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "33"))
                                             (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
                                             (rule "mul_literals" (formula "40") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "40") (term "0"))
                                             (rule "add_literals" (formula "40") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "40") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                             (rule "leq_literals" (formula "40") (term "0,0"))
                                             (rule "concrete_or_2" (formula "40") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
                                             (rule "neg_literal" (formula "40") (term "0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "40") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                             (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "40") (term "0,0"))
                                             (rule "qeq_literals" (formula "40") (term "0"))
                                             (rule "concrete_or_2" (formula "40"))
                                             (rule "inEqSimp_subsumption0" (formula "46") (ifseqformula "40"))
                                             (rule "leq_literals" (formula "46") (term "0"))
                                             (rule "concrete_or_1" (formula "46"))
                                             (rule "true_left" (formula "46"))
                                             (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "33"))
                                             (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0"))
                                             (rule "add_literals" (formula "35") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "35") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "35") (term "0,0"))
                                             (rule "concrete_or_2" (formula "35") (term "0"))
                                             (rule "neg_literal" (formula "35") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0"))
                                             (rule "qeq_literals" (formula "35") (term "0"))
                                             (rule "concrete_or_2" (formula "35"))
                                             (rule "inEqSimp_subsumption0" (formula "29") (ifseqformula "35"))
                                             (rule "leq_literals" (formula "29") (term "0"))
                                             (rule "concrete_or_1" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "nnf_imp2or" (formula "18") (term "1,0"))
                                             (rule "nnf_imp2or" (formula "10") (term "1,0,1,0"))
                                             (rule "nnf_imp2or" (formula "9") (term "1,0"))
                                             (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "27"))
                                             (rule "notLeft" (formula "27"))
                                             (rule "nnf_imp2or" (formula "24") (term "0"))
                                             (rule "nnf_imp2or" (formula "44") (term "0,0,1"))
                                             (rule "expand_addJint" (formula "48") (term "1,0"))
                                             (rule "polySimp_addComm0" (formula "48") (term "0,1,0"))
                                             (rule "expand_addJint" (formula "47") (term "1,1,0"))
                                             (rule "polySimp_addComm0" (formula "47") (term "0,1,1,0"))
                                             (rule "expand_addJint" (formula "47") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "47") (term "0,0,1"))
                                             (rule "commute_and" (formula "9") (term "0,0"))
                                             (rule "commute_and" (formula "10") (term "0,0"))
                                             (rule "commute_and" (formula "18") (term "0,0"))
                                             (rule "jdiv_axiom" (formula "7") (term "1,0"))
                                             (rule "eqSymm" (formula "7"))
                                             (rule "inEqSimp_subsumption1" (formula "7") (term "0,0") (ifseqformula "9"))
                                             (rule "leq_literals" (formula "7") (term "0,0,0"))
                                             (rule "concrete_or_1" (formula "7") (term "0,0"))
                                             (rule "ifthenelse_true" (formula "7") (term "0"))
                                             (rule "eqSymm" (formula "7"))
                                             (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "7"))
                                             (rule "applyEqRigid" (formula "11") (term "1,1,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "7"))
                                             (rule "applyEqRigid" (formula "25") (term "1,1,0,0,0,0") (ifseqformula "7"))
                                             (rule "applyEqRigid" (formula "19") (term "1,1,1,0,0") (ifseqformula "7"))
                                             (rule "applyEqRigid" (formula "11") (term "1,1,0,0,0,1,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "10") (term "1,1,1,0,0") (ifseqformula "7"))
                                             (rule "jdiv_axiom" (formula "57") (term "0,0"))
                                             (rule "eqSymm" (formula "1"))
                                             (rule "polyDiv_pullOut" (formula "1") (term "0,2,0") (inst "polyDivCoeff=mul(result_2, Z(neglit(1(#))))"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,2,0"))
                                             (rule "equal_literals" (formula "1") (term "0,0,2,0"))
                                             (rule "ifthenelse_false" (formula "1") (term "0,2,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,2,0"))
                                             (rule "add_literals" (formula "1") (term "1,0,0,0,2,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0,0,0,2,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "2,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "1,2,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "2,0"))
                                             (rule "polySimp_mulAssoc" (formula "1") (term "0,2,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,2,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0,2,0"))
                                             (rule "nnf_imp2or" (formula "45") (term "0,1"))
                                             (rule "nnf_imp2or" (formula "46") (term "0,1,1"))
                                             (rule "expand_moduloInteger" (formula "50") (term "1,0"))
                                             (rule "replace_int_RANGE" (formula "50") (term "1,1,1,0"))
                                             (rule "replace_int_HALFRANGE" (formula "50") (term "0,0,1,1,0"))
                                             (rule "replace_int_MIN" (formula "50") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "50") (term "0,1,1,0"))
                                             (rule "add_literals" (formula "50") (term "0,0,1,1,0"))
                                             (rule "mod_axiom" (formula "50") (term "1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "50") (term "1,0"))
                                             (rule "polySimp_addAssoc" (formula "50") (term "0,1,0"))
                                             (rule "add_literals" (formula "50") (term "0,0,1,0"))
                                             (rule "polyDiv_pullOut" (formula "50") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "mul_literals" (formula "50") (term "0,1,0,0,2,0,1,1,0"))
                                             (rule "equal_literals" (formula "50") (term "0,0,1,1,0"))
                                             (rule "ifthenelse_false" (formula "50") (term "0,1,1,0"))
                                             (rule "mul_literals" (formula "50") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "1,1,0"))
                                             (rule "polySimp_addComm1" (formula "50") (term "0,0,1,1,1,0"))
                                             (rule "add_literals" (formula "50") (term "0,0,0,1,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "50") (term "1,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "50") (term "1,1,0"))
                                             (rule "mul_literals" (formula "50") (term "0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "50") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "50") (term "0,1,0"))
                                             (rule "add_literals" (formula "50") (term "0,0,1,0"))
                                             (rule "expand_moduloInteger" (formula "49") (term "1,1,0"))
                                             (rule "replace_int_MIN" (formula "49") (term "0,1,1,0"))
                                             (rule "replace_int_HALFRANGE" (formula "49") (term "0,0,1,1,1,0"))
                                             (rule "replace_int_RANGE" (formula "49") (term "1,1,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0,1,1,1,0"))
                                             (rule "add_literals" (formula "49") (term "0,0,1,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "1,0"))
                                             (rule "add_literals" (formula "49") (term "0,1,0"))
                                             (rule "mod_axiom" (formula "49") (term "1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "1,0"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0,1,0"))
                                             (rule "add_literals" (formula "49") (term "0,0,1,0"))
                                             (rule "polyDiv_pullOut" (formula "49") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "49") (term "0,0,1,1,0"))
                                             (rule "ifthenelse_false" (formula "49") (term "0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "49") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,1,0"))
                                             (rule "polySimp_addComm1" (formula "49") (term "0,0,1,1,1,0"))
                                             (rule "add_literals" (formula "49") (term "0,0,0,1,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "49") (term "1,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,1,0"))
                                             (rule "mul_literals" (formula "49") (term "0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "49") (term "0,1,0"))
                                             (rule "add_literals" (formula "49") (term "0,0,1,0"))
                                             (rule "expand_moduloInteger" (formula "49") (term "0,1"))
                                             (rule "replace_int_HALFRANGE" (formula "49") (term "0,0,1,0,1"))
                                             (rule "replace_int_RANGE" (formula "49") (term "1,1,0,1"))
                                             (rule "replace_int_MIN" (formula "49") (term "0,0,1"))
                                             (rule "polySimp_homoEq" (formula "49") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,0,1"))
                                             (rule "mul_literals" (formula "49") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,1,0,1"))
                                             (rule "add_literals" (formula "49") (term "0,0,0,1,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "49") (term "0,0,1"))
                                             (rule "mod_axiom" (formula "49") (term "0,1,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,0,1"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,1"))
                                             (rule "polySimp_rightDist" (formula "49") (term "0,1,0,1"))
                                             (rule "mul_literals" (formula "49") (term "0,0,1,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "49") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "49") (term "0,0,0,0,1"))
                                             (rule "polySimp_sepPosMonomial" (formula "49") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,1"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1"))
                                             (rule "polySimp_rightDist" (formula "49") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,1"))
                                             (rule "mul_literals" (formula "49") (term "0,0,1,1"))
                                             (rule "polyDiv_pullOut" (formula "49") (term "0,1,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                             (rule "equal_literals" (formula "49") (term "0,0,1,1,1"))
                                             (rule "ifthenelse_false" (formula "49") (term "0,1,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0,1,1,1"))
                                             (rule "mul_literals" (formula "49") (term "1,0,0,0,1,1,1"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,1,1"))
                                             (rule "polySimp_addComm0" (formula "49") (term "1,1,1,1"))
                                             (rule "polySimp_addComm1" (formula "49") (term "0,1,1,1,1,1"))
                                             (rule "add_literals" (formula "49") (term "0,0,1,1,1,1,1"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,1,1"))
                                             (rule "mul_literals" (formula "49") (term "0,1,1,1"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "1,1"))
                                             (rule "polySimp_addComm1" (formula "49") (term "0,1,1"))
                                             (rule "add_literals" (formula "49") (term "0,0,1,1"))
                                             (rule "nnf_imp2or" (formula "26") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "11") (term "0,1,0"))
                                             (rule "double_not" (formula "11") (term "0,0,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "11") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,1,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,0,1,0"))
                                             (rule "add_zero_left" (formula "11") (term "0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,0"))
                                             (rule "nnf_imp2or" (formula "20") (term "0"))
                                             (rule "nnf_imp2or" (formula "12") (term "0"))
                                             (rule "nnf_imp2or" (formula "11") (term "0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "46") (term "0,0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "46") (term "0,0,0,0,0,0,0,1"))
                                             (rule "add_zero_left" (formula "46") (term "0,0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0,0,1"))
                                             (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                             (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "45") (term "0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "45") (term "0,0,0,0,0,0,1"))
                                             (rule "add_zero_left" (formula "45") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,1"))
                                             (rule "mul_literals" (formula "45") (term "0,1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,1"))
                                             (rule "nnf_notAnd" (formula "46") (term "0,0,1,1"))
                                             (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0,1,1"))
                                             (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0,1,1"))
                                             (rule "add_zero_right" (formula "46") (term "0,0,1,0,0,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,1,1"))
                                             (rule "mul_literals" (formula "46") (term "1,1,0,0,1,1"))
                                             (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "46") (term "0,0,0,0,0,0,1,1"))
                                             (rule "add_zero_left" (formula "46") (term "0,0,0,0,0,1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0,1,1"))
                                             (rule "jdiv_axiom" (formula "31") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0,0,2,1"))
                                             (rule "eqSymm" (formula "31"))
                                             (rule "applyEqRigid" (formula "31") (term "1") (ifseqformula "32"))
                                             (rule "inEqSimp_subsumption6" (formula "31") (term "0,0") (ifseqformula "38"))
                                             (rule "mul_literals" (formula "31") (term "1,1,0,0,0"))
                                             (rule "greater_literals" (formula "31") (term "0,0,0,0"))
                                             (rule "concrete_and_1" (formula "31") (term "0,0,0"))
                                             (rule "leq_literals" (formula "31") (term "0,0,0"))
                                             (rule "concrete_or_1" (formula "31") (term "0,0"))
                                             (rule "ifthenelse_true" (formula "31") (term "0"))
                                             (rule "polyDiv_pullOut" (formula "31") (term "0") (inst "polyDivCoeff=l_0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,2,0"))
                                             (rule "equal_literals" (formula "31") (term "0,0"))
                                             (rule "ifthenelse_false" (formula "31") (term "0"))
                                             (rule "polySimp_homoEq" (formula "31"))
                                             (rule "polySimp_pullOutFactor0" (formula "31") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "31") (term "1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "31") (term "0,0,0,1,0"))
                                             (rule "div_literals" (formula "31") (term "0,0,1,0"))
                                             (rule "add_zero_left" (formula "31") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                             (rule "add_literals" (formula "31") (term "1,0"))
                                             (rule "times_zero_1" (formula "31") (term "0"))
                                             (rule "eqClose" (formula "31"))
                                             (rule "true_left" (formula "31"))
                                             (rule "nnf_imp2or" (formula "11") (term "0"))
                                             (rule "nnf_notAnd" (formula "26") (term "0,1,0"))
                                             (rule "double_not" (formula "26") (term "0,0,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "26") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,1,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,1,0,1,0"))
                                             (rule "add_zero_left" (formula "26") (term "0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0"))
                                             (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                             (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "26") (term "0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "12") (term "0,1,0"))
                                             (rule "jdiv_axiom" (formula "43") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "0,0,2,1"))
                                             (rule "eqSymm" (formula "43"))
                                             (rule "applyEqRigid" (formula "43") (term "1") (ifseqformula "44"))
                                             (rule "inEqSimp_subsumption6" (formula "43") (term "0,0") (ifseqformula "40"))
                                             (rule "greater_literals" (formula "43") (term "0,0,0,0"))
                                             (rule "concrete_and_1" (formula "43") (term "0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "1,0,0,0"))
                                             (rule "leq_literals" (formula "43") (term "0,0,0"))
                                             (rule "concrete_or_1" (formula "43") (term "0,0"))
                                             (rule "ifthenelse_true" (formula "43") (term "0"))
                                             (rule "polyDiv_pullOut" (formula "43") (term "0") (inst "polyDivCoeff=l_1"))
                                             (rule "equal_literals" (formula "43") (term "0,0"))
                                             (rule "ifthenelse_false" (formula "43") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                                             (rule "polySimp_homoEq" (formula "43"))
                                             (rule "polySimp_pullOutFactor0" (formula "43") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "43") (term "1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "43") (term "0,0,0,1,0"))
                                             (rule "div_literals" (formula "43") (term "0,0,1,0"))
                                             (rule "add_zero_left" (formula "43") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
                                             (rule "add_literals" (formula "43") (term "1,0"))
                                             (rule "times_zero_1" (formula "43") (term "0"))
                                             (rule "eqClose" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "27") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "5"))
                                             (rule "insert_constant_value" (formula "27") (term "1,1,0,0,0,0,0,0,0"))
                                             (rule "insert_constant_value" (formula "27") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                             (rule "insert_constant_value" (formula "27") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                             (rule "eqClose" (formula "27") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                             (rule "concrete_and_3" (formula "27") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                             (rule "insert_constant_value" (formula "27") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                             (rule "insert_constant_value" (formula "27") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                             (rule "eqClose" (formula "27") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                             (rule "concrete_and_3" (formula "27") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                             (rule "insert_constant_value" (formula "27") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                             (rule "eqClose" (formula "27") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                             (rule "concrete_and_3" (formula "27") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                             (rule "expand_inInt" (formula "27") (term "1,1"))
                                             (rule "expand_inInt" (formula "27") (term "0,1"))
                                             (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                             (rule "replace_int_MIN" (formula "27") (term "0,1,1,1"))
                                             (rule "replace_int_MAX" (formula "27") (term "1,0,1,1"))
                                             (rule "replace_int_MIN" (formula "27") (term "0,1,0,1"))
                                             (rule "replace_int_MAX" (formula "27") (term "1,0,0,1"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "andLeft" (formula "28"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "andLeft" (formula "29"))
                                             (rule "andLeft" (formula "28"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "notLeft" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "notLeft" (formula "27"))
                                             (rule "exLeft" (formula "34") (inst "sk=i_1_2"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "exLeft" (formula "33") (inst "sk=i_2_0"))
                                             (rule "andLeft" (formula "33"))
                                             (rule "andLeft" (formula "33"))
                                             (rule "eqSymm" (formula "32"))
                                             (rule "eqSymm" (formula "30") (term "1,0,1,0,1,0"))
                                             (rule "eqSymm" (formula "30") (term "1,1,0,1,0"))
                                             (rule "eqSymm" (formula "35"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,1,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,0,1,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,1,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,1,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "0,2,0,0,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "0,2,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "0,2,0,0,0,2,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "0,2,0,1,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "0,2,1,1,0,1,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "29") (term "0,2,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "31"))
                                             (rule "mul_literals" (formula "31") (term "1,0,0"))
                                             (rule "add_literals" (formula "31") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "37"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "37") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0"))
                                             (rule "ifthenelse_negated" (formula "32") (term "2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "40") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "40") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "40") (term "1,0,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "39") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "43"))
                                             (rule "inEqSimp_commuteLeq" (formula "41"))
                                             (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "28"))
                                             (rule "inEqSimp_commuteLeq" (formula "27"))
                                             (rule "inEqSimp_commuteLeq" (formula "36"))
                                             (rule "inEqSimp_commuteLeq" (formula "33"))
                                             (rule "inEqSimp_commuteLeq" (formula "40") (term "0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,1,0"))
                                             (rule "applyEq" (formula "40") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "24"))
                                             (rule "applyEq" (formula "39") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "24"))
                                             (rule "applyEq" (formula "39") (term "1,0,1,0,1,0,1,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "24") (term "0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "27") (term "0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "40") (term "1,0,1,0,1,0,1,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "37") (term "0,0,1,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "40") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "29") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "40") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "39") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "24"))
                                             (rule "applyEqRigid" (formula "39") (term "1,0,1,0,1,0,1,0") (ifseqformula "24"))
                                             (rule "applyEq" (formula "35") (term "1") (ifseqformula "24"))
                                             (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "24"))
                                             (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "24"))
                                             (rule "applyEqRigid" (formula "36") (term "0,0,1,0") (ifseqformula "24"))
                                             (rule "applyEq" (formula "39") (term "1,0,1,0,1,0,1,0") (ifseqformula "24"))
                                             (rule "applyEqRigid" (formula "33") (term "0,1,0") (ifseqformula "24"))
                                             (rule "applyEqRigid" (formula "31") (term "1,0") (ifseqformula "8"))
                                             (rule "applyEqRigid" (formula "35") (term "0,1,0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "38") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "24"))
                                             (rule "applyEqRigid" (formula "29") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "24"))
                                             (rule "applyEqRigid" (formula "28") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
                                             (rule "applyEq" (formula "38") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
                                             (rule "applyEq" (formula "29") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
                                             (rule "applyEq" (formula "37") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
                                             (rule "applyEq" (formula "37") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                             (rule "applyEqRigid" (formula "29") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "8"))
                                             (rule "applyEqRigid" (formula "28") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "38") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                             (rule "mul_literals" (formula "30") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                             (rule "polySimp_elimOne" (formula "34") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_subsumption0" (formula "38") (ifseqformula "19"))
                                             (rule "leq_literals" (formula "38") (term "0"))
                                             (rule "concrete_or_1" (formula "38"))
                                             (rule "true_left" (formula "38"))
                                             (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "43"))
                                             (rule "leq_literals" (formula "27") (term "0"))
                                             (rule "concrete_or_1" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "elimGcdLeq" (formula "36") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "36") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "sub_literals" (formula "36") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,1,0,1,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,1,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,1,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "36") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "0,1,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "36") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,1,0,1,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,1,0,1,1,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "36") (term "1,0,1,1,0,0,1,1,0"))
                                             (rule "concrete_and_3" (formula "36") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "36") (term "0,0,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "36") (term "0,0,1,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "36") (term "1,0,0,1,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "36") (term "0,0,1,1,0,0,1,1,0"))
                                             (rule "leq_literals" (formula "36") (term "0,1,1,0,0,1,1,0"))
                                             (rule "ifthenelse_true_for" (formula "36") (term "1,1,0,0,1,1,0"))
                                             (rule "elimGcdGeq" (formula "36") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "36") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,0,1,0,0,1,1,0"))
                                             (rule "sub_literals" (formula "36") (term "0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "36") (term "0,1,0,0,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "36") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "36") (term "0,1,0,0,1,0,0,1,1,0"))
                                             (rule "leq_literals" (formula "36") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "concrete_and_3" (formula "36") (term "0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,0,0,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0,0,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "36") (term "0,0,1,0,0,1,1,0"))
                                             (rule "ifthenelse_true_for" (formula "36") (term "0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "42"))
                                             (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0"))
                                             (rule "add_literals" (formula "30") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0"))
                                             (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "11") (term "0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "12") (term "0,0,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0"))
                                             (rule "nnf_notAnd" (formula "26") (term "0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "12") (term "0,1,0,1,0"))
                                             (rule "double_not" (formula "12") (term "0,0,1,0,1,0"))
                                             (rule "nnf_imp2or" (formula "27") (term "1,0"))
                                             (rule "nnf_imp2or" (formula "28") (term "1,0,1,0"))
                                             (rule "commute_or" (formula "26") (term "0,0"))
                                             (rule "cut_direct" (formula "56") (term "0"))
                                             (branch "CUT: l_0 >= 1 + l_1 TRUE"
                                                (rule "concrete_impl_1" (formula "57"))
                                                (rule "andLeft" (formula "57"))
                                                (rule "inEqSimp_contradInEq1" (formula "55") (term "0") (ifseqformula "56"))
                                                (rule "inEqSimp_homoInEq1" (formula "55") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "55") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "55") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "55") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,0"))
                                                (rule "add_literals" (formula "55") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "55") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "55") (term "0,0,0"))
                                                (rule "leq_literals" (formula "55") (term "0,0"))
                                                (rule "concrete_and_2" (formula "55") (term "0"))
                                                (rule "concrete_impl_2" (formula "55"))
                                                (rule "true_left" (formula "55"))
                                                (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "45"))
                                                (rule "polySimp_rightDist" (formula "55") (term "0,0"))
                                                (rule "mul_literals" (formula "55") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                (rule "add_literals" (formula "55") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "55"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                                (rule "polySimp_elimOne" (formula "55") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "51") (ifseqformula "55"))
                                                (rule "leq_literals" (formula "51") (term "0"))
                                                (rule "concrete_or_1" (formula "51"))
                                                (rule "true_left" (formula "51"))
                                                (rule "nnf_imp2or" (formula "36") (term "1,0"))
                                                (rule "div_axiom" (formula "8") (term "1") (inst "quotient=quotient_0"))
                                                (rule "equal_literals" (formula "8") (term "0"))
                                                (rule "concrete_or_2" (formula "8"))
                                                (rule "mul_literals" (formula "8") (term "1,1,1,1"))
                                                (rule "qeq_literals" (formula "8") (term "0,1"))
                                                (rule "ifthenelse_true_for" (formula "8") (term "1"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "polySimp_addComm1" (formula "10") (term "1"))
                                                (rule "add_literals" (formula "10") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "9"))
                                                (rule "inEqSimp_homoInEq1" (formula "10"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                (rule "applyEq" (formula "40") (term "1,1,1,0,0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "39") (term "1,1,1,0,0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "15") (term "1,0,0,0,1,0") (ifseqformula "8"))
                                                (rule "applyEqRigid" (formula "31") (term "1,1,1,0,0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "31") (term "1,1,1,0,0,1,0") (ifseqformula "8"))
                                                (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "17"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                (rule "applyEq" (formula "29") (term "1,1,0,0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "30") (term "1,1,1,0,0") (ifseqformula "8"))
                                                (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "37"))
                                                (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                (rule "applyEqRigid" (formula "23") (term "1,1,0,0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "15") (term "1,1,0,0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "11") (term "1") (ifseqformula "8"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                (rule "mul_literals" (formula "10") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                (rule "mul_literals" (formula "17") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "37"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1"))
                                                (rule "mul_literals" (formula "37") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "17"))
                                                (rule "times_zero_1" (formula "16") (term "0,0"))
                                                (rule "add_zero_left" (formula "16") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                (rule "mul_literals" (formula "16") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "10"))
                                                (rule "polySimp_rightDist" (formula "55") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0"))
                                                (rule "mul_literals" (formula "55") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "55") (term "0,0"))
                                                (rule "add_literals" (formula "55") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "55") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "55"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "55") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "leq_literals" (formula "55") (term "0,0"))
                                                (rule "concrete_or_2" (formula "55") (term "0"))
                                                (rule "neg_literal" (formula "55") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0"))
                                                (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "55") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0"))
                                                (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "55") (term "0,0"))
                                                (rule "qeq_literals" (formula "55") (term "0"))
                                                (rule "concrete_or_2" (formula "55"))
                                                (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "38"))
                                                (rule "times_zero_1" (formula "37") (term "0,0"))
                                                (rule "add_zero_left" (formula "37") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                                (rule "mul_literals" (formula "37") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "10"))
                                                (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                                (rule "mul_literals" (formula "35") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                                (rule "add_literals" (formula "35") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "35") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "10"))
                                                (rule "mul_literals" (formula "13") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                (rule "add_literals" (formula "13") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                (rule "mul_literals" (formula "13") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "13") (term "0,0"))
                                                (rule "concrete_or_2" (formula "13") (term "0"))
                                                (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "13") (term "0,0"))
                                                (rule "leq_literals" (formula "13") (term "0"))
                                                (rule "concrete_or_2" (formula "13"))
                                                (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "13"))
                                                (rule "leq_literals" (formula "17") (term "0"))
                                                (rule "concrete_or_1" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "10"))
                                                (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                (rule "add_literals" (formula "27") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "27") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "49"))
                                                (rule "polySimp_mulAssoc" (formula "9") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "9") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "9") (term "0,0"))
                                                (rule "concrete_or_2" (formula "9") (term "0"))
                                                (rule "neg_literal" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "9") (term "0,0"))
                                                (rule "qeq_literals" (formula "9") (term "0"))
                                                (rule "concrete_or_2" (formula "9"))
                                                (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "11"))
                                                (rule "polySimp_rightDist" (formula "53") (term "0,0"))
                                                (rule "mul_literals" (formula "53") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "53") (term "0,0"))
                                                (rule "add_literals" (formula "53") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "53") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                                (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "53") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "53") (term "0,0"))
                                                (rule "concrete_or_2" (formula "53") (term "0"))
                                                (rule "neg_literal" (formula "53") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "53") (term "0,0"))
                                                (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "53") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "53") (term "0,0"))
                                                (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "53") (term "0,0"))
                                                (rule "qeq_literals" (formula "53") (term "0"))
                                                (rule "concrete_or_2" (formula "53"))
                                                (rule "inEqSimp_exactShadow3" (formula "58") (ifseqformula "59"))
                                                (rule "times_zero_1" (formula "58") (term "0,0"))
                                                (rule "add_zero_left" (formula "58") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "58") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "58") (term "0"))
                                                (rule "concrete_or_1" (formula "58"))
                                                (rule "true_left" (formula "58"))
                                                (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "28"))
                                                (rule "mul_literals" (formula "26") (term "0,0"))
                                                (rule "add_zero_left" (formula "26") (term "0"))
                                                (rule "inEqSimp_subsumption6" (formula "26") (ifseqformula "14"))
                                                (rule "greater_literals" (formula "26") (term "0,0"))
                                                (rule "concrete_and_1" (formula "26") (term "0"))
                                                (rule "mul_literals" (formula "26") (term "1,0"))
                                                (rule "leq_literals" (formula "26") (term "0"))
                                                (rule "concrete_or_1" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "inEqSimp_exactShadow3" (formula "64") (ifseqformula "53"))
                                                (rule "polySimp_rightDist" (formula "64") (term "0,0"))
                                                (rule "mul_literals" (formula "64") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "64") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "64"))
                                                (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                                (rule "polySimp_elimOne" (formula "64") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "59") (ifseqformula "64"))
                                                (rule "inEqSimp_homoInEq0" (formula "59") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "59") (term "1,0,0"))
                                                (rule "mul_literals" (formula "59") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "59") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "59") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0"))
                                                (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "59") (term "0,0"))
                                                (rule "qeq_literals" (formula "59") (term "0"))
                                                (rule "concrete_or_1" (formula "59"))
                                                (rule "true_left" (formula "59"))
                                                (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "53"))
                                                (rule "times_zero_1" (formula "55") (term "0,0"))
                                                (rule "add_zero_left" (formula "55") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "55") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "55") (term "0"))
                                                (rule "concrete_or_1" (formula "55"))
                                                (rule "true_left" (formula "55"))
                                                (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "37"))
                                                (rule "times_zero_1" (formula "35") (term "0,0"))
                                                (rule "add_zero_left" (formula "35") (term "0"))
                                                (rule "inEqSimp_subsumption6" (formula "35") (ifseqformula "14"))
                                                (rule "greater_literals" (formula "35") (term "0,0"))
                                                (rule "concrete_and_1" (formula "35") (term "0"))
                                                (rule "mul_literals" (formula "35") (term "1,0"))
                                                (rule "leq_literals" (formula "35") (term "0"))
                                                (rule "concrete_or_1" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "inEqSimp_exactShadow3" (formula "58") (ifseqformula "63"))
                                                (rule "times_zero_1" (formula "58") (term "0,0"))
                                                (rule "add_zero_left" (formula "58") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "58"))
                                                (rule "mul_literals" (formula "58") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "58") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "58") (term "0"))
                                                (rule "concrete_or_1" (formula "58"))
                                                (rule "true_left" (formula "58"))
                                                (rule "div_axiom" (formula "1") (term "1,0") (inst "quotient=quotient_1"))
                                                (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                                                (rule "equal_literals" (formula "1") (term "0"))
                                                (rule "concrete_or_2" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                (rule "add_literals" (formula "3") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "4") (term "0,1,2,0") (ifseqformula "1"))
                                                (rule "polySimp_addComm0" (formula "4") (term "2,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "70"))
                                                (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "leq_literals" (formula "2") (term "0,0"))
                                                (rule "concrete_or_2" (formula "2") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                (rule "concrete_or_2" (formula "2"))
                                                (rule "inEqSimp_exactShadow3" (formula "72") (ifseqformula "4"))
                                                (rule "mul_literals" (formula "72") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "72") (term "0"))
                                                (rule "add_literals" (formula "72") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "72"))
                                                (rule "mul_literals" (formula "72") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "72") (inst "elimGcdRightDiv=Z(neglit(4(2(8(1(4(7(3(7(0(1(#))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "leq_literals" (formula "72") (term "0,0"))
                                                (rule "concrete_or_2" (formula "72") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "72") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "72") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "72") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "72") (term "0,0"))
                                                (rule "add_literals" (formula "72") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "72") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "72") (term "0,0"))
                                                (rule "leq_literals" (formula "72") (term "0"))
                                                (rule "concrete_or_2" (formula "72"))
                                                (rule "div_axiom" (formula "75") (term "0,1,1,0") (inst "quotient=quotient_2"))
                                                (rule "mul_literals" (formula "75") (term "1,1,1,1,1"))
                                                (rule "qeq_literals" (formula "75") (term "0,1,1"))
                                                (rule "ifthenelse_true_for" (formula "75") (term "1,1"))
                                                (rule "equal_literals" (formula "75") (term "0"))
                                                (rule "concrete_or_2" (formula "75"))
                                                (rule "andLeft" (formula "75"))
                                                (rule "andLeft" (formula "75"))
                                                (rule "polySimp_addAssoc" (formula "77") (term "0,1"))
                                                (rule "add_literals" (formula "77") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "77") (term "1"))
                                                (rule "add_literals" (formula "77") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "76"))
                                                (rule "polySimp_mulLiterals" (formula "76") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "76") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "77"))
                                                (rule "polySimp_mulLiterals" (formula "77") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "77") (term "0"))
                                                (rule "applyEqRigid" (formula "74") (term "0,1,1,0") (ifseqformula "75"))
                                                (rule "polySimp_addComm1" (formula "74") (term "1,0"))
                                                (rule "applyEq" (formula "78") (term "0,1,1,0") (ifseqformula "75"))
                                                (rule "polySimp_addComm1" (formula "78") (term "1,0"))
                                                (rule "applyEq" (formula "74") (term "0,1,1,1") (ifseqformula "75"))
                                                (rule "polySimp_addComm1" (formula "74") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "76"))
                                                (rule "polySimp_mulComm0" (formula "76") (term "1"))
                                                (rule "polySimp_rightDist" (formula "76") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "76") (term "1,1"))
                                                (rule "mul_literals" (formula "76") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "77"))
                                                (rule "polySimp_mulComm0" (formula "77") (term "1"))
                                                (rule "polySimp_rightDist" (formula "77") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "77") (term "1,1"))
                                                (rule "mul_literals" (formula "77") (term "0,1"))
                                                (rule "elimGcdLeq_antec" (formula "77") (inst "elimGcdRightDiv=add(Z(0(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_2, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "77") (term "0,1,0,0,0,0,1,0"))
                                                (rule "neg_literal" (formula "77") (term "0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "77") (term "0,0"))
                                                (rule "concrete_or_2" (formula "77") (term "0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,0"))
                                                (rule "add_literals" (formula "77") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "77") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "77") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "77") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "77") (term "0,0,0"))
                                                (rule "add_literals" (formula "77") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "77") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "77") (term "0,0,0"))
                                                (rule "add_literals" (formula "77") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,0"))
                                                (rule "add_literals" (formula "77") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "77") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "77") (term "0,0"))
                                                (rule "qeq_literals" (formula "77") (term "0"))
                                                (rule "concrete_or_2" (formula "77"))
                                                (rule "elimGcdGeq_antec" (formula "76") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_2, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "76") (term "0,1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "76") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "76") (term "0,0"))
                                                (rule "concrete_or_2" (formula "76") (term "0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "76") (term "0,0"))
                                                (rule "add_literals" (formula "76") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "76") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "76") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "76") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "76") (term "0,0,0"))
                                                (rule "add_literals" (formula "76") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "76") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "76") (term "0,0,0"))
                                                (rule "add_literals" (formula "76") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "76") (term "0,0"))
                                                (rule "add_literals" (formula "76") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "76") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "76") (term "0,0"))
                                                (rule "leq_literals" (formula "76") (term "0"))
                                                (rule "concrete_or_2" (formula "76"))
                                                (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "77"))
                                                (rule "times_zero_1" (formula "62") (term "0,0"))
                                                (rule "add_zero_left" (formula "62") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "62"))
                                                (rule "mul_literals" (formula "62") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "62") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                (rule "polySimp_mulLiterals" (formula "62") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "62") (term "0,0"))
                                                (rule "concrete_or_2" (formula "62") (term "0"))
                                                (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "62") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "62") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "62") (term "0,0"))
                                                (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "62") (term "0,0"))
                                                (rule "leq_literals" (formula "62") (term "0"))
                                                (rule "concrete_or_2" (formula "62"))
                                                (rule "inEqSimp_exactShadow3" (formula "77") (ifseqformula "67"))
                                                (rule "polySimp_rightDist" (formula "77") (term "0,0"))
                                                (rule "mul_literals" (formula "77") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "77") (term "0"))
                                                (rule "add_literals" (formula "77") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "77"))
                                                (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "77") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,0,0,1,0"))
                                                (rule "neg_literal" (formula "77") (term "0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "77") (term "0,0"))
                                                (rule "concrete_or_2" (formula "77") (term "0"))
                                                (rule "mul_literals" (formula "77") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "77") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "77") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,0"))
                                                (rule "add_literals" (formula "77") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "77") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "77") (term "0,0"))
                                                (rule "qeq_literals" (formula "77") (term "0"))
                                                (rule "concrete_or_2" (formula "77"))
                                                (rule "inEqSimp_exactShadow3" (formula "78") (ifseqformula "68"))
                                                (rule "polySimp_rightDist" (formula "78") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "78") (term "1,0,0"))
                                                (rule "mul_literals" (formula "78") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "78") (term "0"))
                                                (rule "polySimp_addComm1" (formula "78") (term "0,0"))
                                                (rule "add_literals" (formula "78") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "78"))
                                                (rule "polySimp_mulComm0" (formula "78") (term "1"))
                                                (rule "polySimp_rightDist" (formula "78") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "78") (term "1,1"))
                                                (rule "mul_literals" (formula "78") (term "0,1"))
                                                (rule "inEqSimp_antiSymm" (formula "62") (ifseqformula "77"))
                                                (rule "applyEqRigid" (formula "80") (term "0,1,1") (ifseqformula "62"))
                                                (rule "mul_literals" (formula "80") (term "1,1"))
                                                (rule "add_literals" (formula "80") (term "1"))
                                                (rule "applyEq" (formula "81") (term "0,1,1") (ifseqformula "62"))
                                                (rule "mul_literals" (formula "81") (term "1,1"))
                                                (rule "add_literals" (formula "81") (term "1"))
                                                (rule "applyEq" (formula "78") (term "0") (ifseqformula "62"))
                                                (rule "leq_literals" (formula "78"))
                                                (rule "true_left" (formula "78"))
                                                (rule "applyEq" (formula "78") (term "0,1,1") (ifseqformula "62"))
                                                (rule "mul_literals" (formula "78") (term "1,1"))
                                                (rule "add_literals" (formula "78") (term "1"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "62"))
                                                (rule "qeq_literals" (formula "63"))
                                                (rule "true_left" (formula "63"))
                                                (rule "applyEq" (formula "75") (term "0,1,0,1,0") (ifseqformula "62"))
                                                (rule "mul_literals" (formula "75") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "75") (term "0,1,0"))
                                                (rule "applyEq" (formula "80") (term "0,1,0,1,0") (ifseqformula "62"))
                                                (rule "mul_literals" (formula "80") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "80") (term "0,1,0"))
                                                (rule "applyEqRigid" (formula "76") (term "1") (ifseqformula "62"))
                                                (rule "applyEqRigid" (formula "75") (term "0,1,0,1,1") (ifseqformula "62"))
                                                (rule "mul_literals" (formula "75") (term "1,0,1,1"))
                                                (rule "add_literals" (formula "75") (term "0,1,1"))
                                                (rule "inEqSimp_subsumption0" (formula "79") (ifseqformula "67"))
                                                (rule "leq_literals" (formula "79") (term "0"))
                                                (rule "concrete_or_1" (formula "79"))
                                                (rule "true_left" (formula "79"))
                                                (rule "inEqSimp_subsumption1" (formula "78") (ifseqformula "63"))
                                                (rule "leq_literals" (formula "78") (term "0"))
                                                (rule "concrete_or_1" (formula "78"))
                                                (rule "true_left" (formula "78"))
                                                (rule "inEqSimp_subsumption1" (formula "77") (ifseqformula "18"))
                                                (rule "leq_literals" (formula "77") (term "0"))
                                                (rule "concrete_or_1" (formula "77"))
                                                (rule "true_left" (formula "77"))
                                                (rule "nnf_imp2or" (formula "48") (term "1,0"))
                                                (rule "nnf_notAnd" (formula "38") (term "0,1,0,1,0"))
                                                (rule "double_not" (formula "38") (term "0,0,1,0,1,0"))
                                                (rule "nnf_notOr" (formula "36") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "36") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "36") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "36") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1,1,1,1,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "36") (term "0,0,0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "47") (term "0"))
                                                (rule "nnf_imp2or" (formula "37") (term "0"))
                                                (rule "commute_or" (formula "71") (term "0,0"))
                                                (rule "commute_or" (formula "70") (term "0,0"))
                                                (rule "commute_or_2" (formula "20") (term "0,1,1,0"))
                                                (rule "commute_or_2" (formula "29") (term "0"))
                                                (rule "shift_paren_or" (formula "21") (term "0,1,0"))
                                                (rule "commute_and" (formula "38") (term "0,0,1,0"))
                                                (rule "nnf_imp2or" (formula "48") (term "0"))
                                                (rule "nnf_imp2or" (formula "38") (term "0"))
                                                (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "47") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "47") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                                (rule "mul_literals" (formula "47") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "48") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                (rule "mul_literals" (formula "48") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "48") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "47") (term "0,1,0"))
                                                (rule "double_not" (formula "47") (term "0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "47") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "47") (term "0,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "47") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,1,0"))
                                                (rule "nnf_notAnd" (formula "48") (term "0,1,0"))
                                                (rule "double_not" (formula "48") (term "0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "48") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,0"))
                                                (rule "nnf_imp2or" (formula "38") (term "0,1,0"))
                                                (rule "nnf_imp2or" (formula "47") (term "0,1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "0") (ifseqformula "7"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "80"))
                                                (rule "concrete_or_2" (formula "1"))
                                                (rule "nnf_imp2or" (formula "49") (term "0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "37") (term "0,0,0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "37") (term "1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "37") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "37") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "39") (term "0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0"))
                                                (rule "nnf_notAnd" (formula "48") (term "0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "49") (term "0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "37") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "37") (term "1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "37") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "37") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "49") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "49") (term "0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "49") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "49") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "1,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "49") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,0,1,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "49") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "49") (term "0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "49") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                                (rule "ifthenelse_split" (formula "6") (term "0"))
                                                (branch "result_2 >= 0 TRUE"
                                                   (rule "eqSymm" (formula "7"))
                                                   (rule "applyEq" (formula "87") (term "0,0") (ifseqformula "7"))
                                                   (rule "eqSymm" (formula "87"))
                                                   (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "87"))
                                                   (rule "inEqSimp_contradEq7" (formula "87") (ifseqformula "4"))
                                                   (rule "polySimp_mulAssoc" (formula "87") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "87") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "87") (term "0,0"))
                                                   (rule "add_literals" (formula "87") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "87") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "87") (term "0,0"))
                                                   (rule "leq_literals" (formula "87") (term "0"))
                                                   (rule "concrete_and_2" (formula "87"))
                                                   (rule "false_right" (formula "87"))
                                                   (rule "inEqSimp_subsumption1" (formula "76") (ifseqformula "6"))
                                                   (rule "leq_literals" (formula "76") (term "0"))
                                                   (rule "concrete_or_1" (formula "76"))
                                                   (rule "true_left" (formula "76"))
                                                   (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "75") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq0" (formula "75"))
                                                   (rule "polySimp_mulComm0" (formula "75") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "75") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "75") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "75") (term "0"))
                                                   (rule "add_literals" (formula "75") (term "0,0"))
                                                   (rule "applyEq" (formula "7") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq0" (formula "6"))
                                                   (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                                   (rule "add_literals" (formula "6") (term "1,0"))
                                                   (rule "times_zero_1" (formula "6") (term "0"))
                                                   (rule "qeq_literals" (formula "6"))
                                                   (rule "true_left" (formula "6"))
                                                   (rule "applyEq" (formula "78") (term "0,1") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5"))
                                                   (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "0"))
                                                   (rule "leq_literals" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "applyEq" (formula "75") (term "0,1") (ifseqformula "4"))
                                                   (rule "polySimp_homoEq" (formula "75") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "75") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "75") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "75") (term "0,1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "75") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "75") (term "0,0,1"))
                                                   (rule "add_literals" (formula "75") (term "0,0,0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "77") (term "1"))
                                                   (rule "mul_literals" (formula "77") (term "1,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "75") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "75") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "75") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "75") (term "1,1,1"))
                                                   (rule "mul_literals" (formula "75") (term "0,1,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "73"))
                                                   (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                   (rule "mul_literals" (formula "5") (term "1"))
                                                   (rule "inEqSimp_subsumption4" (formula "73") (ifseqformula "3"))
                                                   (rule "mul_literals" (formula "73") (term "0,1,0"))
                                                   (rule "greater_literals" (formula "73") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "73") (term "0"))
                                                   (rule "leq_literals" (formula "73") (term "0"))
                                                   (rule "concrete_or_1" (formula "73"))
                                                   (rule "true_left" (formula "73"))
                                                   (rule "elimGcdEq" (formula "74") (term "1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), quotient_1)") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                   (rule "eqClose" (formula "74") (term "0,0,0,1"))
                                                   (rule "concrete_and_1" (formula "74") (term "0,0,1"))
                                                   (rule "mul_literals" (formula "74") (term "0,1,0,0,1,1"))
                                                   (rule "mul_literals" (formula "74") (term "0,1,0,1,0,1"))
                                                   (rule "add_literals" (formula "74") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "74") (term "0,1,0,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,1"))
                                                   (rule "mul_literals" (formula "74") (term "0,1,0,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "74") (term "1,0,1,0,1"))
                                                   (rule "mul_literals" (formula "74") (term "0,1,0,1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,1"))
                                                   (rule "mul_literals" (formula "74") (term "0,1,0,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,1"))
                                                   (rule "polySimp_addComm1" (formula "74") (term "0,0,0,1,1"))
                                                   (rule "add_literals" (formula "74") (term "0,0,0,0,1,1"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0,1,1"))
                                                   (rule "add_literals" (formula "74") (term "1,1,0,0,1,1"))
                                                   (rule "times_zero_1" (formula "74") (term "1,0,0,1,1"))
                                                   (rule "add_zero_right" (formula "74") (term "0,0,1,1"))
                                                   (rule "equal_literals" (formula "74") (term "0,1,1"))
                                                   (rule "concrete_and_2" (formula "74") (term "1,1"))
                                                   (rule "polySimp_addAssoc" (formula "74") (term "0,1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "74") (term "0,0,1,0,1"))
                                                   (rule "add_literals" (formula "74") (term "0,0,0,1,0,1"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,1,0,1"))
                                                   (rule "add_literals" (formula "74") (term "1,1,0,1,0,1"))
                                                   (rule "times_zero_1" (formula "74") (term "1,0,1,0,1"))
                                                   (rule "add_literals" (formula "74") (term "0,1,0,1"))
                                                   (rule "qeq_literals" (formula "74") (term "1,0,1"))
                                                   (rule "concrete_and_3" (formula "74") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "74") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "74") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "74") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0,1"))
                                                   (rule "add_literals" (formula "74") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "74") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "74") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "74") (term "0,1"))
                                                   (rule "ifthenelse_true_for" (formula "74") (term "1"))
                                                   (rule "concrete_impl_3" (formula "74"))
                                                   (rule "notLeft" (formula "74"))
                                                   (rule "inEqSimp_geqRight" (formula "77"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "replace_known_left" (formula "76") (term "0") (ifseqformula "1"))
                                                   (rule "concrete_impl_1" (formula "76"))
                                                   (rule "applyEq" (formula "6") (term "0") (ifseqformula "76"))
                                                   (rule "qeq_literals" (formula "6"))
                                                   (rule "true_left" (formula "6"))
                                                   (rule "applyEqRigid" (formula "3") (term "1,0,0") (ifseqformula "75"))
                                                   (rule "add_literals" (formula "3") (term "0,0"))
                                                   (rule "div_literals" (formula "3") (term "0"))
                                                   (rule "eqSymm" (formula "3"))
                                                   (rule "applyEqRigid" (formula "6") (term "1,0,0") (ifseqformula "75"))
                                                   (rule "add_literals" (formula "6") (term "0,0"))
                                                   (rule "jdiv_axiom_inline" (formula "6") (term "0"))
                                                   (rule "qeq_literals" (formula "6") (term "0,0"))
                                                   (rule "ifthenelse_true" (formula "6") (term "0"))
                                                   (rule "div_literals" (formula "6") (term "0"))
                                                   (rule "eqSymm" (formula "6"))
                                                   (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "74"))
                                                   (rule "add_literals" (formula "5") (term "1"))
                                                   (rule "apply_eq_monomials" (formula "74") (term "0") (ifseqformula "3"))
                                                   (rule "add_zero_left" (formula "74") (term "1,0,0"))
                                                   (rule "polySimp_homoEq" (formula "74"))
                                                   (rule "polySimp_mulComm0" (formula "74") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "74") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "74") (term "0,1,1,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "74") (term "1,1,0"))
                                                   (rule "add_literals" (formula "74") (term "1,1,1,0"))
                                                   (rule "times_zero_1" (formula "74") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "74") (term "1,0"))
                                                   (rule "add_literals" (formula "74") (term "0"))
                                                   (rule "equal_literals" (formula "74"))
                                                   (rule "closeFalse" (formula "74"))
                                                )
                                                (branch "result_2 >= 0 FALSE"
                                                   (rule "eqSymm" (formula "6"))
                                                   (rule "inEqSimp_geqRight" (formula "80"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "applyEq" (formula "87") (term "0,0") (ifseqformula "7"))
                                                   (rule "polySimp_mulComm0" (formula "87") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "87") (term "0"))
                                                   (rule "polySimp_homoEq" (formula "87"))
                                                   (rule "polySimp_mulComm0" (formula "87") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "87") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "87") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "87") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "87") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "87") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "87") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "87") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "87") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "87") (term "0"))
                                                   (rule "add_literals" (formula "87") (term "1,1,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "87"))
                                                   (rule "polySimp_mulLiterals" (formula "87") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "87") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_contradEq3" (formula "79") (term "1") (ifseqformula "1"))
                                                   (rule "times_zero_1" (formula "79") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "79") (term "0,0,1"))
                                                   (rule "qeq_literals" (formula "79") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "79") (term "1"))
                                                   (rule "concrete_impl_3" (formula "79"))
                                                   (rule "notLeft" (formula "79"))
                                                   (rule "inEqSimp_leqRight" (formula "80"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "replace_known_left" (formula "78") (term "0") (ifseqformula "1"))
                                                   (rule "concrete_impl_1" (formula "78"))
                                                   (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "78"))
                                                   (rule "polySimp_homoEq" (formula "8"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                   (rule "applyEq" (formula "6") (term "0") (ifseqformula "78"))
                                                   (rule "inEqSimp_homoInEq1" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "78"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "0,0"))
                                                   (rule "applyEq" (formula "77") (term "0") (ifseqformula "78"))
                                                   (rule "inEqSimp_homoInEq1" (formula "77"))
                                                   (rule "polySimp_mulComm0" (formula "77") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "77") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "77") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "77") (term "0"))
                                                   (rule "add_literals" (formula "77") (term "0,0"))
                                                   (rule "applyEq" (formula "7") (term "0") (ifseqformula "78"))
                                                   (rule "inEqSimp_homoInEq0" (formula "7"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                   (rule "add_literals" (formula "7") (term "0,0,0"))
                                                   (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "78"))
                                                   (rule "applyEq" (formula "87") (term "0") (ifseqformula "78"))
                                                   (rule "polySimp_homoEq" (formula "87"))
                                                   (rule "polySimp_mulComm0" (formula "87") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "87") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "87") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "87") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "87") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "87") (term "0,0"))
                                                   (rule "applyEq" (formula "75") (term "0") (ifseqformula "78"))
                                                   (rule "inEqSimp_homoInEq0" (formula "75"))
                                                   (rule "polySimp_mulComm0" (formula "75") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "75") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "75") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "75") (term "0"))
                                                   (rule "add_literals" (formula "75") (term "0,0"))
                                                   (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "78"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "87"))
                                                   (rule "polySimp_mulLiterals" (formula "87") (term "0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "8"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                   (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "75"))
                                                   (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                                   (rule "inEqSimp_strengthen1" (formula "6") (ifseqformula "87"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                                   (rule "add_literals" (formula "6") (term "0,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "87") (ifseqformula "6"))
                                                   (rule "polySimp_rightDist" (formula "87") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "87") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "87") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "87") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "87") (term "0,0,0"))
                                                   (rule "add_literals" (formula "87") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "87") (term "0,0"))
                                                   (rule "add_literals" (formula "87") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "87") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "87") (term "0,0"))
                                                   (rule "leq_literals" (formula "87") (term "0"))
                                                   (rule "concrete_and_2" (formula "87"))
                                                   (rule "false_right" (formula "87"))
                                                   (rule "inEqSimp_subsumption1" (formula "67") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "67") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "67") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "67") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "67") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "67") (term "0,0,0"))
                                                   (rule "add_literals" (formula "67") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "67") (term "0,0"))
                                                   (rule "add_literals" (formula "67") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "67") (term "1,0,0"))
                                                   (rule "add_literals" (formula "67") (term "0,0"))
                                                   (rule "qeq_literals" (formula "67") (term "0"))
                                                   (rule "concrete_or_1" (formula "67"))
                                                   (rule "true_left" (formula "67"))
                                                   (rule "inEqSimp_subsumption4" (formula "74") (ifseqformula "69"))
                                                   (rule "greater_literals" (formula "74") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "74") (term "0"))
                                                   (rule "mul_literals" (formula "74") (term "0,0"))
                                                   (rule "leq_literals" (formula "74") (term "0"))
                                                   (rule "concrete_or_1" (formula "74"))
                                                   (rule "true_left" (formula "74"))
                                                   (rule "inEqSimp_subsumption6" (formula "75") (ifseqformula "66"))
                                                   (rule "times_zero_1" (formula "75") (term "1,1,0"))
                                                   (rule "greater_literals" (formula "75") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "75") (term "0"))
                                                   (rule "leq_literals" (formula "75") (term "0"))
                                                   (rule "concrete_or_1" (formula "75"))
                                                   (rule "true_left" (formula "75"))
                                                   (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "66"))
                                                   (rule "times_zero_1" (formula "2") (term "1,1,0"))
                                                   (rule "greater_literals" (formula "2") (term "0,0"))
                                                   (rule "concrete_impl_1" (formula "2") (term "0"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                   (rule "concrete_and_2" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch "CUT: l_0 >= 1 + l_1 FALSE"
                                                (rule "concrete_impl_2" (formula "56"))
                                                (rule "true_left" (formula "56"))
                                                (rule "inEqSimp_geqRight" (formula "61"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "48") (term "0,0"))
                                                (rule "add_zero_left" (formula "48") (term "0"))
                                                (rule "nnf_imp2or" (formula "37") (term "1,0"))
                                                (rule "commute_or" (formula "56") (term "0,0,1"))
                                                (rule "div_axiom" (formula "9") (term "1") (inst "quotient=quotient_0"))
                                                (rule "equal_literals" (formula "9") (term "0"))
                                                (rule "concrete_or_2" (formula "9"))
                                                (rule "mul_literals" (formula "9") (term "1,1,1,1"))
                                                (rule "qeq_literals" (formula "9") (term "0,1"))
                                                (rule "ifthenelse_true_for" (formula "9") (term "1"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "polySimp_addComm1" (formula "11") (term "1"))
                                                (rule "add_literals" (formula "11") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "10"))
                                                (rule "inEqSimp_homoInEq1" (formula "11"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                (rule "applyEq" (formula "15") (term "1,1,0,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "16") (term "1,0,0,0,1,0") (ifseqformula "9"))
                                                (rule "applyEqRigid" (formula "16") (term "1,1,0,0") (ifseqformula "9"))
                                                (rule "applyEqRigid" (formula "31") (term "1,1,1,0,0") (ifseqformula "9"))
                                                (rule "applyEqRigid" (formula "32") (term "1,1,1,0,0,1,0") (ifseqformula "9"))
                                                (rule "applyEqRigid" (formula "13") (term "1,0") (ifseqformula "9"))
                                                (rule "applyEqRigid" (formula "40") (term "1,1,1,0,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "18") (term "0") (ifseqformula "9"))
                                                (rule "inEqSimp_homoInEq1" (formula "18"))
                                                (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                (rule "applyEq" (formula "32") (term "1,1,1,0,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "30") (term "1,1,0,0") (ifseqformula "9"))
                                                (rule "applyEqRigid" (formula "41") (term "1,1,1,0,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "38") (term "0") (ifseqformula "9"))
                                                (rule "inEqSimp_homoInEq1" (formula "38"))
                                                (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                (rule "applyEq" (formula "12") (term "1") (ifseqformula "9"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                (rule "mul_literals" (formula "11") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                (rule "mul_literals" (formula "18") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1"))
                                                (rule "mul_literals" (formula "38") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "11"))
                                                (rule "mul_literals" (formula "14") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                (rule "add_literals" (formula "14") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                (rule "mul_literals" (formula "14") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "14") (term "0,0"))
                                                (rule "concrete_or_2" (formula "14") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0"))
                                                (rule "leq_literals" (formula "14") (term "0"))
                                                (rule "concrete_or_2" (formula "14"))
                                                (rule "inEqSimp_exactShadow3" (formula "57") (ifseqformula "11"))
                                                (rule "polySimp_rightDist" (formula "57") (term "0,0"))
                                                (rule "mul_literals" (formula "57") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "57") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                                (rule "add_literals" (formula "57") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "57") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "57"))
                                                (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "57") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "57") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "57") (term "0,0"))
                                                (rule "concrete_or_2" (formula "57") (term "0"))
                                                (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0"))
                                                (rule "neg_literal" (formula "57") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "57") (term "0,0"))
                                                (rule "add_literals" (formula "57") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "57") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "57") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "57") (term "0,0"))
                                                (rule "add_literals" (formula "57") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "57") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "57") (term "0,0"))
                                                (rule "qeq_literals" (formula "57") (term "0"))
                                                (rule "concrete_or_2" (formula "57"))
                                                (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "39"))
                                                (rule "times_zero_1" (formula "38") (term "0,0"))
                                                (rule "add_zero_left" (formula "38") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                (rule "mul_literals" (formula "38") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "38") (term "0"))
                                                (rule "concrete_or_1" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "11"))
                                                (rule "polySimp_rightDist" (formula "51") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0"))
                                                (rule "mul_literals" (formula "51") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "51") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                                                (rule "add_literals" (formula "51") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "51") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "51"))
                                                (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "51") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0"))
                                                (rule "neg_literal" (formula "51") (term "0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "51") (term "0,0"))
                                                (rule "concrete_or_2" (formula "51") (term "0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0"))
                                                (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "51") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0"))
                                                (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "51") (term "0,0"))
                                                (rule "qeq_literals" (formula "51") (term "0"))
                                                (rule "concrete_or_2" (formula "51"))
                                                (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "11"))
                                                (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "28") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "49"))
                                                (rule "polySimp_mulAssoc" (formula "10") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "10") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "neg_literal" (formula "10") (term "0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "10") (term "0,0"))
                                                (rule "concrete_or_2" (formula "10") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "10") (term "0,0"))
                                                (rule "qeq_literals" (formula "10") (term "0"))
                                                (rule "concrete_or_2" (formula "10"))
                                                (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                                                (rule "times_zero_1" (formula "19") (term "0,0"))
                                                (rule "add_zero_left" (formula "19") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                (rule "mul_literals" (formula "19") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "15"))
                                                (rule "leq_literals" (formula "19") (term "0"))
                                                (rule "concrete_or_1" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "12"))
                                                (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                                                (rule "mul_literals" (formula "38") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "38") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "29"))
                                                (rule "times_zero_1" (formula "27") (term "0,0"))
                                                (rule "add_zero_left" (formula "27") (term "0"))
                                                (rule "inEqSimp_subsumption6" (formula "27") (ifseqformula "15"))
                                                (rule "greater_literals" (formula "27") (term "0,0"))
                                                (rule "concrete_and_1" (formula "27") (term "0"))
                                                (rule "mul_literals" (formula "27") (term "1,0"))
                                                (rule "leq_literals" (formula "27") (term "0"))
                                                (rule "concrete_or_1" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "61"))
                                                (rule "mul_literals" (formula "59") (term "0,0"))
                                                (rule "add_zero_left" (formula "59") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "59") (ifseqformula "15"))
                                                (rule "leq_literals" (formula "59") (term "0"))
                                                (rule "concrete_or_1" (formula "59"))
                                                (rule "true_left" (formula "59"))
                                                (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "54"))
                                                (rule "times_zero_1" (formula "56") (term "0,0"))
                                                (rule "add_zero_left" (formula "56") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "56") (ifseqformula "15"))
                                                (rule "leq_literals" (formula "56") (term "0"))
                                                (rule "concrete_or_1" (formula "56"))
                                                (rule "true_left" (formula "56"))
                                                (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
                                                (rule "mul_literals" (formula "36") (term "0,0"))
                                                (rule "add_zero_left" (formula "36") (term "0"))
                                                (rule "inEqSimp_subsumption6" (formula "36") (ifseqformula "15"))
                                                (rule "greater_literals" (formula "36") (term "0,0"))
                                                (rule "concrete_and_1" (formula "36") (term "0"))
                                                (rule "mul_literals" (formula "36") (term "1,0"))
                                                (rule "leq_literals" (formula "36") (term "0"))
                                                (rule "concrete_or_1" (formula "36"))
                                                (rule "true_left" (formula "36"))
                                                (rule "div_axiom" (formula "2") (term "1,0") (inst "quotient=quotient_1"))
                                                (rule "equal_literals" (formula "2") (term "0"))
                                                (rule "concrete_or_2" (formula "2"))
                                                (rule "mul_literals" (formula "2") (term "1,1,1,1"))
                                                (rule "qeq_literals" (formula "2") (term "0,1"))
                                                (rule "ifthenelse_true_for" (formula "2") (term "1"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "polySimp_addComm1" (formula "4") (term "1"))
                                                (rule "add_literals" (formula "4") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "5") (term "0,1,2,0") (ifseqformula "2"))
                                                (rule "polySimp_addComm0" (formula "5") (term "2,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                (rule "mul_literals" (formula "4") (term "0,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "69"))
                                                (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,1,0"))
                                                (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "3") (term "0,0"))
                                                (rule "concrete_or_2" (formula "3") (term "0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "3") (term "0,0"))
                                                (rule "qeq_literals" (formula "3") (term "0"))
                                                (rule "concrete_or_2" (formula "3"))
                                                (rule "inEqSimp_exactShadow3" (formula "71") (ifseqformula "5"))
                                                (rule "mul_literals" (formula "71") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "71") (term "0"))
                                                (rule "add_literals" (formula "71") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "71"))
                                                (rule "mul_literals" (formula "71") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "71") (inst "elimGcdRightDiv=Z(neglit(4(2(8(1(4(7(3(7(0(1(#))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "leq_literals" (formula "71") (term "0,0"))
                                                (rule "concrete_or_2" (formula "71") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0"))
                                                (rule "mul_literals" (formula "71") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "71") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "71") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "71") (term "0,0"))
                                                (rule "add_literals" (formula "71") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "71") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "71") (term "0,0"))
                                                (rule "leq_literals" (formula "71") (term "0"))
                                                (rule "concrete_or_2" (formula "71"))
                                                (rule "cut_direct" (formula "69") (term "0"))
                                                (branch "CUT: l_0 <= -1 + l_1 TRUE"
                                                   (rule "concrete_impl_1" (formula "70"))
                                                   (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "69"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                   (rule "concrete_or_1" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "68"))
                                                   (rule "mul_literals" (formula "59") (term "0,0"))
                                                   (rule "add_zero_left" (formula "59") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "59"))
                                                   (rule "mul_literals" (formula "59") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "63") (ifseqformula "59"))
                                                   (rule "leq_literals" (formula "63") (term "0"))
                                                   (rule "concrete_or_1" (formula "63"))
                                                   (rule "true_left" (formula "63"))
                                                   (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "64"))
                                                   (rule "mul_literals" (formula "59") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "59"))
                                                   (rule "mul_literals" (formula "59") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "59") (ifseqformula "18"))
                                                   (rule "leq_literals" (formula "59") (term "0"))
                                                   (rule "concrete_or_1" (formula "59"))
                                                   (rule "true_left" (formula "59"))
                                                   (rule "div_axiom" (formula "74") (term "0,1,1,0") (inst "quotient=quotient_2"))
                                                   (rule "mul_literals" (formula "74") (term "1,1,1,1,1"))
                                                   (rule "equal_literals" (formula "74") (term "0"))
                                                   (rule "concrete_or_2" (formula "74"))
                                                   (rule "qeq_literals" (formula "74") (term "0,1"))
                                                   (rule "ifthenelse_true_for" (formula "74") (term "1"))
                                                   (rule "andLeft" (formula "74"))
                                                   (rule "andLeft" (formula "74"))
                                                   (rule "polySimp_addAssoc" (formula "76") (term "0,1"))
                                                   (rule "add_literals" (formula "76") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "76") (term "1"))
                                                   (rule "add_literals" (formula "76") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "75"))
                                                   (rule "polySimp_mulLiterals" (formula "75") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "75") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "76"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "76") (term "0"))
                                                   (rule "applyEq" (formula "77") (term "0,1,1,0") (ifseqformula "74"))
                                                   (rule "polySimp_addComm1" (formula "77") (term "1,0"))
                                                   (rule "applyEqRigid" (formula "73") (term "0,1,1,0") (ifseqformula "74"))
                                                   (rule "polySimp_addComm1" (formula "73") (term "1,0"))
                                                   (rule "applyEqRigid" (formula "73") (term "0,1,1,1") (ifseqformula "74"))
                                                   (rule "polySimp_addComm1" (formula "73") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "75"))
                                                   (rule "polySimp_mulComm0" (formula "75") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "75") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "75") (term "1,1"))
                                                   (rule "mul_literals" (formula "75") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "76"))
                                                   (rule "polySimp_mulComm0" (formula "76") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "76") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "1,1"))
                                                   (rule "mul_literals" (formula "76") (term "0,1"))
                                                   (rule "elimGcdLeq_antec" (formula "76") (inst "elimGcdRightDiv=add(Z(0(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_2, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "1,0,1,0"))
                                                   (rule "leq_literals" (formula "76") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "76") (term "0"))
                                                   (rule "neg_literal" (formula "76") (term "0,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "76") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "76") (term "0,0"))
                                                   (rule "add_literals" (formula "76") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "76") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "76") (term "0,0"))
                                                   (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "76") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "76") (term "0,0,0"))
                                                   (rule "add_literals" (formula "76") (term "0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "76") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "76") (term "0,0,0"))
                                                   (rule "add_literals" (formula "76") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "76") (term "0,0"))
                                                   (rule "add_literals" (formula "76") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "76") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "76") (term "0,0"))
                                                   (rule "qeq_literals" (formula "76") (term "0"))
                                                   (rule "concrete_or_2" (formula "76"))
                                                   (rule "elimGcdGeq_antec" (formula "75") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_2, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                   (rule "leq_literals" (formula "75") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "75") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0"))
                                                   (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "75") (term "0,0"))
                                                   (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "75") (term "0,0,0"))
                                                   (rule "add_literals" (formula "75") (term "0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "75") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "75") (term "0,0,0"))
                                                   (rule "add_literals" (formula "75") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0"))
                                                   (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "75") (term "0,0"))
                                                   (rule "leq_literals" (formula "75") (term "0"))
                                                   (rule "concrete_or_2" (formula "75"))
                                                   (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "76"))
                                                   (rule "mul_literals" (formula "59") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "59") (term "0"))
                                                   (rule "add_literals" (formula "59") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "59"))
                                                   (rule "mul_literals" (formula "59") (term "1"))
                                                   (rule "elimGcdGeq_antec" (formula "59") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                   (rule "leq_literals" (formula "59") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "59") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "59") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_addLiterals" (formula "59") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "59") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "59") (term "0,0"))
                                                   (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "59") (term "0,0"))
                                                   (rule "leq_literals" (formula "59") (term "0"))
                                                   (rule "concrete_or_2" (formula "59"))
                                                   (rule "inEqSimp_exactShadow3" (formula "76") (ifseqformula "65"))
                                                   (rule "polySimp_rightDist" (formula "76") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "76") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "76"))
                                                   (rule "polySimp_mulComm0" (formula "76") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "76") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "1,1"))
                                                   (rule "mul_literals" (formula "76") (term "0,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "77") (ifseqformula "64"))
                                                   (rule "polySimp_rightDist" (formula "77") (term "0,0"))
                                                   (rule "mul_literals" (formula "77") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "77") (term "0"))
                                                   (rule "add_literals" (formula "77") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "77"))
                                                   (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                   (rule "elimGcdLeq_antec" (formula "77") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                   (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0"))
                                                   (rule "neg_literal" (formula "77") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "77") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "77") (term "0"))
                                                   (rule "mul_literals" (formula "77") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "77") (term "0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "77") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,0"))
                                                   (rule "add_literals" (formula "77") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "77") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "77") (term "0,0"))
                                                   (rule "qeq_literals" (formula "77") (term "0"))
                                                   (rule "concrete_or_2" (formula "77"))
                                                   (rule "inEqSimp_antiSymm" (formula "59") (ifseqformula "77"))
                                                   (rule "applyEqRigid" (formula "78") (term "0") (ifseqformula "59"))
                                                   (rule "leq_literals" (formula "78"))
                                                   (rule "true_left" (formula "78"))
                                                   (rule "applyEqRigid" (formula "78") (term "0,1,1") (ifseqformula "59"))
                                                   (rule "mul_literals" (formula "78") (term "1,1"))
                                                   (rule "add_literals" (formula "78") (term "1"))
                                                   (rule "applyEq" (formula "79") (term "0,1,1") (ifseqformula "59"))
                                                   (rule "mul_literals" (formula "79") (term "1,1"))
                                                   (rule "add_literals" (formula "79") (term "1"))
                                                   (rule "applyEqRigid" (formula "77") (term "0,1,1") (ifseqformula "59"))
                                                   (rule "mul_literals" (formula "77") (term "1,1"))
                                                   (rule "add_literals" (formula "77") (term "1"))
                                                   (rule "applyEq" (formula "60") (term "0") (ifseqformula "59"))
                                                   (rule "qeq_literals" (formula "60"))
                                                   (rule "true_left" (formula "60"))
                                                   (rule "applyEq" (formula "74") (term "0,1,0,1,0") (ifseqformula "59"))
                                                   (rule "mul_literals" (formula "74") (term "1,0,1,0"))
                                                   (rule "add_literals" (formula "74") (term "0,1,0"))
                                                   (rule "applyEq" (formula "75") (term "1") (ifseqformula "59"))
                                                   (rule "applyEq" (formula "79") (term "0,1,0,1,0") (ifseqformula "59"))
                                                   (rule "mul_literals" (formula "79") (term "1,0,1,0"))
                                                   (rule "add_literals" (formula "79") (term "0,1,0"))
                                                   (rule "applyEqRigid" (formula "74") (term "0,1,0,1,1") (ifseqformula "59"))
                                                   (rule "mul_literals" (formula "74") (term "1,0,1,1"))
                                                   (rule "add_literals" (formula "74") (term "0,1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "76") (ifseqformula "18"))
                                                   (rule "leq_literals" (formula "76") (term "0"))
                                                   (rule "concrete_or_1" (formula "76"))
                                                   (rule "true_left" (formula "76"))
                                                   (rule "inEqSimp_subsumption1" (formula "76") (ifseqformula "60"))
                                                   (rule "leq_literals" (formula "76") (term "0"))
                                                   (rule "concrete_or_1" (formula "76"))
                                                   (rule "true_left" (formula "76"))
                                                   (rule "inEqSimp_subsumption0" (formula "76") (ifseqformula "64"))
                                                   (rule "leq_literals" (formula "76") (term "0"))
                                                   (rule "concrete_or_1" (formula "76"))
                                                   (rule "true_left" (formula "76"))
                                                   (rule "nnf_imp2or" (formula "48") (term "1,0"))
                                                   (rule "nnf_notAnd" (formula "47") (term "0,1,0"))
                                                   (rule "double_not" (formula "47") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "47") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "47") (term "0,0,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "47") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "37") (term "0"))
                                                   (rule "nnf_notAnd" (formula "38") (term "0,1,0,1,0"))
                                                   (rule "double_not" (formula "38") (term "0,0,1,0,1,0"))
                                                   (rule "nnf_notOr" (formula "36") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "36") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "1,1,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "36") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "36") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "36") (term "0,0,0,1,1,0"))
                                                   (rule "nnf_imp2or" (formula "47") (term "0,1,1,0"))
                                                   (rule "commute_or_2" (formula "29") (term "0"))
                                                   (rule "commute_or_2" (formula "20") (term "0,1,1,0"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,1,0"))
                                                   (rule "commute_and" (formula "38") (term "0,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "48") (term "0"))
                                                   (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                                   (rule "nnf_imp2or" (formula "47") (term "0"))
                                                   (rule "nnf_imp2or" (formula "38") (term "0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "48") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,1,0"))
                                                   (rule "double_not" (formula "48") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "48") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "78") (term "0") (ifseqformula "7"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
                                                   (rule "concrete_or_2" (formula "1"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "48") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                                   (rule "nnf_imp2or" (formula "49") (term "0,1,1,0"))
                                                   (rule "nnf_imp2or" (formula "39") (term "0,1,0"))
                                                   (rule "nnf_notAnd" (formula "37") (term "0,0,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "37") (term "1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "37") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "cnf_rightDist" (formula "71") (term "0"))
                                                   (rule "nnf_notAnd" (formula "39") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0"))
                                                   (rule "nnf_notOr" (formula "49") (term "0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "37") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "37") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "37") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "37") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "1,1,1,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "37") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "49") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "0,1,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "49") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "ifthenelse_split" (formula "6") (term "0"))
                                                   (branch "result_2 >= 0 TRUE"
                                                      (rule "eqSymm" (formula "7"))
                                                      (rule "applyEq" (formula "86") (term "0,0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "86"))
                                                      (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "86"))
                                                      (rule "inEqSimp_contradEq7" (formula "86") (ifseqformula "4"))
                                                      (rule "polySimp_mulAssoc" (formula "86") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "86") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "86") (term "0,0"))
                                                      (rule "add_literals" (formula "86") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "86") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "86") (term "0,0"))
                                                      (rule "leq_literals" (formula "86") (term "0"))
                                                      (rule "concrete_and_2" (formula "86"))
                                                      (rule "false_right" (formula "86"))
                                                      (rule "inEqSimp_subsumption1" (formula "75") (ifseqformula "6"))
                                                      (rule "leq_literals" (formula "75") (term "0"))
                                                      (rule "concrete_or_1" (formula "75"))
                                                      (rule "true_left" (formula "75"))
                                                      (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5"))
                                                      (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                      (rule "add_literals" (formula "5") (term "1,0"))
                                                      (rule "times_zero_1" (formula "5") (term "0"))
                                                      (rule "leq_literals" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "5"))
                                                      (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                      (rule "add_literals" (formula "5") (term "1,0"))
                                                      (rule "times_zero_1" (formula "5") (term "0"))
                                                      (rule "qeq_literals" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "applyEq" (formula "76") (term "0,1") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "74") (term "0,1") (ifseqformula "4"))
                                                      (rule "polySimp_homoEq" (formula "74") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "74") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "74") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "74") (term "0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "74") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "74") (term "0,0,1"))
                                                      (rule "add_literals" (formula "74") (term "0,0,0,1"))
                                                      (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "72") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "72"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "72") (term "1,0"))
                                                      (rule "mul_literals" (formula "72") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "72") (term "0"))
                                                      (rule "add_literals" (formula "72") (term "0,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "76") (term "1"))
                                                      (rule "mul_literals" (formula "76") (term "1,1"))
                                                      (rule "polySimp_sepPosMonomial" (formula "74") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "74") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "74") (term "1,1"))
                                                      (rule "mul_literals" (formula "74") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "74") (term "1,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                      (rule "mul_literals" (formula "5") (term "1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "72"))
                                                      (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                      (rule "inEqSimp_subsumption4" (formula "72") (ifseqformula "3"))
                                                      (rule "mul_literals" (formula "72") (term "0,1,0"))
                                                      (rule "greater_literals" (formula "72") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "72") (term "0"))
                                                      (rule "leq_literals" (formula "72") (term "0"))
                                                      (rule "concrete_or_1" (formula "72"))
                                                      (rule "true_left" (formula "72"))
                                                      (rule "elimGcdEq" (formula "73") (term "1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), quotient_1)") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                      (rule "eqClose" (formula "73") (term "0,0,0,1"))
                                                      (rule "concrete_and_1" (formula "73") (term "0,0,1"))
                                                      (rule "mul_literals" (formula "73") (term "0,1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "73") (term "0,1,0,1,0,1"))
                                                      (rule "mul_literals" (formula "73") (term "0,1,0,0,0,1"))
                                                      (rule "add_literals" (formula "73") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "73") (term "0,1,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "73") (term "1,0,1,0,1"))
                                                      (rule "mul_literals" (formula "73") (term "0,1,0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "73") (term "0,1,0,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "73") (term "0,0,1,1"))
                                                      (rule "polySimp_addComm1" (formula "73") (term "0,0,0,1,1"))
                                                      (rule "add_literals" (formula "73") (term "0,0,0,0,1,1"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "73") (term "0,0,1,1"))
                                                      (rule "add_literals" (formula "73") (term "1,1,0,0,1,1"))
                                                      (rule "times_zero_1" (formula "73") (term "1,0,0,1,1"))
                                                      (rule "add_zero_right" (formula "73") (term "0,0,1,1"))
                                                      (rule "equal_literals" (formula "73") (term "0,1,1"))
                                                      (rule "concrete_and_2" (formula "73") (term "1,1"))
                                                      (rule "polySimp_addAssoc" (formula "73") (term "0,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "73") (term "0,0,1,0,1"))
                                                      (rule "add_literals" (formula "73") (term "0,0,0,1,0,1"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "73") (term "0,1,0,1"))
                                                      (rule "add_literals" (formula "73") (term "1,1,0,1,0,1"))
                                                      (rule "times_zero_1" (formula "73") (term "1,0,1,0,1"))
                                                      (rule "add_literals" (formula "73") (term "0,1,0,1"))
                                                      (rule "qeq_literals" (formula "73") (term "1,0,1"))
                                                      (rule "concrete_and_3" (formula "73") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "73") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "73") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "73") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "73") (term "0,0,1"))
                                                      (rule "add_literals" (formula "73") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "73") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "73") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "73") (term "0,1"))
                                                      (rule "ifthenelse_true_for" (formula "73") (term "1"))
                                                      (rule "concrete_impl_3" (formula "73"))
                                                      (rule "notLeft" (formula "73"))
                                                      (rule "inEqSimp_geqRight" (formula "76"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "replace_known_left" (formula "75") (term "0") (ifseqformula "1"))
                                                      (rule "concrete_impl_1" (formula "75"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "75"))
                                                      (rule "qeq_literals" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "applyEq" (formula "6") (term "1,0,0") (ifseqformula "74"))
                                                      (rule "add_literals" (formula "6") (term "0,0"))
                                                      (rule "jdiv_axiom_inline" (formula "6") (term "0"))
                                                      (rule "times_zero_2" (formula "6") (term "0,0,2,0"))
                                                      (rule "div_literals" (formula "6") (term "1,0"))
                                                      (rule "qeq_literals" (formula "6") (term "0,0"))
                                                      (rule "ifthenelse_true" (formula "6") (term "0"))
                                                      (rule "eqSymm" (formula "6"))
                                                      (rule "applyEqRigid" (formula "3") (term "1,0,0") (ifseqformula "74"))
                                                      (rule "add_literals" (formula "3") (term "0,0"))
                                                      (rule "div_literals" (formula "3") (term "0"))
                                                      (rule "eqSymm" (formula "3"))
                                                      (rule "applyEqRigid" (formula "4") (term "1,1") (ifseqformula "73"))
                                                      (rule "add_literals" (formula "4") (term "1"))
                                                      (rule "applyEq" (formula "3") (term "0") (ifseqformula "5"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEqRigid" (formula "70") (term "0") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "70"))
                                                      (rule "true_left" (formula "70"))
                                                      (rule "applyEqRigid" (formula "71") (term "0,0") (ifseqformula "4"))
                                                      (rule "times_zero_2" (formula "71") (term "0"))
                                                      (rule "equal_literals" (formula "71"))
                                                      (rule "closeFalse" (formula "71"))
                                                   )
                                                   (branch "result_2 >= 0 FALSE"
                                                      (rule "eqSymm" (formula "6"))
                                                      (rule "inEqSimp_geqRight" (formula "79"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "applyEq" (formula "86") (term "0,0") (ifseqformula "7"))
                                                      (rule "polySimp_mulComm0" (formula "86") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "86") (term "0"))
                                                      (rule "polySimp_homoEq" (formula "86"))
                                                      (rule "polySimp_mulComm0" (formula "86") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "86") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "86") (term "0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "86") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "86") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "86") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "86") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "86") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "86") (term "0"))
                                                      (rule "add_literals" (formula "86") (term "1,1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "86"))
                                                      (rule "polySimp_mulLiterals" (formula "86") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "86") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_contradEq3" (formula "78") (term "1") (ifseqformula "1"))
                                                      (rule "times_zero_1" (formula "78") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "78") (term "0,0,1"))
                                                      (rule "qeq_literals" (formula "78") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "78") (term "1"))
                                                      (rule "concrete_impl_3" (formula "78"))
                                                      (rule "notLeft" (formula "78"))
                                                      (rule "inEqSimp_leqRight" (formula "79"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "replace_known_left" (formula "77") (term "0") (ifseqformula "1"))
                                                      (rule "concrete_impl_1" (formula "77"))
                                                      (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "77"))
                                                      (rule "applyEq" (formula "74") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq0" (formula "74"))
                                                      (rule "polySimp_mulComm0" (formula "74") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "74") (term "1,0"))
                                                      (rule "mul_literals" (formula "74") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "74") (term "0"))
                                                      (rule "add_literals" (formula "74") (term "0,0"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                      (rule "applyEq" (formula "86") (term "0") (ifseqformula "77"))
                                                      (rule "polySimp_homoEq" (formula "86"))
                                                      (rule "polySimp_mulComm0" (formula "86") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "86") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "86") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "86") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "86") (term "0,0"))
                                                      (rule "applyEq" (formula "76") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq1" (formula "76"))
                                                      (rule "polySimp_mulComm0" (formula "76") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "76") (term "1,0"))
                                                      (rule "mul_literals" (formula "76") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "76") (term "0"))
                                                      (rule "add_literals" (formula "76") (term "0,0"))
                                                      (rule "applyEq" (formula "7") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "77"))
                                                      (rule "polySimp_homoEq" (formula "8"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                      (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "77"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "86"))
                                                      (rule "polySimp_mulLiterals" (formula "86") (term "0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "8"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "74"))
                                                      (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                                                      (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "inEqSimp_strengthen1" (formula "6") (ifseqformula "86"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                                      (rule "add_literals" (formula "6") (term "0,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "86") (ifseqformula "6"))
                                                      (rule "polySimp_rightDist" (formula "86") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "86") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "86") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "86") (term "0,0,0"))
                                                      (rule "add_literals" (formula "86") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "86") (term "0,0"))
                                                      (rule "add_literals" (formula "86") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "86") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "86") (term "0,0"))
                                                      (rule "leq_literals" (formula "86") (term "0"))
                                                      (rule "concrete_and_2" (formula "86"))
                                                      (rule "false_right" (formula "86"))
                                                      (rule "inEqSimp_subsumption1" (formula "69") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "69") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "69") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "69") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "69") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "69") (term "0,0,0"))
                                                      (rule "add_literals" (formula "69") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "69") (term "0,0"))
                                                      (rule "add_literals" (formula "69") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "69") (term "1,0,0"))
                                                      (rule "add_literals" (formula "69") (term "0,0"))
                                                      (rule "qeq_literals" (formula "69") (term "0"))
                                                      (rule "concrete_or_1" (formula "69"))
                                                      (rule "true_left" (formula "69"))
                                                      (rule "inEqSimp_subsumption6" (formula "75") (ifseqformula "63"))
                                                      (rule "mul_literals" (formula "75") (term "1,1,0"))
                                                      (rule "greater_literals" (formula "75") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "75") (term "0"))
                                                      (rule "leq_literals" (formula "75") (term "0"))
                                                      (rule "concrete_or_1" (formula "75"))
                                                      (rule "true_left" (formula "75"))
                                                      (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "63"))
                                                      (rule "mul_literals" (formula "2") (term "1,1,0"))
                                                      (rule "greater_literals" (formula "2") (term "0,0"))
                                                      (rule "concrete_impl_1" (formula "2") (term "0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                      (rule "concrete_and_2" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                                (branch "CUT: l_0 <= -1 + l_1 FALSE"
                                                   (rule "concrete_impl_2" (formula "69"))
                                                   (rule "true_left" (formula "69"))
                                                   (rule "inEqSimp_leqRight" (formula "75"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                                   (rule "applyEqRigid" (formula "61") (term "0,1,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "59") (term "0") (ifseqformula "1"))
                                                   (rule "applyEqRigid" (formula "59") (term "0") (ifseqformula "1"))
                                                   (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3"))
                                                   (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "0"))
                                                   (rule "qeq_literals" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqRigid" (formula "58") (term "0") (ifseqformula "1"))
                                                   (rule "applyEqRigid" (formula "54") (term "0,0,0") (ifseqformula "1"))
                                                   (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "applyEq" (formula "63") (term "0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "53") (term "1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "54") (term "0,1") (ifseqformula "1"))
                                                   (rule "applyEqRigid" (formula "52") (term "0,1") (ifseqformula "1"))
                                                   (rule "div_axiom" (formula "68") (term "0,1,1,0") (inst "quotient=quotient_2"))
                                                   (rule "equal_literals" (formula "68") (term "0"))
                                                   (rule "concrete_or_2" (formula "68"))
                                                   (rule "mul_literals" (formula "68") (term "1,1,1,1"))
                                                   (rule "qeq_literals" (formula "68") (term "0,1"))
                                                   (rule "ifthenelse_true_for" (formula "68") (term "1"))
                                                   (rule "andLeft" (formula "68"))
                                                   (rule "andLeft" (formula "68"))
                                                   (rule "polySimp_addAssoc" (formula "70") (term "0,1"))
                                                   (rule "add_literals" (formula "70") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "70") (term "1"))
                                                   (rule "add_literals" (formula "70") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "69"))
                                                   (rule "polySimp_mulLiterals" (formula "69") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "69") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "70"))
                                                   (rule "polySimp_mulLiterals" (formula "70") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "70") (term "0"))
                                                   (rule "applyEqRigid" (formula "71") (term "0,1,1,0") (ifseqformula "68"))
                                                   (rule "polySimp_addComm1" (formula "71") (term "1,0"))
                                                   (rule "applyEq" (formula "67") (term "0,1,1,0") (ifseqformula "68"))
                                                   (rule "polySimp_addComm1" (formula "67") (term "1,0"))
                                                   (rule "applyEq" (formula "67") (term "0,1,1,1") (ifseqformula "68"))
                                                   (rule "polySimp_addComm1" (formula "67") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "69"))
                                                   (rule "polySimp_mulComm0" (formula "69") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "69") (term "1"))
                                                   (rule "mul_literals" (formula "69") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "69") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "70"))
                                                   (rule "polySimp_mulComm0" (formula "70") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "70") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "70") (term "1,1"))
                                                   (rule "mul_literals" (formula "70") (term "0,1"))
                                                   (rule "elimGcdLeq_antec" (formula "70") (inst "elimGcdRightDiv=add(Z(0(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_2, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "70") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "neg_literal" (formula "70") (term "0,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "70") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "70") (term "0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "70") (term "0,0"))
                                                   (rule "add_literals" (formula "70") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "70") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "70") (term "0,0"))
                                                   (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "70") (term "0,0,0"))
                                                   (rule "add_literals" (formula "70") (term "0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "70") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "70") (term "0,0,0"))
                                                   (rule "add_literals" (formula "70") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "70") (term "0,0"))
                                                   (rule "add_literals" (formula "70") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "70") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "70") (term "0,0"))
                                                   (rule "qeq_literals" (formula "70") (term "0"))
                                                   (rule "concrete_or_2" (formula "70"))
                                                   (rule "elimGcdGeq_antec" (formula "69") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_2, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "69") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "69") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "69") (term "0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "69") (term "0,0"))
                                                   (rule "add_literals" (formula "69") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "69") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "69") (term "0,0"))
                                                   (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "69") (term "0,0,0"))
                                                   (rule "add_literals" (formula "69") (term "0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "69") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "69") (term "0,0,0"))
                                                   (rule "add_literals" (formula "69") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "69") (term "0,0"))
                                                   (rule "add_literals" (formula "69") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "69") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "69") (term "0,0"))
                                                   (rule "leq_literals" (formula "69") (term "0"))
                                                   (rule "concrete_or_2" (formula "69"))
                                                   (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "70"))
                                                   (rule "times_zero_1" (formula "59") (term "0,0"))
                                                   (rule "add_zero_left" (formula "59") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "59"))
                                                   (rule "mul_literals" (formula "59") (term "1"))
                                                   (rule "elimGcdGeq_antec" (formula "59") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                   (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,0"))
                                                   (rule "leq_literals" (formula "59") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "59") (term "0"))
                                                   (rule "mul_literals" (formula "59") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_addLiterals" (formula "59") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "59") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "59") (term "0,0"))
                                                   (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "59") (term "0,0"))
                                                   (rule "leq_literals" (formula "59") (term "0"))
                                                   (rule "concrete_or_2" (formula "59"))
                                                   (rule "inEqSimp_exactShadow3" (formula "70") (ifseqformula "62"))
                                                   (rule "polySimp_rightDist" (formula "70") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "70") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "70"))
                                                   (rule "polySimp_mulComm0" (formula "70") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "70") (term "1"))
                                                   (rule "mul_literals" (formula "70") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "70") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "71") (ifseqformula "61"))
                                                   (rule "polySimp_rightDist" (formula "71") (term "0,0"))
                                                   (rule "mul_literals" (formula "71") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                   (rule "add_literals" (formula "71") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "71"))
                                                   (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                                   (rule "elimGcdLeq_antec" (formula "71") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                   (rule "leq_literals" (formula "71") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "71") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0,0,0"))
                                                   (rule "neg_literal" (formula "71") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "71") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "71") (term "0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "71") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "71") (term "0,0"))
                                                   (rule "add_literals" (formula "71") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "71") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "71") (term "0,0"))
                                                   (rule "qeq_literals" (formula "71") (term "0"))
                                                   (rule "concrete_or_2" (formula "71"))
                                                   (rule "inEqSimp_antiSymm" (formula "59") (ifseqformula "71"))
                                                   (rule "applyEq" (formula "73") (term "0,1,1") (ifseqformula "59"))
                                                   (rule "mul_literals" (formula "73") (term "1,1"))
                                                   (rule "add_literals" (formula "73") (term "1"))
                                                   (rule "applyEqRigid" (formula "71") (term "0,1,1") (ifseqformula "59"))
                                                   (rule "mul_literals" (formula "71") (term "1,1"))
                                                   (rule "add_literals" (formula "71") (term "1"))
                                                   (rule "applyEq" (formula "72") (term "0") (ifseqformula "59"))
                                                   (rule "leq_literals" (formula "72"))
                                                   (rule "true_left" (formula "72"))
                                                   (rule "applyEqRigid" (formula "73") (term "0,1,1") (ifseqformula "59"))
                                                   (rule "mul_literals" (formula "73") (term "1,1"))
                                                   (rule "add_literals" (formula "73") (term "1"))
                                                   (rule "applyEqRigid" (formula "60") (term "0") (ifseqformula "59"))
                                                   (rule "qeq_literals" (formula "60"))
                                                   (rule "true_left" (formula "60"))
                                                   (rule "applyEq" (formula "73") (term "0,1,0,1,0") (ifseqformula "59"))
                                                   (rule "mul_literals" (formula "73") (term "1,0,1,0"))
                                                   (rule "add_literals" (formula "73") (term "0,1,0"))
                                                   (rule "applyEq" (formula "69") (term "1") (ifseqformula "59"))
                                                   (rule "applyEqRigid" (formula "68") (term "0,1,0,1,0") (ifseqformula "59"))
                                                   (rule "mul_literals" (formula "68") (term "1,0,1,0"))
                                                   (rule "add_literals" (formula "68") (term "0,1,0"))
                                                   (rule "applyEqRigid" (formula "68") (term "0,1,0,1,1") (ifseqformula "59"))
                                                   (rule "mul_literals" (formula "68") (term "1,0,1,1"))
                                                   (rule "add_literals" (formula "68") (term "0,1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "70") (ifseqformula "19"))
                                                   (rule "leq_literals" (formula "70") (term "0"))
                                                   (rule "concrete_or_1" (formula "70"))
                                                   (rule "true_left" (formula "70"))
                                                   (rule "inEqSimp_subsumption1" (formula "70") (ifseqformula "60"))
                                                   (rule "leq_literals" (formula "70") (term "0"))
                                                   (rule "concrete_or_1" (formula "70"))
                                                   (rule "true_left" (formula "70"))
                                                   (rule "inEqSimp_subsumption0" (formula "70") (ifseqformula "61"))
                                                   (rule "leq_literals" (formula "70") (term "0"))
                                                   (rule "concrete_or_1" (formula "70"))
                                                   (rule "true_left" (formula "70"))
                                                   (rule "nnf_imp2or" (formula "49") (term "1,0"))
                                                   (rule "nnf_imp2or" (formula "38") (term "0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,1,0"))
                                                   (rule "double_not" (formula "48") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "48") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "39") (term "0,1,0,1,0"))
                                                   (rule "double_not" (formula "39") (term "0,0,1,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "37") (term "0,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "37") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "37") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "37") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "nnf_imp2or" (formula "48") (term "0,1,1,0"))
                                                   (rule "commute_or_2" (formula "30") (term "0"))
                                                   (rule "commute_or_2" (formula "21") (term "0,1,1,0"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,1,0"))
                                                   (rule "commute_and" (formula "39") (term "0,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "49") (term "0"))
                                                   (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                                   (rule "nnf_imp2or" (formula "48") (term "0"))
                                                   (rule "nnf_imp2or" (formula "39") (term "0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "0,1,0"))
                                                   (rule "double_not" (formula "49") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "72") (term "0") (ifseqformula "8"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "73"))
                                                   (rule "concrete_or_2" (formula "1"))
                                                   (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "40") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "40") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                                                   (rule "nnf_imp2or" (formula "50") (term "0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "38") (term "1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "38") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "38") (term "0,0,0,0,1,1,0"))
                                                   (rule "nnf_imp2or" (formula "40") (term "0,1,0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "50") (term "0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "40") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,0"))
                                                   (rule "nnf_notOr" (formula "38") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,1,1,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "38") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "50") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "50") (term "0,1,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "50") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "50") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "50") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "50") (term "0,0,0,1,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "50") (term "0,0,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "50") (term "0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "ifthenelse_split" (formula "7") (term "0"))
                                                   (branch "result_2 >= 0 TRUE"
                                                      (rule "eqSymm" (formula "8"))
                                                      (rule "applyEq" (formula "80") (term "0,0") (ifseqformula "8"))
                                                      (rule "eqSymm" (formula "80"))
                                                      (rule "inEqSimp_strengthen1" (formula "5") (ifseqformula "80"))
                                                      (rule "inEqSimp_contradEq7" (formula "80") (ifseqformula "5"))
                                                      (rule "polySimp_mulAssoc" (formula "80") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "80") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "80") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "80") (term "0,0"))
                                                      (rule "add_literals" (formula "80") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "80") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "80") (term "0,0"))
                                                      (rule "leq_literals" (formula "80") (term "0"))
                                                      (rule "concrete_and_2" (formula "80"))
                                                      (rule "false_right" (formula "80"))
                                                      (rule "inEqSimp_subsumption1" (formula "69") (ifseqformula "7"))
                                                      (rule "leq_literals" (formula "69") (term "0"))
                                                      (rule "concrete_or_1" (formula "69"))
                                                      (rule "true_left" (formula "69"))
                                                      (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "68") (term "0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq0" (formula "68"))
                                                      (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                                                      (rule "mul_literals" (formula "68") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "68") (term "0"))
                                                      (rule "add_literals" (formula "68") (term "0,0"))
                                                      (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "8") (term "0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "72") (term "0,1") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                                      (rule "add_literals" (formula "6") (term "1,0"))
                                                      (rule "times_zero_1" (formula "6") (term "0"))
                                                      (rule "leq_literals" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "69") (term "0,1") (ifseqformula "5"))
                                                      (rule "polySimp_homoEq" (formula "69") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "69") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "69") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "69") (term "0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "69") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "69") (term "0,0,1"))
                                                      (rule "add_literals" (formula "69") (term "0,0,0,1"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq0" (formula "6"))
                                                      (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                                      (rule "add_literals" (formula "6") (term "1,0"))
                                                      (rule "times_zero_1" (formula "6") (term "0"))
                                                      (rule "qeq_literals" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "polySimp_sepPosMonomial" (formula "70") (term "1"))
                                                      (rule "mul_literals" (formula "70") (term "1,1"))
                                                      (rule "polySimp_sepPosMonomial" (formula "68") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "68") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "68") (term "1,1"))
                                                      (rule "mul_literals" (formula "68") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "66"))
                                                      (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                      (rule "mul_literals" (formula "6") (term "1"))
                                                      (rule "inEqSimp_subsumption4" (formula "66") (ifseqformula "4"))
                                                      (rule "mul_literals" (formula "66") (term "0,1,0"))
                                                      (rule "greater_literals" (formula "66") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "66") (term "0"))
                                                      (rule "leq_literals" (formula "66") (term "0"))
                                                      (rule "concrete_or_1" (formula "66"))
                                                      (rule "true_left" (formula "66"))
                                                      (rule "elimGcdEq" (formula "67") (term "1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), quotient_1)") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                      (rule "eqClose" (formula "67") (term "0,0,0,1"))
                                                      (rule "concrete_and_1" (formula "67") (term "0,0,1"))
                                                      (rule "mul_literals" (formula "67") (term "0,1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "67") (term "0,1,0,1,0,1"))
                                                      (rule "add_literals" (formula "67") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "67") (term "0,1,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "67") (term "0,1,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "1,0,1,0,1"))
                                                      (rule "mul_literals" (formula "67") (term "0,1,0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "67") (term "0,1,0,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,1"))
                                                      (rule "polySimp_addComm1" (formula "67") (term "0,0,0,1,1"))
                                                      (rule "add_literals" (formula "67") (term "0,0,0,0,1,1"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "67") (term "0,0,1,1"))
                                                      (rule "add_literals" (formula "67") (term "1,1,0,0,1,1"))
                                                      (rule "times_zero_1" (formula "67") (term "1,0,0,1,1"))
                                                      (rule "add_zero_right" (formula "67") (term "0,0,1,1"))
                                                      (rule "equal_literals" (formula "67") (term "0,1,1"))
                                                      (rule "concrete_and_2" (formula "67") (term "1,1"))
                                                      (rule "polySimp_addAssoc" (formula "67") (term "0,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "67") (term "0,0,1,0,1"))
                                                      (rule "add_literals" (formula "67") (term "0,0,0,1,0,1"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "67") (term "0,1,0,1"))
                                                      (rule "add_literals" (formula "67") (term "1,1,0,1,0,1"))
                                                      (rule "times_zero_1" (formula "67") (term "1,0,1,0,1"))
                                                      (rule "add_literals" (formula "67") (term "0,1,0,1"))
                                                      (rule "qeq_literals" (formula "67") (term "1,0,1"))
                                                      (rule "concrete_and_3" (formula "67") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "67") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "67") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "67") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "67") (term "0,0,1"))
                                                      (rule "add_literals" (formula "67") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "67") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "67") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "67") (term "0,1"))
                                                      (rule "ifthenelse_true_for" (formula "67") (term "1"))
                                                      (rule "concrete_impl_3" (formula "67"))
                                                      (rule "notLeft" (formula "67"))
                                                      (rule "inEqSimp_geqRight" (formula "70"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "replace_known_left" (formula "69") (term "0") (ifseqformula "1"))
                                                      (rule "concrete_impl_1" (formula "69"))
                                                      (rule "applyEqRigid" (formula "4") (term "1,0,0") (ifseqformula "69"))
                                                      (rule "add_literals" (formula "4") (term "0,0"))
                                                      (rule "div_literals" (formula "4") (term "0"))
                                                      (rule "eqSymm" (formula "4"))
                                                      (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "69"))
                                                      (rule "qeq_literals" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "applyEqRigid" (formula "7") (term "1,0,0") (ifseqformula "68"))
                                                      (rule "add_literals" (formula "7") (term "0,0"))
                                                      (rule "jdiv_axiom_inline" (formula "7") (term "0"))
                                                      (rule "div_literals" (formula "7") (term "1,0"))
                                                      (rule "times_zero_2" (formula "7") (term "0,0,2,0"))
                                                      (rule "qeq_literals" (formula "7") (term "0,0"))
                                                      (rule "ifthenelse_true" (formula "7") (term "0"))
                                                      (rule "eqSymm" (formula "7"))
                                                      (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "4"))
                                                      (rule "leq_literals" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "applyEqRigid" (formula "66") (term "0,0") (ifseqformula "4"))
                                                      (rule "times_zero_2" (formula "66") (term "0"))
                                                      (rule "equal_literals" (formula "66"))
                                                      (rule "closeFalse" (formula "66"))
                                                   )
                                                   (branch "result_2 >= 0 FALSE"
                                                      (rule "eqSymm" (formula "7"))
                                                      (rule "inEqSimp_geqRight" (formula "73"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "applyEq" (formula "80") (term "0,0") (ifseqformula "8"))
                                                      (rule "polySimp_mulComm0" (formula "80") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "80") (term "0"))
                                                      (rule "polySimp_homoEq" (formula "80"))
                                                      (rule "polySimp_mulComm0" (formula "80") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "80") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "80") (term "0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "80") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "80") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "80") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "80") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "80") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "80") (term "0"))
                                                      (rule "add_literals" (formula "80") (term "1,1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "80"))
                                                      (rule "polySimp_mulLiterals" (formula "80") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "80") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_contradEq3" (formula "72") (term "1") (ifseqformula "1"))
                                                      (rule "mul_literals" (formula "72") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "72") (term "0,0,1"))
                                                      (rule "qeq_literals" (formula "72") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "72") (term "1"))
                                                      (rule "concrete_impl_3" (formula "72"))
                                                      (rule "notLeft" (formula "72"))
                                                      (rule "inEqSimp_leqRight" (formula "73"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "replace_known_left" (formula "71") (term "0") (ifseqformula "1"))
                                                      (rule "concrete_impl_1" (formula "71"))
                                                      (rule "applyEq" (formula "68") (term "0") (ifseqformula "71"))
                                                      (rule "inEqSimp_homoInEq0" (formula "68"))
                                                      (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                                                      (rule "mul_literals" (formula "68") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "68") (term "0"))
                                                      (rule "add_literals" (formula "68") (term "0,0"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "71"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "applyEq" (formula "8") (term "0") (ifseqformula "71"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,0"))
                                                      (rule "applyEq" (formula "80") (term "0") (ifseqformula "71"))
                                                      (rule "polySimp_homoEq" (formula "80"))
                                                      (rule "polySimp_mulComm0" (formula "80") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "80") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "80") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "80") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "80") (term "0,0"))
                                                      (rule "applyEq" (formula "7") (term "0") (ifseqformula "71"))
                                                      (rule "inEqSimp_homoInEq1" (formula "7"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                                      (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "71"))
                                                      (rule "polySimp_homoEq" (formula "9"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                      (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "71"))
                                                      (rule "applyEq" (formula "70") (term "0") (ifseqformula "71"))
                                                      (rule "inEqSimp_homoInEq1" (formula "70"))
                                                      (rule "polySimp_mulComm0" (formula "70") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "70") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "70") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "70") (term "0"))
                                                      (rule "add_literals" (formula "70") (term "0,0"))
                                                      (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "71"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "80"))
                                                      (rule "polySimp_mulLiterals" (formula "80") (term "0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "9"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "68"))
                                                      (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "70"))
                                                      (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                                      (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "80"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "1"))
                                                      (rule "add_literals" (formula "7") (term "0,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "80") (ifseqformula "7"))
                                                      (rule "polySimp_rightDist" (formula "80") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "80") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "80") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "80") (term "0,0,0"))
                                                      (rule "add_literals" (formula "80") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "80") (term "0,0"))
                                                      (rule "add_literals" (formula "80") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "80") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "80") (term "0,0"))
                                                      (rule "leq_literals" (formula "80") (term "0"))
                                                      (rule "concrete_and_2" (formula "80"))
                                                      (rule "false_right" (formula "80"))
                                                      (rule "inEqSimp_subsumption1" (formula "66") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "66") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "66") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "66") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "66") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "66") (term "0,0,0"))
                                                      (rule "add_literals" (formula "66") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "66") (term "0,0"))
                                                      (rule "add_literals" (formula "66") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "66") (term "1,0,0"))
                                                      (rule "add_literals" (formula "66") (term "0,0"))
                                                      (rule "qeq_literals" (formula "66") (term "0"))
                                                      (rule "concrete_or_1" (formula "66"))
                                                      (rule "true_left" (formula "66"))
                                                      (rule "inEqSimp_subsumption6" (formula "69") (ifseqformula "63"))
                                                      (rule "greater_literals" (formula "69") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "69") (term "0"))
                                                      (rule "times_zero_1" (formula "69") (term "1,0"))
                                                      (rule "leq_literals" (formula "69") (term "0"))
                                                      (rule "concrete_or_1" (formula "69"))
                                                      (rule "true_left" (formula "69"))
                                                      (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "63"))
                                                      (rule "times_zero_1" (formula "2") (term "1,1,0"))
                                                      (rule "greater_literals" (formula "2") (term "0,0"))
                                                      (rule "concrete_impl_1" (formula "2") (term "0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                      (rule "concrete_and_2" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "impRight" (formula "57"))
                                          (rule "boolean_not_equal_2" (formula "2") (term "0,0"))
                                          (rule "boolean_not_equal_2" (formula "2") (term "1,0"))
                                          (rule "concrete_or_2" (formula "2") (term "0"))
                                          (rule "concrete_not_2" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "expand_inInt" (formula "16"))
                                          (rule "expand_inInt" (formula "17"))
                                          (rule "expand_inInt" (formula "45"))
                                          (rule "expand_inInt" (formula "46"))
                                          (rule "expand_inInt" (formula "30"))
                                          (rule "expand_inShort" (formula "33"))
                                          (rule "replace_int_MAX" (formula "16") (term "1,0"))
                                          (rule "replace_int_MIN" (formula "16") (term "0,1"))
                                          (rule "replace_int_MAX" (formula "17") (term "1,0"))
                                          (rule "replace_int_MIN" (formula "17") (term "0,1"))
                                          (rule "replace_int_MIN" (formula "45") (term "0,1"))
                                          (rule "replace_int_MAX" (formula "45") (term "1,0"))
                                          (rule "replace_int_MAX" (formula "46") (term "1,0"))
                                          (rule "replace_int_MIN" (formula "46") (term "0,1"))
                                          (rule "replace_int_MIN" (formula "30") (term "0,1"))
                                          (rule "replace_int_MAX" (formula "30") (term "1,0"))
                                          (rule "replace_short_MAX" (formula "33") (term "1,0"))
                                          (rule "replace_short_MIN" (formula "33") (term "0,1"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "andLeft" (formula "47"))
                                          (rule "andLeft" (formula "49"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "36"))
                                          (rule "allRight" (formula "63") (inst "sk=n_0"))
                                          (rule "impRight" (formula "63"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "47"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "28") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,1,1"))
                                          (rule "inEqSimp_gtToGeq" (formula "49") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,1"))
                                          (rule "inEqSimp_gtToGeq" (formula "13") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "28") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "22"))
                                          (rule "mul_literals" (formula "22") (term "1,0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "42"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "50") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "polySimp_addComm1" (formula "42") (term "0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "50") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "19"))
                                          (rule "inEqSimp_commuteLeq" (formula "21"))
                                          (rule "inEqSimp_commuteLeq" (formula "52"))
                                          (rule "inEqSimp_commuteLeq" (formula "54"))
                                          (rule "inEqSimp_commuteLeq" (formula "35"))
                                          (rule "inEqSimp_commuteLeq" (formula "39"))
                                          (rule "inEqSimp_commuteGeq" (formula "1"))
                                          (rule "applyEq" (formula "39") (term "0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "55") (term "0,1,0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "13") (term "1,0,1,0,1,0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "50") (term "1,0,1,1,0,0,1") (ifseqformula "31"))
                                          (rule "applyEq" (formula "50") (term "1,0,1,1,0,1,1") (ifseqformula "31"))
                                          (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "41") (term "0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "28") (term "1,0,1,0,1,0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "11") (term "0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "28") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "61") (term "0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "13") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "46") (term "0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "48") (term "1,0,1,1,0,1") (ifseqformula "30"))
                                          (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "39") (term "0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "58") (term "1") (ifseqformula "30"))
                                          (rule "applyEq" (formula "28") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "63") (term "1,0,0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "12") (term "0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "37") (term "0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "14") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "28") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "49") (term "0,1,0,0,0,0,0,0,1") (ifseqformula "26"))
                                          (rule "applyEq" (formula "14") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "28") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "28") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                                          (rule "jmod_axiom" (formula "47") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0"))
                                          (rule "jmod_axiom" (formula "36") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "47"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "36"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,1,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "48") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "mul_literals" (formula "3") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1"))
                                          (rule "mul_literals" (formula "48") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                          (rule "mul_literals" (formula "22") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "49") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "49") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "54") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "22"))
                                          (rule "leq_literals" (formula "20") (term "0"))
                                          (rule "concrete_or_1" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "38"))
                                          (rule "leq_literals" (formula "37") (term "0"))
                                          (rule "concrete_or_1" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "40"))
                                          (rule "leq_literals" (formula "33") (term "0"))
                                          (rule "concrete_or_1" (formula "33"))
                                          (rule "true_left" (formula "33"))
                                          (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "35"))
                                          (rule "leq_literals" (formula "12") (term "0"))
                                          (rule "concrete_or_1" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "inEqSimp_subsumption1" (formula "47") (ifseqformula "41"))
                                          (rule "leq_literals" (formula "47") (term "0"))
                                          (rule "concrete_or_1" (formula "47"))
                                          (rule "true_left" (formula "47"))
                                          (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "35") (term "0"))
                                          (rule "concrete_or_1" (formula "35"))
                                          (rule "true_left" (formula "35"))
                                          (rule "elimGcdGeq" (formula "44") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "44") (term "0,0,0,1,0,1,0,0,1,1"))
                                          (rule "sub_literals" (formula "44") (term "0,0,0,0,0,0,0,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "44") (term "0,0,0,1,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,0,1,0,0,1,1"))
                                          (rule "add_zero_left" (formula "44") (term "0,0,1,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "44") (term "0,0,0,0,0,1,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "44") (term "0,1,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "44") (term "1,0,1,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "44") (term "0,1,0,1,0,0,1,1"))
                                          (rule "leq_literals" (formula "44") (term "1,0,1,0,0,1,1"))
                                          (rule "concrete_and_3" (formula "44") (term "0,1,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "44") (term "1,1,0,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "44") (term "0,0,1,0,0,1,1"))
                                          (rule "qeq_literals" (formula "44") (term "0,1,0,0,1,1"))
                                          (rule "ifthenelse_true_for" (formula "44") (term "1,0,0,1,1"))
                                          (rule "elimGcdGeq" (formula "26") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "26") (term "0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "26") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "26") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "26") (term "1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "concrete_and_3" (formula "26") (term "0,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "26") (term "0,1,1,0,0,0,0,1,1,0"))
                                          (rule "ifthenelse_true_for" (formula "26") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "elimGcdGeq" (formula "26") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "26") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "26") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "concrete_and_3" (formula "26") (term "0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "26") (term "0,0,0,0,0,0,0,1,1,0"))
                                          (rule "ifthenelse_true_for" (formula "26") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "elimGcdLeq" (formula "26") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "26") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "26") (term "1,0,1,1,0,0,0,1,1,0"))
                                          (rule "concrete_and_3" (formula "26") (term "0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "26") (term "0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "0,0,1,1,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "26") (term "0,1,1,0,0,0,1,1,0"))
                                          (rule "ifthenelse_true_for" (formula "26") (term "1,1,0,0,0,1,1,0"))
                                          (rule "elimGcdLeq" (formula "26") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "sub_literals" (formula "26") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "26") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "concrete_and_3" (formula "26") (term "0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "26") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "26") (term "0,0,1,0,0,1,1,0"))
                                          (rule "ifthenelse_true_for" (formula "26") (term "0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "37") (term "0,0"))
                                          (rule "add_zero_left" (formula "37") (term "0"))
                                          (rule "elimGcdGeq_antec" (formula "37") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "37") (term "0,0"))
                                          (rule "concrete_or_2" (formula "37") (term "0"))
                                          (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                          (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0"))
                                          (rule "leq_literals" (formula "37") (term "0"))
                                          (rule "concrete_or_2" (formula "37"))
                                          (rule "newSym_eq" (formula "33") (inst "l=l_0") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                          (rule "times_zero_1" (formula "33") (term "1,1"))
                                          (rule "add_zero_right" (formula "33") (term "1"))
                                          (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "33"))
                                          (rule "eqSymm" (formula "34"))
                                          (rule "applyEq" (formula "31") (term "0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "34"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "34"))
                                          (rule "inEqSimp_homoInEq0" (formula "45") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                          (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "34"))
                                          (rule "inEqSimp_homoInEq1" (formula "46") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                          (rule "applyEq" (formula "46") (term "1,1,0,0,0,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "39") (term "0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "45") (term "1,1,0,0,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "32") (term "1") (ifseqformula "34"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0"))
                                          (rule "elimGcdGeq_antec" (formula "39") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "39") (term "0,0"))
                                          (rule "concrete_or_2" (formula "39") (term "0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                                          (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0"))
                                          (rule "leq_literals" (formula "39") (term "0"))
                                          (rule "concrete_or_2" (formula "39"))
                                          (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "1") (term "0,0"))
                                          (rule "concrete_or_2" (formula "1") (term "0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "leq_literals" (formula "1") (term "0"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "elimGcdLeq_antec" (formula "31") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "leq_literals" (formula "31") (term "0,0"))
                                          (rule "concrete_or_2" (formula "31") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                                          (rule "neg_literal" (formula "31") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "31") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                          (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0"))
                                          (rule "qeq_literals" (formula "31") (term "0"))
                                          (rule "concrete_or_2" (formula "31"))
                                          (rule "elimGcdGeq" (formula "45") (term "1,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "45") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,1,0,0,1"))
                                          (rule "sub_literals" (formula "45") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,1,0,1,0,0,1"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,1,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,1,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "45") (term "0,1,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,0,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,0,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "45") (term "0,0,0,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "0,0,1,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "45") (term "0,1,0,1,0,0,1"))
                                          (rule "add_literals" (formula "45") (term "1,0,1,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "45") (term "0,1,0,1,0,0,1"))
                                          (rule "leq_literals" (formula "45") (term "1,0,1,0,0,1"))
                                          (rule "concrete_and_3" (formula "45") (term "0,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "45") (term "0,0,1,0,0,1"))
                                          (rule "qeq_literals" (formula "45") (term "0,1,0,0,1"))
                                          (rule "ifthenelse_true_for" (formula "45") (term "1,0,0,1"))
                                          (rule "elimGcdGeq" (formula "46") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "46") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                          (rule "sub_literals" (formula "46") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,1,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,1,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,1,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "46") (term "0,1,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,0,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "0,0,1,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "46") (term "0,1,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "1,0,1,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "46") (term "0,1,0,1,0,0,0,1"))
                                          (rule "leq_literals" (formula "46") (term "1,0,1,0,0,0,1"))
                                          (rule "concrete_and_3" (formula "46") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,1,0,0,0,1"))
                                          (rule "qeq_literals" (formula "46") (term "0,1,0,0,0,1"))
                                          (rule "ifthenelse_true_for" (formula "46") (term "1,0,0,0,1"))
                                          (rule "newSym_eq" (formula "44") (inst "l=l_1") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                          (rule "times_zero_1" (formula "44") (term "1,1"))
                                          (rule "add_zero_right" (formula "44") (term "1"))
                                          (rule "applyEqRigid" (formula "45") (term "0,0") (ifseqformula "44"))
                                          (rule "eqSymm" (formula "45"))
                                          (rule "applyEqRigid" (formula "44") (term "0,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "51") (term "0,0,1") (ifseqformula "45"))
                                          (rule "applyEqRigid" (formula "46") (term "0,0") (ifseqformula "45"))
                                          (rule "inEqSimp_homoInEq1" (formula "46") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                          (rule "applyEq" (formula "47") (term "1,1,0,0,0,1,1") (ifseqformula "45"))
                                          (rule "applyEqRigid" (formula "55") (term "0,2,0") (ifseqformula "45"))
                                          (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "52") (term "0,1,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "46") (term "1,1,0,0,0,1") (ifseqformula "45"))
                                          (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "45"))
                                          (rule "applyEqRigid" (formula "42") (term "0") (ifseqformula "45"))
                                          (rule "applyEqRigid" (formula "47") (term "0,0") (ifseqformula "45"))
                                          (rule "inEqSimp_homoInEq0" (formula "47") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                          (rule "applyEq" (formula "51") (term "0,1,1,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "54") (term "0,2,0") (ifseqformula "45"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0"))
                                          (rule "elimGcdGeq_antec" (formula "42") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "add_zero_right" (formula "42") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "42") (term "0,0"))
                                          (rule "concrete_or_2" (formula "42") (term "0"))
                                          (rule "times_zero_1" (formula "42") (term "1,0,0,0,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                                          (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "42") (term "0,0"))
                                          (rule "leq_literals" (formula "42") (term "0"))
                                          (rule "concrete_or_2" (formula "42"))
                                          (rule "elimGcdLeq_antec" (formula "48") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0"))
                                          (rule "neg_literal" (formula "48") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "48") (term "0,0"))
                                          (rule "concrete_or_2" (formula "48") (term "0"))
                                          (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "48") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "48") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                                          (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "48") (term "0,0"))
                                          (rule "qeq_literals" (formula "48") (term "0"))
                                          (rule "concrete_or_2" (formula "48"))
                                          (rule "elimGcdLeq" (formula "46") (term "0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                          (rule "sub_literals" (formula "46") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "46") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,1,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,1,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "46") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,0,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "46") (term "0,0,1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "46") (term "0,0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,1,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "0,1,0,0,0,0,1"))
                                          (rule "qeq_literals" (formula "46") (term "1,0,0,0,0,1"))
                                          (rule "concrete_and_3" (formula "46") (term "0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "46") (term "0,0,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "46") (term "0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "1,0,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "46") (term "0,0,0,0,0,1"))
                                          (rule "leq_literals" (formula "46") (term "0,0,0,0,1"))
                                          (rule "ifthenelse_true_for" (formula "46") (term "0,0,0,1"))
                                          (rule "elimGcdLeq" (formula "47") (term "0,0,0,1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "47") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0,0,0,0,1,1"))
                                          (rule "sub_literals" (formula "47") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,1,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,1,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "47") (term "0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,0,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "47") (term "0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "47") (term "0,0,1,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "47") (term "0,0,0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0,0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,1,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "47") (term "0,1,0,0,0,0,1,1"))
                                          (rule "qeq_literals" (formula "47") (term "1,0,0,0,0,1,1"))
                                          (rule "concrete_and_3" (formula "47") (term "0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "47") (term "0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "47") (term "0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "47") (term "1,0,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "47") (term "0,0,0,0,0,1,1"))
                                          (rule "leq_literals" (formula "47") (term "0,0,0,0,1,1"))
                                          (rule "ifthenelse_true_for" (formula "47") (term "0,0,0,1,1"))
                                          (rule "elimGcdGeq" (formula "47") (term "0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "sub_literals" (formula "47") (term "0,0,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "47") (term "0,0,0,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "47") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "47") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "0,0,1,0,0"))
                                          (rule "mul_literals" (formula "47") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,1,0,0"))
                                          (rule "add_literals" (formula "47") (term "0,1,0,0"))
                                          (rule "leq_literals" (formula "47") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "47") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "47") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "47") (term "0,0,0"))
                                          (rule "add_literals" (formula "47") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "47") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "47") (term "0,0"))
                                          (rule "ifthenelse_true_for" (formula "47") (term "0"))
                                          (rule "elimGcdLeq" (formula "46") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "46") (term "0,0,0,0,0,1,0,0"))
                                          (rule "sub_literals" (formula "46") (term "0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "46") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "0,0,1,0,0"))
                                          (rule "mul_literals" (formula "46") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,1,0,0"))
                                          (rule "add_literals" (formula "46") (term "0,1,0,0"))
                                          (rule "qeq_literals" (formula "46") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "46") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "46") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "46") (term "0,0,0"))
                                          (rule "add_literals" (formula "46") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "46") (term "0,0,0"))
                                          (rule "leq_literals" (formula "46") (term "0,0"))
                                          (rule "ifthenelse_true_for" (formula "46") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "35"))
                                          (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "50"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                          (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "2") (term "0,0"))
                                          (rule "concrete_or_2" (formula "2") (term "0"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (rule "concrete_or_2" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "37"))
                                          (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "add_literals" (formula "39") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "39") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0,1,0"))
                                          (rule "neg_literal" (formula "39") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "39") (term "0,0"))
                                          (rule "concrete_or_2" (formula "39") (term "0"))
                                          (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                                          (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0"))
                                          (rule "qeq_literals" (formula "39") (term "0"))
                                          (rule "concrete_or_2" (formula "39"))
                                          (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "39"))
                                          (rule "leq_literals" (formula "33") (term "0"))
                                          (rule "concrete_or_1" (formula "33"))
                                          (rule "true_left" (formula "33"))
                                          (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "51"))
                                          (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "inEqSimp_subsumption4" (formula "4") (ifseqformula "39"))
                                          (rule "greater_literals" (formula "4") (term "0,0"))
                                          (rule "concrete_and_1" (formula "4") (term "0"))
                                          (rule "mul_literals" (formula "4") (term "0,0"))
                                          (rule "leq_literals" (formula "4") (term "0"))
                                          (rule "concrete_or_1" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "39"))
                                          (rule "leq_literals" (formula "1") (term "0"))
                                          (rule "concrete_or_1" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "36"))
                                          (rule "polySimp_rightDist" (formula "45") (term "0,0"))
                                          (rule "mul_literals" (formula "45") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0"))
                                          (rule "add_literals" (formula "45") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "45") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "neg_literal" (formula "45") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "45") (term "0,0"))
                                          (rule "concrete_or_2" (formula "45") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                                          (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "45") (term "0,0"))
                                          (rule "qeq_literals" (formula "45") (term "0"))
                                          (rule "concrete_or_2" (formula "45"))
                                          (rule "inEqSimp_subsumption0" (formula "51") (ifseqformula "45"))
                                          (rule "leq_literals" (formula "51") (term "0"))
                                          (rule "concrete_or_1" (formula "51"))
                                          (rule "true_left" (formula "51"))
                                          (rule "nnf_imp2or" (formula "22") (term "1,0"))
                                          (rule "nnf_imp2or" (formula "14") (term "1,0,1,0"))
                                          (rule "nnf_imp2or" (formula "13") (term "1,0"))
                                          (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "31"))
                                          (rule "notLeft" (formula "31"))
                                          (rule "commute_and" (formula "61"))
                                          (rule "nnf_imp2or" (formula "28") (term "0"))
                                          (rule "commute_and" (formula "14") (term "0,0"))
                                          (rule "commute_and" (formula "13") (term "0,0"))
                                          (rule "expand_addJint" (formula "52") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "52") (term "0,0,1"))
                                          (rule "expand_addJint" (formula "53") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "53") (term "0,1,0"))
                                          (rule "commute_and" (formula "22") (term "0,0"))
                                          (rule "expand_addJint" (formula "52") (term "1,1,0"))
                                          (rule "polySimp_addComm0" (formula "52") (term "0,1,1,0"))
                                          (rule "nnf_imp2or" (formula "49") (term "0,0,1"))
                                          (rule "jdiv_axiom" (formula "11") (term "1,0"))
                                          (rule "eqSymm" (formula "11"))
                                          (rule "inEqSimp_subsumption1" (formula "11") (term "0,0") (ifseqformula "13"))
                                          (rule "leq_literals" (formula "11") (term "0,0,0"))
                                          (rule "concrete_or_1" (formula "11") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "11") (term "0"))
                                          (rule "eqSymm" (formula "11"))
                                          (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "11"))
                                          (rule "applyEqRigid" (formula "29") (term "1,1,0,0,0,0") (ifseqformula "11"))
                                          (rule "applyEqRigid" (formula "14") (term "1,1,1,0,0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "11"))
                                          (rule "applyEqRigid" (formula "15") (term "1,1,1,0,0") (ifseqformula "11"))
                                          (rule "applyEqRigid" (formula "23") (term "1,1,1,0,0") (ifseqformula "11"))
                                          (rule "applyEqRigid" (formula "15") (term "1,1,0,0,0,1,0") (ifseqformula "11"))
                                          (rule "nnf_imp2or" (formula "49") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "50") (term "0,1,1"))
                                          (rule "expand_moduloInteger" (formula "53") (term "0,1"))
                                          (rule "replace_int_RANGE" (formula "53") (term "1,1,0,1"))
                                          (rule "replace_int_MIN" (formula "53") (term "0,0,1"))
                                          (rule "replace_int_HALFRANGE" (formula "53") (term "0,0,1,0,1"))
                                          (rule "polySimp_homoEq" (formula "53") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,0,1"))
                                          (rule "mul_literals" (formula "53") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,1,0,1"))
                                          (rule "add_literals" (formula "53") (term "0,0,0,1,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "53") (term "0,0,1"))
                                          (rule "mod_axiom" (formula "53") (term "0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "0,1,0,1"))
                                          (rule "mul_literals" (formula "53") (term "0,0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "53") (term "0,0,0,0,1"))
                                          (rule "polySimp_sepPosMonomial" (formula "53") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,1"))
                                          (rule "mul_literals" (formula "53") (term "0,0,1,1"))
                                          (rule "polyDiv_pullOut" (formula "53") (term "0,1,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "equal_literals" (formula "53") (term "0,0,1,1,1"))
                                          (rule "ifthenelse_false" (formula "53") (term "0,1,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0,1,1,1"))
                                          (rule "mul_literals" (formula "53") (term "1,0,0,0,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,1,1"))
                                          (rule "polySimp_addComm0" (formula "53") (term "1,1,1,1"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,1,1,1,1,1"))
                                          (rule "add_literals" (formula "53") (term "0,0,1,1,1,1,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,1,1"))
                                          (rule "mul_literals" (formula "53") (term "0,1,1,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "1,1"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,1,1"))
                                          (rule "add_literals" (formula "53") (term "0,0,1,1"))
                                          (rule "expand_moduloInteger" (formula "54") (term "1,0"))
                                          (rule "replace_int_MIN" (formula "54") (term "0,1,0"))
                                          (rule "replace_int_RANGE" (formula "54") (term "1,1,1,0"))
                                          (rule "replace_int_HALFRANGE" (formula "54") (term "0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "0,1,1,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,1,1,0"))
                                          (rule "mod_axiom" (formula "54") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "1,0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "0,1,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,1,0"))
                                          (rule "polyDiv_pullOut" (formula "54") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,2,0,1,1,0"))
                                          (rule "equal_literals" (formula "54") (term "0,0,1,1,0"))
                                          (rule "ifthenelse_false" (formula "54") (term "0,1,1,0"))
                                          (rule "mul_literals" (formula "54") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,1,0"))
                                          (rule "polySimp_addComm1" (formula "54") (term "0,0,1,1,1,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,0,1,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "54") (term "1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1,1,0"))
                                          (rule "mul_literals" (formula "54") (term "0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "54") (term "0,1,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,1,0"))
                                          (rule "expand_moduloInteger" (formula "53") (term "1,1,0"))
                                          (rule "replace_int_MIN" (formula "53") (term "0,1,1,0"))
                                          (rule "replace_int_HALFRANGE" (formula "53") (term "0,0,1,1,1,0"))
                                          (rule "replace_int_RANGE" (formula "53") (term "1,1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,1,1,1,0"))
                                          (rule "add_literals" (formula "53") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "1,0"))
                                          (rule "add_literals" (formula "53") (term "0,1,0"))
                                          (rule "mod_axiom" (formula "53") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "1,0"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,1,0"))
                                          (rule "add_literals" (formula "53") (term "0,0,1,0"))
                                          (rule "polyDiv_pullOut" (formula "53") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "equal_literals" (formula "53") (term "0,0,1,1,0"))
                                          (rule "ifthenelse_false" (formula "53") (term "0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "53") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,1,0"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,0,1,1,1,0"))
                                          (rule "add_literals" (formula "53") (term "0,0,0,1,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "53") (term "1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,1,0"))
                                          (rule "mul_literals" (formula "53") (term "0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,1,0"))
                                          (rule "add_literals" (formula "53") (term "0,0,1,0"))
                                          (rule "nnf_imp2or" (formula "29") (term "1,0"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,1,0"))
                                          (rule "double_not" (formula "14") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "14") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0"))
                                          (rule "nnf_imp2or" (formula "23") (term "0"))
                                          (rule "nnf_imp2or" (formula "15") (term "0"))
                                          (rule "nnf_imp2or" (formula "14") (term "0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                          (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0"))
                                          (rule "jdiv_axiom" (formula "34") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "0,0,2,1"))
                                          (rule "eqSymm" (formula "34"))
                                          (rule "applyEq" (formula "34") (term "1") (ifseqformula "35"))
                                          (rule "inEqSimp_subsumption6" (formula "34") (term "0,0") (ifseqformula "42"))
                                          (rule "times_zero_1" (formula "34") (term "1,1,0,0,0"))
                                          (rule "greater_literals" (formula "34") (term "0,0,0,0"))
                                          (rule "concrete_and_1" (formula "34") (term "0,0,0"))
                                          (rule "leq_literals" (formula "34") (term "0,0,0"))
                                          (rule "concrete_or_1" (formula "34") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "34") (term "0"))
                                          (rule "polyDiv_pullOut" (formula "34") (term "0") (inst "polyDivCoeff=l_0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,2,0"))
                                          (rule "equal_literals" (formula "34") (term "0,0"))
                                          (rule "ifthenelse_false" (formula "34") (term "0"))
                                          (rule "polySimp_pullOutFactor0" (formula "34") (term "0,0,0"))
                                          (rule "add_literals" (formula "34") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "34") (term "0,0,0"))
                                          (rule "div_literals" (formula "34") (term "0,0"))
                                          (rule "add_zero_left" (formula "34") (term "0"))
                                          (rule "eqClose" (formula "34"))
                                          (rule "true_left" (formula "34"))
                                          (rule "nnf_notAnd" (formula "50") (term "0,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "50") (term "0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "50") (term "0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,0,1"))
                                          (rule "nnf_notAnd" (formula "49") (term "0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "49") (term "0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "49") (term "0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1"))
                                          (rule "mul_literals" (formula "49") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1"))
                                          (rule "nnf_notAnd" (formula "50") (term "0,0,1,1"))
                                          (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "50") (term "1,0,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "50") (term "0,0,1,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,1,1"))
                                          (rule "mul_literals" (formula "50") (term "1,1,0,0,1,1"))
                                          (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "50") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "50") (term "0,0,0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0,1,1"))
                                          (rule "nnf_imp2or" (formula "14") (term "0"))
                                          (rule "nnf_notAnd" (formula "29") (term "0,1,0"))
                                          (rule "double_not" (formula "29") (term "0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "29") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                          (rule "nnf_imp2or" (formula "29") (term "0,1,1,0"))
                                          (rule "nnf_imp2or" (formula "15") (term "0,1,0"))
                                          (rule "jdiv_axiom" (formula "47") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "0,0,2,1"))
                                          (rule "eqSymm" (formula "47"))
                                          (rule "applyEq" (formula "47") (term "1") (ifseqformula "48"))
                                          (rule "inEqSimp_subsumption6" (formula "47") (term "0,0") (ifseqformula "44"))
                                          (rule "greater_literals" (formula "47") (term "0,0,0,0"))
                                          (rule "concrete_and_1" (formula "47") (term "0,0,0"))
                                          (rule "mul_literals" (formula "47") (term "1,0,0,0"))
                                          (rule "leq_literals" (formula "47") (term "0,0,0"))
                                          (rule "concrete_or_1" (formula "47") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "47") (term "0"))
                                          (rule "polyDiv_pullOut" (formula "47") (term "0") (inst "polyDivCoeff=l_1"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,2,0"))
                                          (rule "equal_literals" (formula "47") (term "0,0"))
                                          (rule "ifthenelse_false" (formula "47") (term "0"))
                                          (rule "polySimp_homoEq" (formula "47"))
                                          (rule "polySimp_pullOutFactor0" (formula "47") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "47") (term "1,0,0,0,1,0"))
                                          (rule "times_zero_1" (formula "47") (term "0,0,0,1,0"))
                                          (rule "div_literals" (formula "47") (term "0,0,1,0"))
                                          (rule "add_zero_left" (formula "47") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "47") (term "0"))
                                          (rule "add_literals" (formula "47") (term "1,0"))
                                          (rule "times_zero_1" (formula "47") (term "0"))
                                          (rule "eqClose" (formula "47"))
                                          (rule "true_left" (formula "47"))
                                          (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "30") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "8"))
                                          (rule "insert_constant_value" (formula "30") (term "1,1,0,0,0,0,0,0,0"))
                                          (rule "insert_constant_value" (formula "30") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "insert_constant_value" (formula "30") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "insert_constant_value" (formula "30") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "eqClose" (formula "30") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "concrete_and_3" (formula "30") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "insert_constant_value" (formula "30") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "eqClose" (formula "30") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "concrete_and_3" (formula "30") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "insert_constant_value" (formula "30") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "eqClose" (formula "30") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "concrete_and_3" (formula "30") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "expand_inInt" (formula "30") (term "0,1"))
                                          (rule "expand_inInt" (formula "30") (term "1,1"))
                                          (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "replace_int_MIN" (formula "30") (term "0,1,0,1"))
                                          (rule "replace_int_MAX" (formula "30") (term "1,0,0,1"))
                                          (rule "replace_int_MIN" (formula "30") (term "0,1,1,1"))
                                          (rule "replace_int_MAX" (formula "30") (term "1,0,1,1"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "notLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "notLeft" (formula "30"))
                                          (rule "exLeft" (formula "37") (inst "sk=i_1_2"))
                                          (rule "andLeft" (formula "37"))
                                          (rule "andLeft" (formula "37"))
                                          (rule "exLeft" (formula "36") (inst "sk=i_2_0"))
                                          (rule "andLeft" (formula "36"))
                                          (rule "andLeft" (formula "36"))
                                          (rule "eqSymm" (formula "35"))
                                          (rule "eqSymm" (formula "33") (term "1,0,1,0,1,0"))
                                          (rule "eqSymm" (formula "33") (term "1,1,0,1,0"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,1,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,1,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "0,2,0,0,0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "0,2,0,0,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "0,2,1,1,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "0,2,0,1,0,1,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "34"))
                                          (rule "mul_literals" (formula "34") (term "1,0,0"))
                                          (rule "add_literals" (formula "34") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "37") (term "0"))
                                          (rule "ifthenelse_negated" (formula "35") (term "2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "43") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "43") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "43") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "42") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "42") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "46"))
                                          (rule "inEqSimp_commuteLeq" (formula "44"))
                                          (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "31"))
                                          (rule "inEqSimp_commuteLeq" (formula "30"))
                                          (rule "inEqSimp_commuteLeq" (formula "39"))
                                          (rule "inEqSimp_commuteLeq" (formula "36"))
                                          (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "43") (term "0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,1,0"))
                                          (rule "applyEq" (formula "42") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "43") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "42") (term "1,0,1,0,1,0,1,0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "31") (term "0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "30") (term "0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "27") (term "0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "39") (term "0,0,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "42") (term "1,0,1,0,1,0,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "42") (term "0,0,1,0,0,1,0,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "41") (term "0,0,1,0,0,1,0,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "37"))
                                          (rule "applyEqRigid" (formula "42") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "27"))
                                          (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "37") (term "1") (ifseqformula "27"))
                                          (rule "applyEq" (formula "39") (term "0,0,1,0") (ifseqformula "27"))
                                          (rule "applyEqRigid" (formula "42") (term "1,0,1,0,1,0,1,0") (ifseqformula "27"))
                                          (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "11"))
                                          (rule "applyEqRigid" (formula "38") (term "0,1,0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "41") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
                                          (rule "applyEqRigid" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
                                          (rule "applyEqRigid" (formula "32") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "27"))
                                          (rule "applyEqRigid" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "41") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "40") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "41") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "40") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
                                          (rule "applyEqRigid" (formula "31") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
                                          (rule "applyEqRigid" (formula "32") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "11"))
                                          (rule "applyEqRigid" (formula "32") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                                          (rule "mul_literals" (formula "33") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "37"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_subsumption0" (formula "41") (ifseqformula "22"))
                                          (rule "leq_literals" (formula "41") (term "0"))
                                          (rule "concrete_or_1" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "inEqSimp_subsumption0" (formula "30") (ifseqformula "46"))
                                          (rule "leq_literals" (formula "30") (term "0"))
                                          (rule "concrete_or_1" (formula "30"))
                                          (rule "true_left" (formula "30"))
                                          (rule "elimGcdLeq" (formula "39") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "39") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "39") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "39") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "39") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "39") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "39") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "39") (term "1,0,1,1,0,0,1,1,0"))
                                          (rule "concrete_and_3" (formula "39") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "39") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "39") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "39") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "39") (term "0,1,1,0,0,1,1,0"))
                                          (rule "ifthenelse_true_for" (formula "39") (term "1,1,0,0,1,1,0"))
                                          (rule "elimGcdGeq" (formula "39") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "39") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "39") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "39") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "39") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "39") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "39") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "concrete_and_3" (formula "39") (term "0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "39") (term "1,1,0,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "39") (term "0,0,1,0,0,1,1,0"))
                                          (rule "ifthenelse_true_for" (formula "39") (term "0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "45"))
                                          (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                          (rule "mul_literals" (formula "33") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "33") (term "0"))
                                          (rule "add_literals" (formula "33") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "0"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "15") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "29") (term "0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "15") (term "0,1,0,1,0"))
                                          (rule "double_not" (formula "15") (term "0,0,1,0,1,0"))
                                          (rule "nnf_imp2or" (formula "30") (term "1,0"))
                                          (rule "nnf_imp2or" (formula "31") (term "1,0,1,0"))
                                          (rule "commute_or" (formula "29") (term "0,0"))
                                          (rule "cut_direct" (formula "60") (term "0"))
                                          (branch "CUT: l_0 >= 1 + l_1 TRUE"
                                             (rule "concrete_impl_1" (formula "61"))
                                             (rule "andLeft" (formula "61"))
                                             (rule "inEqSimp_contradInEq1" (formula "59") (term "0") (ifseqformula "60"))
                                             (rule "inEqSimp_homoInEq1" (formula "59") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "59") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "59") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "59") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,0"))
                                             (rule "add_literals" (formula "59") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "59") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "59") (term "0,0,0"))
                                             (rule "leq_literals" (formula "59") (term "0,0"))
                                             (rule "concrete_and_2" (formula "59") (term "0"))
                                             (rule "concrete_impl_2" (formula "59"))
                                             (rule "true_left" (formula "59"))
                                             (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "48"))
                                             (rule "polySimp_rightDist" (formula "59") (term "0,0"))
                                             (rule "mul_literals" (formula "59") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "59") (term "0"))
                                             (rule "add_literals" (formula "59") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "59"))
                                             (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                             (rule "polySimp_elimOne" (formula "59") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "55") (ifseqformula "59"))
                                             (rule "leq_literals" (formula "55") (term "0"))
                                             (rule "concrete_or_1" (formula "55"))
                                             (rule "true_left" (formula "55"))
                                             (rule "nnf_imp2or" (formula "39") (term "1,0"))
                                             (rule "div_axiom" (formula "11") (term "1") (inst "quotient=quotient_0"))
                                             (rule "mul_literals" (formula "11") (term "1,1,1,1,1"))
                                             (rule "qeq_literals" (formula "11") (term "0,1,1"))
                                             (rule "ifthenelse_true_for" (formula "11") (term "1,1"))
                                             (rule "equal_literals" (formula "11") (term "0"))
                                             (rule "concrete_or_2" (formula "11"))
                                             (rule "andLeft" (formula "11"))
                                             (rule "andLeft" (formula "11"))
                                             (rule "polySimp_addComm1" (formula "13") (term "1"))
                                             (rule "add_literals" (formula "13") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "13"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0"))
                                             (rule "applyEq" (formula "42") (term "1,1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "26") (term "1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "43") (term "1,1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEqRigid" (formula "15") (term "1,0") (ifseqformula "11"))
                                             (rule "applyEqRigid" (formula "18") (term "1,0,0,0,1,0") (ifseqformula "11"))
                                             (rule "applyEqRigid" (formula "18") (term "1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "32") (term "1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "40") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "40"))
                                             (rule "polySimp_addComm1" (formula "40") (term "0"))
                                             (rule "applyEqRigid" (formula "33") (term "1,1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEqRigid" (formula "17") (term "1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "20"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0"))
                                             (rule "applyEqRigid" (formula "34") (term "1,1,1,0,0,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "34") (term "1,1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "14") (term "1") (ifseqformula "11"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1"))
                                             (rule "mul_literals" (formula "13") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "40"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1"))
                                             (rule "mul_literals" (formula "40") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                             (rule "mul_literals" (formula "20") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "13"))
                                             (rule "polySimp_rightDist" (formula "52") (term "0,0"))
                                             (rule "mul_literals" (formula "52") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "52") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0,0"))
                                             (rule "add_literals" (formula "52") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "52") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "52"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "52") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "neg_literal" (formula "52") (term "0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "52") (term "0,0"))
                                             (rule "concrete_or_2" (formula "52") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0"))
                                             (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,0"))
                                             (rule "add_literals" (formula "52") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "52") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "52") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,0"))
                                             (rule "add_literals" (formula "52") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "52") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "52") (term "0,0"))
                                             (rule "qeq_literals" (formula "52") (term "0"))
                                             (rule "concrete_or_2" (formula "52"))
                                             (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "13"))
                                             (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                                             (rule "mul_literals" (formula "37") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "37") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                             (rule "add_literals" (formula "37") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "37") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "13"))
                                             (rule "polySimp_rightDist" (formula "60") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0"))
                                             (rule "mul_literals" (formula "60") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "60") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "60") (term "0,0"))
                                             (rule "add_literals" (formula "60") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "60") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "60"))
                                             (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "60") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                             (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "60") (term "0,0"))
                                             (rule "concrete_or_2" (formula "60") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0"))
                                             (rule "neg_literal" (formula "60") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "60") (term "0,0"))
                                             (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "60") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "60") (term "0,0"))
                                             (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "60") (term "0,0"))
                                             (rule "qeq_literals" (formula "60") (term "0"))
                                             (rule "concrete_or_2" (formula "60"))
                                             (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "41"))
                                             (rule "times_zero_1" (formula "40") (term "0,0"))
                                             (rule "add_zero_left" (formula "40") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                             (rule "mul_literals" (formula "40") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "13"))
                                             (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "29") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                                             (rule "times_zero_1" (formula "19") (term "0,0"))
                                             (rule "add_zero_left" (formula "19") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                             (rule "mul_literals" (formula "19") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "52"))
                                             (rule "polySimp_mulAssoc" (formula "12") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "12") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1,0"))
                                             (rule "neg_literal" (formula "12") (term "0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "12") (term "0,0"))
                                             (rule "concrete_or_2" (formula "12") (term "0"))
                                             (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "12") (term "0,0"))
                                             (rule "qeq_literals" (formula "12") (term "0"))
                                             (rule "concrete_or_2" (formula "12"))
                                             (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "14"))
                                             (rule "mul_literals" (formula "17") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                             (rule "add_literals" (formula "17") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                             (rule "mul_literals" (formula "17") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "17") (term "0,0"))
                                             (rule "concrete_or_2" (formula "17") (term "0"))
                                             (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "17") (term "0,0"))
                                             (rule "leq_literals" (formula "17") (term "0"))
                                             (rule "concrete_or_2" (formula "17"))
                                             (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "17"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (rule "concrete_or_1" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "inEqSimp_exactShadow3" (formula "68") (ifseqformula "56"))
                                             (rule "polySimp_rightDist" (formula "68") (term "0,0"))
                                             (rule "mul_literals" (formula "68") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "68") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "68"))
                                             (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                             (rule "polySimp_elimOne" (formula "68") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "63") (ifseqformula "68"))
                                             (rule "inEqSimp_homoInEq0" (formula "63") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "63") (term "1,0,0"))
                                             (rule "mul_literals" (formula "63") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "63") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0"))
                                             (rule "add_literals" (formula "63") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "63") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "63") (term "0,0"))
                                             (rule "qeq_literals" (formula "63") (term "0"))
                                             (rule "concrete_or_1" (formula "63"))
                                             (rule "true_left" (formula "63"))
                                             (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "56"))
                                             (rule "times_zero_1" (formula "59") (term "0,0"))
                                             (rule "add_zero_left" (formula "59") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "59") (ifseqformula "17"))
                                             (rule "leq_literals" (formula "59") (term "0"))
                                             (rule "concrete_or_1" (formula "59"))
                                             (rule "true_left" (formula "59"))
                                             (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "40"))
                                             (rule "times_zero_1" (formula "38") (term "0,0"))
                                             (rule "add_zero_left" (formula "38") (term "0"))
                                             (rule "inEqSimp_subsumption6" (formula "38") (ifseqformula "17"))
                                             (rule "greater_literals" (formula "38") (term "0,0"))
                                             (rule "concrete_and_1" (formula "38") (term "0"))
                                             (rule "mul_literals" (formula "38") (term "1,0"))
                                             (rule "leq_literals" (formula "38") (term "0"))
                                             (rule "concrete_or_1" (formula "38"))
                                             (rule "true_left" (formula "38"))
                                             (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "31"))
                                             (rule "times_zero_1" (formula "29") (term "0,0"))
                                             (rule "add_zero_left" (formula "29") (term "0"))
                                             (rule "inEqSimp_subsumption6" (formula "29") (ifseqformula "17"))
                                             (rule "greater_literals" (formula "29") (term "0,0"))
                                             (rule "concrete_and_1" (formula "29") (term "0"))
                                             (rule "mul_literals" (formula "29") (term "1,0"))
                                             (rule "leq_literals" (formula "29") (term "0"))
                                             (rule "concrete_or_1" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "67"))
                                             (rule "times_zero_1" (formula "62") (term "0,0"))
                                             (rule "add_zero_left" (formula "62") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "62"))
                                             (rule "mul_literals" (formula "62") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "62") (ifseqformula "17"))
                                             (rule "leq_literals" (formula "62") (term "0"))
                                             (rule "concrete_or_1" (formula "62"))
                                             (rule "true_left" (formula "62"))
                                             (rule "div_axiom" (formula "73") (term "0,1,1,1") (inst "quotient=quotient_1"))
                                             (rule "qeq_literals" (formula "73") (term "0,1,1"))
                                             (rule "ifthenelse_true_for" (formula "73") (term "1,1"))
                                             (rule "equal_literals" (formula "73") (term "0"))
                                             (rule "concrete_or_2" (formula "73"))
                                             (rule "mul_literals" (formula "73") (term "1,1,1"))
                                             (rule "andLeft" (formula "73"))
                                             (rule "andLeft" (formula "73"))
                                             (rule "polySimp_addAssoc" (formula "75") (term "0,1"))
                                             (rule "add_literals" (formula "75") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "75") (term "1"))
                                             (rule "add_literals" (formula "75") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "74"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "74") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "75"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "75") (term "0"))
                                             (rule "applyEq" (formula "76") (term "0,1,1,0") (ifseqformula "73"))
                                             (rule "polySimp_addComm1" (formula "76") (term "1,0"))
                                             (rule "applyEq" (formula "77") (term "0,1,1,0") (ifseqformula "73"))
                                             (rule "polySimp_addComm1" (formula "77") (term "1,0"))
                                             (rule "applyEq" (formula "76") (term "0,1,1,1") (ifseqformula "73"))
                                             (rule "polySimp_addComm1" (formula "76") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "74"))
                                             (rule "polySimp_mulComm0" (formula "74") (term "1"))
                                             (rule "polySimp_rightDist" (formula "74") (term "1"))
                                             (rule "mul_literals" (formula "74") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "75"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1"))
                                             (rule "polySimp_rightDist" (formula "75") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,1"))
                                             (rule "mul_literals" (formula "75") (term "0,1"))
                                             (rule "elimGcdLeq_antec" (formula "75") (inst "elimGcdRightDiv=add(Z(0(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0,1,0"))
                                             (rule "neg_literal" (formula "75") (term "0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "75") (term "0,0"))
                                             (rule "concrete_or_2" (formula "75") (term "0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0"))
                                             (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "75") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "75") (term "0,0,0"))
                                             (rule "add_literals" (formula "75") (term "0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "75") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "75") (term "0,0,0"))
                                             (rule "add_literals" (formula "75") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0"))
                                             (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "75") (term "0,0"))
                                             (rule "qeq_literals" (formula "75") (term "0"))
                                             (rule "concrete_or_2" (formula "75"))
                                             (rule "elimGcdGeq_antec" (formula "74") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "74") (term "0,0"))
                                             (rule "concrete_or_2" (formula "74") (term "0"))
                                             (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                                             (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "74") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "74") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "74") (term "0,0,0"))
                                             (rule "add_literals" (formula "74") (term "0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "74") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "74") (term "0,0,0"))
                                             (rule "add_literals" (formula "74") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                                             (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "74") (term "0,0"))
                                             (rule "leq_literals" (formula "74") (term "0"))
                                             (rule "concrete_or_2" (formula "74"))
                                             (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "75"))
                                             (rule "times_zero_1" (formula "62") (term "0,0"))
                                             (rule "add_zero_left" (formula "62") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "62"))
                                             (rule "mul_literals" (formula "62") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "62") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "62") (term "0,0"))
                                             (rule "concrete_or_2" (formula "62") (term "0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "62") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "62") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "62") (term "0,0"))
                                             (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "62") (term "0,0"))
                                             (rule "leq_literals" (formula "62") (term "0"))
                                             (rule "concrete_or_2" (formula "62"))
                                             (rule "inEqSimp_exactShadow3" (formula "75") (ifseqformula "67"))
                                             (rule "polySimp_rightDist" (formula "75") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0"))
                                             (rule "mul_literals" (formula "75") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "75") (term "0"))
                                             (rule "add_literals" (formula "75") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "75"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "75") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0,0,0,1,0"))
                                             (rule "neg_literal" (formula "75") (term "0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "75") (term "0,0"))
                                             (rule "concrete_or_2" (formula "75") (term "0"))
                                             (rule "mul_literals" (formula "75") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "75") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "75") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0"))
                                             (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "75") (term "0,0"))
                                             (rule "qeq_literals" (formula "75") (term "0"))
                                             (rule "concrete_or_2" (formula "75"))
                                             (rule "inEqSimp_exactShadow3" (formula "76") (ifseqformula "68"))
                                             (rule "polySimp_rightDist" (formula "76") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "76") (term "1,0,0"))
                                             (rule "mul_literals" (formula "76") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "76") (term "0"))
                                             (rule "polySimp_addComm1" (formula "76") (term "0,0"))
                                             (rule "add_literals" (formula "76") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "76"))
                                             (rule "polySimp_mulComm0" (formula "76") (term "1"))
                                             (rule "polySimp_rightDist" (formula "76") (term "1"))
                                             (rule "mul_literals" (formula "76") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "76") (term "1,1"))
                                             (rule "inEqSimp_antiSymm" (formula "62") (ifseqformula "75"))
                                             (rule "applyEq" (formula "79") (term "0,1,1") (ifseqformula "62"))
                                             (rule "mul_literals" (formula "79") (term "1,1"))
                                             (rule "add_literals" (formula "79") (term "1"))
                                             (rule "applyEqRigid" (formula "78") (term "0,1,1") (ifseqformula "62"))
                                             (rule "mul_literals" (formula "78") (term "1,1"))
                                             (rule "add_literals" (formula "78") (term "1"))
                                             (rule "applyEq" (formula "76") (term "0") (ifseqformula "62"))
                                             (rule "leq_literals" (formula "76"))
                                             (rule "true_left" (formula "76"))
                                             (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "62"))
                                             (rule "qeq_literals" (formula "63"))
                                             (rule "true_left" (formula "63"))
                                             (rule "applyEqRigid" (formula "75") (term "0,1,1") (ifseqformula "62"))
                                             (rule "mul_literals" (formula "75") (term "1,1"))
                                             (rule "add_literals" (formula "75") (term "1"))
                                             (rule "applyEq" (formula "79") (term "0,1,0,1,0") (ifseqformula "62"))
                                             (rule "mul_literals" (formula "79") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "79") (term "0,1,0"))
                                             (rule "applyEq" (formula "78") (term "0,1,0,1,0") (ifseqformula "62"))
                                             (rule "mul_literals" (formula "78") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "78") (term "0,1,0"))
                                             (rule "applyEq" (formula "74") (term "1") (ifseqformula "62"))
                                             (rule "applyEq" (formula "78") (term "0,1,0,1,1") (ifseqformula "62"))
                                             (rule "mul_literals" (formula "78") (term "1,0,1,1"))
                                             (rule "add_literals" (formula "78") (term "0,1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "75") (ifseqformula "17"))
                                             (rule "leq_literals" (formula "75") (term "0"))
                                             (rule "concrete_or_1" (formula "75"))
                                             (rule "true_left" (formula "75"))
                                             (rule "inEqSimp_subsumption0" (formula "76") (ifseqformula "67"))
                                             (rule "leq_literals" (formula "76") (term "0"))
                                             (rule "concrete_or_1" (formula "76"))
                                             (rule "true_left" (formula "76"))
                                             (rule "inEqSimp_subsumption1" (formula "75") (ifseqformula "63"))
                                             (rule "leq_literals" (formula "75") (term "0"))
                                             (rule "concrete_or_1" (formula "75"))
                                             (rule "true_left" (formula "75"))
                                             (rule "cut_direct" (formula "84") (term "0,0"))
                                             (branch "CUT: self.table[n_0 * 2] = null TRUE"
                                                (rule "concrete_not_1" (formula "85") (term "0"))
                                                (rule "concrete_and_2" (formula "85"))
                                                (rule "false_right" (formula "85"))
                                                (rule "nnf_imp2or" (formula "48") (term "1,0"))
                                                (rule "nnf_notAnd" (formula "38") (term "0,1,0,1,0"))
                                                (rule "double_not" (formula "38") (term "0,0,1,0,1,0"))
                                                (rule "nnf_notOr" (formula "36") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "36") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1,1,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "36") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "36") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "36") (term "0,0,0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "47") (term "0"))
                                                (rule "nnf_imp2or" (formula "37") (term "0"))
                                                (rule "commute_or" (formula "71") (term "0,0"))
                                                (rule "commute_or" (formula "72") (term "0,0"))
                                                (rule "commute_or_2" (formula "20") (term "0,1,1,0"))
                                                (rule "commute_or_2" (formula "29") (term "0"))
                                                (rule "shift_paren_or" (formula "21") (term "0,1,0"))
                                                (rule "commute_and" (formula "38") (term "0,0,1,0"))
                                                (rule "nnf_imp2or" (formula "48") (term "0"))
                                                (rule "nnf_imp2or" (formula "38") (term "0"))
                                                (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "47") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "47") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                                (rule "mul_literals" (formula "47") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "48") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "48") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                (rule "mul_literals" (formula "48") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "47") (term "0,1,0"))
                                                (rule "double_not" (formula "47") (term "0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "47") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "47") (term "0,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "47") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,1,0"))
                                                (rule "nnf_notAnd" (formula "48") (term "0,1,0"))
                                                (rule "double_not" (formula "48") (term "0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "48") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,0"))
                                                (rule "nnf_imp2or" (formula "38") (term "0,1,0"))
                                                (rule "nnf_imp2or" (formula "47") (term "0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "48") (term "0,1,1,0"))
                                                (rule "nnf_notOr" (formula "36") (term "1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "36") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "36") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "36") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "36") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "36") (term "0,0,0,0,1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "0") (ifseqformula "7"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "80"))
                                                (rule "concrete_or_2" (formula "1"))
                                                (rule "nnf_notAnd" (formula "39") (term "0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0"))
                                                (rule "nnf_notAnd" (formula "48") (term "0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "49") (term "0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "37") (term "1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "37") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "37") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "37") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "49") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "49") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,0,1,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "49") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "49") (term "0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "49") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "1,0,1,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "49") (term "0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "49") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "30") (term "0,0"))
                                                (rule "commute_or_2" (formula "38") (term "0"))
                                                (rule "cnf_rightDist" (formula "72") (term "0"))
                                                (rule "cnf_rightDist" (formula "73") (term "0"))
                                                (rule "commute_or_2" (formula "22") (term "0,0,1,0"))
                                                (rule "inEqSimp_or_weaken2" (formula "22") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "1,0,1,0,1,0"))
                                                (rule "add_literals" (formula "22") (term "0,1,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "22") (term "1,0,1,0,1,0"))
                                                (rule "eqClose" (formula "22") (term "0,1,0,1,0"))
                                                (rule "ifthenelse_true_for" (formula "22") (term "1,0,1,0"))
                                                (rule "commute_or" (formula "21") (term "0,0,1,1,0"))
                                                (rule "distr_forallAnd" (formula "72"))
                                                (rule "andLeft" (formula "72"))
                                                (rule "distr_forallAnd" (formula "74"))
                                                (rule "andLeft" (formula "74"))
                                                (rule "shift_paren_or" (formula "39") (term "0,1,0"))
                                                (rule "commute_or_2" (formula "48") (term "0,1,1,0"))
                                                (rule "commute_or_2" (formula "72") (term "0"))
                                                (rule "commute_or_2" (formula "74") (term "0"))
                                                (rule "commute_or" (formula "38") (term "0,0"))
                                                (rule "shift_paren_or" (formula "72") (term "0"))
                                                (rule "shift_paren_or" (formula "74") (term "0"))
                                                (rule "commute_or" (formula "71") (term "0,0"))
                                                (rule "commute_or" (formula "73") (term "0,0"))
                                                (rule "commute_and" (formula "37") (term "1,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "48") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "22") (term "0,0,1,0"))
                                                (rule "cut_direct" (formula "79") (term "0"))
                                                (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 TRUE"
                                                   (rule "concrete_impl_1" (formula "80"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "80"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5"))
                                                   (rule "mul_literals" (formula "5") (term "1,0"))
                                                   (rule "add_zero_right" (formula "5") (term "0"))
                                                   (rule "applyEq" (formula "78") (term "0,1") (ifseqformula "80"))
                                                   (rule "polySimp_homoEq" (formula "78") (term "1"))
                                                   (rule "times_zero_2" (formula "78") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "78") (term "0,1"))
                                                   (rule "applyEq" (formula "75") (term "0") (ifseqformula "80"))
                                                   (rule "leq_literals" (formula "75"))
                                                   (rule "true_left" (formula "75"))
                                                   (rule "applyEq" (formula "75") (term "0") (ifseqformula "79"))
                                                   (rule "qeq_literals" (formula "75"))
                                                   (rule "true_left" (formula "75"))
                                                   (rule "applyEq" (formula "6") (term "0") (ifseqformula "78"))
                                                   (rule "inEqSimp_homoInEq1" (formula "6"))
                                                   (rule "times_zero_2" (formula "6") (term "1,0"))
                                                   (rule "add_zero_right" (formula "6") (term "0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "76") (term "1"))
                                                   (rule "mul_literals" (formula "76") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                   (rule "mul_literals" (formula "5") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                   (rule "mul_literals" (formula "6") (term "1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "76") (term "0") (ifseqformula "77"))
                                                   (rule "inEqSimp_homoInEq1" (formula "76") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "76") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "76") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "76") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "76") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "76") (term "0,0,0"))
                                                   (rule "add_literals" (formula "76") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "76") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "76") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "76") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "76") (term "0"))
                                                   (rule "concrete_impl_2" (formula "76"))
                                                   (rule "true_left" (formula "76"))
                                                   (rule "inEqSimp_contradInEq5" (formula "5") (ifseqformula "59"))
                                                   (rule "greater_literals" (formula "5") (term "0,0"))
                                                   (rule "concrete_impl_1" (formula "5") (term "0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0"))
                                                   (rule "qeq_literals" (formula "5") (term "0"))
                                                   (rule "concrete_and_2" (formula "5"))
                                                   (rule "closeFalse" (formula "5"))
                                                )
                                                (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 FALSE"
                                                   (rule "concrete_impl_2" (formula "79"))
                                                   (rule "true_left" (formula "79"))
                                                   (rule "inEqSimp_leqRight" (formula "80"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "replace_known_left" (formula "79") (term "0") (ifseqformula "1"))
                                                   (rule "concrete_impl_1" (formula "79"))
                                                   (rule "applyEq" (formula "77") (term "0") (ifseqformula "79"))
                                                   (rule "inEqSimp_homoInEq1" (formula "77"))
                                                   (rule "polySimp_mulComm0" (formula "77") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "77") (term "1,0"))
                                                   (rule "mul_literals" (formula "77") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "77") (term "0"))
                                                   (rule "add_literals" (formula "77") (term "0,0"))
                                                   (rule "applyEq" (formula "7") (term "0") (ifseqformula "79"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                   (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                   (rule "add_literals" (formula "7") (term "0,0,0"))
                                                   (rule "applyEq" (formula "76") (term "0") (ifseqformula "79"))
                                                   (rule "inEqSimp_homoInEq0" (formula "76"))
                                                   (rule "polySimp_mulComm0" (formula "76") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "76") (term "1,0"))
                                                   (rule "mul_literals" (formula "76") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "76") (term "0"))
                                                   (rule "add_literals" (formula "76") (term "0,0"))
                                                   (rule "applyEq" (formula "6") (term "0") (ifseqformula "79"))
                                                   (rule "inEqSimp_homoInEq1" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                   (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                   (rule "mul_literals" (formula "7") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "76"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                   (rule "mul_literals" (formula "6") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                   (rule "inEqSimp_subsumption4" (formula "76") (ifseqformula "69"))
                                                   (rule "greater_literals" (formula "76") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "76") (term "0"))
                                                   (rule "mul_literals" (formula "76") (term "0,0"))
                                                   (rule "leq_literals" (formula "76") (term "0"))
                                                   (rule "concrete_or_1" (formula "76"))
                                                   (rule "true_left" (formula "76"))
                                                   (rule "inEqSimp_contradInEq5" (formula "7") (ifseqformula "71"))
                                                   (rule "greater_literals" (formula "7") (term "0,0"))
                                                   (rule "concrete_impl_1" (formula "7") (term "0"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                   (rule "mul_literals" (formula "7") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                   (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                   (rule "add_literals" (formula "7") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0"))
                                                   (rule "add_literals" (formula "7") (term "0"))
                                                   (rule "leq_literals" (formula "7"))
                                                   (rule "closeFalse" (formula "7"))
                                                )
                                             )
                                             (branch "CUT: self.table[n_0 * 2] = null FALSE"
                                                (rule "concrete_not_2" (formula "85") (term "0"))
                                                (rule "concrete_and_1" (formula "85"))
                                                (rule "notRight" (formula "85"))
                                                (rule "applyEq" (formula "85") (term "0") (ifseqformula "1"))
                                                (rule "nnf_imp2or" (formula "48") (term "1,0"))
                                                (rule "nnf_notAnd" (formula "38") (term "0,1,0,1,0"))
                                                (rule "double_not" (formula "38") (term "0,0,1,0,1,0"))
                                                (rule "nnf_notOr" (formula "36") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "36") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "36") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "36") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1,1,1,1,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "36") (term "0,0,0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "47") (term "0"))
                                                (rule "nnf_imp2or" (formula "37") (term "0"))
                                                (rule "commute_or" (formula "71") (term "0,0"))
                                                (rule "commute_or" (formula "72") (term "0,0"))
                                                (rule "commute_or_2" (formula "20") (term "0,1,1,0"))
                                                (rule "commute_or_2" (formula "29") (term "0"))
                                                (rule "shift_paren_or" (formula "21") (term "0,1,0"))
                                                (rule "commute_and" (formula "38") (term "0,0,1,0"))
                                                (rule "nnf_imp2or" (formula "48") (term "0"))
                                                (rule "nnf_imp2or" (formula "38") (term "0"))
                                                (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "47") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "47") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                                (rule "mul_literals" (formula "47") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "48") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                (rule "mul_literals" (formula "48") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "48") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "47") (term "0,1,0"))
                                                (rule "double_not" (formula "47") (term "0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "47") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "47") (term "0,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "47") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,1,0"))
                                                (rule "nnf_notAnd" (formula "48") (term "0,1,0"))
                                                (rule "double_not" (formula "48") (term "0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "48") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,0"))
                                                (rule "nnf_imp2or" (formula "38") (term "0,1,0"))
                                                (rule "nnf_imp2or" (formula "47") (term "0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "48") (term "0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "36") (term "0,0,0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "36") (term "1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "36") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "36") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "36") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "36") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "0") (ifseqformula "7"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "80"))
                                                (rule "concrete_or_2" (formula "1"))
                                                (rule "nnf_notAnd" (formula "39") (term "0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0"))
                                                (rule "nnf_notAnd" (formula "48") (term "0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "49") (term "0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "37") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "37") (term "1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "37") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "37") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "49") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "49") (term "0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "49") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "49") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "1,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "49") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,0,1,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "49") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "49") (term "0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "49") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "30") (term "0,0"))
                                                (rule "commute_or_2" (formula "38") (term "0"))
                                                (rule "cnf_rightDist" (formula "72") (term "0"))
                                                (rule "cnf_rightDist" (formula "73") (term "0"))
                                                (rule "commute_or_2" (formula "22") (term "0,0,1,0"))
                                                (rule "inEqSimp_or_weaken2" (formula "22") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "1,0,1,0,1,0"))
                                                (rule "add_literals" (formula "22") (term "0,1,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "22") (term "1,0,1,0,1,0"))
                                                (rule "eqClose" (formula "22") (term "0,1,0,1,0"))
                                                (rule "ifthenelse_true_for" (formula "22") (term "1,0,1,0"))
                                                (rule "commute_or" (formula "21") (term "0,0,1,1,0"))
                                                (rule "distr_forallAnd" (formula "72"))
                                                (rule "andLeft" (formula "72"))
                                                (rule "distr_forallAnd" (formula "74"))
                                                (rule "andLeft" (formula "74"))
                                                (rule "shift_paren_or" (formula "39") (term "0,1,0"))
                                                (rule "commute_or_2" (formula "48") (term "0,1,1,0"))
                                                (rule "commute_or_2" (formula "72") (term "0"))
                                                (rule "commute_or_2" (formula "74") (term "0"))
                                                (rule "commute_or" (formula "38") (term "0,0"))
                                                (rule "shift_paren_or" (formula "72") (term "0"))
                                                (rule "shift_paren_or" (formula "74") (term "0"))
                                                (rule "commute_or" (formula "71") (term "0,0"))
                                                (rule "commute_or" (formula "73") (term "0,0"))
                                                (rule "commute_and" (formula "37") (term "1,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "48") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "22") (term "0,0,1,0"))
                                                (rule "cut_direct" (formula "79") (term "0"))
                                                (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 TRUE"
                                                   (rule "concrete_impl_1" (formula "80"))
                                                   (rule "applyEq" (formula "75") (term "0") (ifseqformula "80"))
                                                   (rule "leq_literals" (formula "75"))
                                                   (rule "true_left" (formula "75"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "79"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5"))
                                                   (rule "mul_literals" (formula "5") (term "1,0"))
                                                   (rule "add_zero_right" (formula "5") (term "0"))
                                                   (rule "applyEq" (formula "77") (term "0,1") (ifseqformula "79"))
                                                   (rule "polySimp_homoEq" (formula "77") (term "1"))
                                                   (rule "times_zero_2" (formula "77") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "77") (term "0,1"))
                                                   (rule "applyEq" (formula "6") (term "0") (ifseqformula "79"))
                                                   (rule "inEqSimp_homoInEq1" (formula "6"))
                                                   (rule "mul_literals" (formula "6") (term "1,0"))
                                                   (rule "add_zero_right" (formula "6") (term "0"))
                                                   (rule "applyEq" (formula "75") (term "0") (ifseqformula "79"))
                                                   (rule "qeq_literals" (formula "75"))
                                                   (rule "true_left" (formula "75"))
                                                   (rule "polySimp_sepPosMonomial" (formula "76") (term "1"))
                                                   (rule "mul_literals" (formula "76") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                   (rule "mul_literals" (formula "5") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                   (rule "mul_literals" (formula "6") (term "1"))
                                                   (rule "inEqSimp_contradInEq5" (formula "6") (ifseqformula "60"))
                                                   (rule "greater_literals" (formula "6") (term "0,0"))
                                                   (rule "concrete_impl_1" (formula "6") (term "0"))
                                                   (rule "mul_literals" (formula "6") (term "1,0"))
                                                   (rule "qeq_literals" (formula "6") (term "0"))
                                                   (rule "concrete_and_2" (formula "6"))
                                                   (rule "closeFalse" (formula "6"))
                                                )
                                                (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 FALSE"
                                                   (rule "concrete_impl_2" (formula "79"))
                                                   (rule "true_left" (formula "79"))
                                                   (rule "inEqSimp_leqRight" (formula "80"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "replace_known_left" (formula "79") (term "0") (ifseqformula "1"))
                                                   (rule "concrete_impl_1" (formula "79"))
                                                   (rule "applyEq" (formula "77") (term "0") (ifseqformula "79"))
                                                   (rule "inEqSimp_homoInEq1" (formula "77"))
                                                   (rule "polySimp_mulComm0" (formula "77") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "77") (term "1,0"))
                                                   (rule "mul_literals" (formula "77") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "77") (term "0"))
                                                   (rule "add_literals" (formula "77") (term "0,0"))
                                                   (rule "applyEq" (formula "76") (term "0") (ifseqformula "79"))
                                                   (rule "inEqSimp_homoInEq0" (formula "76"))
                                                   (rule "polySimp_mulComm0" (formula "76") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "76") (term "1,0"))
                                                   (rule "mul_literals" (formula "76") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "76") (term "0"))
                                                   (rule "add_literals" (formula "76") (term "0,0"))
                                                   (rule "applyEq" (formula "7") (term "0") (ifseqformula "79"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                   (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                   (rule "add_literals" (formula "7") (term "0,0,0"))
                                                   (rule "applyEq" (formula "6") (term "0") (ifseqformula "79"))
                                                   (rule "inEqSimp_homoInEq1" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                   (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "76"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                   (rule "mul_literals" (formula "7") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                   (rule "mul_literals" (formula "6") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                   (rule "inEqSimp_subsumption6" (formula "77") (ifseqformula "65"))
                                                   (rule "greater_literals" (formula "77") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "77") (term "0"))
                                                   (rule "times_zero_1" (formula "77") (term "1,0"))
                                                   (rule "leq_literals" (formula "77") (term "0"))
                                                   (rule "concrete_or_1" (formula "77"))
                                                   (rule "true_left" (formula "77"))
                                                   (rule "inEqSimp_subsumption1" (formula "66") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "66") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "66") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "66") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "66") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "66") (term "0,0,0"))
                                                   (rule "add_literals" (formula "66") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "66") (term "0,0"))
                                                   (rule "add_literals" (formula "66") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "66") (term "1,0,0"))
                                                   (rule "add_literals" (formula "66") (term "0,0"))
                                                   (rule "qeq_literals" (formula "66") (term "0"))
                                                   (rule "concrete_or_1" (formula "66"))
                                                   (rule "true_left" (formula "66"))
                                                   (rule "inEqSimp_subsumption4" (formula "75") (ifseqformula "68"))
                                                   (rule "mul_literals" (formula "75") (term "0,1,0"))
                                                   (rule "greater_literals" (formula "75") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "75") (term "0"))
                                                   (rule "leq_literals" (formula "75") (term "0"))
                                                   (rule "concrete_or_1" (formula "75"))
                                                   (rule "true_left" (formula "75"))
                                                   (rule "inEqSimp_contradInEq5" (formula "7") (ifseqformula "70"))
                                                   (rule "greater_literals" (formula "7") (term "0,0"))
                                                   (rule "concrete_impl_1" (formula "7") (term "0"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                   (rule "mul_literals" (formula "7") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                   (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                   (rule "add_literals" (formula "7") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0"))
                                                   (rule "add_literals" (formula "7") (term "0"))
                                                   (rule "leq_literals" (formula "7"))
                                                   (rule "closeFalse" (formula "7"))
                                                )
                                             )
                                          )
                                          (branch "CUT: l_0 >= 1 + l_1 FALSE"
                                             (rule "concrete_impl_2" (formula "60"))
                                             (rule "true_left" (formula "60"))
                                             (rule "inEqSimp_geqRight" (formula "65"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "1"))
                                             (rule "times_zero_1" (formula "52") (term "0,0"))
                                             (rule "add_zero_left" (formula "52") (term "0"))
                                             (rule "cut_direct" (formula "60") (term "0"))
                                             (branch "CUT: l_0 <= -1 + l_1 TRUE"
                                                (rule "concrete_impl_1" (formula "61"))
                                                (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "60"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                (rule "concrete_or_1" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "59"))
                                                (rule "times_zero_1" (formula "51") (term "0,0"))
                                                (rule "add_zero_left" (formula "51") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                                                (rule "mul_literals" (formula "51") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "55") (ifseqformula "51"))
                                                (rule "leq_literals" (formula "55") (term "0"))
                                                (rule "concrete_or_1" (formula "55"))
                                                (rule "true_left" (formula "55"))
                                                (rule "nnf_imp2or" (formula "39") (term "1,0"))
                                                (rule "div_axiom" (formula "11") (term "1") (inst "quotient=quotient_0"))
                                                (rule "mul_literals" (formula "11") (term "1,1,1,1,1"))
                                                (rule "qeq_literals" (formula "11") (term "0,1,1"))
                                                (rule "ifthenelse_true_for" (formula "11") (term "1,1"))
                                                (rule "equal_literals" (formula "11") (term "0"))
                                                (rule "concrete_or_2" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "polySimp_addComm1" (formula "13") (term "1"))
                                                (rule "add_literals" (formula "13") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "12"))
                                                (rule "inEqSimp_homoInEq1" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                (rule "applyEqRigid" (formula "26") (term "1,1,0,0") (ifseqformula "11"))
                                                (rule "applyEqRigid" (formula "34") (term "1,1,1,0,0") (ifseqformula "11"))
                                                (rule "applyEq" (formula "34") (term "1,1,1,0,0,1,0") (ifseqformula "11"))
                                                (rule "applyEq" (formula "43") (term "1,1,1,0,0") (ifseqformula "11"))
                                                (rule "applyEqRigid" (formula "42") (term "1,1,1,0,0") (ifseqformula "11"))
                                                (rule "applyEqRigid" (formula "33") (term "1,1,1,0,0") (ifseqformula "11"))
                                                (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "11"))
                                                (rule "applyEq" (formula "18") (term "1,0,0,0,1,0") (ifseqformula "11"))
                                                (rule "applyEq" (formula "40") (term "0") (ifseqformula "11"))
                                                (rule "inEqSimp_homoInEq1" (formula "40"))
                                                (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                (rule "applyEqRigid" (formula "32") (term "1,1,0,0") (ifseqformula "11"))
                                                (rule "applyEqRigid" (formula "17") (term "1,1,0,0") (ifseqformula "11"))
                                                (rule "applyEqRigid" (formula "18") (term "1,1,0,0") (ifseqformula "11"))
                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "11"))
                                                (rule "inEqSimp_homoInEq1" (formula "20"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                (rule "applyEq" (formula "14") (term "1") (ifseqformula "11"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                (rule "mul_literals" (formula "13") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "40"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                (rule "mul_literals" (formula "40") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                (rule "mul_literals" (formula "20") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "13"))
                                                (rule "polySimp_rightDist" (formula "52") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0"))
                                                (rule "mul_literals" (formula "52") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "52") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "52") (term "0,0"))
                                                (rule "add_literals" (formula "52") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "52") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "52"))
                                                (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "52") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "neg_literal" (formula "52") (term "0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "52") (term "0,0"))
                                                (rule "concrete_or_2" (formula "52") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0"))
                                                (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,0"))
                                                (rule "add_literals" (formula "52") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "52") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "52") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,0"))
                                                (rule "add_literals" (formula "52") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "52") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "52") (term "0,0"))
                                                (rule "qeq_literals" (formula "52") (term "0"))
                                                (rule "concrete_or_2" (formula "52"))
                                                (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "40"))
                                                (rule "times_zero_1" (formula "39") (term "0,0"))
                                                (rule "add_zero_left" (formula "39") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                (rule "mul_literals" (formula "39") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "13"))
                                                (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "29") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "13"))
                                                (rule "polySimp_rightDist" (formula "62") (term "0,0"))
                                                (rule "mul_literals" (formula "62") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "62") (term "0,0"))
                                                (rule "add_literals" (formula "62") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "62") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "62"))
                                                (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "62") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "leq_literals" (formula "62") (term "0,0"))
                                                (rule "concrete_or_2" (formula "62") (term "0"))
                                                (rule "neg_literal" (formula "62") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "62") (term "0,0"))
                                                (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "62") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "62") (term "0,0"))
                                                (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "62") (term "0,0"))
                                                (rule "qeq_literals" (formula "62") (term "0"))
                                                (rule "concrete_or_2" (formula "62"))
                                                (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                                                (rule "times_zero_1" (formula "19") (term "0,0"))
                                                (rule "add_zero_left" (formula "19") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                (rule "mul_literals" (formula "19") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "13"))
                                                (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                                                (rule "mul_literals" (formula "38") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "38") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "52"))
                                                (rule "polySimp_mulAssoc" (formula "12") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "12") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "12") (term "0,0"))
                                                (rule "concrete_or_2" (formula "12") (term "0"))
                                                (rule "neg_literal" (formula "12") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "12") (term "0,0"))
                                                (rule "qeq_literals" (formula "12") (term "0"))
                                                (rule "concrete_or_2" (formula "12"))
                                                (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "14"))
                                                (rule "mul_literals" (formula "17") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                (rule "add_literals" (formula "17") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                (rule "mul_literals" (formula "17") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "17") (term "0,0"))
                                                (rule "concrete_or_2" (formula "17") (term "0"))
                                                (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "17") (term "0,0"))
                                                (rule "leq_literals" (formula "17") (term "0"))
                                                (rule "concrete_or_2" (formula "17"))
                                                (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "17"))
                                                (rule "leq_literals" (formula "43") (term "0"))
                                                (rule "concrete_or_1" (formula "43"))
                                                (rule "true_left" (formula "43"))
                                                (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "56"))
                                                (rule "times_zero_1" (formula "60") (term "0,0"))
                                                (rule "add_zero_left" (formula "60") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "60") (ifseqformula "17"))
                                                (rule "leq_literals" (formula "60") (term "0"))
                                                (rule "concrete_or_1" (formula "60"))
                                                (rule "true_left" (formula "60"))
                                                (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "64"))
                                                (rule "mul_literals" (formula "59") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "59"))
                                                (rule "mul_literals" (formula "59") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "59") (ifseqformula "17"))
                                                (rule "leq_literals" (formula "59") (term "0"))
                                                (rule "concrete_or_1" (formula "59"))
                                                (rule "true_left" (formula "59"))
                                                (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "40"))
                                                (rule "times_zero_1" (formula "38") (term "0,0"))
                                                (rule "add_zero_left" (formula "38") (term "0"))
                                                (rule "inEqSimp_subsumption6" (formula "38") (ifseqformula "17"))
                                                (rule "mul_literals" (formula "38") (term "1,1,0"))
                                                (rule "greater_literals" (formula "38") (term "0,0"))
                                                (rule "concrete_and_1" (formula "38") (term "0"))
                                                (rule "leq_literals" (formula "38") (term "0"))
                                                (rule "concrete_or_1" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "31"))
                                                (rule "times_zero_1" (formula "29") (term "0,0"))
                                                (rule "add_zero_left" (formula "29") (term "0"))
                                                (rule "inEqSimp_subsumption6" (formula "29") (ifseqformula "17"))
                                                (rule "greater_literals" (formula "29") (term "0,0"))
                                                (rule "concrete_and_1" (formula "29") (term "0"))
                                                (rule "mul_literals" (formula "29") (term "1,0"))
                                                (rule "leq_literals" (formula "29") (term "0"))
                                                (rule "concrete_or_1" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "div_axiom" (formula "72") (term "0,1,1,1") (inst "quotient=quotient_1"))
                                                (rule "mul_literals" (formula "72") (term "1,1,1,1,1"))
                                                (rule "qeq_literals" (formula "72") (term "0,1,1"))
                                                (rule "ifthenelse_true_for" (formula "72") (term "1,1"))
                                                (rule "equal_literals" (formula "72") (term "0"))
                                                (rule "concrete_or_2" (formula "72"))
                                                (rule "andLeft" (formula "72"))
                                                (rule "andLeft" (formula "72"))
                                                (rule "polySimp_addAssoc" (formula "74") (term "0,1"))
                                                (rule "add_literals" (formula "74") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "74") (term "1"))
                                                (rule "add_literals" (formula "74") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "73"))
                                                (rule "polySimp_mulLiterals" (formula "73") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "73") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "74"))
                                                (rule "polySimp_mulLiterals" (formula "74") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                (rule "applyEqRigid" (formula "76") (term "0,1,1,0") (ifseqformula "72"))
                                                (rule "polySimp_addComm1" (formula "76") (term "1,0"))
                                                (rule "applyEq" (formula "75") (term "0,1,1,0") (ifseqformula "72"))
                                                (rule "polySimp_addComm1" (formula "75") (term "1,0"))
                                                (rule "applyEq" (formula "75") (term "0,1,1,1") (ifseqformula "72"))
                                                (rule "polySimp_addComm1" (formula "75") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "73"))
                                                (rule "polySimp_mulComm0" (formula "73") (term "1"))
                                                (rule "polySimp_rightDist" (formula "73") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "73") (term "1,1"))
                                                (rule "mul_literals" (formula "73") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "74"))
                                                (rule "polySimp_mulComm0" (formula "74") (term "1"))
                                                (rule "polySimp_rightDist" (formula "74") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "74") (term "1,1"))
                                                (rule "mul_literals" (formula "74") (term "0,1"))
                                                (rule "elimGcdLeq_antec" (formula "74") (inst "elimGcdRightDiv=add(Z(0(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "leq_literals" (formula "74") (term "0,0"))
                                                (rule "concrete_or_2" (formula "74") (term "0"))
                                                (rule "neg_literal" (formula "74") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                                                (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "74") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "74") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "74") (term "0,0,0"))
                                                (rule "add_literals" (formula "74") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "74") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "74") (term "0,0,0"))
                                                (rule "add_literals" (formula "74") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                                                (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "74") (term "0,0"))
                                                (rule "qeq_literals" (formula "74") (term "0"))
                                                (rule "concrete_or_2" (formula "74"))
                                                (rule "elimGcdGeq_antec" (formula "73") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "leq_literals" (formula "73") (term "0,0"))
                                                (rule "concrete_or_2" (formula "73") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0"))
                                                (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "73") (term "0,0"))
                                                (rule "add_literals" (formula "73") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "73") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "73") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "73") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "73") (term "0,0,0"))
                                                (rule "add_literals" (formula "73") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "73") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "73") (term "0,0,0"))
                                                (rule "add_literals" (formula "73") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "73") (term "0,0"))
                                                (rule "add_literals" (formula "73") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "73") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "73") (term "0,0"))
                                                (rule "leq_literals" (formula "73") (term "0"))
                                                (rule "concrete_or_2" (formula "73"))
                                                (rule "inEqSimp_exactShadow3" (formula "73") (ifseqformula "63"))
                                                (rule "polySimp_rightDist" (formula "73") (term "0,0"))
                                                (rule "mul_literals" (formula "73") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "73") (term "0"))
                                                (rule "add_literals" (formula "73") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "73"))
                                                (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "73") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                (rule "leq_literals" (formula "73") (term "0,0"))
                                                (rule "concrete_or_2" (formula "73") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0,0,0"))
                                                (rule "neg_literal" (formula "73") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0"))
                                                (rule "mul_literals" (formula "73") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "73") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "73") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "73") (term "0,0"))
                                                (rule "add_literals" (formula "73") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "73") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "73") (term "0,0"))
                                                (rule "qeq_literals" (formula "73") (term "0"))
                                                (rule "concrete_or_2" (formula "73"))
                                                (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "75"))
                                                (rule "mul_literals" (formula "59") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "59") (term "0"))
                                                (rule "add_literals" (formula "59") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "59"))
                                                (rule "mul_literals" (formula "59") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "59") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "59") (term "0,0"))
                                                (rule "concrete_or_2" (formula "59") (term "0"))
                                                (rule "mul_literals" (formula "59") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "59") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "59") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "59") (term "0,0"))
                                                (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "59") (term "0,0"))
                                                (rule "leq_literals" (formula "59") (term "0"))
                                                (rule "concrete_or_2" (formula "59"))
                                                (rule "inEqSimp_exactShadow3" (formula "75") (ifseqformula "65"))
                                                (rule "polySimp_rightDist" (formula "75") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0"))
                                                (rule "mul_literals" (formula "75") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "75"))
                                                (rule "polySimp_mulComm0" (formula "75") (term "1"))
                                                (rule "polySimp_rightDist" (formula "75") (term "1"))
                                                (rule "mul_literals" (formula "75") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "75") (term "1,1"))
                                                (rule "inEqSimp_antiSymm" (formula "59") (ifseqformula "74"))
                                                (rule "applyEqRigid" (formula "60") (term "0") (ifseqformula "59"))
                                                (rule "qeq_literals" (formula "60"))
                                                (rule "true_left" (formula "60"))
                                                (rule "applyEq" (formula "74") (term "0") (ifseqformula "59"))
                                                (rule "leq_literals" (formula "74"))
                                                (rule "true_left" (formula "74"))
                                                (rule "applyEqRigid" (formula "76") (term "0,1,1") (ifseqformula "59"))
                                                (rule "mul_literals" (formula "76") (term "1,1"))
                                                (rule "add_literals" (formula "76") (term "1"))
                                                (rule "applyEqRigid" (formula "74") (term "0,1,1") (ifseqformula "59"))
                                                (rule "mul_literals" (formula "74") (term "1,1"))
                                                (rule "add_literals" (formula "74") (term "1"))
                                                (rule "applyEq" (formula "75") (term "0,1,1") (ifseqformula "59"))
                                                (rule "mul_literals" (formula "75") (term "1,1"))
                                                (rule "add_literals" (formula "75") (term "1"))
                                                (rule "applyEqRigid" (formula "73") (term "1") (ifseqformula "59"))
                                                (rule "applyEq" (formula "78") (term "0,1,0,1,0") (ifseqformula "59"))
                                                (rule "mul_literals" (formula "78") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "78") (term "0,1,0"))
                                                (rule "applyEq" (formula "77") (term "0,1,0,1,0") (ifseqformula "59"))
                                                (rule "mul_literals" (formula "77") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "77") (term "0,1,0"))
                                                (rule "applyEqRigid" (formula "77") (term "0,1,0,1,1") (ifseqformula "59"))
                                                (rule "mul_literals" (formula "77") (term "1,0,1,1"))
                                                (rule "add_literals" (formula "77") (term "0,1,1"))
                                                (rule "inEqSimp_subsumption0" (formula "76") (ifseqformula "64"))
                                                (rule "leq_literals" (formula "76") (term "0"))
                                                (rule "concrete_or_1" (formula "76"))
                                                (rule "true_left" (formula "76"))
                                                (rule "inEqSimp_subsumption1" (formula "75") (ifseqformula "60"))
                                                (rule "leq_literals" (formula "75") (term "0"))
                                                (rule "concrete_or_1" (formula "75"))
                                                (rule "true_left" (formula "75"))
                                                (rule "inEqSimp_subsumption1" (formula "74") (ifseqformula "17"))
                                                (rule "leq_literals" (formula "74") (term "0"))
                                                (rule "concrete_or_1" (formula "74"))
                                                (rule "true_left" (formula "74"))
                                                (rule "cut_direct" (formula "83") (term "0,0"))
                                                (branch "CUT: self.table[n_0 * 2] = null TRUE"
                                                   (rule "concrete_not_1" (formula "84") (term "0"))
                                                   (rule "concrete_and_2" (formula "84"))
                                                   (rule "false_right" (formula "84"))
                                                   (rule "nnf_imp2or" (formula "48") (term "1,0"))
                                                   (rule "nnf_notAnd" (formula "38") (term "0,1,0,1,0"))
                                                   (rule "double_not" (formula "38") (term "0,0,1,0,1,0"))
                                                   (rule "nnf_notOr" (formula "36") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "36") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "36") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "36") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "1,1,1,1,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "36") (term "0,0,0,1,1,0"))
                                                   (rule "nnf_imp2or" (formula "47") (term "0"))
                                                   (rule "nnf_imp2or" (formula "37") (term "0"))
                                                   (rule "commute_or_2" (formula "20") (term "0,1,1,0"))
                                                   (rule "commute_or" (formula "71") (term "0,0"))
                                                   (rule "commute_or_2" (formula "29") (term "0"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,1,0"))
                                                   (rule "commute_and" (formula "38") (term "0,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "48") (term "0"))
                                                   (rule "nnf_imp2or" (formula "38") (term "0"))
                                                   (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "47") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "47") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "47") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "48") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "47") (term "0,1,0"))
                                                   (rule "double_not" (formula "47") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "47") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "47") (term "0,0,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "47") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,1,0"))
                                                   (rule "double_not" (formula "48") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "48") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "38") (term "0,1,0"))
                                                   (rule "nnf_imp2or" (formula "47") (term "0,1,1,0"))
                                                   (rule "nnf_imp2or" (formula "48") (term "0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "36") (term "1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "36") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "36") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "36") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "36") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "36") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "36") (term "0,0,0,0,1,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "78") (term "0") (ifseqformula "7"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
                                                   (rule "concrete_or_2" (formula "1"))
                                                   (rule "nnf_notAnd" (formula "39") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "49") (term "0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "37") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "37") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "37") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "1,1,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "37") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "37") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "49") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "0,1,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "49") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "commute_or" (formula "30") (term "0,0"))
                                                   (rule "commute_or_2" (formula "38") (term "0"))
                                                   (rule "cnf_rightDist" (formula "72") (term "0"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,1,0"))
                                                   (rule "inEqSimp_or_weaken2" (formula "22") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "1,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "22") (term "0,1,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "22") (term "1,0,1,0,1,0"))
                                                   (rule "eqClose" (formula "22") (term "0,1,0,1,0"))
                                                   (rule "ifthenelse_true_for" (formula "22") (term "1,0,1,0"))
                                                   (rule "commute_or" (formula "21") (term "0,0,1,1,0"))
                                                   (rule "distr_forallAnd" (formula "72"))
                                                   (rule "andLeft" (formula "72"))
                                                   (rule "shift_paren_or" (formula "39") (term "0,1,0"))
                                                   (rule "commute_or_2" (formula "48") (term "0,1,1,0"))
                                                   (rule "commute_or_2" (formula "72") (term "0"))
                                                   (rule "commute_or" (formula "38") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "72") (term "0"))
                                                   (rule "commute_or" (formula "71") (term "0,0"))
                                                   (rule "commute_and" (formula "37") (term "1,0,0,0,1,1,0"))
                                                   (rule "commute_or" (formula "48") (term "0,1,1,0"))
                                                   (rule "commute_or" (formula "22") (term "0,0,1,0"))
                                                   (rule "cut_direct" (formula "77") (term "0"))
                                                   (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 TRUE"
                                                      (rule "concrete_impl_1" (formula "78"))
                                                      (rule "applyEq" (formula "74") (term "0") (ifseqformula "78"))
                                                      (rule "qeq_literals" (formula "74"))
                                                      (rule "true_left" (formula "74"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "mul_literals" (formula "6") (term "1,0"))
                                                      (rule "add_zero_right" (formula "6") (term "0"))
                                                      (rule "applyEq" (formula "5") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5"))
                                                      (rule "times_zero_2" (formula "5") (term "1,0"))
                                                      (rule "add_zero_right" (formula "5") (term "0"))
                                                      (rule "applyEq" (formula "75") (term "0,1") (ifseqformula "77"))
                                                      (rule "polySimp_homoEq" (formula "75") (term "1"))
                                                      (rule "times_zero_2" (formula "75") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "75") (term "0,1"))
                                                      (rule "applyEq" (formula "73") (term "0") (ifseqformula "77"))
                                                      (rule "leq_literals" (formula "73"))
                                                      (rule "true_left" (formula "73"))
                                                      (rule "polySimp_sepPosMonomial" (formula "74") (term "1"))
                                                      (rule "mul_literals" (formula "74") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                      (rule "mul_literals" (formula "6") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                      (rule "mul_literals" (formula "5") (term "1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "74") (term "0") (ifseqformula "75"))
                                                      (rule "inEqSimp_homoInEq1" (formula "74") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "74") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "74") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "74") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "74") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0,0"))
                                                      (rule "add_literals" (formula "74") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "74") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "74") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "74") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "74") (term "0"))
                                                      (rule "concrete_impl_2" (formula "74"))
                                                      (rule "true_left" (formula "74"))
                                                      (rule "inEqSimp_contradInEq5" (formula "6") (ifseqformula "62"))
                                                      (rule "times_zero_1" (formula "6") (term "1,1,0"))
                                                      (rule "greater_literals" (formula "6") (term "0,0"))
                                                      (rule "concrete_impl_1" (formula "6") (term "0"))
                                                      (rule "qeq_literals" (formula "6") (term "0"))
                                                      (rule "concrete_and_2" (formula "6"))
                                                      (rule "closeFalse" (formula "6"))
                                                   )
                                                   (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 FALSE"
                                                      (rule "concrete_impl_2" (formula "77"))
                                                      (rule "true_left" (formula "77"))
                                                      (rule "inEqSimp_leqRight" (formula "78"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "replace_known_left" (formula "77") (term "0") (ifseqformula "1"))
                                                      (rule "concrete_impl_1" (formula "77"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0"))
                                                      (rule "applyEq" (formula "75") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq1" (formula "75"))
                                                      (rule "polySimp_mulComm0" (formula "75") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "75") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "75") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "75") (term "0"))
                                                      (rule "add_literals" (formula "75") (term "0,0"))
                                                      (rule "applyEq" (formula "7") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq1" (formula "7"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0"))
                                                      (rule "applyEq" (formula "74") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq0" (formula "74"))
                                                      (rule "polySimp_mulComm0" (formula "74") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "74") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "74") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "74") (term "0"))
                                                      (rule "add_literals" (formula "74") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                      (rule "mul_literals" (formula "6") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                                                      (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                      (rule "mul_literals" (formula "7") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "74"))
                                                      (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "68") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "68") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "68") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "68") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "68") (term "0,0,0"))
                                                      (rule "add_literals" (formula "68") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0"))
                                                      (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                                      (rule "add_literals" (formula "68") (term "0,0"))
                                                      (rule "qeq_literals" (formula "68") (term "0"))
                                                      (rule "concrete_or_1" (formula "68"))
                                                      (rule "true_left" (formula "68"))
                                                      (rule "inEqSimp_subsumption6" (formula "74") (ifseqformula "62"))
                                                      (rule "mul_literals" (formula "74") (term "1,1,0"))
                                                      (rule "greater_literals" (formula "74") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "74") (term "0"))
                                                      (rule "leq_literals" (formula "74") (term "0"))
                                                      (rule "concrete_or_1" (formula "74"))
                                                      (rule "true_left" (formula "74"))
                                                      (rule "inEqSimp_subsumption4" (formula "7") (ifseqformula "70"))
                                                      (rule "greater_literals" (formula "7") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "7") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0"))
                                                      (rule "qeq_literals" (formula "7") (term "0"))
                                                      (rule "concrete_or_1" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "inEqSimp_subsumption4" (formula "72") (ifseqformula "65"))
                                                      (rule "mul_literals" (formula "72") (term "0,1,0"))
                                                      (rule "greater_literals" (formula "72") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "72") (term "0"))
                                                      (rule "leq_literals" (formula "72") (term "0"))
                                                      (rule "concrete_or_1" (formula "72"))
                                                      (rule "true_left" (formula "72"))
                                                      (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=add(Z(0(#)), l_1)") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                                      (rule "leq_literals" (formula "6") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "6") (term "0"))
                                                      (rule "add_zero_left" (formula "6") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                      (rule "add_zero_left" (formula "6") (term "1,1,0,0,0,0,0"))
                                                      (rule "neg_literal" (formula "6") (term "0,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "6") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0"))
                                                      (rule "qeq_literals" (formula "6") (term "0"))
                                                      (rule "concrete_or_2" (formula "6"))
                                                      (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "6"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "4") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "70"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0"))
                                                      (rule "qeq_literals" (formula "4") (term "0"))
                                                      (rule "concrete_or_1" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), quotient_0)") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                      (rule "leq_literals" (formula "1") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "1") (term "0"))
                                                      (rule "neg_literal" (formula "1") (term "0,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                      (rule "concrete_or_2" (formula "1"))
                                                      (rule "inEqSimp_subsumption0" (formula "67") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "67") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "67") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "67") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "67") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0"))
                                                      (rule "add_literals" (formula "67") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "67") (term "1,0,0"))
                                                      (rule "add_literals" (formula "67") (term "0,0"))
                                                      (rule "qeq_literals" (formula "67") (term "0"))
                                                      (rule "concrete_or_1" (formula "67"))
                                                      (rule "true_left" (formula "67"))
                                                      (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "7"))
                                                      (rule "times_zero_1" (formula "60") (term "0,0"))
                                                      (rule "add_zero_left" (formula "60") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "60") (ifseqformula "63"))
                                                      (rule "leq_literals" (formula "60") (term "0"))
                                                      (rule "concrete_or_1" (formula "60"))
                                                      (rule "true_left" (formula "60"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "55"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(2(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                      (rule "leq_literals" (formula "2") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "2") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                                      (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                      (rule "concrete_or_2" (formula "2"))
                                                      (rule "inEqSimp_subsumption0" (formula "67") (ifseqformula "2"))
                                                      (rule "leq_literals" (formula "67") (term "0"))
                                                      (rule "concrete_or_1" (formula "67"))
                                                      (rule "true_left" (formula "67"))
                                                      (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "1"))
                                                      (rule "mul_literals" (formula "63") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                                      (rule "add_literals" (formula "63") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "63"))
                                                      (rule "mul_literals" (formula "63") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "63") (ifseqformula "21"))
                                                      (rule "leq_literals" (formula "63") (term "0"))
                                                      (rule "concrete_or_1" (formula "63"))
                                                      (rule "true_left" (formula "63"))
                                                      (rule "commute_or_2" (formula "40") (term "0,0,1,0"))
                                                      (rule "inEqSimp_or_weaken2" (formula "40") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "40") (term "1,0,1,0,1,0"))
                                                      (rule "add_literals" (formula "40") (term "0,1,0,1,0,1,0"))
                                                      (rule "add_zero_left" (formula "40") (term "1,0,1,0,1,0"))
                                                      (rule "eqClose" (formula "40") (term "0,1,0,1,0"))
                                                      (rule "ifthenelse_true_for" (formula "40") (term "1,0,1,0"))
                                                      (rule "commute_or" (formula "49") (term "0,0,1,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "10"))
                                                      (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "49"))
                                                      (rule "concrete_or_1" (formula "48"))
                                                      (rule "true_left" (formula "48"))
                                                      (rule "commute_or" (formula "50") (term "0,1,0,1,1,0"))
                                                      (rule "commute_and" (formula "39") (term "1,0,0,0,0,1,1,0"))
                                                      (rule "all_pull_out3" (formula "23") (term "1,0"))
                                                      (rule "all_pull_out3" (formula "24") (term "0"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0"))
                                                      (rule "commute_or" (formula "40") (term "0,0,1,0"))
                                                      (rule "commute_or_2" (formula "49") (term "0,1,1,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,1,0"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,1,0"))
                                                      (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
                                                      (rule "commute_or_2" (formula "23") (term "0,0,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "50") (term "0,1,1,0"))
                                                      (rule "commute_or_2" (formula "50") (term "1,0,1,1,0"))
                                                      (rule "shift_paren_or" (formula "50") (term "0,0,1,1,0"))
                                                      (rule "commute_or" (formula "50") (term "0,1,0,1,1,0"))
                                                      (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,1,1,0"))
                                                      (rule "commute_or" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                                      (rule "cnf_rightDist" (formula "39") (term "1,0,0,0,0,1,1,0"))
                                                      (rule "commute_or" (formula "39") (term "0,1,0,0,0,0,1,1,0"))
                                                      (rule "commute_or" (formula "39") (term "1,1,0,0,0,0,1,1,0"))
                                                      (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                                      (rule "eq_or" (formula "39") (term "0,0,0,0,0,0,1,1,0"))
                                                      (rule "commute_or" (formula "39") (term "1,0,0,0,0,0,1,1,0"))
                                                      (rule "all_pull_out3" (formula "40") (term "0"))
                                                      (rule "shift_paren_or" (formula "40") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "40") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "40") (term "0,0,0,0"))
                                                      (rule "commute_or" (formula "40") (term "0,0,0,0,0"))
                                                      (rule "all_pull_out3" (formula "48") (term "1,0"))
                                                      (rule "shift_paren_or" (formula "48") (term "0,1,0"))
                                                      (rule "shift_paren_or" (formula "48") (term "0,0,1,0"))
                                                      (rule "commute_or_2" (formula "48") (term "0,0,0,1,0"))
                                                      (rule "all_pull_out3" (formula "23") (term "0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "23") (term "0,0,0,0,0"))
                                                      (rule "commute_or" (formula "23") (term "0,0,0,0,0,0"))
                                                      (rule "all_pull_out3" (formula "48") (term "1,0"))
                                                      (rule "cnf_rightDist" (formula "48") (term "0,1,0"))
                                                      (rule "commute_or_2" (formula "48") (term "1,0,1,0"))
                                                      (rule "shift_paren_or" (formula "48") (term "0,0,1,0"))
                                                      (rule "commute_or_2" (formula "48") (term "0,1,0,1,0"))
                                                      (rule "shift_paren_or" (formula "48") (term "0,0,0,1,0"))
                                                      (rule "commute_or_2" (formula "48") (term "0,0,0,0,1,0"))
                                                      (rule "shift_paren_or" (formula "48") (term "0,0,1,0,1,0"))
                                                      (rule "commute_or" (formula "48") (term "0,0,0,1,0,1,0"))
                                                      (rule "shift_paren_and" (formula "39") (term "0,0,0,0,1,1,0"))
                                                      (rule "cnf_rightDist" (formula "39") (term "0,0,0,1,1,0"))
                                                      (rule "commute_or" (formula "39") (term "0,0,0,0,1,1,0"))
                                                      (rule "cnf_rightDist" (formula "39") (term "1,0,0,0,1,1,0"))
                                                      (rule "commute_or_2" (formula "39") (term "1,1,0,0,0,1,1,0"))
                                                      (rule "eq_or" (formula "39") (term "0,1,1,0,0,0,1,1,0"))
                                                      (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,1,1,0"))
                                                      (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,1,1,0"))
                                                      (rule "commute_or" (formula "39") (term "0,1,0,0,0,0,1,1,0"))
                                                      (rule "allLeft" (formula "32") (inst "t=i_1_2"))
                                                      (rule "replace_known_left" (formula "32") (term "0,0,0,0") (ifseqformula "48"))
                                                      (rule "concrete_not_1" (formula "32") (term "0,0,0"))
                                                      (rule "concrete_or_2" (formula "32") (term "0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "46"))
                                                      (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                      (rule "concrete_and_2" (formula "32") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "32") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "32") (term "1") (ifseqformula "47"))
                                                      (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "32") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "32") (term "1"))
                                                      (rule "concrete_or_4" (formula "32"))
                                                      (rule "allLeft" (formula "33") (inst "t=i_1_0"))
                                                      (rule "replace_known_left" (formula "33") (term "0,0,0,0") (ifseqformula "27"))
                                                      (rule "concrete_not_1" (formula "33") (term "0,0,0"))
                                                      (rule "concrete_or_2" (formula "33") (term "0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "25"))
                                                      (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                      (rule "concrete_and_2" (formula "33") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "33") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "33") (term "1") (ifseqformula "26"))
                                                      (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "33") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "33") (term "1"))
                                                      (rule "concrete_or_4" (formula "33"))
                                                      (rule "cnf_rightDist" (formula "41") (term "0,1,0,0,0,1,1,0"))
                                                      (rule "eq_or_2" (formula "41") (term "1,0,1,0,0,0,1,1,0"))
                                                      (rule "allLeft" (formula "70") (inst "t=l_0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "70") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,1,0"))
                                                      (rule "add_literals" (formula "70") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "70") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "70") (term "0,1,0"))
                                                      (rule "qeq_literals" (formula "70") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "70") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "70") (term "1") (ifseqformula "69"))
                                                      (rule "inEqSimp_homoInEq1" (formula "70") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "70") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "70") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "70") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,1"))
                                                      (rule "add_literals" (formula "70") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "70") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "70") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "70") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "70") (term "1"))
                                                      (rule "concrete_or_4" (formula "70"))
                                                      (rule "notLeft" (formula "70"))
                                                      (rule "allLeft" (formula "70") (inst "t=n_0"))
                                                      (rule "replace_known_left" (formula "70") (term "0,0,0") (ifseqformula "5"))
                                                      (rule "concrete_not_1" (formula "70") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "70") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "70") (term "0") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "70") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "70") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "70") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,0"))
                                                      (rule "add_literals" (formula "70") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "70") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "70") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "70") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "70") (term "0"))
                                                      (rule "concrete_or_2" (formula "70"))
                                                      (rule "inEqSimp_antiSymm" (formula "70") (ifseqformula "8"))
                                                      (rule "applyEqRigid" (formula "71") (term "0") (ifseqformula "70"))
                                                      (rule "inEqSimp_homoInEq1" (formula "71"))
                                                      (rule "polySimp_pullOutFactor1" (formula "71") (term "0"))
                                                      (rule "add_literals" (formula "71") (term "1,0"))
                                                      (rule "times_zero_1" (formula "71") (term "0"))
                                                      (rule "leq_literals" (formula "71"))
                                                      (rule "true_left" (formula "71"))
                                                      (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "70"))
                                                      (rule "inEqSimp_commuteGeq" (formula "6"))
                                                      (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "70"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8"))
                                                      (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                                      (rule "add_literals" (formula "8") (term "1,0"))
                                                      (rule "times_zero_1" (formula "8") (term "0"))
                                                      (rule "qeq_literals" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "applyEqRigid" (formula "60") (term "0") (ifseqformula "69"))
                                                      (rule "applyEq" (formula "5") (term "0,0,2,0") (ifseqformula "69"))
                                                      (rule "close" (formula "76") (ifseqformula "5"))
                                                   )
                                                )
                                                (branch "CUT: self.table[n_0 * 2] = null FALSE"
                                                   (rule "concrete_not_2" (formula "84") (term "0"))
                                                   (rule "concrete_and_1" (formula "84"))
                                                   (rule "notRight" (formula "84"))
                                                   (rule "applyEq" (formula "84") (term "0") (ifseqformula "1"))
                                                   (rule "nnf_imp2or" (formula "48") (term "1,0"))
                                                   (rule "nnf_notAnd" (formula "38") (term "0,1,0,1,0"))
                                                   (rule "double_not" (formula "38") (term "0,0,1,0,1,0"))
                                                   (rule "nnf_notOr" (formula "36") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "36") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "36") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "36") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "1,1,1,1,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "36") (term "0,0,0,1,1,0"))
                                                   (rule "nnf_imp2or" (formula "47") (term "0"))
                                                   (rule "nnf_imp2or" (formula "37") (term "0"))
                                                   (rule "commute_or_2" (formula "20") (term "0,1,1,0"))
                                                   (rule "commute_or" (formula "71") (term "0,0"))
                                                   (rule "commute_or_2" (formula "29") (term "0"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,1,0"))
                                                   (rule "commute_and" (formula "38") (term "0,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "48") (term "0"))
                                                   (rule "nnf_imp2or" (formula "38") (term "0"))
                                                   (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "47") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "47") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "47") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "48") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "47") (term "0,1,0"))
                                                   (rule "double_not" (formula "47") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "47") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "47") (term "0,0,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "47") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,1,0"))
                                                   (rule "double_not" (formula "48") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "48") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "38") (term "0,1,0"))
                                                   (rule "nnf_imp2or" (formula "47") (term "0,1,1,0"))
                                                   (rule "nnf_imp2or" (formula "48") (term "0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "36") (term "0,0,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "36") (term "1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "36") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "36") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "36") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "36") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "36") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,0,0,1,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "0") (ifseqformula "7"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
                                                   (rule "concrete_or_2" (formula "1"))
                                                   (rule "nnf_notAnd" (formula "39") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "49") (term "0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "37") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "37") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "37") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "37") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "1,1,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "37") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "0,1,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "49") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "49") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "commute_or" (formula "30") (term "0,0"))
                                                   (rule "commute_or_2" (formula "38") (term "0"))
                                                   (rule "cnf_rightDist" (formula "72") (term "0"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,1,0"))
                                                   (rule "inEqSimp_or_weaken2" (formula "22") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "1,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "22") (term "0,1,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "22") (term "1,0,1,0,1,0"))
                                                   (rule "eqClose" (formula "22") (term "0,1,0,1,0"))
                                                   (rule "ifthenelse_true_for" (formula "22") (term "1,0,1,0"))
                                                   (rule "commute_or" (formula "21") (term "0,0,1,1,0"))
                                                   (rule "distr_forallAnd" (formula "72"))
                                                   (rule "andLeft" (formula "72"))
                                                   (rule "shift_paren_or" (formula "39") (term "0,1,0"))
                                                   (rule "commute_or_2" (formula "48") (term "0,1,1,0"))
                                                   (rule "commute_or_2" (formula "72") (term "0"))
                                                   (rule "commute_or" (formula "38") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "72") (term "0"))
                                                   (rule "commute_or" (formula "71") (term "0,0"))
                                                   (rule "commute_and" (formula "37") (term "1,0,0,0,1,1,0"))
                                                   (rule "commute_or" (formula "48") (term "0,1,1,0"))
                                                   (rule "commute_or" (formula "22") (term "0,0,1,0"))
                                                   (rule "cut_direct" (formula "77") (term "0"))
                                                   (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 TRUE"
                                                      (rule "concrete_impl_1" (formula "78"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "78"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "times_zero_2" (formula "6") (term "1,0"))
                                                      (rule "add_zero_right" (formula "6") (term "0"))
                                                      (rule "applyEq" (formula "74") (term "0") (ifseqformula "78"))
                                                      (rule "qeq_literals" (formula "74"))
                                                      (rule "true_left" (formula "74"))
                                                      (rule "applyEq" (formula "5") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5"))
                                                      (rule "times_zero_2" (formula "5") (term "1,0"))
                                                      (rule "add_zero_right" (formula "5") (term "0"))
                                                      (rule "applyEq" (formula "73") (term "0") (ifseqformula "77"))
                                                      (rule "leq_literals" (formula "73"))
                                                      (rule "true_left" (formula "73"))
                                                      (rule "applyEq" (formula "74") (term "0,1") (ifseqformula "76"))
                                                      (rule "polySimp_homoEq" (formula "74") (term "1"))
                                                      (rule "times_zero_2" (formula "74") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "74") (term "0,1"))
                                                      (rule "polySimp_sepPosMonomial" (formula "74") (term "1"))
                                                      (rule "mul_literals" (formula "74") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                      (rule "mul_literals" (formula "6") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                      (rule "mul_literals" (formula "5") (term "1"))
                                                      (rule "inEqSimp_contradInEq5" (formula "5") (ifseqformula "59"))
                                                      (rule "times_zero_1" (formula "5") (term "1,1,0"))
                                                      (rule "greater_literals" (formula "5") (term "0,0"))
                                                      (rule "concrete_impl_1" (formula "5") (term "0"))
                                                      (rule "qeq_literals" (formula "5") (term "0"))
                                                      (rule "concrete_and_2" (formula "5"))
                                                      (rule "closeFalse" (formula "5"))
                                                   )
                                                   (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 FALSE"
                                                      (rule "concrete_impl_2" (formula "77"))
                                                      (rule "true_left" (formula "77"))
                                                      (rule "inEqSimp_leqRight" (formula "78"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "replace_known_left" (formula "77") (term "0") (ifseqformula "1"))
                                                      (rule "concrete_impl_1" (formula "77"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0"))
                                                      (rule "applyEq" (formula "75") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq1" (formula "75"))
                                                      (rule "polySimp_mulComm0" (formula "75") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "75") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "75") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "75") (term "0"))
                                                      (rule "add_literals" (formula "75") (term "0,0"))
                                                      (rule "applyEq" (formula "7") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq1" (formula "7"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0"))
                                                      (rule "applyEq" (formula "74") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq0" (formula "74"))
                                                      (rule "polySimp_mulComm0" (formula "74") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "74") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "74") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "74") (term "0"))
                                                      (rule "add_literals" (formula "74") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                      (rule "mul_literals" (formula "6") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                                                      (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                      (rule "mul_literals" (formula "7") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "74"))
                                                      (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "68") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "68") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "68") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "68") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "68") (term "0,0,0"))
                                                      (rule "add_literals" (formula "68") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0"))
                                                      (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                                      (rule "add_literals" (formula "68") (term "0,0"))
                                                      (rule "qeq_literals" (formula "68") (term "0"))
                                                      (rule "concrete_or_1" (formula "68"))
                                                      (rule "true_left" (formula "68"))
                                                      (rule "inEqSimp_subsumption6" (formula "74") (ifseqformula "62"))
                                                      (rule "mul_literals" (formula "74") (term "1,1,0"))
                                                      (rule "greater_literals" (formula "74") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "74") (term "0"))
                                                      (rule "leq_literals" (formula "74") (term "0"))
                                                      (rule "concrete_or_1" (formula "74"))
                                                      (rule "true_left" (formula "74"))
                                                      (rule "inEqSimp_subsumption4" (formula "73") (ifseqformula "66"))
                                                      (rule "greater_literals" (formula "73") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "73") (term "0"))
                                                      (rule "mul_literals" (formula "73") (term "0,0"))
                                                      (rule "leq_literals" (formula "73") (term "0"))
                                                      (rule "concrete_or_1" (formula "73"))
                                                      (rule "true_left" (formula "73"))
                                                      (rule "inEqSimp_subsumption4" (formula "7") (ifseqformula "70"))
                                                      (rule "greater_literals" (formula "7") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "7") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0"))
                                                      (rule "qeq_literals" (formula "7") (term "0"))
                                                      (rule "concrete_or_1" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=add(Z(0(#)), l_1)") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                                      (rule "neg_literal" (formula "6") (term "0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "6") (term "1,1"))
                                                      (rule "leq_literals" (formula "6") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "6") (term "0"))
                                                      (rule "add_zero_left" (formula "6") (term "1,1,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "6") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0"))
                                                      (rule "qeq_literals" (formula "6") (term "0"))
                                                      (rule "concrete_or_2" (formula "6"))
                                                      (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "6"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "4") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "70"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0"))
                                                      (rule "qeq_literals" (formula "4") (term "0"))
                                                      (rule "concrete_or_1" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), quotient_0)") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                      (rule "neg_literal" (formula "1") (term "0,0,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "1") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "1") (term "0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                      (rule "concrete_or_2" (formula "1"))
                                                      (rule "inEqSimp_subsumption0" (formula "67") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "67") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "67") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "67") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "67") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0"))
                                                      (rule "add_literals" (formula "67") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "67") (term "1,0,0"))
                                                      (rule "add_literals" (formula "67") (term "0,0"))
                                                      (rule "qeq_literals" (formula "67") (term "0"))
                                                      (rule "concrete_or_1" (formula "67"))
                                                      (rule "true_left" (formula "67"))
                                                      (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "7"))
                                                      (rule "times_zero_1" (formula "60") (term "0,0"))
                                                      (rule "add_zero_left" (formula "60") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "60") (ifseqformula "63"))
                                                      (rule "leq_literals" (formula "60") (term "0"))
                                                      (rule "concrete_or_1" (formula "60"))
                                                      (rule "true_left" (formula "60"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "55"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(2(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "2") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "2") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                      (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                      (rule "concrete_or_2" (formula "2"))
                                                      (rule "inEqSimp_subsumption0" (formula "67") (ifseqformula "2"))
                                                      (rule "leq_literals" (formula "67") (term "0"))
                                                      (rule "concrete_or_1" (formula "67"))
                                                      (rule "true_left" (formula "67"))
                                                      (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "1"))
                                                      (rule "mul_literals" (formula "63") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                                      (rule "add_literals" (formula "63") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "63"))
                                                      (rule "mul_literals" (formula "63") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "63") (ifseqformula "21"))
                                                      (rule "leq_literals" (formula "63") (term "0"))
                                                      (rule "concrete_or_1" (formula "63"))
                                                      (rule "true_left" (formula "63"))
                                                      (rule "commute_or_2" (formula "40") (term "0,0,1,0"))
                                                      (rule "inEqSimp_or_weaken2" (formula "40") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "40") (term "1,0,1,0,1,0"))
                                                      (rule "add_literals" (formula "40") (term "0,1,0,1,0,1,0"))
                                                      (rule "add_zero_left" (formula "40") (term "1,0,1,0,1,0"))
                                                      (rule "eqClose" (formula "40") (term "0,1,0,1,0"))
                                                      (rule "ifthenelse_true_for" (formula "40") (term "1,0,1,0"))
                                                      (rule "commute_or" (formula "49") (term "0,0,1,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "10"))
                                                      (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "49"))
                                                      (rule "concrete_or_1" (formula "48"))
                                                      (rule "true_left" (formula "48"))
                                                      (rule "commute_or" (formula "50") (term "0,1,0,1,1,0"))
                                                      (rule "commute_and" (formula "39") (term "1,0,0,0,0,1,1,0"))
                                                      (rule "all_pull_out3" (formula "23") (term "1,0"))
                                                      (rule "all_pull_out3" (formula "24") (term "0"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0"))
                                                      (rule "commute_or" (formula "40") (term "0,0,1,0"))
                                                      (rule "commute_or_2" (formula "49") (term "0,1,1,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,1,0"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,1,0"))
                                                      (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
                                                      (rule "commute_or_2" (formula "23") (term "0,0,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "50") (term "0,1,1,0"))
                                                      (rule "commute_or_2" (formula "50") (term "1,0,1,1,0"))
                                                      (rule "shift_paren_or" (formula "50") (term "0,0,1,1,0"))
                                                      (rule "commute_or" (formula "50") (term "0,1,0,1,1,0"))
                                                      (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,1,1,0"))
                                                      (rule "commute_or" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                                      (rule "cnf_rightDist" (formula "39") (term "1,0,0,0,0,1,1,0"))
                                                      (rule "commute_or" (formula "39") (term "0,1,0,0,0,0,1,1,0"))
                                                      (rule "commute_or" (formula "39") (term "1,1,0,0,0,0,1,1,0"))
                                                      (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                                      (rule "eq_or" (formula "39") (term "0,0,0,0,0,0,1,1,0"))
                                                      (rule "commute_or" (formula "39") (term "1,0,0,0,0,0,1,1,0"))
                                                      (rule "all_pull_out3" (formula "40") (term "0"))
                                                      (rule "shift_paren_or" (formula "40") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "40") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "40") (term "0,0,0,0"))
                                                      (rule "commute_or" (formula "40") (term "0,0,0,0,0"))
                                                      (rule "all_pull_out3" (formula "48") (term "1,0"))
                                                      (rule "shift_paren_or" (formula "48") (term "0,1,0"))
                                                      (rule "shift_paren_or" (formula "48") (term "0,0,1,0"))
                                                      (rule "commute_or_2" (formula "48") (term "0,0,0,1,0"))
                                                      (rule "all_pull_out3" (formula "23") (term "0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "23") (term "0,0,0,0,0"))
                                                      (rule "commute_or" (formula "23") (term "0,0,0,0,0,0"))
                                                      (rule "all_pull_out3" (formula "48") (term "1,0"))
                                                      (rule "cnf_rightDist" (formula "48") (term "0,1,0"))
                                                      (rule "commute_or_2" (formula "48") (term "1,0,1,0"))
                                                      (rule "shift_paren_or" (formula "48") (term "0,0,1,0"))
                                                      (rule "commute_or_2" (formula "48") (term "0,1,0,1,0"))
                                                      (rule "shift_paren_or" (formula "48") (term "0,0,0,1,0"))
                                                      (rule "commute_or_2" (formula "48") (term "0,0,0,0,1,0"))
                                                      (rule "shift_paren_or" (formula "48") (term "0,0,1,0,1,0"))
                                                      (rule "commute_or" (formula "48") (term "0,0,0,1,0,1,0"))
                                                      (rule "shift_paren_and" (formula "39") (term "0,0,0,0,1,1,0"))
                                                      (rule "cnf_rightDist" (formula "39") (term "0,0,0,1,1,0"))
                                                      (rule "commute_or" (formula "39") (term "0,0,0,0,1,1,0"))
                                                      (rule "cnf_rightDist" (formula "39") (term "1,0,0,0,1,1,0"))
                                                      (rule "commute_or_2" (formula "39") (term "1,1,0,0,0,1,1,0"))
                                                      (rule "eq_or" (formula "39") (term "0,1,1,0,0,0,1,1,0"))
                                                      (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,1,1,0"))
                                                      (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,1,1,0"))
                                                      (rule "commute_or" (formula "39") (term "0,1,0,0,0,0,1,1,0"))
                                                      (rule "allLeft" (formula "32") (inst "t=i_1_2"))
                                                      (rule "replace_known_left" (formula "32") (term "0,0,0,0") (ifseqformula "48"))
                                                      (rule "concrete_not_1" (formula "32") (term "0,0,0"))
                                                      (rule "concrete_or_2" (formula "32") (term "0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "46"))
                                                      (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                      (rule "concrete_and_2" (formula "32") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "32") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "32") (term "1") (ifseqformula "47"))
                                                      (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "32") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "32") (term "1"))
                                                      (rule "concrete_or_4" (formula "32"))
                                                      (rule "cnf_rightDist" (formula "40") (term "0,1,0,0,0,1,1,0"))
                                                      (rule "eq_or_2" (formula "40") (term "1,0,1,0,0,0,1,1,0"))
                                                      (rule "allLeft" (formula "33") (inst "t=i_1_0"))
                                                      (rule "replace_known_left" (formula "33") (term "0,0,0,0") (ifseqformula "27"))
                                                      (rule "concrete_not_1" (formula "33") (term "0,0,0"))
                                                      (rule "concrete_or_2" (formula "33") (term "0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "33") (term "1") (ifseqformula "26"))
                                                      (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "33") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "33") (term "1"))
                                                      (rule "concrete_or_4" (formula "33"))
                                                      (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "25"))
                                                      (rule "qeq_literals" (formula "33") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "33") (term "1"))
                                                      (rule "concrete_or_4" (formula "33"))
                                                      (rule "allLeft" (formula "70") (inst "t=l_0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "70") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,1,0"))
                                                      (rule "add_literals" (formula "70") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "70") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "70") (term "0,1,0"))
                                                      (rule "qeq_literals" (formula "70") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "70") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "70") (term "1") (ifseqformula "69"))
                                                      (rule "inEqSimp_homoInEq1" (formula "70") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "70") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "70") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "70") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,1"))
                                                      (rule "add_literals" (formula "70") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "70") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "70") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "70") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "70") (term "1"))
                                                      (rule "concrete_or_4" (formula "70"))
                                                      (rule "notLeft" (formula "70"))
                                                      (rule "allLeft" (formula "71") (inst "t=l_0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "71") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,1,0"))
                                                      (rule "add_literals" (formula "71") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "71") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "71") (term "0,1,0"))
                                                      (rule "qeq_literals" (formula "71") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "71") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "71") (term "1") (ifseqformula "69"))
                                                      (rule "inEqSimp_homoInEq1" (formula "71") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "71") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "71") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "71") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "71") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,0,1"))
                                                      (rule "add_literals" (formula "71") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "71") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "71") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "71") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "71") (term "1"))
                                                      (rule "concrete_or_4" (formula "71"))
                                                      (rule "notLeft" (formula "71"))
                                                      (rule "allLeft" (formula "71") (inst "t=n_0"))
                                                      (rule "replace_known_left" (formula "71") (term "0,0,0") (ifseqformula "5"))
                                                      (rule "concrete_not_1" (formula "71") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "71") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "71") (term "0") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "71") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "71") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "71") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,0,0"))
                                                      (rule "add_literals" (formula "71") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "71") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "71") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "71") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "71") (term "0"))
                                                      (rule "concrete_or_2" (formula "71"))
                                                      (rule "inEqSimp_antiSymm" (formula "71") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "5") (term "0,0,2,0") (ifseqformula "71"))
                                                      (rule "close" (formula "80") (ifseqformula "5"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: l_0 <= -1 + l_1 FALSE"
                                                (rule "concrete_impl_2" (formula "60"))
                                                (rule "true_left" (formula "60"))
                                                (rule "inEqSimp_leqRight" (formula "65"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "3"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,0"))
                                                (rule "times_zero_1" (formula "3") (term "0"))
                                                (rule "qeq_literals" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEqRigid" (formula "46") (term "0,0,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,0"))
                                                (rule "times_zero_1" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "51") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "49") (term "0,1,1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "5") (term "0,1,1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "45"))
                                                (rule "applyEq" (formula "44") (term "0,1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "45") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "46") (term "0,1") (ifseqformula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "54"))
                                                (rule "leq_literals" (formula "2") (term "0"))
                                                (rule "concrete_or_1" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "56"))
                                                (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                (rule "inEqSimp_subsumption4" (formula "5") (ifseqformula "54"))
                                                (rule "greater_literals" (formula "5") (term "0,0"))
                                                (rule "concrete_and_1" (formula "5") (term "0"))
                                                (rule "mul_literals" (formula "5") (term "0,0"))
                                                (rule "leq_literals" (formula "5") (term "0"))
                                                (rule "concrete_or_1" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "nnf_imp2or" (formula "40") (term "1,0"))
                                                (rule "div_axiom" (formula "12") (term "1") (inst "quotient=quotient_0"))
                                                (rule "mul_literals" (formula "12") (term "1,1,1,1,1"))
                                                (rule "equal_literals" (formula "12") (term "0"))
                                                (rule "concrete_or_2" (formula "12"))
                                                (rule "qeq_literals" (formula "12") (term "0,1"))
                                                (rule "ifthenelse_true_for" (formula "12") (term "1"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "polySimp_addComm1" (formula "14") (term "1"))
                                                (rule "add_literals" (formula "14") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "13"))
                                                (rule "inEqSimp_homoInEq1" (formula "14"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                (rule "applyEqRigid" (formula "18") (term "1,1,0,0") (ifseqformula "12"))
                                                (rule "applyEqRigid" (formula "34") (term "1,1,1,0,0") (ifseqformula "12"))
                                                (rule "applyEqRigid" (formula "19") (term "1,0,0,0,1,0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "35") (term "1,1,1,0,0") (ifseqformula "12"))
                                                (rule "applyEqRigid" (formula "41") (term "0") (ifseqformula "12"))
                                                (rule "inEqSimp_homoInEq1" (formula "41"))
                                                (rule "polySimp_addComm1" (formula "41") (term "0"))
                                                (rule "applyEq" (formula "35") (term "1,1,1,0,0,1,0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "33") (term "1,1,0,0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "43") (term "1,1,1,0,0") (ifseqformula "12"))
                                                (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "12"))
                                                (rule "inEqSimp_homoInEq1" (formula "21"))
                                                (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                (rule "applyEqRigid" (formula "27") (term "1,1,0,0") (ifseqformula "12"))
                                                (rule "applyEqRigid" (formula "16") (term "1,0") (ifseqformula "12"))
                                                (rule "applyEqRigid" (formula "19") (term "1,1,0,0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "44") (term "1,1,1,0,0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "15") (term "1") (ifseqformula "12"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                (rule "mul_literals" (formula "14") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "41"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                                (rule "polySimp_rightDist" (formula "41") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                                (rule "mul_literals" (formula "41") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1"))
                                                (rule "mul_literals" (formula "21") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "14"))
                                                (rule "mul_literals" (formula "17") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                (rule "add_literals" (formula "17") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                (rule "mul_literals" (formula "17") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "17") (term "0,0"))
                                                (rule "concrete_or_2" (formula "17") (term "0"))
                                                (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "17") (term "0,0"))
                                                (rule "leq_literals" (formula "17") (term "0"))
                                                (rule "concrete_or_2" (formula "17"))
                                                (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "42"))
                                                (rule "times_zero_1" (formula "41") (term "0,0"))
                                                (rule "add_zero_left" (formula "41") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                                (rule "mul_literals" (formula "41") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "17"))
                                                (rule "leq_literals" (formula "41") (term "0"))
                                                (rule "concrete_or_1" (formula "41"))
                                                (rule "true_left" (formula "41"))
                                                (rule "inEqSimp_exactShadow3" (formula "58") (ifseqformula "14"))
                                                (rule "polySimp_rightDist" (formula "58") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0"))
                                                (rule "mul_literals" (formula "58") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "58") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                                                (rule "add_literals" (formula "58") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "58") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "58"))
                                                (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "58") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "58") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "58") (term "0,0"))
                                                (rule "concrete_or_2" (formula "58") (term "0"))
                                                (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                                (rule "neg_literal" (formula "58") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "58") (term "0,0"))
                                                (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "58") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "58") (term "0,0"))
                                                (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "58") (term "0,0"))
                                                (rule "qeq_literals" (formula "58") (term "0"))
                                                (rule "concrete_or_2" (formula "58"))
                                                (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                                (rule "times_zero_1" (formula "21") (term "0,0"))
                                                (rule "add_zero_left" (formula "21") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                (rule "mul_literals" (formula "21") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "17"))
                                                (rule "leq_literals" (formula "21") (term "0"))
                                                (rule "concrete_or_1" (formula "21"))
                                                (rule "true_left" (formula "21"))
                                                (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "14"))
                                                (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "52"))
                                                (rule "polySimp_mulAssoc" (formula "13") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                                                (rule "neg_literal" (formula "13") (term "0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "13") (term "0,0"))
                                                (rule "concrete_or_2" (formula "13") (term "0"))
                                                (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "13") (term "0,0"))
                                                (rule "qeq_literals" (formula "13") (term "0"))
                                                (rule "concrete_or_2" (formula "13"))
                                                (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "15"))
                                                (rule "polySimp_rightDist" (formula "41") (term "0,0"))
                                                (rule "mul_literals" (formula "41") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "41") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                                                (rule "add_literals" (formula "41") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "41") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "41"))
                                                (rule "times_zero_1" (formula "39") (term "0,0"))
                                                (rule "add_zero_left" (formula "39") (term "0"))
                                                (rule "inEqSimp_subsumption6" (formula "39") (ifseqformula "18"))
                                                (rule "mul_literals" (formula "39") (term "1,1,0"))
                                                (rule "greater_literals" (formula "39") (term "0,0"))
                                                (rule "concrete_and_1" (formula "39") (term "0"))
                                                (rule "leq_literals" (formula "39") (term "0"))
                                                (rule "concrete_or_1" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "61"))
                                                (rule "times_zero_1" (formula "59") (term "0,0"))
                                                (rule "add_zero_left" (formula "59") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "59") (ifseqformula "18"))
                                                (rule "leq_literals" (formula "59") (term "0"))
                                                (rule "concrete_or_1" (formula "59"))
                                                (rule "true_left" (formula "59"))
                                                (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "32"))
                                                (rule "times_zero_1" (formula "30") (term "0,0"))
                                                (rule "add_zero_left" (formula "30") (term "0"))
                                                (rule "inEqSimp_subsumption6" (formula "30") (ifseqformula "18"))
                                                (rule "greater_literals" (formula "30") (term "0,0"))
                                                (rule "concrete_and_1" (formula "30") (term "0"))
                                                (rule "mul_literals" (formula "30") (term "1,0"))
                                                (rule "leq_literals" (formula "30") (term "0"))
                                                (rule "concrete_or_1" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "div_axiom" (formula "66") (term "0,1,1,1") (inst "quotient=quotient_1"))
                                                (rule "equal_literals" (formula "66") (term "0"))
                                                (rule "concrete_or_2" (formula "66"))
                                                (rule "mul_literals" (formula "66") (term "1,1,1,1"))
                                                (rule "qeq_literals" (formula "66") (term "0,1"))
                                                (rule "ifthenelse_true_for" (formula "66") (term "1"))
                                                (rule "andLeft" (formula "66"))
                                                (rule "andLeft" (formula "66"))
                                                (rule "polySimp_addAssoc" (formula "68") (term "0,1"))
                                                (rule "add_literals" (formula "68") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "68") (term "1"))
                                                (rule "add_literals" (formula "68") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "67"))
                                                (rule "polySimp_mulLiterals" (formula "67") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "67") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "68"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                (rule "applyEq" (formula "69") (term "0,1,1,0") (ifseqformula "66"))
                                                (rule "polySimp_addComm1" (formula "69") (term "1,0"))
                                                (rule "applyEq" (formula "70") (term "0,1,1,0") (ifseqformula "66"))
                                                (rule "polySimp_addComm1" (formula "70") (term "1,0"))
                                                (rule "applyEqRigid" (formula "69") (term "0,1,1,1") (ifseqformula "66"))
                                                (rule "polySimp_addComm1" (formula "69") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "67"))
                                                (rule "polySimp_mulComm0" (formula "67") (term "1"))
                                                (rule "polySimp_rightDist" (formula "67") (term "1"))
                                                (rule "mul_literals" (formula "67") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "67") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "68"))
                                                (rule "polySimp_mulComm0" (formula "68") (term "1"))
                                                (rule "polySimp_rightDist" (formula "68") (term "1"))
                                                (rule "mul_literals" (formula "68") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,1"))
                                                (rule "elimGcdLeq_antec" (formula "68") (inst "elimGcdRightDiv=add(Z(0(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "68") (term "0,0"))
                                                (rule "concrete_or_2" (formula "68") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0"))
                                                (rule "neg_literal" (formula "68") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0"))
                                                (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "68") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "68") (term "0,0,0"))
                                                (rule "add_literals" (formula "68") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "68") (term "0,0,0"))
                                                (rule "add_literals" (formula "68") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0"))
                                                (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "68") (term "0,0"))
                                                (rule "qeq_literals" (formula "68") (term "0"))
                                                (rule "concrete_or_2" (formula "68"))
                                                (rule "elimGcdGeq_antec" (formula "67") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "67") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "67") (term "0,0"))
                                                (rule "concrete_or_2" (formula "67") (term "0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "67") (term "0,0"))
                                                (rule "add_literals" (formula "67") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "67") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "67") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "67") (term "0,0,0"))
                                                (rule "add_literals" (formula "67") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "67") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "67") (term "0,0,0"))
                                                (rule "add_literals" (formula "67") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "67") (term "0,0"))
                                                (rule "add_literals" (formula "67") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "67") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "67") (term "0,0"))
                                                (rule "leq_literals" (formula "67") (term "0"))
                                                (rule "concrete_or_2" (formula "67"))
                                                (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "68"))
                                                (rule "mul_literals" (formula "59") (term "0,0"))
                                                (rule "add_zero_left" (formula "59") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "59"))
                                                (rule "mul_literals" (formula "59") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "59") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "59") (term "0,0"))
                                                (rule "concrete_or_2" (formula "59") (term "0"))
                                                (rule "mul_literals" (formula "59") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "59") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "59") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "59") (term "0,0"))
                                                (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "59") (term "0,0"))
                                                (rule "leq_literals" (formula "59") (term "0"))
                                                (rule "concrete_or_2" (formula "59"))
                                                (rule "inEqSimp_exactShadow3" (formula "68") (ifseqformula "62"))
                                                (rule "polySimp_rightDist" (formula "68") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0"))
                                                (rule "mul_literals" (formula "68") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "68"))
                                                (rule "polySimp_mulComm0" (formula "68") (term "1"))
                                                (rule "polySimp_rightDist" (formula "68") (term "1"))
                                                (rule "mul_literals" (formula "68") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "69") (ifseqformula "61"))
                                                (rule "polySimp_rightDist" (formula "69") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0"))
                                                (rule "mul_literals" (formula "69") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "69") (term "0"))
                                                (rule "add_literals" (formula "69") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "69"))
                                                (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "69") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                (rule "polySimp_mulLiterals" (formula "69") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "69") (term "0,0"))
                                                (rule "concrete_or_2" (formula "69") (term "0"))
                                                (rule "mul_literals" (formula "69") (term "1,0,0,0,0,0"))
                                                (rule "neg_literal" (formula "69") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "69") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "69") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "69") (term "0,0"))
                                                (rule "add_literals" (formula "69") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "69") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "69") (term "0,0"))
                                                (rule "qeq_literals" (formula "69") (term "0"))
                                                (rule "concrete_or_2" (formula "69"))
                                                (rule "inEqSimp_antiSymm" (formula "59") (ifseqformula "69"))
                                                (rule "applyEq" (formula "69") (term "0,1,1") (ifseqformula "59"))
                                                (rule "mul_literals" (formula "69") (term "1,1"))
                                                (rule "add_literals" (formula "69") (term "1"))
                                                (rule "applyEq" (formula "71") (term "0,1,1") (ifseqformula "59"))
                                                (rule "mul_literals" (formula "71") (term "1,1"))
                                                (rule "add_literals" (formula "71") (term "1"))
                                                (rule "applyEq" (formula "60") (term "0") (ifseqformula "59"))
                                                (rule "qeq_literals" (formula "60"))
                                                (rule "true_left" (formula "60"))
                                                (rule "applyEq" (formula "71") (term "0,1,1") (ifseqformula "59"))
                                                (rule "mul_literals" (formula "71") (term "1,1"))
                                                (rule "add_literals" (formula "71") (term "1"))
                                                (rule "applyEqRigid" (formula "69") (term "0") (ifseqformula "59"))
                                                (rule "leq_literals" (formula "69"))
                                                (rule "true_left" (formula "69"))
                                                (rule "applyEqRigid" (formula "71") (term "0,1,0,1,0") (ifseqformula "59"))
                                                (rule "mul_literals" (formula "71") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "71") (term "0,1,0"))
                                                (rule "applyEqRigid" (formula "67") (term "1") (ifseqformula "59"))
                                                (rule "applyEq" (formula "72") (term "0,1,0,1,0") (ifseqformula "59"))
                                                (rule "mul_literals" (formula "72") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "72") (term "0,1,0"))
                                                (rule "applyEqRigid" (formula "71") (term "0,1,0,1,1") (ifseqformula "59"))
                                                (rule "mul_literals" (formula "71") (term "1,0,1,1"))
                                                (rule "add_literals" (formula "71") (term "0,1,1"))
                                                (rule "inEqSimp_subsumption0" (formula "70") (ifseqformula "61"))
                                                (rule "leq_literals" (formula "70") (term "0"))
                                                (rule "concrete_or_1" (formula "70"))
                                                (rule "true_left" (formula "70"))
                                                (rule "inEqSimp_subsumption1" (formula "68") (ifseqformula "18"))
                                                (rule "leq_literals" (formula "68") (term "0"))
                                                (rule "concrete_or_1" (formula "68"))
                                                (rule "true_left" (formula "68"))
                                                (rule "inEqSimp_subsumption1" (formula "68") (ifseqformula "60"))
                                                (rule "leq_literals" (formula "68") (term "0"))
                                                (rule "concrete_or_1" (formula "68"))
                                                (rule "true_left" (formula "68"))
                                                (rule "cut_direct" (formula "77") (term "0,0"))
                                                (branch "CUT: self.table[n_0 * 2] = null TRUE"
                                                   (rule "concrete_not_1" (formula "78") (term "0"))
                                                   (rule "concrete_and_2" (formula "78"))
                                                   (rule "false_right" (formula "78"))
                                                   (rule "nnf_imp2or" (formula "49") (term "1,0"))
                                                   (rule "nnf_notAnd" (formula "39") (term "0,1,0,1,0"))
                                                   (rule "double_not" (formula "39") (term "0,0,1,0,1,0"))
                                                   (rule "nnf_notOr" (formula "37") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "37") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "37") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "37") (term "0,0,0,1,1,0"))
                                                   (rule "nnf_imp2or" (formula "38") (term "0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,1,0"))
                                                   (rule "double_not" (formula "48") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "48") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "48") (term "0,1,1,0"))
                                                   (rule "commute_or_2" (formula "21") (term "0,1,1,0"))
                                                   (rule "commute_or_2" (formula "30") (term "0"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,1,0"))
                                                   (rule "nnf_imp2or" (formula "49") (term "0"))
                                                   (rule "nnf_imp2or" (formula "39") (term "0"))
                                                   (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                                   (rule "nnf_imp2or" (formula "48") (term "0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "0,1,0"))
                                                   (rule "double_not" (formula "49") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "39") (term "0,1,0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "48") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "1,0,0,0"))
                                                   (rule "nnf_imp2or" (formula "49") (term "0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "37") (term "0,0,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "37") (term "1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "37") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "39") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "72") (term "0") (ifseqformula "8"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "73"))
                                                   (rule "concrete_or_2" (formula "1"))
                                                   (rule "nnf_notOr" (formula "50") (term "0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "38") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,1,1,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "38") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "50") (term "0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "50") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "50") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "50") (term "0,0,0,1,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "50") (term "0,0,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "50") (term "0,1,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "50") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "50") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "commute_or_2" (formula "39") (term "0"))
                                                   (rule "commute_or" (formula "31") (term "0,0"))
                                                   (rule "commute_or_2" (formula "23") (term "0,0,1,0"))
                                                   (rule "inEqSimp_or_weaken2" (formula "23") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "1,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "23") (term "0,1,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "23") (term "1,0,1,0,1,0"))
                                                   (rule "eqClose" (formula "23") (term "0,1,0,1,0"))
                                                   (rule "ifthenelse_true_for" (formula "23") (term "1,0,1,0"))
                                                   (rule "commute_or" (formula "22") (term "0,0,1,1,0"))
                                                   (rule "commute_or_2" (formula "48") (term "0,1,1,0"))
                                                   (rule "commute_or" (formula "39") (term "0,0,1,0"))
                                                   (rule "commute_and" (formula "38") (term "1,0,0,0,1,1,0"))
                                                   (rule "commute_or" (formula "49") (term "0,1,1,0"))
                                                   (rule "commute_or" (formula "23") (term "0,0,1,0"))
                                                   (rule "cut_direct" (formula "69") (term "0"))
                                                   (branch "CUT: pow(2, i_1_1) >= 3 + l_1 * 2 TRUE"
                                                      (rule "concrete_impl_1" (formula "70"))
                                                      (rule "applyEq" (formula "7") (term "0") (ifseqformula "70"))
                                                      (rule "inEqSimp_homoInEq1" (formula "7"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0"))
                                                      (rule "add_literals" (formula "7") (term "0"))
                                                      (rule "leq_literals" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "applyEq" (formula "70") (term "0,1") (ifseqformula "69"))
                                                      (rule "applyEq" (formula "66") (term "0") (ifseqformula "69"))
                                                      (rule "inEqSimp_homoInEq1" (formula "66"))
                                                      (rule "polySimp_mulComm0" (formula "66") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "66") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "66") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "66") (term "0"))
                                                      (rule "add_literals" (formula "66") (term "0,0"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "69"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0"))
                                                      (rule "applyEq" (formula "65") (term "0") (ifseqformula "69"))
                                                      (rule "inEqSimp_homoInEq0" (formula "65"))
                                                      (rule "polySimp_mulComm0" (formula "65") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "65") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "65") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "65") (term "0"))
                                                      (rule "add_literals" (formula "65") (term "0,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "70") (term "1"))
                                                      (rule "mul_literals" (formula "70") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                                                      (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                      (rule "mul_literals" (formula "6") (term "0,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "65"))
                                                      (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                                                      (rule "inEqSimp_subsumption6" (formula "66") (ifseqformula "60"))
                                                      (rule "times_zero_1" (formula "66") (term "1,1,0"))
                                                      (rule "greater_literals" (formula "66") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "66") (term "0"))
                                                      (rule "leq_literals" (formula "66") (term "0"))
                                                      (rule "concrete_or_1" (formula "66"))
                                                      (rule "true_left" (formula "66"))
                                                      (rule "inEqSimp_contradInEq1" (formula "69") (term "0") (ifseqformula "67"))
                                                      (rule "inEqSimp_homoInEq1" (formula "69") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "69") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "69") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "69") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "69") (term "0,0,0"))
                                                      (rule "add_literals" (formula "69") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "69") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "69") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "69") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "69") (term "0"))
                                                      (rule "concrete_impl_2" (formula "69"))
                                                      (rule "true_left" (formula "69"))
                                                      (rule "inEqSimp_subsumption1" (formula "63") (ifseqformula "67"))
                                                      (rule "inEqSimp_homoInEq0" (formula "63") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "63") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "63") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "63") (term "0,0,0"))
                                                      (rule "add_literals" (formula "63") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "63") (term "0,0"))
                                                      (rule "add_literals" (formula "63") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "63") (term "1,0,0"))
                                                      (rule "add_literals" (formula "63") (term "0,0"))
                                                      (rule "qeq_literals" (formula "63") (term "0"))
                                                      (rule "concrete_or_1" (formula "63"))
                                                      (rule "true_left" (formula "63"))
                                                      (rule "inEqSimp_subsumption4" (formula "64") (ifseqformula "61"))
                                                      (rule "mul_literals" (formula "64") (term "0,1,0"))
                                                      (rule "greater_literals" (formula "64") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "64") (term "0"))
                                                      (rule "leq_literals" (formula "64") (term "0"))
                                                      (rule "concrete_or_1" (formula "64"))
                                                      (rule "true_left" (formula "64"))
                                                      (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=add(Z(0(#)), l_1)") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                                      (rule "add_zero_left" (formula "6") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                      (rule "leq_literals" (formula "6") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "6") (term "0"))
                                                      (rule "neg_literal" (formula "6") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "6") (term "1,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "6") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0"))
                                                      (rule "qeq_literals" (formula "6") (term "0"))
                                                      (rule "concrete_or_2" (formula "6"))
                                                      (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "6"))
                                                      (rule "applyEqRigid" (formula "57") (term "0") (ifseqformula "4"))
                                                      (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5"))
                                                      (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                      (rule "add_literals" (formula "5") (term "1,0"))
                                                      (rule "times_zero_1" (formula "5") (term "0"))
                                                      (rule "leq_literals" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "applyEqRigid" (formula "2") (term "0,0,2,0") (ifseqformula "4"))
                                                      (rule "close" (formula "67") (ifseqformula "2"))
                                                   )
                                                   (branch "CUT: pow(2, i_1_1) >= 3 + l_1 * 2 FALSE"
                                                      (rule "concrete_impl_2" (formula "69"))
                                                      (rule "true_left" (formula "69"))
                                                      (rule "inEqSimp_geqRight" (formula "71"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "replace_known_left" (formula "70") (term "0") (ifseqformula "1"))
                                                      (rule "concrete_impl_1" (formula "70"))
                                                      (rule "applyEq" (formula "8") (term "0") (ifseqformula "70"))
                                                      (rule "inEqSimp_homoInEq1" (formula "8"))
                                                      (rule "times_zero_2" (formula "8") (term "1,0"))
                                                      (rule "add_zero_right" (formula "8") (term "0"))
                                                      (rule "applyEq" (formula "7") (term "0") (ifseqformula "70"))
                                                      (rule "inEqSimp_homoInEq1" (formula "7"))
                                                      (rule "times_zero_2" (formula "7") (term "1,0"))
                                                      (rule "add_zero_right" (formula "7") (term "0"))
                                                      (rule "applyEq" (formula "68") (term "0") (ifseqformula "70"))
                                                      (rule "qeq_literals" (formula "68"))
                                                      (rule "true_left" (formula "68"))
                                                      (rule "applyEq" (formula "67") (term "0") (ifseqformula "69"))
                                                      (rule "leq_literals" (formula "67"))
                                                      (rule "true_left" (formula "67"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                      (rule "mul_literals" (formula "8") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                      (rule "mul_literals" (formula "7") (term "1"))
                                                      (rule "inEqSimp_contradInEq5" (formula "7") (ifseqformula "58"))
                                                      (rule "times_zero_1" (formula "7") (term "1,1,0"))
                                                      (rule "greater_literals" (formula "7") (term "0,0"))
                                                      (rule "concrete_impl_1" (formula "7") (term "0"))
                                                      (rule "qeq_literals" (formula "7") (term "0"))
                                                      (rule "concrete_and_2" (formula "7"))
                                                      (rule "closeFalse" (formula "7"))
                                                   )
                                                )
                                                (branch "CUT: self.table[n_0 * 2] = null FALSE"
                                                   (rule "concrete_not_2" (formula "78") (term "0"))
                                                   (rule "concrete_and_1" (formula "78"))
                                                   (rule "notRight" (formula "78"))
                                                   (rule "applyEq" (formula "78") (term "0") (ifseqformula "1"))
                                                   (rule "nnf_imp2or" (formula "49") (term "1,0"))
                                                   (rule "nnf_notAnd" (formula "39") (term "0,1,0,1,0"))
                                                   (rule "double_not" (formula "39") (term "0,0,1,0,1,0"))
                                                   (rule "nnf_notOr" (formula "37") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "37") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "37") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,1,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "37") (term "0,0,0,1,1,0"))
                                                   (rule "nnf_imp2or" (formula "38") (term "0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,1,0"))
                                                   (rule "double_not" (formula "48") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "48") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "48") (term "0,1,1,0"))
                                                   (rule "commute_or_2" (formula "21") (term "0,1,1,0"))
                                                   (rule "commute_or_2" (formula "30") (term "0"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,1,0"))
                                                   (rule "nnf_imp2or" (formula "49") (term "0"))
                                                   (rule "nnf_imp2or" (formula "39") (term "0"))
                                                   (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                                   (rule "nnf_imp2or" (formula "48") (term "0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "0,1,0"))
                                                   (rule "double_not" (formula "49") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "39") (term "0,1,0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "48") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                                                   (rule "nnf_imp2or" (formula "49") (term "0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "37") (term "0,0,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "37") (term "1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "37") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "39") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "72") (term "0") (ifseqformula "8"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "73"))
                                                   (rule "concrete_or_2" (formula "1"))
                                                   (rule "nnf_notOr" (formula "50") (term "0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "38") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,1,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "38") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "50") (term "0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "50") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "50") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "50") (term "0,0,0,1,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "50") (term "0,0,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "50") (term "0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "commute_or_2" (formula "39") (term "0"))
                                                   (rule "commute_or" (formula "31") (term "0,0"))
                                                   (rule "commute_or_2" (formula "23") (term "0,0,1,0"))
                                                   (rule "inEqSimp_or_weaken2" (formula "23") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "1,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "23") (term "0,1,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "23") (term "1,0,1,0,1,0"))
                                                   (rule "eqClose" (formula "23") (term "0,1,0,1,0"))
                                                   (rule "ifthenelse_true_for" (formula "23") (term "1,0,1,0"))
                                                   (rule "commute_or" (formula "22") (term "0,0,1,1,0"))
                                                   (rule "commute_or_2" (formula "48") (term "0,1,1,0"))
                                                   (rule "shift_paren_or" (formula "39") (term "0,1,0"))
                                                   (rule "commute_and" (formula "38") (term "1,0,0,0,1,1,0"))
                                                   (rule "commute_or" (formula "49") (term "0,1,1,0"))
                                                   (rule "commute_or" (formula "23") (term "0,0,1,0"))
                                                   (rule "cut_direct" (formula "69") (term "0"))
                                                   (branch "CUT: pow(2, i_1_1) >= 3 + l_1 * 2 TRUE"
                                                      (rule "concrete_impl_1" (formula "70"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "70"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0"))
                                                      (rule "applyEq" (formula "67") (term "0") (ifseqformula "70"))
                                                      (rule "inEqSimp_homoInEq1" (formula "67"))
                                                      (rule "polySimp_mulComm0" (formula "67") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "67") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "67") (term "0"))
                                                      (rule "add_literals" (formula "67") (term "0,0"))
                                                      (rule "applyEq" (formula "66") (term "0") (ifseqformula "70"))
                                                      (rule "inEqSimp_homoInEq0" (formula "66"))
                                                      (rule "polySimp_mulComm0" (formula "66") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "66") (term "1,0"))
                                                      (rule "mul_literals" (formula "66") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "66") (term "0"))
                                                      (rule "add_literals" (formula "66") (term "0,0"))
                                                      (rule "applyEq" (formula "7") (term "0") (ifseqformula "70"))
                                                      (rule "inEqSimp_homoInEq1" (formula "7"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0"))
                                                      (rule "add_literals" (formula "7") (term "0"))
                                                      (rule "leq_literals" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "applyEq" (formula "70") (term "0,1") (ifseqformula "69"))
                                                      (rule "polySimp_sepPosMonomial" (formula "70") (term "1"))
                                                      (rule "mul_literals" (formula "70") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                      (rule "mul_literals" (formula "6") (term "0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                                                      (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "65"))
                                                      (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "63") (ifseqformula "68"))
                                                      (rule "inEqSimp_homoInEq0" (formula "63") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "63") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "63") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "63") (term "0,0,0"))
                                                      (rule "add_literals" (formula "63") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "63") (term "0,0"))
                                                      (rule "add_literals" (formula "63") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "63") (term "1,0,0"))
                                                      (rule "add_literals" (formula "63") (term "0,0"))
                                                      (rule "qeq_literals" (formula "63") (term "0"))
                                                      (rule "concrete_or_1" (formula "63"))
                                                      (rule "true_left" (formula "63"))
                                                      (rule "inEqSimp_subsumption4" (formula "64") (ifseqformula "61"))
                                                      (rule "mul_literals" (formula "64") (term "0,1,0"))
                                                      (rule "greater_literals" (formula "64") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "64") (term "0"))
                                                      (rule "leq_literals" (formula "64") (term "0"))
                                                      (rule "concrete_or_1" (formula "64"))
                                                      (rule "true_left" (formula "64"))
                                                      (rule "inEqSimp_contradInEq1" (formula "68") (term "0") (ifseqformula "66"))
                                                      (rule "inEqSimp_homoInEq1" (formula "68") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "68") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "68") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "68") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0,0"))
                                                      (rule "add_literals" (formula "68") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "68") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "68") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "68") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "68") (term "0"))
                                                      (rule "concrete_impl_2" (formula "68"))
                                                      (rule "true_left" (formula "68"))
                                                      (rule "inEqSimp_subsumption6" (formula "64") (ifseqformula "60"))
                                                      (rule "times_zero_1" (formula "64") (term "1,1,0"))
                                                      (rule "greater_literals" (formula "64") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "64") (term "0"))
                                                      (rule "leq_literals" (formula "64") (term "0"))
                                                      (rule "concrete_or_1" (formula "64"))
                                                      (rule "true_left" (formula "64"))
                                                      (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=add(Z(0(#)), l_1)") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                                      (rule "add_zero_left" (formula "6") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                      (rule "add_zero_left" (formula "6") (term "1,1,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "6") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "6") (term "0"))
                                                      (rule "neg_literal" (formula "6") (term "0,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "6") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0"))
                                                      (rule "qeq_literals" (formula "6") (term "0"))
                                                      (rule "concrete_or_2" (formula "6"))
                                                      (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "6"))
                                                      (rule "applyEqRigid" (formula "57") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5"))
                                                      (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                      (rule "add_literals" (formula "5") (term "1,0"))
                                                      (rule "times_zero_1" (formula "5") (term "0"))
                                                      (rule "leq_literals" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "6"))
                                                      (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                                      (rule "add_literals" (formula "6") (term "1,0"))
                                                      (rule "times_zero_1" (formula "6") (term "0"))
                                                      (rule "qeq_literals" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "applyEqRigid" (formula "2") (term "0,0,2,0") (ifseqformula "4"))
                                                      (rule "close" (formula "67") (ifseqformula "2"))
                                                   )
                                                   (branch "CUT: pow(2, i_1_1) >= 3 + l_1 * 2 FALSE"
                                                      (rule "concrete_impl_2" (formula "69"))
                                                      (rule "true_left" (formula "69"))
                                                      (rule "inEqSimp_geqRight" (formula "71"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "replace_known_left" (formula "70") (term "0") (ifseqformula "1"))
                                                      (rule "concrete_impl_1" (formula "70"))
                                                      (rule "applyEq" (formula "8") (term "0") (ifseqformula "70"))
                                                      (rule "inEqSimp_homoInEq1" (formula "8"))
                                                      (rule "times_zero_2" (formula "8") (term "1,0"))
                                                      (rule "add_zero_right" (formula "8") (term "0"))
                                                      (rule "applyEq" (formula "67") (term "0") (ifseqformula "70"))
                                                      (rule "leq_literals" (formula "67"))
                                                      (rule "true_left" (formula "67"))
                                                      (rule "applyEq" (formula "7") (term "0") (ifseqformula "69"))
                                                      (rule "inEqSimp_homoInEq1" (formula "7"))
                                                      (rule "times_zero_2" (formula "7") (term "1,0"))
                                                      (rule "add_zero_right" (formula "7") (term "0"))
                                                      (rule "applyEq" (formula "67") (term "0") (ifseqformula "69"))
                                                      (rule "qeq_literals" (formula "67"))
                                                      (rule "true_left" (formula "67"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                      (rule "mul_literals" (formula "8") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                      (rule "mul_literals" (formula "7") (term "1"))
                                                      (rule "inEqSimp_contradInEq5" (formula "7") (ifseqformula "58"))
                                                      (rule "greater_literals" (formula "7") (term "0,0"))
                                                      (rule "concrete_impl_1" (formula "7") (term "0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0"))
                                                      (rule "qeq_literals" (formula "7") (term "0"))
                                                      (rule "concrete_and_2" (formula "7"))
                                                      (rule "closeFalse" (formula "7"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "impRight" (formula "57"))
                                       (rule "andRight" (formula "58"))
                                       (branch "Case 1"
                                          (rule "boolean_not_equal_2" (formula "2") (term "0,0"))
                                          (rule "boolean_not_equal_2" (formula "2") (term "1,0"))
                                          (rule "concrete_or_2" (formula "2") (term "0"))
                                          (rule "concrete_not_2" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "expand_inInt" (formula "45"))
                                          (rule "expand_inInt" (formula "30"))
                                          (rule "expand_inShort" (formula "33"))
                                          (rule "expand_inInt" (formula "16"))
                                          (rule "expand_inInt" (formula "17"))
                                          (rule "expand_inInt" (formula "46"))
                                          (rule "replace_int_MIN" (formula "45") (term "0,1"))
                                          (rule "replace_int_MAX" (formula "45") (term "1,0"))
                                          (rule "replace_int_MAX" (formula "30") (term "1,0"))
                                          (rule "replace_int_MIN" (formula "30") (term "0,1"))
                                          (rule "replace_short_MAX" (formula "33") (term "1,0"))
                                          (rule "replace_short_MIN" (formula "33") (term "0,1"))
                                          (rule "replace_int_MAX" (formula "16") (term "1,0"))
                                          (rule "replace_int_MIN" (formula "16") (term "0,1"))
                                          (rule "replace_int_MAX" (formula "17") (term "1,0"))
                                          (rule "replace_int_MIN" (formula "17") (term "0,1"))
                                          (rule "replace_int_MIN" (formula "46") (term "0,1"))
                                          (rule "replace_int_MAX" (formula "46") (term "1,0"))
                                          (rule "andLeft" (formula "45"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "34"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "andLeft" (formula "51"))
                                          (rule "allRight" (formula "63") (inst "sk=n_0"))
                                          (rule "impRight" (formula "63"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "49") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "13") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "47"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "22"))
                                          (rule "mul_literals" (formula "22") (term "1,0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "28") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "50") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "50") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "42"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "28") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "42") (term "0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "52"))
                                          (rule "inEqSimp_commuteLeq" (formula "35"))
                                          (rule "inEqSimp_commuteLeq" (formula "39"))
                                          (rule "inEqSimp_commuteLeq" (formula "19"))
                                          (rule "inEqSimp_commuteLeq" (formula "21"))
                                          (rule "inEqSimp_commuteLeq" (formula "54"))
                                          (rule "inEqSimp_commuteGeq" (formula "1"))
                                          (rule "applyEq" (formula "28") (term "1,0,1,0,1,0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "62") (term "0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "50") (term "1,0,1,1,0,0,1") (ifseqformula "31"))
                                          (rule "applyEq" (formula "28") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "42") (term "0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "39") (term "0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "54") (term "0,1,0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "58") (term "1") (ifseqformula "30"))
                                          (rule "applyEq" (formula "39") (term "0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "12") (term "0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "48") (term "1,0,1,1,0,1") (ifseqformula "30"))
                                          (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "46") (term "0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "11") (term "0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "37") (term "0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "13") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "49") (term "1,0,1,1,0,1,1") (ifseqformula "30"))
                                          (rule "applyEq" (formula "28") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "13") (term "1,0,1,0,1,0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "63") (term "1,0,0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "14") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "14") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "28") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "49") (term "0,1,0,0,0,0,0,0,1") (ifseqformula "26"))
                                          (rule "applyEq" (formula "28") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "28") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "26"))
                                          (rule "jmod_axiom" (formula "36") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
                                          (rule "jmod_axiom" (formula "47") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "36"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "47"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "48") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "mul_literals" (formula "3") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "48") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                          (rule "mul_literals" (formula "22") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "49") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "49") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "54") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "39"))
                                          (rule "leq_literals" (formula "38") (term "0"))
                                          (rule "concrete_or_1" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "22"))
                                          (rule "leq_literals" (formula "20") (term "0"))
                                          (rule "concrete_or_1" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "37") (term "0"))
                                          (rule "concrete_or_1" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "39"))
                                          (rule "leq_literals" (formula "33") (term "0"))
                                          (rule "concrete_or_1" (formula "33"))
                                          (rule "true_left" (formula "33"))
                                          (rule "inEqSimp_subsumption1" (formula "47") (ifseqformula "41"))
                                          (rule "leq_literals" (formula "47") (term "0"))
                                          (rule "concrete_or_1" (formula "47"))
                                          (rule "true_left" (formula "47"))
                                          (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "35"))
                                          (rule "leq_literals" (formula "12") (term "0"))
                                          (rule "concrete_or_1" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "elimGcdGeq" (formula "44") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0,0,0,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "44") (term "0,0,0,1,0,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,1,0,0,1,1"))
                                          (rule "sub_literals" (formula "44") (term "0,0,0,0,0,0,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "44") (term "0,0,0,1,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,0,1,0,0,1,1"))
                                          (rule "add_zero_left" (formula "44") (term "0,0,1,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "44") (term "0,0,0,0,0,1,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "44") (term "0,1,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "44") (term "1,0,1,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "44") (term "0,1,0,1,0,0,1,1"))
                                          (rule "leq_literals" (formula "44") (term "1,0,1,0,0,1,1"))
                                          (rule "concrete_and_3" (formula "44") (term "0,1,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "44") (term "1,1,0,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "44") (term "0,0,1,0,0,1,1"))
                                          (rule "qeq_literals" (formula "44") (term "0,1,0,0,1,1"))
                                          (rule "ifthenelse_true_for" (formula "44") (term "1,0,0,1,1"))
                                          (rule "elimGcdGeq" (formula "26") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "26") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "concrete_and_1" (formula "26") (term "0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "26") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "26") (term "0,0,0,0,0,0,0,1,1,0"))
                                          (rule "ifthenelse_true_for" (formula "26") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "elimGcdGeq" (formula "26") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "26") (term "0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "26") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "26") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "26") (term "1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "concrete_and_3" (formula "26") (term "0,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "26") (term "0,1,1,0,0,0,0,1,1,0"))
                                          (rule "ifthenelse_true_for" (formula "26") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "elimGcdLeq" (formula "26") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "sub_literals" (formula "26") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "26") (term "1,0,1,1,0,0,0,1,1,0"))
                                          (rule "concrete_and_3" (formula "26") (term "0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "26") (term "0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "0,0,1,1,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "26") (term "0,1,1,0,0,0,1,1,0"))
                                          (rule "ifthenelse_true_for" (formula "26") (term "1,1,0,0,0,1,1,0"))
                                          (rule "elimGcdLeq" (formula "26") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "sub_literals" (formula "26") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "26") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "concrete_and_3" (formula "26") (term "0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "26") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "26") (term "0,0,1,0,0,1,1,0"))
                                          (rule "ifthenelse_true_for" (formula "26") (term "0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "37") (term "0,0"))
                                          (rule "add_zero_left" (formula "37") (term "0"))
                                          (rule "elimGcdGeq_antec" (formula "37") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "leq_literals" (formula "37") (term "0,0"))
                                          (rule "concrete_or_2" (formula "37") (term "0"))
                                          (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                          (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0"))
                                          (rule "leq_literals" (formula "37") (term "0"))
                                          (rule "concrete_or_2" (formula "37"))
                                          (rule "newSym_eq" (formula "33") (inst "l=l_0") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                          (rule "times_zero_1" (formula "33") (term "1,1"))
                                          (rule "add_zero_right" (formula "33") (term "1"))
                                          (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "33"))
                                          (rule "eqSymm" (formula "34"))
                                          (rule "applyEq" (formula "31") (term "0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "45") (term "1,1,0,0,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "39") (term "0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "34"))
                                          (rule "inEqSimp_homoInEq1" (formula "46") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                          (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "34"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "applyEq" (formula "46") (term "1,1,0,0,0,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "34"))
                                          (rule "inEqSimp_homoInEq0" (formula "45") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                          (rule "applyEq" (formula "32") (term "1") (ifseqformula "34"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0"))
                                          (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "1") (term "0,0"))
                                          (rule "concrete_or_2" (formula "1") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "leq_literals" (formula "1") (term "0"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "elimGcdGeq_antec" (formula "39") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "39") (term "0,0"))
                                          (rule "concrete_or_2" (formula "39") (term "0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                                          (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0"))
                                          (rule "leq_literals" (formula "39") (term "0"))
                                          (rule "concrete_or_2" (formula "39"))
                                          (rule "elimGcdLeq_antec" (formula "31") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "31") (term "0,0"))
                                          (rule "concrete_or_2" (formula "31") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                                          (rule "neg_literal" (formula "31") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "31") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                          (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0"))
                                          (rule "qeq_literals" (formula "31") (term "0"))
                                          (rule "concrete_or_2" (formula "31"))
                                          (rule "elimGcdGeq" (formula "46") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "46") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                          (rule "sub_literals" (formula "46") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,1,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,1,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,1,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "46") (term "0,1,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,0,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "0,0,1,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "46") (term "0,1,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "1,0,1,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "46") (term "0,1,0,1,0,0,0,1"))
                                          (rule "leq_literals" (formula "46") (term "1,0,1,0,0,0,1"))
                                          (rule "concrete_and_3" (formula "46") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,1,0,0,0,1"))
                                          (rule "qeq_literals" (formula "46") (term "0,1,0,0,0,1"))
                                          (rule "ifthenelse_true_for" (formula "46") (term "1,0,0,0,1"))
                                          (rule "elimGcdGeq" (formula "45") (term "1,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "45") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                          (rule "sub_literals" (formula "45") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,1,0,1,0,0,1"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,1,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,1,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "45") (term "0,1,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,0,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,0,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "45") (term "0,0,0,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "0,0,1,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "45") (term "0,1,0,1,0,0,1"))
                                          (rule "add_literals" (formula "45") (term "1,0,1,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "45") (term "0,1,0,1,0,0,1"))
                                          (rule "leq_literals" (formula "45") (term "1,0,1,0,0,1"))
                                          (rule "concrete_and_3" (formula "45") (term "0,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "45") (term "0,0,1,0,0,1"))
                                          (rule "qeq_literals" (formula "45") (term "0,1,0,0,1"))
                                          (rule "ifthenelse_true_for" (formula "45") (term "1,0,0,1"))
                                          (rule "newSym_eq" (formula "44") (inst "l=l_1") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                          (rule "times_zero_1" (formula "44") (term "1,1"))
                                          (rule "add_zero_right" (formula "44") (term "1"))
                                          (rule "applyEqRigid" (formula "45") (term "0,0") (ifseqformula "44"))
                                          (rule "eqSymm" (formula "45"))
                                          (rule "applyEqRigid" (formula "54") (term "0,2,0") (ifseqformula "45"))
                                          (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "45"))
                                          (rule "inEqSimp_homoInEq0" (formula "47") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                          (rule "applyEqRigid" (formula "47") (term "1,1,0,0,0,1,1") (ifseqformula "45"))
                                          (rule "applyEq" (formula "51") (term "0,0,1") (ifseqformula "45"))
                                          (rule "applyEqRigid" (formula "55") (term "0,2,0") (ifseqformula "45"))
                                          (rule "applyEqRigid" (formula "44") (term "0,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "52") (term "0,1,0") (ifseqformula "45"))
                                          (rule "applyEqRigid" (formula "43") (term "1,1") (ifseqformula "45"))
                                          (rule "applyEq" (formula "51") (term "0,1,1,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "42") (term "0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "45"))
                                          (rule "inEqSimp_homoInEq1" (formula "46") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                          (rule "applyEqRigid" (formula "46") (term "1,1,0,0,0,1") (ifseqformula "45"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0"))
                                          (rule "elimGcdGeq_antec" (formula "42") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "42") (term "0,0"))
                                          (rule "concrete_or_2" (formula "42") (term "0"))
                                          (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                                          (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                                          (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "42") (term "0,0"))
                                          (rule "leq_literals" (formula "42") (term "0"))
                                          (rule "concrete_or_2" (formula "42"))
                                          (rule "elimGcdLeq_antec" (formula "48") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0"))
                                          (rule "neg_literal" (formula "48") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "48") (term "0,0"))
                                          (rule "concrete_or_2" (formula "48") (term "0"))
                                          (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "48") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "48") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                                          (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "48") (term "0,0"))
                                          (rule "qeq_literals" (formula "48") (term "0"))
                                          (rule "concrete_or_2" (formula "48"))
                                          (rule "elimGcdLeq" (formula "46") (term "0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "46") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "sub_literals" (formula "46") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,0,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,1,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,1,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "46") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "46") (term "0,0,1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "46") (term "0,0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,1,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "0,1,0,0,0,0,1"))
                                          (rule "qeq_literals" (formula "46") (term "1,0,0,0,0,1"))
                                          (rule "concrete_and_3" (formula "46") (term "0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "46") (term "0,0,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "46") (term "0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "1,0,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "46") (term "0,0,0,0,0,1"))
                                          (rule "leq_literals" (formula "46") (term "0,0,0,0,1"))
                                          (rule "ifthenelse_true_for" (formula "46") (term "0,0,0,1"))
                                          (rule "elimGcdLeq" (formula "47") (term "0,0,0,1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "47") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0,0,0,0,1,1"))
                                          (rule "sub_literals" (formula "47") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,1,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,1,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "47") (term "0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,0,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "47") (term "0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "47") (term "0,0,1,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "47") (term "0,0,0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0,0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,1,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "47") (term "0,1,0,0,0,0,1,1"))
                                          (rule "qeq_literals" (formula "47") (term "1,0,0,0,0,1,1"))
                                          (rule "concrete_and_3" (formula "47") (term "0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "47") (term "0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "47") (term "0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "47") (term "1,0,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "47") (term "0,0,0,0,0,1,1"))
                                          (rule "leq_literals" (formula "47") (term "0,0,0,0,1,1"))
                                          (rule "ifthenelse_true_for" (formula "47") (term "0,0,0,1,1"))
                                          (rule "elimGcdLeq" (formula "46") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "46") (term "0,0,0,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "sub_literals" (formula "46") (term "0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "46") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "0,0,1,0,0"))
                                          (rule "mul_literals" (formula "46") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,1,0,0"))
                                          (rule "add_literals" (formula "46") (term "0,1,0,0"))
                                          (rule "qeq_literals" (formula "46") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "46") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "46") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "46") (term "0,0,0"))
                                          (rule "add_literals" (formula "46") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "46") (term "0,0,0"))
                                          (rule "leq_literals" (formula "46") (term "0,0"))
                                          (rule "ifthenelse_true_for" (formula "46") (term "0"))
                                          (rule "elimGcdGeq" (formula "47") (term "0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "47") (term "0,0,0,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "sub_literals" (formula "47") (term "0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "47") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "47") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "0,0,1,0,0"))
                                          (rule "mul_literals" (formula "47") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,1,0,0"))
                                          (rule "add_literals" (formula "47") (term "0,1,0,0"))
                                          (rule "leq_literals" (formula "47") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "47") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "47") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "47") (term "0,0,0"))
                                          (rule "add_literals" (formula "47") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "47") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "47") (term "0,0"))
                                          (rule "ifthenelse_true_for" (formula "47") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "35"))
                                          (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "36"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                          (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "2") (term "0,0"))
                                          (rule "concrete_or_2" (formula "2") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (rule "concrete_or_2" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "4"))
                                          (rule "mul_literals" (formula "52") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                          (rule "add_literals" (formula "52") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                          (rule "mul_literals" (formula "52") (term "1"))
                                          (rule "inEqSimp_subsumption6" (formula "52") (ifseqformula "41"))
                                          (rule "greater_literals" (formula "52") (term "0,0"))
                                          (rule "concrete_and_1" (formula "52") (term "0"))
                                          (rule "times_zero_1" (formula "52") (term "1,0"))
                                          (rule "leq_literals" (formula "52") (term "0"))
                                          (rule "concrete_or_1" (formula "52"))
                                          (rule "true_left" (formula "52"))
                                          (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "37"))
                                          (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "add_literals" (formula "39") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "39") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "neg_literal" (formula "39") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "39") (term "0,0"))
                                          (rule "concrete_or_2" (formula "39") (term "0"))
                                          (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                                          (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0"))
                                          (rule "qeq_literals" (formula "39") (term "0"))
                                          (rule "concrete_or_2" (formula "39"))
                                          (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "39"))
                                          (rule "leq_literals" (formula "33") (term "0"))
                                          (rule "concrete_or_1" (formula "33"))
                                          (rule "true_left" (formula "33"))
                                          (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "36"))
                                          (rule "polySimp_rightDist" (formula "45") (term "0,0"))
                                          (rule "mul_literals" (formula "45") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0"))
                                          (rule "add_literals" (formula "45") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "45") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "neg_literal" (formula "45") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "45") (term "0,0"))
                                          (rule "concrete_or_2" (formula "45") (term "0"))
                                          (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                                          (rule "polySimp_addLiterals" (formula "45") (term "0,0,0,0"))
                                          (rule "add_zero_right" (formula "45") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "45") (term "0,0"))
                                          (rule "qeq_literals" (formula "45") (term "0"))
                                          (rule "concrete_or_2" (formula "45"))
                                          (rule "inEqSimp_subsumption0" (formula "51") (ifseqformula "45"))
                                          (rule "leq_literals" (formula "51") (term "0"))
                                          (rule "concrete_or_1" (formula "51"))
                                          (rule "true_left" (formula "51"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "nnf_imp2or" (formula "22") (term "1,0"))
                                          (rule "nnf_imp2or" (formula "14") (term "1,0,1,0"))
                                          (rule "nnf_imp2or" (formula "13") (term "0,1,1,0"))
                                          (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "31"))
                                          (rule "notLeft" (formula "31"))
                                          (rule "commute_and" (formula "61"))
                                          (rule "nnf_imp2or" (formula "28") (term "0"))
                                          (rule "commute_and" (formula "14") (term "0,0"))
                                          (rule "commute_and" (formula "22") (term "0,0"))
                                          (rule "nnf_imp2or" (formula "49") (term "0,0,1"))
                                          (rule "commute_and" (formula "13") (term "0,0"))
                                          (rule "expand_addJint" (formula "52") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "52") (term "0,0,1"))
                                          (rule "expand_addJint" (formula "53") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "53") (term "0,1,0"))
                                          (rule "expand_addJint" (formula "52") (term "1,1,0"))
                                          (rule "polySimp_addComm0" (formula "52") (term "0,1,1,0"))
                                          (rule "jdiv_axiom" (formula "11") (term "1,0"))
                                          (rule "eqSymm" (formula "11"))
                                          (rule "inEqSimp_subsumption1" (formula "11") (term "0,0") (ifseqformula "13"))
                                          (rule "leq_literals" (formula "11") (term "0,0,0"))
                                          (rule "concrete_or_1" (formula "11") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "11") (term "0"))
                                          (rule "eqSymm" (formula "11"))
                                          (rule "applyEq" (formula "15") (term "1,1,0,0,0,1,0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "23") (term "1,1,1,0,0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "11"))
                                          (rule "applyEqRigid" (formula "15") (term "1,1,1,0,0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "29") (term "1,1,0,0,0,0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "11"))
                                          (rule "nnf_imp2or" (formula "49") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "50") (term "0,1,1"))
                                          (rule "expand_moduloInteger" (formula "53") (term "0,1"))
                                          (rule "replace_int_RANGE" (formula "53") (term "1,1,0,1"))
                                          (rule "replace_int_MIN" (formula "53") (term "0,0,1"))
                                          (rule "replace_int_HALFRANGE" (formula "53") (term "0,0,1,0,1"))
                                          (rule "polySimp_homoEq" (formula "53") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,0,1"))
                                          (rule "mul_literals" (formula "53") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,1,0,1"))
                                          (rule "add_literals" (formula "53") (term "0,0,0,1,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "53") (term "0,0,1"))
                                          (rule "mod_axiom" (formula "53") (term "0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "0,1,0,1"))
                                          (rule "mul_literals" (formula "53") (term "0,0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "53") (term "0,0,0,0,1"))
                                          (rule "polySimp_sepPosMonomial" (formula "53") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,1"))
                                          (rule "mul_literals" (formula "53") (term "0,0,1,1"))
                                          (rule "polyDiv_pullOut" (formula "53") (term "0,1,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "mul_literals" (formula "53") (term "0,1,0,0,2,0,1,1,1"))
                                          (rule "equal_literals" (formula "53") (term "0,0,1,1,1"))
                                          (rule "ifthenelse_false" (formula "53") (term "0,1,1,1"))
                                          (rule "mul_literals" (formula "53") (term "1,0,0,0,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,1,1"))
                                          (rule "polySimp_addComm0" (formula "53") (term "1,1,1,1"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,1,1,1,1,1"))
                                          (rule "add_literals" (formula "53") (term "0,0,1,1,1,1,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,1,1"))
                                          (rule "mul_literals" (formula "53") (term "0,1,1,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "1,1"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,1,1"))
                                          (rule "add_literals" (formula "53") (term "0,0,1,1"))
                                          (rule "expand_moduloInteger" (formula "54") (term "1,0"))
                                          (rule "replace_int_MIN" (formula "54") (term "0,1,0"))
                                          (rule "replace_int_HALFRANGE" (formula "54") (term "0,0,1,1,0"))
                                          (rule "replace_int_RANGE" (formula "54") (term "1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "0,1,1,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,1,1,0"))
                                          (rule "mod_axiom" (formula "54") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "1,0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "0,1,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,1,0"))
                                          (rule "polyDiv_pullOut" (formula "54") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,2,0,1,1,0"))
                                          (rule "equal_literals" (formula "54") (term "0,0,1,1,0"))
                                          (rule "ifthenelse_false" (formula "54") (term "0,1,1,0"))
                                          (rule "mul_literals" (formula "54") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,1,0"))
                                          (rule "polySimp_addComm1" (formula "54") (term "0,0,1,1,1,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,0,1,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "54") (term "1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1,1,0"))
                                          (rule "mul_literals" (formula "54") (term "0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "54") (term "0,1,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,1,0"))
                                          (rule "expand_moduloInteger" (formula "53") (term "1,1,0"))
                                          (rule "replace_int_HALFRANGE" (formula "53") (term "0,0,1,1,1,0"))
                                          (rule "replace_int_MIN" (formula "53") (term "0,1,1,0"))
                                          (rule "replace_int_RANGE" (formula "53") (term "1,1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,1,1,1,0"))
                                          (rule "add_literals" (formula "53") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "1,0"))
                                          (rule "add_literals" (formula "53") (term "0,1,0"))
                                          (rule "mod_axiom" (formula "53") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "1,0"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,1,0"))
                                          (rule "add_literals" (formula "53") (term "0,0,1,0"))
                                          (rule "polyDiv_pullOut" (formula "53") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,2,0,1,1,0"))
                                          (rule "equal_literals" (formula "53") (term "0,0,1,1,0"))
                                          (rule "ifthenelse_false" (formula "53") (term "0,1,1,0"))
                                          (rule "mul_literals" (formula "53") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,1,0"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,0,1,1,1,0"))
                                          (rule "add_literals" (formula "53") (term "0,0,0,1,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "53") (term "1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,1,0"))
                                          (rule "mul_literals" (formula "53") (term "0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,1,0"))
                                          (rule "add_literals" (formula "53") (term "0,0,1,0"))
                                          (rule "nnf_imp2or" (formula "14") (term "1,0"))
                                          (rule "nnf_imp2or" (formula "29") (term "1,0"))
                                          (rule "nnf_imp2or" (formula "23") (term "0"))
                                          (rule "nnf_imp2or" (formula "15") (term "0"))
                                          (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                          (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "50") (term "0,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "50") (term "0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "50") (term "0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0,0,1"))
                                          (rule "nnf_notAnd" (formula "49") (term "0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "49") (term "0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "49") (term "0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1"))
                                          (rule "mul_literals" (formula "49") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1"))
                                          (rule "jdiv_axiom" (formula "34") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "0,0,2,1"))
                                          (rule "eqSymm" (formula "34"))
                                          (rule "applyEqRigid" (formula "34") (term "1") (ifseqformula "35"))
                                          (rule "inEqSimp_subsumption6" (formula "34") (term "0,0") (ifseqformula "42"))
                                          (rule "times_zero_1" (formula "34") (term "1,1,0,0,0"))
                                          (rule "greater_literals" (formula "34") (term "0,0,0,0"))
                                          (rule "concrete_and_1" (formula "34") (term "0,0,0"))
                                          (rule "leq_literals" (formula "34") (term "0,0,0"))
                                          (rule "concrete_or_1" (formula "34") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "34") (term "0"))
                                          (rule "polyDiv_pullOut" (formula "34") (term "0") (inst "polyDivCoeff=l_0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,2,0"))
                                          (rule "equal_literals" (formula "34") (term "0,0"))
                                          (rule "ifthenelse_false" (formula "34") (term "0"))
                                          (rule "polySimp_homoEq" (formula "34"))
                                          (rule "polySimp_pullOutFactor0" (formula "34") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "34") (term "1,0,0,0,1,0"))
                                          (rule "times_zero_1" (formula "34") (term "0,0,0,1,0"))
                                          (rule "div_literals" (formula "34") (term "0,0,1,0"))
                                          (rule "add_zero_left" (formula "34") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "34") (term "0"))
                                          (rule "add_literals" (formula "34") (term "1,0"))
                                          (rule "times_zero_1" (formula "34") (term "0"))
                                          (rule "eqClose" (formula "34"))
                                          (rule "true_left" (formula "34"))
                                          (rule "nnf_notAnd" (formula "50") (term "0,0,1,1"))
                                          (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "50") (term "1,0,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "50") (term "0,0,1,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,1,1"))
                                          (rule "mul_literals" (formula "50") (term "1,1,0,0,1,1"))
                                          (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "50") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "50") (term "0,0,0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0,1,1"))
                                          (rule "nnf_imp2or" (formula "14") (term "0"))
                                          (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "29") (term "0,1,0"))
                                          (rule "double_not" (formula "29") (term "0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "29") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0"))
                                          (rule "nnf_imp2or" (formula "15") (term "0,1,0"))
                                          (rule "nnf_imp2or" (formula "29") (term "0,1,1,0"))
                                          (rule "jdiv_axiom" (formula "47") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "0,0,2,1"))
                                          (rule "eqSymm" (formula "47"))
                                          (rule "applyEq" (formula "47") (term "1") (ifseqformula "48"))
                                          (rule "inEqSimp_subsumption6" (formula "47") (term "0,0") (ifseqformula "44"))
                                          (rule "greater_literals" (formula "47") (term "0,0,0,0"))
                                          (rule "concrete_and_1" (formula "47") (term "0,0,0"))
                                          (rule "mul_literals" (formula "47") (term "1,0,0,0"))
                                          (rule "leq_literals" (formula "47") (term "0,0,0"))
                                          (rule "concrete_or_1" (formula "47") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "47") (term "0"))
                                          (rule "polyDiv_pullOut" (formula "47") (term "0") (inst "polyDivCoeff=l_1"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,2,0"))
                                          (rule "equal_literals" (formula "47") (term "0,0"))
                                          (rule "ifthenelse_false" (formula "47") (term "0"))
                                          (rule "polySimp_pullOutFactor0" (formula "47") (term "0,0,0"))
                                          (rule "add_literals" (formula "47") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "47") (term "0,0,0"))
                                          (rule "div_literals" (formula "47") (term "0,0"))
                                          (rule "add_zero_left" (formula "47") (term "0"))
                                          (rule "eqClose" (formula "47"))
                                          (rule "true_left" (formula "47"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                          (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "30") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "8"))
                                          (rule "insert_constant_value" (formula "30") (term "1,1,0,0,0,0,0,0,0"))
                                          (rule "insert_constant_value" (formula "30") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "insert_constant_value" (formula "30") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "insert_constant_value" (formula "30") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "eqClose" (formula "30") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "concrete_and_3" (formula "30") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "insert_constant_value" (formula "30") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "eqClose" (formula "30") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "concrete_and_3" (formula "30") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "insert_constant_value" (formula "30") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "eqClose" (formula "30") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "concrete_and_3" (formula "30") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "expand_inInt" (formula "30") (term "1,1"))
                                          (rule "expand_inInt" (formula "30") (term "0,1"))
                                          (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "replace_int_MIN" (formula "30") (term "0,1,1,1"))
                                          (rule "replace_int_MAX" (formula "30") (term "1,0,1,1"))
                                          (rule "replace_int_MIN" (formula "30") (term "0,1,0,1"))
                                          (rule "replace_int_MAX" (formula "30") (term "1,0,0,1"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "33"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "notLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "notLeft" (formula "30"))
                                          (rule "exLeft" (formula "37") (inst "sk=i_1_2"))
                                          (rule "andLeft" (formula "37"))
                                          (rule "andLeft" (formula "37"))
                                          (rule "exLeft" (formula "36") (inst "sk=i_2_0"))
                                          (rule "andLeft" (formula "36"))
                                          (rule "andLeft" (formula "36"))
                                          (rule "eqSymm" (formula "35"))
                                          (rule "eqSymm" (formula "33") (term "1,0,1,0,1,0"))
                                          (rule "eqSymm" (formula "33") (term "1,1,0,1,0"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,1,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,1,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "0,2,0,0,0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "0,2,0,0,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "0,2,1,1,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "0,2,0,1,0,1,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "34"))
                                          (rule "mul_literals" (formula "34") (term "1,0,0"))
                                          (rule "add_literals" (formula "34") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "37") (term "0"))
                                          (rule "ifthenelse_negated" (formula "35") (term "2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "43") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "43") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "43") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "42") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "42") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "46"))
                                          (rule "inEqSimp_commuteLeq" (formula "44"))
                                          (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "31"))
                                          (rule "inEqSimp_commuteLeq" (formula "30"))
                                          (rule "inEqSimp_commuteLeq" (formula "39"))
                                          (rule "inEqSimp_commuteLeq" (formula "36"))
                                          (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "43") (term "0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,1,0"))
                                          (rule "applyEq" (formula "31") (term "0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "30") (term "0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "43") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "27") (term "0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "40") (term "0,0,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "42") (term "1,0,1,0,1,0,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "42") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "43") (term "1,0,1,0,1,0,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "42") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "43") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                                          (rule "applyEqRigid" (formula "40") (term "0,0,1,0") (ifseqformula "27"))
                                          (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "27"))
                                          (rule "applyEqRigid" (formula "41") (term "1,0,1,0,1,0,1,0") (ifseqformula "27"))
                                          (rule "applyEqRigid" (formula "37") (term "1") (ifseqformula "27"))
                                          (rule "applyEq" (formula "41") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "27"))
                                          (rule "applyEqRigid" (formula "42") (term "1,0,1,0,1,0,1,0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "27"))
                                          (rule "applyEqRigid" (formula "39") (term "0,1,0") (ifseqformula "11"))
                                          (rule "applyEqRigid" (formula "42") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
                                          (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "11"))
                                          (rule "applyEqRigid" (formula "40") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "27"))
                                          (rule "applyEqRigid" (formula "41") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
                                          (rule "applyEqRigid" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "41") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
                                          (rule "applyEqRigid" (formula "40") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "11"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                                          (rule "mul_literals" (formula "33") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "37"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_subsumption0" (formula "41") (ifseqformula "22"))
                                          (rule "leq_literals" (formula "41") (term "0"))
                                          (rule "concrete_or_1" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "inEqSimp_subsumption0" (formula "30") (ifseqformula "46"))
                                          (rule "leq_literals" (formula "30") (term "0"))
                                          (rule "concrete_or_1" (formula "30"))
                                          (rule "true_left" (formula "30"))
                                          (rule "elimGcdLeq" (formula "39") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "39") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "39") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "39") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "39") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "39") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "39") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "39") (term "1,0,1,1,0,0,1,1,0"))
                                          (rule "concrete_and_3" (formula "39") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "39") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "39") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "39") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "39") (term "0,1,1,0,0,1,1,0"))
                                          (rule "ifthenelse_true_for" (formula "39") (term "1,1,0,0,1,1,0"))
                                          (rule "elimGcdGeq" (formula "39") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "39") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "39") (term "0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "39") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "39") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "39") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "39") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "concrete_and_3" (formula "39") (term "0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "39") (term "1,1,0,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "39") (term "0,0,1,0,0,1,1,0"))
                                          (rule "ifthenelse_true_for" (formula "39") (term "0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "45"))
                                          (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                          (rule "mul_literals" (formula "33") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "33") (term "0"))
                                          (rule "add_literals" (formula "33") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "0"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,1,0"))
                                          (rule "double_not" (formula "14") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "14") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "15") (term "0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "15") (term "0,1,0,1,0"))
                                          (rule "double_not" (formula "15") (term "0,0,1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "29") (term "0,0,1,1,0"))
                                          (rule "nnf_imp2or" (formula "30") (term "1,0"))
                                          (rule "nnf_imp2or" (formula "31") (term "1,0,1,0"))
                                          (rule "commute_or" (formula "29") (term "0,0"))
                                          (rule "cut_direct" (formula "59") (term "0"))
                                          (branch "CUT: l_0 <= -1 + l_1 TRUE"
                                             (rule "concrete_impl_1" (formula "60"))
                                             (rule "inEqSimp_contradInEq0" (formula "61") (term "0") (ifseqformula "59"))
                                             (rule "inEqSimp_homoInEq1" (formula "61") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "61") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "61") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "61") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,0"))
                                             (rule "add_literals" (formula "61") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "61") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "61") (term "0,0,0"))
                                             (rule "leq_literals" (formula "61") (term "0,0"))
                                             (rule "concrete_and_2" (formula "61") (term "0"))
                                             (rule "concrete_impl_2" (formula "61"))
                                             (rule "true_left" (formula "61"))
                                             (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "59"))
                                             (rule "times_zero_1" (formula "51") (term "0,0"))
                                             (rule "add_zero_left" (formula "51") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                                             (rule "mul_literals" (formula "51") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "55") (ifseqformula "51"))
                                             (rule "leq_literals" (formula "55") (term "0"))
                                             (rule "concrete_or_1" (formula "55"))
                                             (rule "true_left" (formula "55"))
                                             (rule "nnf_imp2or" (formula "39") (term "1,0"))
                                             (rule "commute_or_2" (formula "23") (term "0"))
                                             (rule "div_axiom" (formula "11") (term "1") (inst "quotient=quotient_0"))
                                             (rule "mul_literals" (formula "11") (term "1,1,1,1,1"))
                                             (rule "equal_literals" (formula "11") (term "0"))
                                             (rule "concrete_or_2" (formula "11"))
                                             (rule "qeq_literals" (formula "11") (term "0,1"))
                                             (rule "ifthenelse_true_for" (formula "11") (term "1"))
                                             (rule "andLeft" (formula "11"))
                                             (rule "andLeft" (formula "11"))
                                             (rule "polySimp_addComm1" (formula "13") (term "1"))
                                             (rule "add_literals" (formula "13") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "13"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0"))
                                             (rule "applyEqRigid" (formula "43") (term "1,1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "33") (term "1,1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEqRigid" (formula "32") (term "1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEqRigid" (formula "15") (term "1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "17") (term "1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "42") (term "1,1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEqRigid" (formula "18") (term "1,0,0,0,1,0") (ifseqformula "11"))
                                             (rule "applyEqRigid" (formula "34") (term "1,1,1,0,0,1,0") (ifseqformula "11"))
                                             (rule "applyEqRigid" (formula "34") (term "1,1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEqRigid" (formula "26") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "40") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "40"))
                                             (rule "polySimp_addComm1" (formula "40") (term "0"))
                                             (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "20"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0"))
                                             (rule "applyEq" (formula "14") (term "1") (ifseqformula "11"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                             (rule "mul_literals" (formula "13") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "40"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1"))
                                             (rule "mul_literals" (formula "40") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                             (rule "mul_literals" (formula "20") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "13"))
                                             (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                             (rule "mul_literals" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                                             (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "3") (term "0,0"))
                                             (rule "concrete_or_2" (formula "3") (term "0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "3") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "3") (term "0,0"))
                                             (rule "qeq_literals" (formula "3") (term "0"))
                                             (rule "concrete_or_2" (formula "3"))
                                             (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "14"))
                                             (rule "polySimp_rightDist" (formula "53") (term "0,0"))
                                             (rule "mul_literals" (formula "53") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "53") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "53") (term "0,0"))
                                             (rule "add_literals" (formula "53") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "53") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "53") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0"))
                                             (rule "neg_literal" (formula "53") (term "0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "53") (term "0,0"))
                                             (rule "concrete_or_2" (formula "53") (term "0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "53") (term "0,0"))
                                             (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "53") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "53") (term "0,0"))
                                             (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "53") (term "0,0"))
                                             (rule "qeq_literals" (formula "53") (term "0"))
                                             (rule "concrete_or_2" (formula "53"))
                                             (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "41"))
                                             (rule "times_zero_1" (formula "40") (term "0,0"))
                                             (rule "add_zero_left" (formula "40") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                             (rule "mul_literals" (formula "40") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "14"))
                                             (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                                             (rule "mul_literals" (formula "38") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "38") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                             (rule "add_literals" (formula "38") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "38") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "14"))
                                             (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "30") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "53"))
                                             (rule "polySimp_mulAssoc" (formula "13") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "13") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                                             (rule "neg_literal" (formula "13") (term "0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "13") (term "0,0"))
                                             (rule "concrete_or_2" (formula "13") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0"))
                                             (rule "qeq_literals" (formula "13") (term "0"))
                                             (rule "concrete_or_2" (formula "13"))
                                             (rule "inEqSimp_exactShadow3" (formula "65") (ifseqformula "15"))
                                             (rule "polySimp_rightDist" (formula "65") (term "0,0"))
                                             (rule "mul_literals" (formula "65") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "65") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                                             (rule "add_literals" (formula "65") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "65") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "65"))
                                             (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "65") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "65") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "65") (term "0,0"))
                                             (rule "concrete_or_2" (formula "65") (term "0"))
                                             (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                             (rule "neg_literal" (formula "65") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "65") (term "0,0"))
                                             (rule "add_literals" (formula "65") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "65") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "65") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "65") (term "0,0"))
                                             (rule "add_literals" (formula "65") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "65") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "65") (term "0,0"))
                                             (rule "qeq_literals" (formula "65") (term "0"))
                                             (rule "concrete_or_2" (formula "65"))
                                             (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                             (rule "times_zero_1" (formula "21") (term "0,0"))
                                             (rule "add_zero_left" (formula "21") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                             (rule "mul_literals" (formula "21") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "15"))
                                             (rule "mul_literals" (formula "18") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                             (rule "add_literals" (formula "18") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                             (rule "mul_literals" (formula "18") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "18") (term "0,0"))
                                             (rule "concrete_or_2" (formula "18") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "18") (term "0,0"))
                                             (rule "leq_literals" (formula "18") (term "0"))
                                             (rule "concrete_or_2" (formula "18"))
                                             (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "18"))
                                             (rule "leq_literals" (formula "44") (term "0"))
                                             (rule "concrete_or_1" (formula "44"))
                                             (rule "true_left" (formula "44"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "3"))
                                             (rule "times_zero_1" (formula "59") (term "0,0"))
                                             (rule "add_zero_left" (formula "59") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "59") (ifseqformula "18"))
                                             (rule "leq_literals" (formula "59") (term "0"))
                                             (rule "concrete_or_1" (formula "59"))
                                             (rule "true_left" (formula "59"))
                                             (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "32"))
                                             (rule "times_zero_1" (formula "30") (term "0,0"))
                                             (rule "add_zero_left" (formula "30") (term "0"))
                                             (rule "inEqSimp_subsumption6" (formula "30") (ifseqformula "18"))
                                             (rule "greater_literals" (formula "30") (term "0,0"))
                                             (rule "concrete_and_1" (formula "30") (term "0"))
                                             (rule "mul_literals" (formula "30") (term "1,0"))
                                             (rule "leq_literals" (formula "30") (term "0"))
                                             (rule "concrete_or_1" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "41"))
                                             (rule "mul_literals" (formula "39") (term "0,0"))
                                             (rule "add_zero_left" (formula "39") (term "0"))
                                             (rule "inEqSimp_subsumption6" (formula "39") (ifseqformula "18"))
                                             (rule "mul_literals" (formula "39") (term "1,1,0"))
                                             (rule "greater_literals" (formula "39") (term "0,0"))
                                             (rule "concrete_and_1" (formula "39") (term "0"))
                                             (rule "leq_literals" (formula "39") (term "0"))
                                             (rule "concrete_or_1" (formula "39"))
                                             (rule "true_left" (formula "39"))
                                             (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "65"))
                                             (rule "mul_literals" (formula "60") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "60"))
                                             (rule "mul_literals" (formula "60") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "60") (ifseqformula "18"))
                                             (rule "leq_literals" (formula "60") (term "0"))
                                             (rule "concrete_or_1" (formula "60"))
                                             (rule "true_left" (formula "60"))
                                             (rule "inEqSimp_exactShadow3" (formula "61") (ifseqformula "57"))
                                             (rule "mul_literals" (formula "61") (term "0,0"))
                                             (rule "add_zero_left" (formula "61") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "61") (ifseqformula "18"))
                                             (rule "leq_literals" (formula "61") (term "0"))
                                             (rule "concrete_or_1" (formula "61"))
                                             (rule "true_left" (formula "61"))
                                             (rule "div_axiom" (formula "73") (term "0,1,1,1") (inst "quotient=quotient_1"))
                                             (rule "mul_literals" (formula "73") (term "1,1,1,1,1"))
                                             (rule "qeq_literals" (formula "73") (term "0,1,1"))
                                             (rule "ifthenelse_true_for" (formula "73") (term "1,1"))
                                             (rule "equal_literals" (formula "73") (term "0"))
                                             (rule "concrete_or_2" (formula "73"))
                                             (rule "andLeft" (formula "73"))
                                             (rule "andLeft" (formula "73"))
                                             (rule "polySimp_addAssoc" (formula "75") (term "0,1"))
                                             (rule "add_literals" (formula "75") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "75") (term "1"))
                                             (rule "add_literals" (formula "75") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "74"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "74") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "75"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "75") (term "0"))
                                             (rule "applyEqRigid" (formula "76") (term "0,1,1,0") (ifseqformula "73"))
                                             (rule "polySimp_addComm1" (formula "76") (term "1,0"))
                                             (rule "applyEqRigid" (formula "77") (term "0,1,1,0") (ifseqformula "73"))
                                             (rule "polySimp_addComm1" (formula "77") (term "1,0"))
                                             (rule "applyEq" (formula "76") (term "0,1,1,1") (ifseqformula "73"))
                                             (rule "polySimp_addComm1" (formula "76") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "74"))
                                             (rule "polySimp_mulComm0" (formula "74") (term "1"))
                                             (rule "polySimp_rightDist" (formula "74") (term "1"))
                                             (rule "mul_literals" (formula "74") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "75"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1"))
                                             (rule "polySimp_rightDist" (formula "75") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,1"))
                                             (rule "mul_literals" (formula "75") (term "0,1"))
                                             (rule "elimGcdLeq_antec" (formula "75") (inst "elimGcdRightDiv=add(Z(0(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                             (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0,1,0"))
                                             (rule "neg_literal" (formula "75") (term "0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "75") (term "0,0"))
                                             (rule "concrete_or_2" (formula "75") (term "0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0"))
                                             (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "75") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "75") (term "0,0,0"))
                                             (rule "add_literals" (formula "75") (term "0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "75") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "75") (term "0,0,0"))
                                             (rule "add_literals" (formula "75") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0"))
                                             (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "75") (term "0,0"))
                                             (rule "qeq_literals" (formula "75") (term "0"))
                                             (rule "concrete_or_2" (formula "75"))
                                             (rule "elimGcdGeq_antec" (formula "74") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "74") (term "0,0"))
                                             (rule "concrete_or_2" (formula "74") (term "0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                                             (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "74") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "74") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "74") (term "0,0,0"))
                                             (rule "add_literals" (formula "74") (term "0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "74") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "74") (term "0,0,0"))
                                             (rule "add_literals" (formula "74") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                                             (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "74") (term "0,0"))
                                             (rule "leq_literals" (formula "74") (term "0"))
                                             (rule "concrete_or_2" (formula "74"))
                                             (rule "inEqSimp_exactShadow3" (formula "74") (ifseqformula "64"))
                                             (rule "polySimp_rightDist" (formula "74") (term "0,0"))
                                             (rule "mul_literals" (formula "74") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "74") (term "0"))
                                             (rule "add_literals" (formula "74") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "74"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "74") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "74") (term "0,0"))
                                             (rule "concrete_or_2" (formula "74") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0,0,0"))
                                             (rule "neg_literal" (formula "74") (term "0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "74") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "74") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "74") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                                             (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "74") (term "0,0"))
                                             (rule "qeq_literals" (formula "74") (term "0"))
                                             (rule "concrete_or_2" (formula "74"))
                                             (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "76"))
                                             (rule "mul_literals" (formula "60") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "60") (term "0"))
                                             (rule "add_literals" (formula "60") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "60"))
                                             (rule "mul_literals" (formula "60") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "60") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                             (rule "polySimp_mulLiterals" (formula "60") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "60") (term "0,0"))
                                             (rule "concrete_or_2" (formula "60") (term "0"))
                                             (rule "mul_literals" (formula "60") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "60") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "60") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "60") (term "0,0"))
                                             (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "60") (term "0,0"))
                                             (rule "leq_literals" (formula "60") (term "0"))
                                             (rule "concrete_or_2" (formula "60"))
                                             (rule "inEqSimp_exactShadow3" (formula "76") (ifseqformula "66"))
                                             (rule "polySimp_rightDist" (formula "76") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "76") (term "1,0,0"))
                                             (rule "mul_literals" (formula "76") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "76"))
                                             (rule "polySimp_mulComm0" (formula "76") (term "1"))
                                             (rule "polySimp_rightDist" (formula "76") (term "1"))
                                             (rule "mul_literals" (formula "76") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "76") (term "1,1"))
                                             (rule "inEqSimp_antiSymm" (formula "60") (ifseqformula "75"))
                                             (rule "applyEq" (formula "76") (term "0") (ifseqformula "60"))
                                             (rule "leq_literals" (formula "76"))
                                             (rule "true_left" (formula "76"))
                                             (rule "applyEqRigid" (formula "77") (term "0,1,1") (ifseqformula "60"))
                                             (rule "mul_literals" (formula "77") (term "1,1"))
                                             (rule "add_literals" (formula "77") (term "1"))
                                             (rule "applyEq" (formula "78") (term "0,1,1") (ifseqformula "60"))
                                             (rule "mul_literals" (formula "78") (term "1,1"))
                                             (rule "add_literals" (formula "78") (term "1"))
                                             (rule "applyEqRigid" (formula "76") (term "0,1,1") (ifseqformula "60"))
                                             (rule "mul_literals" (formula "76") (term "1,1"))
                                             (rule "add_literals" (formula "76") (term "1"))
                                             (rule "applyEq" (formula "61") (term "0") (ifseqformula "60"))
                                             (rule "qeq_literals" (formula "61"))
                                             (rule "true_left" (formula "61"))
                                             (rule "applyEqRigid" (formula "79") (term "0,1,0,1,0") (ifseqformula "60"))
                                             (rule "mul_literals" (formula "79") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "79") (term "0,1,0"))
                                             (rule "applyEqRigid" (formula "74") (term "1") (ifseqformula "60"))
                                             (rule "applyEq" (formula "78") (term "0,1,0,1,0") (ifseqformula "60"))
                                             (rule "mul_literals" (formula "78") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "78") (term "0,1,0"))
                                             (rule "applyEqRigid" (formula "78") (term "0,1,0,1,1") (ifseqformula "60"))
                                             (rule "mul_literals" (formula "78") (term "1,0,1,1"))
                                             (rule "add_literals" (formula "78") (term "0,1,1"))
                                             (rule "inEqSimp_subsumption0" (formula "77") (ifseqformula "65"))
                                             (rule "leq_literals" (formula "77") (term "0"))
                                             (rule "concrete_or_1" (formula "77"))
                                             (rule "true_left" (formula "77"))
                                             (rule "inEqSimp_subsumption1" (formula "76") (ifseqformula "61"))
                                             (rule "leq_literals" (formula "76") (term "0"))
                                             (rule "concrete_or_1" (formula "76"))
                                             (rule "true_left" (formula "76"))
                                             (rule "inEqSimp_subsumption1" (formula "75") (ifseqformula "18"))
                                             (rule "leq_literals" (formula "75") (term "0"))
                                             (rule "concrete_or_1" (formula "75"))
                                             (rule "true_left" (formula "75"))
                                             (rule "cut_direct" (formula "84") (term "0,0"))
                                             (branch "CUT: self.table[n_0 * 2] = null TRUE"
                                                (rule "concrete_not_1" (formula "85") (term "0"))
                                                (rule "concrete_and_2" (formula "85"))
                                                (rule "false_right" (formula "85"))
                                                (rule "nnf_imp2or" (formula "49") (term "1,0"))
                                                (rule "nnf_notAnd" (formula "39") (term "0,1,0,1,0"))
                                                (rule "double_not" (formula "39") (term "0,0,1,0,1,0"))
                                                (rule "nnf_imp2or" (formula "38") (term "0"))
                                                (rule "nnf_notOr" (formula "37") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "37") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "37") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,1,1,1,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "37") (term "0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "48") (term "0,1,0"))
                                                (rule "double_not" (formula "48") (term "0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "48") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,0"))
                                                (rule "nnf_imp2or" (formula "48") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "72") (term "0,0"))
                                                (rule "commute_or_2" (formula "21") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "30") (term "0,0"))
                                                (rule "shift_paren_or" (formula "22") (term "0,1,0"))
                                                (rule "commute_and" (formula "39") (term "0,0,1,0"))
                                                (rule "nnf_imp2or" (formula "49") (term "0"))
                                                (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                                (rule "nnf_imp2or" (formula "48") (term "0"))
                                                (rule "nnf_imp2or" (formula "39") (term "0"))
                                                (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "49") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                (rule "mul_literals" (formula "49") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "49") (term "0,1,0"))
                                                (rule "double_not" (formula "49") (term "0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "49") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "49") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,1,0"))
                                                (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "48") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                (rule "mul_literals" (formula "48") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "48") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                                (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "49") (term "0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "39") (term "0,1,0"))
                                                (rule "nnf_notAnd" (formula "37") (term "0,0,0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "37") (term "1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "37") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "37") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "48") (term "0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "0") (ifseqformula "8"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "80"))
                                                (rule "concrete_or_2" (formula "1"))
                                                (rule "nnf_notAnd" (formula "40") (term "0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,1,0"))
                                                (rule "nnf_notOr" (formula "50") (term "0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "38") (term "1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "38") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "38") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "38") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "38") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "50") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "50") (term "0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "50") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "50") (term "1,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "50") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "50") (term "0,0,0,1,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "50") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "50") (term "0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "39") (term "0"))
                                                (rule "cnf_rightDist" (formula "73") (term "0"))
                                                (rule "commute_or_2" (formula "23") (term "0,0,1,0"))
                                                (rule "inEqSimp_or_weaken2" (formula "23") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "1,0,1,0,1,0"))
                                                (rule "add_literals" (formula "23") (term "0,1,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "23") (term "1,0,1,0,1,0"))
                                                (rule "eqClose" (formula "23") (term "0,1,0,1,0"))
                                                (rule "ifthenelse_true_for" (formula "23") (term "1,0,1,0"))
                                                (rule "commute_or" (formula "22") (term "0,0,1,1,0"))
                                                (rule "distr_forallAnd" (formula "73"))
                                                (rule "andLeft" (formula "73"))
                                                (rule "commute_or_2" (formula "49") (term "0,1,1,0"))
                                                (rule "shift_paren_or" (formula "40") (term "0,1,0"))
                                                (rule "commute_or_2" (formula "73") (term "0"))
                                                (rule "commute_or" (formula "39") (term "0,0"))
                                                (rule "shift_paren_or" (formula "73") (term "0"))
                                                (rule "commute_or" (formula "72") (term "0,0"))
                                                (rule "commute_and" (formula "38") (term "1,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "49") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "23") (term "0,0,1,0"))
                                                (rule "cut_direct" (formula "78") (term "0"))
                                                (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 TRUE"
                                                   (rule "concrete_impl_1" (formula "79"))
                                                   (rule "applyEq" (formula "77") (term "0,1") (ifseqformula "79"))
                                                   (rule "polySimp_homoEq" (formula "77") (term "1"))
                                                   (rule "times_zero_2" (formula "77") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "77") (term "0,1"))
                                                   (rule "applyEq" (formula "75") (term "0") (ifseqformula "79"))
                                                   (rule "qeq_literals" (formula "75"))
                                                   (rule "true_left" (formula "75"))
                                                   (rule "applyEq" (formula "74") (term "0") (ifseqformula "78"))
                                                   (rule "leq_literals" (formula "74"))
                                                   (rule "true_left" (formula "74"))
                                                   (rule "applyEq" (formula "7") (term "0") (ifseqformula "77"))
                                                   (rule "inEqSimp_homoInEq0" (formula "7"))
                                                   (rule "times_zero_2" (formula "7") (term "1,0"))
                                                   (rule "add_zero_right" (formula "7") (term "0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "75") (term "1"))
                                                   (rule "mul_literals" (formula "75") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                   (rule "mul_literals" (formula "7") (term "1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "75") (term "0") (ifseqformula "76"))
                                                   (rule "inEqSimp_homoInEq1" (formula "75") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "75") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "75") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "75") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0,0"))
                                                   (rule "add_literals" (formula "75") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "75") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "75") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "75") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "75") (term "0"))
                                                   (rule "concrete_impl_2" (formula "75"))
                                                   (rule "true_left" (formula "75"))
                                                   (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "7") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "7") (term "0"))
                                                   (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                   (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "7") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                   (rule "add_literals" (formula "7") (term "0,0"))
                                                   (rule "leq_literals" (formula "7") (term "0"))
                                                   (rule "concrete_or_2" (formula "7"))
                                                   (rule "inEqSimp_subsumption1" (formula "63") (ifseqformula "7"))
                                                   (rule "leq_literals" (formula "63") (term "0"))
                                                   (rule "concrete_or_1" (formula "63"))
                                                   (rule "true_left" (formula "63"))
                                                   (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "74"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                                   (rule "add_literals" (formula "35") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "75"))
                                                   (rule "polySimp_mulAssoc" (formula "16") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                   (rule "mul_literals" (formula "16") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                   (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), quotient_0)") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                                   (rule "leq_literals" (formula "16") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "16") (term "0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0"))
                                                   (rule "leq_literals" (formula "16") (term "0"))
                                                   (rule "concrete_or_2" (formula "16"))
                                                   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "76"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                   (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=add(Z(0(#)), l_1)") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                                   (rule "add_zero_left" (formula "6") (term "1,1"))
                                                   (rule "leq_literals" (formula "6") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "6") (term "0"))
                                                   (rule "neg_literal" (formula "6") (term "0,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                   (rule "add_zero_left" (formula "6") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "6") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0"))
                                                   (rule "qeq_literals" (formula "6") (term "0"))
                                                   (rule "concrete_or_2" (formula "6"))
                                                   (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "77"))
                                                   (rule "polySimp_rightDist" (formula "62") (term "0,0"))
                                                   (rule "mul_literals" (formula "62") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "62") (term "0,0"))
                                                   (rule "add_literals" (formula "62") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "62"))
                                                   (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                                   (rule "inEqSimp_subsumption4" (formula "62") (ifseqformula "74"))
                                                   (rule "greater_literals" (formula "62") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "62") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "62") (term "0,0"))
                                                   (rule "mul_literals" (formula "62") (term "0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "62") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "62") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "62") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "62") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "62") (term "0,0,0"))
                                                   (rule "add_literals" (formula "62") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "62") (term "0,0"))
                                                   (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                                   (rule "add_literals" (formula "62") (term "0,0"))
                                                   (rule "qeq_literals" (formula "62") (term "0"))
                                                   (rule "concrete_or_1" (formula "62"))
                                                   (rule "true_left" (formula "62"))
                                                   (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "61"))
                                                   (rule "mul_literals" (formula "8") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                   (rule "mul_literals" (formula "8") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "23"))
                                                   (rule "leq_literals" (formula "8") (term "0"))
                                                   (rule "concrete_or_1" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "73"))
                                                   (rule "mul_literals" (formula "8") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                   (rule "add_literals" (formula "8") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                   (rule "mul_literals" (formula "8") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "66") (ifseqformula "8"))
                                                   (rule "leq_literals" (formula "66") (term "0"))
                                                   (rule "concrete_or_1" (formula "66"))
                                                   (rule "true_left" (formula "66"))
                                                   (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "77"))
                                                   (rule "mul_literals" (formula "24") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                   (rule "add_literals" (formula "24") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                   (rule "mul_literals" (formula "24") (term "1"))
                                                   (rule "elimGcdGeq_antec" (formula "24") (inst "elimGcdRightDiv=Z(3(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                   (rule "leq_literals" (formula "24") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "24") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0"))
                                                   (rule "leq_literals" (formula "24") (term "0"))
                                                   (rule "concrete_or_2" (formula "24"))
                                                   (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "24"))
                                                   (rule "leq_literals" (formula "8") (term "0"))
                                                   (rule "concrete_or_1" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "77"))
                                                   (rule "polySimp_rightDist" (formula "47") (term "0,0"))
                                                   (rule "mul_literals" (formula "47") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                                   (rule "add_literals" (formula "47") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                   (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "38"))
                                                   (rule "times_zero_1" (formula "35") (term "0,0"))
                                                   (rule "add_zero_left" (formula "35") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                   (rule "mul_literals" (formula "35") (term "1"))
                                                   (rule "inEqSimp_subsumption6" (formula "35") (ifseqformula "23"))
                                                   (rule "mul_literals" (formula "35") (term "1,1,0"))
                                                   (rule "greater_literals" (formula "35") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "35") (term "0"))
                                                   (rule "leq_literals" (formula "35") (term "0"))
                                                   (rule "concrete_or_1" (formula "35"))
                                                   (rule "true_left" (formula "35"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "6"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "75"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0"))
                                                   (rule "qeq_literals" (formula "3") (term "0"))
                                                   (rule "concrete_or_1" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "inEqSimp_exactShadow3" (formula "65") (ifseqformula "6"))
                                                   (rule "mul_literals" (formula "65") (term "0,0"))
                                                   (rule "add_zero_left" (formula "65") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "65") (ifseqformula "23"))
                                                   (rule "leq_literals" (formula "65") (term "0"))
                                                   (rule "concrete_or_1" (formula "65"))
                                                   (rule "true_left" (formula "65"))
                                                   (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "47"))
                                                   (rule "times_zero_1" (formula "44") (term "0,0"))
                                                   (rule "add_zero_left" (formula "44") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                   (rule "mul_literals" (formula "44") (term "1"))
                                                   (rule "inEqSimp_subsumption6" (formula "44") (ifseqformula "23"))
                                                   (rule "mul_literals" (formula "44") (term "1,1,0"))
                                                   (rule "greater_literals" (formula "44") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "44") (term "0"))
                                                   (rule "leq_literals" (formula "44") (term "0"))
                                                   (rule "concrete_or_1" (formula "44"))
                                                   (rule "true_left" (formula "44"))
                                                   (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "69"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                   (rule "add_literals" (formula "17") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "16"))
                                                   (rule "leq_literals" (formula "17") (term "0"))
                                                   (rule "concrete_or_1" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "70"))
                                                   (rule "mul_literals" (formula "23") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                   (rule "mul_literals" (formula "23") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "22"))
                                                   (rule "leq_literals" (formula "23") (term "0"))
                                                   (rule "concrete_or_1" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "commute_or_2" (formula "43") (term "0,0,1,0"))
                                                   (rule "inEqSimp_or_weaken2" (formula "43") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "1,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "43") (term "0,1,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "43") (term "1,0,1,0,1,0"))
                                                   (rule "eqClose" (formula "43") (term "0,1,0,1,0"))
                                                   (rule "ifthenelse_true_for" (formula "43") (term "1,0,1,0"))
                                                   (rule "commute_or" (formula "53") (term "0,0,1,1,0"))
                                                   (rule "commute_or" (formula "54") (term "0,1,0,1,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "10"))
                                                   (rule "replace_known_left" (formula "52") (term "0") (ifseqformula "53"))
                                                   (rule "concrete_or_1" (formula "52"))
                                                   (rule "true_left" (formula "52"))
                                                   (rule "commute_and" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "all_pull_out3" (formula "25") (term "1,0"))
                                                   (rule "all_pull_out3" (formula "26") (term "0"))
                                                   (rule "allLeft" (formula "34") (inst "t=i_1_2"))
                                                   (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "53"))
                                                   (rule "concrete_not_1" (formula "34") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "34") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "51"))
                                                   (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                   (rule "concrete_and_2" (formula "34") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "34") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "34") (term "1") (ifseqformula "52"))
                                                   (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "34") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "34") (term "1"))
                                                   (rule "concrete_or_4" (formula "34"))
                                                   (rule "allLeft" (formula "35") (inst "t=i_1_0"))
                                                   (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "29"))
                                                   (rule "concrete_not_1" (formula "35") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "35") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "27"))
                                                   (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                   (rule "concrete_and_2" (formula "35") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "35") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "35") (term "1") (ifseqformula "28"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "35") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "35") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "35") (term "1"))
                                                   (rule "concrete_or_4" (formula "35"))
                                                   (rule "shift_paren_or" (formula "26") (term "0,0"))
                                                   (rule "commute_or" (formula "45") (term "0,0,1,0"))
                                                   (rule "commute_or_2" (formula "55") (term "0,1,1,0"))
                                                   (rule "shift_paren_or" (formula "25") (term "0,1,0"))
                                                   (rule "cnf_rightDist" (formula "56") (term "0,1,1,0"))
                                                   (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "25") (term "0,0,1,0"))
                                                   (rule "commute_or_2" (formula "56") (term "1,0,1,1,0"))
                                                   (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                                                   (rule "commute_or_2" (formula "25") (term "0,0,0,1,0"))
                                                   (rule "allLeft" (formula "36") (inst "t=n_0"))
                                                   (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "2"))
                                                   (rule "concrete_not_1" (formula "36") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "36") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "68"))
                                                   (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                   (rule "concrete_and_2" (formula "36") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "36") (term "0"))
                                                   (rule "allLeft" (formula "37") (inst "t=l_0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "8"))
                                                   (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                   (rule "concrete_and_2" (formula "37") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "37") (term "0"))
                                                   (rule "shift_paren_or" (formula "58") (term "0,0,1,1,0"))
                                                   (rule "commute_or" (formula "58") (term "0,1,0,1,1,0"))
                                                   (rule "cnf_rightDist" (formula "46") (term "0,0,0,0,1,1,0"))
                                                   (rule "commute_or" (formula "46") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "allLeft" (formula "79") (inst "t=l_0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "79") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,1,0"))
                                                   (rule "add_literals" (formula "79") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "79") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "79") (term "0,1,0"))
                                                   (rule "qeq_literals" (formula "79") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "79") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "79") (term "1") (ifseqformula "78"))
                                                   (rule "inEqSimp_homoInEq1" (formula "79") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "79") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "79") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "79") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "79") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0,1"))
                                                   (rule "add_literals" (formula "79") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "79") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "79") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "79") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "79") (term "1"))
                                                   (rule "concrete_or_4" (formula "79"))
                                                   (rule "notLeft" (formula "79"))
                                                   (rule "replace_known_right" (formula "37") (term "0,0,0") (ifseqformula "85"))
                                                   (rule "concrete_not_2" (formula "37") (term "0,0"))
                                                   (rule "concrete_or_1" (formula "37") (term "0"))
                                                   (rule "concrete_or_1" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "allLeft" (formula "79") (inst "t=l_0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "79") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,1,0"))
                                                   (rule "add_literals" (formula "79") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "79") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "79") (term "0,1,0"))
                                                   (rule "qeq_literals" (formula "79") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "79") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "79") (term "1") (ifseqformula "77"))
                                                   (rule "inEqSimp_homoInEq1" (formula "79") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "79") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "79") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "79") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "79") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0,1"))
                                                   (rule "add_literals" (formula "79") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "79") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "79") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "79") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "79") (term "1"))
                                                   (rule "concrete_or_4" (formula "79"))
                                                   (rule "notLeft" (formula "79"))
                                                   (rule "allLeft" (formula "78") (inst "t=n_0"))
                                                   (rule "replace_known_left" (formula "78") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "concrete_not_1" (formula "78") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "78") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "78") (term "0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "78") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "78") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "78") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "78") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0"))
                                                   (rule "add_literals" (formula "78") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "78") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "78") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "78") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "78") (term "0"))
                                                   (rule "concrete_or_2" (formula "78"))
                                                   (rule "inEqSimp_antiSymm" (formula "78") (ifseqformula "6"))
                                                   (rule "applyEqRigid" (formula "68") (term "0") (ifseqformula "78"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "78"))
                                                   (rule "applyEq" (formula "78") (term "0") (ifseqformula "77"))
                                                   (rule "inEqSimp_homoInEq1" (formula "78"))
                                                   (rule "polySimp_pullOutFactor1" (formula "78") (term "0"))
                                                   (rule "add_literals" (formula "78") (term "1,0"))
                                                   (rule "times_zero_1" (formula "78") (term "0"))
                                                   (rule "leq_literals" (formula "78"))
                                                   (rule "true_left" (formula "78"))
                                                   (rule "applyEq" (formula "4") (term "0") (ifseqformula "77"))
                                                   (rule "applyEq" (formula "2") (term "0,0,2,0") (ifseqformula "76"))
                                                   (rule "close" (formula "85") (ifseqformula "2"))
                                                )
                                                (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 FALSE"
                                                   (rule "concrete_impl_2" (formula "78"))
                                                   (rule "true_left" (formula "78"))
                                                   (rule "inEqSimp_leqRight" (formula "79"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "replace_known_left" (formula "78") (term "0") (ifseqformula "1"))
                                                   (rule "concrete_impl_1" (formula "78"))
                                                   (rule "applyEq" (formula "76") (term "0") (ifseqformula "78"))
                                                   (rule "inEqSimp_homoInEq1" (formula "76"))
                                                   (rule "polySimp_mulComm0" (formula "76") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "76") (term "1,0"))
                                                   (rule "mul_literals" (formula "76") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "76") (term "0"))
                                                   (rule "add_literals" (formula "76") (term "0,0"))
                                                   (rule "applyEq" (formula "75") (term "0") (ifseqformula "78"))
                                                   (rule "inEqSimp_homoInEq0" (formula "75"))
                                                   (rule "polySimp_mulComm0" (formula "75") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "75") (term "1,0"))
                                                   (rule "mul_literals" (formula "75") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "75") (term "0"))
                                                   (rule "add_literals" (formula "75") (term "0,0"))
                                                   (rule "applyEq" (formula "8") (term "0") (ifseqformula "78"))
                                                   (rule "inEqSimp_homoInEq0" (formula "8"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "75"))
                                                   (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                   (rule "mul_literals" (formula "8") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                   (rule "inEqSimp_subsumption6" (formula "76") (ifseqformula "63"))
                                                   (rule "mul_literals" (formula "76") (term "1,1,0"))
                                                   (rule "greater_literals" (formula "76") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "76") (term "0"))
                                                   (rule "leq_literals" (formula "76") (term "0"))
                                                   (rule "concrete_or_1" (formula "76"))
                                                   (rule "true_left" (formula "76"))
                                                   (rule "inEqSimp_subsumption1" (formula "69") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "69") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "69") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "69") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "69") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "69") (term "0,0,0"))
                                                   (rule "add_literals" (formula "69") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "69") (term "0,0"))
                                                   (rule "add_literals" (formula "69") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "69") (term "1,0,0"))
                                                   (rule "add_literals" (formula "69") (term "0,0"))
                                                   (rule "qeq_literals" (formula "69") (term "0"))
                                                   (rule "concrete_or_1" (formula "69"))
                                                   (rule "true_left" (formula "69"))
                                                   (rule "inEqSimp_subsumption4" (formula "74") (ifseqformula "67"))
                                                   (rule "mul_literals" (formula "74") (term "0,1,0"))
                                                   (rule "greater_literals" (formula "74") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "74") (term "0"))
                                                   (rule "leq_literals" (formula "74") (term "0"))
                                                   (rule "concrete_or_1" (formula "74"))
                                                   (rule "true_left" (formula "74"))
                                                   (rule "inEqSimp_contradInEq3" (formula "8") (ifseqformula "71"))
                                                   (rule "greater_literals" (formula "8") (term "0,0"))
                                                   (rule "concrete_impl_1" (formula "8") (term "0"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "0"))
                                                   (rule "mul_literals" (formula "8") (term "0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0"))
                                                   (rule "add_literals" (formula "8") (term "0"))
                                                   (rule "leq_literals" (formula "8"))
                                                   (rule "closeFalse" (formula "8"))
                                                )
                                             )
                                             (branch "CUT: self.table[n_0 * 2] = null FALSE"
                                                (rule "concrete_not_2" (formula "85") (term "0"))
                                                (rule "concrete_and_1" (formula "85"))
                                                (rule "notRight" (formula "85"))
                                                (rule "applyEq" (formula "85") (term "0") (ifseqformula "1"))
                                                (rule "nnf_imp2or" (formula "49") (term "1,0"))
                                                (rule "nnf_notAnd" (formula "39") (term "0,1,0,1,0"))
                                                (rule "double_not" (formula "39") (term "0,0,1,0,1,0"))
                                                (rule "nnf_imp2or" (formula "38") (term "0"))
                                                (rule "nnf_notOr" (formula "37") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "37") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,1,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "37") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "37") (term "0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "48") (term "0,1,0"))
                                                (rule "double_not" (formula "48") (term "0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "48") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,0"))
                                                (rule "nnf_imp2or" (formula "48") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "72") (term "0,0"))
                                                (rule "commute_or_2" (formula "21") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "30") (term "0,0"))
                                                (rule "shift_paren_or" (formula "22") (term "0,1,0"))
                                                (rule "commute_and" (formula "39") (term "0,0,1,0"))
                                                (rule "nnf_imp2or" (formula "49") (term "0"))
                                                (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "48") (term "0"))
                                                (rule "nnf_imp2or" (formula "39") (term "0"))
                                                (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                (rule "mul_literals" (formula "49") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "49") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "49") (term "0,1,0"))
                                                (rule "double_not" (formula "49") (term "0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "49") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "49") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,1,0"))
                                                (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "48") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "48") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                (rule "mul_literals" (formula "48") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                                (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "49") (term "0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "39") (term "0,1,0"))
                                                (rule "nnf_notAnd" (formula "37") (term "0,0,0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "37") (term "1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "37") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "37") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "48") (term "0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "0") (ifseqformula "8"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "80"))
                                                (rule "concrete_or_2" (formula "1"))
                                                (rule "nnf_notAnd" (formula "40") (term "0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,0"))
                                                (rule "nnf_notOr" (formula "50") (term "0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "38") (term "1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "38") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "38") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "38") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "38") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "50") (term "0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "50") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "50") (term "0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "50") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "50") (term "1,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "50") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "50") (term "0,0,0,1,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "50") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "39") (term "0"))
                                                (rule "cnf_rightDist" (formula "73") (term "0"))
                                                (rule "commute_or_2" (formula "23") (term "0,0,1,0"))
                                                (rule "inEqSimp_or_weaken2" (formula "23") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "1,0,1,0,1,0"))
                                                (rule "add_literals" (formula "23") (term "0,1,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "23") (term "1,0,1,0,1,0"))
                                                (rule "eqClose" (formula "23") (term "0,1,0,1,0"))
                                                (rule "ifthenelse_true_for" (formula "23") (term "1,0,1,0"))
                                                (rule "commute_or" (formula "22") (term "0,0,1,1,0"))
                                                (rule "distr_forallAnd" (formula "73"))
                                                (rule "andLeft" (formula "73"))
                                                (rule "commute_or_2" (formula "49") (term "0,1,1,0"))
                                                (rule "shift_paren_or" (formula "40") (term "0,1,0"))
                                                (rule "commute_or_2" (formula "73") (term "0"))
                                                (rule "commute_or" (formula "39") (term "0,0"))
                                                (rule "shift_paren_or" (formula "73") (term "0"))
                                                (rule "commute_or" (formula "72") (term "0,0"))
                                                (rule "commute_and" (formula "38") (term "1,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "49") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "23") (term "0,0,1,0"))
                                                (rule "cut_direct" (formula "78") (term "0"))
                                                (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 TRUE"
                                                   (rule "concrete_impl_1" (formula "79"))
                                                   (rule "applyEq" (formula "77") (term "0,1") (ifseqformula "79"))
                                                   (rule "polySimp_homoEq" (formula "77") (term "1"))
                                                   (rule "times_zero_2" (formula "77") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "77") (term "0,1"))
                                                   (rule "applyEq" (formula "74") (term "0") (ifseqformula "79"))
                                                   (rule "leq_literals" (formula "74"))
                                                   (rule "true_left" (formula "74"))
                                                   (rule "applyEq" (formula "74") (term "0") (ifseqformula "78"))
                                                   (rule "qeq_literals" (formula "74"))
                                                   (rule "true_left" (formula "74"))
                                                   (rule "applyEq" (formula "7") (term "0") (ifseqformula "77"))
                                                   (rule "inEqSimp_homoInEq0" (formula "7"))
                                                   (rule "times_zero_2" (formula "7") (term "1,0"))
                                                   (rule "add_zero_right" (formula "7") (term "0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "75") (term "1"))
                                                   (rule "mul_literals" (formula "75") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                   (rule "mul_literals" (formula "7") (term "1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "75") (term "0") (ifseqformula "76"))
                                                   (rule "inEqSimp_homoInEq1" (formula "75") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "75") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "75") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "75") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0,0"))
                                                   (rule "add_literals" (formula "75") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "75") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "75") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "75") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "75") (term "0"))
                                                   (rule "concrete_impl_2" (formula "75"))
                                                   (rule "true_left" (formula "75"))
                                                   (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "7") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "7") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "7") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                   (rule "add_literals" (formula "7") (term "0,0"))
                                                   (rule "leq_literals" (formula "7") (term "0"))
                                                   (rule "concrete_or_2" (formula "7"))
                                                   (rule "inEqSimp_subsumption1" (formula "63") (ifseqformula "7"))
                                                   (rule "leq_literals" (formula "63") (term "0"))
                                                   (rule "concrete_or_1" (formula "63"))
                                                   (rule "true_left" (formula "63"))
                                                   (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "74"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "0,0"))
                                                   (rule "mul_literals" (formula "43") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "43") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                                   (rule "add_literals" (formula "43") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "43") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "75"))
                                                   (rule "polySimp_rightDist" (formula "60") (term "0,0"))
                                                   (rule "mul_literals" (formula "60") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "60") (term "0,0"))
                                                   (rule "add_literals" (formula "60") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "60"))
                                                   (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                   (rule "inEqSimp_subsumption4" (formula "60") (ifseqformula "72"))
                                                   (rule "greater_literals" (formula "60") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "60") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "60") (term "0,0"))
                                                   (rule "mul_literals" (formula "60") (term "0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "60") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "60") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "60") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "60") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "60") (term "0,0,0"))
                                                   (rule "add_literals" (formula "60") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "60") (term "0,0"))
                                                   (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                                   (rule "add_literals" (formula "60") (term "0,0"))
                                                   (rule "qeq_literals" (formula "60") (term "0"))
                                                   (rule "concrete_or_1" (formula "60"))
                                                   (rule "true_left" (formula "60"))
                                                   (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "75"))
                                                   (rule "mul_literals" (formula "21") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                   (rule "add_literals" (formula "21") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                   (rule "mul_literals" (formula "21") (term "1"))
                                                   (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcdRightDiv=Z(3(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "21") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "21") (term "0"))
                                                   (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                   (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0"))
                                                   (rule "leq_literals" (formula "21") (term "0"))
                                                   (rule "concrete_or_2" (formula "21"))
                                                   (rule "inEqSimp_subsumption1" (formula "64") (ifseqformula "21"))
                                                   (rule "leq_literals" (formula "64") (term "0"))
                                                   (rule "concrete_or_1" (formula "64"))
                                                   (rule "true_left" (formula "64"))
                                                   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "75"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                   (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=add(Z(0(#)), l_1)") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                                   (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "neg_literal" (formula "6") (term "0,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "6") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "6") (term "0"))
                                                   (rule "add_zero_left" (formula "6") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                   (rule "add_zero_left" (formula "6") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "6") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0"))
                                                   (rule "qeq_literals" (formula "6") (term "0"))
                                                   (rule "concrete_or_2" (formula "6"))
                                                   (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "61"))
                                                   (rule "mul_literals" (formula "8") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                   (rule "mul_literals" (formula "8") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "22"))
                                                   (rule "leq_literals" (formula "8") (term "0"))
                                                   (rule "concrete_or_1" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "72"))
                                                   (rule "mul_literals" (formula "8") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                   (rule "add_literals" (formula "8") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                   (rule "mul_literals" (formula "8") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "23"))
                                                   (rule "leq_literals" (formula "8") (term "0"))
                                                   (rule "concrete_or_1" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "76"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "77"))
                                                   (rule "polySimp_mulAssoc" (formula "17") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                   (rule "mul_literals" (formula "17") (term "0,1"))
                                                   (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), quotient_0)") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                   (rule "leq_literals" (formula "17") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "17") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                   (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "17") (term "0,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                                   (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                                   (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                   (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                   (rule "add_literals" (formula "17") (term "0,0"))
                                                   (rule "leq_literals" (formula "17") (term "0"))
                                                   (rule "concrete_or_2" (formula "17"))
                                                   (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "47"))
                                                   (rule "times_zero_1" (formula "44") (term "0,0"))
                                                   (rule "add_zero_left" (formula "44") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                   (rule "mul_literals" (formula "44") (term "1"))
                                                   (rule "inEqSimp_subsumption6" (formula "44") (ifseqformula "23"))
                                                   (rule "greater_literals" (formula "44") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "44") (term "0"))
                                                   (rule "mul_literals" (formula "44") (term "1,0"))
                                                   (rule "leq_literals" (formula "44") (term "0"))
                                                   (rule "concrete_or_1" (formula "44"))
                                                   (rule "true_left" (formula "44"))
                                                   (rule "inEqSimp_exactShadow3" (formula "65") (ifseqformula "6"))
                                                   (rule "times_zero_1" (formula "65") (term "0,0"))
                                                   (rule "add_zero_left" (formula "65") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "65") (ifseqformula "23"))
                                                   (rule "leq_literals" (formula "65") (term "0"))
                                                   (rule "concrete_or_1" (formula "65"))
                                                   (rule "true_left" (formula "65"))
                                                   (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "38"))
                                                   (rule "times_zero_1" (formula "35") (term "0,0"))
                                                   (rule "add_zero_left" (formula "35") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                   (rule "mul_literals" (formula "35") (term "1"))
                                                   (rule "inEqSimp_subsumption6" (formula "35") (ifseqformula "23"))
                                                   (rule "greater_literals" (formula "35") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "35") (term "0"))
                                                   (rule "mul_literals" (formula "35") (term "1,0"))
                                                   (rule "leq_literals" (formula "35") (term "0"))
                                                   (rule "concrete_or_1" (formula "35"))
                                                   (rule "true_left" (formula "35"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "6"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "75"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0"))
                                                   (rule "qeq_literals" (formula "3") (term "0"))
                                                   (rule "concrete_or_1" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "70"))
                                                   (rule "mul_literals" (formula "23") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                   (rule "mul_literals" (formula "23") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "22"))
                                                   (rule "leq_literals" (formula "23") (term "0"))
                                                   (rule "concrete_or_1" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "69"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                   (rule "add_literals" (formula "17") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "16"))
                                                   (rule "leq_literals" (formula "17") (term "0"))
                                                   (rule "concrete_or_1" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "commute_or_2" (formula "43") (term "0,0,1,0"))
                                                   (rule "inEqSimp_or_weaken2" (formula "43") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "1,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "43") (term "0,1,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "43") (term "1,0,1,0,1,0"))
                                                   (rule "eqClose" (formula "43") (term "0,1,0,1,0"))
                                                   (rule "ifthenelse_true_for" (formula "43") (term "1,0,1,0"))
                                                   (rule "commute_or" (formula "53") (term "0,0,1,1,0"))
                                                   (rule "commute_or" (formula "54") (term "0,1,0,1,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "10"))
                                                   (rule "replace_known_left" (formula "52") (term "0") (ifseqformula "53"))
                                                   (rule "concrete_or_1" (formula "52"))
                                                   (rule "true_left" (formula "52"))
                                                   (rule "commute_and" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "all_pull_out3" (formula "25") (term "1,0"))
                                                   (rule "all_pull_out3" (formula "26") (term "0"))
                                                   (rule "allLeft" (formula "34") (inst "t=i_1_0"))
                                                   (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "29"))
                                                   (rule "concrete_not_1" (formula "34") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "34") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "27"))
                                                   (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                   (rule "concrete_and_2" (formula "34") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "34") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "34") (term "1") (ifseqformula "28"))
                                                   (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "34") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "34") (term "1"))
                                                   (rule "concrete_or_4" (formula "34"))
                                                   (rule "allLeft" (formula "35") (inst "t=i_1_2"))
                                                   (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "54"))
                                                   (rule "concrete_not_1" (formula "35") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "35") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "52"))
                                                   (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                   (rule "concrete_and_2" (formula "35") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "35") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "35") (term "1") (ifseqformula "53"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "35") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "35") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "35") (term "1"))
                                                   (rule "concrete_or_4" (formula "35"))
                                                   (rule "shift_paren_or" (formula "26") (term "0,0"))
                                                   (rule "commute_or" (formula "45") (term "0,0,1,0"))
                                                   (rule "commute_or_2" (formula "55") (term "0,1,1,0"))
                                                   (rule "shift_paren_or" (formula "25") (term "0,1,0"))
                                                   (rule "cnf_rightDist" (formula "56") (term "0,1,1,0"))
                                                   (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "25") (term "0,0,1,0"))
                                                   (rule "commute_or_2" (formula "56") (term "1,0,1,1,0"))
                                                   (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                                                   (rule "commute_or_2" (formula "25") (term "0,0,0,1,0"))
                                                   (rule "allLeft" (formula "36") (inst "t=l_0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "8"))
                                                   (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                   (rule "concrete_and_2" (formula "36") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "36") (term "0"))
                                                   (rule "allLeft" (formula "37") (inst "t=n_0"))
                                                   (rule "applyEq" (formula "37") (term "0,0,0,0,0") (ifseqformula "2"))
                                                   (rule "replace_known_right" (formula "37") (term "0,0,0,0") (ifseqformula "90"))
                                                   (rule "concrete_not_2" (formula "37") (term "0,0,0"))
                                                   (rule "concrete_or_1" (formula "37") (term "0,0"))
                                                   (rule "concrete_or_1" (formula "37") (term "0"))
                                                   (rule "concrete_or_1" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "shift_paren_or" (formula "57") (term "0,0,1,1,0"))
                                                   (rule "commute_or" (formula "57") (term "0,1,0,1,1,0"))
                                                   (rule "cnf_rightDist" (formula "45") (term "0,0,0,0,1,1,0"))
                                                   (rule "commute_or" (formula "45") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "allLeft" (formula "78") (inst "t=l_0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "78") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,1,0"))
                                                   (rule "add_literals" (formula "78") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "78") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "78") (term "0,1,0"))
                                                   (rule "qeq_literals" (formula "78") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "78") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "78") (term "1") (ifseqformula "77"))
                                                   (rule "inEqSimp_homoInEq1" (formula "78") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "78") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "78") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "78") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "78") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,1"))
                                                   (rule "add_literals" (formula "78") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "78") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "78") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "78") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "78") (term "1"))
                                                   (rule "concrete_or_4" (formula "78"))
                                                   (rule "notLeft" (formula "78"))
                                                   (rule "replace_known_right" (formula "36") (term "0,0,0") (ifseqformula "84"))
                                                   (rule "concrete_not_2" (formula "36") (term "0,0"))
                                                   (rule "concrete_or_1" (formula "36") (term "0"))
                                                   (rule "concrete_or_1" (formula "36"))
                                                   (rule "true_left" (formula "36"))
                                                   (rule "allLeft" (formula "78") (inst "t=l_0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "78") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,1,0"))
                                                   (rule "add_literals" (formula "78") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "78") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "78") (term "0,1,0"))
                                                   (rule "qeq_literals" (formula "78") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "78") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "78") (term "1") (ifseqformula "76"))
                                                   (rule "inEqSimp_homoInEq1" (formula "78") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "78") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "78") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "78") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "78") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,1"))
                                                   (rule "add_literals" (formula "78") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "78") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "78") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "78") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "78") (term "1"))
                                                   (rule "concrete_or_4" (formula "78"))
                                                   (rule "notLeft" (formula "78"))
                                                   (rule "allLeft" (formula "78") (inst "t=n_0"))
                                                   (rule "replace_known_left" (formula "78") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "concrete_not_1" (formula "78") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "78") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "78") (term "0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "78") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "78") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "78") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "78") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0"))
                                                   (rule "add_literals" (formula "78") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "78") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "78") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "78") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "78") (term "0"))
                                                   (rule "concrete_or_2" (formula "78"))
                                                   (rule "inEqSimp_antiSymm" (formula "78") (ifseqformula "6"))
                                                   (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "78"))
                                                   (rule "inEqSimp_commuteGeq" (formula "3"))
                                                   (rule "applyEq" (formula "2") (term "0,0,2,0") (ifseqformula "78"))
                                                   (rule "close" (formula "88") (ifseqformula "2"))
                                                )
                                                (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 FALSE"
                                                   (rule "concrete_impl_2" (formula "78"))
                                                   (rule "true_left" (formula "78"))
                                                   (rule "inEqSimp_leqRight" (formula "79"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "replace_known_left" (formula "78") (term "0") (ifseqformula "1"))
                                                   (rule "concrete_impl_1" (formula "78"))
                                                   (rule "applyEq" (formula "75") (term "0") (ifseqformula "78"))
                                                   (rule "inEqSimp_homoInEq0" (formula "75"))
                                                   (rule "polySimp_mulComm0" (formula "75") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "75") (term "1,0"))
                                                   (rule "mul_literals" (formula "75") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "75") (term "0"))
                                                   (rule "add_literals" (formula "75") (term "0,0"))
                                                   (rule "applyEq" (formula "8") (term "0") (ifseqformula "78"))
                                                   (rule "inEqSimp_homoInEq0" (formula "8"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,0"))
                                                   (rule "applyEq" (formula "76") (term "0") (ifseqformula "78"))
                                                   (rule "inEqSimp_homoInEq1" (formula "76"))
                                                   (rule "polySimp_mulComm0" (formula "76") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "76") (term "1,0"))
                                                   (rule "mul_literals" (formula "76") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "76") (term "0"))
                                                   (rule "add_literals" (formula "76") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "75"))
                                                   (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                   (rule "mul_literals" (formula "8") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "69") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "69") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "69") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "69") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "69") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "69") (term "0,0,0"))
                                                   (rule "add_literals" (formula "69") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "69") (term "0,0"))
                                                   (rule "add_literals" (formula "69") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "69") (term "1,0,0"))
                                                   (rule "add_literals" (formula "69") (term "0,0"))
                                                   (rule "qeq_literals" (formula "69") (term "0"))
                                                   (rule "concrete_or_1" (formula "69"))
                                                   (rule "true_left" (formula "69"))
                                                   (rule "inEqSimp_subsumption4" (formula "74") (ifseqformula "67"))
                                                   (rule "greater_literals" (formula "74") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "74") (term "0"))
                                                   (rule "mul_literals" (formula "74") (term "0,0"))
                                                   (rule "leq_literals" (formula "74") (term "0"))
                                                   (rule "concrete_or_1" (formula "74"))
                                                   (rule "true_left" (formula "74"))
                                                   (rule "inEqSimp_contradInEq3" (formula "8") (ifseqformula "71"))
                                                   (rule "greater_literals" (formula "8") (term "0,0"))
                                                   (rule "concrete_impl_1" (formula "8") (term "0"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "0"))
                                                   (rule "mul_literals" (formula "8") (term "0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0"))
                                                   (rule "add_literals" (formula "8") (term "0"))
                                                   (rule "leq_literals" (formula "8"))
                                                   (rule "closeFalse" (formula "8"))
                                                )
                                             )
                                          )
                                          (branch "CUT: l_0 <= -1 + l_1 FALSE"
                                             (rule "concrete_impl_2" (formula "59"))
                                             (rule "true_left" (formula "59"))
                                             (rule "inEqSimp_leqRight" (formula "65"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "49"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "cut_direct" (formula "60") (term "0"))
                                             (branch "CUT: l_0 >= 1 + l_1 TRUE"
                                                (rule "concrete_impl_1" (formula "61"))
                                                (rule "andLeft" (formula "61"))
                                                (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "60"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                (rule "concrete_or_1" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "48"))
                                                (rule "polySimp_rightDist" (formula "59") (term "0,0"))
                                                (rule "mul_literals" (formula "59") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "59") (term "0"))
                                                (rule "add_literals" (formula "59") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "59"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                                (rule "polySimp_elimOne" (formula "59") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "55") (ifseqformula "59"))
                                                (rule "leq_literals" (formula "55") (term "0"))
                                                (rule "concrete_or_1" (formula "55"))
                                                (rule "true_left" (formula "55"))
                                                (rule "nnf_imp2or" (formula "39") (term "1,0"))
                                                (rule "commute_or_2" (formula "23") (term "0"))
                                                (rule "div_axiom" (formula "11") (term "1") (inst "quotient=quotient_0"))
                                                (rule "mul_literals" (formula "11") (term "1,1,1,1,1"))
                                                (rule "qeq_literals" (formula "11") (term "0,1,1"))
                                                (rule "ifthenelse_true_for" (formula "11") (term "1,1"))
                                                (rule "equal_literals" (formula "11") (term "0"))
                                                (rule "concrete_or_2" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "polySimp_addComm1" (formula "13") (term "1"))
                                                (rule "add_literals" (formula "13") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "12"))
                                                (rule "inEqSimp_homoInEq1" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                (rule "applyEqRigid" (formula "17") (term "1,1,0,0") (ifseqformula "11"))
                                                (rule "applyEqRigid" (formula "26") (term "1,1,0") (ifseqformula "11"))
                                                (rule "applyEqRigid" (formula "34") (term "1,1,1,0,0,1,0") (ifseqformula "11"))
                                                (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "11"))
                                                (rule "inEqSimp_homoInEq1" (formula "20"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                (rule "applyEq" (formula "42") (term "1,1,1,0,0") (ifseqformula "11"))
                                                (rule "applyEq" (formula "33") (term "1,1,1,0,0") (ifseqformula "11"))
                                                (rule "applyEqRigid" (formula "34") (term "1,1,1,0,0") (ifseqformula "11"))
                                                (rule "applyEqRigid" (formula "32") (term "1,1,0,0") (ifseqformula "11"))
                                                (rule "applyEqRigid" (formula "18") (term "1,0,0,0,1,0") (ifseqformula "11"))
                                                (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "11"))
                                                (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "11"))
                                                (rule "inEqSimp_homoInEq1" (formula "40"))
                                                (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                (rule "applyEq" (formula "43") (term "1,1,1,0,0") (ifseqformula "11"))
                                                (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "11"))
                                                (rule "applyEqRigid" (formula "14") (term "1") (ifseqformula "11"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                (rule "mul_literals" (formula "13") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                (rule "mul_literals" (formula "20") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "40"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                (rule "mul_literals" (formula "40") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "40"))
                                                (rule "mul_literals" (formula "39") (term "0,0"))
                                                (rule "add_zero_left" (formula "39") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                (rule "mul_literals" (formula "39") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "13"))
                                                (rule "polySimp_rightDist" (formula "59") (term "0,0"))
                                                (rule "mul_literals" (formula "59") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "59") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "59") (term "0,0"))
                                                (rule "add_literals" (formula "59") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "59") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "59"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "59") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,1,0"))
                                                (rule "neg_literal" (formula "59") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "59") (term "0,0"))
                                                (rule "concrete_or_2" (formula "59") (term "0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "59") (term "0,0"))
                                                (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "59") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "59") (term "0,0"))
                                                (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "59") (term "0,0"))
                                                (rule "qeq_literals" (formula "59") (term "0"))
                                                (rule "concrete_or_2" (formula "59"))
                                                (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "13"))
                                                (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "29") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "13"))
                                                (rule "mul_literals" (formula "16") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                (rule "add_literals" (formula "16") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                (rule "mul_literals" (formula "16") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "leq_literals" (formula "16") (term "0,0"))
                                                (rule "concrete_or_2" (formula "16") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "16") (term "0,0"))
                                                (rule "leq_literals" (formula "16") (term "0"))
                                                (rule "concrete_or_2" (formula "16"))
                                                (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "16"))
                                                (rule "leq_literals" (formula "41") (term "0"))
                                                (rule "concrete_or_1" (formula "41"))
                                                (rule "true_left" (formula "41"))
                                                (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "13"))
                                                (rule "polySimp_rightDist" (formula "54") (term "0,0"))
                                                (rule "mul_literals" (formula "54") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                                                (rule "add_literals" (formula "54") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "54") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                                (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "54") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "leq_literals" (formula "54") (term "0,0"))
                                                (rule "concrete_or_2" (formula "54") (term "0"))
                                                (rule "neg_literal" (formula "54") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0"))
                                                (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "54") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0"))
                                                (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "54") (term "0,0"))
                                                (rule "qeq_literals" (formula "54") (term "0"))
                                                (rule "concrete_or_2" (formula "54"))
                                                (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "51"))
                                                (rule "polySimp_mulAssoc" (formula "12") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "12") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1,0"))
                                                (rule "neg_literal" (formula "12") (term "0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "12") (term "0,0"))
                                                (rule "concrete_or_2" (formula "12") (term "0"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "12") (term "0,0"))
                                                (rule "qeq_literals" (formula "12") (term "0"))
                                                (rule "concrete_or_2" (formula "12"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "14"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "3") (term "0,0"))
                                                (rule "concrete_or_2" (formula "3") (term "0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "3") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "3") (term "0,0"))
                                                (rule "qeq_literals" (formula "3") (term "0"))
                                                (rule "concrete_or_2" (formula "3"))
                                                (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                                                (rule "times_zero_1" (formula "22") (term "0,0"))
                                                (rule "add_zero_left" (formula "22") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                (rule "mul_literals" (formula "22") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "18"))
                                                (rule "leq_literals" (formula "22") (term "0"))
                                                (rule "concrete_or_1" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "15"))
                                                (rule "polySimp_rightDist" (formula "41") (term "0,0"))
                                                (rule "mul_literals" (formula "41") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "41") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                                                (rule "add_literals" (formula "41") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "41") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "3"))
                                                (rule "times_zero_1" (formula "59") (term "0,0"))
                                                (rule "add_zero_left" (formula "59") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "59") (ifseqformula "18"))
                                                (rule "leq_literals" (formula "59") (term "0"))
                                                (rule "concrete_or_1" (formula "59"))
                                                (rule "true_left" (formula "59"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "32"))
                                                (rule "times_zero_1" (formula "30") (term "0,0"))
                                                (rule "add_zero_left" (formula "30") (term "0"))
                                                (rule "inEqSimp_subsumption6" (formula "30") (ifseqformula "18"))
                                                (rule "greater_literals" (formula "30") (term "0,0"))
                                                (rule "concrete_and_1" (formula "30") (term "0"))
                                                (rule "mul_literals" (formula "30") (term "1,0"))
                                                (rule "leq_literals" (formula "30") (term "0"))
                                                (rule "concrete_or_1" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "41"))
                                                (rule "times_zero_1" (formula "39") (term "0,0"))
                                                (rule "add_zero_left" (formula "39") (term "0"))
                                                (rule "inEqSimp_subsumption6" (formula "39") (ifseqformula "18"))
                                                (rule "greater_literals" (formula "39") (term "0,0"))
                                                (rule "concrete_and_1" (formula "39") (term "0"))
                                                (rule "mul_literals" (formula "39") (term "1,0"))
                                                (rule "leq_literals" (formula "39") (term "0"))
                                                (rule "concrete_or_1" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "inEqSimp_exactShadow3" (formula "69") (ifseqformula "57"))
                                                (rule "polySimp_rightDist" (formula "69") (term "0,0"))
                                                (rule "mul_literals" (formula "69") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "69") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "69"))
                                                (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                                (rule "polySimp_elimOne" (formula "69") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "64") (ifseqformula "69"))
                                                (rule "inEqSimp_homoInEq0" (formula "64") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "64") (term "1,0,0"))
                                                (rule "mul_literals" (formula "64") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "64") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                                                (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "64") (term "0,0"))
                                                (rule "qeq_literals" (formula "64") (term "0"))
                                                (rule "concrete_or_1" (formula "64"))
                                                (rule "true_left" (formula "64"))
                                                (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "57"))
                                                (rule "times_zero_1" (formula "60") (term "0,0"))
                                                (rule "add_zero_left" (formula "60") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "60") (ifseqformula "18"))
                                                (rule "leq_literals" (formula "60") (term "0"))
                                                (rule "concrete_or_1" (formula "60"))
                                                (rule "true_left" (formula "60"))
                                                (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "68"))
                                                (rule "times_zero_1" (formula "63") (term "0,0"))
                                                (rule "add_zero_left" (formula "63") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "63"))
                                                (rule "mul_literals" (formula "63") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "63") (ifseqformula "18"))
                                                (rule "leq_literals" (formula "63") (term "0"))
                                                (rule "concrete_or_1" (formula "63"))
                                                (rule "true_left" (formula "63"))
                                                (rule "div_axiom" (formula "74") (term "0,1,1,1") (inst "quotient=quotient_1"))
                                                (rule "mul_literals" (formula "74") (term "1,1,1,1,1"))
                                                (rule "qeq_literals" (formula "74") (term "0,1,1"))
                                                (rule "ifthenelse_true_for" (formula "74") (term "1,1"))
                                                (rule "equal_literals" (formula "74") (term "0"))
                                                (rule "concrete_or_2" (formula "74"))
                                                (rule "andLeft" (formula "74"))
                                                (rule "andLeft" (formula "74"))
                                                (rule "polySimp_addAssoc" (formula "76") (term "0,1"))
                                                (rule "add_literals" (formula "76") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "76") (term "1"))
                                                (rule "add_literals" (formula "76") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "75"))
                                                (rule "polySimp_mulLiterals" (formula "75") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "75") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "76"))
                                                (rule "polySimp_mulLiterals" (formula "76") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "76") (term "0"))
                                                (rule "applyEq" (formula "77") (term "0,1,1,0") (ifseqformula "74"))
                                                (rule "polySimp_addComm1" (formula "77") (term "1,0"))
                                                (rule "applyEqRigid" (formula "78") (term "0,1,1,0") (ifseqformula "74"))
                                                (rule "polySimp_addComm1" (formula "78") (term "1,0"))
                                                (rule "applyEqRigid" (formula "77") (term "0,1,1,1") (ifseqformula "74"))
                                                (rule "polySimp_addComm1" (formula "77") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "75"))
                                                (rule "polySimp_mulComm0" (formula "75") (term "1"))
                                                (rule "polySimp_rightDist" (formula "75") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "75") (term "1,1"))
                                                (rule "mul_literals" (formula "75") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "76"))
                                                (rule "polySimp_mulComm0" (formula "76") (term "1"))
                                                (rule "polySimp_rightDist" (formula "76") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "76") (term "1,1"))
                                                (rule "mul_literals" (formula "76") (term "0,1"))
                                                (rule "elimGcdLeq_antec" (formula "76") (inst "elimGcdRightDiv=add(Z(0(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "neg_literal" (formula "76") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "76") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "76") (term "0,0"))
                                                (rule "concrete_or_2" (formula "76") (term "0"))
                                                (rule "mul_literals" (formula "76") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "76") (term "0,0"))
                                                (rule "add_literals" (formula "76") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "76") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "76") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "76") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "76") (term "0,0,0"))
                                                (rule "add_literals" (formula "76") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "76") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "76") (term "0,0,0"))
                                                (rule "add_literals" (formula "76") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "76") (term "0,0"))
                                                (rule "add_literals" (formula "76") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "76") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "76") (term "0,0"))
                                                (rule "qeq_literals" (formula "76") (term "0"))
                                                (rule "concrete_or_2" (formula "76"))
                                                (rule "elimGcdGeq_antec" (formula "75") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "75") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "75") (term "0,0"))
                                                (rule "concrete_or_2" (formula "75") (term "0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0"))
                                                (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "75") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "75") (term "0,0,0"))
                                                (rule "add_literals" (formula "75") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "75") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "75") (term "0,0,0"))
                                                (rule "add_literals" (formula "75") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0"))
                                                (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "75") (term "0,0"))
                                                (rule "leq_literals" (formula "75") (term "0"))
                                                (rule "concrete_or_2" (formula "75"))
                                                (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "76"))
                                                (rule "times_zero_1" (formula "63") (term "0,0"))
                                                (rule "add_zero_left" (formula "63") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "63"))
                                                (rule "mul_literals" (formula "63") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "63") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "63") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "63") (term "0,0"))
                                                (rule "concrete_or_2" (formula "63") (term "0"))
                                                (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "63") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "63") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "63") (term "0,0"))
                                                (rule "add_literals" (formula "63") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "63") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "63") (term "0,0"))
                                                (rule "leq_literals" (formula "63") (term "0"))
                                                (rule "concrete_or_2" (formula "63"))
                                                (rule "inEqSimp_exactShadow3" (formula "76") (ifseqformula "69"))
                                                (rule "polySimp_rightDist" (formula "76") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "76") (term "1,0,0"))
                                                (rule "mul_literals" (formula "76") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "76") (term "0"))
                                                (rule "polySimp_addComm1" (formula "76") (term "0,0"))
                                                (rule "add_literals" (formula "76") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "76"))
                                                (rule "polySimp_mulComm0" (formula "76") (term "1"))
                                                (rule "polySimp_rightDist" (formula "76") (term "1"))
                                                (rule "mul_literals" (formula "76") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "76") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "77") (ifseqformula "68"))
                                                (rule "polySimp_rightDist" (formula "77") (term "0,0"))
                                                (rule "mul_literals" (formula "77") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "77") (term "0"))
                                                (rule "add_literals" (formula "77") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "77"))
                                                (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "77") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                (rule "neg_literal" (formula "77") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "77") (term "0,0"))
                                                (rule "concrete_or_2" (formula "77") (term "0"))
                                                (rule "mul_literals" (formula "77") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "77") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "77") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,0"))
                                                (rule "add_literals" (formula "77") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "77") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "77") (term "0,0"))
                                                (rule "qeq_literals" (formula "77") (term "0"))
                                                (rule "concrete_or_2" (formula "77"))
                                                (rule "inEqSimp_antiSymm" (formula "63") (ifseqformula "77"))
                                                (rule "applyEq" (formula "77") (term "0,1,1") (ifseqformula "63"))
                                                (rule "mul_literals" (formula "77") (term "1,1"))
                                                (rule "add_literals" (formula "77") (term "1"))
                                                (rule "applyEqRigid" (formula "78") (term "0") (ifseqformula "63"))
                                                (rule "leq_literals" (formula "78"))
                                                (rule "true_left" (formula "78"))
                                                (rule "applyEqRigid" (formula "79") (term "0,1,1") (ifseqformula "63"))
                                                (rule "mul_literals" (formula "79") (term "1,1"))
                                                (rule "add_literals" (formula "79") (term "1"))
                                                (rule "applyEq" (formula "64") (term "0") (ifseqformula "63"))
                                                (rule "qeq_literals" (formula "64"))
                                                (rule "true_left" (formula "64"))
                                                (rule "applyEq" (formula "77") (term "0,1,1") (ifseqformula "63"))
                                                (rule "mul_literals" (formula "77") (term "1,1"))
                                                (rule "add_literals" (formula "77") (term "1"))
                                                (rule "applyEqRigid" (formula "80") (term "0,1,0,1,0") (ifseqformula "63"))
                                                (rule "mul_literals" (formula "80") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "80") (term "0,1,0"))
                                                (rule "applyEqRigid" (formula "79") (term "0,1,0,1,0") (ifseqformula "63"))
                                                (rule "mul_literals" (formula "79") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "79") (term "0,1,0"))
                                                (rule "applyEqRigid" (formula "75") (term "1") (ifseqformula "63"))
                                                (rule "applyEq" (formula "79") (term "0,1,0,1,1") (ifseqformula "63"))
                                                (rule "mul_literals" (formula "79") (term "1,0,1,1"))
                                                (rule "add_literals" (formula "79") (term "0,1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "76") (ifseqformula "18"))
                                                (rule "leq_literals" (formula "76") (term "0"))
                                                (rule "concrete_or_1" (formula "76"))
                                                (rule "true_left" (formula "76"))
                                                (rule "inEqSimp_subsumption1" (formula "76") (ifseqformula "64"))
                                                (rule "leq_literals" (formula "76") (term "0"))
                                                (rule "concrete_or_1" (formula "76"))
                                                (rule "true_left" (formula "76"))
                                                (rule "inEqSimp_subsumption0" (formula "76") (ifseqformula "68"))
                                                (rule "leq_literals" (formula "76") (term "0"))
                                                (rule "concrete_or_1" (formula "76"))
                                                (rule "true_left" (formula "76"))
                                                (rule "cut_direct" (formula "85") (term "0,0"))
                                                (branch "CUT: self.table[n_0 * 2] = null TRUE"
                                                   (rule "concrete_not_1" (formula "86") (term "0"))
                                                   (rule "concrete_and_2" (formula "86"))
                                                   (rule "false_right" (formula "86"))
                                                   (rule "nnf_imp2or" (formula "49") (term "1,0"))
                                                   (rule "nnf_notAnd" (formula "39") (term "0,1,0,1,0"))
                                                   (rule "double_not" (formula "39") (term "0,0,1,0,1,0"))
                                                   (rule "nnf_notOr" (formula "37") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "37") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "37") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "37") (term "0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,1,0"))
                                                   (rule "double_not" (formula "48") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "48") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "38") (term "0"))
                                                   (rule "nnf_imp2or" (formula "48") (term "0,1,1,0"))
                                                   (rule "commute_or_2" (formula "21") (term "0,1,1,0"))
                                                   (rule "commute_or" (formula "72") (term "0,0"))
                                                   (rule "commute_or" (formula "73") (term "0,0"))
                                                   (rule "commute_or" (formula "30") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,1,0"))
                                                   (rule "commute_and" (formula "39") (term "0,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "49") (term "0"))
                                                   (rule "nnf_imp2or" (formula "48") (term "0"))
                                                   (rule "nnf_imp2or" (formula "39") (term "0"))
                                                   (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "48") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "0,1,0"))
                                                   (rule "double_not" (formula "49") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "39") (term "0,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "0") (ifseqformula "8"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "81"))
                                                   (rule "concrete_or_2" (formula "1"))
                                                   (rule "nnf_imp2or" (formula "50") (term "0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "38") (term "1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "38") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "38") (term "0,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "40") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,0"))
                                                   (rule "nnf_notOr" (formula "50") (term "0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "38") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "38") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,1,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "50") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "50") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "50") (term "0,0,0,1,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "50") (term "0,0,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "50") (term "0,1,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "50") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "50") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "50") (term "0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "commute_or_2" (formula "39") (term "0"))
                                                   (rule "cnf_rightDist" (formula "73") (term "0"))
                                                   (rule "cnf_rightDist" (formula "74") (term "0"))
                                                   (rule "commute_or_2" (formula "23") (term "0,0,1,0"))
                                                   (rule "inEqSimp_or_weaken2" (formula "23") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "1,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "23") (term "0,1,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "23") (term "1,0,1,0,1,0"))
                                                   (rule "eqClose" (formula "23") (term "0,1,0,1,0"))
                                                   (rule "ifthenelse_true_for" (formula "23") (term "1,0,1,0"))
                                                   (rule "commute_or" (formula "22") (term "0,0,1,1,0"))
                                                   (rule "distr_forallAnd" (formula "73"))
                                                   (rule "andLeft" (formula "73"))
                                                   (rule "distr_forallAnd" (formula "75"))
                                                   (rule "andLeft" (formula "75"))
                                                   (rule "commute_or_2" (formula "49") (term "0,1,1,0"))
                                                   (rule "shift_paren_or" (formula "40") (term "0,1,0"))
                                                   (rule "commute_or_2" (formula "73") (term "0"))
                                                   (rule "commute_or_2" (formula "75") (term "0"))
                                                   (rule "commute_or" (formula "39") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "73") (term "0"))
                                                   (rule "shift_paren_or" (formula "75") (term "0"))
                                                   (rule "commute_or" (formula "72") (term "0,0"))
                                                   (rule "commute_or" (formula "74") (term "0,0"))
                                                   (rule "commute_and" (formula "38") (term "1,0,0,0,1,1,0"))
                                                   (rule "commute_or" (formula "49") (term "0,1,1,0"))
                                                   (rule "commute_or" (formula "23") (term "0,0,1,0"))
                                                   (rule "cut_direct" (formula "80") (term "0"))
                                                   (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 TRUE"
                                                      (rule "concrete_impl_1" (formula "81"))
                                                      (rule "applyEq" (formula "77") (term "0") (ifseqformula "81"))
                                                      (rule "qeq_literals" (formula "77"))
                                                      (rule "true_left" (formula "77"))
                                                      (rule "applyEq" (formula "7") (term "0") (ifseqformula "80"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7"))
                                                      (rule "times_zero_2" (formula "7") (term "1,0"))
                                                      (rule "add_zero_right" (formula "7") (term "0"))
                                                      (rule "applyEq" (formula "78") (term "0,1") (ifseqformula "80"))
                                                      (rule "polySimp_homoEq" (formula "78") (term "1"))
                                                      (rule "times_zero_2" (formula "78") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "78") (term "0,1"))
                                                      (rule "applyEq" (formula "76") (term "0") (ifseqformula "80"))
                                                      (rule "leq_literals" (formula "76"))
                                                      (rule "true_left" (formula "76"))
                                                      (rule "polySimp_sepPosMonomial" (formula "77") (term "1"))
                                                      (rule "mul_literals" (formula "77") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                      (rule "mul_literals" (formula "7") (term "1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "77") (term "0") (ifseqformula "78"))
                                                      (rule "inEqSimp_homoInEq1" (formula "77") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "77") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "77") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "77") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,0,0"))
                                                      (rule "add_literals" (formula "77") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "77") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "77") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "77") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "77") (term "0"))
                                                      (rule "concrete_impl_2" (formula "77"))
                                                      (rule "true_left" (formula "77"))
                                                      (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                      (rule "leq_literals" (formula "7") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "7") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "7") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0"))
                                                      (rule "leq_literals" (formula "7") (term "0"))
                                                      (rule "concrete_or_2" (formula "7"))
                                                      (rule "inEqSimp_subsumption1" (formula "61") (ifseqformula "7"))
                                                      (rule "leq_literals" (formula "61") (term "0"))
                                                      (rule "concrete_or_1" (formula "61"))
                                                      (rule "true_left" (formula "61"))
                                                      (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "76"))
                                                      (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                                      (rule "mul_literals" (formula "35") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                                      (rule "add_literals" (formula "35") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                      (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "77"))
                                                      (rule "polySimp_mulAssoc" (formula "16") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                      (rule "mul_literals" (formula "16") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                      (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), quotient_0)") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                      (rule "leq_literals" (formula "16") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "16") (term "0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "16") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0"))
                                                      (rule "leq_literals" (formula "16") (term "0"))
                                                      (rule "concrete_or_2" (formula "16"))
                                                      (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "60"))
                                                      (rule "mul_literals" (formula "7") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                      (rule "mul_literals" (formula "7") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "22"))
                                                      (rule "leq_literals" (formula "7") (term "0"))
                                                      (rule "concrete_or_1" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "inEqSimp_exactShadow3" (formula "61") (ifseqformula "78"))
                                                      (rule "polySimp_rightDist" (formula "61") (term "0,0"))
                                                      (rule "mul_literals" (formula "61") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "61") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "61") (term "0,0"))
                                                      (rule "add_literals" (formula "61") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "61"))
                                                      (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                                                      (rule "inEqSimp_contradInEq5" (formula "61") (ifseqformula "73"))
                                                      (rule "greater_literals" (formula "61") (term "0,0"))
                                                      (rule "concrete_impl_1" (formula "61") (term "0"))
                                                      (rule "andLeft" (formula "61"))
                                                      (rule "polySimp_rightDist" (formula "61") (term "1"))
                                                      (rule "mul_literals" (formula "61") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "61"))
                                                      (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                                                      (rule "mul_literals" (formula "61") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "61") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "61") (term "0,0"))
                                                      (rule "add_literals" (formula "61") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "61") (term "0"))
                                                      (rule "add_literals" (formula "61") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "61") (term "1,0"))
                                                      (rule "add_literals" (formula "61") (term "0"))
                                                      (rule "leq_literals" (formula "61"))
                                                      (rule "closeFalse" (formula "61"))
                                                   )
                                                   (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 FALSE"
                                                      (rule "concrete_impl_2" (formula "80"))
                                                      (rule "true_left" (formula "80"))
                                                      (rule "inEqSimp_leqRight" (formula "81"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "replace_known_left" (formula "80") (term "0") (ifseqformula "1"))
                                                      (rule "concrete_impl_1" (formula "80"))
                                                      (rule "applyEq" (formula "8") (term "0") (ifseqformula "80"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,0"))
                                                      (rule "applyEq" (formula "77") (term "0") (ifseqformula "80"))
                                                      (rule "inEqSimp_homoInEq0" (formula "77"))
                                                      (rule "polySimp_mulComm0" (formula "77") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "1,0"))
                                                      (rule "mul_literals" (formula "77") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "0"))
                                                      (rule "add_literals" (formula "77") (term "0,0"))
                                                      (rule "applyEq" (formula "78") (term "0") (ifseqformula "80"))
                                                      (rule "inEqSimp_homoInEq1" (formula "78"))
                                                      (rule "polySimp_mulComm0" (formula "78") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "78") (term "1,0"))
                                                      (rule "mul_literals" (formula "78") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "78") (term "0"))
                                                      (rule "add_literals" (formula "78") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                      (rule "mul_literals" (formula "8") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "77"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "78"))
                                                      (rule "polySimp_mulLiterals" (formula "78") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "67") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "67") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "67") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "67") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "67") (term "0,0,0"))
                                                      (rule "add_literals" (formula "67") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "67") (term "0,0"))
                                                      (rule "add_literals" (formula "67") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "67") (term "1,0,0"))
                                                      (rule "add_literals" (formula "67") (term "0,0"))
                                                      (rule "qeq_literals" (formula "67") (term "0"))
                                                      (rule "concrete_or_1" (formula "67"))
                                                      (rule "true_left" (formula "67"))
                                                      (rule "inEqSimp_subsumption6" (formula "77") (ifseqformula "66"))
                                                      (rule "greater_literals" (formula "77") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "77") (term "0"))
                                                      (rule "times_zero_1" (formula "77") (term "1,0"))
                                                      (rule "leq_literals" (formula "77") (term "0"))
                                                      (rule "concrete_or_1" (formula "77"))
                                                      (rule "true_left" (formula "77"))
                                                      (rule "inEqSimp_subsumption4" (formula "76") (ifseqformula "69"))
                                                      (rule "greater_literals" (formula "76") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "76") (term "0"))
                                                      (rule "mul_literals" (formula "76") (term "0,0"))
                                                      (rule "leq_literals" (formula "76") (term "0"))
                                                      (rule "concrete_or_1" (formula "76"))
                                                      (rule "true_left" (formula "76"))
                                                      (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=add(Z(2(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                                      (rule "leq_literals" (formula "8") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "8") (term "0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                      (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "8") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                      (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0"))
                                                      (rule "leq_literals" (formula "8") (term "0"))
                                                      (rule "concrete_or_2" (formula "8"))
                                                      (rule "inEqSimp_subsumption1" (formula "71") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq0" (formula "71") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "71") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "71") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "71") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "71") (term "0,0,0"))
                                                      (rule "add_literals" (formula "71") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,0"))
                                                      (rule "add_literals" (formula "71") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "71") (term "1,0,0"))
                                                      (rule "add_literals" (formula "71") (term "0,0"))
                                                      (rule "qeq_literals" (formula "71") (term "0"))
                                                      (rule "concrete_or_1" (formula "71"))
                                                      (rule "true_left" (formula "71"))
                                                      (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "59"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "71") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq0" (formula "71") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "71") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "71") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "71") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "71") (term "0,0,0"))
                                                      (rule "add_literals" (formula "71") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,0"))
                                                      (rule "add_literals" (formula "71") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "71") (term "1,0,0"))
                                                      (rule "add_literals" (formula "71") (term "0,0"))
                                                      (rule "qeq_literals" (formula "71") (term "0"))
                                                      (rule "concrete_or_1" (formula "71"))
                                                      (rule "true_left" (formula "71"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "19"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "inEqSimp_subsumption4" (formula "1") (ifseqformula "9"))
                                                      (rule "greater_literals" (formula "1") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "1") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                      (rule "concrete_or_1" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "57"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "inEqSimp_subsumption4" (formula "1") (ifseqformula "71"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                      (rule "greater_literals" (formula "1") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1") (term "0"))
                                                      (rule "concrete_or_1" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "59"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                      (rule "add_literals" (formula "9") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "71") (ifseqformula "9"))
                                                      (rule "leq_literals" (formula "71") (term "0"))
                                                      (rule "concrete_or_1" (formula "71"))
                                                      (rule "true_left" (formula "71"))
                                                      (rule "inEqSimp_exactShadow3" (formula "68") (ifseqformula "8"))
                                                      (rule "times_zero_1" (formula "68") (term "0,0"))
                                                      (rule "add_zero_left" (formula "68") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "68"))
                                                      (rule "mul_literals" (formula "68") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "68") (ifseqformula "23"))
                                                      (rule "leq_literals" (formula "68") (term "0"))
                                                      (rule "concrete_or_1" (formula "68"))
                                                      (rule "true_left" (formula "68"))
                                                      (rule "commute_or_2" (formula "42") (term "0,0,1,0"))
                                                      (rule "inEqSimp_or_weaken2" (formula "42") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "1,0,1,0,1,0"))
                                                      (rule "add_literals" (formula "42") (term "0,1,0,1,0,1,0"))
                                                      (rule "add_zero_left" (formula "42") (term "1,0,1,0,1,0"))
                                                      (rule "eqClose" (formula "42") (term "0,1,0,1,0"))
                                                      (rule "ifthenelse_true_for" (formula "42") (term "1,0,1,0"))
                                                      (rule "commute_or" (formula "51") (term "0,0,1,1,0"))
                                                      (rule "commute_or" (formula "52") (term "0,1,0,1,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "12"))
                                                      (rule "replace_known_left" (formula "50") (term "0") (ifseqformula "51"))
                                                      (rule "concrete_or_1" (formula "50"))
                                                      (rule "true_left" (formula "50"))
                                                      (rule "commute_and" (formula "41") (term "1,0,0,0,0,1,1,0"))
                                                      (rule "all_pull_out3" (formula "25") (term "1,0"))
                                                      (rule "all_pull_out3" (formula "26") (term "0"))
                                                      (rule "allLeft" (formula "71") (inst "t=n_0"))
                                                      (rule "replace_known_left" (formula "71") (term "0,0,0") (ifseqformula "3"))
                                                      (rule "concrete_not_1" (formula "71") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "71") (term "0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "71") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "71") (term "1") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "71") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,1"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "71") (term "0,0,1"))
                                                      (rule "add_literals" (formula "71") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "71") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "71") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "71") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "71") (term "1"))
                                                      (rule "concrete_or_4" (formula "71"))
                                                      (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "71"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0"))
                                                      (rule "add_literals" (formula "4") (term "0"))
                                                      (rule "leq_literals" (formula "4"))
                                                      (rule "closeFalse" (formula "4"))
                                                   )
                                                )
                                                (branch "CUT: self.table[n_0 * 2] = null FALSE"
                                                   (rule "concrete_not_2" (formula "86") (term "0"))
                                                   (rule "concrete_and_1" (formula "86"))
                                                   (rule "notRight" (formula "86"))
                                                   (rule "applyEq" (formula "86") (term "0") (ifseqformula "1"))
                                                   (rule "nnf_imp2or" (formula "49") (term "1,0"))
                                                   (rule "nnf_notAnd" (formula "39") (term "0,1,0,1,0"))
                                                   (rule "double_not" (formula "39") (term "0,0,1,0,1,0"))
                                                   (rule "nnf_notOr" (formula "37") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "37") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "37") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,1,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "37") (term "0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,1,0"))
                                                   (rule "double_not" (formula "48") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "48") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "38") (term "0"))
                                                   (rule "nnf_imp2or" (formula "48") (term "0,1,1,0"))
                                                   (rule "commute_or_2" (formula "21") (term "0,1,1,0"))
                                                   (rule "commute_or" (formula "73") (term "0,0"))
                                                   (rule "commute_or" (formula "72") (term "0,0"))
                                                   (rule "commute_or" (formula "30") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,1,0"))
                                                   (rule "commute_and" (formula "39") (term "0,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "49") (term "0"))
                                                   (rule "nnf_imp2or" (formula "48") (term "0"))
                                                   (rule "nnf_imp2or" (formula "39") (term "0"))
                                                   (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "48") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "0,1,0"))
                                                   (rule "double_not" (formula "49") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "39") (term "0,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "0") (ifseqformula "8"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "81"))
                                                   (rule "concrete_or_2" (formula "1"))
                                                   (rule "nnf_imp2or" (formula "50") (term "0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "38") (term "0,0,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "38") (term "1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "38") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "40") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,1,0"))
                                                   (rule "nnf_notOr" (formula "50") (term "0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "38") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "38") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,1,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "50") (term "0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "50") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "50") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "50") (term "0,0,0,1,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "50") (term "0,0,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "50") (term "0,1,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "50") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "50") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "commute_or_2" (formula "39") (term "0"))
                                                   (rule "cnf_rightDist" (formula "74") (term "0"))
                                                   (rule "cnf_rightDist" (formula "73") (term "0"))
                                                   (rule "commute_or_2" (formula "23") (term "0,0,1,0"))
                                                   (rule "inEqSimp_or_weaken2" (formula "23") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "1,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "23") (term "0,1,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "23") (term "1,0,1,0,1,0"))
                                                   (rule "eqClose" (formula "23") (term "0,1,0,1,0"))
                                                   (rule "ifthenelse_true_for" (formula "23") (term "1,0,1,0"))
                                                   (rule "commute_or" (formula "22") (term "0,0,1,1,0"))
                                                   (rule "distr_forallAnd" (formula "74"))
                                                   (rule "andLeft" (formula "74"))
                                                   (rule "distr_forallAnd" (formula "73"))
                                                   (rule "andLeft" (formula "73"))
                                                   (rule "commute_or_2" (formula "49") (term "0,1,1,0"))
                                                   (rule "shift_paren_or" (formula "40") (term "0,1,0"))
                                                   (rule "commute_or_2" (formula "75") (term "0"))
                                                   (rule "commute_or_2" (formula "73") (term "0"))
                                                   (rule "commute_or" (formula "39") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "75") (term "0"))
                                                   (rule "shift_paren_or" (formula "73") (term "0"))
                                                   (rule "commute_or" (formula "74") (term "0,0"))
                                                   (rule "commute_or" (formula "72") (term "0,0"))
                                                   (rule "commute_or" (formula "49") (term "0,1,1,0"))
                                                   (rule "commute_and" (formula "38") (term "1,0,0,0,1,1,0"))
                                                   (rule "commute_or" (formula "23") (term "0,0,1,0"))
                                                   (rule "cut_direct" (formula "80") (term "0"))
                                                   (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 TRUE"
                                                      (rule "concrete_impl_1" (formula "81"))
                                                      (rule "applyEq" (formula "79") (term "0,1") (ifseqformula "81"))
                                                      (rule "polySimp_homoEq" (formula "79") (term "1"))
                                                      (rule "times_zero_2" (formula "79") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "79") (term "0,1"))
                                                      (rule "applyEq" (formula "7") (term "0") (ifseqformula "81"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7"))
                                                      (rule "times_zero_2" (formula "7") (term "1,0"))
                                                      (rule "add_zero_right" (formula "7") (term "0"))
                                                      (rule "applyEq" (formula "76") (term "0") (ifseqformula "81"))
                                                      (rule "leq_literals" (formula "76"))
                                                      (rule "true_left" (formula "76"))
                                                      (rule "applyEq" (formula "76") (term "0") (ifseqformula "80"))
                                                      (rule "qeq_literals" (formula "76"))
                                                      (rule "true_left" (formula "76"))
                                                      (rule "polySimp_sepPosMonomial" (formula "77") (term "1"))
                                                      (rule "mul_literals" (formula "77") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                      (rule "mul_literals" (formula "7") (term "1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "77") (term "0") (ifseqformula "78"))
                                                      (rule "inEqSimp_homoInEq1" (formula "77") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "77") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "77") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "77") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,0,0"))
                                                      (rule "add_literals" (formula "77") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "77") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "77") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "77") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "77") (term "0"))
                                                      (rule "concrete_impl_2" (formula "77"))
                                                      (rule "true_left" (formula "77"))
                                                      (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                                      (rule "leq_literals" (formula "7") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "7") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "7") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0"))
                                                      (rule "leq_literals" (formula "7") (term "0"))
                                                      (rule "concrete_or_2" (formula "7"))
                                                      (rule "inEqSimp_subsumption1" (formula "61") (ifseqformula "7"))
                                                      (rule "leq_literals" (formula "61") (term "0"))
                                                      (rule "concrete_or_1" (formula "61"))
                                                      (rule "true_left" (formula "61"))
                                                      (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "76"))
                                                      (rule "polySimp_rightDist" (formula "43") (term "0,0"))
                                                      (rule "mul_literals" (formula "43") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "43") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                                      (rule "add_literals" (formula "43") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "43") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "77"))
                                                      (rule "polySimp_mulAssoc" (formula "16") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                      (rule "mul_literals" (formula "16") (term "0,1"))
                                                      (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), quotient_0)") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                      (rule "leq_literals" (formula "16") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "16") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "16") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0"))
                                                      (rule "leq_literals" (formula "16") (term "0"))
                                                      (rule "concrete_or_2" (formula "16"))
                                                      (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "78"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                                      (rule "add_literals" (formula "36") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "79"))
                                                      (rule "polySimp_rightDist" (formula "62") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "62") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "62") (term "0,0"))
                                                      (rule "add_literals" (formula "62") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "62"))
                                                      (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                                      (rule "inEqSimp_contradInEq5" (formula "62") (ifseqformula "74"))
                                                      (rule "greater_literals" (formula "62") (term "0,0"))
                                                      (rule "concrete_impl_1" (formula "62") (term "0"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "polySimp_rightDist" (formula "62") (term "1"))
                                                      (rule "mul_literals" (formula "62") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "62"))
                                                      (rule "polySimp_mulComm0" (formula "62") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "62") (term "1,0"))
                                                      (rule "mul_literals" (formula "62") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "62") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "62") (term "0,0"))
                                                      (rule "add_literals" (formula "62") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "62") (term "0"))
                                                      (rule "add_literals" (formula "62") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "62") (term "1,0"))
                                                      (rule "add_literals" (formula "62") (term "0"))
                                                      (rule "leq_literals" (formula "62"))
                                                      (rule "closeFalse" (formula "62"))
                                                   )
                                                   (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 FALSE"
                                                      (rule "concrete_impl_2" (formula "80"))
                                                      (rule "true_left" (formula "80"))
                                                      (rule "inEqSimp_leqRight" (formula "81"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "replace_known_left" (formula "80") (term "0") (ifseqformula "1"))
                                                      (rule "concrete_impl_1" (formula "80"))
                                                      (rule "applyEq" (formula "77") (term "0") (ifseqformula "80"))
                                                      (rule "inEqSimp_homoInEq0" (formula "77"))
                                                      (rule "polySimp_mulComm0" (formula "77") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "1,0"))
                                                      (rule "mul_literals" (formula "77") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "0"))
                                                      (rule "add_literals" (formula "77") (term "0,0"))
                                                      (rule "applyEq" (formula "78") (term "0") (ifseqformula "80"))
                                                      (rule "inEqSimp_homoInEq1" (formula "78"))
                                                      (rule "polySimp_mulComm0" (formula "78") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "78") (term "1,0"))
                                                      (rule "mul_literals" (formula "78") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "78") (term "0"))
                                                      (rule "add_literals" (formula "78") (term "0,0"))
                                                      (rule "applyEq" (formula "8") (term "0") (ifseqformula "80"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "77"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "78"))
                                                      (rule "polySimp_mulLiterals" (formula "78") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                      (rule "mul_literals" (formula "8") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                      (rule "inEqSimp_subsumption4" (formula "77") (ifseqformula "70"))
                                                      (rule "mul_literals" (formula "77") (term "0,1,0"))
                                                      (rule "greater_literals" (formula "77") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "77") (term "0"))
                                                      (rule "leq_literals" (formula "77") (term "0"))
                                                      (rule "concrete_or_1" (formula "77"))
                                                      (rule "true_left" (formula "77"))
                                                      (rule "inEqSimp_subsumption1" (formula "67") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "67") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "67") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "67") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "67") (term "0,0,0"))
                                                      (rule "add_literals" (formula "67") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "67") (term "0,0"))
                                                      (rule "add_literals" (formula "67") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "67") (term "1,0,0"))
                                                      (rule "add_literals" (formula "67") (term "0,0"))
                                                      (rule "qeq_literals" (formula "67") (term "0"))
                                                      (rule "concrete_or_1" (formula "67"))
                                                      (rule "true_left" (formula "67"))
                                                      (rule "inEqSimp_subsumption6" (formula "76") (ifseqformula "66"))
                                                      (rule "times_zero_1" (formula "76") (term "1,1,0"))
                                                      (rule "greater_literals" (formula "76") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "76") (term "0"))
                                                      (rule "leq_literals" (formula "76") (term "0"))
                                                      (rule "concrete_or_1" (formula "76"))
                                                      (rule "true_left" (formula "76"))
                                                      (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=add(Z(2(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                                      (rule "leq_literals" (formula "8") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "8") (term "0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                      (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "8") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                      (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0"))
                                                      (rule "leq_literals" (formula "8") (term "0"))
                                                      (rule "concrete_or_2" (formula "8"))
                                                      (rule "inEqSimp_subsumption1" (formula "71") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq0" (formula "71") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "71") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "71") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "71") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "71") (term "0,0,0"))
                                                      (rule "add_literals" (formula "71") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,0"))
                                                      (rule "add_literals" (formula "71") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "71") (term "1,0,0"))
                                                      (rule "add_literals" (formula "71") (term "0,0"))
                                                      (rule "qeq_literals" (formula "71") (term "0"))
                                                      (rule "concrete_or_1" (formula "71"))
                                                      (rule "true_left" (formula "71"))
                                                      (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "58"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                      (rule "add_literals" (formula "8") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "70") (ifseqformula "8"))
                                                      (rule "leq_literals" (formula "70") (term "0"))
                                                      (rule "concrete_or_1" (formula "70"))
                                                      (rule "true_left" (formula "70"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "19"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "inEqSimp_subsumption4" (formula "1") (ifseqformula "71"))
                                                      (rule "greater_literals" (formula "1") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "1") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                      (rule "concrete_or_1" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "60"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "71") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq0" (formula "71") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "71") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "71") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "71") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "71") (term "0,0,0"))
                                                      (rule "add_literals" (formula "71") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,0"))
                                                      (rule "add_literals" (formula "71") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "71") (term "1,0,0"))
                                                      (rule "add_literals" (formula "71") (term "0,0"))
                                                      (rule "qeq_literals" (formula "71") (term "0"))
                                                      (rule "concrete_or_1" (formula "71"))
                                                      (rule "true_left" (formula "71"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "58"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "inEqSimp_subsumption4" (formula "1") (ifseqformula "9"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                      (rule "greater_literals" (formula "1") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1") (term "0"))
                                                      (rule "concrete_or_1" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "68") (ifseqformula "9"))
                                                      (rule "times_zero_1" (formula "68") (term "0,0"))
                                                      (rule "add_zero_left" (formula "68") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "68"))
                                                      (rule "mul_literals" (formula "68") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "68") (ifseqformula "23"))
                                                      (rule "leq_literals" (formula "68") (term "0"))
                                                      (rule "concrete_or_1" (formula "68"))
                                                      (rule "true_left" (formula "68"))
                                                      (rule "commute_or_2" (formula "42") (term "0,0,1,0"))
                                                      (rule "inEqSimp_or_weaken2" (formula "42") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "1,0,1,0,1,0"))
                                                      (rule "add_literals" (formula "42") (term "0,1,0,1,0,1,0"))
                                                      (rule "add_zero_left" (formula "42") (term "1,0,1,0,1,0"))
                                                      (rule "eqClose" (formula "42") (term "0,1,0,1,0"))
                                                      (rule "ifthenelse_true_for" (formula "42") (term "1,0,1,0"))
                                                      (rule "commute_or" (formula "51") (term "0,0,1,1,0"))
                                                      (rule "commute_or" (formula "52") (term "0,1,0,1,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "12"))
                                                      (rule "replace_known_left" (formula "50") (term "0") (ifseqformula "51"))
                                                      (rule "concrete_or_1" (formula "50"))
                                                      (rule "true_left" (formula "50"))
                                                      (rule "commute_and" (formula "41") (term "1,0,0,0,0,1,1,0"))
                                                      (rule "all_pull_out3" (formula "25") (term "1,0"))
                                                      (rule "all_pull_out3" (formula "26") (term "0"))
                                                      (rule "allLeft" (formula "72") (inst "t=n_0"))
                                                      (rule "replace_known_left" (formula "72") (term "0,0,0") (ifseqformula "3"))
                                                      (rule "concrete_not_1" (formula "72") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "72") (term "0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "72") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "72") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "72") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "72") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "72") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0,0"))
                                                      (rule "add_literals" (formula "72") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "72") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "72") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "72") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "72") (term "0"))
                                                      (rule "concrete_or_2" (formula "72"))
                                                      (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "72"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "7"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0"))
                                                      (rule "add_literals" (formula "7") (term "0"))
                                                      (rule "leq_literals" (formula "7"))
                                                      (rule "closeFalse" (formula "7"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: l_0 >= 1 + l_1 FALSE"
                                                (rule "concrete_impl_2" (formula "60"))
                                                (rule "true_left" (formula "60"))
                                                (rule "inEqSimp_geqRight" (formula "65"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
                                                (rule "applyEq" (formula "52") (term "0,1,1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,0"))
                                                (rule "times_zero_1" (formula "3") (term "0"))
                                                (rule "leq_literals" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "46") (term "0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "1"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,0"))
                                                (rule "times_zero_1" (formula "1") (term "0"))
                                                (rule "qeq_literals" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "45") (term "0") (ifseqformula "55"))
                                                (rule "eqSymm" (formula "45"))
                                                (rule "applyEqRigid" (formula "44") (term "0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "45") (term "0,1") (ifseqformula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "57") (ifseqformula "5"))
                                                (rule "mul_literals" (formula "57") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                (rule "add_literals" (formula "57") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                (rule "mul_literals" (formula "57") (term "1"))
                                                (rule "inEqSimp_subsumption6" (formula "57") (ifseqformula "51"))
                                                (rule "times_zero_1" (formula "57") (term "1,1,0"))
                                                (rule "greater_literals" (formula "57") (term "0,0"))
                                                (rule "concrete_and_1" (formula "57") (term "0"))
                                                (rule "leq_literals" (formula "57") (term "0"))
                                                (rule "concrete_or_1" (formula "57"))
                                                (rule "true_left" (formula "57"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "nnf_imp2or" (formula "40") (term "1,0"))
                                                (rule "commute_or_2" (formula "24") (term "0"))
                                                (rule "div_axiom" (formula "12") (term "1") (inst "quotient=quotient_0"))
                                                (rule "qeq_literals" (formula "12") (term "0,1,1"))
                                                (rule "ifthenelse_true_for" (formula "12") (term "1,1"))
                                                (rule "equal_literals" (formula "12") (term "0"))
                                                (rule "concrete_or_2" (formula "12"))
                                                (rule "mul_literals" (formula "12") (term "1,1,1"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "polySimp_addComm1" (formula "14") (term "1"))
                                                (rule "add_literals" (formula "14") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "13"))
                                                (rule "inEqSimp_homoInEq1" (formula "14"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                (rule "applyEqRigid" (formula "34") (term "1,1,1,0,0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "35") (term "1,1,1,0,0,1,0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "43") (term "1,1,1,0,0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "12"))
                                                (rule "inEqSimp_homoInEq1" (formula "21"))
                                                (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                (rule "applyEq" (formula "33") (term "1,1,0,0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "41") (term "0") (ifseqformula "12"))
                                                (rule "inEqSimp_homoInEq1" (formula "41"))
                                                (rule "polySimp_addComm1" (formula "41") (term "0"))
                                                (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "12"))
                                                (rule "applyEqRigid" (formula "44") (term "1,1,1,0,0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "12"))
                                                (rule "applyEqRigid" (formula "19") (term "1,0,0,0,1,0") (ifseqformula "12"))
                                                (rule "applyEqRigid" (formula "19") (term "1,1,0,0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "35") (term "1,1,1,0,0") (ifseqformula "12"))
                                                (rule "applyEqRigid" (formula "15") (term "1") (ifseqformula "12"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                (rule "mul_literals" (formula "14") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                                (rule "mul_literals" (formula "21") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "41"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                                (rule "polySimp_rightDist" (formula "41") (term "1"))
                                                (rule "mul_literals" (formula "41") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "14"))
                                                (rule "mul_literals" (formula "17") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                (rule "add_literals" (formula "17") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                (rule "mul_literals" (formula "17") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "17") (term "0,0"))
                                                (rule "concrete_or_2" (formula "17") (term "0"))
                                                (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "17") (term "0,0"))
                                                (rule "leq_literals" (formula "17") (term "0"))
                                                (rule "concrete_or_2" (formula "17"))
                                                (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "14"))
                                                (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                                (rule "times_zero_1" (formula "21") (term "0,0"))
                                                (rule "add_zero_left" (formula "21") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                (rule "mul_literals" (formula "21") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "17"))
                                                (rule "leq_literals" (formula "21") (term "0"))
                                                (rule "concrete_or_1" (formula "21"))
                                                (rule "true_left" (formula "21"))
                                                (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "14"))
                                                (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "4") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "neg_literal" (formula "4") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "4") (term "0,0"))
                                                (rule "concrete_or_2" (formula "4") (term "0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0"))
                                                (rule "qeq_literals" (formula "4") (term "0"))
                                                (rule "concrete_or_2" (formula "4"))
                                                (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "52"))
                                                (rule "polySimp_mulAssoc" (formula "14") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0"))
                                                (rule "neg_literal" (formula "14") (term "0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "14") (term "0,0"))
                                                (rule "concrete_or_2" (formula "14") (term "0"))
                                                (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0"))
                                                (rule "qeq_literals" (formula "14") (term "0"))
                                                (rule "concrete_or_2" (formula "14"))
                                                (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "16"))
                                                (rule "polySimp_rightDist" (formula "60") (term "0,0"))
                                                (rule "mul_literals" (formula "60") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "60") (term "0,0"))
                                                (rule "add_literals" (formula "60") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "60") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "60"))
                                                (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "60") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "60") (term "1,0,1,0"))
                                                (rule "neg_literal" (formula "60") (term "0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "60") (term "0,0"))
                                                (rule "concrete_or_2" (formula "60") (term "0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "60") (term "0,0"))
                                                (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "60") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "60") (term "0,0"))
                                                (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "60") (term "0,0"))
                                                (rule "qeq_literals" (formula "60") (term "0"))
                                                (rule "concrete_or_2" (formula "60"))
                                                (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "16"))
                                                (rule "polySimp_rightDist" (formula "42") (term "0,0"))
                                                (rule "mul_literals" (formula "42") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "42") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                                (rule "add_literals" (formula "42") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "42") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "46"))
                                                (rule "times_zero_1" (formula "45") (term "0,0"))
                                                (rule "add_zero_left" (formula "45") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                                (rule "mul_literals" (formula "45") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "19"))
                                                (rule "leq_literals" (formula "45") (term "0"))
                                                (rule "concrete_or_1" (formula "45"))
                                                (rule "true_left" (formula "45"))
                                                (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "4"))
                                                (rule "times_zero_1" (formula "56") (term "0,0"))
                                                (rule "add_zero_left" (formula "56") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "56") (ifseqformula "19"))
                                                (rule "leq_literals" (formula "56") (term "0"))
                                                (rule "concrete_or_1" (formula "56"))
                                                (rule "true_left" (formula "56"))
                                                (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "33"))
                                                (rule "mul_literals" (formula "31") (term "0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0"))
                                                (rule "inEqSimp_subsumption6" (formula "31") (ifseqformula "19"))
                                                (rule "mul_literals" (formula "31") (term "1,1,0"))
                                                (rule "greater_literals" (formula "31") (term "0,0"))
                                                (rule "concrete_and_1" (formula "31") (term "0"))
                                                (rule "leq_literals" (formula "31") (term "0"))
                                                (rule "concrete_or_1" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "42"))
                                                (rule "times_zero_1" (formula "40") (term "0,0"))
                                                (rule "add_zero_left" (formula "40") (term "0"))
                                                (rule "inEqSimp_subsumption6" (formula "40") (ifseqformula "19"))
                                                (rule "greater_literals" (formula "40") (term "0,0"))
                                                (rule "concrete_and_1" (formula "40") (term "0"))
                                                (rule "mul_literals" (formula "40") (term "1,0"))
                                                (rule "leq_literals" (formula "40") (term "0"))
                                                (rule "concrete_or_1" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "61"))
                                                (rule "times_zero_1" (formula "59") (term "0,0"))
                                                (rule "add_zero_left" (formula "59") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "59") (ifseqformula "19"))
                                                (rule "leq_literals" (formula "59") (term "0"))
                                                (rule "concrete_or_1" (formula "59"))
                                                (rule "true_left" (formula "59"))
                                                (rule "div_axiom" (formula "67") (term "0,1,1,1") (inst "quotient=quotient_1"))
                                                (rule "mul_literals" (formula "67") (term "1,1,1,1,1"))
                                                (rule "equal_literals" (formula "67") (term "0"))
                                                (rule "concrete_or_2" (formula "67"))
                                                (rule "qeq_literals" (formula "67") (term "0,1"))
                                                (rule "ifthenelse_true_for" (formula "67") (term "1"))
                                                (rule "andLeft" (formula "67"))
                                                (rule "andLeft" (formula "67"))
                                                (rule "polySimp_addAssoc" (formula "69") (term "0,1"))
                                                (rule "add_literals" (formula "69") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "69") (term "1"))
                                                (rule "add_literals" (formula "69") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "68"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "69"))
                                                (rule "polySimp_mulLiterals" (formula "69") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "69") (term "0"))
                                                (rule "applyEq" (formula "70") (term "0,1,1,0") (ifseqformula "67"))
                                                (rule "polySimp_addComm1" (formula "70") (term "1,0"))
                                                (rule "applyEq" (formula "71") (term "0,1,1,0") (ifseqformula "67"))
                                                (rule "polySimp_addComm1" (formula "71") (term "1,0"))
                                                (rule "applyEqRigid" (formula "70") (term "0,1,1,1") (ifseqformula "67"))
                                                (rule "polySimp_addComm1" (formula "70") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "68"))
                                                (rule "polySimp_mulComm0" (formula "68") (term "1"))
                                                (rule "polySimp_rightDist" (formula "68") (term "1"))
                                                (rule "mul_literals" (formula "68") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "69"))
                                                (rule "polySimp_mulComm0" (formula "69") (term "1"))
                                                (rule "polySimp_rightDist" (formula "69") (term "1"))
                                                (rule "mul_literals" (formula "69") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "69") (term "1,1"))
                                                (rule "elimGcdLeq_antec" (formula "69") (inst "elimGcdRightDiv=add(Z(0(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,1,0"))
                                                (rule "neg_literal" (formula "69") (term "0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "69") (term "0,0"))
                                                (rule "concrete_or_2" (formula "69") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "69") (term "0,0"))
                                                (rule "add_literals" (formula "69") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "69") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "69") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "69") (term "0,0,0"))
                                                (rule "add_literals" (formula "69") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "69") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "69") (term "0,0,0"))
                                                (rule "add_literals" (formula "69") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "69") (term "0,0"))
                                                (rule "add_literals" (formula "69") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "69") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "69") (term "0,0"))
                                                (rule "qeq_literals" (formula "69") (term "0"))
                                                (rule "concrete_or_2" (formula "69"))
                                                (rule "elimGcdGeq_antec" (formula "68") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "68") (term "0,0"))
                                                (rule "concrete_or_2" (formula "68") (term "0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0"))
                                                (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "68") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "68") (term "0,0,0"))
                                                (rule "add_literals" (formula "68") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "68") (term "0,0,0"))
                                                (rule "add_literals" (formula "68") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0"))
                                                (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "68") (term "0,0"))
                                                (rule "leq_literals" (formula "68") (term "0"))
                                                (rule "concrete_or_2" (formula "68"))
                                                (rule "inEqSimp_exactShadow3" (formula "68") (ifseqformula "61"))
                                                (rule "polySimp_rightDist" (formula "68") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0"))
                                                (rule "mul_literals" (formula "68") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "68"))
                                                (rule "polySimp_mulComm0" (formula "68") (term "1"))
                                                (rule "polySimp_rightDist" (formula "68") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,1"))
                                                (rule "mul_literals" (formula "68") (term "0,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "70"))
                                                (rule "times_zero_1" (formula "59") (term "0,0"))
                                                (rule "add_zero_left" (formula "59") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "59"))
                                                (rule "mul_literals" (formula "59") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "59") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                (rule "leq_literals" (formula "59") (term "0,0"))
                                                (rule "concrete_or_2" (formula "59") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0"))
                                                (rule "mul_literals" (formula "59") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "59") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "59") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "59") (term "0,0"))
                                                (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "59") (term "0,0"))
                                                (rule "leq_literals" (formula "59") (term "0"))
                                                (rule "concrete_or_2" (formula "59"))
                                                (rule "inEqSimp_exactShadow3" (formula "70") (ifseqformula "61"))
                                                (rule "polySimp_rightDist" (formula "70") (term "0,0"))
                                                (rule "mul_literals" (formula "70") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "70") (term "0"))
                                                (rule "add_literals" (formula "70") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "70"))
                                                (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "70") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "70") (term "0,0"))
                                                (rule "concrete_or_2" (formula "70") (term "0"))
                                                (rule "neg_literal" (formula "70") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "70") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0"))
                                                (rule "polySimp_addLiterals" (formula "70") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "70") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "70") (term "0,0"))
                                                (rule "add_literals" (formula "70") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "70") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "70") (term "0,0"))
                                                (rule "qeq_literals" (formula "70") (term "0"))
                                                (rule "concrete_or_2" (formula "70"))
                                                (rule "inEqSimp_antiSymm" (formula "59") (ifseqformula "70"))
                                                (rule "applyEqRigid" (formula "73") (term "0,1,1") (ifseqformula "59"))
                                                (rule "mul_literals" (formula "73") (term "1,1"))
                                                (rule "add_literals" (formula "73") (term "1"))
                                                (rule "applyEq" (formula "60") (term "0") (ifseqformula "59"))
                                                (rule "qeq_literals" (formula "60"))
                                                (rule "true_left" (formula "60"))
                                                (rule "applyEqRigid" (formula "71") (term "0,1,1") (ifseqformula "59"))
                                                (rule "mul_literals" (formula "71") (term "1,1"))
                                                (rule "add_literals" (formula "71") (term "1"))
                                                (rule "applyEqRigid" (formula "70") (term "0") (ifseqformula "59"))
                                                (rule "leq_literals" (formula "70"))
                                                (rule "true_left" (formula "70"))
                                                (rule "applyEqRigid" (formula "69") (term "0,1,1") (ifseqformula "59"))
                                                (rule "mul_literals" (formula "69") (term "1,1"))
                                                (rule "add_literals" (formula "69") (term "1"))
                                                (rule "applyEqRigid" (formula "73") (term "0,1,0,1,0") (ifseqformula "59"))
                                                (rule "mul_literals" (formula "73") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "73") (term "0,1,0"))
                                                (rule "applyEqRigid" (formula "68") (term "1") (ifseqformula "59"))
                                                (rule "applyEq" (formula "72") (term "0,1,0,1,0") (ifseqformula "59"))
                                                (rule "mul_literals" (formula "72") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "72") (term "0,1,0"))
                                                (rule "applyEq" (formula "72") (term "0,1,0,1,1") (ifseqformula "59"))
                                                (rule "mul_literals" (formula "72") (term "1,0,1,1"))
                                                (rule "add_literals" (formula "72") (term "0,1,1"))
                                                (rule "inEqSimp_contradEq3" (formula "72") (term "1") (ifseqformula "6"))
                                                (rule "polySimp_rightDist" (formula "72") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,1"))
                                                (rule "mul_literals" (formula "72") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "72") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "72") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "72") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "72") (term "0,0,1"))
                                                (rule "add_literals" (formula "72") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "72") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "72") (term "0,0,1"))
                                                (rule "qeq_literals" (formula "72") (term "0,1"))
                                                (rule "concrete_and_2" (formula "72") (term "1"))
                                                (rule "concrete_impl_3" (formula "72"))
                                                (rule "notLeft" (formula "72"))
                                                (rule "inEqSimp_geqRight" (formula "74"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "replace_known_left" (formula "73") (term "0") (ifseqformula "1"))
                                                (rule "concrete_impl_1" (formula "73"))
                                                (rule "applyEq" (formula "67") (term "0") (ifseqformula "73"))
                                                (rule "leq_literals" (formula "67"))
                                                (rule "true_left" (formula "67"))
                                                (rule "applyEq" (formula "7") (term "0") (ifseqformula "72"))
                                                (rule "inEqSimp_homoInEq0" (formula "7"))
                                                (rule "times_zero_2" (formula "7") (term "1,0"))
                                                (rule "add_zero_right" (formula "7") (term "0"))
                                                (rule "applyEq" (formula "67") (term "0") (ifseqformula "72"))
                                                (rule "qeq_literals" (formula "67"))
                                                (rule "true_left" (formula "67"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                (rule "mul_literals" (formula "7") (term "1"))
                                                (rule "inEqSimp_subsumption0" (formula "70") (ifseqformula "62"))
                                                (rule "leq_literals" (formula "70") (term "0"))
                                                (rule "concrete_or_1" (formula "70"))
                                                (rule "true_left" (formula "70"))
                                                (rule "inEqSimp_subsumption1" (formula "69") (ifseqformula "61"))
                                                (rule "leq_literals" (formula "69") (term "0"))
                                                (rule "concrete_or_1" (formula "69"))
                                                (rule "true_left" (formula "69"))
                                                (rule "inEqSimp_subsumption1" (formula "68") (ifseqformula "20"))
                                                (rule "leq_literals" (formula "68") (term "0"))
                                                (rule "concrete_or_1" (formula "68"))
                                                (rule "true_left" (formula "68"))
                                                (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "leq_literals" (formula "7") (term "0,0"))
                                                (rule "concrete_or_2" (formula "7") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "7") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "7") (term "0,0"))
                                                (rule "leq_literals" (formula "7") (term "0"))
                                                (rule "concrete_or_2" (formula "7"))
                                                (rule "inEqSimp_subsumption1" (formula "61") (ifseqformula "7"))
                                                (rule "leq_literals" (formula "61") (term "0"))
                                                (rule "concrete_or_1" (formula "61"))
                                                (rule "true_left" (formula "61"))
                                                (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "44") (term "0,0"))
                                                (rule "mul_literals" (formula "44") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                                                (rule "add_literals" (formula "44") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "63"))
                                                (rule "mul_literals" (formula "7") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                (rule "mul_literals" (formula "7") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "21"))
                                                (rule "leq_literals" (formula "7") (term "0"))
                                                (rule "concrete_or_1" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                                                (rule "polySimp_mulAssoc" (formula "16") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                (rule "mul_literals" (formula "16") (term "0,1"))
                                                (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), quotient_0)") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "16") (term "0,0"))
                                                (rule "concrete_or_2" (formula "16") (term "0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "16") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "16") (term "0,0"))
                                                (rule "leq_literals" (formula "16") (term "0"))
                                                (rule "concrete_or_2" (formula "16"))
                                                (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=add(Z(0(#)), l_1)") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "add_zero_left" (formula "6") (term "1,1"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                (rule "neg_literal" (formula "6") (term "0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "6") (term "0,0"))
                                                (rule "concrete_or_2" (formula "6") (term "0"))
                                                (rule "add_zero_left" (formula "6") (term "1,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "6") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "6") (term "0,0"))
                                                (rule "qeq_literals" (formula "6") (term "0"))
                                                (rule "concrete_or_2" (formula "6"))
                                                (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "23") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                (rule "add_literals" (formula "23") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                (rule "mul_literals" (formula "23") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcdRightDiv=Z(3(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "23") (term "0,0"))
                                                (rule "concrete_or_2" (formula "23") (term "0"))
                                                (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,0"))
                                                (rule "leq_literals" (formula "23") (term "0"))
                                                (rule "concrete_or_2" (formula "23"))
                                                (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "23"))
                                                (rule "leq_literals" (formula "8") (term "0"))
                                                (rule "concrete_or_1" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                                                (rule "mul_literals" (formula "37") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "47"))
                                                (rule "times_zero_1" (formula "44") (term "0,0"))
                                                (rule "add_zero_left" (formula "44") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                (rule "mul_literals" (formula "44") (term "1"))
                                                (rule "inEqSimp_subsumption6" (formula "44") (ifseqformula "22"))
                                                (rule "greater_literals" (formula "44") (term "0,0"))
                                                (rule "concrete_and_1" (formula "44") (term "0"))
                                                (rule "mul_literals" (formula "44") (term "1,0"))
                                                (rule "leq_literals" (formula "44") (term "0"))
                                                (rule "concrete_or_1" (formula "44"))
                                                (rule "true_left" (formula "44"))
                                                (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "6"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq0" (formula "6"))
                                                (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                                (rule "add_literals" (formula "6") (term "1,0"))
                                                (rule "times_zero_1" (formula "6") (term "0"))
                                                (rule "qeq_literals" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "applyEq" (formula "78") (term "0,0,2,0,0,0") (ifseqformula "3"))
                                                (rule "replace_known_right" (formula "78") (term "0,0") (ifseqformula "72"))
                                                (rule "concrete_not_2" (formula "78") (term "0"))
                                                (rule "concrete_and_1" (formula "78"))
                                                (rule "notRight" (formula "78"))
                                                (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "5"))
                                                (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,0"))
                                                (rule "times_zero_1" (formula "5") (term "0"))
                                                (rule "leq_literals" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "applyEqRigid" (formula "59") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "1") (term "0,0,2,0") (ifseqformula "4"))
                                                (rule "close" (formula "71") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "boolean_not_equal_2" (formula "2") (term "0,0"))
                                          (rule "boolean_not_equal_2" (formula "2") (term "1,0"))
                                          (rule "concrete_or_2" (formula "2") (term "0"))
                                          (rule "concrete_not_2" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "expand_inInt" (formula "30"))
                                          (rule "expand_inInt" (formula "45"))
                                          (rule "expand_inInt" (formula "46"))
                                          (rule "expand_inShort" (formula "33"))
                                          (rule "expand_inInt" (formula "16"))
                                          (rule "expand_inInt" (formula "17"))
                                          (rule "replace_int_MAX" (formula "30") (term "1,0"))
                                          (rule "replace_int_MIN" (formula "30") (term "0,1"))
                                          (rule "replace_int_MIN" (formula "45") (term "0,1"))
                                          (rule "replace_int_MAX" (formula "45") (term "1,0"))
                                          (rule "replace_int_MAX" (formula "46") (term "1,0"))
                                          (rule "replace_int_MIN" (formula "46") (term "0,1"))
                                          (rule "replace_short_MAX" (formula "33") (term "1,0"))
                                          (rule "replace_short_MIN" (formula "33") (term "0,1"))
                                          (rule "replace_int_MAX" (formula "16") (term "1,0"))
                                          (rule "replace_int_MIN" (formula "16") (term "0,1"))
                                          (rule "replace_int_MAX" (formula "17") (term "1,0"))
                                          (rule "replace_int_MIN" (formula "17") (term "0,1"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "andLeft" (formula "46"))
                                          (rule "andLeft" (formula "48"))
                                          (rule "andLeft" (formula "34"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "allRight" (formula "63") (inst "sk=m_0"))
                                          (rule "impRight" (formula "63"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "13") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "49") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "22"))
                                          (rule "mul_literals" (formula "22") (term "1,0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "42"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "42") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "28") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "47"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "28") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "50") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "50") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "35"))
                                          (rule "inEqSimp_commuteLeq" (formula "52"))
                                          (rule "inEqSimp_commuteLeq" (formula "54"))
                                          (rule "inEqSimp_commuteLeq" (formula "39"))
                                          (rule "inEqSimp_commuteLeq" (formula "19"))
                                          (rule "inEqSimp_commuteLeq" (formula "21"))
                                          (rule "applyEq" (formula "59") (term "1") (ifseqformula "31"))
                                          (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "61") (term "0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "63") (term "1,0,0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "37") (term "0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "28") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "48") (term "1,0,1,1,0,1") (ifseqformula "30"))
                                          (rule "applyEq" (formula "28") (term "1,0,1,0,1,0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "11") (term "0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "41") (term "0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "39") (term "0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "49") (term "1,0,1,1,0,0,1") (ifseqformula "30"))
                                          (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "13") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "13") (term "1,0,1,0,1,0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "38") (term "0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "28") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "12") (term "0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "46") (term "0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "54") (term "0,1,0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "49") (term "1,0,1,1,0,1,1") (ifseqformula "30"))
                                          (rule "applyEq" (formula "14") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "14") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "28") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "49") (term "0,1,0,0,0,0,0,0,1") (ifseqformula "26"))
                                          (rule "applyEq" (formula "28") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "28") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
                                          (rule "jmod_axiom" (formula "47") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0"))
                                          (rule "jmod_axiom" (formula "36") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "47"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "36"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "mul_literals" (formula "3") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "48") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                          (rule "mul_literals" (formula "22") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "48") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "49") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "49") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "54") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "39") (term "0"))
                                          (rule "concrete_or_1" (formula "39"))
                                          (rule "true_left" (formula "39"))
                                          (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "44"))
                                          (rule "leq_literals" (formula "50") (term "0"))
                                          (rule "concrete_or_1" (formula "50"))
                                          (rule "true_left" (formula "50"))
                                          (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "38") (term "0"))
                                          (rule "concrete_or_1" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "40"))
                                          (rule "leq_literals" (formula "34") (term "0"))
                                          (rule "concrete_or_1" (formula "34"))
                                          (rule "true_left" (formula "34"))
                                          (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "36"))
                                          (rule "leq_literals" (formula "12") (term "0"))
                                          (rule "concrete_or_1" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "21"))
                                          (rule "leq_literals" (formula "19") (term "0"))
                                          (rule "concrete_or_1" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "elimGcdGeq" (formula "44") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "44") (term "0,0,0,1,0,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,1,0,0,1,1"))
                                          (rule "sub_literals" (formula "44") (term "0,0,0,0,0,0,0,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "44") (term "0,0,0,1,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,0,1,0,0,1,1"))
                                          (rule "add_zero_left" (formula "44") (term "0,0,1,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "44") (term "0,0,0,0,0,1,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "44") (term "0,1,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "44") (term "1,0,1,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "44") (term "0,1,0,1,0,0,1,1"))
                                          (rule "leq_literals" (formula "44") (term "1,0,1,0,0,1,1"))
                                          (rule "concrete_and_3" (formula "44") (term "0,1,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "44") (term "1,1,0,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "44") (term "0,0,1,0,0,1,1"))
                                          (rule "qeq_literals" (formula "44") (term "0,1,0,0,1,1"))
                                          (rule "ifthenelse_true_for" (formula "44") (term "1,0,0,1,1"))
                                          (rule "elimGcdGeq" (formula "26") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "26") (term "0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "26") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "26") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "26") (term "1,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "concrete_and_3" (formula "26") (term "0,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "26") (term "0,1,1,0,0,0,0,1,1,0"))
                                          (rule "ifthenelse_true_for" (formula "26") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "elimGcdGeq" (formula "26") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "sub_literals" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addLiterals" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "26") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "concrete_and_1" (formula "26") (term "0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "26") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "26") (term "0,0,0,0,0,0,0,1,1,0"))
                                          (rule "ifthenelse_true_for" (formula "26") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0,1,0"))
                                          (rule "leq_literals" (formula "1") (term "0,0"))
                                          (rule "concrete_or_2" (formula "1") (term "0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "leq_literals" (formula "1") (term "0"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "elimGcdLeq" (formula "26") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "26") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "26") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "concrete_and_3" (formula "26") (term "0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "26") (term "0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "26") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "26") (term "0,0,1,0,0,1,1,0"))
                                          (rule "ifthenelse_true_for" (formula "26") (term "0,1,0,0,1,1,0"))
                                          (rule "elimGcdLeq" (formula "26") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "sub_literals" (formula "26") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "26") (term "1,0,1,1,0,0,0,1,1,0"))
                                          (rule "concrete_and_3" (formula "26") (term "0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "26") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "26") (term "0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "0,0,1,1,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "26") (term "0,1,1,0,0,0,1,1,0"))
                                          (rule "ifthenelse_true_for" (formula "26") (term "1,1,0,0,0,1,1,0"))
                                          (rule "newSym_eq" (formula "33") (inst "l=l_0") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                          (rule "times_zero_1" (formula "33") (term "1,1"))
                                          (rule "add_zero_right" (formula "33") (term "1"))
                                          (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "33"))
                                          (rule "eqSymm" (formula "34"))
                                          (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "34"))
                                          (rule "inEqSimp_homoInEq1" (formula "45") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                          (rule "applyEq" (formula "44") (term "1,1,0,0,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "38") (term "0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "34"))
                                          (rule "inEqSimp_homoInEq0" (formula "44") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "44") (term "0,0"))
                                          (rule "applyEq" (formula "31") (term "0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "45") (term "1,1,0,0,0,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "32") (term "1") (ifseqformula "34"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0"))
                                          (rule "elimGcdLeq_antec" (formula "31") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "neg_literal" (formula "31") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "31") (term "0,0"))
                                          (rule "concrete_or_2" (formula "31") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "31") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                          (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0"))
                                          (rule "qeq_literals" (formula "31") (term "0"))
                                          (rule "concrete_or_2" (formula "31"))
                                          (rule "elimGcdGeq_antec" (formula "38") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "38") (term "0,0"))
                                          (rule "concrete_or_2" (formula "38") (term "0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                                          (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0"))
                                          (rule "leq_literals" (formula "38") (term "0"))
                                          (rule "concrete_or_2" (formula "38"))
                                          (rule "elimGcdGeq" (formula "45") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "45") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "sub_literals" (formula "45") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,1,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,1,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,1,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "45") (term "0,1,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,0,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "45") (term "0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "0,0,1,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "45") (term "0,1,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "45") (term "1,0,1,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "45") (term "0,1,0,1,0,0,0,1"))
                                          (rule "leq_literals" (formula "45") (term "1,0,1,0,0,0,1"))
                                          (rule "concrete_and_3" (formula "45") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "45") (term "0,0,1,0,0,0,1"))
                                          (rule "qeq_literals" (formula "45") (term "0,1,0,0,0,1"))
                                          (rule "ifthenelse_true_for" (formula "45") (term "1,0,0,0,1"))
                                          (rule "elimGcdGeq" (formula "44") (term "1,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                          (rule "sub_literals" (formula "44") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "44") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,1,0,1,0,0,1"))
                                          (rule "add_literals" (formula "44") (term "1,1,0,1,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,1,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "44") (term "0,1,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "44") (term "1,1,0,0,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,0,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "44") (term "0,0,0,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "0,0,1,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "44") (term "0,1,0,1,0,0,1"))
                                          (rule "add_literals" (formula "44") (term "1,0,1,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "44") (term "0,1,0,1,0,0,1"))
                                          (rule "leq_literals" (formula "44") (term "1,0,1,0,0,1"))
                                          (rule "concrete_and_3" (formula "44") (term "0,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "44") (term "1,1,0,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "44") (term "0,0,1,0,0,1"))
                                          (rule "qeq_literals" (formula "44") (term "0,1,0,0,1"))
                                          (rule "ifthenelse_true_for" (formula "44") (term "1,0,0,1"))
                                          (rule "newSym_eq" (formula "43") (inst "l=l_1") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                          (rule "times_zero_1" (formula "43") (term "1,1"))
                                          (rule "add_zero_right" (formula "43") (term "1"))
                                          (rule "applyEqRigid" (formula "44") (term "0,0") (ifseqformula "43"))
                                          (rule "eqSymm" (formula "44"))
                                          (rule "applyEq" (formula "50") (term "0,0,1") (ifseqformula "44"))
                                          (rule "applyEq" (formula "41") (term "0") (ifseqformula "44"))
                                          (rule "applyEqRigid" (formula "54") (term "0,2,0") (ifseqformula "44"))
                                          (rule "applyEqRigid" (formula "45") (term "0,0") (ifseqformula "44"))
                                          (rule "inEqSimp_homoInEq1" (formula "45") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                          (rule "applyEqRigid" (formula "43") (term "0,0") (ifseqformula "44"))
                                          (rule "applyEqRigid" (formula "46") (term "1,1,0,0,0,1,1") (ifseqformula "44"))
                                          (rule "applyEq" (formula "51") (term "0,1,0") (ifseqformula "44"))
                                          (rule "applyEqRigid" (formula "46") (term "0,0") (ifseqformula "44"))
                                          (rule "inEqSimp_homoInEq0" (formula "46") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                          (rule "applyEq" (formula "53") (term "0,2,0") (ifseqformula "44"))
                                          (rule "applyEqRigid" (formula "42") (term "1,1") (ifseqformula "44"))
                                          (rule "applyEq" (formula "50") (term "0,1,1,0") (ifseqformula "44"))
                                          (rule "applyEqRigid" (formula "45") (term "1,1,0,0,0,1") (ifseqformula "44"))
                                          (rule "applyEq" (formula "47") (term "0") (ifseqformula "44"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0"))
                                          (rule "elimGcdLeq_antec" (formula "47") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
                                          (rule "neg_literal" (formula "47") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "47") (term "0,0"))
                                          (rule "concrete_or_2" (formula "47") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "47") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "47") (term "0,0"))
                                          (rule "qeq_literals" (formula "47") (term "0"))
                                          (rule "concrete_or_2" (formula "47"))
                                          (rule "elimGcdGeq_antec" (formula "41") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "41") (term "0,0"))
                                          (rule "concrete_or_2" (formula "41") (term "0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                          (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0"))
                                          (rule "leq_literals" (formula "41") (term "0"))
                                          (rule "concrete_or_2" (formula "41"))
                                          (rule "elimGcdLeq" (formula "46") (term "0,0,0,1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "46") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                                          (rule "sub_literals" (formula "46") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,1,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,1,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "46") (term "0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,0,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "46") (term "0,0,1,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "46") (term "0,0,0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,1,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "46") (term "0,1,0,0,0,0,1,1"))
                                          (rule "qeq_literals" (formula "46") (term "1,0,0,0,0,1,1"))
                                          (rule "concrete_and_3" (formula "46") (term "0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,0,0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "46") (term "0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "46") (term "0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "46") (term "1,0,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "46") (term "0,0,0,0,0,1,1"))
                                          (rule "leq_literals" (formula "46") (term "0,0,0,0,1,1"))
                                          (rule "ifthenelse_true_for" (formula "46") (term "0,0,0,1,1"))
                                          (rule "elimGcdLeq" (formula "45") (term "0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                          (rule "sub_literals" (formula "45") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "45") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,0,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "45") (term "0,0,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,1,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,1,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "45") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "45") (term "0,0,1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "45") (term "0,0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0,0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,1,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "45") (term "0,1,0,0,0,0,1"))
                                          (rule "qeq_literals" (formula "45") (term "1,0,0,0,0,1"))
                                          (rule "concrete_and_3" (formula "45") (term "0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "45") (term "0,0,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "45") (term "0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "45") (term "1,0,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "45") (term "0,0,0,0,0,1"))
                                          (rule "leq_literals" (formula "45") (term "0,0,0,0,1"))
                                          (rule "ifthenelse_true_for" (formula "45") (term "0,0,0,1"))
                                          (rule "elimGcdGeq" (formula "46") (term "0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "sub_literals" (formula "46") (term "0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "46") (term "0,0,0,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "46") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "0,0,1,0,0"))
                                          (rule "mul_literals" (formula "46") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "46") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,1,0,0"))
                                          (rule "add_literals" (formula "46") (term "0,1,0,0"))
                                          (rule "leq_literals" (formula "46") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "46") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "46") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "46") (term "0,0,0"))
                                          (rule "add_literals" (formula "46") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "46") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "46") (term "0,0"))
                                          (rule "ifthenelse_true_for" (formula "46") (term "0"))
                                          (rule "elimGcdLeq" (formula "45") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "sub_literals" (formula "45") (term "0,0,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "45") (term "0,0,0,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "45") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "45") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "0,0,1,0,0"))
                                          (rule "mul_literals" (formula "45") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,1,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,1,0,0"))
                                          (rule "qeq_literals" (formula "45") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "45") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "45") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "45") (term "0,0,0"))
                                          (rule "add_literals" (formula "45") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "45") (term "0,0,0"))
                                          (rule "leq_literals" (formula "45") (term "0,0"))
                                          (rule "ifthenelse_true_for" (formula "45") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "35"))
                                          (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "49"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=m_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "2") (term "0,0"))
                                          (rule "concrete_or_2" (formula "2") (term "0"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (rule "concrete_or_2" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=m_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "3") (term "0,0"))
                                          (rule "concrete_or_2" (formula "3") (term "0"))
                                          (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                          (rule "concrete_or_2" (formula "3"))
                                          (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "5"))
                                          (rule "mul_literals" (formula "52") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                          (rule "add_literals" (formula "52") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                          (rule "mul_literals" (formula "52") (term "1"))
                                          (rule "inEqSimp_subsumption6" (formula "52") (ifseqformula "41"))
                                          (rule "times_zero_1" (formula "52") (term "1,1,0"))
                                          (rule "greater_literals" (formula "52") (term "0,0"))
                                          (rule "concrete_and_1" (formula "52") (term "0"))
                                          (rule "leq_literals" (formula "52") (term "0"))
                                          (rule "concrete_or_1" (formula "52"))
                                          (rule "true_left" (formula "52"))
                                          (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "38"))
                                          (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0"))
                                          (rule "add_literals" (formula "40") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "40") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "neg_literal" (formula "40") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "40") (term "0,0"))
                                          (rule "concrete_or_2" (formula "40") (term "0"))
                                          (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                          (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "40") (term "0,0"))
                                          (rule "qeq_literals" (formula "40") (term "0"))
                                          (rule "concrete_or_2" (formula "40"))
                                          (rule "inEqSimp_subsumption0" (formula "34") (ifseqformula "40"))
                                          (rule "leq_literals" (formula "34") (term "0"))
                                          (rule "concrete_or_1" (formula "34"))
                                          (rule "true_left" (formula "34"))
                                          (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "37"))
                                          (rule "polySimp_rightDist" (formula "45") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                                          (rule "mul_literals" (formula "45") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0"))
                                          (rule "add_literals" (formula "45") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "45") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0"))
                                          (rule "neg_literal" (formula "45") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "45") (term "0,0"))
                                          (rule "concrete_or_2" (formula "45") (term "0"))
                                          (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "45") (term "0,0"))
                                          (rule "qeq_literals" (formula "45") (term "0"))
                                          (rule "concrete_or_2" (formula "45"))
                                          (rule "inEqSimp_subsumption0" (formula "51") (ifseqformula "45"))
                                          (rule "leq_literals" (formula "51") (term "0"))
                                          (rule "concrete_or_1" (formula "51"))
                                          (rule "true_left" (formula "51"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "42") (term "0"))
                                          (rule "concrete_or_1" (formula "42"))
                                          (rule "true_left" (formula "42"))
                                          (rule "nnf_imp2or" (formula "24") (term "1,0"))
                                          (rule "nnf_imp2or" (formula "16") (term "1,0,1,0"))
                                          (rule "nnf_imp2or" (formula "15") (term "0,1,1,0"))
                                          (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "33"))
                                          (rule "notLeft" (formula "33"))
                                          (rule "commute_and" (formula "61"))
                                          (rule "nnf_imp2or" (formula "30") (term "0"))
                                          (rule "commute_and" (formula "16") (term "0,0"))
                                          (rule "nnf_imp2or" (formula "49") (term "0,0,1"))
                                          (rule "expand_addJint" (formula "52") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "52") (term "0,0,1"))
                                          (rule "expand_addJint" (formula "53") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "53") (term "0,1,0"))
                                          (rule "commute_and" (formula "24") (term "0,0"))
                                          (rule "commute_and" (formula "15") (term "0,0"))
                                          (rule "expand_addJint" (formula "52") (term "1,1,0"))
                                          (rule "polySimp_addComm0" (formula "52") (term "0,1,1,0"))
                                          (rule "jdiv_axiom" (formula "13") (term "1,0"))
                                          (rule "eqSymm" (formula "13"))
                                          (rule "inEqSimp_subsumption1" (formula "13") (term "0,0") (ifseqformula "15"))
                                          (rule "leq_literals" (formula "13") (term "0,0,0"))
                                          (rule "concrete_or_1" (formula "13") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "13") (term "0"))
                                          (rule "eqSymm" (formula "13"))
                                          (rule "applyEqRigid" (formula "14") (term "1,0") (ifseqformula "13"))
                                          (rule "applyEqRigid" (formula "17") (term "1,1,1,0,0") (ifseqformula "13"))
                                          (rule "applyEqRigid" (formula "25") (term "1,1,1,0,0") (ifseqformula "13"))
                                          (rule "applyEqRigid" (formula "16") (term "1,1,1,0,0") (ifseqformula "13"))
                                          (rule "applyEqRigid" (formula "31") (term "1,1,0,0,0,0") (ifseqformula "13"))
                                          (rule "applyEqRigid" (formula "17") (term "1,1,0,0,0,1,0") (ifseqformula "13"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "13"))
                                          (rule "nnf_imp2or" (formula "50") (term "0,1,1"))
                                          (rule "nnf_imp2or" (formula "49") (term "0,1"))
                                          (rule "expand_moduloInteger" (formula "53") (term "0,1"))
                                          (rule "replace_int_MIN" (formula "53") (term "0,0,1"))
                                          (rule "replace_int_RANGE" (formula "53") (term "1,1,0,1"))
                                          (rule "replace_int_HALFRANGE" (formula "53") (term "0,0,1,0,1"))
                                          (rule "polySimp_homoEq" (formula "53") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,0,1"))
                                          (rule "mul_literals" (formula "53") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,1,0,1"))
                                          (rule "add_literals" (formula "53") (term "0,0,0,1,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "53") (term "0,0,1"))
                                          (rule "mod_axiom" (formula "53") (term "0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "0,1,0,1"))
                                          (rule "mul_literals" (formula "53") (term "0,0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "53") (term "0,0,0,0,1"))
                                          (rule "polySimp_sepPosMonomial" (formula "53") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,1"))
                                          (rule "mul_literals" (formula "53") (term "0,0,1,1"))
                                          (rule "polyDiv_pullOut" (formula "53") (term "0,1,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "equal_literals" (formula "53") (term "0,0,1,1,1"))
                                          (rule "ifthenelse_false" (formula "53") (term "0,1,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0,1,1,1"))
                                          (rule "mul_literals" (formula "53") (term "1,0,0,0,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,1,1"))
                                          (rule "polySimp_addComm0" (formula "53") (term "1,1,1,1"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,1,1,1,1,1"))
                                          (rule "add_literals" (formula "53") (term "0,0,1,1,1,1,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,1,1"))
                                          (rule "mul_literals" (formula "53") (term "0,1,1,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "1,1"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,1,1"))
                                          (rule "add_literals" (formula "53") (term "0,0,1,1"))
                                          (rule "expand_moduloInteger" (formula "54") (term "1,0"))
                                          (rule "replace_int_MIN" (formula "54") (term "0,1,0"))
                                          (rule "replace_int_RANGE" (formula "54") (term "1,1,1,0"))
                                          (rule "replace_int_HALFRANGE" (formula "54") (term "0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "0,1,1,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,1,1,0"))
                                          (rule "mod_axiom" (formula "54") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "1,0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "0,1,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,1,0"))
                                          (rule "polyDiv_pullOut" (formula "54") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,2,0,1,1,0"))
                                          (rule "equal_literals" (formula "54") (term "0,0,1,1,0"))
                                          (rule "ifthenelse_false" (formula "54") (term "0,1,1,0"))
                                          (rule "mul_literals" (formula "54") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,1,0"))
                                          (rule "polySimp_addComm1" (formula "54") (term "0,0,1,1,1,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,0,1,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "54") (term "1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1,1,0"))
                                          (rule "mul_literals" (formula "54") (term "0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "54") (term "0,1,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,1,0"))
                                          (rule "expand_moduloInteger" (formula "53") (term "1,1,0"))
                                          (rule "replace_int_MIN" (formula "53") (term "0,1,1,0"))
                                          (rule "replace_int_RANGE" (formula "53") (term "1,1,1,1,0"))
                                          (rule "replace_int_HALFRANGE" (formula "53") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,1,1,1,0"))
                                          (rule "add_literals" (formula "53") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "1,0"))
                                          (rule "add_literals" (formula "53") (term "0,1,0"))
                                          (rule "mod_axiom" (formula "53") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "1,0"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,1,0"))
                                          (rule "add_literals" (formula "53") (term "0,0,1,0"))
                                          (rule "polyDiv_pullOut" (formula "53") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,2,0,1,1,0"))
                                          (rule "equal_literals" (formula "53") (term "0,0,1,1,0"))
                                          (rule "ifthenelse_false" (formula "53") (term "0,1,1,0"))
                                          (rule "mul_literals" (formula "53") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,1,0"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,0,1,1,1,0"))
                                          (rule "add_literals" (formula "53") (term "0,0,0,1,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "53") (term "1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,1,0"))
                                          (rule "mul_literals" (formula "53") (term "0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,1,0"))
                                          (rule "add_literals" (formula "53") (term "0,0,1,0"))
                                          (rule "nnf_imp2or" (formula "16") (term "1,0"))
                                          (rule "nnf_imp2or" (formula "31") (term "1,0"))
                                          (rule "nnf_imp2or" (formula "25") (term "0"))
                                          (rule "nnf_imp2or" (formula "17") (term "0"))
                                          (rule "nnf_notAnd" (formula "50") (term "0,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "50") (term "0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "50") (term "0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0,0,1"))
                                          (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                          (rule "mul_literals" (formula "31") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "31") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0"))
                                          (rule "jdiv_axiom" (formula "36") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "0,0,2,1"))
                                          (rule "eqSymm" (formula "36"))
                                          (rule "applyEqRigid" (formula "36") (term "1") (ifseqformula "37"))
                                          (rule "inEqSimp_subsumption6" (formula "36") (term "0,0") (ifseqformula "1"))
                                          (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                                          (rule "greater_literals" (formula "36") (term "0,0,0,0"))
                                          (rule "concrete_and_1" (formula "36") (term "0,0,0"))
                                          (rule "leq_literals" (formula "36") (term "0,0,0"))
                                          (rule "concrete_or_1" (formula "36") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "36") (term "0"))
                                          (rule "polyDiv_pullOut" (formula "36") (term "0") (inst "polyDivCoeff=l_0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,2,0"))
                                          (rule "equal_literals" (formula "36") (term "0,0"))
                                          (rule "ifthenelse_false" (formula "36") (term "0"))
                                          (rule "polySimp_homoEq" (formula "36"))
                                          (rule "polySimp_pullOutFactor0" (formula "36") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "36") (term "1,0,0,0,1,0"))
                                          (rule "times_zero_1" (formula "36") (term "0,0,0,1,0"))
                                          (rule "div_literals" (formula "36") (term "0,0,1,0"))
                                          (rule "add_zero_left" (formula "36") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "36") (term "0"))
                                          (rule "add_literals" (formula "36") (term "1,0"))
                                          (rule "times_zero_1" (formula "36") (term "0"))
                                          (rule "eqClose" (formula "36"))
                                          (rule "true_left" (formula "36"))
                                          (rule "nnf_notAnd" (formula "49") (term "0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1"))
                                          (rule "mul_literals" (formula "49") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "49") (term "0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "49") (term "0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0,1"))
                                          (rule "nnf_notAnd" (formula "50") (term "0,0,1,1"))
                                          (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "50") (term "1,0,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "50") (term "0,0,1,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,1,1"))
                                          (rule "mul_literals" (formula "50") (term "1,1,0,0,1,1"))
                                          (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "50") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "50") (term "0,0,0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0,1,1"))
                                          (rule "nnf_imp2or" (formula "16") (term "0"))
                                          (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                          (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                          (rule "jdiv_axiom" (formula "47") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "0,0,2,1"))
                                          (rule "eqSymm" (formula "47"))
                                          (rule "applyEqRigid" (formula "47") (term "1") (ifseqformula "48"))
                                          (rule "inEqSimp_subsumption6" (formula "47") (term "0,0") (ifseqformula "44"))
                                          (rule "greater_literals" (formula "47") (term "0,0,0,0"))
                                          (rule "concrete_and_1" (formula "47") (term "0,0,0"))
                                          (rule "mul_literals" (formula "47") (term "1,0,0,0"))
                                          (rule "leq_literals" (formula "47") (term "0,0,0"))
                                          (rule "concrete_or_1" (formula "47") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "47") (term "0"))
                                          (rule "polyDiv_pullOut" (formula "47") (term "0") (inst "polyDivCoeff=l_1"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,2,0"))
                                          (rule "equal_literals" (formula "47") (term "0,0"))
                                          (rule "ifthenelse_false" (formula "47") (term "0"))
                                          (rule "polySimp_pullOutFactor0" (formula "47") (term "0,0,0"))
                                          (rule "add_literals" (formula "47") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "47") (term "0,0,0"))
                                          (rule "div_literals" (formula "47") (term "0,0"))
                                          (rule "add_zero_left" (formula "47") (term "0"))
                                          (rule "eqClose" (formula "47"))
                                          (rule "true_left" (formula "47"))
                                          (rule "nnf_notAnd" (formula "31") (term "0,1,0"))
                                          (rule "double_not" (formula "31") (term "0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "31") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "31") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,0"))
                                          (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
                                          (rule "nnf_imp2or" (formula "31") (term "0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "32") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "10"))
                                          (rule "insert_constant_value" (formula "32") (term "1,1,0,0,0,0,0,0,0"))
                                          (rule "insert_constant_value" (formula "32") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "insert_constant_value" (formula "32") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "insert_constant_value" (formula "32") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "eqClose" (formula "32") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "concrete_and_3" (formula "32") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "insert_constant_value" (formula "32") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "eqClose" (formula "32") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "concrete_and_3" (formula "32") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "insert_constant_value" (formula "32") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "eqClose" (formula "32") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "concrete_and_3" (formula "32") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "expand_inInt" (formula "32") (term "1,1"))
                                          (rule "expand_inInt" (formula "32") (term "0,1"))
                                          (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "replace_int_MAX" (formula "32") (term "1,0,1,1"))
                                          (rule "replace_int_MIN" (formula "32") (term "0,1,1,1"))
                                          (rule "replace_int_MIN" (formula "32") (term "0,1,0,1"))
                                          (rule "replace_int_MAX" (formula "32") (term "1,0,0,1"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "33"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "34"))
                                          (rule "andLeft" (formula "33"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "exLeft" (formula "39") (inst "sk=i_1_2"))
                                          (rule "andLeft" (formula "39"))
                                          (rule "andLeft" (formula "39"))
                                          (rule "exLeft" (formula "38") (inst "sk=i_2_0"))
                                          (rule "andLeft" (formula "38"))
                                          (rule "andLeft" (formula "38"))
                                          (rule "eqSymm" (formula "37"))
                                          (rule "eqSymm" (formula "35") (term "1,0,1,0,1,0"))
                                          (rule "eqSymm" (formula "35") (term "1,1,0,1,0"))
                                          (rule "eqSymm" (formula "40"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "0,2,0,1,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "0,2,0,0,1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "0,2,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "0,2,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "0,2,0,1,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "0,2,0,0,1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "0,2,0,0,0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "0,2,0,0,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "0,2,1,1,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "0,2,0,1,0,1,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "34") (term "0,2,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "36"))
                                          (rule "mul_literals" (formula "36") (term "1,0,0"))
                                          (rule "add_literals" (formula "36") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "42"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "42") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "ifthenelse_negated" (formula "37") (term "2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "45") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "45") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "44") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "44") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "48"))
                                          (rule "inEqSimp_commuteLeq" (formula "46"))
                                          (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "33"))
                                          (rule "inEqSimp_commuteLeq" (formula "32"))
                                          (rule "inEqSimp_commuteLeq" (formula "41"))
                                          (rule "inEqSimp_commuteLeq" (formula "38"))
                                          (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "45") (term "0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,1,1,0"))
                                          (rule "applyEq" (formula "44") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "44") (term "1,0,1,0,1,0,1,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "39") (term "0,1,0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "33") (term "0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "45") (term "1,0,1,0,1,0,1,0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "29") (term "0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "42") (term "0,0,1,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "45") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "35") (term "0,0,1,0,0,1,0,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "45") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "44") (term "0,0,1,0,0,1,0,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "35") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "45") (term "0,0,1,0,0,1,0,0") (ifseqformula "40"))
                                          (rule "applyEqRigid" (formula "44") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "43") (term "1,0,1,0,1,0,1,0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "29"))
                                          (rule "applyEqRigid" (formula "39") (term "1") (ifseqformula "29"))
                                          (rule "applyEqRigid" (formula "41") (term "0,0,1,0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "44") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "29"))
                                          (rule "applyEqRigid" (formula "36") (term "1,0") (ifseqformula "13"))
                                          (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "13"))
                                          (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "43") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "29"))
                                          (rule "applyEqRigid" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "42") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
                                          (rule "applyEqRigid" (formula "33") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                          (rule "applyEqRigid" (formula "34") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "13"))
                                          (rule "applyEq" (formula "43") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                          (rule "applyEq" (formula "34") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                          (rule "applyEqRigid" (formula "42") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                                          (rule "mul_literals" (formula "35") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "42") (term "0,1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "42") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "39"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "41") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "49"))
                                          (rule "leq_literals" (formula "32") (term "0"))
                                          (rule "concrete_or_1" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "inEqSimp_subsumption0" (formula "42") (ifseqformula "24"))
                                          (rule "leq_literals" (formula "42") (term "0"))
                                          (rule "concrete_or_1" (formula "42"))
                                          (rule "true_left" (formula "42"))
                                          (rule "elimGcdLeq" (formula "41") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "41") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "41") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "41") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "41") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,1,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "41") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "41") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "41") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0,1,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "41") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "41") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "41") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "41") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,1,0,1,1,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "41") (term "1,0,1,1,0,0,1,1,0"))
                                          (rule "concrete_and_3" (formula "41") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "41") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "41") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "41") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "41") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "41") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "41") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "41") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "41") (term "0,1,1,0,0,1,1,0"))
                                          (rule "ifthenelse_true_for" (formula "41") (term "1,1,0,0,1,1,0"))
                                          (rule "elimGcdGeq" (formula "41") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "41") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "41") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "41") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "41") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "41") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "41") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "concrete_and_3" (formula "41") (term "0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "41") (term "1,1,0,0,0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "41") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "41") (term "0,0,1,0,0,1,1,0"))
                                          (rule "ifthenelse_true_for" (formula "41") (term "0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "47"))
                                          (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "35") (term "0"))
                                          (rule "add_literals" (formula "35") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                          (rule "polySimp_elimOne" (formula "35") (term "0"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,1,0"))
                                          (rule "double_not" (formula "16") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "16") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "16") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,1,0,1,0"))
                                          (rule "double_not" (formula "17") (term "0,0,1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "31") (term "0,0,1,1,0"))
                                          (rule "nnf_imp2or" (formula "32") (term "1,0"))
                                          (rule "nnf_imp2or" (formula "33") (term "1,0,1,0"))
                                          (rule "cut_direct" (formula "60") (term "0"))
                                          (branch "CUT: l_0 >= 1 + l_1 TRUE"
                                             (rule "concrete_impl_1" (formula "61"))
                                             (rule "andLeft" (formula "61"))
                                             (rule "inEqSimp_contradInEq1" (formula "59") (term "0") (ifseqformula "60"))
                                             (rule "inEqSimp_homoInEq1" (formula "59") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "59") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "59") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "59") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,0"))
                                             (rule "add_literals" (formula "59") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "59") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "59") (term "0,0,0"))
                                             (rule "leq_literals" (formula "59") (term "0,0"))
                                             (rule "concrete_and_2" (formula "59") (term "0"))
                                             (rule "concrete_impl_2" (formula "59"))
                                             (rule "true_left" (formula "59"))
                                             (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "50"))
                                             (rule "polySimp_rightDist" (formula "59") (term "0,0"))
                                             (rule "mul_literals" (formula "59") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "59") (term "0"))
                                             (rule "add_literals" (formula "59") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "59"))
                                             (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                             (rule "polySimp_elimOne" (formula "59") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "55") (ifseqformula "59"))
                                             (rule "leq_literals" (formula "55") (term "0"))
                                             (rule "concrete_or_1" (formula "55"))
                                             (rule "true_left" (formula "55"))
                                             (rule "commute_or" (formula "31") (term "0,0"))
                                             (rule "nnf_imp2or" (formula "41") (term "1,0"))
                                             (rule "commute_or_2" (formula "25") (term "0"))
                                             (rule "div_axiom" (formula "13") (term "1") (inst "quotient=quotient_0"))
                                             (rule "qeq_literals" (formula "13") (term "0,1,1"))
                                             (rule "ifthenelse_true_for" (formula "13") (term "1,1"))
                                             (rule "equal_literals" (formula "13") (term "0"))
                                             (rule "concrete_or_2" (formula "13"))
                                             (rule "mul_literals" (formula "13") (term "1,1,1"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "polySimp_addComm1" (formula "15") (term "1"))
                                             (rule "add_literals" (formula "15") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "14"))
                                             (rule "inEqSimp_homoInEq1" (formula "15"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "15") (term "0"))
                                             (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "13"))
                                             (rule "inEqSimp_homoInEq1" (formula "22"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0"))
                                             (rule "applyEq" (formula "35") (term "1,1,1,0,0") (ifseqformula "13"))
                                             (rule "applyEq" (formula "34") (term "1,1,0,0") (ifseqformula "13"))
                                             (rule "applyEq" (formula "36") (term "1,1,1,0,0") (ifseqformula "13"))
                                             (rule "applyEq" (formula "44") (term "1,1,1,0,0") (ifseqformula "13"))
                                             (rule "applyEqRigid" (formula "20") (term "1,1,0,0") (ifseqformula "13"))
                                             (rule "applyEqRigid" (formula "36") (term "1,1,1,0,0,1,0") (ifseqformula "13"))
                                             (rule "applyEqRigid" (formula "20") (term "1,0,0,0,1,0") (ifseqformula "13"))
                                             (rule "applyEqRigid" (formula "19") (term "1,1,0,0") (ifseqformula "13"))
                                             (rule "applyEqRigid" (formula "28") (term "1,1,0") (ifseqformula "13"))
                                             (rule "applyEq" (formula "42") (term "0") (ifseqformula "13"))
                                             (rule "inEqSimp_homoInEq1" (formula "42"))
                                             (rule "polySimp_addComm1" (formula "42") (term "0"))
                                             (rule "applyEqRigid" (formula "45") (term "1,1,1,0,0") (ifseqformula "13"))
                                             (rule "applyEqRigid" (formula "17") (term "1,0") (ifseqformula "13"))
                                             (rule "applyEq" (formula "16") (term "1") (ifseqformula "13"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1"))
                                             (rule "mul_literals" (formula "15") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1"))
                                             (rule "mul_literals" (formula "22") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "42"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                             (rule "polySimp_rightDist" (formula "42") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                             (rule "mul_literals" (formula "42") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "15"))
                                             (rule "polySimp_rightDist" (formula "54") (term "0,0"))
                                             (rule "mul_literals" (formula "54") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "54") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                                             (rule "add_literals" (formula "54") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "54") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                             (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "54") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "54") (term "0,0"))
                                             (rule "concrete_or_2" (formula "54") (term "0"))
                                             (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
                                             (rule "neg_literal" (formula "54") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0"))
                                             (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "54") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0"))
                                             (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "54") (term "0,0"))
                                             (rule "qeq_literals" (formula "54") (term "0"))
                                             (rule "concrete_or_2" (formula "54"))
                                             (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "15"))
                                             (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "31") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "31") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "15"))
                                             (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                                             (rule "mul_literals" (formula "40") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "40") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                             (rule "add_literals" (formula "40") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "40") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "61") (ifseqformula "15"))
                                             (rule "polySimp_rightDist" (formula "61") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0"))
                                             (rule "mul_literals" (formula "61") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "61") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "61") (term "0,0"))
                                             (rule "add_literals" (formula "61") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "61") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "61"))
                                             (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "61") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "61") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "61") (term "0,0"))
                                             (rule "concrete_or_2" (formula "61") (term "0"))
                                             (rule "neg_literal" (formula "61") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "61") (term "0,0"))
                                             (rule "add_literals" (formula "61") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "61") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "61") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "61") (term "0,0"))
                                             (rule "add_literals" (formula "61") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "61") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "61") (term "0,0"))
                                             (rule "qeq_literals" (formula "61") (term "0"))
                                             (rule "concrete_or_2" (formula "61"))
                                             (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "15"))
                                             (rule "mul_literals" (formula "18") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                             (rule "add_literals" (formula "18") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                             (rule "mul_literals" (formula "18") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "leq_literals" (formula "18") (term "0,0"))
                                             (rule "concrete_or_2" (formula "18") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "18") (term "0,0"))
                                             (rule "leq_literals" (formula "18") (term "0"))
                                             (rule "concrete_or_2" (formula "18"))
                                             (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                                             (rule "times_zero_1" (formula "22") (term "0,0"))
                                             (rule "add_zero_left" (formula "22") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                             (rule "mul_literals" (formula "22") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "18"))
                                             (rule "leq_literals" (formula "22") (term "0"))
                                             (rule "concrete_or_1" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "54"))
                                             (rule "polySimp_mulAssoc" (formula "14") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "leq_literals" (formula "14") (term "0,0"))
                                             (rule "concrete_or_2" (formula "14") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                             (rule "neg_literal" (formula "14") (term "0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                             (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "14") (term "0,0"))
                                             (rule "qeq_literals" (formula "14") (term "0"))
                                             (rule "concrete_or_2" (formula "14"))
                                             (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "46"))
                                             (rule "times_zero_1" (formula "45") (term "0,0"))
                                             (rule "add_zero_left" (formula "45") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                             (rule "mul_literals" (formula "45") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "19"))
                                             (rule "leq_literals" (formula "45") (term "0"))
                                             (rule "concrete_or_1" (formula "45"))
                                             (rule "true_left" (formula "45"))
                                             (rule "inEqSimp_exactShadow3" (formula "68") (ifseqformula "58"))
                                             (rule "polySimp_rightDist" (formula "68") (term "0,0"))
                                             (rule "mul_literals" (formula "68") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "68") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "68"))
                                             (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                             (rule "polySimp_elimOne" (formula "68") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "63") (ifseqformula "68"))
                                             (rule "inEqSimp_homoInEq0" (formula "63") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "63") (term "1,0,0"))
                                             (rule "mul_literals" (formula "63") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "63") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0"))
                                             (rule "add_literals" (formula "63") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "63") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "63") (term "0,0"))
                                             (rule "qeq_literals" (formula "63") (term "0"))
                                             (rule "concrete_or_1" (formula "63"))
                                             (rule "true_left" (formula "63"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "58"))
                                             (rule "mul_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "20"))
                                             (rule "leq_literals" (formula "1") (term "0"))
                                             (rule "concrete_or_1" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "42"))
                                             (rule "mul_literals" (formula "40") (term "0,0"))
                                             (rule "add_zero_left" (formula "40") (term "0"))
                                             (rule "inEqSimp_subsumption6" (formula "40") (ifseqformula "19"))
                                             (rule "greater_literals" (formula "40") (term "0,0"))
                                             (rule "concrete_and_1" (formula "40") (term "0"))
                                             (rule "mul_literals" (formula "40") (term "1,0"))
                                             (rule "leq_literals" (formula "40") (term "0"))
                                             (rule "concrete_or_1" (formula "40"))
                                             (rule "true_left" (formula "40"))
                                             (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "33"))
                                             (rule "times_zero_1" (formula "31") (term "0,0"))
                                             (rule "add_zero_left" (formula "31") (term "0"))
                                             (rule "inEqSimp_subsumption6" (formula "31") (ifseqformula "19"))
                                             (rule "greater_literals" (formula "31") (term "0,0"))
                                             (rule "concrete_and_1" (formula "31") (term "0"))
                                             (rule "mul_literals" (formula "31") (term "1,0"))
                                             (rule "leq_literals" (formula "31") (term "0"))
                                             (rule "concrete_or_1" (formula "31"))
                                             (rule "true_left" (formula "31"))
                                             (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "67"))
                                             (rule "times_zero_1" (formula "62") (term "0,0"))
                                             (rule "add_zero_left" (formula "62") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "62"))
                                             (rule "mul_literals" (formula "62") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "62") (ifseqformula "19"))
                                             (rule "leq_literals" (formula "62") (term "0"))
                                             (rule "concrete_or_1" (formula "62"))
                                             (rule "true_left" (formula "62"))
                                             (rule "div_axiom" (formula "73") (term "0,1,1,1") (inst "quotient=quotient_1"))
                                             (rule "equal_literals" (formula "73") (term "0"))
                                             (rule "concrete_or_2" (formula "73"))
                                             (rule "mul_literals" (formula "73") (term "1,1,1,1"))
                                             (rule "qeq_literals" (formula "73") (term "0,1"))
                                             (rule "ifthenelse_true_for" (formula "73") (term "1"))
                                             (rule "andLeft" (formula "73"))
                                             (rule "andLeft" (formula "73"))
                                             (rule "polySimp_addAssoc" (formula "75") (term "0,1"))
                                             (rule "add_literals" (formula "75") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "75") (term "1"))
                                             (rule "add_literals" (formula "75") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "74"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "74") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "75"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "75") (term "0"))
                                             (rule "applyEqRigid" (formula "76") (term "0,1,1,0") (ifseqformula "73"))
                                             (rule "polySimp_addComm1" (formula "76") (term "1,0"))
                                             (rule "applyEq" (formula "77") (term "0,1,1,0") (ifseqformula "73"))
                                             (rule "polySimp_addComm1" (formula "77") (term "1,0"))
                                             (rule "applyEqRigid" (formula "76") (term "0,1,1,1") (ifseqformula "73"))
                                             (rule "polySimp_addComm1" (formula "76") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "74"))
                                             (rule "polySimp_mulComm0" (formula "74") (term "1"))
                                             (rule "polySimp_rightDist" (formula "74") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,1"))
                                             (rule "mul_literals" (formula "74") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "75"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1"))
                                             (rule "polySimp_rightDist" (formula "75") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,1"))
                                             (rule "mul_literals" (formula "75") (term "0,1"))
                                             (rule "elimGcdLeq_antec" (formula "75") (inst "elimGcdRightDiv=add(Z(0(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                             (rule "neg_literal" (formula "75") (term "0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "75") (term "0,0"))
                                             (rule "concrete_or_2" (formula "75") (term "0"))
                                             (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0"))
                                             (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "75") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "75") (term "0,0,0"))
                                             (rule "add_literals" (formula "75") (term "0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "75") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "75") (term "0,0,0"))
                                             (rule "add_literals" (formula "75") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0"))
                                             (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "75") (term "0,0"))
                                             (rule "qeq_literals" (formula "75") (term "0"))
                                             (rule "concrete_or_2" (formula "75"))
                                             (rule "elimGcdGeq_antec" (formula "74") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "74") (term "0,0"))
                                             (rule "concrete_or_2" (formula "74") (term "0"))
                                             (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                                             (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "74") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "74") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "74") (term "0,0,0"))
                                             (rule "add_literals" (formula "74") (term "0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "74") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "74") (term "0,0,0"))
                                             (rule "add_literals" (formula "74") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                                             (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "74") (term "0,0"))
                                             (rule "leq_literals" (formula "74") (term "0"))
                                             (rule "concrete_or_2" (formula "74"))
                                             (rule "inEqSimp_exactShadow3" (formula "74") (ifseqformula "66"))
                                             (rule "polySimp_rightDist" (formula "74") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0"))
                                             (rule "mul_literals" (formula "74") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "74") (term "0"))
                                             (rule "add_literals" (formula "74") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "74"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "74") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                             (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,1,0"))
                                             (rule "neg_literal" (formula "74") (term "0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "74") (term "0,0"))
                                             (rule "concrete_or_2" (formula "74") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0"))
                                             (rule "mul_literals" (formula "74") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "74") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "74") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                                             (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "74") (term "0,0"))
                                             (rule "qeq_literals" (formula "74") (term "0"))
                                             (rule "concrete_or_2" (formula "74"))
                                             (rule "inEqSimp_exactShadow3" (formula "75") (ifseqformula "67"))
                                             (rule "polySimp_rightDist" (formula "75") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0"))
                                             (rule "mul_literals" (formula "75") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "75") (term "0"))
                                             (rule "polySimp_addComm1" (formula "75") (term "0,0"))
                                             (rule "add_literals" (formula "75") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "75"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1"))
                                             (rule "polySimp_rightDist" (formula "75") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,1"))
                                             (rule "mul_literals" (formula "75") (term "0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "77"))
                                             (rule "times_zero_1" (formula "62") (term "0,0"))
                                             (rule "add_zero_left" (formula "62") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "62"))
                                             (rule "mul_literals" (formula "62") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "62") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "62") (term "0,0"))
                                             (rule "concrete_or_2" (formula "62") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "62") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "62") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "62") (term "0,0"))
                                             (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "62") (term "0,0"))
                                             (rule "leq_literals" (formula "62") (term "0"))
                                             (rule "concrete_or_2" (formula "62"))
                                             (rule "inEqSimp_antiSymm" (formula "62") (ifseqformula "75"))
                                             (rule "applyEqRigid" (formula "76") (term "0") (ifseqformula "62"))
                                             (rule "leq_literals" (formula "76"))
                                             (rule "true_left" (formula "76"))
                                             (rule "applyEq" (formula "78") (term "0,1,1") (ifseqformula "62"))
                                             (rule "mul_literals" (formula "78") (term "1,1"))
                                             (rule "add_literals" (formula "78") (term "1"))
                                             (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "62"))
                                             (rule "qeq_literals" (formula "63"))
                                             (rule "true_left" (formula "63"))
                                             (rule "applyEqRigid" (formula "75") (term "0,1,1") (ifseqformula "62"))
                                             (rule "mul_literals" (formula "75") (term "1,1"))
                                             (rule "add_literals" (formula "75") (term "1"))
                                             (rule "applyEqRigid" (formula "76") (term "0,1,1") (ifseqformula "62"))
                                             (rule "mul_literals" (formula "76") (term "1,1"))
                                             (rule "add_literals" (formula "76") (term "1"))
                                             (rule "applyEq" (formula "79") (term "0,1,0,1,0") (ifseqformula "62"))
                                             (rule "mul_literals" (formula "79") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "79") (term "0,1,0"))
                                             (rule "applyEqRigid" (formula "74") (term "1") (ifseqformula "62"))
                                             (rule "applyEqRigid" (formula "78") (term "0,1,0,1,0") (ifseqformula "62"))
                                             (rule "mul_literals" (formula "78") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "78") (term "0,1,0"))
                                             (rule "applyEq" (formula "78") (term "0,1,0,1,1") (ifseqformula "62"))
                                             (rule "mul_literals" (formula "78") (term "1,0,1,1"))
                                             (rule "add_literals" (formula "78") (term "0,1,1"))
                                             (rule "inEqSimp_subsumption0" (formula "77") (ifseqformula "67"))
                                             (rule "leq_literals" (formula "77") (term "0"))
                                             (rule "concrete_or_1" (formula "77"))
                                             (rule "true_left" (formula "77"))
                                             (rule "inEqSimp_subsumption1" (formula "75") (ifseqformula "19"))
                                             (rule "leq_literals" (formula "75") (term "0"))
                                             (rule "concrete_or_1" (formula "75"))
                                             (rule "true_left" (formula "75"))
                                             (rule "inEqSimp_subsumption1" (formula "75") (ifseqformula "63"))
                                             (rule "leq_literals" (formula "75") (term "0"))
                                             (rule "concrete_or_1" (formula "75"))
                                             (rule "true_left" (formula "75"))
                                             (rule "cut_direct" (formula "84") (term "0,0"))
                                             (branch "CUT: self.table[m_0 * 2] = null TRUE"
                                                (rule "concrete_not_1" (formula "85") (term "0"))
                                                (rule "concrete_and_2" (formula "85"))
                                                (rule "false_right" (formula "85"))
                                                (rule "nnf_imp2or" (formula "50") (term "1,0"))
                                                (rule "nnf_notAnd" (formula "40") (term "0,1,0,1,0"))
                                                (rule "double_not" (formula "40") (term "0,0,1,0,1,0"))
                                                (rule "nnf_notAnd" (formula "38") (term "0,0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "38") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "38") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "38") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,1,1,1,0,0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "39") (term "0"))
                                                (rule "nnf_notAnd" (formula "49") (term "0,1,0"))
                                                (rule "double_not" (formula "49") (term "0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "49") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "49") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,1,0"))
                                                (rule "nnf_imp2or" (formula "49") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "72") (term "0,0"))
                                                (rule "commute_or" (formula "71") (term "0,0"))
                                                (rule "commute_or_2" (formula "22") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "31") (term "0,0"))
                                                (rule "shift_paren_or" (formula "23") (term "0,1,0"))
                                                (rule "commute_and" (formula "40") (term "0,0,1,0"))
                                                (rule "nnf_imp2or" (formula "50") (term "0"))
                                                (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                                (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "49") (term "0"))
                                                (rule "nnf_imp2or" (formula "40") (term "0"))
                                                (rule "nnf_notAnd" (formula "50") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "50") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "50") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0"))
                                                (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "50") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                (rule "mul_literals" (formula "50") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "50") (term "0,1,0"))
                                                (rule "double_not" (formula "50") (term "0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "50") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "50") (term "0,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "50") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1,0"))
                                                (rule "nnf_notAnd" (formula "38") (term "0,0,0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "38") (term "1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "38") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "38") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "49") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                (rule "mul_literals" (formula "49") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "40") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "40") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                                (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                                                (rule "nnf_imp2or" (formula "50") (term "0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "40") (term "0,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "0") (ifseqformula "9"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "80"))
                                                (rule "concrete_or_2" (formula "1"))
                                                (rule "nnf_notAnd" (formula "50") (term "0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "39") (term "1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "39") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "39") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "39") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "39") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "39") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "39") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "39") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "39") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "39") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "41") (term "0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
                                                (rule "nnf_notOr" (formula "51") (term "0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "51") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "51") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "51") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "51") (term "0,0,0,1,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "51") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "51") (term "0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "51") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "51") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "51") (term "1,0,1,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "51") (term "0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "40") (term "0"))
                                                (rule "cnf_rightDist" (formula "73") (term "0"))
                                                (rule "cnf_rightDist" (formula "72") (term "0"))
                                                (rule "commute_or_2" (formula "24") (term "0,0,1,0"))
                                                (rule "inEqSimp_or_weaken2" (formula "24") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "1,0,1,0,1,0"))
                                                (rule "add_literals" (formula "24") (term "0,1,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "24") (term "1,0,1,0,1,0"))
                                                (rule "eqClose" (formula "24") (term "0,1,0,1,0"))
                                                (rule "ifthenelse_true_for" (formula "24") (term "1,0,1,0"))
                                                (rule "commute_or" (formula "23") (term "0,0,1,1,0"))
                                                (rule "distr_forallAnd" (formula "73"))
                                                (rule "andLeft" (formula "73"))
                                                (rule "distr_forallAnd" (formula "72"))
                                                (rule "andLeft" (formula "72"))
                                                (rule "commute_or_2" (formula "50") (term "0,1,1,0"))
                                                (rule "commute_or_2" (formula "74") (term "0"))
                                                (rule "commute_or_2" (formula "72") (term "0"))
                                                (rule "commute_or" (formula "40") (term "0,0"))
                                                (rule "shift_paren_or" (formula "40") (term "0,1,0"))
                                                (rule "commute_and" (formula "39") (term "1,0,0,0,1,1,0"))
                                                (rule "shift_paren_or" (formula "74") (term "0"))
                                                (rule "shift_paren_or" (formula "72") (term "0"))
                                                (rule "commute_or" (formula "73") (term "0,0"))
                                                (rule "commute_or" (formula "71") (term "0,0"))
                                                (rule "commute_or" (formula "50") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "24") (term "0,0,1,0"))
                                                (rule "cut_direct" (formula "79") (term "0"))
                                                (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 TRUE"
                                                   (rule "concrete_impl_1" (formula "80"))
                                                   (rule "applyEq" (formula "75") (term "0") (ifseqformula "80"))
                                                   (rule "leq_literals" (formula "75"))
                                                   (rule "true_left" (formula "75"))
                                                   (rule "applyEq" (formula "75") (term "0") (ifseqformula "79"))
                                                   (rule "qeq_literals" (formula "75"))
                                                   (rule "true_left" (formula "75"))
                                                   (rule "applyEq" (formula "8") (term "0") (ifseqformula "78"))
                                                   (rule "inEqSimp_homoInEq0" (formula "8"))
                                                   (rule "mul_literals" (formula "8") (term "1,0"))
                                                   (rule "add_zero_right" (formula "8") (term "0"))
                                                   (rule "applyEq" (formula "76") (term "0,1") (ifseqformula "78"))
                                                   (rule "polySimp_homoEq" (formula "76") (term "1"))
                                                   (rule "times_zero_2" (formula "76") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "76") (term "0,1"))
                                                   (rule "applyEq" (formula "7") (term "0") (ifseqformula "78"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7"))
                                                   (rule "times_zero_2" (formula "7") (term "1,0"))
                                                   (rule "add_zero_right" (formula "7") (term "0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "76") (term "1"))
                                                   (rule "mul_literals" (formula "76") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                   (rule "mul_literals" (formula "8") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                   (rule "mul_literals" (formula "7") (term "1"))
                                                   (rule "inEqSimp_subsumption6" (formula "8") (ifseqformula "3"))
                                                   (rule "mul_literals" (formula "8") (term "1,1,0"))
                                                   (rule "greater_literals" (formula "8") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "8") (term "0"))
                                                   (rule "leq_literals" (formula "8") (term "0"))
                                                   (rule "concrete_or_1" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "inEqSimp_contradInEq0" (formula "75") (term "0") (ifseqformula "76"))
                                                   (rule "inEqSimp_homoInEq1" (formula "75") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "75") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "75") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "75") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0,0"))
                                                   (rule "add_literals" (formula "75") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "75") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "75") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "75") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "75") (term "0"))
                                                   (rule "concrete_impl_2" (formula "75"))
                                                   (rule "true_left" (formula "75"))
                                                   (rule "inEqSimp_contradInEq5" (formula "7") (ifseqformula "4"))
                                                   (rule "greater_literals" (formula "7") (term "0,0"))
                                                   (rule "concrete_impl_1" (formula "7") (term "0"))
                                                   (rule "mul_literals" (formula "7") (term "1,0"))
                                                   (rule "qeq_literals" (formula "7") (term "0"))
                                                   (rule "concrete_and_2" (formula "7"))
                                                   (rule "closeFalse" (formula "7"))
                                                )
                                                (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 FALSE"
                                                   (rule "concrete_impl_2" (formula "79"))
                                                   (rule "true_left" (formula "79"))
                                                   (rule "inEqSimp_leqRight" (formula "80"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "replace_known_left" (formula "79") (term "0") (ifseqformula "1"))
                                                   (rule "concrete_impl_1" (formula "79"))
                                                   (rule "applyEq" (formula "76") (term "0") (ifseqformula "79"))
                                                   (rule "inEqSimp_homoInEq0" (formula "76"))
                                                   (rule "polySimp_mulComm0" (formula "76") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "76") (term "1,0"))
                                                   (rule "mul_literals" (formula "76") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "76") (term "0"))
                                                   (rule "add_literals" (formula "76") (term "0,0"))
                                                   (rule "applyEq" (formula "8") (term "0") (ifseqformula "79"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,0"))
                                                   (rule "applyEq" (formula "9") (term "0") (ifseqformula "79"))
                                                   (rule "inEqSimp_homoInEq0" (formula "9"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0"))
                                                   (rule "applyEq" (formula "77") (term "0") (ifseqformula "79"))
                                                   (rule "inEqSimp_homoInEq1" (formula "77"))
                                                   (rule "polySimp_mulComm0" (formula "77") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "77") (term "1,0"))
                                                   (rule "mul_literals" (formula "77") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "77") (term "0"))
                                                   (rule "add_literals" (formula "77") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "76"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                   (rule "mul_literals" (formula "8") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                   (rule "mul_literals" (formula "9") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                   (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                   (rule "inEqSimp_subsumption4" (formula "76") (ifseqformula "69"))
                                                   (rule "mul_literals" (formula "76") (term "0,1,0"))
                                                   (rule "greater_literals" (formula "76") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "76") (term "0"))
                                                   (rule "leq_literals" (formula "76") (term "0"))
                                                   (rule "concrete_or_1" (formula "76"))
                                                   (rule "true_left" (formula "76"))
                                                   (rule "inEqSimp_subsumption1" (formula "66") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "66") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "66") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "66") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "66") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "66") (term "0,0,0"))
                                                   (rule "add_literals" (formula "66") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "66") (term "0,0"))
                                                   (rule "add_literals" (formula "66") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "66") (term "1,0,0"))
                                                   (rule "add_literals" (formula "66") (term "0,0"))
                                                   (rule "qeq_literals" (formula "66") (term "0"))
                                                   (rule "concrete_or_1" (formula "66"))
                                                   (rule "true_left" (formula "66"))
                                                   (rule "inEqSimp_subsumption6" (formula "75") (ifseqformula "65"))
                                                   (rule "times_zero_1" (formula "75") (term "1,1,0"))
                                                   (rule "greater_literals" (formula "75") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "75") (term "0"))
                                                   (rule "leq_literals" (formula "75") (term "0"))
                                                   (rule "concrete_or_1" (formula "75"))
                                                   (rule "true_left" (formula "75"))
                                                   (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=add(Z(2(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                                                   (rule "leq_literals" (formula "9") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "9") (term "0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0"))
                                                   (rule "leq_literals" (formula "9") (term "0"))
                                                   (rule "concrete_or_2" (formula "9"))
                                                   (rule "inEqSimp_subsumption1" (formula "70") (ifseqformula "9"))
                                                   (rule "inEqSimp_homoInEq0" (formula "70") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "70") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "70") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "70") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "70") (term "0,0,0"))
                                                   (rule "add_literals" (formula "70") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0"))
                                                   (rule "add_literals" (formula "70") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "70") (term "1,0,0"))
                                                   (rule "add_literals" (formula "70") (term "0,0"))
                                                   (rule "qeq_literals" (formula "70") (term "0"))
                                                   (rule "concrete_or_1" (formula "70"))
                                                   (rule "true_left" (formula "70"))
                                                   (rule "elimGcdLeq_antec" (formula "8") (inst "elimGcdRightDiv=add(Z(0(#)), l_1)") (inst "elimGcdLeftDiv=m_0") (inst "elimGcd=Z(2(#))"))
                                                   (rule "neg_literal" (formula "8") (term "0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "8") (term "1,1,0,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "8") (term "1,1"))
                                                   (rule "leq_literals" (formula "8") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "8") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "8") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0"))
                                                   (rule "qeq_literals" (formula "8") (term "0"))
                                                   (rule "concrete_or_2" (formula "8"))
                                                   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "8"))
                                                   (rule "times_zero_1" (formula "5") (term "0,0"))
                                                   (rule "add_zero_left" (formula "5") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "59"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                   (rule "add_literals" (formula "9") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "69") (ifseqformula "9"))
                                                   (rule "leq_literals" (formula "69") (term "0"))
                                                   (rule "concrete_or_1" (formula "69"))
                                                   (rule "true_left" (formula "69"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "58"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "inEqSimp_subsumption4" (formula "1") (ifseqformula "10"))
                                                   (rule "greater_literals" (formula "1") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0"))
                                                   (rule "leq_literals" (formula "1") (term "0"))
                                                   (rule "concrete_or_1" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "20"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "inEqSimp_subsumption4" (formula "1") (ifseqformula "70"))
                                                   (rule "greater_literals" (formula "1") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                   (rule "concrete_or_1" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "61"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "70") (ifseqformula "10"))
                                                   (rule "inEqSimp_homoInEq0" (formula "70") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "70") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "70") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "70") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "70") (term "0,0,0"))
                                                   (rule "add_literals" (formula "70") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0"))
                                                   (rule "add_literals" (formula "70") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "70") (term "1,0,0"))
                                                   (rule "add_literals" (formula "70") (term "0,0"))
                                                   (rule "qeq_literals" (formula "70") (term "0"))
                                                   (rule "concrete_or_1" (formula "70"))
                                                   (rule "true_left" (formula "70"))
                                                   (rule "inEqSimp_exactShadow3" (formula "67") (ifseqformula "10"))
                                                   (rule "times_zero_1" (formula "67") (term "0,0"))
                                                   (rule "add_zero_left" (formula "67") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "67"))
                                                   (rule "mul_literals" (formula "67") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "67") (ifseqformula "24"))
                                                   (rule "leq_literals" (formula "67") (term "0"))
                                                   (rule "concrete_or_1" (formula "67"))
                                                   (rule "true_left" (formula "67"))
                                                   (rule "commute_or_2" (formula "43") (term "0,0,1,0"))
                                                   (rule "inEqSimp_or_weaken2" (formula "43") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "1,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "43") (term "0,1,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "43") (term "1,0,1,0,1,0"))
                                                   (rule "eqClose" (formula "43") (term "0,1,0,1,0"))
                                                   (rule "ifthenelse_true_for" (formula "43") (term "1,0,1,0"))
                                                   (rule "commute_or" (formula "52") (term "0,0,1,1,0"))
                                                   (rule "commute_or" (formula "53") (term "0,1,0,1,1,0"))
                                                   (rule "commute_and" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "13"))
                                                   (rule "replace_known_left" (formula "51") (term "0") (ifseqformula "52"))
                                                   (rule "concrete_or_1" (formula "51"))
                                                   (rule "true_left" (formula "51"))
                                                   (rule "all_pull_out3" (formula "26") (term "1,0"))
                                                   (rule "all_pull_out3" (formula "27") (term "0"))
                                                   (rule "allLeft" (formula "35") (inst "t=i_1_2"))
                                                   (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "52"))
                                                   (rule "concrete_not_1" (formula "35") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "35") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "35") (term "1") (ifseqformula "51"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "35") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "35") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "35") (term "1"))
                                                   (rule "concrete_or_4" (formula "35"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "50"))
                                                   (rule "qeq_literals" (formula "35") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "35") (term "1"))
                                                   (rule "concrete_or_4" (formula "35"))
                                                   (rule "allLeft" (formula "36") (inst "t=i_1_0"))
                                                   (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "30"))
                                                   (rule "concrete_not_1" (formula "36") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "36") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "28"))
                                                   (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                   (rule "concrete_and_2" (formula "36") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "36") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "36") (term "1") (ifseqformula "29"))
                                                   (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                   (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "36") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "36") (term "1"))
                                                   (rule "concrete_or_4" (formula "36"))
                                                   (rule "shift_paren_or" (formula "27") (term "0,0"))
                                                   (rule "commute_or" (formula "45") (term "0,0,1,0"))
                                                   (rule "commute_or_2" (formula "54") (term "0,1,1,0"))
                                                   (rule "shift_paren_or" (formula "26") (term "0,1,0"))
                                                   (rule "cnf_rightDist" (formula "55") (term "0,1,1,0"))
                                                   (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "26") (term "0,0,1,0"))
                                                   (rule "commute_or_2" (formula "55") (term "1,0,1,1,0"))
                                                   (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                                                   (rule "commute_or_2" (formula "26") (term "0,0,0,1,0"))
                                                   (rule "shift_paren_or" (formula "55") (term "0,0,1,1,0"))
                                                   (rule "commute_or" (formula "55") (term "0,1,0,1,1,0"))
                                                   (rule "cnf_rightDist" (formula "44") (term "0,0,0,0,1,1,0"))
                                                   (rule "allLeft" (formula "37") (inst "t=m_0"))
                                                   (rule "replace_known_left" (formula "37") (term "0,0,0,0") (ifseqformula "3"))
                                                   (rule "concrete_not_1" (formula "37") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "37") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "5"))
                                                   (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                   (rule "concrete_and_2" (formula "37") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "37") (term "0"))
                                                   (rule "allLeft" (formula "38") (inst "t=l_0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                   (rule "concrete_and_2" (formula "38") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "38") (term "0"))
                                                   (rule "commute_or" (formula "46") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "allLeft" (formula "75") (inst "t=l_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "75") (term "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "75") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,1,0"))
                                                   (rule "add_literals" (formula "75") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "75") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "75") (term "0,1,0"))
                                                   (rule "qeq_literals" (formula "75") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "75") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "75") (term "1") (ifseqformula "67"))
                                                   (rule "inEqSimp_homoInEq1" (formula "75") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0,1"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0,1"))
                                                   (rule "add_literals" (formula "75") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "75") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "75") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "75") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "75") (term "1"))
                                                   (rule "concrete_or_4" (formula "75"))
                                                   (rule "notLeft" (formula "75"))
                                                   (rule "allLeft" (formula "74") (inst "t=l_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "74") (term "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "74") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,1,0"))
                                                   (rule "add_literals" (formula "74") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "74") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "74") (term "0,1,0"))
                                                   (rule "qeq_literals" (formula "74") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "74") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "74") (term "1") (ifseqformula "67"))
                                                   (rule "inEqSimp_homoInEq1" (formula "74") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,1"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0,1"))
                                                   (rule "add_literals" (formula "74") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "74") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "74") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "74") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "74") (term "1"))
                                                   (rule "concrete_or_4" (formula "74"))
                                                   (rule "notLeft" (formula "74"))
                                                   (rule "replace_known_right" (formula "38") (term "0,0,0") (ifseqformula "81"))
                                                   (rule "concrete_not_2" (formula "38") (term "0,0"))
                                                   (rule "concrete_or_1" (formula "38") (term "0"))
                                                   (rule "concrete_or_1" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "allLeft" (formula "75") (inst "t=i_1_2"))
                                                   (rule "replace_known_left" (formula "75") (term "0,0,0") (ifseqformula "54"))
                                                   (rule "concrete_not_1" (formula "75") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "75") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "75") (term "0") (ifseqformula "52"))
                                                   (rule "qeq_literals" (formula "75") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "75") (term "0"))
                                                   (rule "concrete_or_2" (formula "75"))
                                                   (rule "inEqSimp_exactShadow3" (formula "75") (ifseqformula "53"))
                                                   (rule "polySimp_mulComm0" (formula "75") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "75") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "75"))
                                                   (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "75") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "75") (ifseqformula "10"))
                                                   (rule "inEqSimp_homoInEq0" (formula "75") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "75") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "75") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "75") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "75") (term "0,0,0"))
                                                   (rule "add_literals" (formula "75") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0"))
                                                   (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "75") (term "0,0"))
                                                   (rule "qeq_literals" (formula "75") (term "0"))
                                                   (rule "concrete_or_1" (formula "75"))
                                                   (rule "true_left" (formula "75"))
                                                   (rule "allLeft" (formula "76") (inst "t=i_1_0"))
                                                   (rule "replace_known_left" (formula "76") (term "0,0,0") (ifseqformula "30"))
                                                   (rule "concrete_not_1" (formula "76") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "76") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "76") (term "0") (ifseqformula "28"))
                                                   (rule "qeq_literals" (formula "76") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "76") (term "0"))
                                                   (rule "concrete_or_2" (formula "76"))
                                                   (rule "inEqSimp_exactShadow3" (formula "76") (ifseqformula "29"))
                                                   (rule "polySimp_mulComm0" (formula "76") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "76") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "76"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "76") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "76") (ifseqformula "10"))
                                                   (rule "inEqSimp_homoInEq0" (formula "76") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "76") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "76") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "76") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "76") (term "0,0,0"))
                                                   (rule "add_literals" (formula "76") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0"))
                                                   (rule "add_literals" (formula "76") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "76") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "76") (term "0,0"))
                                                   (rule "qeq_literals" (formula "76") (term "0"))
                                                   (rule "concrete_or_1" (formula "76"))
                                                   (rule "true_left" (formula "76"))
                                                   (rule "allLeft" (formula "77") (inst "t=m_0"))
                                                   (rule "replace_known_left" (formula "77") (term "0,0,0") (ifseqformula "3"))
                                                   (rule "concrete_not_1" (formula "77") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "77") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "77") (term "0") (ifseqformula "5"))
                                                   (rule "qeq_literals" (formula "77") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "77") (term "0"))
                                                   (rule "concrete_or_2" (formula "77"))
                                                   (rule "inEqSimp_antiSymm" (formula "77") (ifseqformula "8"))
                                                   (rule "applyEq" (formula "6") (term "0") (ifseqformula "77"))
                                                   (rule "applyEqRigid" (formula "37") (term "0,1") (ifseqformula "77"))
                                                   (rule "applyEq" (formula "3") (term "0,0,2,0") (ifseqformula "77"))
                                                   (rule "close" (formula "86") (ifseqformula "3"))
                                                )
                                             )
                                             (branch "CUT: self.table[m_0 * 2] = null FALSE"
                                                (rule "concrete_not_2" (formula "85") (term "0"))
                                                (rule "concrete_and_1" (formula "85"))
                                                (rule "notRight" (formula "85"))
                                                (rule "applyEq" (formula "85") (term "0") (ifseqformula "1"))
                                                (rule "nnf_imp2or" (formula "50") (term "1,0"))
                                                (rule "nnf_notAnd" (formula "40") (term "0,1,0,1,0"))
                                                (rule "double_not" (formula "40") (term "0,0,1,0,1,0"))
                                                (rule "nnf_notOr" (formula "38") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "38") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "38") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,1,1,1,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "38") (term "0,0,0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "39") (term "0"))
                                                (rule "nnf_notAnd" (formula "49") (term "0,1,0"))
                                                (rule "double_not" (formula "49") (term "0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "49") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "49") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,1,0"))
                                                (rule "nnf_imp2or" (formula "49") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "71") (term "0,0"))
                                                (rule "commute_or" (formula "72") (term "0,0"))
                                                (rule "commute_or_2" (formula "22") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "31") (term "0,0"))
                                                (rule "shift_paren_or" (formula "23") (term "0,1,0"))
                                                (rule "commute_and" (formula "40") (term "0,0,1,0"))
                                                (rule "nnf_imp2or" (formula "50") (term "0"))
                                                (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                                (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "49") (term "0"))
                                                (rule "nnf_imp2or" (formula "40") (term "0"))
                                                (rule "nnf_notAnd" (formula "50") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "50") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                (rule "mul_literals" (formula "50") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "50") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "50") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "50") (term "0,1,0"))
                                                (rule "double_not" (formula "50") (term "0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "50") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "50") (term "0,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "50") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1,0"))
                                                (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "49") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
                                                (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                (rule "mul_literals" (formula "49") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0"))
                                                (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "40") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                                (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "40") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "50") (term "0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "40") (term "0,1,0"))
                                                (rule "nnf_notAnd" (formula "38") (term "0,0,0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "38") (term "1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "38") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "38") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "0") (ifseqformula "9"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "80"))
                                                (rule "concrete_or_2" (formula "1"))
                                                (rule "nnf_notAnd" (formula "50") (term "0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "41") (term "0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
                                                (rule "nnf_notOr" (formula "51") (term "0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "39") (term "1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "39") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "39") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "39") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "39") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "39") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "39") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "39") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "39") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "39") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "51") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "51") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "51") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "51") (term "0,0,0,1,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "51") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "51") (term "0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "51") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "51") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "51") (term "1,0,1,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "51") (term "0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "40") (term "0"))
                                                (rule "cnf_rightDist" (formula "72") (term "0"))
                                                (rule "cnf_rightDist" (formula "73") (term "0"))
                                                (rule "commute_or_2" (formula "24") (term "0,0,1,0"))
                                                (rule "inEqSimp_or_weaken2" (formula "24") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "1,0,1,0,1,0"))
                                                (rule "add_literals" (formula "24") (term "0,1,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "24") (term "1,0,1,0,1,0"))
                                                (rule "eqClose" (formula "24") (term "0,1,0,1,0"))
                                                (rule "ifthenelse_true_for" (formula "24") (term "1,0,1,0"))
                                                (rule "commute_or" (formula "23") (term "0,0,1,1,0"))
                                                (rule "distr_forallAnd" (formula "72"))
                                                (rule "andLeft" (formula "72"))
                                                (rule "distr_forallAnd" (formula "74"))
                                                (rule "andLeft" (formula "74"))
                                                (rule "commute_or_2" (formula "50") (term "0,1,1,0"))
                                                (rule "shift_paren_or" (formula "41") (term "0,1,0"))
                                                (rule "commute_or_2" (formula "72") (term "0"))
                                                (rule "commute_or_2" (formula "74") (term "0"))
                                                (rule "commute_or" (formula "40") (term "0,0"))
                                                (rule "shift_paren_or" (formula "72") (term "0"))
                                                (rule "shift_paren_or" (formula "74") (term "0"))
                                                (rule "commute_or" (formula "71") (term "0,0"))
                                                (rule "commute_or" (formula "73") (term "0,0"))
                                                (rule "commute_and" (formula "39") (term "1,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "50") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "24") (term "0,0,1,0"))
                                                (rule "cut_direct" (formula "79") (term "0"))
                                                (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 TRUE"
                                                   (rule "concrete_impl_1" (formula "80"))
                                                   (rule "applyEq" (formula "7") (term "0") (ifseqformula "80"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7"))
                                                   (rule "mul_literals" (formula "7") (term "1,0"))
                                                   (rule "add_zero_right" (formula "7") (term "0"))
                                                   (rule "applyEq" (formula "8") (term "0") (ifseqformula "80"))
                                                   (rule "inEqSimp_homoInEq0" (formula "8"))
                                                   (rule "times_zero_2" (formula "8") (term "1,0"))
                                                   (rule "add_zero_right" (formula "8") (term "0"))
                                                   (rule "applyEq" (formula "75") (term "0") (ifseqformula "80"))
                                                   (rule "leq_literals" (formula "75"))
                                                   (rule "true_left" (formula "75"))
                                                   (rule "applyEq" (formula "77") (term "0,1") (ifseqformula "79"))
                                                   (rule "polySimp_homoEq" (formula "77") (term "1"))
                                                   (rule "times_zero_2" (formula "77") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "77") (term "0,1"))
                                                   (rule "applyEq" (formula "75") (term "0") (ifseqformula "79"))
                                                   (rule "qeq_literals" (formula "75"))
                                                   (rule "true_left" (formula "75"))
                                                   (rule "polySimp_sepPosMonomial" (formula "76") (term "1"))
                                                   (rule "mul_literals" (formula "76") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                   (rule "mul_literals" (formula "7") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                   (rule "mul_literals" (formula "8") (term "1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "76") (term "0") (ifseqformula "77"))
                                                   (rule "inEqSimp_homoInEq1" (formula "76") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "76") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "76") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "76") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "76") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "76") (term "0,0,0"))
                                                   (rule "add_literals" (formula "76") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "76") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "76") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "76") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "76") (term "0"))
                                                   (rule "concrete_impl_2" (formula "76"))
                                                   (rule "true_left" (formula "76"))
                                                   (rule "inEqSimp_contradInEq5" (formula "7") (ifseqformula "4"))
                                                   (rule "greater_literals" (formula "7") (term "0,0"))
                                                   (rule "concrete_impl_1" (formula "7") (term "0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0"))
                                                   (rule "qeq_literals" (formula "7") (term "0"))
                                                   (rule "concrete_and_2" (formula "7"))
                                                   (rule "closeFalse" (formula "7"))
                                                )
                                                (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 FALSE"
                                                   (rule "concrete_impl_2" (formula "79"))
                                                   (rule "true_left" (formula "79"))
                                                   (rule "inEqSimp_leqRight" (formula "80"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "replace_known_left" (formula "79") (term "0") (ifseqformula "1"))
                                                   (rule "concrete_impl_1" (formula "79"))
                                                   (rule "applyEq" (formula "77") (term "0") (ifseqformula "79"))
                                                   (rule "inEqSimp_homoInEq1" (formula "77"))
                                                   (rule "polySimp_mulComm0" (formula "77") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "77") (term "1,0"))
                                                   (rule "mul_literals" (formula "77") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "77") (term "0"))
                                                   (rule "add_literals" (formula "77") (term "0,0"))
                                                   (rule "applyEq" (formula "76") (term "0") (ifseqformula "79"))
                                                   (rule "inEqSimp_homoInEq0" (formula "76"))
                                                   (rule "polySimp_mulComm0" (formula "76") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "76") (term "1,0"))
                                                   (rule "mul_literals" (formula "76") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "76") (term "0"))
                                                   (rule "add_literals" (formula "76") (term "0,0"))
                                                   (rule "applyEq" (formula "9") (term "0") (ifseqformula "79"))
                                                   (rule "inEqSimp_homoInEq0" (formula "9"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0"))
                                                   (rule "applyEq" (formula "8") (term "0") (ifseqformula "79"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                   (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "76"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                   (rule "mul_literals" (formula "9") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                   (rule "mul_literals" (formula "8") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "66") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "66") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "66") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "66") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "66") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "66") (term "0,0,0"))
                                                   (rule "add_literals" (formula "66") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "66") (term "0,0"))
                                                   (rule "add_literals" (formula "66") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "66") (term "1,0,0"))
                                                   (rule "add_literals" (formula "66") (term "0,0"))
                                                   (rule "qeq_literals" (formula "66") (term "0"))
                                                   (rule "concrete_or_1" (formula "66"))
                                                   (rule "true_left" (formula "66"))
                                                   (rule "inEqSimp_subsumption4" (formula "75") (ifseqformula "68"))
                                                   (rule "greater_literals" (formula "75") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "75") (term "0"))
                                                   (rule "mul_literals" (formula "75") (term "0,0"))
                                                   (rule "leq_literals" (formula "75") (term "0"))
                                                   (rule "concrete_or_1" (formula "75"))
                                                   (rule "true_left" (formula "75"))
                                                   (rule "inEqSimp_subsumption6" (formula "75") (ifseqformula "65"))
                                                   (rule "times_zero_1" (formula "75") (term "1,1,0"))
                                                   (rule "greater_literals" (formula "75") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "75") (term "0"))
                                                   (rule "leq_literals" (formula "75") (term "0"))
                                                   (rule "concrete_or_1" (formula "75"))
                                                   (rule "true_left" (formula "75"))
                                                   (rule "elimGcdLeq_antec" (formula "8") (inst "elimGcdRightDiv=add(Z(0(#)), l_1)") (inst "elimGcdLeftDiv=m_0") (inst "elimGcd=Z(2(#))"))
                                                   (rule "add_zero_left" (formula "8") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                                   (rule "add_zero_left" (formula "8") (term "1,1,0,0,0,0,1,0"))
                                                   (rule "neg_literal" (formula "8") (term "0,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "8") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "8") (term "0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "8") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0"))
                                                   (rule "qeq_literals" (formula "8") (term "0"))
                                                   (rule "concrete_or_2" (formula "8"))
                                                   (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=add(Z(2(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                                                   (rule "leq_literals" (formula "9") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "9") (term "0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0"))
                                                   (rule "leq_literals" (formula "9") (term "0"))
                                                   (rule "concrete_or_2" (formula "9"))
                                                   (rule "inEqSimp_subsumption1" (formula "70") (ifseqformula "9"))
                                                   (rule "inEqSimp_homoInEq0" (formula "70") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "70") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "70") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "70") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "70") (term "0,0,0"))
                                                   (rule "add_literals" (formula "70") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0"))
                                                   (rule "add_literals" (formula "70") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "70") (term "1,0,0"))
                                                   (rule "add_literals" (formula "70") (term "0,0"))
                                                   (rule "qeq_literals" (formula "70") (term "0"))
                                                   (rule "concrete_or_1" (formula "70"))
                                                   (rule "true_left" (formula "70"))
                                                   (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "59"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                   (rule "add_literals" (formula "9") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "69") (ifseqformula "9"))
                                                   (rule "leq_literals" (formula "69") (term "0"))
                                                   (rule "concrete_or_1" (formula "69"))
                                                   (rule "true_left" (formula "69"))
                                                   (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "61"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "70") (ifseqformula "10"))
                                                   (rule "inEqSimp_homoInEq0" (formula "70") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "70") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "70") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "70") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "70") (term "0,0,0"))
                                                   (rule "add_literals" (formula "70") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0"))
                                                   (rule "add_literals" (formula "70") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "70") (term "1,0,0"))
                                                   (rule "add_literals" (formula "70") (term "0,0"))
                                                   (rule "qeq_literals" (formula "70") (term "0"))
                                                   (rule "concrete_or_1" (formula "70"))
                                                   (rule "true_left" (formula "70"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "59"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "inEqSimp_subsumption4" (formula "1") (ifseqformula "10"))
                                                   (rule "greater_literals" (formula "1") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0"))
                                                   (rule "leq_literals" (formula "1") (term "0"))
                                                   (rule "concrete_or_1" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "21"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "inEqSimp_subsumption4" (formula "1") (ifseqformula "11"))
                                                   (rule "greater_literals" (formula "1") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                   (rule "concrete_or_1" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "8"))
                                                   (rule "times_zero_1" (formula "5") (term "0,0"))
                                                   (rule "add_zero_left" (formula "5") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "67") (ifseqformula "10"))
                                                   (rule "mul_literals" (formula "67") (term "0,0"))
                                                   (rule "add_zero_left" (formula "67") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "67"))
                                                   (rule "mul_literals" (formula "67") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "67") (ifseqformula "24"))
                                                   (rule "leq_literals" (formula "67") (term "0"))
                                                   (rule "concrete_or_1" (formula "67"))
                                                   (rule "true_left" (formula "67"))
                                                   (rule "commute_or_2" (formula "43") (term "0,0,1,0"))
                                                   (rule "inEqSimp_or_weaken2" (formula "43") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "1,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "43") (term "0,1,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "43") (term "1,0,1,0,1,0"))
                                                   (rule "eqClose" (formula "43") (term "0,1,0,1,0"))
                                                   (rule "ifthenelse_true_for" (formula "43") (term "1,0,1,0"))
                                                   (rule "commute_or" (formula "52") (term "0,0,1,1,0"))
                                                   (rule "commute_or" (formula "53") (term "0,1,0,1,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "13"))
                                                   (rule "replace_known_left" (formula "51") (term "0") (ifseqformula "52"))
                                                   (rule "concrete_or_1" (formula "51"))
                                                   (rule "true_left" (formula "51"))
                                                   (rule "commute_and" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "all_pull_out3" (formula "26") (term "1,0"))
                                                   (rule "all_pull_out3" (formula "27") (term "0"))
                                                   (rule "allLeft" (formula "35") (inst "t=i_1_0"))
                                                   (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "30"))
                                                   (rule "concrete_not_1" (formula "35") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "35") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "28"))
                                                   (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                   (rule "concrete_and_2" (formula "35") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "35") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "35") (term "1") (ifseqformula "29"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "35") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "35") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "35") (term "1"))
                                                   (rule "concrete_or_4" (formula "35"))
                                                   (rule "allLeft" (formula "36") (inst "t=i_1_2"))
                                                   (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "53"))
                                                   (rule "concrete_not_1" (formula "36") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "36") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "36") (term "1") (ifseqformula "52"))
                                                   (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                   (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "36") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "36") (term "1"))
                                                   (rule "concrete_or_4" (formula "36"))
                                                   (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "51"))
                                                   (rule "qeq_literals" (formula "36") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "36") (term "1"))
                                                   (rule "concrete_or_4" (formula "36"))
                                                   (rule "shift_paren_or" (formula "27") (term "0,0"))
                                                   (rule "commute_or" (formula "45") (term "0,0,1,0"))
                                                   (rule "commute_or_2" (formula "54") (term "0,1,1,0"))
                                                   (rule "shift_paren_or" (formula "26") (term "0,1,0"))
                                                   (rule "cnf_rightDist" (formula "55") (term "0,1,1,0"))
                                                   (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "26") (term "0,0,1,0"))
                                                   (rule "commute_or_2" (formula "55") (term "1,0,1,1,0"))
                                                   (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                                                   (rule "commute_or_2" (formula "26") (term "0,0,0,1,0"))
                                                   (rule "shift_paren_or" (formula "55") (term "0,0,1,1,0"))
                                                   (rule "commute_or" (formula "55") (term "0,1,0,1,1,0"))
                                                   (rule "allLeft" (formula "37") (inst "t=m_0"))
                                                   (rule "applyEq" (formula "37") (term "0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "replace_known_right" (formula "37") (term "0,0,0,0") (ifseqformula "85"))
                                                   (rule "concrete_not_2" (formula "37") (term "0,0,0"))
                                                   (rule "concrete_or_1" (formula "37") (term "0,0"))
                                                   (rule "concrete_or_1" (formula "37") (term "0"))
                                                   (rule "concrete_or_1" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "allLeft" (formula "37") (inst "t=l_0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                   (rule "concrete_and_2" (formula "37") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "37") (term "0"))
                                                   (rule "cnf_rightDist" (formula "45") (term "0,0,0,0,1,1,0"))
                                                   (rule "commute_or" (formula "45") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "allLeft" (formula "73") (inst "t=l_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "73") (term "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "73") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "73") (term "0,1,0"))
                                                   (rule "add_literals" (formula "73") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "73") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "73") (term "0,1,0"))
                                                   (rule "qeq_literals" (formula "73") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "73") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "73") (term "1") (ifseqformula "66"))
                                                   (rule "inEqSimp_homoInEq1" (formula "73") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,1"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "73") (term "0,0,1"))
                                                   (rule "add_literals" (formula "73") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "73") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "73") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "73") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "73") (term "1"))
                                                   (rule "concrete_or_4" (formula "73"))
                                                   (rule "notLeft" (formula "73"))
                                                   (rule "replace_known_right" (formula "37") (term "0,0,0") (ifseqformula "80"))
                                                   (rule "concrete_not_2" (formula "37") (term "0,0"))
                                                   (rule "concrete_or_1" (formula "37") (term "0"))
                                                   (rule "concrete_or_1" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "allLeft" (formula "74") (inst "t=i_1_2"))
                                                   (rule "replace_known_left" (formula "74") (term "0,0,0") (ifseqformula "53"))
                                                   (rule "concrete_not_1" (formula "74") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "74") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "74") (term "0") (ifseqformula "51"))
                                                   (rule "qeq_literals" (formula "74") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "74") (term "0"))
                                                   (rule "concrete_or_2" (formula "74"))
                                                   (rule "inEqSimp_exactShadow3" (formula "74") (ifseqformula "52"))
                                                   (rule "polySimp_mulComm0" (formula "74") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "74") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "74"))
                                                   (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "74") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "74") (ifseqformula "10"))
                                                   (rule "inEqSimp_homoInEq0" (formula "74") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "74") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "74") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "74") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "74") (term "0,0,0"))
                                                   (rule "add_literals" (formula "74") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0"))
                                                   (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "74") (term "0,0"))
                                                   (rule "qeq_literals" (formula "74") (term "0"))
                                                   (rule "concrete_or_1" (formula "74"))
                                                   (rule "true_left" (formula "74"))
                                                   (rule "allLeft" (formula "76") (inst "t=m_0"))
                                                   (rule "replace_known_left" (formula "76") (term "0,0,0") (ifseqformula "3"))
                                                   (rule "concrete_not_1" (formula "76") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "76") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "76") (term "0") (ifseqformula "5"))
                                                   (rule "qeq_literals" (formula "76") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "76") (term "0"))
                                                   (rule "concrete_or_2" (formula "76"))
                                                   (rule "inEqSimp_antiSymm" (formula "76") (ifseqformula "8"))
                                                   (rule "applyEq" (formula "8") (term "0") (ifseqformula "76"))
                                                   (rule "inEqSimp_homoInEq0" (formula "8"))
                                                   (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                                   (rule "add_literals" (formula "8") (term "1,0"))
                                                   (rule "times_zero_1" (formula "8") (term "0"))
                                                   (rule "qeq_literals" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "applyEqRigid" (formula "76") (term "0") (ifseqformula "75"))
                                                   (rule "inEqSimp_homoInEq1" (formula "76"))
                                                   (rule "polySimp_pullOutFactor1" (formula "76") (term "0"))
                                                   (rule "add_literals" (formula "76") (term "1,0"))
                                                   (rule "times_zero_1" (formula "76") (term "0"))
                                                   (rule "leq_literals" (formula "76"))
                                                   (rule "true_left" (formula "76"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "75"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "74"))
                                                   (rule "applyEq" (formula "6") (term "0") (ifseqformula "74"))
                                                   (rule "inEqSimp_homoInEq0" (formula "6"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "applyEq" (formula "3") (term "0,0,2,0") (ifseqformula "74"))
                                                   (rule "close" (formula "81") (ifseqformula "3"))
                                                )
                                             )
                                          )
                                          (branch "CUT: l_0 >= 1 + l_1 FALSE"
                                             (rule "concrete_impl_2" (formula "60"))
                                             (rule "true_left" (formula "60"))
                                             (rule "inEqSimp_geqRight" (formula "65"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "56") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "56") (term "0"))
                                             (rule "concrete_or_1" (formula "56"))
                                             (rule "true_left" (formula "56"))
                                             (rule "commute_or" (formula "33") (term "0,0"))
                                             (rule "cut_direct" (formula "60") (term "0"))
                                             (branch "CUT: l_0 <= -1 + l_1 TRUE"
                                                (rule "concrete_impl_1" (formula "61"))
                                                (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "60"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                (rule "concrete_or_1" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "59"))
                                                (rule "mul_literals" (formula "2") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "mul_literals" (formula "2") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                                                (rule "leq_literals" (formula "1") (term "0"))
                                                (rule "concrete_or_1" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "nnf_imp2or" (formula "42") (term "1,0"))
                                                (rule "commute_or_2" (formula "26") (term "0"))
                                                (rule "div_axiom" (formula "14") (term "1") (inst "quotient=quotient_0"))
                                                (rule "mul_literals" (formula "14") (term "1,1,1,1,1"))
                                                (rule "qeq_literals" (formula "14") (term "0,1,1"))
                                                (rule "ifthenelse_true_for" (formula "14") (term "1,1"))
                                                (rule "equal_literals" (formula "14") (term "0"))
                                                (rule "concrete_or_2" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "polySimp_addComm1" (formula "16") (term "1"))
                                                (rule "add_literals" (formula "16") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "15"))
                                                (rule "inEqSimp_homoInEq1" (formula "16"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                (rule "applyEqRigid" (formula "18") (term "1,0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "37") (term "1,1,1,0,0,1,0") (ifseqformula "14"))
                                                (rule "applyEqRigid" (formula "46") (term "1,1,1,0,0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "45") (term "1,1,1,0,0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "21") (term "1,1,0,0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "35") (term "1,1,0,0") (ifseqformula "14"))
                                                (rule "applyEqRigid" (formula "43") (term "0") (ifseqformula "14"))
                                                (rule "inEqSimp_homoInEq1" (formula "43"))
                                                (rule "polySimp_addComm1" (formula "43") (term "0"))
                                                (rule "applyEqRigid" (formula "21") (term "1,0,0,0,1,0") (ifseqformula "14"))
                                                (rule "applyEqRigid" (formula "36") (term "1,1,1,0,0") (ifseqformula "14"))
                                                (rule "applyEqRigid" (formula "20") (term "1,1,0,0") (ifseqformula "14"))
                                                (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "14"))
                                                (rule "inEqSimp_homoInEq1" (formula "23"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                (rule "applyEqRigid" (formula "37") (term "1,1,1,0,0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "17") (term "1") (ifseqformula "14"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                (rule "mul_literals" (formula "16") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "43"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                (rule "mul_literals" (formula "43") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                                (rule "mul_literals" (formula "23") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "43"))
                                                (rule "times_zero_1" (formula "42") (term "0,0"))
                                                (rule "add_zero_left" (formula "42") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                (rule "mul_literals" (formula "42") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "16"))
                                                (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                                                (rule "mul_literals" (formula "40") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                                (rule "add_literals" (formula "40") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "40") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "16"))
                                                (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                                (rule "mul_literals" (formula "32") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "16"))
                                                (rule "polySimp_rightDist" (formula "62") (term "0,0"))
                                                (rule "mul_literals" (formula "62") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "62") (term "0,0"))
                                                (rule "add_literals" (formula "62") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "62") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "62"))
                                                (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "62") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "leq_literals" (formula "62") (term "0,0"))
                                                (rule "concrete_or_2" (formula "62") (term "0"))
                                                (rule "neg_literal" (formula "62") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "62") (term "0,0"))
                                                (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "62") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "62") (term "0,0"))
                                                (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "62") (term "0,0"))
                                                (rule "qeq_literals" (formula "62") (term "0"))
                                                (rule "concrete_or_2" (formula "62"))
                                                (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "55"))
                                                (rule "polySimp_mulAssoc" (formula "15") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                                (rule "neg_literal" (formula "15") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "15") (term "0,0"))
                                                (rule "concrete_or_2" (formula "15") (term "0"))
                                                (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "15") (term "0,0"))
                                                (rule "qeq_literals" (formula "15") (term "0"))
                                                (rule "concrete_or_2" (formula "15"))
                                                (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                                (rule "times_zero_1" (formula "23") (term "0,0"))
                                                (rule "add_zero_left" (formula "23") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                (rule "mul_literals" (formula "23") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "17"))
                                                (rule "mul_literals" (formula "20") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                (rule "add_literals" (formula "20") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                (rule "mul_literals" (formula "20") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "20") (term "0,0"))
                                                (rule "concrete_or_2" (formula "20") (term "0"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "20") (term "0,0"))
                                                (rule "leq_literals" (formula "20") (term "0"))
                                                (rule "concrete_or_2" (formula "20"))
                                                (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "20"))
                                                (rule "leq_literals" (formula "46") (term "0"))
                                                (rule "concrete_or_1" (formula "46"))
                                                (rule "true_left" (formula "46"))
                                                (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "17"))
                                                (rule "polySimp_rightDist" (formula "59") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0"))
                                                (rule "mul_literals" (formula "59") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "59") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "59") (term "0,0"))
                                                (rule "add_literals" (formula "59") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "59") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "59"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "59") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,0"))
                                                (rule "neg_literal" (formula "59") (term "0,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "59") (term "0,0"))
                                                (rule "concrete_or_2" (formula "59") (term "0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "59") (term "0,0"))
                                                (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "59") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "59") (term "0,0"))
                                                (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "59") (term "0,0"))
                                                (rule "qeq_literals" (formula "59") (term "0"))
                                                (rule "concrete_or_2" (formula "59"))
                                                (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "34"))
                                                (rule "times_zero_1" (formula "32") (term "0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0"))
                                                (rule "inEqSimp_subsumption6" (formula "32") (ifseqformula "20"))
                                                (rule "greater_literals" (formula "32") (term "0,0"))
                                                (rule "concrete_and_1" (formula "32") (term "0"))
                                                (rule "mul_literals" (formula "32") (term "1,0"))
                                                (rule "leq_literals" (formula "32") (term "0"))
                                                (rule "concrete_or_1" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "64"))
                                                (rule "mul_literals" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "21"))
                                                (rule "leq_literals" (formula "1") (term "0"))
                                                (rule "concrete_or_1" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "59"))
                                                (rule "mul_literals" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "mul_literals" (formula "2") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "21"))
                                                (rule "leq_literals" (formula "2") (term "0"))
                                                (rule "concrete_or_1" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "43"))
                                                (rule "times_zero_1" (formula "41") (term "0,0"))
                                                (rule "add_zero_left" (formula "41") (term "0"))
                                                (rule "inEqSimp_subsumption6" (formula "41") (ifseqformula "20"))
                                                (rule "greater_literals" (formula "41") (term "0,0"))
                                                (rule "concrete_and_1" (formula "41") (term "0"))
                                                (rule "mul_literals" (formula "41") (term "1,0"))
                                                (rule "leq_literals" (formula "41") (term "0"))
                                                (rule "concrete_or_1" (formula "41"))
                                                (rule "true_left" (formula "41"))
                                                (rule "div_axiom" (formula "72") (term "0,1,1,1") (inst "quotient=quotient_1"))
                                                (rule "mul_literals" (formula "72") (term "1,1,1,1,1"))
                                                (rule "equal_literals" (formula "72") (term "0"))
                                                (rule "concrete_or_2" (formula "72"))
                                                (rule "qeq_literals" (formula "72") (term "0,1"))
                                                (rule "ifthenelse_true_for" (formula "72") (term "1"))
                                                (rule "andLeft" (formula "72"))
                                                (rule "andLeft" (formula "72"))
                                                (rule "polySimp_addAssoc" (formula "74") (term "0,1"))
                                                (rule "add_literals" (formula "74") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "74") (term "1"))
                                                (rule "add_literals" (formula "74") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "73"))
                                                (rule "polySimp_mulLiterals" (formula "73") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "73") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "74"))
                                                (rule "polySimp_mulLiterals" (formula "74") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                (rule "applyEqRigid" (formula "76") (term "0,1,1,0") (ifseqformula "72"))
                                                (rule "polySimp_addComm1" (formula "76") (term "1,0"))
                                                (rule "applyEqRigid" (formula "75") (term "0,1,1,0") (ifseqformula "72"))
                                                (rule "polySimp_addComm1" (formula "75") (term "1,0"))
                                                (rule "applyEqRigid" (formula "75") (term "0,1,1,1") (ifseqformula "72"))
                                                (rule "polySimp_addComm1" (formula "75") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "73"))
                                                (rule "polySimp_mulComm0" (formula "73") (term "1"))
                                                (rule "polySimp_rightDist" (formula "73") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "73") (term "1,1"))
                                                (rule "mul_literals" (formula "73") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "74"))
                                                (rule "polySimp_mulComm0" (formula "74") (term "1"))
                                                (rule "polySimp_rightDist" (formula "74") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "74") (term "1,1"))
                                                (rule "mul_literals" (formula "74") (term "0,1"))
                                                (rule "elimGcdLeq_antec" (formula "74") (inst "elimGcdRightDiv=add(Z(0(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "74") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,1,0"))
                                                (rule "neg_literal" (formula "74") (term "0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "74") (term "0,0"))
                                                (rule "concrete_or_2" (formula "74") (term "0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                                                (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "74") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "74") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "74") (term "0,0,0"))
                                                (rule "add_literals" (formula "74") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "74") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "74") (term "0,0,0"))
                                                (rule "add_literals" (formula "74") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                                                (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "74") (term "0,0"))
                                                (rule "qeq_literals" (formula "74") (term "0"))
                                                (rule "concrete_or_2" (formula "74"))
                                                (rule "elimGcdGeq_antec" (formula "73") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "73") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "73") (term "0,0"))
                                                (rule "concrete_or_2" (formula "73") (term "0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "73") (term "0,0"))
                                                (rule "add_literals" (formula "73") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "73") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "73") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "73") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "73") (term "0,0,0"))
                                                (rule "add_literals" (formula "73") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "73") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "73") (term "0,0,0"))
                                                (rule "add_literals" (formula "73") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "73") (term "0,0"))
                                                (rule "add_literals" (formula "73") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "73") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "73") (term "0,0"))
                                                (rule "leq_literals" (formula "73") (term "0"))
                                                (rule "concrete_or_2" (formula "73"))
                                                (rule "inEqSimp_exactShadow3" (formula "73") (ifseqformula "64"))
                                                (rule "polySimp_rightDist" (formula "73") (term "0,0"))
                                                (rule "mul_literals" (formula "73") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "73"))
                                                (rule "polySimp_mulComm0" (formula "73") (term "1"))
                                                (rule "polySimp_rightDist" (formula "73") (term "1"))
                                                (rule "mul_literals" (formula "73") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "73") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "74") (ifseqformula "63"))
                                                (rule "polySimp_rightDist" (formula "74") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0"))
                                                (rule "mul_literals" (formula "74") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                (rule "add_literals" (formula "74") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "74"))
                                                (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "74") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                (rule "leq_literals" (formula "74") (term "0,0"))
                                                (rule "concrete_or_2" (formula "74") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0,0,0"))
                                                (rule "neg_literal" (formula "74") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0"))
                                                (rule "mul_literals" (formula "74") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "74") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "74") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                                                (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "74") (term "0,0"))
                                                (rule "qeq_literals" (formula "74") (term "0"))
                                                (rule "concrete_or_2" (formula "74"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "76"))
                                                (rule "mul_literals" (formula "1") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "1") (term "0,0"))
                                                (rule "concrete_or_2" (formula "1") (term "0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0"))
                                                (rule "leq_literals" (formula "1") (term "0"))
                                                (rule "concrete_or_2" (formula "1"))
                                                (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "75"))
                                                (rule "applyEq" (formula "78") (term "0,1,1") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "78") (term "1,1"))
                                                (rule "add_literals" (formula "78") (term "1"))
                                                (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEq" (formula "74") (term "0,1,1") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "74") (term "1,1"))
                                                (rule "add_literals" (formula "74") (term "1"))
                                                (rule "applyEq" (formula "75") (term "0") (ifseqformula "1"))
                                                (rule "leq_literals" (formula "75"))
                                                (rule "true_left" (formula "75"))
                                                (rule "applyEq" (formula "75") (term "0,1,1") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "75") (term "1,1"))
                                                (rule "add_literals" (formula "75") (term "1"))
                                                (rule "applyEqRigid" (formula "78") (term "0,1,0,1,0") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "78") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "78") (term "0,1,0"))
                                                (rule "applyEq" (formula "73") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "77") (term "0,1,0,1,0") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "77") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "77") (term "0,1,0"))
                                                (rule "applyEq" (formula "77") (term "0,1,0,1,1") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "77") (term "1,0,1,1"))
                                                (rule "add_literals" (formula "77") (term "0,1,1"))
                                                (rule "inEqSimp_subsumption0" (formula "76") (ifseqformula "64"))
                                                (rule "leq_literals" (formula "76") (term "0"))
                                                (rule "concrete_or_1" (formula "76"))
                                                (rule "true_left" (formula "76"))
                                                (rule "inEqSimp_subsumption1" (formula "75") (ifseqformula "2"))
                                                (rule "leq_literals" (formula "75") (term "0"))
                                                (rule "concrete_or_1" (formula "75"))
                                                (rule "true_left" (formula "75"))
                                                (rule "inEqSimp_subsumption1" (formula "74") (ifseqformula "21"))
                                                (rule "leq_literals" (formula "74") (term "0"))
                                                (rule "concrete_or_1" (formula "74"))
                                                (rule "true_left" (formula "74"))
                                                (rule "cut_direct" (formula "83") (term "0,0"))
                                                (branch "CUT: self.table[m_0 * 2] = null TRUE"
                                                   (rule "concrete_not_1" (formula "84") (term "0"))
                                                   (rule "concrete_and_2" (formula "84"))
                                                   (rule "false_right" (formula "84"))
                                                   (rule "nnf_imp2or" (formula "52") (term "1,0"))
                                                   (rule "nnf_notAnd" (formula "42") (term "0,1,0,1,0"))
                                                   (rule "double_not" (formula "42") (term "0,0,1,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "40") (term "0,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "40") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "40") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,1,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "40") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "40") (term "0,0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "40") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "nnf_imp2or" (formula "51") (term "0"))
                                                   (rule "nnf_imp2or" (formula "41") (term "0"))
                                                   (rule "commute_or_2" (formula "24") (term "0,1,1,0"))
                                                   (rule "commute_or" (formula "71") (term "0,0"))
                                                   (rule "commute_or" (formula "33") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "25") (term "0,1,0"))
                                                   (rule "commute_and" (formula "42") (term "0,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "52") (term "0"))
                                                   (rule "nnf_imp2or" (formula "42") (term "0"))
                                                   (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "51") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "51") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "51") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "51") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "41") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "41") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "41") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "52") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "52") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "52") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "52") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "52") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "42") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "42") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "42") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "51") (term "0,1,0"))
                                                   (rule "double_not" (formula "51") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "51") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "51") (term "0,0,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "51") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "52") (term "0,1,0"))
                                                   (rule "double_not" (formula "52") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "52") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "52") (term "0,0,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "52") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "42") (term "0,1,0"))
                                                   (rule "nnf_imp2or" (formula "51") (term "0,1,1,0"))
                                                   (rule "nnf_imp2or" (formula "52") (term "0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "40") (term "1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "40") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "40") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "40") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "40") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "40") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "40") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,0,1,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "40") (term "0,0,0,0,1,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "0") (ifseqformula "11"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
                                                   (rule "concrete_or_2" (formula "1"))
                                                   (rule "nnf_notAnd" (formula "43") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "43") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "52") (term "0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "52") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "52") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "53") (term "0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "41") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "41") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "41") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "41") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "41") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "41") (term "1,0,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "41") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "41") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "41") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "41") (term "1,1,1,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "41") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "41") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "53") (term "0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "53") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "53") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "53") (term "0,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "53") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "53") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "53") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "53") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "53") (term "0,0,0,1,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "53") (term "0,0,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "53") (term "0,1,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "53") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "53") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "53") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "commute_or_2" (formula "42") (term "0"))
                                                   (rule "cnf_rightDist" (formula "72") (term "0"))
                                                   (rule "commute_or_2" (formula "26") (term "0,0,1,0"))
                                                   (rule "inEqSimp_or_weaken2" (formula "26") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "26") (term "1,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "26") (term "0,1,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "26") (term "1,0,1,0,1,0"))
                                                   (rule "eqClose" (formula "26") (term "0,1,0,1,0"))
                                                   (rule "ifthenelse_true_for" (formula "26") (term "1,0,1,0"))
                                                   (rule "commute_or" (formula "25") (term "0,0,1,1,0"))
                                                   (rule "distr_forallAnd" (formula "72"))
                                                   (rule "andLeft" (formula "72"))
                                                   (rule "shift_paren_or" (formula "43") (term "0,1,0"))
                                                   (rule "commute_or_2" (formula "52") (term "0,1,1,0"))
                                                   (rule "commute_or_2" (formula "72") (term "0"))
                                                   (rule "commute_or" (formula "42") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "72") (term "0"))
                                                   (rule "commute_or" (formula "71") (term "0,0"))
                                                   (rule "commute_and" (formula "41") (term "1,0,0,0,1,1,0"))
                                                   (rule "commute_or" (formula "52") (term "0,1,1,0"))
                                                   (rule "commute_or" (formula "26") (term "0,0,1,0"))
                                                   (rule "cut_direct" (formula "77") (term "0"))
                                                   (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 TRUE"
                                                      (rule "concrete_impl_1" (formula "78"))
                                                      (rule "applyEq" (formula "10") (term "0") (ifseqformula "78"))
                                                      (rule "inEqSimp_homoInEq0" (formula "10"))
                                                      (rule "mul_literals" (formula "10") (term "1,0"))
                                                      (rule "add_zero_right" (formula "10") (term "0"))
                                                      (rule "applyEq" (formula "76") (term "0,1") (ifseqformula "78"))
                                                      (rule "polySimp_homoEq" (formula "76") (term "1"))
                                                      (rule "times_zero_2" (formula "76") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "76") (term "0,1"))
                                                      (rule "applyEq" (formula "73") (term "0") (ifseqformula "78"))
                                                      (rule "leq_literals" (formula "73"))
                                                      (rule "true_left" (formula "73"))
                                                      (rule "applyEq" (formula "73") (term "0") (ifseqformula "77"))
                                                      (rule "qeq_literals" (formula "73"))
                                                      (rule "true_left" (formula "73"))
                                                      (rule "applyEq" (formula "9") (term "0") (ifseqformula "76"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9"))
                                                      (rule "mul_literals" (formula "9") (term "1,0"))
                                                      (rule "add_zero_right" (formula "9") (term "0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "74") (term "1"))
                                                      (rule "mul_literals" (formula "74") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                      (rule "mul_literals" (formula "10") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                      (rule "mul_literals" (formula "9") (term "1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "74") (term "0") (ifseqformula "75"))
                                                      (rule "inEqSimp_homoInEq1" (formula "74") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "74") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "74") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "74") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "74") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0,0"))
                                                      (rule "add_literals" (formula "74") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "74") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "74") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "74") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "74") (term "0"))
                                                      (rule "concrete_impl_2" (formula "74"))
                                                      (rule "true_left" (formula "74"))
                                                      (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "5"))
                                                      (rule "greater_literals" (formula "10") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "10") (term "0"))
                                                      (rule "mul_literals" (formula "10") (term "1,0"))
                                                      (rule "leq_literals" (formula "10") (term "0"))
                                                      (rule "concrete_or_1" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "inEqSimp_contradInEq5" (formula "9") (ifseqformula "6"))
                                                      (rule "greater_literals" (formula "9") (term "0,0"))
                                                      (rule "concrete_impl_1" (formula "9") (term "0"))
                                                      (rule "mul_literals" (formula "9") (term "1,0"))
                                                      (rule "qeq_literals" (formula "9") (term "0"))
                                                      (rule "concrete_and_2" (formula "9"))
                                                      (rule "closeFalse" (formula "9"))
                                                   )
                                                   (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 FALSE"
                                                      (rule "concrete_impl_2" (formula "77"))
                                                      (rule "true_left" (formula "77"))
                                                      (rule "inEqSimp_leqRight" (formula "78"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "replace_known_left" (formula "77") (term "0") (ifseqformula "1"))
                                                      (rule "concrete_impl_1" (formula "77"))
                                                      (rule "applyEq" (formula "11") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq0" (formula "11"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0"))
                                                      (rule "applyEq" (formula "74") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq0" (formula "74"))
                                                      (rule "polySimp_mulComm0" (formula "74") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "74") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "74") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "74") (term "0"))
                                                      (rule "add_literals" (formula "74") (term "0,0"))
                                                      (rule "applyEq" (formula "75") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq1" (formula "75"))
                                                      (rule "polySimp_mulComm0" (formula "75") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "75") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "75") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "75") (term "0"))
                                                      (rule "add_literals" (formula "75") (term "0,0"))
                                                      (rule "applyEq" (formula "10") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq1" (formula "10"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                      (rule "mul_literals" (formula "11") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "74"))
                                                      (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                                                      (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                      (rule "mul_literals" (formula "10") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq3" (formula "11") (ifseqformula "71"))
                                                      (rule "greater_literals" (formula "11") (term "0,0"))
                                                      (rule "concrete_impl_1" (formula "11") (term "0"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "0"))
                                                      (rule "mul_literals" (formula "11") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "11"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "11") (term "0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0"))
                                                      (rule "add_literals" (formula "11") (term "0"))
                                                      (rule "leq_literals" (formula "11"))
                                                      (rule "closeFalse" (formula "11"))
                                                   )
                                                )
                                                (branch "CUT: self.table[m_0 * 2] = null FALSE"
                                                   (rule "concrete_not_2" (formula "84") (term "0"))
                                                   (rule "concrete_and_1" (formula "84"))
                                                   (rule "notRight" (formula "84"))
                                                   (rule "applyEq" (formula "84") (term "0") (ifseqformula "1"))
                                                   (rule "nnf_imp2or" (formula "52") (term "1,0"))
                                                   (rule "nnf_notAnd" (formula "42") (term "0,1,0,1,0"))
                                                   (rule "double_not" (formula "42") (term "0,0,1,0,1,0"))
                                                   (rule "nnf_notOr" (formula "40") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "40") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "40") (term "0,0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "40") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "40") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,1,1,1,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "40") (term "0,0,0,1,1,0"))
                                                   (rule "nnf_imp2or" (formula "51") (term "0"))
                                                   (rule "nnf_imp2or" (formula "41") (term "0"))
                                                   (rule "commute_or_2" (formula "24") (term "0,1,1,0"))
                                                   (rule "commute_or" (formula "71") (term "0,0"))
                                                   (rule "commute_or" (formula "33") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "25") (term "0,1,0"))
                                                   (rule "commute_and" (formula "42") (term "0,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "52") (term "0"))
                                                   (rule "nnf_imp2or" (formula "42") (term "0"))
                                                   (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "51") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "51") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "51") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "51") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "41") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "41") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "41") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "52") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "52") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "52") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "52") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "52") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "42") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "42") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "42") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "51") (term "0,1,0"))
                                                   (rule "double_not" (formula "51") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "51") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "51") (term "0,0,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "51") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "52") (term "0,1,0"))
                                                   (rule "double_not" (formula "52") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "52") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "52") (term "0,0,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "52") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "42") (term "0,1,0"))
                                                   (rule "nnf_imp2or" (formula "51") (term "0,1,1,0"))
                                                   (rule "nnf_imp2or" (formula "52") (term "0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "40") (term "1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "40") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "40") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "40") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "40") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "40") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "40") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,0,1,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "40") (term "0,0,0,0,1,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "0") (ifseqformula "11"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
                                                   (rule "concrete_or_2" (formula "1"))
                                                   (rule "nnf_notAnd" (formula "43") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "43") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "52") (term "0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "52") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "52") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "53") (term "0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "41") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "41") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "41") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "41") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "41") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "41") (term "1,0,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "41") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "41") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "41") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "41") (term "1,1,1,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "41") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "41") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "53") (term "0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "53") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "53") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "53") (term "0,0,0,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "53") (term "0,0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "53") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "53") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "53") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "53") (term "0,0,0,1,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "53") (term "0,0,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "53") (term "0,1,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "53") (term "1,0,0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "53") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "53") (term "1,0,1,0,0,1,1,0"))
                                                   (rule "commute_or_2" (formula "42") (term "0"))
                                                   (rule "cnf_rightDist" (formula "72") (term "0"))
                                                   (rule "commute_or_2" (formula "26") (term "0,0,1,0"))
                                                   (rule "inEqSimp_or_weaken2" (formula "26") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "26") (term "1,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "26") (term "0,1,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "26") (term "1,0,1,0,1,0"))
                                                   (rule "eqClose" (formula "26") (term "0,1,0,1,0"))
                                                   (rule "ifthenelse_true_for" (formula "26") (term "1,0,1,0"))
                                                   (rule "commute_or" (formula "25") (term "0,0,1,1,0"))
                                                   (rule "distr_forallAnd" (formula "72"))
                                                   (rule "andLeft" (formula "72"))
                                                   (rule "shift_paren_or" (formula "43") (term "0,1,0"))
                                                   (rule "commute_or_2" (formula "52") (term "0,1,1,0"))
                                                   (rule "commute_or_2" (formula "72") (term "0"))
                                                   (rule "commute_or" (formula "42") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "72") (term "0"))
                                                   (rule "commute_or" (formula "71") (term "0,0"))
                                                   (rule "commute_and" (formula "41") (term "1,0,0,0,1,1,0"))
                                                   (rule "commute_or" (formula "52") (term "0,1,1,0"))
                                                   (rule "commute_or" (formula "26") (term "0,0,1,0"))
                                                   (rule "cut_direct" (formula "77") (term "0"))
                                                   (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 TRUE"
                                                      (rule "concrete_impl_1" (formula "78"))
                                                      (rule "applyEq" (formula "10") (term "0") (ifseqformula "78"))
                                                      (rule "inEqSimp_homoInEq0" (formula "10"))
                                                      (rule "times_zero_2" (formula "10") (term "1,0"))
                                                      (rule "add_zero_right" (formula "10") (term "0"))
                                                      (rule "applyEq" (formula "74") (term "0") (ifseqformula "78"))
                                                      (rule "qeq_literals" (formula "74"))
                                                      (rule "true_left" (formula "74"))
                                                      (rule "applyEq" (formula "73") (term "0") (ifseqformula "77"))
                                                      (rule "leq_literals" (formula "73"))
                                                      (rule "true_left" (formula "73"))
                                                      (rule "applyEq" (formula "74") (term "0,1") (ifseqformula "76"))
                                                      (rule "polySimp_homoEq" (formula "74") (term "1"))
                                                      (rule "times_zero_2" (formula "74") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "74") (term "0,1"))
                                                      (rule "applyEq" (formula "9") (term "0") (ifseqformula "76"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9"))
                                                      (rule "mul_literals" (formula "9") (term "1,0"))
                                                      (rule "add_zero_right" (formula "9") (term "0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "74") (term "1"))
                                                      (rule "mul_literals" (formula "74") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                      (rule "mul_literals" (formula "10") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                      (rule "mul_literals" (formula "9") (term "1"))
                                                      (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "5"))
                                                      (rule "greater_literals" (formula "10") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "10") (term "0"))
                                                      (rule "mul_literals" (formula "10") (term "1,0"))
                                                      (rule "leq_literals" (formula "10") (term "0"))
                                                      (rule "concrete_or_1" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "inEqSimp_contradInEq0" (formula "73") (term "0") (ifseqformula "74"))
                                                      (rule "inEqSimp_homoInEq1" (formula "73") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "73") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "73") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "73") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "73") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "73") (term "0,0,0"))
                                                      (rule "add_literals" (formula "73") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "73") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "73") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "73") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "73") (term "0"))
                                                      (rule "concrete_impl_2" (formula "73"))
                                                      (rule "true_left" (formula "73"))
                                                      (rule "inEqSimp_contradInEq5" (formula "9") (ifseqformula "6"))
                                                      (rule "greater_literals" (formula "9") (term "0,0"))
                                                      (rule "concrete_impl_1" (formula "9") (term "0"))
                                                      (rule "mul_literals" (formula "9") (term "1,0"))
                                                      (rule "qeq_literals" (formula "9") (term "0"))
                                                      (rule "concrete_and_2" (formula "9"))
                                                      (rule "closeFalse" (formula "9"))
                                                   )
                                                   (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 FALSE"
                                                      (rule "concrete_impl_2" (formula "77"))
                                                      (rule "true_left" (formula "77"))
                                                      (rule "inEqSimp_leqRight" (formula "78"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "replace_known_left" (formula "77") (term "0") (ifseqformula "1"))
                                                      (rule "concrete_impl_1" (formula "77"))
                                                      (rule "applyEq" (formula "75") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq1" (formula "75"))
                                                      (rule "polySimp_mulComm0" (formula "75") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "75") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "75") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "75") (term "0"))
                                                      (rule "add_literals" (formula "75") (term "0,0"))
                                                      (rule "applyEq" (formula "74") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq0" (formula "74"))
                                                      (rule "polySimp_mulComm0" (formula "74") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "74") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "74") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "74") (term "0"))
                                                      (rule "add_literals" (formula "74") (term "0,0"))
                                                      (rule "applyEq" (formula "10") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq1" (formula "10"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0,0"))
                                                      (rule "applyEq" (formula "11") (term "0") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq0" (formula "11"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                                                      (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "74"))
                                                      (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                      (rule "mul_literals" (formula "10") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                      (rule "mul_literals" (formula "11") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                      (rule "inEqSimp_subsumption4" (formula "74") (ifseqformula "66"))
                                                      (rule "greater_literals" (formula "74") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "74") (term "0"))
                                                      (rule "mul_literals" (formula "74") (term "0,0"))
                                                      (rule "leq_literals" (formula "74") (term "0"))
                                                      (rule "concrete_or_1" (formula "74"))
                                                      (rule "true_left" (formula "74"))
                                                      (rule "inEqSimp_contradInEq3" (formula "11") (ifseqformula "71"))
                                                      (rule "greater_literals" (formula "11") (term "0,0"))
                                                      (rule "concrete_impl_1" (formula "11") (term "0"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "0"))
                                                      (rule "mul_literals" (formula "11") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "11"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "11") (term "0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0"))
                                                      (rule "add_literals" (formula "11") (term "0"))
                                                      (rule "leq_literals" (formula "11"))
                                                      (rule "closeFalse" (formula "11"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: l_0 <= -1 + l_1 FALSE"
                                                (rule "concrete_impl_2" (formula "60"))
                                                (rule "true_left" (formula "60"))
                                                (rule "inEqSimp_leqRight" (formula "65"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "10") (term "0,1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "8") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,0"))
                                                (rule "times_zero_1" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,0"))
                                                (rule "times_zero_1" (formula "2") (term "0"))
                                                (rule "qeq_literals" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEqRigid" (formula "51") (term "0,1,1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "55"))
                                                (rule "eqSymm" (formula "47"))
                                                (rule "applyEqRigid" (formula "46") (term "0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "47") (term "0,1") (ifseqformula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                                                (rule "times_zero_1" (formula "3") (term "0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "57") (ifseqformula "7"))
                                                (rule "mul_literals" (formula "57") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                (rule "add_literals" (formula "57") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                (rule "mul_literals" (formula "57") (term "1"))
                                                (rule "inEqSimp_subsumption6" (formula "57") (ifseqformula "2"))
                                                (rule "mul_literals" (formula "57") (term "1,1,0"))
                                                (rule "greater_literals" (formula "57") (term "0,0"))
                                                (rule "concrete_and_1" (formula "57") (term "0"))
                                                (rule "leq_literals" (formula "57") (term "0"))
                                                (rule "concrete_or_1" (formula "57"))
                                                (rule "true_left" (formula "57"))
                                                (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                                (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                (rule "inEqSimp_subsumption4" (formula "6") (ifseqformula "5"))
                                                (rule "greater_literals" (formula "6") (term "0,0"))
                                                (rule "concrete_and_1" (formula "6") (term "0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                (rule "polySimp_pullOutFactor1" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "6") (term "0,0"))
                                                (rule "qeq_literals" (formula "6") (term "0"))
                                                (rule "concrete_or_1" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "nnf_imp2or" (formula "42") (term "1,0"))
                                                (rule "commute_or_2" (formula "26") (term "0"))
                                                (rule "div_axiom" (formula "14") (term "1") (inst "quotient=quotient_0"))
                                                (rule "mul_literals" (formula "14") (term "1,1,1,1,1"))
                                                (rule "equal_literals" (formula "14") (term "0"))
                                                (rule "concrete_or_2" (formula "14"))
                                                (rule "qeq_literals" (formula "14") (term "0,1"))
                                                (rule "ifthenelse_true_for" (formula "14") (term "1"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "polySimp_addComm1" (formula "16") (term "1"))
                                                (rule "add_literals" (formula "16") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "15"))
                                                (rule "inEqSimp_homoInEq1" (formula "16"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                (rule "applyEq" (formula "23") (term "0") (ifseqformula "14"))
                                                (rule "inEqSimp_homoInEq1" (formula "23"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                (rule "applyEq" (formula "35") (term "1,1,0,0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "36") (term "1,1,1,0,0") (ifseqformula "14"))
                                                (rule "applyEqRigid" (formula "21") (term "1,0,0,0,1,0") (ifseqformula "14"))
                                                (rule "applyEqRigid" (formula "37") (term "1,1,1,0,0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "46") (term "1,1,1,0,0") (ifseqformula "14"))
                                                (rule "applyEqRigid" (formula "29") (term "1,1,0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "37") (term "1,1,1,0,0,1,0") (ifseqformula "14"))
                                                (rule "applyEqRigid" (formula "43") (term "0") (ifseqformula "14"))
                                                (rule "inEqSimp_homoInEq1" (formula "43"))
                                                (rule "polySimp_addComm1" (formula "43") (term "0"))
                                                (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "21") (term "1,1,0,0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "20") (term "1,1,0,0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "45") (term "1,1,1,0,0") (ifseqformula "14"))
                                                (rule "applyEqRigid" (formula "17") (term "1") (ifseqformula "14"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                (rule "mul_literals" (formula "16") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                                (rule "mul_literals" (formula "23") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "43"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                (rule "mul_literals" (formula "43") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "16"))
                                                (rule "mul_literals" (formula "19") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                (rule "add_literals" (formula "19") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                (rule "mul_literals" (formula "19") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "19") (term "0,0"))
                                                (rule "concrete_or_2" (formula "19") (term "0"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0"))
                                                (rule "leq_literals" (formula "19") (term "0"))
                                                (rule "concrete_or_2" (formula "19"))
                                                (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "16"))
                                                (rule "polySimp_rightDist" (formula "41") (term "0,0"))
                                                (rule "mul_literals" (formula "41") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "41") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                                                (rule "add_literals" (formula "41") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "41") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "53"))
                                                (rule "polySimp_mulAssoc" (formula "15") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "15") (term "0,0"))
                                                (rule "concrete_or_2" (formula "15") (term "0"))
                                                (rule "neg_literal" (formula "15") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "15") (term "0,0"))
                                                (rule "qeq_literals" (formula "15") (term "0"))
                                                (rule "concrete_or_2" (formula "15"))
                                                (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "17"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                                (rule "mul_literals" (formula "34") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "34") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "17"))
                                                (rule "polySimp_rightDist" (formula "60") (term "0,0"))
                                                (rule "mul_literals" (formula "60") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "60") (term "0,0"))
                                                (rule "add_literals" (formula "60") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "60") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "60"))
                                                (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "60") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "leq_literals" (formula "60") (term "0,0"))
                                                (rule "concrete_or_2" (formula "60") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0"))
                                                (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                                                (rule "neg_literal" (formula "60") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "60") (term "0,0"))
                                                (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "60") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "60") (term "0,0"))
                                                (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "60") (term "0,0"))
                                                (rule "qeq_literals" (formula "60") (term "0"))
                                                (rule "concrete_or_2" (formula "60"))
                                                (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                                (rule "times_zero_1" (formula "24") (term "0,0"))
                                                (rule "add_zero_left" (formula "24") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                (rule "mul_literals" (formula "24") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "20"))
                                                (rule "leq_literals" (formula "24") (term "0"))
                                                (rule "concrete_or_1" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "47"))
                                                (rule "times_zero_1" (formula "46") (term "0,0"))
                                                (rule "add_zero_left" (formula "46") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                                (rule "mul_literals" (formula "46") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "20"))
                                                (rule "leq_literals" (formula "46") (term "0"))
                                                (rule "concrete_or_1" (formula "46"))
                                                (rule "true_left" (formula "46"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "60"))
                                                (rule "mul_literals" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "mul_literals" (formula "2") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "21"))
                                                (rule "leq_literals" (formula "2") (term "0"))
                                                (rule "concrete_or_1" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "43"))
                                                (rule "times_zero_1" (formula "41") (term "0,0"))
                                                (rule "add_zero_left" (formula "41") (term "0"))
                                                (rule "inEqSimp_subsumption6" (formula "41") (ifseqformula "20"))
                                                (rule "mul_literals" (formula "41") (term "1,1,0"))
                                                (rule "greater_literals" (formula "41") (term "0,0"))
                                                (rule "concrete_and_1" (formula "41") (term "0"))
                                                (rule "leq_literals" (formula "41") (term "0"))
                                                (rule "concrete_or_1" (formula "41"))
                                                (rule "true_left" (formula "41"))
                                                (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "34"))
                                                (rule "times_zero_1" (formula "32") (term "0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0"))
                                                (rule "inEqSimp_subsumption6" (formula "32") (ifseqformula "20"))
                                                (rule "mul_literals" (formula "32") (term "1,1,0"))
                                                (rule "greater_literals" (formula "32") (term "0,0"))
                                                (rule "concrete_and_1" (formula "32") (term "0"))
                                                (rule "leq_literals" (formula "32") (term "0"))
                                                (rule "concrete_or_1" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "div_axiom" (formula "66") (term "0,1,1,1") (inst "quotient=quotient_1"))
                                                (rule "equal_literals" (formula "66") (term "0"))
                                                (rule "concrete_or_2" (formula "66"))
                                                (rule "mul_literals" (formula "66") (term "1,1,1,1"))
                                                (rule "qeq_literals" (formula "66") (term "0,1"))
                                                (rule "ifthenelse_true_for" (formula "66") (term "1"))
                                                (rule "andLeft" (formula "66"))
                                                (rule "andLeft" (formula "66"))
                                                (rule "polySimp_addAssoc" (formula "68") (term "0,1"))
                                                (rule "add_literals" (formula "68") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "68") (term "1"))
                                                (rule "add_literals" (formula "68") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "67"))
                                                (rule "polySimp_mulLiterals" (formula "67") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "67") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "68"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                (rule "applyEq" (formula "69") (term "0,1,1,0") (ifseqformula "66"))
                                                (rule "polySimp_addComm1" (formula "69") (term "1,0"))
                                                (rule "applyEq" (formula "70") (term "0,1,1,0") (ifseqformula "66"))
                                                (rule "polySimp_addComm1" (formula "70") (term "1,0"))
                                                (rule "applyEqRigid" (formula "69") (term "0,1,1,1") (ifseqformula "66"))
                                                (rule "polySimp_addComm1" (formula "69") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "67"))
                                                (rule "polySimp_mulComm0" (formula "67") (term "1"))
                                                (rule "polySimp_rightDist" (formula "67") (term "1"))
                                                (rule "mul_literals" (formula "67") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "67") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "68"))
                                                (rule "polySimp_mulComm0" (formula "68") (term "1"))
                                                (rule "polySimp_rightDist" (formula "68") (term "1"))
                                                (rule "mul_literals" (formula "68") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,1"))
                                                (rule "elimGcdLeq_antec" (formula "68") (inst "elimGcdRightDiv=add(Z(0(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "68") (term "0,0"))
                                                (rule "concrete_or_2" (formula "68") (term "0"))
                                                (rule "neg_literal" (formula "68") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0"))
                                                (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "68") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "68") (term "0,0,0"))
                                                (rule "add_literals" (formula "68") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "68") (term "0,0,0"))
                                                (rule "add_literals" (formula "68") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0"))
                                                (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "68") (term "0,0"))
                                                (rule "qeq_literals" (formula "68") (term "0"))
                                                (rule "concrete_or_2" (formula "68"))
                                                (rule "elimGcdGeq_antec" (formula "67") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "67") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "67") (term "0,0"))
                                                (rule "concrete_or_2" (formula "67") (term "0"))
                                                (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "67") (term "0,0"))
                                                (rule "add_literals" (formula "67") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "67") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "67") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "67") (term "0,0,0"))
                                                (rule "add_literals" (formula "67") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "67") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "67") (term "0,0,0"))
                                                (rule "add_literals" (formula "67") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "67") (term "0,0"))
                                                (rule "add_literals" (formula "67") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "67") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "67") (term "0,0"))
                                                (rule "leq_literals" (formula "67") (term "0"))
                                                (rule "concrete_or_2" (formula "67"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "68"))
                                                (rule "mul_literals" (formula "2") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "mul_literals" (formula "2") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "2") (term "0,0"))
                                                (rule "concrete_or_2" (formula "2") (term "0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0"))
                                                (rule "leq_literals" (formula "2") (term "0"))
                                                (rule "concrete_or_2" (formula "2"))
                                                (rule "inEqSimp_exactShadow3" (formula "68") (ifseqformula "60"))
                                                (rule "polySimp_rightDist" (formula "68") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0"))
                                                (rule "mul_literals" (formula "68") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                (rule "add_literals" (formula "68") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "68"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "68") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                                (rule "neg_literal" (formula "68") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "68") (term "0,0"))
                                                (rule "concrete_or_2" (formula "68") (term "0"))
                                                (rule "mul_literals" (formula "68") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "68") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "68") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0"))
                                                (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "68") (term "0,0"))
                                                (rule "qeq_literals" (formula "68") (term "0"))
                                                (rule "concrete_or_2" (formula "68"))
                                                (rule "inEqSimp_exactShadow3" (formula "69") (ifseqformula "61"))
                                                (rule "polySimp_rightDist" (formula "69") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0"))
                                                (rule "mul_literals" (formula "69") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "69"))
                                                (rule "polySimp_mulComm0" (formula "69") (term "1"))
                                                (rule "polySimp_rightDist" (formula "69") (term "1"))
                                                (rule "mul_literals" (formula "69") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "69") (term "1,1"))
                                                (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "68"))
                                                (rule "applyEq" (formula "70") (term "0,1,1") (ifseqformula "2"))
                                                (rule "mul_literals" (formula "70") (term "1,1"))
                                                (rule "add_literals" (formula "70") (term "1"))
                                                (rule "applyEq" (formula "71") (term "0,1,1") (ifseqformula "2"))
                                                (rule "mul_literals" (formula "71") (term "1,1"))
                                                (rule "add_literals" (formula "71") (term "1"))
                                                (rule "applyEq" (formula "72") (term "0,1,1") (ifseqformula "2"))
                                                (rule "mul_literals" (formula "72") (term "1,1"))
                                                (rule "add_literals" (formula "72") (term "1"))
                                                (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEqRigid" (formula "68") (term "0") (ifseqformula "2"))
                                                (rule "leq_literals" (formula "68"))
                                                (rule "true_left" (formula "68"))
                                                (rule "applyEq" (formula "71") (term "0,1,0,1,0") (ifseqformula "2"))
                                                (rule "mul_literals" (formula "71") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "71") (term "0,1,0"))
                                                (rule "applyEq" (formula "67") (term "1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "72") (term "0,1,0,1,0") (ifseqformula "2"))
                                                (rule "mul_literals" (formula "72") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "72") (term "0,1,0"))
                                                (rule "applyEq" (formula "71") (term "0,1,0,1,1") (ifseqformula "2"))
                                                (rule "mul_literals" (formula "71") (term "1,0,1,1"))
                                                (rule "add_literals" (formula "71") (term "0,1,1"))
                                                (rule "inEqSimp_contradEq3" (formula "71") (term "1") (ifseqformula "8"))
                                                (rule "polySimp_rightDist" (formula "71") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,1"))
                                                (rule "mul_literals" (formula "71") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "71") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "71") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "71") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "71") (term "0,0,1"))
                                                (rule "add_literals" (formula "71") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "71") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "71") (term "0,0,1"))
                                                (rule "qeq_literals" (formula "71") (term "0,1"))
                                                (rule "concrete_and_2" (formula "71") (term "1"))
                                                (rule "concrete_impl_3" (formula "71"))
                                                (rule "notLeft" (formula "71"))
                                                (rule "inEqSimp_geqRight" (formula "73"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "replace_known_left" (formula "72") (term "0") (ifseqformula "1"))
                                                (rule "concrete_impl_1" (formula "72"))
                                                (rule "applyEq" (formula "66") (term "0") (ifseqformula "72"))
                                                (rule "leq_literals" (formula "66"))
                                                (rule "true_left" (formula "66"))
                                                (rule "applyEq" (formula "8") (term "0") (ifseqformula "71"))
                                                (rule "inEqSimp_homoInEq1" (formula "8"))
                                                (rule "times_zero_2" (formula "8") (term "1,0"))
                                                (rule "add_zero_right" (formula "8") (term "0"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "71"))
                                                (rule "inEqSimp_homoInEq0" (formula "9"))
                                                (rule "times_zero_2" (formula "9") (term "1,0"))
                                                (rule "add_zero_right" (formula "9") (term "0"))
                                                (rule "applyEq" (formula "66") (term "0") (ifseqformula "71"))
                                                (rule "qeq_literals" (formula "66"))
                                                (rule "true_left" (formula "66"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                (rule "mul_literals" (formula "8") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                (rule "mul_literals" (formula "9") (term "1"))
                                                (rule "inEqSimp_subsumption0" (formula "69") (ifseqformula "61"))
                                                (rule "leq_literals" (formula "69") (term "0"))
                                                (rule "concrete_or_1" (formula "69"))
                                                (rule "true_left" (formula "69"))
                                                (rule "inEqSimp_subsumption1" (formula "68") (ifseqformula "4"))
                                                (rule "leq_literals" (formula "68") (term "0"))
                                                (rule "concrete_or_1" (formula "68"))
                                                (rule "true_left" (formula "68"))
                                                (rule "inEqSimp_subsumption6" (formula "9") (ifseqformula "4"))
                                                (rule "mul_literals" (formula "9") (term "1,1,0"))
                                                (rule "greater_literals" (formula "9") (term "0,0"))
                                                (rule "concrete_and_1" (formula "9") (term "0"))
                                                (rule "leq_literals" (formula "9") (term "0"))
                                                (rule "concrete_or_1" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "inEqSimp_contradInEq5" (formula "8") (ifseqformula "5"))
                                                (rule "times_zero_1" (formula "8") (term "1,1,0"))
                                                (rule "greater_literals" (formula "8") (term "0,0"))
                                                (rule "concrete_impl_1" (formula "8") (term "0"))
                                                (rule "qeq_literals" (formula "8") (term "0"))
                                                (rule "concrete_and_2" (formula "8"))
                                                (rule "closeFalse" (formula "8"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                                    (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                                    (rule "concrete_or_2" (formula "1") (term "0"))
                                    (rule "concrete_not_2" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "eqClose" (formula "56") (term "0,0"))
                                    (rule "expand_inShort" (formula "32"))
                                    (rule "expand_inInt" (formula "29"))
                                    (rule "expand_inInt" (formula "15"))
                                    (rule "expand_inInt" (formula "16"))
                                    (rule "expand_inInt" (formula "44"))
                                    (rule "expand_inInt" (formula "45"))
                                    (rule "replace_short_MAX" (formula "32") (term "1,0"))
                                    (rule "replace_short_MIN" (formula "32") (term "0,1"))
                                    (rule "replace_int_MAX" (formula "29") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "29") (term "0,1"))
                                    (rule "replace_int_MAX" (formula "15") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "15") (term "0,1"))
                                    (rule "replace_int_MAX" (formula "16") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "16") (term "0,1"))
                                    (rule "replace_int_MIN" (formula "44") (term "0,1"))
                                    (rule "replace_int_MAX" (formula "44") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "45") (term "0,1"))
                                    (rule "replace_int_MAX" (formula "45") (term "1,0"))
                                    (rule "andLeft" (formula "32"))
                                    (rule "andLeft" (formula "29"))
                                    (rule "andLeft" (formula "15"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "andLeft" (formula "48"))
                                    (rule "andLeft" (formula "50"))
                                    (rule "allRight" (formula "62") (inst "sk=f_0"))
                                    (rule "allRight" (formula "62") (inst "sk=o_0"))
                                    (rule "closeTrue" (formula "62"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                                 (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0"))
                                 (rule "concrete_not_2" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "expand_inInt" (formula "44"))
                                 (rule "expand_inInt" (formula "15"))
                                 (rule "expand_inInt" (formula "16"))
                                 (rule "expand_inInt" (formula "45"))
                                 (rule "expand_inShort" (formula "32"))
                                 (rule "expand_inInt" (formula "29"))
                                 (rule "replace_int_MIN" (formula "44") (term "0,1"))
                                 (rule "replace_int_MAX" (formula "44") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "15") (term "0,1"))
                                 (rule "replace_int_MAX" (formula "15") (term "1,0"))
                                 (rule "replace_int_MAX" (formula "16") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "16") (term "0,1"))
                                 (rule "replace_int_MAX" (formula "45") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "45") (term "0,1"))
                                 (rule "replace_short_MAX" (formula "32") (term "1,0"))
                                 (rule "replace_short_MIN" (formula "32") (term "0,1"))
                                 (rule "replace_int_MIN" (formula "29") (term "0,1"))
                                 (rule "replace_int_MAX" (formula "29") (term "1,0"))
                                 (rule "andLeft" (formula "44"))
                                 (rule "andLeft" (formula "15"))
                                 (rule "andLeft" (formula "17"))
                                 (rule "andLeft" (formula "48"))
                                 (rule "andLeft" (formula "34"))
                                 (rule "andLeft" (formula "31"))
                                 (rule "precOfInt" (formula "62"))
                                 (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "52") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "52") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "10") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "44"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "47") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "25") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "25") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "46") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "62") (term "0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,1,1"))
                                 (rule "inEqSimp_gtToGeq" (formula "62") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "62") (term "0,0,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "62") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "62") (term "0,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "49"))
                                 (rule "inEqSimp_commuteLeq" (formula "16"))
                                 (rule "inEqSimp_commuteLeq" (formula "18"))
                                 (rule "inEqSimp_commuteLeq" (formula "51"))
                                 (rule "inEqSimp_commuteLeq" (formula "36"))
                                 (rule "inEqSimp_commuteLeq" (formula "32"))
                                 (rule "inEqSimp_ltToLeq" (formula "62") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "62") (term "0"))
                                 (rule "applyEq" (formula "22") (term "0,1,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "44") (term "0,1,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "62") (term "1,2,1,0,1") (ifseqformula "23"))
                                 (rule "applyEq" (formula "56") (term "1") (ifseqformula "28"))
                                 (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "25") (term "1,0,1,0,1,0,1,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "39") (term "0,1,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "8") (term "0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "47") (term "1,0,1,1,0,0,1") (ifseqformula "28"))
                                 (rule "applyEq" (formula "36") (term "0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "37") (term "0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "35") (term "0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "25") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "59") (term "0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "13") (term "0,0,1,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "47") (term "1,0,1,1,0,1,1") (ifseqformula "28"))
                                 (rule "applyEq" (formula "9") (term "0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "46") (term "1,0,1,1,0,1") (ifseqformula "28"))
                                 (rule "applyEq" (formula "10") (term "1,0,1,0,1,0,1,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "52") (term "0,1,0,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "25") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "60") (term "1,2,0,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "10") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "25") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "11") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "10") (term "0,0,1,0,0,0,0,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "20") (term "0,0,1,0,0,0,0,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "11") (term "0,0,1,0,0,0,0,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "46") (term "0,1,0,0,0,0,0,0,1") (ifseqformula "23"))
                                 (rule "applyEq" (formula "25") (term "0,0,1,0,0,0,0,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "25") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "60") (term "1,2,0,1,0,0,1") (ifseqformula "23"))
                                 (rule "jmod_axiom" (formula "33") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                 (rule "jmod_axiom" (formula "44") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "33"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                 (rule "polySimp_sepNegMonomial" (formula "44"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                 (rule "mul_literals" (formula "19") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "45") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "60") (term "0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "60") (term "0,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "60") (term "0,0,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "60") (term "0,1,0,0,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "60") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "60") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "60") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "43"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "38"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "60") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1"))
                                 (rule "mul_literals" (formula "60") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "60") (term "1,1,1"))
                                 (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "19"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                 (rule "concrete_or_1" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "33"))
                                 (rule "leq_literals" (formula "9") (term "0"))
                                 (rule "concrete_or_1" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "8"))
                                 (rule "leq_literals" (formula "33") (term "0"))
                                 (rule "concrete_or_1" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "39"))
                                 (rule "leq_literals" (formula "45") (term "0"))
                                 (rule "concrete_or_1" (formula "45"))
                                 (rule "true_left" (formula "45"))
                                 (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "8"))
                                 (rule "leq_literals" (formula "33") (term "0"))
                                 (rule "concrete_or_1" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "35"))
                                 (rule "leq_literals" (formula "29") (term "0"))
                                 (rule "concrete_or_1" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "elimGcdGeq" (formula "23") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "23") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "23") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "23") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "23") (term "1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "23") (term "0,1,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "23") (term "0,1,1,0,0,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "23") (term "1,1,0,0,0,0,1,1,0"))
                                 (rule "elimGcdGeq" (formula "41") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,0,1,0,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,1,0,0,1,1"))
                                 (rule "sub_literals" (formula "41") (term "0,0,0,0,0,0,0,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "41") (term "0,0,0,1,0,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0,0,1,0,0,1,1"))
                                 (rule "add_zero_left" (formula "41") (term "0,0,1,0,1,0,0,1,1"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,1,0,0,1,1"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,0,0,1,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "41") (term "0,1,0,1,0,0,1,1"))
                                 (rule "add_literals" (formula "41") (term "1,0,1,0,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "41") (term "0,1,0,1,0,0,1,1"))
                                 (rule "leq_literals" (formula "41") (term "1,0,1,0,0,1,1"))
                                 (rule "concrete_and_3" (formula "41") (term "0,1,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,1,0,0,1,1"))
                                 (rule "add_literals" (formula "41") (term "1,1,0,0,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,1,1"))
                                 (rule "qeq_literals" (formula "41") (term "0,1,0,0,1,1"))
                                 (rule "ifthenelse_true_for" (formula "41") (term "1,0,0,1,1"))
                                 (rule "elimGcdGeq" (formula "23") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "23") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "23") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "23") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "23") (term "0,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "23") (term "0,0,0,0,0,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "23") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "elimGcdLeq" (formula "23") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "23") (term "1,0,1,1,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "23") (term "0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "23") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "23") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "23") (term "0,1,1,0,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "23") (term "1,1,0,0,0,1,1,0"))
                                 (rule "elimGcdLeq" (formula "23") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "mul_literals" (formula "23") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "23") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "23") (term "0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "23") (term "0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "23") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "23") (term "0,0,1,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "23") (term "0,1,0,0,1,1,0"))
                                 (rule "newSym_eq" (formula "30") (inst "l=l_0") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                 (rule "times_zero_1" (formula "30") (term "1,1"))
                                 (rule "add_zero_right" (formula "30") (term "1"))
                                 (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "30"))
                                 (rule "eqSymm" (formula "31"))
                                 (rule "applyEq" (formula "55") (term "0,0,1,1,1") (ifseqformula "31"))
                                 (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,1,1,1"))
                                 (rule "polySimp_addComm1" (formula "55") (term "0,0,1,1,1"))
                                 (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "31"))
                                 (rule "inEqSimp_homoInEq0" (formula "41") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,0"))
                                 (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "31"))
                                 (rule "applyEq" (formula "55") (term "1,1,1,1,1") (ifseqformula "31"))
                                 (rule "polySimp_addComm0" (formula "55") (term "1,1,1,1"))
                                 (rule "applyEq" (formula "42") (term "1,1,0,0,0,1") (ifseqformula "31"))
                                 (rule "applyEq" (formula "35") (term "0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "55") (term "1,1,0,0,0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "41") (term "1,1,0,0,1") (ifseqformula "31"))
                                 (rule "applyEq" (formula "55") (term "1,1,0,0,1") (ifseqformula "31"))
                                 (rule "applyEq" (formula "28") (term "0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "31"))
                                 (rule "inEqSimp_homoInEq1" (formula "42") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                 (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "29") (term "1") (ifseqformula "31"))
                                 (rule "applyEq" (formula "55") (term "0,1,0,0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "55") (term "1,0,2,1,1,1") (ifseqformula "31"))
                                 (rule "polySimp_addComm0" (formula "55") (term "0,2,1,1,1"))
                                 (rule "applyEq" (formula "55") (term "0,1,0,1") (ifseqformula "31"))
                                 (rule "applyEq" (formula "55") (term "0,0,2,0,1") (ifseqformula "31"))
                                 (rule "applyEq" (formula "55") (term "0,0,2,0,0") (ifseqformula "31"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,1,1"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,0,1,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,1,1,1"))
                                 (rule "mul_literals" (formula "55") (term "0,1,0,1,1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0"))
                                 (rule "elimGcdLeq_antec" (formula "28") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "neg_literal" (formula "28") (term "0,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "28") (term "0,0"))
                                 (rule "concrete_or_2" (formula "28") (term "0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "28") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0"))
                                 (rule "qeq_literals" (formula "28") (term "0"))
                                 (rule "concrete_or_2" (formula "28"))
                                 (rule "elimGcdGeq_antec" (formula "35") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,0,1,0"))
                                 (rule "leq_literals" (formula "35") (term "0,0"))
                                 (rule "concrete_or_2" (formula "35") (term "0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0"))
                                 (rule "leq_literals" (formula "35") (term "0"))
                                 (rule "concrete_or_2" (formula "35"))
                                 (rule "elimGcdGeq" (formula "41") (term "1,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "41") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                 (rule "sub_literals" (formula "41") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,1,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,1,0,1,0,0,1"))
                                 (rule "add_literals" (formula "41") (term "1,1,0,1,0,1,0,0,1"))
                                 (rule "times_zero_1" (formula "41") (term "1,0,1,0,1,0,0,1"))
                                 (rule "add_zero_right" (formula "41") (term "0,1,0,1,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "41") (term "1,1,0,0,0,1,0,0,1"))
                                 (rule "times_zero_1" (formula "41") (term "1,0,0,0,1,0,0,1"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,0,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0,1,0,0,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "41") (term "0,1,0,1,0,0,1"))
                                 (rule "add_literals" (formula "41") (term "1,0,1,0,1,0,0,1"))
                                 (rule "times_zero_1" (formula "41") (term "0,1,0,1,0,0,1"))
                                 (rule "leq_literals" (formula "41") (term "1,0,1,0,0,1"))
                                 (rule "concrete_and_3" (formula "41") (term "0,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "41") (term "1,1,0,0,1,0,0,1"))
                                 (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0,1"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,1"))
                                 (rule "qeq_literals" (formula "41") (term "0,1,0,0,1"))
                                 (rule "ifthenelse_true_for" (formula "41") (term "1,0,0,1"))
                                 (rule "elimGcdGeq" (formula "42") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                 (rule "sub_literals" (formula "42") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "42") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,1,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,1,0,1,0,0,0,1"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,1,0,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,1,0,1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "42") (term "0,1,0,1,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,0,1,0,0,0,1"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,0,0,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0,0,1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "42") (term "0,0,0,1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,0,1,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "42") (term "0,1,0,1,0,0,0,1"))
                                 (rule "add_literals" (formula "42") (term "1,0,1,0,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "42") (term "0,1,0,1,0,0,0,1"))
                                 (rule "leq_literals" (formula "42") (term "1,0,1,0,0,0,1"))
                                 (rule "concrete_and_3" (formula "42") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,1,0,0,0,1"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,0,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0,1"))
                                 (rule "qeq_literals" (formula "42") (term "0,1,0,0,0,1"))
                                 (rule "ifthenelse_true_for" (formula "42") (term "1,0,0,0,1"))
                                 (rule "newSym_eq" (formula "40") (inst "l=l_1") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                 (rule "times_zero_1" (formula "40") (term "1,1"))
                                 (rule "add_zero_right" (formula "40") (term "1"))
                                 (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "40"))
                                 (rule "eqSymm" (formula "41"))
                                 (rule "applyEqRigid" (formula "42") (term "0,0") (ifseqformula "41"))
                                 (rule "inEqSimp_homoInEq1" (formula "42") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                 (rule "applyEqRigid" (formula "43") (term "1,1,0,0,0,1,1") (ifseqformula "41"))
                                 (rule "applyEq" (formula "56") (term "0,1,1,1,1,1") (ifseqformula "41"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,1,1"))
                                 (rule "polySimp_addComm0" (formula "56") (term "1,1,1,1"))
                                 (rule "applyEqRigid" (formula "56") (term "0,0,1,1,1") (ifseqformula "41"))
                                 (rule "inEqSimp_homoInEq0" (formula "56") (term "0,1,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,1,1,1"))
                                 (rule "polySimp_addComm1" (formula "56") (term "0,0,1,1,1"))
                                 (rule "applyEq" (formula "47") (term "0,1,1,0") (ifseqformula "41"))
                                 (rule "applyEqRigid" (formula "48") (term "0,1,0") (ifseqformula "41"))
                                 (rule "applyEqRigid" (formula "39") (term "1,1") (ifseqformula "41"))
                                 (rule "applyEq" (formula "42") (term "1,1,0,0,0,1") (ifseqformula "41"))
                                 (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "41"))
                                 (rule "applyEqRigid" (formula "47") (term "0,0,1") (ifseqformula "41"))
                                 (rule "applyEqRigid" (formula "43") (term "0,0") (ifseqformula "41"))
                                 (rule "inEqSimp_homoInEq0" (formula "43") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0"))
                                 (rule "applyEq" (formula "50") (term "0,2,0") (ifseqformula "41"))
                                 (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "41"))
                                 (rule "applyEq" (formula "51") (term "0,2,0") (ifseqformula "41"))
                                 (rule "applyEqRigid" (formula "40") (term "0,0") (ifseqformula "41"))
                                 (rule "applyEq" (formula "56") (term "0,1,0,2,1,1,1") (ifseqformula "41"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,0,2,1,1,1"))
                                 (rule "polySimp_addComm0" (formula "56") (term "0,2,1,1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,1,1,1"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,1,1,1"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,1,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,1,1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0"))
                                 (rule "elimGcdLeq_antec" (formula "44") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0,1,0"))
                                 (rule "neg_literal" (formula "44") (term "0,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "44") (term "0,0"))
                                 (rule "concrete_or_2" (formula "44") (term "0"))
                                 (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "44") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0"))
                                 (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "44") (term "0,0"))
                                 (rule "qeq_literals" (formula "44") (term "0"))
                                 (rule "concrete_or_2" (formula "44"))
                                 (rule "elimGcdGeq_antec" (formula "38") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,0,1,0"))
                                 (rule "leq_literals" (formula "38") (term "0,0"))
                                 (rule "concrete_or_2" (formula "38") (term "0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0"))
                                 (rule "leq_literals" (formula "38") (term "0"))
                                 (rule "concrete_or_2" (formula "38"))
                                 (rule "elimGcdLeq" (formula "42") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "sub_literals" (formula "42") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,0,0,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "42") (term "0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "0,0,1,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,1,0,0"))
                                 (rule "add_literals" (formula "42") (term "0,1,0,0"))
                                 (rule "qeq_literals" (formula "42") (term "1,0,0"))
                                 (rule "concrete_and_3" (formula "42") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "42") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "42") (term "0,0,0"))
                                 (rule "add_literals" (formula "42") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "42") (term "0,0,0"))
                                 (rule "leq_literals" (formula "42") (term "0,0"))
                                 (rule "ifthenelse_true_for" (formula "42") (term "0"))
                                 (rule "elimGcdLeq" (formula "43") (term "0,0,0,1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "43") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                                 (rule "sub_literals" (formula "43") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,1,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,1,0,0,0,0,1,1"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,1,0,0,0,0,1,1"))
                                 (rule "add_zero_right" (formula "43") (term "0,1,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,0,0,0,0,0,1,1"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0,0,1,1"))
                                 (rule "add_zero_right" (formula "43") (term "0,0,0,0,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "0,0,1,0,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "43") (term "0,0,0,1,0,0,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,1,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,1,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,1,0,0,0,0,1,1"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,1,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "43") (term "0,1,0,0,0,0,1,1"))
                                 (rule "qeq_literals" (formula "43") (term "1,0,0,0,0,1,1"))
                                 (rule "concrete_and_3" (formula "43") (term "0,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0,1,1"))
                                 (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "43") (term "0,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "43") (term "1,0,0,0,0,0,1,1"))
                                 (rule "times_zero_1" (formula "43") (term "0,0,0,0,0,1,1"))
                                 (rule "leq_literals" (formula "43") (term "0,0,0,0,1,1"))
                                 (rule "ifthenelse_true_for" (formula "43") (term "0,0,0,1,1"))
                                 (rule "elimGcdLeq" (formula "42") (term "0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                 (rule "sub_literals" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "42") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,0,0,0,0,0,1"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,0,1"))
                                 (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,1,0,0,0,0,1"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,1,0,0,0,0,1"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,1,0,0,0,0,1"))
                                 (rule "add_zero_right" (formula "42") (term "0,1,0,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "42") (term "0,0,1,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "42") (term "0,0,0,1,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,0,1,0,0,0,0,1"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,1,0,0,0,0,1"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,1,0,0,0,0,1"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,1,0,0,0,0,1"))
                                 (rule "add_literals" (formula "42") (term "0,1,0,0,0,0,1"))
                                 (rule "qeq_literals" (formula "42") (term "1,0,0,0,0,1"))
                                 (rule "concrete_and_3" (formula "42") (term "0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0,1"))
                                 (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "42") (term "0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "42") (term "1,0,0,0,0,0,1"))
                                 (rule "times_zero_1" (formula "42") (term "0,0,0,0,0,1"))
                                 (rule "leq_literals" (formula "42") (term "0,0,0,0,1"))
                                 (rule "ifthenelse_true_for" (formula "42") (term "0,0,0,1"))
                                 (rule "elimGcdGeq" (formula "43") (term "0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "mul_literals" (formula "43") (term "0,0,0,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "sub_literals" (formula "43") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "43") (term "0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "43") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "0,0,1,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,1,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,1,0,0"))
                                 (rule "leq_literals" (formula "43") (term "1,0,0"))
                                 (rule "concrete_and_3" (formula "43") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "43") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "43") (term "0,0,0"))
                                 (rule "add_literals" (formula "43") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "43") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "43") (term "0,0"))
                                 (rule "ifthenelse_true_for" (formula "43") (term "0"))
                                 (rule "elimGcdGeq" (formula "56") (term "0,1,1,1") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,0,1,0,0,1,1,1"))
                                 (rule "mul_literals" (formula "56") (term "0,0,0,0,0,1,0,0,1,1,1"))
                                 (rule "sub_literals" (formula "56") (term "0,0,0,0,0,0,0,0,1,1,1"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0,0,0,1,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0,0,1,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "56") (term "0,1,0,0,1,1,1"))
                                 (rule "add_literals" (formula "56") (term "1,1,0,1,0,0,1,1,1"))
                                 (rule "times_zero_1" (formula "56") (term "1,0,1,0,0,1,1,1"))
                                 (rule "add_zero_right" (formula "56") (term "0,1,0,0,1,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "56") (term "0,0,0,0,1,1,1"))
                                 (rule "add_literals" (formula "56") (term "1,1,0,0,0,0,1,1,1"))
                                 (rule "times_zero_1" (formula "56") (term "1,0,0,0,0,1,1,1"))
                                 (rule "add_zero_right" (formula "56") (term "0,0,0,0,1,1,1"))
                                 (rule "polySimp_rightDist" (formula "56") (term "0,0,1,0,0,1,1,1"))
                                 (rule "mul_literals" (formula "56") (term "0,0,0,1,0,0,1,1,1"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0,1,1,1"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0,1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "0,1,0,0,1,1,1"))
                                 (rule "polySimp_addComm1" (formula "56") (term "0,0,1,0,0,1,1,1"))
                                 (rule "add_literals" (formula "56") (term "0,0,0,1,0,0,1,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "56") (term "0,1,0,0,1,1,1"))
                                 (rule "add_literals" (formula "56") (term "1,1,0,1,0,0,1,1,1"))
                                 (rule "times_zero_1" (formula "56") (term "1,0,1,0,0,1,1,1"))
                                 (rule "add_zero_right" (formula "56") (term "0,1,0,0,1,1,1"))
                                 (rule "leq_literals" (formula "56") (term "1,0,0,1,1,1"))
                                 (rule "concrete_and_3" (formula "56") (term "0,0,1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,1,1,1"))
                                 (rule "add_literals" (formula "56") (term "0,0,0,0,0,1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,1,1,1"))
                                 (rule "polySimp_addComm1" (formula "56") (term "0,0,0,0,1,1,1"))
                                 (rule "add_literals" (formula "56") (term "0,0,0,0,0,1,1,1"))
                                 (rule "add_zero_left" (formula "56") (term "0,0,0,0,1,1,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "56") (term "0,0,0,1,1,1"))
                                 (rule "add_literals" (formula "56") (term "1,0,0,0,1,1,1"))
                                 (rule "times_zero_1" (formula "56") (term "0,0,0,1,1,1"))
                                 (rule "qeq_literals" (formula "56") (term "0,0,1,1,1"))
                                 (rule "ifthenelse_true_for" (formula "56") (term "0,1,1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "32"))
                                 (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "add_literals" (formula "20") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "33"))
                                 (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0"))
                                 (rule "add_literals" (formula "40") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "40") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                 (rule "neg_literal" (formula "40") (term "0,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "40") (term "0,0"))
                                 (rule "concrete_or_2" (formula "40") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                 (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "40") (term "0,0"))
                                 (rule "qeq_literals" (formula "40") (term "0"))
                                 (rule "concrete_or_2" (formula "40"))
                                 (rule "inEqSimp_subsumption0" (formula "46") (ifseqformula "40"))
                                 (rule "leq_literals" (formula "46") (term "0"))
                                 (rule "concrete_or_1" (formula "46"))
                                 (rule "true_left" (formula "46"))
                                 (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "33"))
                                 (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0"))
                                 (rule "add_literals" (formula "35") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "35") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "leq_literals" (formula "35") (term "0,0"))
                                 (rule "concrete_or_2" (formula "35") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                                 (rule "neg_literal" (formula "35") (term "0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0"))
                                 (rule "qeq_literals" (formula "35") (term "0"))
                                 (rule "concrete_or_2" (formula "35"))
                                 (rule "inEqSimp_subsumption0" (formula "29") (ifseqformula "35"))
                                 (rule "leq_literals" (formula "29") (term "0"))
                                 (rule "concrete_or_1" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "nnf_imp2or" (formula "18") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "10") (term "1,0,1,0"))
                                 (rule "nnf_imp2or" (formula "9") (term "0,1,1,0"))
                                 (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "27"))
                                 (rule "notLeft" (formula "27"))
                                 (rule "nnf_imp2or" (formula "24") (term "0"))
                                 (rule "commute_and" (formula "9") (term "0,0"))
                                 (rule "commute_and" (formula "18") (term "0,0"))
                                 (rule "commute_and" (formula "10") (term "0,0"))
                                 (rule "expand_addJint" (formula "47") (term "1,1,0"))
                                 (rule "polySimp_addComm0" (formula "47") (term "0,1,1,0"))
                                 (rule "expand_addJint" (formula "48") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "48") (term "0,1,0"))
                                 (rule "expand_addJint" (formula "47") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "47") (term "0,0,1"))
                                 (rule "nnf_imp2or" (formula "44") (term "0,0,1"))
                                 (rule "jdiv_axiom" (formula "7") (term "1,0"))
                                 (rule "eqSymm" (formula "7"))
                                 (rule "inEqSimp_subsumption1" (formula "7") (term "0,0") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "7") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "7") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "7") (term "0"))
                                 (rule "eqSymm" (formula "7"))
                                 (rule "applyEq" (formula "10") (term "1,1,1,0,0") (ifseqformula "7"))
                                 (rule "applyEqRigid" (formula "25") (term "1,1,0,0,0,0") (ifseqformula "7"))
                                 (rule "applyEqRigid" (formula "11") (term "1,1,0,0,0,1,0") (ifseqformula "7"))
                                 (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "7"))
                                 (rule "applyEqRigid" (formula "11") (term "1,1,1,0,0") (ifseqformula "7"))
                                 (rule "applyEqRigid" (formula "19") (term "1,1,1,0,0") (ifseqformula "7"))
                                 (rule "nnf_imp2or" (formula "45") (term "0,1,1"))
                                 (rule "nnf_imp2or" (formula "44") (term "0,1"))
                                 (rule "expand_moduloInteger" (formula "48") (term "1,1,0"))
                                 (rule "replace_int_MIN" (formula "48") (term "0,1,1,0"))
                                 (rule "replace_int_RANGE" (formula "48") (term "1,1,1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "48") (term "0,0,1,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "1,0"))
                                 (rule "add_literals" (formula "48") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0,1,1,0"))
                                 (rule "add_literals" (formula "48") (term "0,0,1,1,0"))
                                 (rule "mod_axiom" (formula "48") (term "1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "1,0"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0,1,0"))
                                 (rule "add_literals" (formula "48") (term "0,0,1,0"))
                                 (rule "polyDiv_pullOut" (formula "48") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,2,0,1,1,0"))
                                 (rule "equal_literals" (formula "48") (term "0,0,1,1,0"))
                                 (rule "ifthenelse_false" (formula "48") (term "0,1,1,0"))
                                 (rule "mul_literals" (formula "48") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,1,0"))
                                 (rule "polySimp_addComm0" (formula "48") (term "1,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0,1,1,1,1,0"))
                                 (rule "add_literals" (formula "48") (term "0,0,1,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,1,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0,1,0"))
                                 (rule "add_literals" (formula "48") (term "0,0,1,0"))
                                 (rule "expand_moduloInteger" (formula "49") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "49") (term "0,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "49") (term "0,0,1,1,0"))
                                 (rule "replace_int_RANGE" (formula "49") (term "1,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "49") (term "0,1,1,0"))
                                 (rule "add_literals" (formula "49") (term "0,0,1,1,0"))
                                 (rule "mod_axiom" (formula "49") (term "1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "49") (term "1,0"))
                                 (rule "polySimp_addAssoc" (formula "49") (term "0,1,0"))
                                 (rule "add_literals" (formula "49") (term "0,0,1,0"))
                                 (rule "polyDiv_pullOut" (formula "49") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "49") (term "0,0,1,1,0"))
                                 (rule "ifthenelse_false" (formula "49") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "49") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,1,0"))
                                 (rule "polySimp_addComm0" (formula "49") (term "1,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "49") (term "0,1,1,1,1,0"))
                                 (rule "add_literals" (formula "49") (term "0,0,1,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,1,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "49") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "49") (term "0,1,0"))
                                 (rule "add_literals" (formula "49") (term "0,0,1,0"))
                                 (rule "expand_moduloInteger" (formula "48") (term "0,1"))
                                 (rule "replace_int_MIN" (formula "48") (term "0,0,1"))
                                 (rule "replace_int_RANGE" (formula "48") (term "1,1,0,1"))
                                 (rule "replace_int_HALFRANGE" (formula "48") (term "0,0,1,0,1"))
                                 (rule "polySimp_homoEq" (formula "48") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0,1"))
                                 (rule "mul_literals" (formula "48") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,1,0,1"))
                                 (rule "add_literals" (formula "48") (term "0,0,0,1,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "48") (term "0,0,1"))
                                 (rule "mod_axiom" (formula "48") (term "0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "48") (term "0,1,0,1"))
                                 (rule "mul_literals" (formula "48") (term "0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "48") (term "0,0,0,0,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "48") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1"))
                                 (rule "polySimp_rightDist" (formula "48") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,1"))
                                 (rule "mul_literals" (formula "48") (term "0,0,1,1"))
                                 (rule "polyDiv_pullOut" (formula "48") (term "0,1,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,2,0,1,1,1"))
                                 (rule "equal_literals" (formula "48") (term "0,0,1,1,1"))
                                 (rule "ifthenelse_false" (formula "48") (term "0,1,1,1"))
                                 (rule "mul_literals" (formula "48") (term "1,0,0,0,1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,1,1"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0,0,1,1,1,1"))
                                 (rule "add_literals" (formula "48") (term "0,0,0,1,1,1,1"))
                                 (rule "polySimp_addComm0" (formula "48") (term "1,1,1,1"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,1,1"))
                                 (rule "mul_literals" (formula "48") (term "0,1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "1,1"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0,1,1"))
                                 (rule "add_literals" (formula "48") (term "0,0,1,1"))
                                 (rule "nnf_imp2or" (formula "10") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "25") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "11") (term "0"))
                                 (rule "nnf_imp2or" (formula "19") (term "0"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "45") (term "0,0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "45") (term "0,0,0,0,0,0,0,1"))
                                 (rule "add_zero_left" (formula "45") (term "0,0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0,0,1"))
                                 (rule "nnf_notAnd" (formula "44") (term "0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,1"))
                                 (rule "add_zero_left" (formula "44") (term "0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "44") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1"))
                                 (rule "jdiv_axiom" (formula "30") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "0,0,2,1"))
                                 (rule "eqSymm" (formula "30"))
                                 (rule "applyEq" (formula "30") (term "1") (ifseqformula "31"))
                                 (rule "inEqSimp_subsumption6" (formula "30") (term "0,0") (ifseqformula "37"))
                                 (rule "greater_literals" (formula "30") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "30") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                 (rule "leq_literals" (formula "30") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "30") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "30") (term "0"))
                                 (rule "polyDiv_pullOut" (formula "30") (term "0") (inst "polyDivCoeff=l_0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,2,0"))
                                 (rule "equal_literals" (formula "30") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "30") (term "0"))
                                 (rule "polySimp_pullOutFactor0" (formula "30") (term "0,0,0"))
                                 (rule "add_literals" (formula "30") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "30") (term "0,0,0"))
                                 (rule "div_literals" (formula "30") (term "0,0"))
                                 (rule "add_zero_left" (formula "30") (term "0"))
                                 (rule "eqClose" (formula "30"))
                                 (rule "true_left" (formula "30"))
                                 (rule "nnf_notAnd" (formula "45") (term "0,0,1,1"))
                                 (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "45") (term "0,0,0,0,0,0,1,1"))
                                 (rule "add_zero_left" (formula "45") (term "0,0,0,0,0,1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0,1,1"))
                                 (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0,1,1"))
                                 (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "45") (term "0,0,1,0,0,1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,1,1"))
                                 (rule "mul_literals" (formula "45") (term "1,1,0,0,1,1"))
                                 (rule "ifthenelse_split" (formula "57") (term "0,1"))
                                 (branch "result_2 <= -1 + l_0 * 2 TRUE"
                                    (rule "replace_known_left" (formula "58") (term "0,0,0") (ifseqformula "1"))
                                    (rule "ifthenelse_true" (formula "58") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "58") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "58") (term "1,1,0,1"))
                                    (rule "polySimp_mulAssoc" (formula "58") (term "0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "0,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "58") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "58") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "58") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "58") (term "0,1,1"))
                                    (rule "mul_literals" (formula "58") (term "0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,0,1,1"))
                                    (rule "inEqSimp_subsumption0" (formula "58") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "58") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "58") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "58") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "58") (term "0,0,0"))
                                    (rule "add_literals" (formula "58") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "58") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "58") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "58") (term "0,0"))
                                    (rule "concrete_or_1" (formula "58") (term "0"))
                                    (rule "concrete_and_1" (formula "58"))
                                    (rule "inEqSimp_geqRight" (formula "58"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "49") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                    (rule "add_literals" (formula "49") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                    (rule "mul_literals" (formula "49") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "49") (ifseqformula "38"))
                                    (rule "times_zero_1" (formula "49") (term "1,1,0"))
                                    (rule "greater_literals" (formula "49") (term "0,0"))
                                    (rule "concrete_and_1" (formula "49") (term "0"))
                                    (rule "leq_literals" (formula "49") (term "0"))
                                    (rule "concrete_or_1" (formula "49"))
                                    (rule "true_left" (formula "49"))
                                    (rule "nnf_imp2or" (formula "12") (term "0"))
                                    (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,1,0"))
                                    (rule "double_not" (formula "27") (term "0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "27") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,1,0,1,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,1,0"))
                                    (rule "nnf_imp2or" (formula "13") (term "0,1,0"))
                                    (rule "nnf_imp2or" (formula "27") (term "0,1,1,0"))
                                    (rule "jdiv_axiom" (formula "44") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "0,0,2,1"))
                                    (rule "eqSymm" (formula "44"))
                                    (rule "applyEqRigid" (formula "44") (term "1") (ifseqformula "45"))
                                    (rule "inEqSimp_subsumption6" (formula "44") (term "0,0") (ifseqformula "41"))
                                    (rule "greater_literals" (formula "44") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "44") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                                    (rule "leq_literals" (formula "44") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "44") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "44") (term "0"))
                                    (rule "polyDiv_pullOut" (formula "44") (term "0") (inst "polyDivCoeff=l_1"))
                                    (rule "equal_literals" (formula "44") (term "0,0"))
                                    (rule "ifthenelse_false" (formula "44") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "44") (term "0,0,0"))
                                    (rule "add_literals" (formula "44") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "44") (term "0,0,0"))
                                    (rule "div_literals" (formula "44") (term "0,0"))
                                    (rule "add_zero_left" (formula "44") (term "0"))
                                    (rule "eqClose" (formula "44"))
                                    (rule "true_left" (formula "44"))
                                    (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "28") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "6"))
                                    (rule "insert_constant_value" (formula "28") (term "1,1,0,0,0,0,0,0,0"))
                                    (rule "insert_constant_value" (formula "28") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "insert_constant_value" (formula "28") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "insert_constant_value" (formula "28") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "eqClose" (formula "28") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "concrete_and_3" (formula "28") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "insert_constant_value" (formula "28") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "eqClose" (formula "28") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "concrete_and_3" (formula "28") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "insert_constant_value" (formula "28") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "eqClose" (formula "28") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "concrete_and_3" (formula "28") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "expand_inInt" (formula "28") (term "1,1"))
                                    (rule "expand_inInt" (formula "28") (term "0,1"))
                                    (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "28") (term "0,1,1,1"))
                                    (rule "replace_int_MAX" (formula "28") (term "1,0,1,1"))
                                    (rule "replace_int_MIN" (formula "28") (term "0,1,0,1"))
                                    (rule "replace_int_MAX" (formula "28") (term "1,0,0,1"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "29"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "29"))
                                    (rule "andLeft" (formula "30"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "notLeft" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "notLeft" (formula "28"))
                                    (rule "exLeft" (formula "35") (inst "sk=i_1_2"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "exLeft" (formula "34") (inst "sk=i_2_0"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "eqSymm" (formula "33"))
                                    (rule "eqSymm" (formula "31") (term "1,1,0,1,0"))
                                    (rule "eqSymm" (formula "31") (term "1,0,1,0,1,0"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,0,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "0,2,0,0,0,0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "0,2,0,0,0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "0,2,0,1,0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "0,2,1,1,0,1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,2,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "32"))
                                    (rule "mul_literals" (formula "32") (term "1,0,0"))
                                    (rule "add_literals" (formula "32") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "38"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0"))
                                    (rule "ifthenelse_negated" (formula "33") (term "2,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "41") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "40") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "42"))
                                    (rule "inEqSimp_commuteLeq" (formula "43"))
                                    (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "29"))
                                    (rule "inEqSimp_commuteLeq" (formula "28"))
                                    (rule "inEqSimp_commuteLeq" (formula "37"))
                                    (rule "inEqSimp_commuteLeq" (formula "34"))
                                    (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "41") (term "0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,1,1,0"))
                                    (rule "applyEq" (formula "29") (term "0") (ifseqformula "25"))
                                    (rule "applyEq" (formula "41") (term "1,0,1,0,1,0,1,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "40") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "41") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "25"))
                                    (rule "applyEq" (formula "38") (term "0,0,1,0") (ifseqformula "25"))
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "25"))
                                    (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "25") (term "0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "39") (term "1,0,1,0,1,0,1,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "29") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "40") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "39") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "40") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "40") (term "1,0,1,0,1,0,1,0") (ifseqformula "25"))
                                    (rule "applyEq" (formula "39") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "25"))
                                    (rule "applyEqRigid" (formula "37") (term "0,1,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "35") (term "1") (ifseqformula "25"))
                                    (rule "applyEqRigid" (formula "34") (term "0,1,0") (ifseqformula "25"))
                                    (rule "applyEqRigid" (formula "32") (term "0,1,0") (ifseqformula "25"))
                                    (rule "applyEqRigid" (formula "39") (term "1,0,1,0,1,0,1,0") (ifseqformula "25"))
                                    (rule "applyEqRigid" (formula "32") (term "1,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                    (rule "applyEqRigid" (formula "29") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                    (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "25"))
                                    (rule "applyEq" (formula "39") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "25"))
                                    (rule "applyEqRigid" (formula "39") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                    (rule "applyEqRigid" (formula "38") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                    (rule "applyEqRigid" (formula "38") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "39") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "9"))
                                    (rule "applyEqRigid" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31"))
                                    (rule "mul_literals" (formula "31") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_subsumption0" (formula "39") (ifseqformula "20"))
                                    (rule "leq_literals" (formula "39") (term "0"))
                                    (rule "concrete_or_1" (formula "39"))
                                    (rule "true_left" (formula "39"))
                                    (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "44"))
                                    (rule "leq_literals" (formula "28") (term "0"))
                                    (rule "concrete_or_1" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "elimGcdLeq" (formula "37") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "37") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,1,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,1,0,1,1,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "37") (term "1,0,1,1,0,0,1,1,0"))
                                    (rule "concrete_and_3" (formula "37") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "37") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "37") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "37") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "37") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "37") (term "0,1,1,0,0,1,1,0"))
                                    (rule "ifthenelse_true_for" (formula "37") (term "1,1,0,0,1,1,0"))
                                    (rule "elimGcdGeq" (formula "37") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "sub_literals" (formula "37") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "37") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "37") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0,0,1,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "concrete_and_1" (formula "37") (term "0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "37") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "37") (term "0,0,1,0,0,1,1,0"))
                                    (rule "ifthenelse_true_for" (formula "37") (term "0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "43"))
                                    (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0"))
                                    (rule "add_literals" (formula "31") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "0"))
                                    (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "12") (term "0,1,0"))
                                    (rule "double_not" (formula "12") (term "0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "12") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,1,0,1,0"))
                                    (rule "add_zero_left" (formula "12") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,0"))
                                    (rule "nnf_notAnd" (formula "12") (term "0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "13") (term "0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "13") (term "0,1,0,1,0"))
                                    (rule "double_not" (formula "13") (term "0,0,1,0,1,0"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,0,1,1,0"))
                                    (rule "cut_direct" (formula "56") (term "0"))
                                    (branch "CUT: l_0 <= -1 + l_1 TRUE"
                                       (rule "concrete_impl_1" (formula "57"))
                                       (rule "inEqSimp_contradInEq0" (formula "58") (term "0") (ifseqformula "56"))
                                       (rule "inEqSimp_homoInEq1" (formula "58") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "58") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "58") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "58") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,0"))
                                       (rule "add_literals" (formula "58") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "58") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "58") (term "0,0,0"))
                                       (rule "leq_literals" (formula "58") (term "0,0"))
                                       (rule "concrete_and_2" (formula "58") (term "0"))
                                       (rule "concrete_impl_2" (formula "58"))
                                       (rule "true_left" (formula "58"))
                                       (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "56"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "1") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_false" (formula "1") (term "0"))
                                       (rule "inEqSimp_homoInEq0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "56"))
                                       (rule "times_zero_1" (formula "48") (term "0,0"))
                                       (rule "add_zero_left" (formula "48") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                       (rule "mul_literals" (formula "48") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "48"))
                                       (rule "leq_literals" (formula "52") (term "0"))
                                       (rule "concrete_or_1" (formula "52"))
                                       (rule "true_left" (formula "52"))
                                       (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "53") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0"))
                                       (rule "mul_literals" (formula "53") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "53") (term "0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "53") (term "0,0"))
                                       (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "53") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                       (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                       (rule "polySimp_elimOne" (formula "53") (term "0"))
                                       (rule "inEqSimp_contradEq3" (formula "62") (term "1") (ifseqformula "53"))
                                       (rule "times_zero_1" (formula "62") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "62") (term "0,0,1"))
                                       (rule "qeq_literals" (formula "62") (term "0,1"))
                                       (rule "concrete_and_2" (formula "62") (term "1"))
                                       (rule "concrete_impl_3" (formula "62"))
                                       (rule "notLeft" (formula "62"))
                                       (rule "inEqSimp_leqRight" (formula "63"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                       (rule "mul_literals" (formula "1") (term "0,0,1"))
                                       (rule "replace_known_left" (formula "62") (term "0") (ifseqformula "1"))
                                       (rule "concrete_impl_1" (formula "62"))
                                       (rule "applyEq" (formula "61") (term "0") (ifseqformula "62"))
                                       (rule "inEqSimp_homoInEq1" (formula "61"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "61") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "61") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "61") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "61") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "61") (term "0,0"))
                                       (rule "add_literals" (formula "61") (term "0,0,0"))
                                       (rule "applyEq" (formula "54") (term "0") (ifseqformula "62"))
                                       (rule "inEqSimp_homoInEq0" (formula "54"))
                                       (rule "polySimp_mulComm0" (formula "54") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "54") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "54") (term "0,1,0"))
                                       (rule "mul_literals" (formula "54") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "54") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                                       (rule "add_literals" (formula "54") (term "0,0,0"))
                                       (rule "applyEq" (formula "60") (term "0") (ifseqformula "62"))
                                       (rule "inEqSimp_homoInEq0" (formula "60"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "60") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "60") (term "0,1,0"))
                                       (rule "mul_literals" (formula "60") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "60") (term "1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "60") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "60") (term "0,0"))
                                       (rule "add_literals" (formula "60") (term "0,0,0"))
                                       (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "62"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "2") (term "0,1"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "62"))
                                       (rule "inEqSimp_homoInEq0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "61"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "1"))
                                       (rule "polySimp_rightDist" (formula "61") (term "1"))
                                       (rule "mul_literals" (formula "61") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "61") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "54"))
                                       (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                       (rule "polySimp_rightDist" (formula "54") (term "1"))
                                       (rule "mul_literals" (formula "54") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "60"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1"))
                                       (rule "polySimp_rightDist" (formula "60") (term "1"))
                                       (rule "mul_literals" (formula "60") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "60") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                       (rule "mul_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                       (rule "inEqSimp_subsumption5" (formula "60") (ifseqformula "54"))
                                       (rule "eq_and" (formula "60") (term "0,0"))
                                       (rule "greater_literals" (formula "60") (term "0,0"))
                                       (rule "concrete_and_1" (formula "60") (term "0"))
                                       (rule "polySimp_rightDist" (formula "60") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0"))
                                       (rule "mul_literals" (formula "60") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "60") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0"))
                                       (rule "mul_literals" (formula "60") (term "0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "60") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "60") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "60") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "60") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "60") (term "0,0,0"))
                                       (rule "add_literals" (formula "60") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "60") (term "0,0"))
                                       (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "60") (term "0,0"))
                                       (rule "qeq_literals" (formula "60") (term "0"))
                                       (rule "concrete_or_1" (formula "60"))
                                       (rule "true_left" (formula "60"))
                                       (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=add(add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))),
        l_1),
    mul(l_0, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_1, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                       (rule "leq_literals" (formula "3") (term "0,0"))
                                       (rule "concrete_or_2" (formula "3") (term "0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_2" (formula "3"))
                                       (rule "elimGcdGeq_antec" (formula "54") (inst "elimGcdRightDiv=add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))), l_1)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_1, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                       (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "54") (term "0,0"))
                                       (rule "concrete_or_2" (formula "54") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0"))
                                       (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "54") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "54") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "54") (term "0,0,0"))
                                       (rule "add_literals" (formula "54") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
                                       (rule "add_literals" (formula "54") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0"))
                                       (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "54") (term "0,0"))
                                       (rule "leq_literals" (formula "54") (term "0"))
                                       (rule "concrete_or_2" (formula "54"))
                                       (rule "elimGcdLeq_antec" (formula "60") (inst "elimGcdRightDiv=add(Z(neglit(3(2(8(1(4(7(3(7(0(1(#)))))))))))), l_1)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_1, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "60") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "60") (term "0,0"))
                                       (rule "concrete_or_2" (formula "60") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0"))
                                       (rule "neg_literal" (formula "60") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "60") (term "0,0"))
                                       (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "60") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "60") (term "0,0,0"))
                                       (rule "add_literals" (formula "60") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "60") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "60") (term "0,0,0"))
                                       (rule "add_literals" (formula "60") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "60") (term "0,0"))
                                       (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "60") (term "0,0"))
                                       (rule "qeq_literals" (formula "60") (term "0"))
                                       (rule "concrete_or_2" (formula "60"))
                                       (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "2"))
                                       (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1"))
                                       (rule "mul_literals" (formula "33") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "2"))
                                       (rule "polySimp_rightDist" (formula "49") (term "0,0"))
                                       (rule "mul_literals" (formula "49") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                       (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                       (rule "add_literals" (formula "49") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                       (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                       (rule "polySimp_rightDist" (formula "49") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                       (rule "mul_literals" (formula "49") (term "0,1"))
                                       (rule "elimGcdGeq_antec" (formula "49") (inst "elimGcdRightDiv=add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))), l_0)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_1, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "49") (term "0,0"))
                                       (rule "concrete_or_2" (formula "49") (term "0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0"))
                                       (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "49") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "49") (term "0,0,0"))
                                       (rule "add_literals" (formula "49") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "49") (term "0,0,0"))
                                       (rule "add_literals" (formula "49") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0"))
                                       (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "49") (term "0,0"))
                                       (rule "leq_literals" (formula "49") (term "0"))
                                       (rule "concrete_or_2" (formula "49"))
                                       (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "2"))
                                       (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1"))
                                       (rule "mul_literals" (formula "25") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                       (rule "inEqSimp_exactShadow0" (formula "3") (ifseqformula "63"))
                                       (rule "eq_and" (formula "3") (term "0"))
                                       (rule "greater_literals" (formula "3") (term "0"))
                                       (rule "concrete_impl_1" (formula "3"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "inEqSimp_subsumption6" (formula "3") (ifseqformula "54"))
                                       (rule "greater_literals" (formula "3") (term "0,0"))
                                       (rule "concrete_and_1" (formula "3") (term "0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_1" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "47"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_subsumption5" (formula "1") (ifseqformula "58"))
                                       (rule "greater_literals" (formula "1") (term "1,0,0"))
                                       (rule "concrete_and_3" (formula "1") (term "0,0"))
                                       (rule "greater_literals" (formula "1") (term "0,0"))
                                       (rule "concrete_and_1" (formula "1") (term "0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (rule "concrete_or_1" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "2"))
                                       (rule "mul_literals" (formula "12") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                       (rule "add_literals" (formula "12") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                       (rule "mul_literals" (formula "12") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=div(add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))),
        mul(l_1, Z(2(#)))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                       (rule "leq_literals" (formula "12") (term "0,0"))
                                       (rule "concrete_or_2" (formula "12") (term "0"))
                                       (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                       (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "12") (term "0,0"))
                                       (rule "leq_literals" (formula "12") (term "0"))
                                       (rule "concrete_or_2" (formula "12"))
                                       (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "2"))
                                       (rule "polySimp_rightDist" (formula "59") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0"))
                                       (rule "mul_literals" (formula "59") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "59") (term "0"))
                                       (rule "polySimp_addComm1" (formula "59") (term "0,0"))
                                       (rule "add_literals" (formula "59") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "59"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1"))
                                       (rule "polySimp_rightDist" (formula "59") (term "1"))
                                       (rule "mul_literals" (formula "59") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "59") (term "1,1"))
                                       (rule "inEqSimp_subsumption5" (formula "59") (ifseqformula "58"))
                                       (rule "greater_literals" (formula "59") (term "1,0,0"))
                                       (rule "concrete_and_3" (formula "59") (term "0,0"))
                                       (rule "greater_literals" (formula "59") (term "0,0"))
                                       (rule "concrete_and_1" (formula "59") (term "0"))
                                       (rule "polySimp_rightDist" (formula "59") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0"))
                                       (rule "mul_literals" (formula "59") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "59") (term "1,0"))
                                       (rule "mul_literals" (formula "59") (term "0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "59") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "59") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "59") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "59") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "59") (term "0,0,0"))
                                       (rule "add_literals" (formula "59") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "59") (term "0,0"))
                                       (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "59") (term "0,0"))
                                       (rule "qeq_literals" (formula "59") (term "0"))
                                       (rule "concrete_or_1" (formula "59"))
                                       (rule "true_left" (formula "59"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=add(Z(neglit(3(9(2(7(6(9(4(9(2(4(#)))))))))))), l_1)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_1, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "1") (term "0,0"))
                                       (rule "concrete_or_2" (formula "1") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "leq_literals" (formula "1") (term "0"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "inEqSimp_exactShadow0" (formula "36") (ifseqformula "65"))
                                       (rule "greater_literals" (formula "36") (term "1,0"))
                                       (rule "concrete_and_3" (formula "36") (term "0"))
                                       (rule "greater_literals" (formula "36") (term "0"))
                                       (rule "concrete_impl_1" (formula "36"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "36") (inst "elimGcdRightDiv=add(Z(7(4(6(3(8(4(7(4(1(2(#))))))))))),
    mul(l_1, Z(2(#))))") (inst "elimGcdLeftDiv=i_2_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                       (rule "leq_literals" (formula "36") (term "0,0"))
                                       (rule "concrete_or_2" (formula "36") (term "0"))
                                       (rule "neg_literal" (formula "36") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                                       (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "36") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                                       (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "36") (term "0,0"))
                                       (rule "qeq_literals" (formula "36") (term "0"))
                                       (rule "concrete_or_2" (formula "36"))
                                       (rule "inEqSimp_exactShadow2" (formula "13") (ifseqformula "66"))
                                       (rule "greater_literals" (formula "13") (term "0"))
                                       (rule "concrete_impl_1" (formula "13"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "13") (term "0,0"))
                                       (rule "add_zero_left" (formula "13") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                       (rule "mul_literals" (formula "13") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "60") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "60") (term "0"))
                                       (rule "concrete_and_2" (formula "60"))
                                       (rule "closeFalse" (formula "60"))
                                    )
                                    (branch "CUT: l_0 <= -1 + l_1 FALSE"
                                       (rule "concrete_impl_2" (formula "56"))
                                       (rule "true_left" (formula "56"))
                                       (rule "inEqSimp_leqRight" (formula "62"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "47"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "commute_or" (formula "28") (term "0,0"))
                                       (rule "nnf_imp2or" (formula "29") (term "1,0"))
                                       (rule "nnf_imp2or" (formula "30") (term "1,0,1,0"))
                                       (rule "commute_or" (formula "57") (term "0,0,0,1"))
                                       (rule "cut_direct" (formula "57") (term "0"))
                                       (branch "CUT: l_0 >= 1 + l_1 TRUE"
                                          (rule "concrete_impl_1" (formula "58"))
                                          (rule "andLeft" (formula "58"))
                                          (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "57"))
                                          (rule "ifthenelse_true" (formula "2") (term "0"))
                                          (rule "inEqSimp_homoInEq0" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "57"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (rule "concrete_or_1" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "1"))
                                          (rule "mul_literals" (formula "60") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "60"))
                                          (rule "mul_literals" (formula "60") (term "1"))
                                          (rule "inEqSimp_subsumption6" (formula "60") (ifseqformula "51"))
                                          (rule "greater_literals" (formula "60") (term "0,0"))
                                          (rule "concrete_and_1" (formula "60") (term "0"))
                                          (rule "times_zero_1" (formula "60") (term "1,0"))
                                          (rule "leq_literals" (formula "60") (term "0"))
                                          (rule "concrete_or_1" (formula "60"))
                                          (rule "true_left" (formula "60"))
                                          (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "46"))
                                          (rule "polySimp_rightDist" (formula "56") (term "0,0"))
                                          (rule "mul_literals" (formula "56") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "56") (term "0"))
                                          (rule "add_literals" (formula "56") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "56"))
                                          (rule "polySimp_mulLiterals" (formula "56") (term "0"))
                                          (rule "polySimp_elimOne" (formula "56") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "52") (ifseqformula "56"))
                                          (rule "leq_literals" (formula "52") (term "0"))
                                          (rule "concrete_or_1" (formula "52"))
                                          (rule "true_left" (formula "52"))
                                          (rule "div_axiom" (formula "9") (term "1") (inst "quotient=quotient_0"))
                                          (rule "mul_literals" (formula "9") (term "1,1,1,1,1"))
                                          (rule "qeq_literals" (formula "9") (term "0,1,1"))
                                          (rule "ifthenelse_true_for" (formula "9") (term "1,1"))
                                          (rule "equal_literals" (formula "9") (term "0"))
                                          (rule "concrete_or_2" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "polySimp_addComm1" (formula "11") (term "1"))
                                          (rule "add_literals" (formula "11") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "10"))
                                          (rule "inEqSimp_homoInEq1" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0"))
                                          (rule "applyEqRigid" (formula "16") (term "1,1,0,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "16") (term "1,0,0,0,1,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "32") (term "1,1,1,0,0,1,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "30") (term "1,1,0,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "38"))
                                          (rule "polySimp_addComm1" (formula "38") (term "0"))
                                          (rule "applyEqRigid" (formula "31") (term "1,1,1,0,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "18"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0"))
                                          (rule "applyEqRigid" (formula "32") (term "1,1,1,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "41") (term "1,1,1,0,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "15") (term "1,1,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "40") (term "1,1,1,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "12") (term "1") (ifseqformula "9"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                          (rule "mul_literals" (formula "11") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "38"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                          (rule "mul_literals" (formula "38") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1"))
                                          (rule "mul_literals" (formula "18") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "11"))
                                          (rule "mul_literals" (formula "14") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                          (rule "add_literals" (formula "14") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                          (rule "mul_literals" (formula "14") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "14") (term "0,0"))
                                          (rule "concrete_or_2" (formula "14") (term "0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0"))
                                          (rule "leq_literals" (formula "14") (term "0"))
                                          (rule "concrete_or_2" (formula "14"))
                                          (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "39"))
                                          (rule "times_zero_1" (formula "38") (term "0,0"))
                                          (rule "add_zero_left" (formula "38") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                          (rule "mul_literals" (formula "38") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "14"))
                                          (rule "leq_literals" (formula "38") (term "0"))
                                          (rule "concrete_or_1" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                                          (rule "times_zero_1" (formula "18") (term "0,0"))
                                          (rule "add_zero_left" (formula "18") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                          (rule "mul_literals" (formula "18") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "14"))
                                          (rule "leq_literals" (formula "18") (term "0"))
                                          (rule "concrete_or_1" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "11"))
                                          (rule "polySimp_rightDist" (formula "56") (term "0,0"))
                                          (rule "mul_literals" (formula "56") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "56") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "56") (term "0,0"))
                                          (rule "add_literals" (formula "56") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "56") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "56"))
                                          (rule "polySimp_mulLiterals" (formula "56") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "56") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "56") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "56") (term "0,0"))
                                          (rule "concrete_or_2" (formula "56") (term "0"))
                                          (rule "neg_literal" (formula "56") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "56") (term "0,0"))
                                          (rule "add_literals" (formula "56") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "56") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "56") (term "0,0"))
                                          (rule "add_literals" (formula "56") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "56") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0"))
                                          (rule "qeq_literals" (formula "56") (term "0"))
                                          (rule "concrete_or_2" (formula "56"))
                                          (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "48"))
                                          (rule "polySimp_mulAssoc" (formula "10") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "10") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                                          (rule "neg_literal" (formula "10") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "10") (term "0,0"))
                                          (rule "concrete_or_2" (formula "10") (term "0"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0"))
                                          (rule "qeq_literals" (formula "10") (term "0"))
                                          (rule "concrete_or_2" (formula "10"))
                                          (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "12"))
                                          (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                          (rule "mul_literals" (formula "29") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "12"))
                                          (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                                          (rule "mul_literals" (formula "38") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "38") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "38") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "12"))
                                          (rule "polySimp_rightDist" (formula "54") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0"))
                                          (rule "mul_literals" (formula "54") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "54") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "54") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "54") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,0"))
                                          (rule "neg_literal" (formula "54") (term "0,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "54") (term "0,0"))
                                          (rule "concrete_or_2" (formula "54") (term "0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0"))
                                          (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "54") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0"))
                                          (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "54") (term "0,0"))
                                          (rule "qeq_literals" (formula "54") (term "0"))
                                          (rule "concrete_or_2" (formula "54"))
                                          (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "29"))
                                          (rule "times_zero_1" (formula "27") (term "0,0"))
                                          (rule "add_zero_left" (formula "27") (term "0"))
                                          (rule "inEqSimp_subsumption6" (formula "27") (ifseqformula "15"))
                                          (rule "greater_literals" (formula "27") (term "0,0"))
                                          (rule "concrete_and_1" (formula "27") (term "0"))
                                          (rule "mul_literals" (formula "27") (term "1,0"))
                                          (rule "leq_literals" (formula "27") (term "0"))
                                          (rule "concrete_or_1" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "60"))
                                          (rule "times_zero_1" (formula "59") (term "0,0"))
                                          (rule "add_zero_left" (formula "59") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "59") (ifseqformula "15"))
                                          (rule "leq_literals" (formula "59") (term "0"))
                                          (rule "concrete_or_1" (formula "59"))
                                          (rule "true_left" (formula "59"))
                                          (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
                                          (rule "times_zero_1" (formula "36") (term "0,0"))
                                          (rule "add_zero_left" (formula "36") (term "0"))
                                          (rule "inEqSimp_subsumption6" (formula "36") (ifseqformula "15"))
                                          (rule "mul_literals" (formula "36") (term "1,1,0"))
                                          (rule "greater_literals" (formula "36") (term "0,0"))
                                          (rule "concrete_and_1" (formula "36") (term "0"))
                                          (rule "leq_literals" (formula "36") (term "0"))
                                          (rule "concrete_or_1" (formula "36"))
                                          (rule "true_left" (formula "36"))
                                          (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "54"))
                                          (rule "mul_literals" (formula "56") (term "0,0"))
                                          (rule "add_zero_left" (formula "56") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "56") (ifseqformula "15"))
                                          (rule "leq_literals" (formula "56") (term "0"))
                                          (rule "concrete_or_1" (formula "56"))
                                          (rule "true_left" (formula "56"))
                                          (rule "inEqSimp_exactShadow3" (formula "65") (ifseqformula "54"))
                                          (rule "polySimp_rightDist" (formula "65") (term "0,0"))
                                          (rule "mul_literals" (formula "65") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "65") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "65"))
                                          (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                                          (rule "polySimp_elimOne" (formula "65") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "60") (ifseqformula "65"))
                                          (rule "inEqSimp_homoInEq0" (formula "60") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "60") (term "1,0,0"))
                                          (rule "mul_literals" (formula "60") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "60") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "60") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                                          (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "60") (term "0,0"))
                                          (rule "qeq_literals" (formula "60") (term "0"))
                                          (rule "concrete_or_1" (formula "60"))
                                          (rule "true_left" (formula "60"))
                                          (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "64"))
                                          (rule "times_zero_1" (formula "59") (term "0,0"))
                                          (rule "add_zero_left" (formula "59") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "59"))
                                          (rule "mul_literals" (formula "59") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "59") (ifseqformula "15"))
                                          (rule "leq_literals" (formula "59") (term "0"))
                                          (rule "concrete_or_1" (formula "59"))
                                          (rule "true_left" (formula "59"))
                                          (rule "nnf_imp2or" (formula "44") (term "1,0"))
                                          (rule "div_axiom" (formula "70") (term "0,1,1,0") (inst "quotient=quotient_1"))
                                          (rule "mul_literals" (formula "70") (term "1,1,1,1,1"))
                                          (rule "qeq_literals" (formula "70") (term "0,1,1"))
                                          (rule "ifthenelse_true_for" (formula "70") (term "1,1"))
                                          (rule "equal_literals" (formula "70") (term "0"))
                                          (rule "concrete_or_2" (formula "70"))
                                          (rule "andLeft" (formula "70"))
                                          (rule "andLeft" (formula "70"))
                                          (rule "polySimp_addAssoc" (formula "72") (term "0,1"))
                                          (rule "add_literals" (formula "72") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "72") (term "1"))
                                          (rule "add_literals" (formula "72") (term "0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "71"))
                                          (rule "polySimp_mulLiterals" (formula "71") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "71") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "72"))
                                          (rule "polySimp_mulLiterals" (formula "72") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "72") (term "0"))
                                          (rule "applyEq" (formula "74") (term "0,1,1,0") (ifseqformula "70"))
                                          (rule "polySimp_addComm1" (formula "74") (term "1,0"))
                                          (rule "applyEqRigid" (formula "73") (term "0,1,1,0") (ifseqformula "70"))
                                          (rule "polySimp_addComm1" (formula "73") (term "1,0"))
                                          (rule "applyEqRigid" (formula "73") (term "0,1,1,1") (ifseqformula "70"))
                                          (rule "polySimp_addComm1" (formula "73") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "71"))
                                          (rule "polySimp_mulComm0" (formula "71") (term "1"))
                                          (rule "polySimp_rightDist" (formula "71") (term "1"))
                                          (rule "mul_literals" (formula "71") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "71") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "72"))
                                          (rule "polySimp_mulComm0" (formula "72") (term "1"))
                                          (rule "polySimp_rightDist" (formula "72") (term "1"))
                                          (rule "mul_literals" (formula "72") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "72") (term "1,1"))
                                          (rule "elimGcdLeq_antec" (formula "72") (inst "elimGcdRightDiv=add(Z(0(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "72") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "72") (term "0,0"))
                                          (rule "concrete_or_2" (formula "72") (term "0"))
                                          (rule "neg_literal" (formula "72") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "72") (term "0,0"))
                                          (rule "add_literals" (formula "72") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "72") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "72") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "72") (term "0,0,0"))
                                          (rule "add_literals" (formula "72") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "72") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "72") (term "0,0,0"))
                                          (rule "add_literals" (formula "72") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "72") (term "0,0"))
                                          (rule "add_literals" (formula "72") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "72") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "72") (term "0,0"))
                                          (rule "qeq_literals" (formula "72") (term "0"))
                                          (rule "concrete_or_2" (formula "72"))
                                          (rule "elimGcdGeq_antec" (formula "71") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "71") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "71") (term "0,0"))
                                          (rule "concrete_or_2" (formula "71") (term "0"))
                                          (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "71") (term "0,0"))
                                          (rule "add_literals" (formula "71") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "71") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "71") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "71") (term "0,0,0"))
                                          (rule "add_literals" (formula "71") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "71") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "71") (term "0,0,0"))
                                          (rule "add_literals" (formula "71") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "71") (term "0,0"))
                                          (rule "add_literals" (formula "71") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "71") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "71") (term "0,0"))
                                          (rule "leq_literals" (formula "71") (term "0"))
                                          (rule "concrete_or_2" (formula "71"))
                                          (rule "inEqSimp_exactShadow3" (formula "71") (ifseqformula "63"))
                                          (rule "polySimp_rightDist" (formula "71") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0"))
                                          (rule "mul_literals" (formula "71") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "71") (term "0"))
                                          (rule "add_literals" (formula "71") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "71"))
                                          (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "71") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "71") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0,0,1,0"))
                                          (rule "neg_literal" (formula "71") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "71") (term "0,0"))
                                          (rule "concrete_or_2" (formula "71") (term "0"))
                                          (rule "mul_literals" (formula "71") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "71") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "71") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "71") (term "0,0"))
                                          (rule "add_literals" (formula "71") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "71") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "71") (term "0,0"))
                                          (rule "qeq_literals" (formula "71") (term "0"))
                                          (rule "concrete_or_2" (formula "71"))
                                          (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "73"))
                                          (rule "times_zero_1" (formula "59") (term "0,0"))
                                          (rule "add_zero_left" (formula "59") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "59"))
                                          (rule "mul_literals" (formula "59") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "59") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "59") (term "0,0"))
                                          (rule "concrete_or_2" (formula "59") (term "0"))
                                          (rule "mul_literals" (formula "59") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "59") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "59") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "59") (term "0,0"))
                                          (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0"))
                                          (rule "leq_literals" (formula "59") (term "0"))
                                          (rule "concrete_or_2" (formula "59"))
                                          (rule "inEqSimp_exactShadow3" (formula "73") (ifseqformula "65"))
                                          (rule "polySimp_rightDist" (formula "73") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0"))
                                          (rule "mul_literals" (formula "73") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "73") (term "0"))
                                          (rule "polySimp_addComm1" (formula "73") (term "0,0"))
                                          (rule "add_literals" (formula "73") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "73"))
                                          (rule "polySimp_mulComm0" (formula "73") (term "1"))
                                          (rule "polySimp_rightDist" (formula "73") (term "1"))
                                          (rule "mul_literals" (formula "73") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "73") (term "1,1"))
                                          (rule "inEqSimp_antiSymm" (formula "59") (ifseqformula "72"))
                                          (rule "applyEqRigid" (formula "75") (term "0,1,1") (ifseqformula "59"))
                                          (rule "mul_literals" (formula "75") (term "1,1"))
                                          (rule "add_literals" (formula "75") (term "1"))
                                          (rule "applyEqRigid" (formula "76") (term "0,1,1") (ifseqformula "59"))
                                          (rule "mul_literals" (formula "76") (term "1,1"))
                                          (rule "add_literals" (formula "76") (term "1"))
                                          (rule "applyEq" (formula "74") (term "0,1,1") (ifseqformula "59"))
                                          (rule "mul_literals" (formula "74") (term "1,1"))
                                          (rule "add_literals" (formula "74") (term "1"))
                                          (rule "applyEqRigid" (formula "60") (term "0") (ifseqformula "59"))
                                          (rule "qeq_literals" (formula "60"))
                                          (rule "true_left" (formula "60"))
                                          (rule "applyEq" (formula "72") (term "0") (ifseqformula "59"))
                                          (rule "leq_literals" (formula "72"))
                                          (rule "true_left" (formula "72"))
                                          (rule "applyEqRigid" (formula "71") (term "1") (ifseqformula "59"))
                                          (rule "applyEq" (formula "76") (term "0,1,0,1,0") (ifseqformula "59"))
                                          (rule "mul_literals" (formula "76") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "76") (term "0,1,0"))
                                          (rule "applyEqRigid" (formula "75") (term "0,1,0,1,0") (ifseqformula "59"))
                                          (rule "mul_literals" (formula "75") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "75") (term "0,1,0"))
                                          (rule "applyEqRigid" (formula "75") (term "0,1,0,1,1") (ifseqformula "59"))
                                          (rule "mul_literals" (formula "75") (term "1,0,1,1"))
                                          (rule "add_literals" (formula "75") (term "0,1,1"))
                                          (rule "inEqSimp_contradEq3" (formula "75") (term "1") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "75") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "75") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "75") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "75") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0,1"))
                                          (rule "add_literals" (formula "75") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "75") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "75") (term "0,0,1"))
                                          (rule "qeq_literals" (formula "75") (term "0,1"))
                                          (rule "concrete_and_2" (formula "75") (term "1"))
                                          (rule "concrete_impl_3" (formula "75"))
                                          (rule "notLeft" (formula "75"))
                                          (rule "inEqSimp_geqRight" (formula "77"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "replace_known_left" (formula "76") (term "0") (ifseqformula "1"))
                                          (rule "concrete_impl_1" (formula "76"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "76"))
                                          (rule "inEqSimp_homoInEq0" (formula "3"))
                                          (rule "times_zero_2" (formula "3") (term "1,0"))
                                          (rule "add_zero_right" (formula "3") (term "0"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "76"))
                                          (rule "inEqSimp_commuteLeq" (formula "2"))
                                          (rule "applyEq" (formula "71") (term "0") (ifseqformula "76"))
                                          (rule "qeq_literals" (formula "71"))
                                          (rule "true_left" (formula "71"))
                                          (rule "applyEq" (formula "70") (term "0") (ifseqformula "75"))
                                          (rule "leq_literals" (formula "70"))
                                          (rule "true_left" (formula "70"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_subsumption6" (formula "2") (ifseqformula "61"))
                                          (rule "greater_literals" (formula "2") (term "0,0"))
                                          (rule "concrete_and_1" (formula "2") (term "0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "leq_literals" (formula "2") (term "0"))
                                          (rule "concrete_or_1" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_subsumption1" (formula "71") (ifseqformula "60"))
                                          (rule "leq_literals" (formula "71") (term "0"))
                                          (rule "concrete_or_1" (formula "71"))
                                          (rule "true_left" (formula "71"))
                                          (rule "inEqSimp_subsumption1" (formula "70") (ifseqformula "15"))
                                          (rule "leq_literals" (formula "70") (term "0"))
                                          (rule "concrete_or_1" (formula "70"))
                                          (rule "true_left" (formula "70"))
                                          (rule "inEqSimp_subsumption0" (formula "70") (ifseqformula "64"))
                                          (rule "leq_literals" (formula "70") (term "0"))
                                          (rule "concrete_or_1" (formula "70"))
                                          (rule "true_left" (formula "70"))
                                          (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "2") (term "0,0"))
                                          (rule "concrete_or_2" (formula "2") (term "0"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0"))
                                          (rule "leq_literals" (formula "2") (term "0"))
                                          (rule "concrete_or_2" (formula "2"))
                                          (rule "inEqSimp_subsumption1" (formula "56") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "56") (term "0"))
                                          (rule "concrete_or_1" (formula "56"))
                                          (rule "true_left" (formula "56"))
                                          (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "55"))
                                          (rule "mul_literals" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "16"))
                                          (rule "leq_literals" (formula "2") (term "0"))
                                          (rule "concrete_or_1" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "56") (term "0,0"))
                                          (rule "mul_literals" (formula "56") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "56") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "56") (term "0,0"))
                                          (rule "add_literals" (formula "56") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "56"))
                                          (rule "polySimp_mulLiterals" (formula "56") (term "0"))
                                          (rule "inEqSimp_contradInEq5" (formula "56") (ifseqformula "67"))
                                          (rule "greater_literals" (formula "56") (term "0,0"))
                                          (rule "concrete_impl_1" (formula "56") (term "0"))
                                          (rule "andLeft" (formula "56"))
                                          (rule "polySimp_rightDist" (formula "56") (term "1"))
                                          (rule "mul_literals" (formula "56") (term "0,1"))
                                          (rule "inEqSimp_homoInEq1" (formula "56"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "56") (term "1,0"))
                                          (rule "mul_literals" (formula "56") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "56") (term "0"))
                                          (rule "polySimp_addComm1" (formula "56") (term "0,0"))
                                          (rule "add_literals" (formula "56") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "56") (term "0"))
                                          (rule "add_literals" (formula "56") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "56") (term "1,0"))
                                          (rule "add_zero_right" (formula "56") (term "0"))
                                          (rule "leq_literals" (formula "56"))
                                          (rule "closeFalse" (formula "56"))
                                       )
                                       (branch "CUT: l_0 >= 1 + l_1 FALSE"
                                          (rule "concrete_impl_2" (formula "57"))
                                          (rule "true_left" (formula "57"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "62"))
                                          (rule "ifthenelse_false" (formula "2") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "62"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,0"))
                                          (rule "times_zero_1" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEqRigid" (formula "49") (term "0,1,1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                          (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq0" (formula "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,0"))
                                          (rule "times_zero_1" (formula "1") (term "0"))
                                          (rule "qeq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEqRigid" (formula "43") (term "0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "52") (term "0") (ifseqformula "43"))
                                          (rule "applyEq" (formula "43") (term "1") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "44") (term "0,1") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "42") (term "0,1") (ifseqformula "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "2"))
                                          (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                          (rule "mul_literals" (formula "33") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                          (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "2"))
                                          (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "2"))
                                          (rule "mul_literals" (formula "12") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "12"))
                                          (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                          (rule "concrete_or_1" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "2"))
                                          (rule "polySimp_rightDist" (formula "53") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0"))
                                          (rule "mul_literals" (formula "53") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "53") (term "0,0"))
                                          (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "53") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                          (rule "polySimp_elimOne" (formula "53") (term "0"))
                                          (rule "inEqSimp_contradEq3" (formula "59") (term "1") (ifseqformula "53"))
                                          (rule "times_zero_1" (formula "59") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,1"))
                                          (rule "qeq_literals" (formula "59") (term "0,1"))
                                          (rule "concrete_and_2" (formula "59") (term "1"))
                                          (rule "concrete_impl_3" (formula "59"))
                                          (rule "notLeft" (formula "59"))
                                          (rule "inEqSimp_leqRight" (formula "60"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                          (rule "mul_literals" (formula "1") (term "0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                          (rule "replace_known_left" (formula "59") (term "0") (ifseqformula "1"))
                                          (rule "concrete_impl_1" (formula "59"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "59"))
                                          (rule "inEqSimp_homoInEq0" (formula "35"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "35") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                          (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0"))
                                          (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                          (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "59"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,1"))
                                          (rule "mul_literals" (formula "3") (term "0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "3") (term "0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,1"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "3") (term "0,1"))
                                          (rule "applyEq" (formula "26") (term "0") (ifseqformula "59"))
                                          (rule "inEqSimp_homoInEq0" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                          (rule "applyEq" (formula "58") (term "0") (ifseqformula "59"))
                                          (rule "inEqSimp_homoInEq1" (formula "58"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "58") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "58") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "58") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                                          (rule "add_literals" (formula "58") (term "0,0,0"))
                                          (rule "applyEq" (formula "57") (term "0") (ifseqformula "59"))
                                          (rule "inEqSimp_homoInEq0" (formula "57"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "57") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "57") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                          (rule "add_literals" (formula "57") (term "0,0,0"))
                                          (rule "applyEq" (formula "54") (term "0") (ifseqformula "59"))
                                          (rule "inEqSimp_homoInEq0" (formula "54"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "54") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "54") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,0"))
                                          (rule "applyEq" (formula "12") (term "0") (ifseqformula "59"))
                                          (rule "inEqSimp_homoInEq0" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "12") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                          (rule "mul_literals" (formula "35") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                          (rule "mul_literals" (formula "26") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "58"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "1,1"))
                                          (rule "mul_literals" (formula "58") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1"))
                                          (rule "polySimp_rightDist" (formula "57") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "1,1"))
                                          (rule "mul_literals" (formula "57") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "54"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1"))
                                          (rule "mul_literals" (formula "54") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                          (rule "mul_literals" (formula "12") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "57") (ifseqformula "54"))
                                          (rule "inEqSimp_homoInEq0" (formula "57") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "57") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "57") (term "0,0,0"))
                                          (rule "add_literals" (formula "57") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "57") (term "0,0"))
                                          (rule "add_literals" (formula "57") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "57") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0"))
                                          (rule "qeq_literals" (formula "57") (term "0"))
                                          (rule "concrete_or_1" (formula "57"))
                                          (rule "true_left" (formula "57"))
                                          (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=div(add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))),
        mul(l_1, Z(2(#)))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "12") (term "0,0"))
                                          (rule "concrete_or_2" (formula "12") (term "0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0"))
                                          (rule "leq_literals" (formula "12") (term "0"))
                                          (rule "concrete_or_2" (formula "12"))
                                          (rule "elimGcdGeq_antec" (formula "54") (inst "elimGcdRightDiv=add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))), l_1)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_1, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "54") (term "0,0"))
                                          (rule "concrete_or_2" (formula "54") (term "0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0"))
                                          (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "54") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "54") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "0,0,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0"))
                                          (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "54") (term "0,0"))
                                          (rule "leq_literals" (formula "54") (term "0"))
                                          (rule "concrete_or_2" (formula "54"))
                                          (rule "elimGcdLeq_antec" (formula "57") (inst "elimGcdRightDiv=add(Z(neglit(3(2(8(1(4(7(3(7(0(1(#)))))))))))), l_1)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_1, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "1,0,1,0"))
                                          (rule "neg_literal" (formula "57") (term "0,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "57") (term "0,0"))
                                          (rule "concrete_or_2" (formula "57") (term "0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "57") (term "0,0"))
                                          (rule "add_literals" (formula "57") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "57") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "57") (term "0,0,0"))
                                          (rule "add_literals" (formula "57") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "57") (term "0,0,0"))
                                          (rule "add_literals" (formula "57") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "57") (term "0,0"))
                                          (rule "add_literals" (formula "57") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "57") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0"))
                                          (rule "qeq_literals" (formula "57") (term "0"))
                                          (rule "concrete_or_2" (formula "57"))
                                          (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "3"))
                                          (rule "mul_literals" (formula "13") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                          (rule "add_literals" (formula "13") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                          (rule "mul_literals" (formula "13") (term "1"))
                                          (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "12"))
                                          (rule "greater_literals" (formula "13") (term "0,0"))
                                          (rule "concrete_and_1" (formula "13") (term "0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0"))
                                          (rule "leq_literals" (formula "13") (term "0"))
                                          (rule "concrete_or_1" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "3"))
                                          (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1"))
                                          (rule "mul_literals" (formula "27") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "3"))
                                          (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                          (rule "mul_literals" (formula "36") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                          (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1"))
                                          (rule "mul_literals" (formula "36") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                                          (rule "inEqSimp_exactShadow0" (formula "35") (ifseqformula "57"))
                                          (rule "greater_literals" (formula "35") (term "1,0"))
                                          (rule "concrete_and_3" (formula "35") (term "0"))
                                          (rule "greater_literals" (formula "35") (term "0"))
                                          (rule "concrete_impl_1" (formula "35"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "35") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                          (rule "add_literals" (formula "35") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "35") (inst "elimGcdRightDiv=add(Z(7(4(6(3(8(4(7(4(1(2(#))))))))))),
    mul(l_1, Z(2(#))))") (inst "elimGcdLeftDiv=i_2_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,1,0"))
                                          (rule "neg_literal" (formula "35") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "35") (term "0,0"))
                                          (rule "concrete_or_2" (formula "35") (term "0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                                          (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "35") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                          (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                          (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                                          (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "35") (term "0,0"))
                                          (rule "qeq_literals" (formula "35") (term "0"))
                                          (rule "concrete_or_2" (formula "35"))
                                          (rule "inEqSimp_exactShadow0" (formula "26") (ifseqformula "58"))
                                          (rule "greater_literals" (formula "26") (term "1,0"))
                                          (rule "concrete_and_3" (formula "26") (term "0"))
                                          (rule "greater_literals" (formula "26") (term "0"))
                                          (rule "concrete_impl_1" (formula "26"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "26") (inst "elimGcdRightDiv=add(Z(7(4(6(3(8(4(7(4(1(2(#))))))))))),
    mul(l_1, Z(2(#))))") (inst "elimGcdLeftDiv=i_1_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                                          (rule "neg_literal" (formula "26") (term "0,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "26") (term "0,0"))
                                          (rule "concrete_or_2" (formula "26") (term "0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0"))
                                          (rule "qeq_literals" (formula "26") (term "0"))
                                          (rule "concrete_or_2" (formula "26"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "50"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_subsumption5" (formula "1") (ifseqformula "57"))
                                          (rule "greater_literals" (formula "1") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "1") (term "0,0"))
                                          (rule "greater_literals" (formula "1") (term "0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (rule "concrete_or_1" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=add(Z(neglit(3(9(2(7(6(9(4(9(2(4(#)))))))))))), l_1)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_1, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "1") (term "0,0"))
                                          (rule "concrete_or_2" (formula "1") (term "0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "leq_literals" (formula "1") (term "0"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "inEqSimp_exactShadow2" (formula "13") (ifseqformula "60"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                          (rule "greater_literals" (formula "13") (term "0"))
                                          (rule "concrete_impl_1" (formula "13"))
                                          (rule "times_zero_1" (formula "13") (term "0,0"))
                                          (rule "add_zero_left" (formula "13") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                          (rule "mul_literals" (formula "13") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "56") (ifseqformula "13"))
                                          (rule "leq_literals" (formula "56") (term "0"))
                                          (rule "concrete_or_1" (formula "56"))
                                          (rule "true_left" (formula "56"))
                                          (rule "inEqSimp_contradInEq1" (formula "56") (ifseqformula "13"))
                                          (rule "qeq_literals" (formula "56") (term "0"))
                                          (rule "concrete_and_2" (formula "56"))
                                          (rule "closeFalse" (formula "56"))
                                       )
                                    )
                                 )
                                 (branch "result_2 <= -1 + l_0 * 2 FALSE"
                                    (rule "replace_known_right" (formula "58") (term "0,0,0") (ifseqformula "57"))
                                    (rule "ifthenelse_false" (formula "58") (term "0,0"))
                                    (rule "inEqSimp_leqRight" (formula "57"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "58") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "58") (term "0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "58") (term "1,0,1,0,1"))
                                    (rule "polySimp_mulAssoc" (formula "58") (term "0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "0,0,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "0,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "58") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "58") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "58") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1"))
                                    (rule "polySimp_elimOne" (formula "58") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "58") (term "0,1,1"))
                                    (rule "polySimp_rightDist" (formula "58") (term "0,0,1,1"))
                                    (rule "mul_literals" (formula "58") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "47"))
                                    (rule "polySimp_mulAssoc" (formula "1") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "1") (ifseqformula "36"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0"))
                                    (rule "greater_literals" (formula "1") (term "0,0"))
                                    (rule "concrete_and_1" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1") (term "0"))
                                    (rule "concrete_or_1" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "nnf_imp2or" (formula "11") (term "0"))
                                    (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "26") (term "0,1,0"))
                                    (rule "double_not" (formula "26") (term "0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "26") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,1,0,1,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0"))
                                    (rule "nnf_imp2or" (formula "12") (term "0,1,0"))
                                    (rule "nnf_imp2or" (formula "26") (term "0,1,1,0"))
                                    (rule "jdiv_axiom" (formula "43") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "0,0,2,1"))
                                    (rule "eqSymm" (formula "43"))
                                    (rule "applyEq" (formula "43") (term "1") (ifseqformula "44"))
                                    (rule "inEqSimp_subsumption6" (formula "43") (term "0,0") (ifseqformula "40"))
                                    (rule "greater_literals" (formula "43") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "43") (term "0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0,0"))
                                    (rule "leq_literals" (formula "43") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "43") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "43") (term "0"))
                                    (rule "polyDiv_pullOut" (formula "43") (term "0") (inst "polyDivCoeff=l_1"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "43") (term "0,0"))
                                    (rule "ifthenelse_false" (formula "43") (term "0"))
                                    (rule "polySimp_homoEq" (formula "43"))
                                    (rule "polySimp_pullOutFactor0" (formula "43") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "43") (term "1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "43") (term "0,0,0,1,0"))
                                    (rule "div_literals" (formula "43") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "43") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
                                    (rule "add_literals" (formula "43") (term "1,0"))
                                    (rule "times_zero_1" (formula "43") (term "0"))
                                    (rule "eqClose" (formula "43"))
                                    (rule "true_left" (formula "43"))
                                    (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "27") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "5"))
                                    (rule "insert_constant_value" (formula "27") (term "1,1,0,0,0,0,0,0,0"))
                                    (rule "insert_constant_value" (formula "27") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "insert_constant_value" (formula "27") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "insert_constant_value" (formula "27") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "eqClose" (formula "27") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "concrete_and_3" (formula "27") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "insert_constant_value" (formula "27") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "eqClose" (formula "27") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "concrete_and_3" (formula "27") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "insert_constant_value" (formula "27") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "eqClose" (formula "27") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "concrete_and_3" (formula "27") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "expand_inInt" (formula "27") (term "1,1"))
                                    (rule "expand_inInt" (formula "27") (term "0,1"))
                                    (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "27") (term "0,1,1,1"))
                                    (rule "replace_int_MAX" (formula "27") (term "1,0,1,1"))
                                    (rule "replace_int_MAX" (formula "27") (term "1,0,0,1"))
                                    (rule "replace_int_MIN" (formula "27") (term "0,1,0,1"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "andLeft" (formula "29"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "notLeft" (formula "27"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "notLeft" (formula "27"))
                                    (rule "exLeft" (formula "34") (inst "sk=i_1_2"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "exLeft" (formula "33") (inst "sk=i_2_0"))
                                    (rule "andLeft" (formula "33"))
                                    (rule "andLeft" (formula "33"))
                                    (rule "eqSymm" (formula "32"))
                                    (rule "eqSymm" (formula "30") (term "1,0,1,0,1,0"))
                                    (rule "eqSymm" (formula "30") (term "1,1,0,1,0"))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,0,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "0,2,0,0,0,0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "0,2,0,0,0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "0,2,0,1,0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "0,2,1,1,0,1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "29") (term "0,2,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "31"))
                                    (rule "mul_literals" (formula "31") (term "1,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "37"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "34"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0"))
                                    (rule "ifthenelse_negated" (formula "32") (term "2,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "40") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "39") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "43"))
                                    (rule "inEqSimp_commuteLeq" (formula "41"))
                                    (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "28"))
                                    (rule "inEqSimp_commuteLeq" (formula "27"))
                                    (rule "inEqSimp_commuteLeq" (formula "36"))
                                    (rule "inEqSimp_commuteLeq" (formula "33"))
                                    (rule "inEqSimp_commuteLeq" (formula "40") (term "0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,1,0"))
                                    (rule "applyEq" (formula "40") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "24"))
                                    (rule "applyEq" (formula "40") (term "1,0,1,0,1,0,1,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "27") (term "0") (ifseqformula "24"))
                                    (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "38") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "38") (term "1,0,1,0,1,0,1,0") (ifseqformula "24"))
                                    (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "24"))
                                    (rule "applyEq" (formula "27") (term "0") (ifseqformula "24"))
                                    (rule "applyEq" (formula "24") (term "0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "38") (term "0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "29") (term "0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "28") (term "0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "29") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "39") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "39") (term "0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                    (rule "applyEqRigid" (formula "39") (term "1,0,1,0,1,0,1,0") (ifseqformula "24"))
                                    (rule "applyEqRigid" (formula "31") (term "0,1,0") (ifseqformula "24"))
                                    (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "24"))
                                    (rule "applyEqRigid" (formula "34") (term "1") (ifseqformula "24"))
                                    (rule "applyEq" (formula "38") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "24"))
                                    (rule "applyEqRigid" (formula "36") (term "0,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "37") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
                                    (rule "applyEq" (formula "28") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
                                    (rule "applyEqRigid" (formula "29") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "24"))
                                    (rule "applyEqRigid" (formula "38") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
                                    (rule "applyEqRigid" (formula "29") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
                                    (rule "applyEq" (formula "38") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "24"))
                                    (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "38") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "37") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                    (rule "applyEqRigid" (formula "29") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                    (rule "mul_literals" (formula "30") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_subsumption0" (formula "38") (ifseqformula "19"))
                                    (rule "leq_literals" (formula "38") (term "0"))
                                    (rule "concrete_or_1" (formula "38"))
                                    (rule "true_left" (formula "38"))
                                    (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "43"))
                                    (rule "leq_literals" (formula "27") (term "0"))
                                    (rule "concrete_or_1" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "elimGcdLeq" (formula "36") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "36") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,1,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,1,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,1,0,1,1,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "36") (term "1,0,1,1,0,0,1,1,0"))
                                    (rule "concrete_and_3" (formula "36") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "36") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "36") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "36") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "36") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "36") (term "0,1,1,0,0,1,1,0"))
                                    (rule "ifthenelse_true_for" (formula "36") (term "1,1,0,0,1,1,0"))
                                    (rule "elimGcdGeq" (formula "36") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "36") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "36") (term "0,0,0,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "36") (term "0,1,0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "36") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "36") (term "0,1,0,0,1,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "36") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "concrete_and_3" (formula "36") (term "0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "36") (term "0,0,1,0,0,1,1,0"))
                                    (rule "ifthenelse_true_for" (formula "36") (term "0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "42"))
                                    (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0"))
                                    (rule "add_literals" (formula "30") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "0"))
                                    (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "11") (term "0,1,0"))
                                    (rule "double_not" (formula "11") (term "0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "11") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,1,0,1,0"))
                                    (rule "add_zero_left" (formula "11") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,0"))
                                    (rule "nnf_notAnd" (formula "11") (term "0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "12") (term "0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "12") (term "0,1,0,1,0"))
                                    (rule "double_not" (formula "12") (term "0,0,1,0,1,0"))
                                    (rule "nnf_notAnd" (formula "26") (term "0,0,1,1,0"))
                                    (rule "cut_direct" (formula "55") (term "0"))
                                    (branch "CUT: l_0 <= -1 + l_1 TRUE"
                                       (rule "concrete_impl_1" (formula "56"))
                                       (rule "inEqSimp_contradInEq0" (formula "69") (term "0,0,1") (ifseqformula "55"))
                                       (rule "inEqSimp_homoInEq1" (formula "69") (term "0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "69") (term "0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "69") (term "0,0,0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0,0,0,1"))
                                       (rule "add_literals" (formula "69") (term "1,1,0,0,0,0,1"))
                                       (rule "times_zero_1" (formula "69") (term "1,0,0,0,0,1"))
                                       (rule "add_zero_right" (formula "69") (term "0,0,0,0,1"))
                                       (rule "leq_literals" (formula "69") (term "0,0,0,1"))
                                       (rule "concrete_and_2" (formula "69") (term "0,0,1"))
                                       (rule "ifthenelse_false" (formula "69") (term "0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "69") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "69") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "69") (term "0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "69") (term "1,0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "0,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "69") (term "0,0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "69") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "69") (term "0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,1"))
                                       (rule "add_literals" (formula "69") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "69") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "69") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "69") (term "0,1"))
                                       (rule "polySimp_addAssoc" (formula "69") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "69") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "69") (term "0,0,1"))
                                       (rule "add_literals" (formula "69") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "69") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "69") (term "0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "69") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "69") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "69") (term "0,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "57") (term "0") (ifseqformula "55"))
                                       (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "57") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "57") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "57") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,0"))
                                       (rule "add_literals" (formula "57") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "57") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "57") (term "0,0,0"))
                                       (rule "leq_literals" (formula "57") (term "0,0"))
                                       (rule "concrete_and_2" (formula "57") (term "0"))
                                       (rule "concrete_impl_2" (formula "57"))
                                       (rule "true_left" (formula "57"))
                                       (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "55"))
                                       (rule "times_zero_1" (formula "47") (term "0,0"))
                                       (rule "add_zero_left" (formula "47") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                       (rule "mul_literals" (formula "47") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "51") (ifseqformula "47"))
                                       (rule "leq_literals" (formula "51") (term "0"))
                                       (rule "concrete_or_1" (formula "51"))
                                       (rule "true_left" (formula "51"))
                                       (rule "nnf_imp2or" (formula "27") (term "1,0"))
                                       (rule "commute_or" (formula "26") (term "0,0"))
                                       (rule "nnf_imp2or" (formula "28") (term "1,0,1,0"))
                                       (rule "div_axiom" (formula "8") (term "1") (inst "quotient=quotient_0"))
                                       (rule "equal_literals" (formula "8") (term "0"))
                                       (rule "concrete_or_2" (formula "8"))
                                       (rule "mul_literals" (formula "8") (term "1,1,1,1"))
                                       (rule "qeq_literals" (formula "8") (term "0,1"))
                                       (rule "ifthenelse_true_for" (formula "8") (term "1"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "polySimp_addComm1" (formula "10") (term "1"))
                                       (rule "add_literals" (formula "10") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "9"))
                                       (rule "inEqSimp_homoInEq1" (formula "10"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "10") (term "0"))
                                       (rule "applyEq" (formula "37") (term "0") (ifseqformula "8"))
                                       (rule "inEqSimp_homoInEq1" (formula "37"))
                                       (rule "polySimp_addComm1" (formula "37") (term "0"))
                                       (rule "applyEqRigid" (formula "31") (term "1,1,1,0,0,1,0") (ifseqformula "8"))
                                       (rule "applyEqRigid" (formula "12") (term "1,0") (ifseqformula "8"))
                                       (rule "applyEqRigid" (formula "15") (term "1,0,0,0,1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "29") (term "1,1,0,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "15") (term "1,1,0,0") (ifseqformula "8"))
                                       (rule "applyEqRigid" (formula "31") (term "1,1,1,0,0") (ifseqformula "8"))
                                       (rule "applyEqRigid" (formula "40") (term "1,1,1,0,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "39") (term "1,1,1,0,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "8"))
                                       (rule "inEqSimp_homoInEq1" (formula "17"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0"))
                                       (rule "applyEqRigid" (formula "30") (term "1,1,1,0,0") (ifseqformula "8"))
                                       (rule "applyEqRigid" (formula "23") (term "1,1,0,0") (ifseqformula "8"))
                                       (rule "applyEqRigid" (formula "14") (term "1,1,0,0") (ifseqformula "8"))
                                       (rule "applyEqRigid" (formula "11") (term "1") (ifseqformula "8"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                       (rule "mul_literals" (formula "10") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                       (rule "mul_literals" (formula "37") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1"))
                                       (rule "mul_literals" (formula "17") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "10"))
                                       (rule "polySimp_rightDist" (formula "49") (term "0,0"))
                                       (rule "mul_literals" (formula "49") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "49") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                       (rule "add_literals" (formula "49") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "49") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "49") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "leq_literals" (formula "49") (term "0,0"))
                                       (rule "concrete_or_2" (formula "49") (term "0"))
                                       (rule "neg_literal" (formula "49") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0"))
                                       (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "49") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0"))
                                       (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "49") (term "0,0"))
                                       (rule "qeq_literals" (formula "49") (term "0"))
                                       (rule "concrete_or_2" (formula "49"))
                                       (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "10"))
                                       (rule "mul_literals" (formula "13") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                       (rule "add_literals" (formula "13") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                       (rule "mul_literals" (formula "13") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "13") (term "0,0"))
                                       (rule "concrete_or_2" (formula "13") (term "0"))
                                       (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                       (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "13") (term "0,0"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (rule "concrete_or_2" (formula "13"))
                                       (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "38"))
                                       (rule "times_zero_1" (formula "37") (term "0,0"))
                                       (rule "add_zero_left" (formula "37") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                       (rule "mul_literals" (formula "37") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "37") (term "0"))
                                       (rule "concrete_or_1" (formula "37"))
                                       (rule "true_left" (formula "37"))
                                       (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
                                       (rule "times_zero_1" (formula "17") (term "0,0"))
                                       (rule "add_zero_left" (formula "17") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                       (rule "mul_literals" (formula "17") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "17") (term "0"))
                                       (rule "concrete_or_1" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "10"))
                                       (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                       (rule "mul_literals" (formula "27") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "27") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "48"))
                                       (rule "polySimp_mulAssoc" (formula "9") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "9") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "9") (term "0,0"))
                                       (rule "concrete_or_2" (formula "9") (term "0"))
                                       (rule "neg_literal" (formula "9") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                       (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "9") (term "0,0"))
                                       (rule "qeq_literals" (formula "9") (term "0"))
                                       (rule "concrete_or_2" (formula "9"))
                                       (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "11"))
                                       (rule "polySimp_rightDist" (formula "59") (term "0,0"))
                                       (rule "mul_literals" (formula "59") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "59") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "59") (term "0,0"))
                                       (rule "add_literals" (formula "59") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "59") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "59"))
                                       (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "59") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "59") (term "0,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "59") (term "0,0"))
                                       (rule "concrete_or_2" (formula "59") (term "0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "59") (term "0,0"))
                                       (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "59") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "59") (term "0,0"))
                                       (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "59") (term "0,0"))
                                       (rule "qeq_literals" (formula "59") (term "0"))
                                       (rule "concrete_or_2" (formula "59"))
                                       (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "11"))
                                       (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "37") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "37") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "53"))
                                       (rule "mul_literals" (formula "56") (term "0,0"))
                                       (rule "add_zero_left" (formula "56") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "56") (ifseqformula "14"))
                                       (rule "leq_literals" (formula "56") (term "0"))
                                       (rule "concrete_or_1" (formula "56"))
                                       (rule "true_left" (formula "56"))
                                       (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "28"))
                                       (rule "times_zero_1" (formula "26") (term "0,0"))
                                       (rule "add_zero_left" (formula "26") (term "0"))
                                       (rule "inEqSimp_subsumption6" (formula "26") (ifseqformula "14"))
                                       (rule "greater_literals" (formula "26") (term "0,0"))
                                       (rule "concrete_and_1" (formula "26") (term "0"))
                                       (rule "mul_literals" (formula "26") (term "1,0"))
                                       (rule "leq_literals" (formula "26") (term "0"))
                                       (rule "concrete_or_1" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "60"))
                                       (rule "mul_literals" (formula "55") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "55"))
                                       (rule "mul_literals" (formula "55") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "55") (ifseqformula "14"))
                                       (rule "leq_literals" (formula "55") (term "0"))
                                       (rule "concrete_or_1" (formula "55"))
                                       (rule "true_left" (formula "55"))
                                       (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "37"))
                                       (rule "times_zero_1" (formula "35") (term "0,0"))
                                       (rule "add_zero_left" (formula "35") (term "0"))
                                       (rule "inEqSimp_subsumption6" (formula "35") (ifseqformula "14"))
                                       (rule "greater_literals" (formula "35") (term "0,0"))
                                       (rule "concrete_and_1" (formula "35") (term "0"))
                                       (rule "mul_literals" (formula "35") (term "1,0"))
                                       (rule "leq_literals" (formula "35") (term "0"))
                                       (rule "concrete_or_1" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "nnf_imp2or" (formula "43") (term "1,0"))
                                       (rule "div_axiom" (formula "68") (term "0,1,1,0") (inst "quotient=quotient_1"))
                                       (rule "mul_literals" (formula "68") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "68") (term "0,1,1"))
                                       (rule "ifthenelse_true_for" (formula "68") (term "1,1"))
                                       (rule "equal_literals" (formula "68") (term "0"))
                                       (rule "concrete_or_2" (formula "68"))
                                       (rule "andLeft" (formula "68"))
                                       (rule "andLeft" (formula "68"))
                                       (rule "polySimp_addAssoc" (formula "70") (term "0,1"))
                                       (rule "add_literals" (formula "70") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "70") (term "1"))
                                       (rule "add_literals" (formula "70") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "69"))
                                       (rule "polySimp_mulLiterals" (formula "69") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "69") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "70"))
                                       (rule "polySimp_mulLiterals" (formula "70") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "70") (term "0"))
                                       (rule "applyEqRigid" (formula "71") (term "0,1,1,0") (ifseqformula "68"))
                                       (rule "polySimp_addComm1" (formula "71") (term "1,0"))
                                       (rule "applyEqRigid" (formula "72") (term "0,1,1,0") (ifseqformula "68"))
                                       (rule "polySimp_addComm1" (formula "72") (term "1,0"))
                                       (rule "applyEqRigid" (formula "71") (term "0,1,1,1") (ifseqformula "68"))
                                       (rule "polySimp_addComm1" (formula "71") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "69"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1"))
                                       (rule "polySimp_rightDist" (formula "69") (term "1"))
                                       (rule "mul_literals" (formula "69") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "69") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "70"))
                                       (rule "polySimp_mulComm0" (formula "70") (term "1"))
                                       (rule "polySimp_rightDist" (formula "70") (term "1"))
                                       (rule "mul_literals" (formula "70") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "70") (term "1,1"))
                                       (rule "elimGcdLeq_antec" (formula "70") (inst "elimGcdRightDiv=add(Z(0(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "neg_literal" (formula "70") (term "0,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "70") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "70") (term "0,0"))
                                       (rule "concrete_or_2" (formula "70") (term "0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "70") (term "0,0"))
                                       (rule "add_literals" (formula "70") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "70") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "70") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "70") (term "0,0,0"))
                                       (rule "add_literals" (formula "70") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "70") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "70") (term "0,0,0"))
                                       (rule "add_literals" (formula "70") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "70") (term "0,0"))
                                       (rule "add_literals" (formula "70") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "70") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "70") (term "0,0"))
                                       (rule "qeq_literals" (formula "70") (term "0"))
                                       (rule "concrete_or_2" (formula "70"))
                                       (rule "elimGcdGeq_antec" (formula "69") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "69") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "69") (term "0,0"))
                                       (rule "concrete_or_2" (formula "69") (term "0"))
                                       (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "69") (term "0,0"))
                                       (rule "add_literals" (formula "69") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "69") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "69") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "69") (term "0,0,0"))
                                       (rule "add_literals" (formula "69") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "69") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "69") (term "0,0,0"))
                                       (rule "add_literals" (formula "69") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "69") (term "0,0"))
                                       (rule "add_literals" (formula "69") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "69") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "69") (term "0,0"))
                                       (rule "leq_literals" (formula "69") (term "0"))
                                       (rule "concrete_or_2" (formula "69"))
                                       (rule "inEqSimp_exactShadow3" (formula "69") (ifseqformula "60"))
                                       (rule "polySimp_rightDist" (formula "69") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0"))
                                       (rule "mul_literals" (formula "69") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "69"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1"))
                                       (rule "polySimp_rightDist" (formula "69") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "69") (term "1,1"))
                                       (rule "mul_literals" (formula "69") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "70") (ifseqformula "59"))
                                       (rule "polySimp_rightDist" (formula "70") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0"))
                                       (rule "mul_literals" (formula "70") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "70") (term "0"))
                                       (rule "add_literals" (formula "70") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "70"))
                                       (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "70") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "70") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0,0,1,0"))
                                       (rule "neg_literal" (formula "70") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "70") (term "0,0"))
                                       (rule "concrete_or_2" (formula "70") (term "0"))
                                       (rule "mul_literals" (formula "70") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "70") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "70") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "70") (term "0,0"))
                                       (rule "add_literals" (formula "70") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "70") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "70") (term "0,0"))
                                       (rule "qeq_literals" (formula "70") (term "0"))
                                       (rule "concrete_or_2" (formula "70"))
                                       (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "72"))
                                       (rule "mul_literals" (formula "55") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "55") (term "0"))
                                       (rule "add_literals" (formula "55") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "55"))
                                       (rule "mul_literals" (formula "55") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "55") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                       (rule "leq_literals" (formula "55") (term "0,0"))
                                       (rule "concrete_or_2" (formula "55") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0"))
                                       (rule "mul_literals" (formula "55") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "55") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "55") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0"))
                                       (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "55") (term "0,0"))
                                       (rule "leq_literals" (formula "55") (term "0"))
                                       (rule "concrete_or_2" (formula "55"))
                                       (rule "inEqSimp_antiSymm" (formula "55") (ifseqformula "71"))
                                       (rule "applyEq" (formula "74") (term "0,1,1") (ifseqformula "55"))
                                       (rule "mul_literals" (formula "74") (term "1,1"))
                                       (rule "add_literals" (formula "74") (term "1"))
                                       (rule "applyEq" (formula "71") (term "0,1,1") (ifseqformula "55"))
                                       (rule "mul_literals" (formula "71") (term "1,1"))
                                       (rule "add_literals" (formula "71") (term "1"))
                                       (rule "applyEq" (formula "72") (term "0") (ifseqformula "55"))
                                       (rule "leq_literals" (formula "72"))
                                       (rule "true_left" (formula "72"))
                                       (rule "applyEqRigid" (formula "56") (term "0") (ifseqformula "55"))
                                       (rule "qeq_literals" (formula "56"))
                                       (rule "true_left" (formula "56"))
                                       (rule "applyEq" (formula "71") (term "0,1,1") (ifseqformula "55"))
                                       (rule "mul_literals" (formula "71") (term "1,1"))
                                       (rule "add_literals" (formula "71") (term "1"))
                                       (rule "applyEqRigid" (formula "69") (term "1") (ifseqformula "55"))
                                       (rule "applyEqRigid" (formula "73") (term "0,1,0,1,0") (ifseqformula "55"))
                                       (rule "mul_literals" (formula "73") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "73") (term "0,1,0"))
                                       (rule "applyEq" (formula "74") (term "0,1,0,1,0") (ifseqformula "55"))
                                       (rule "mul_literals" (formula "74") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "74") (term "0,1,0"))
                                       (rule "applyEqRigid" (formula "73") (term "0,1,0,1,1") (ifseqformula "55"))
                                       (rule "mul_literals" (formula "73") (term "1,0,1,1"))
                                       (rule "add_literals" (formula "73") (term "0,1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "70") (ifseqformula "14"))
                                       (rule "leq_literals" (formula "70") (term "0"))
                                       (rule "concrete_or_1" (formula "70"))
                                       (rule "true_left" (formula "70"))
                                       (rule "inEqSimp_subsumption0" (formula "71") (ifseqformula "60"))
                                       (rule "leq_literals" (formula "71") (term "0"))
                                       (rule "concrete_or_1" (formula "71"))
                                       (rule "true_left" (formula "71"))
                                       (rule "inEqSimp_subsumption1" (formula "70") (ifseqformula "56"))
                                       (rule "leq_literals" (formula "70") (term "0"))
                                       (rule "concrete_or_1" (formula "70"))
                                       (rule "true_left" (formula "70"))
                                       (rule "nnf_imp2or" (formula "44") (term "1,0"))
                                       (rule "nnf_notOr" (formula "32") (term "1,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "32") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "32") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "32") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,1,1,0,0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "32") (term "0,0,0,1,1,0"))
                                       (rule "nnf_imp2or" (formula "34") (term "0"))
                                       (rule "nnf_imp2or" (formula "33") (term "0"))
                                       (rule "commute_or" (formula "66") (term "0,0"))
                                       (rule "nnf_imp2or" (formula "43") (term "0"))
                                       (rule "commute_or_2" (formula "16") (term "0,1,1,0"))
                                       (rule "commute_and" (formula "79"))
                                       (rule "commute_or_2" (formula "25") (term "0"))
                                       (rule "shift_paren_or" (formula "17") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "44") (term "0"))
                                       (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                       (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                                       (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                       (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "43") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "43") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "44") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "44") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "1,0,0,0"))
                                       (rule "nnf_imp2or" (formula "34") (term "0,1,0"))
                                       (rule "nnf_notAnd" (formula "43") (term "0,1,0"))
                                       (rule "double_not" (formula "43") (term "0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "43") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,1,0"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,1,0,1,0"))
                                       (rule "add_zero_left" (formula "43") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,0"))
                                       (rule "nnf_notAnd" (formula "44") (term "0,1,0"))
                                       (rule "double_not" (formula "44") (term "0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "44") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,1,0"))
                                       (rule "add_literals" (formula "44") (term "0,0,0,1,0,1,0"))
                                       (rule "add_zero_left" (formula "44") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0"))
                                       (rule "nnf_imp2or" (formula "43") (term "0,1,1,0"))
                                       (rule "nnf_imp2or" (formula "44") (term "0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "32") (term "0,0,0,0,1,1,0"))
                                       (rule "nnf_notOr" (formula "32") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "32") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "32") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "32") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "32") (term "0,0,1,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0,1,1,0"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "0") (ifseqformula "3"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "74"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "nnf_notAnd" (formula "35") (term "0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1,0"))
                                       (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "35") (term "0,1,0,1,0"))
                                       (rule "double_not" (formula "35") (term "0,0,1,0,1,0"))
                                       (rule "nnf_notAnd" (formula "44") (term "0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,1,1,0"))
                                       (rule "nnf_notOr" (formula "45") (term "0,0,1,1,0"))
                                       (rule "nnf_notOr" (formula "33") (term "1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "33") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "33") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,0,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "33") (term "1,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "33") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "33") (term "1,1,1,0,0,0,0,1,1,0"))
                                       (rule "nnf_notOr" (formula "33") (term "0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "33") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "45") (term "0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "45") (term "1,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "45") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "45") (term "0,0,0,1,1,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "45") (term "0,0,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "45") (term "0,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "45") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "45") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "45") (term "1,0,1,0,0,1,1,0"))
                                       (rule "commute_or" (formula "26") (term "0,0"))
                                       (rule "commute_or_2" (formula "34") (term "0"))
                                       (rule "cnf_rightDist" (formula "67") (term "0"))
                                       (rule "commute_or_2" (formula "18") (term "0,0,1,0"))
                                       (rule "inEqSimp_or_weaken2" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "1,0,1,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "0,1,0,1,0,1,0"))
                                       (rule "add_zero_left" (formula "18") (term "1,0,1,0,1,0"))
                                       (rule "eqClose" (formula "18") (term "0,1,0,1,0"))
                                       (rule "ifthenelse_true_for" (formula "18") (term "1,0,1,0"))
                                       (rule "commute_or" (formula "17") (term "0,0,1,1,0"))
                                       (rule "distr_forallAnd" (formula "67"))
                                       (rule "andLeft" (formula "67"))
                                       (rule "commute_or" (formula "35") (term "0,0,1,0"))
                                       (rule "commute_or_2" (formula "44") (term "0,1,1,0"))
                                       (rule "commute_or_2" (formula "67") (term "0"))
                                       (rule "commute_or" (formula "34") (term "0,0"))
                                       (rule "shift_paren_or" (formula "67") (term "0"))
                                       (rule "commute_or" (formula "66") (term "0,0"))
                                       (rule "commute_and" (formula "33") (term "1,0,0,0,1,1,0"))
                                       (rule "commute_or" (formula "44") (term "0,1,1,0"))
                                       (rule "commute_or" (formula "18") (term "0,0,1,0"))
                                       (rule "shift_paren_or" (formula "34") (term "0,1,0"))
                                       (rule "cut_direct" (formula "71") (term "0"))
                                       (branch "CUT: pow(2, i_1_1) >= 3 + l_1 * 2 TRUE"
                                          (rule "concrete_impl_1" (formula "72"))
                                          (rule "applyEq" (formula "81") (term "0,0") (ifseqformula "72"))
                                          (rule "inEqSimp_homoInEq1" (formula "81") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "81") (term "1,0,0"))
                                          (rule "mul_literals" (formula "81") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "81") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "81") (term "0,0,0"))
                                          (rule "add_literals" (formula "81") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "81") (term "0,0"))
                                          (rule "add_literals" (formula "81") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "81") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "81") (term "0,0"))
                                          (rule "leq_literals" (formula "81") (term "0"))
                                          (rule "concrete_and_1" (formula "81"))
                                          (rule "inEqSimp_geqRight" (formula "81"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "73"))
                                          (rule "inEqSimp_commuteGeq" (formula "3"))
                                          (rule "applyEq" (formula "74") (term "0,1") (ifseqformula "73"))
                                          (rule "applyEq" (formula "69") (term "0") (ifseqformula "73"))
                                          (rule "inEqSimp_homoInEq0" (formula "69"))
                                          (rule "polySimp_mulComm0" (formula "69") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "69") (term "1,0"))
                                          (rule "mul_literals" (formula "69") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "69") (term "0"))
                                          (rule "add_literals" (formula "69") (term "0,0"))
                                          (rule "applyEq" (formula "70") (term "0") (ifseqformula "73"))
                                          (rule "inEqSimp_homoInEq1" (formula "70"))
                                          (rule "polySimp_mulComm0" (formula "70") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "70") (term "1,0"))
                                          (rule "mul_literals" (formula "70") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "70") (term "0"))
                                          (rule "add_literals" (formula "70") (term "0,0"))
                                          (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "73"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "74") (term "1"))
                                          (rule "mul_literals" (formula "74") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "69"))
                                          (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "70"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                          (rule "mul_literals" (formula "1") (term "0,0,1"))
                                          (rule "inEqSimp_subsumption6" (formula "70") (ifseqformula "57"))
                                          (rule "mul_literals" (formula "70") (term "1,1,0"))
                                          (rule "greater_literals" (formula "70") (term "0,0"))
                                          (rule "concrete_and_1" (formula "70") (term "0"))
                                          (rule "leq_literals" (formula "70") (term "0"))
                                          (rule "concrete_or_1" (formula "70"))
                                          (rule "true_left" (formula "70"))
                                          (rule "inEqSimp_subsumption4" (formula "69") (ifseqformula "61"))
                                          (rule "greater_literals" (formula "69") (term "0,0"))
                                          (rule "concrete_and_1" (formula "69") (term "0"))
                                          (rule "mul_literals" (formula "69") (term "0,0"))
                                          (rule "leq_literals" (formula "69") (term "0"))
                                          (rule "concrete_or_1" (formula "69"))
                                          (rule "true_left" (formula "69"))
                                          (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "66"))
                                          (rule "greater_literals" (formula "3") (term "0,0"))
                                          (rule "concrete_and_1" (formula "3") (term "0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                          (rule "concrete_or_1" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "inEqSimp_subsumption1" (formula "62") (ifseqformula "69"))
                                          (rule "inEqSimp_homoInEq0" (formula "62") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "62") (term "1,0,0"))
                                          (rule "mul_literals" (formula "62") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "62") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "62") (term "0,0,0"))
                                          (rule "add_literals" (formula "62") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "62") (term "0,0"))
                                          (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                          (rule "add_literals" (formula "62") (term "0,0"))
                                          (rule "qeq_literals" (formula "62") (term "0"))
                                          (rule "concrete_or_1" (formula "62"))
                                          (rule "true_left" (formula "62"))
                                          (rule "inEqSimp_contradInEq1" (formula "70") (term "0") (ifseqformula "68"))
                                          (rule "inEqSimp_homoInEq1" (formula "70") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "70") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "70") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "70") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "70") (term "0,0,0"))
                                          (rule "add_literals" (formula "70") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "70") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "70") (term "0,0,0"))
                                          (rule "leq_literals" (formula "70") (term "0,0"))
                                          (rule "concrete_and_2" (formula "70") (term "0"))
                                          (rule "concrete_impl_2" (formula "70"))
                                          (rule "true_left" (formula "70"))
                                          (rule "inEqSimp_exactShadow3" (formula "68") (ifseqformula "12"))
                                          (rule "polySimp_rightDist" (formula "68") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0"))
                                          (rule "mul_literals" (formula "68") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "68") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
                                          (rule "add_literals" (formula "68") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "68"))
                                          (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "68") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), quotient_0)") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "leq_literals" (formula "68") (term "0,0"))
                                          (rule "concrete_or_2" (formula "68") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0"))
                                          (rule "neg_literal" (formula "68") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0"))
                                          (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "68") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "68") (term "0,0,0"))
                                          (rule "add_literals" (formula "68") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "68") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "68") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0"))
                                          (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                          (rule "add_literals" (formula "68") (term "0,0"))
                                          (rule "qeq_literals" (formula "68") (term "0"))
                                          (rule "concrete_or_2" (formula "68"))
                                          (rule "inEqSimp_subsumption0" (formula "61") (ifseqformula "68"))
                                          (rule "inEqSimp_homoInEq0" (formula "61") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "61") (term "1,0,0"))
                                          (rule "mul_literals" (formula "61") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "61") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "61") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0"))
                                          (rule "add_literals" (formula "61") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "61") (term "1,0,0"))
                                          (rule "add_literals" (formula "61") (term "0,0"))
                                          (rule "qeq_literals" (formula "61") (term "0"))
                                          (rule "concrete_or_1" (formula "61"))
                                          (rule "true_left" (formula "61"))
                                          (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                          (rule "polySimp_mulAssoc" (formula "11") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "11") (inst "elimGcdRightDiv=add(add(Z(0(#)), mul(quotient_0, Z(neglit(1(#))))),
    l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "11") (term "0,1,1"))
                                          (rule "add_zero_left" (formula "11") (term "0,1,1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                          (rule "neg_literal" (formula "11") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "11") (term "0,0"))
                                          (rule "concrete_or_2" (formula "11") (term "0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "11") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "11") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0"))
                                          (rule "qeq_literals" (formula "11") (term "0"))
                                          (rule "concrete_or_2" (formula "11"))
                                          (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "31") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "31") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "70") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "70") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0"))
                                          (rule "mul_literals" (formula "70") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "70") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "70") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "70") (term "0,0,0"))
                                          (rule "add_literals" (formula "70") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "70") (term "0,0"))
                                          (rule "add_literals" (formula "70") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "70") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "70") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "70"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                          (rule "inEqSimp_contradInEq5" (formula "70") (ifseqformula "59"))
                                          (rule "greater_literals" (formula "70") (term "0,0"))
                                          (rule "concrete_impl_1" (formula "70") (term "0"))
                                          (rule "mul_literals" (formula "70") (term "1,0"))
                                          (rule "qeq_literals" (formula "70") (term "0"))
                                          (rule "concrete_and_2" (formula "70"))
                                          (rule "closeFalse" (formula "70"))
                                       )
                                       (branch "CUT: pow(2, i_1_1) >= 3 + l_1 * 2 FALSE"
                                          (rule "concrete_impl_2" (formula "71"))
                                          (rule "true_left" (formula "71"))
                                          (rule "inEqSimp_geqRight" (formula "73"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "replace_known_left" (formula "72") (term "0") (ifseqformula "1"))
                                          (rule "concrete_impl_1" (formula "72"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "72"))
                                          (rule "inEqSimp_commuteGeq" (formula "3"))
                                          (rule "applyEq" (formula "70") (term "0") (ifseqformula "72"))
                                          (rule "qeq_literals" (formula "70"))
                                          (rule "true_left" (formula "70"))
                                          (rule "applyEq" (formula "69") (term "0") (ifseqformula "71"))
                                          (rule "leq_literals" (formula "69"))
                                          (rule "true_left" (formula "69"))
                                          (rule "applyEq" (formula "78") (term "0,0") (ifseqformula "70"))
                                          (rule "inEqSimp_homoInEq1" (formula "78") (term "0"))
                                          (rule "times_zero_2" (formula "78") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "78") (term "0,0"))
                                          (rule "applyEq" (formula "78") (term "1,1,1") (ifseqformula "70"))
                                          (rule "add_zero_right" (formula "78") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0"))
                                          (rule "mul_literals" (formula "78") (term "1,0"))
                                          (rule "inEqSimp_contradInEq5" (formula "78") (term "0") (ifseqformula "57"))
                                          (rule "mul_literals" (formula "78") (term "1,1,0,0"))
                                          (rule "greater_literals" (formula "78") (term "0,0,0"))
                                          (rule "concrete_impl_1" (formula "78") (term "0,0"))
                                          (rule "qeq_literals" (formula "78") (term "0,0"))
                                          (rule "concrete_and_2" (formula "78") (term "0"))
                                          (rule "concrete_and_2" (formula "78"))
                                          (rule "false_right" (formula "78"))
                                          (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "3") (term "0,0"))
                                          (rule "concrete_or_2" (formula "3") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                          (rule "neg_literal" (formula "3") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                          (rule "concrete_or_2" (formula "3"))
                                          (rule "inEqSimp_subsumption0" (formula "53") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "53") (term "0"))
                                          (rule "concrete_or_1" (formula "53"))
                                          (rule "true_left" (formula "53"))
                                          (rule "inEqSimp_antiSymm" (formula "57") (ifseqformula "3"))
                                          (rule "applyEq" (formula "49") (term "0,0,0") (ifseqformula "57"))
                                          (rule "times_zero_2" (formula "49") (term "0,0"))
                                          (rule "jdiv_axiom_inline" (formula "49") (term "0"))
                                          (rule "times_zero_2" (formula "49") (term "0,0,2,0"))
                                          (rule "div_literals" (formula "49") (term "1,0"))
                                          (rule "qeq_literals" (formula "49") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "49") (term "0"))
                                          (rule "eqSymm" (formula "49"))
                                          (rule "applyEq" (formula "53") (term "0,1,1") (ifseqformula "56"))
                                          (rule "mul_literals" (formula "53") (term "1,1"))
                                          (rule "add_zero_right" (formula "53") (term "1"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "56"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEqRigid" (formula "65") (term "1,1,1,0,0") (ifseqformula "55"))
                                          (rule "add_zero_right" (formula "65") (term "1,1,0,0"))
                                          (rule "applyEq" (formula "66") (term "1,1,1,0,0") (ifseqformula "55"))
                                          (rule "add_literals" (formula "66") (term "1,1,0,0"))
                                          (rule "applyEq" (formula "51") (term "0") (ifseqformula "55"))
                                          (rule "inEqSimp_commuteLeq" (formula "51"))
                                          (rule "applyEq" (formula "64") (term "0") (ifseqformula "55"))
                                          (rule "inEqSimp_homoInEq0" (formula "64"))
                                          (rule "times_zero_2" (formula "64") (term "1,0"))
                                          (rule "add_zero_right" (formula "64") (term "0"))
                                          (rule "applyEq" (formula "56") (term "0") (ifseqformula "55"))
                                          (rule "qeq_literals" (formula "56"))
                                          (rule "true_left" (formula "56"))
                                          (rule "applyEq" (formula "47") (term "0,1") (ifseqformula "55"))
                                          (rule "mul_literals" (formula "47") (term "1"))
                                          (rule "applyEqRigid" (formula "48") (term "0,1") (ifseqformula "55"))
                                          (rule "mul_literals" (formula "48") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "63"))
                                          (rule "mul_literals" (formula "63") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "16"))
                                          (rule "leq_literals" (formula "52") (term "0"))
                                          (rule "concrete_or_1" (formula "52"))
                                          (rule "true_left" (formula "52"))
                                          (rule "inEqSimp_subsumption1" (formula "51") (ifseqformula "15"))
                                          (rule "leq_literals" (formula "51") (term "0"))
                                          (rule "concrete_or_1" (formula "51"))
                                          (rule "true_left" (formula "51"))
                                          (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                          (rule "polySimp_mulAssoc" (formula "11") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                          (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1"))
                                          (rule "mul_literals" (formula "11") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                          (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), quotient_0)") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "11") (term "0,0"))
                                          (rule "concrete_or_2" (formula "11") (term "0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "11") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0"))
                                          (rule "leq_literals" (formula "11") (term "0"))
                                          (rule "concrete_or_2" (formula "11"))
                                          (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "31") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                          (rule "mul_literals" (formula "17") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                          (rule "mul_literals" (formula "17") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(3(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "17") (term "0,0"))
                                          (rule "concrete_or_2" (formula "17") (term "0"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0"))
                                          (rule "leq_literals" (formula "17") (term "0"))
                                          (rule "concrete_or_2" (formula "17"))
                                          (rule "inEqSimp_subsumption1" (formula "55") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "55") (term "0"))
                                          (rule "concrete_or_1" (formula "55"))
                                          (rule "true_left" (formula "55"))
                                          (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "41") (term "0,0"))
                                          (rule "mul_literals" (formula "41") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "41") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                                          (rule "add_literals" (formula "41") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "60"))
                                          (rule "mul_literals" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                          (rule "mul_literals" (formula "17") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "16"))
                                          (rule "leq_literals" (formula "17") (term "0"))
                                          (rule "concrete_or_1" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "59"))
                                          (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0"))
                                          (rule "add_literals" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "10"))
                                          (rule "leq_literals" (formula "11") (term "0"))
                                          (rule "concrete_or_1" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "32"))
                                          (rule "mul_literals" (formula "29") (term "0,0"))
                                          (rule "add_zero_left" (formula "29") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                          (rule "mul_literals" (formula "29") (term "1"))
                                          (rule "inEqSimp_subsumption6" (formula "29") (ifseqformula "17"))
                                          (rule "greater_literals" (formula "29") (term "0,0"))
                                          (rule "concrete_and_1" (formula "29") (term "0"))
                                          (rule "mul_literals" (formula "29") (term "1,0"))
                                          (rule "leq_literals" (formula "29") (term "0"))
                                          (rule "concrete_or_1" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "41"))
                                          (rule "times_zero_1" (formula "38") (term "0,0"))
                                          (rule "add_zero_left" (formula "38") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                          (rule "mul_literals" (formula "38") (term "1"))
                                          (rule "inEqSimp_subsumption6" (formula "38") (ifseqformula "17"))
                                          (rule "mul_literals" (formula "38") (term "1,1,0"))
                                          (rule "greater_literals" (formula "38") (term "0,0"))
                                          (rule "concrete_and_1" (formula "38") (term "0"))
                                          (rule "leq_literals" (formula "38") (term "0"))
                                          (rule "concrete_or_1" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "commute_or_2" (formula "37") (term "0,0,1,0"))
                                          (rule "inEqSimp_or_weaken2" (formula "37") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "1,0,1,0,1,0"))
                                          (rule "add_literals" (formula "37") (term "0,1,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "37") (term "1,0,1,0,1,0"))
                                          (rule "eqClose" (formula "37") (term "0,1,0,1,0"))
                                          (rule "ifthenelse_true_for" (formula "37") (term "1,0,1,0"))
                                          (rule "commute_or" (formula "47") (term "0,0,1,1,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "4"))
                                          (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "47"))
                                          (rule "concrete_or_1" (formula "46"))
                                          (rule "true_left" (formula "46"))
                                          (rule "commute_or" (formula "48") (term "0,1,0,1,1,0"))
                                          (rule "commute_and" (formula "36") (term "1,0,0,0,0,1,1,0"))
                                          (rule "all_pull_out3" (formula "19") (term "1,0"))
                                          (rule "all_pull_out3" (formula "20") (term "0"))
                                          (rule "shift_paren_or" (formula "20") (term "0,0"))
                                          (rule "commute_or" (formula "37") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "47") (term "0,1,1,0"))
                                          (rule "shift_paren_or" (formula "19") (term "0,1,0"))
                                          (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "20") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "19") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "20") (term "0,0,0,0,0"))
                                          (rule "commute_or_2" (formula "19") (term "0,0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "48") (term "0,1,1,0"))
                                          (rule "commute_or_2" (formula "48") (term "1,0,1,1,0"))
                                          (rule "shift_paren_or" (formula "48") (term "0,0,1,1,0"))
                                          (rule "commute_or" (formula "48") (term "0,1,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "36") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "36") (term "0,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "36") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "36") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "36") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "36") (term "0,0,0,0,0,1,1,0"))
                                          (rule "eq_or" (formula "36") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "36") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "all_pull_out3" (formula "37") (term "0"))
                                          (rule "shift_paren_or" (formula "37") (term "0,0"))
                                          (rule "shift_paren_or" (formula "37") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "37") (term "0,0,0,0"))
                                          (rule "commute_or" (formula "37") (term "0,0,0,0,0"))
                                          (rule "all_pull_out3" (formula "46") (term "1,0"))
                                          (rule "shift_paren_or" (formula "46") (term "0,1,0"))
                                          (rule "shift_paren_or" (formula "46") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "46") (term "0,0,0,1,0"))
                                          (rule "all_pull_out3" (formula "19") (term "0"))
                                          (rule "shift_paren_or" (formula "19") (term "0,0"))
                                          (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "19") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "19") (term "0,0,0,0,0"))
                                          (rule "commute_or" (formula "19") (term "0,0,0,0,0,0"))
                                          (rule "all_pull_out3" (formula "46") (term "1,0"))
                                          (rule "cnf_rightDist" (formula "46") (term "0,1,0"))
                                          (rule "commute_or_2" (formula "46") (term "1,0,1,0"))
                                          (rule "shift_paren_or" (formula "46") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "46") (term "0,1,0,1,0"))
                                          (rule "shift_paren_or" (formula "46") (term "0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "46") (term "0,0,0,0,1,0"))
                                          (rule "shift_paren_or" (formula "46") (term "0,0,1,0,1,0"))
                                          (rule "commute_or" (formula "46") (term "0,0,0,1,0,1,0"))
                                          (rule "shift_paren_and" (formula "36") (term "0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "36") (term "0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "36") (term "0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "36") (term "1,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "36") (term "1,1,0,0,0,1,1,0"))
                                          (rule "eq_or" (formula "36") (term "0,1,1,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "36") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "36") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "36") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "allLeft" (formula "28") (inst "t=i_1_2"))
                                          (rule "replace_known_left" (formula "28") (term "0,0,0,0") (ifseqformula "46"))
                                          (rule "concrete_not_1" (formula "28") (term "0,0,0"))
                                          (rule "concrete_or_2" (formula "28") (term "0,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "28") (term "1") (ifseqformula "45"))
                                          (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                          (rule "leq_literals" (formula "28") (term "0,1"))
                                          (rule "concrete_and_2" (formula "28") (term "1"))
                                          (rule "concrete_or_4" (formula "28"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "44"))
                                          (rule "qeq_literals" (formula "28") (term "0,1"))
                                          (rule "concrete_and_2" (formula "28") (term "1"))
                                          (rule "concrete_or_4" (formula "28"))
                                          (rule "allLeft" (formula "29") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "29") (term "0,0,0,0") (ifseqformula "23"))
                                          (rule "concrete_not_1" (formula "29") (term "0,0,0"))
                                          (rule "concrete_or_2" (formula "29") (term "0,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "29") (term "1") (ifseqformula "22"))
                                          (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                          (rule "leq_literals" (formula "29") (term "0,1"))
                                          (rule "concrete_and_2" (formula "29") (term "1"))
                                          (rule "concrete_or_4" (formula "29"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "21"))
                                          (rule "qeq_literals" (formula "29") (term "0,1"))
                                          (rule "concrete_and_2" (formula "29") (term "1"))
                                          (rule "concrete_or_4" (formula "29"))
                                          (rule "cnf_rightDist" (formula "38") (term "0,1,0,0,0,1,1,0"))
                                          (rule "eq_or_2" (formula "38") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "38") (term "0,0,0,0,0,1,1,0"))
                                          (rule "allLeft" (formula "64") (inst "t=i_1_2"))
                                          (rule "replace_known_left" (formula "64") (term "0,0,0") (ifseqformula "47"))
                                          (rule "concrete_not_1" (formula "64") (term "0,0"))
                                          (rule "concrete_or_2" (formula "64") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "64") (term "0") (ifseqformula "45"))
                                          (rule "qeq_literals" (formula "64") (term "0,0"))
                                          (rule "concrete_and_2" (formula "64") (term "0"))
                                          (rule "concrete_or_2" (formula "64"))
                                          (rule "inEqSimp_exactShadow3" (formula "64") (ifseqformula "46"))
                                          (rule "polySimp_mulComm0" (formula "64") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "64") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "64"))
                                          (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                          (rule "polySimp_elimOne" (formula "64") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "60") (ifseqformula "64"))
                                          (rule "inEqSimp_homoInEq0" (formula "60") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "60") (term "1,0,0"))
                                          (rule "mul_literals" (formula "60") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "60") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "60") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                                          (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                          (rule "add_literals" (formula "60") (term "0,0"))
                                          (rule "qeq_literals" (formula "60") (term "0"))
                                          (rule "concrete_or_1" (formula "60"))
                                          (rule "true_left" (formula "60"))
                                          (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "63"))
                                          (rule "applyEqRigid" (formula "60") (term "0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq0" (formula "60"))
                                          (rule "polySimp_mulComm0" (formula "60") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "60") (term "1,0"))
                                          (rule "mul_literals" (formula "60") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "60") (term "0"))
                                          (rule "add_literals" (formula "60") (term "0,0"))
                                          (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "18"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                          (rule "add_literals" (formula "18") (term "0,0"))
                                          (rule "applyEqRigid" (formula "67") (term "1,1,0") (ifseqformula "11"))
                                          (rule "applyEqRigid" (formula "66") (term "1,1,0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "62") (term "0,0,0") (ifseqformula "11"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "62") (term "0,0"))
                                          (rule "mul_literals" (formula "62") (term "0,0,0"))
                                          (rule "applyEq" (formula "68") (term "0,1,0,0") (ifseqformula "11"))
                                          (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "68") (term "1,0,0"))
                                          (rule "mul_literals" (formula "68") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
                                          (rule "add_literals" (formula "68") (term "0,0,0"))
                                          (rule "applyEq" (formula "2") (term "0,0,2,1,0") (ifseqformula "11"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "0,2,1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,2,1,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,2,1,0"))
                                          (rule "applyEq" (formula "1") (term "0,1,1") (ifseqformula "11"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                          (rule "add_literals" (formula "1") (term "0,1"))
                                          (rule "add_zero_left" (formula "1") (term "1"))
                                          (rule "applyEqRigid" (formula "43") (term "0,1,1") (ifseqformula "11"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,1"))
                                          (rule "mul_literals" (formula "43") (term "0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "43") (term "1"))
                                          (rule "add_literals" (formula "43") (term "0,1"))
                                          (rule "applyEq" (formula "71") (term "0,0,2,0") (ifseqformula "11"))
                                          (rule "polySimp_mulComm0" (formula "71") (term "0,2,0"))
                                          (rule "polySimp_rightDist" (formula "71") (term "0,2,0"))
                                          (rule "mul_literals" (formula "71") (term "0,0,2,0"))
                                          (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "11"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,1"))
                                          (rule "mul_literals" (formula "35") (term "0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "1"))
                                          (rule "add_literals" (formula "35") (term "0,1"))
                                          (rule "applyEq" (formula "72") (term "0,0,2,0") (ifseqformula "11"))
                                          (rule "polySimp_mulComm0" (formula "72") (term "0,2,0"))
                                          (rule "polySimp_rightDist" (formula "72") (term "0,2,0"))
                                          (rule "mul_literals" (formula "72") (term "0,0,2,0"))
                                          (rule "applyEqRigid" (formula "64") (term "0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq0" (formula "64"))
                                          (rule "polySimp_pullOutFactor1" (formula "64") (term "0"))
                                          (rule "add_literals" (formula "64") (term "1,0"))
                                          (rule "times_zero_1" (formula "64") (term "0"))
                                          (rule "qeq_literals" (formula "64"))
                                          (rule "true_left" (formula "64"))
                                          (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "12"))
                                          (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                                          (rule "add_literals" (formula "12") (term "1,0"))
                                          (rule "times_zero_1" (formula "12") (term "0"))
                                          (rule "leq_literals" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "applyEq" (formula "63") (term "1") (ifseqformula "11"))
                                          (rule "applyEq" (formula "60") (term "0,1,1") (ifseqformula "11"))
                                          (rule "polySimp_mulComm0" (formula "60") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "60") (term "1,1"))
                                          (rule "mul_literals" (formula "60") (term "0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "60") (term "1"))
                                          (rule "add_literals" (formula "60") (term "0,1"))
                                          (rule "applyEqRigid" (formula "62") (term "0,1") (ifseqformula "11"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "1"))
                                          (rule "polySimp_rightDist" (formula "62") (term "1"))
                                          (rule "mul_literals" (formula "62") (term "0,1"))
                                          (rule "applyEq" (formula "61") (term "1") (ifseqformula "11"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "59"))
                                          (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                          (rule "polySimp_elimOne" (formula "59") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "40") (ifseqformula "41"))
                                          (rule "inEqSimp_homoInEq0" (formula "40") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "40") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                          (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0"))
                                          (rule "qeq_literals" (formula "40") (term "0"))
                                          (rule "concrete_or_1" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "inEqSimp_subsumption1" (formula "58") (ifseqformula "12"))
                                          (rule "inEqSimp_homoInEq0" (formula "58") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,0,0"))
                                          (rule "mul_literals" (formula "58") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "58") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "58") (term "0,0"))
                                          (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                          (rule "add_literals" (formula "58") (term "0,0"))
                                          (rule "qeq_literals" (formula "58") (term "0"))
                                          (rule "concrete_or_1" (formula "58"))
                                          (rule "true_left" (formula "58"))
                                          (rule "inEqSimp_subsumption0" (formula "57") (ifseqformula "10"))
                                          (rule "leq_literals" (formula "57") (term "0"))
                                          (rule "concrete_or_1" (formula "57"))
                                          (rule "true_left" (formula "57"))
                                          (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0"))
                                          (rule "qeq_literals" (formula "13") (term "0"))
                                          (rule "concrete_or_1" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "32"))
                                          (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "31") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                          (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0"))
                                          (rule "qeq_literals" (formula "31") (term "0"))
                                          (rule "concrete_or_1" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "polyDiv_pullOut" (formula "60") (term "0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                                          (rule "equal_literals" (formula "60") (term "0,0"))
                                          (rule "ifthenelse_false" (formula "60") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "60") (term "1,0,0,0"))
                                          (rule "polySimp_homoEq" (formula "60"))
                                          (rule "polySimp_mulComm0" (formula "60") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "60") (term "0,0,1,1,0"))
                                          (rule "add_literals" (formula "60") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "60") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "60") (term "1,0"))
                                          (rule "mul_literals" (formula "60") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "60") (term "0"))
                                          (rule "add_literals" (formula "60") (term "0,0"))
                                          (rule "add_zero_left" (formula "60") (term "0"))
                                          (rule "polySimp_invertEq" (formula "60"))
                                          (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                          (rule "times_zero_2" (formula "60") (term "1"))
                                          (rule "polySimp_elimOne" (formula "60") (term "0"))
                                          (rule "inEqSimp_antiSymm" (formula "57") (ifseqformula "42"))
                                          (rule "applyEqRigid" (formula "41") (term "0") (ifseqformula "57"))
                                          (rule "applyEq" (formula "58") (term "0") (ifseqformula "57"))
                                          (rule "inEqSimp_homoInEq1" (formula "58"))
                                          (rule "polySimp_pullOutFactor1" (formula "58") (term "0"))
                                          (rule "add_literals" (formula "58") (term "1,0"))
                                          (rule "times_zero_1" (formula "58") (term "0"))
                                          (rule "leq_literals" (formula "58"))
                                          (rule "true_left" (formula "58"))
                                          (rule "applyEqRigid" (formula "43") (term "0,0,2,0") (ifseqformula "57"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "0,2,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "0,2,0"))
                                          (rule "mul_literals" (formula "43") (term "0,0,2,0"))
                                          (rule "close" (formula "63") (ifseqformula "43"))
                                       )
                                    )
                                    (branch "CUT: l_0 <= -1 + l_1 FALSE"
                                       (rule "concrete_impl_2" (formula "55"))
                                       (rule "true_left" (formula "55"))
                                       (rule "inEqSimp_leqRight" (formula "61"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "46"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "nnf_imp2or" (formula "28") (term "1,0"))
                                       (rule "commute_or" (formula "27") (term "0,0"))
                                       (rule "nnf_imp2or" (formula "29") (term "1,0,1,0"))
                                       (rule "commute_or" (formula "56") (term "0,0,0,1"))
                                       (rule "cut_direct" (formula "56") (term "0"))
                                       (branch "CUT: l_0 >= 1 + l_1 TRUE"
                                          (rule "concrete_impl_1" (formula "57"))
                                          (rule "andLeft" (formula "57"))
                                          (rule "replace_known_left" (formula "70") (term "0,0,1") (ifseqformula "56"))
                                          (rule "ifthenelse_true" (formula "70") (term "0,1"))
                                          (rule "inEqSimp_homoInEq1" (formula "70") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "70") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "70") (term "1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "70") (term "0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "70") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "70") (term "0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "70") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "70") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "70") (term "1,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "70") (term "1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "70") (term "0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "70") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "70") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "70") (term "1,1,1"))
                                          (rule "polySimp_rightDist" (formula "70") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "1,0,1,1"))
                                          (rule "mul_literals" (formula "70") (term "0,0,1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "56"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (rule "concrete_or_1" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "45"))
                                          (rule "polySimp_rightDist" (formula "55") (term "0,0"))
                                          (rule "mul_literals" (formula "55") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "55") (term "0"))
                                          (rule "add_literals" (formula "55") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "55"))
                                          (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                          (rule "polySimp_elimOne" (formula "55") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "51") (ifseqformula "55"))
                                          (rule "leq_literals" (formula "51") (term "0"))
                                          (rule "concrete_or_1" (formula "51"))
                                          (rule "true_left" (formula "51"))
                                          (rule "div_axiom" (formula "8") (term "1") (inst "quotient=quotient_0"))
                                          (rule "mul_literals" (formula "8") (term "1,1,1,1,1"))
                                          (rule "qeq_literals" (formula "8") (term "0,1,1"))
                                          (rule "ifthenelse_true_for" (formula "8") (term "1,1"))
                                          (rule "equal_literals" (formula "8") (term "0"))
                                          (rule "concrete_or_2" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "polySimp_addComm1" (formula "10") (term "1"))
                                          (rule "add_literals" (formula "10") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0"))
                                          (rule "applyEqRigid" (formula "15") (term "1,1,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "17"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0"))
                                          (rule "applyEqRigid" (formula "30") (term "1,1,1,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "29") (term "1,1,0,0") (ifseqformula "8"))
                                          (rule "applyEqRigid" (formula "31") (term "1,1,1,0,0,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "39") (term "1,1,1,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "31") (term "1,1,1,0,0") (ifseqformula "8"))
                                          (rule "applyEqRigid" (formula "12") (term "1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "23") (term "1,1,0,0") (ifseqformula "8"))
                                          (rule "applyEqRigid" (formula "14") (term "1,1,0,0") (ifseqformula "8"))
                                          (rule "applyEqRigid" (formula "15") (term "1,0,0,0,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "37") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "37"))
                                          (rule "polySimp_addComm1" (formula "37") (term "0"))
                                          (rule "applyEq" (formula "40") (term "1,1,1,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "11") (term "1") (ifseqformula "8"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                          (rule "mul_literals" (formula "10") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                          (rule "mul_literals" (formula "17") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1"))
                                          (rule "mul_literals" (formula "37") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "10"))
                                          (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                          (rule "mul_literals" (formula "34") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "34") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                          (rule "add_literals" (formula "34") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "34") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "10"))
                                          (rule "mul_literals" (formula "13") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                          (rule "add_literals" (formula "13") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                          (rule "mul_literals" (formula "13") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "13") (term "0,0"))
                                          (rule "concrete_or_2" (formula "13") (term "0"))
                                          (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,0"))
                                          (rule "leq_literals" (formula "13") (term "0"))
                                          (rule "concrete_or_2" (formula "13"))
                                          (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "10"))
                                          (rule "polySimp_rightDist" (formula "51") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0"))
                                          (rule "mul_literals" (formula "51") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "51") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                                          (rule "add_literals" (formula "51") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "51") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "51"))
                                          (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "51") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "leq_literals" (formula "51") (term "0,0"))
                                          (rule "concrete_or_2" (formula "51") (term "0"))
                                          (rule "neg_literal" (formula "51") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0"))
                                          (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "51") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0"))
                                          (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "51") (term "0,0"))
                                          (rule "qeq_literals" (formula "51") (term "0"))
                                          (rule "concrete_or_2" (formula "51"))
                                          (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "39"))
                                          (rule "times_zero_1" (formula "38") (term "0,0"))
                                          (rule "add_zero_left" (formula "38") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                          (rule "mul_literals" (formula "38") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "13"))
                                          (rule "leq_literals" (formula "38") (term "0"))
                                          (rule "concrete_or_1" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "inEqSimp_exactShadow3" (formula "57") (ifseqformula "10"))
                                          (rule "polySimp_rightDist" (formula "57") (term "0,0"))
                                          (rule "mul_literals" (formula "57") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "57") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                          (rule "add_literals" (formula "57") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "57") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "57"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "57") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "57") (term "0,0"))
                                          (rule "concrete_or_2" (formula "57") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0"))
                                          (rule "neg_literal" (formula "57") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "57") (term "0,0"))
                                          (rule "add_literals" (formula "57") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "57") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "57") (term "0,0"))
                                          (rule "add_literals" (formula "57") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "57") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0"))
                                          (rule "qeq_literals" (formula "57") (term "0"))
                                          (rule "concrete_or_2" (formula "57"))
                                          (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
                                          (rule "times_zero_1" (formula "17") (term "0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                          (rule "mul_literals" (formula "17") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "13"))
                                          (rule "leq_literals" (formula "17") (term "0"))
                                          (rule "concrete_or_1" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "10"))
                                          (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "27") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "49"))
                                          (rule "polySimp_mulAssoc" (formula "9") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "9") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                                          (rule "neg_literal" (formula "9") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "9") (term "0,0"))
                                          (rule "concrete_or_2" (formula "9") (term "0"))
                                          (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0"))
                                          (rule "qeq_literals" (formula "9") (term "0"))
                                          (rule "concrete_or_2" (formula "9"))
                                          (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "37"))
                                          (rule "times_zero_1" (formula "35") (term "0,0"))
                                          (rule "add_zero_left" (formula "35") (term "0"))
                                          (rule "inEqSimp_subsumption6" (formula "35") (ifseqformula "14"))
                                          (rule "greater_literals" (formula "35") (term "0,0"))
                                          (rule "concrete_and_1" (formula "35") (term "0"))
                                          (rule "mul_literals" (formula "35") (term "1,0"))
                                          (rule "leq_literals" (formula "35") (term "0"))
                                          (rule "concrete_or_1" (formula "35"))
                                          (rule "true_left" (formula "35"))
                                          (rule "inEqSimp_exactShadow3" (formula "58") (ifseqformula "59"))
                                          (rule "times_zero_1" (formula "58") (term "0,0"))
                                          (rule "add_zero_left" (formula "58") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "58") (ifseqformula "14"))
                                          (rule "leq_literals" (formula "58") (term "0"))
                                          (rule "concrete_or_1" (formula "58"))
                                          (rule "true_left" (formula "58"))
                                          (rule "inEqSimp_exactShadow3" (formula "64") (ifseqformula "53"))
                                          (rule "polySimp_rightDist" (formula "64") (term "0,0"))
                                          (rule "mul_literals" (formula "64") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "64") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "64"))
                                          (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                          (rule "polySimp_elimOne" (formula "64") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "59") (ifseqformula "64"))
                                          (rule "inEqSimp_homoInEq0" (formula "59") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "59") (term "1,0,0"))
                                          (rule "mul_literals" (formula "59") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "59") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "59") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0"))
                                          (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0"))
                                          (rule "qeq_literals" (formula "59") (term "0"))
                                          (rule "concrete_or_1" (formula "59"))
                                          (rule "true_left" (formula "59"))
                                          (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "28"))
                                          (rule "times_zero_1" (formula "26") (term "0,0"))
                                          (rule "add_zero_left" (formula "26") (term "0"))
                                          (rule "inEqSimp_subsumption6" (formula "26") (ifseqformula "14"))
                                          (rule "greater_literals" (formula "26") (term "0,0"))
                                          (rule "concrete_and_1" (formula "26") (term "0"))
                                          (rule "mul_literals" (formula "26") (term "1,0"))
                                          (rule "leq_literals" (formula "26") (term "0"))
                                          (rule "concrete_or_1" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "53"))
                                          (rule "times_zero_1" (formula "55") (term "0,0"))
                                          (rule "add_zero_left" (formula "55") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "55") (ifseqformula "14"))
                                          (rule "leq_literals" (formula "55") (term "0"))
                                          (rule "concrete_or_1" (formula "55"))
                                          (rule "true_left" (formula "55"))
                                          (rule "inEqSimp_exactShadow3" (formula "58") (ifseqformula "63"))
                                          (rule "times_zero_1" (formula "58") (term "0,0"))
                                          (rule "add_zero_left" (formula "58") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "58"))
                                          (rule "mul_literals" (formula "58") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "58") (ifseqformula "14"))
                                          (rule "leq_literals" (formula "58") (term "0"))
                                          (rule "concrete_or_1" (formula "58"))
                                          (rule "true_left" (formula "58"))
                                          (rule "nnf_imp2or" (formula "43") (term "1,0"))
                                          (rule "div_axiom" (formula "69") (term "0,1,1,0") (inst "quotient=quotient_1"))
                                          (rule "mul_literals" (formula "69") (term "1,1,1,1,1"))
                                          (rule "qeq_literals" (formula "69") (term "0,1,1"))
                                          (rule "ifthenelse_true_for" (formula "69") (term "1,1"))
                                          (rule "equal_literals" (formula "69") (term "0"))
                                          (rule "concrete_or_2" (formula "69"))
                                          (rule "andLeft" (formula "69"))
                                          (rule "andLeft" (formula "69"))
                                          (rule "polySimp_addAssoc" (formula "71") (term "0,1"))
                                          (rule "add_literals" (formula "71") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "71") (term "1"))
                                          (rule "add_literals" (formula "71") (term "0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "70"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "70") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "71"))
                                          (rule "polySimp_mulLiterals" (formula "71") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "71") (term "0"))
                                          (rule "applyEq" (formula "72") (term "0,1,1,0") (ifseqformula "69"))
                                          (rule "polySimp_addComm1" (formula "72") (term "1,0"))
                                          (rule "applyEq" (formula "73") (term "0,1,1,0") (ifseqformula "69"))
                                          (rule "polySimp_addComm1" (formula "73") (term "1,0"))
                                          (rule "applyEqRigid" (formula "72") (term "0,1,1,1") (ifseqformula "69"))
                                          (rule "polySimp_addComm1" (formula "72") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "70"))
                                          (rule "polySimp_mulComm0" (formula "70") (term "1"))
                                          (rule "polySimp_rightDist" (formula "70") (term "1"))
                                          (rule "mul_literals" (formula "70") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "71"))
                                          (rule "polySimp_mulComm0" (formula "71") (term "1"))
                                          (rule "polySimp_rightDist" (formula "71") (term "1"))
                                          (rule "mul_literals" (formula "71") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "71") (term "1,1"))
                                          (rule "elimGcdLeq_antec" (formula "71") (inst "elimGcdRightDiv=add(Z(0(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "leq_literals" (formula "71") (term "0,0"))
                                          (rule "concrete_or_2" (formula "71") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0"))
                                          (rule "neg_literal" (formula "71") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "71") (term "0,0"))
                                          (rule "add_literals" (formula "71") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "71") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "71") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "71") (term "0,0,0"))
                                          (rule "add_literals" (formula "71") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "71") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "71") (term "0,0,0"))
                                          (rule "add_literals" (formula "71") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "71") (term "0,0"))
                                          (rule "add_literals" (formula "71") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "71") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "71") (term "0,0"))
                                          (rule "qeq_literals" (formula "71") (term "0"))
                                          (rule "concrete_or_2" (formula "71"))
                                          (rule "elimGcdGeq_antec" (formula "70") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "70") (term "0,0"))
                                          (rule "concrete_or_2" (formula "70") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "70") (term "0,0"))
                                          (rule "add_literals" (formula "70") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "70") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "70") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "70") (term "0,0,0"))
                                          (rule "add_literals" (formula "70") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "70") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "70") (term "0,0,0"))
                                          (rule "add_literals" (formula "70") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "70") (term "0,0"))
                                          (rule "add_literals" (formula "70") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "70") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "70") (term "0,0"))
                                          (rule "leq_literals" (formula "70") (term "0"))
                                          (rule "concrete_or_2" (formula "70"))
                                          (rule "inEqSimp_exactShadow3" (formula "70") (ifseqformula "62"))
                                          (rule "polySimp_rightDist" (formula "70") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0"))
                                          (rule "mul_literals" (formula "70") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "70") (term "0"))
                                          (rule "add_literals" (formula "70") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "70"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "70") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "70") (term "0,0"))
                                          (rule "concrete_or_2" (formula "70") (term "0"))
                                          (rule "neg_literal" (formula "70") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "70") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0"))
                                          (rule "polySimp_addLiterals" (formula "70") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "70") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "70") (term "0,0"))
                                          (rule "add_literals" (formula "70") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "70") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "70") (term "0,0"))
                                          (rule "qeq_literals" (formula "70") (term "0"))
                                          (rule "concrete_or_2" (formula "70"))
                                          (rule "inEqSimp_exactShadow3" (formula "58") (ifseqformula "72"))
                                          (rule "times_zero_1" (formula "58") (term "0,0"))
                                          (rule "add_zero_left" (formula "58") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "58"))
                                          (rule "mul_literals" (formula "58") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "58") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                          (rule "leq_literals" (formula "58") (term "0,0"))
                                          (rule "concrete_or_2" (formula "58") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0"))
                                          (rule "mul_literals" (formula "58") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "58") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "58") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "58") (term "0,0"))
                                          (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "58") (term "0,0"))
                                          (rule "leq_literals" (formula "58") (term "0"))
                                          (rule "concrete_or_2" (formula "58"))
                                          (rule "inEqSimp_exactShadow3" (formula "72") (ifseqformula "64"))
                                          (rule "polySimp_rightDist" (formula "72") (term "0,0"))
                                          (rule "mul_literals" (formula "72") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "72") (term "0"))
                                          (rule "polySimp_addComm1" (formula "72") (term "0,0"))
                                          (rule "add_literals" (formula "72") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "72"))
                                          (rule "polySimp_mulComm0" (formula "72") (term "1"))
                                          (rule "polySimp_rightDist" (formula "72") (term "1"))
                                          (rule "mul_literals" (formula "72") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "72") (term "1,1"))
                                          (rule "inEqSimp_antiSymm" (formula "58") (ifseqformula "71"))
                                          (rule "applyEqRigid" (formula "72") (term "0") (ifseqformula "58"))
                                          (rule "leq_literals" (formula "72"))
                                          (rule "true_left" (formula "72"))
                                          (rule "applyEqRigid" (formula "72") (term "0,1,1") (ifseqformula "58"))
                                          (rule "mul_literals" (formula "72") (term "1,1"))
                                          (rule "add_literals" (formula "72") (term "1"))
                                          (rule "applyEq" (formula "74") (term "0,1,1") (ifseqformula "58"))
                                          (rule "mul_literals" (formula "74") (term "1,1"))
                                          (rule "add_literals" (formula "74") (term "1"))
                                          (rule "applyEq" (formula "73") (term "0,1,1") (ifseqformula "58"))
                                          (rule "mul_literals" (formula "73") (term "1,1"))
                                          (rule "add_literals" (formula "73") (term "1"))
                                          (rule "applyEqRigid" (formula "59") (term "0") (ifseqformula "58"))
                                          (rule "qeq_literals" (formula "59"))
                                          (rule "true_left" (formula "59"))
                                          (rule "applyEqRigid" (formula "75") (term "0,1,0,1,0") (ifseqformula "58"))
                                          (rule "mul_literals" (formula "75") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "75") (term "0,1,0"))
                                          (rule "applyEq" (formula "70") (term "1") (ifseqformula "58"))
                                          (rule "applyEqRigid" (formula "74") (term "0,1,0,1,0") (ifseqformula "58"))
                                          (rule "mul_literals" (formula "74") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "74") (term "0,1,0"))
                                          (rule "applyEq" (formula "74") (term "0,1,0,1,1") (ifseqformula "58"))
                                          (rule "mul_literals" (formula "74") (term "1,0,1,1"))
                                          (rule "add_literals" (formula "74") (term "0,1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "71") (ifseqformula "14"))
                                          (rule "leq_literals" (formula "71") (term "0"))
                                          (rule "concrete_or_1" (formula "71"))
                                          (rule "true_left" (formula "71"))
                                          (rule "inEqSimp_subsumption1" (formula "71") (ifseqformula "59"))
                                          (rule "leq_literals" (formula "71") (term "0"))
                                          (rule "concrete_or_1" (formula "71"))
                                          (rule "true_left" (formula "71"))
                                          (rule "inEqSimp_subsumption0" (formula "71") (ifseqformula "63"))
                                          (rule "leq_literals" (formula "71") (term "0"))
                                          (rule "concrete_or_1" (formula "71"))
                                          (rule "true_left" (formula "71"))
                                          (rule "nnf_imp2or" (formula "44") (term "1,0"))
                                          (rule "nnf_notOr" (formula "32") (term "1,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "32") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "32") (term "0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "32") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "32") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,1,1,0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "32") (term "0,0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "34") (term "0,1,0,1,0"))
                                          (rule "double_not" (formula "34") (term "0,0,1,0,1,0"))
                                          (rule "nnf_imp2or" (formula "33") (term "0"))
                                          (rule "cut_direct" (formula "80") (term "0"))
                                          (branch "CUT: pow(2, i_1_1) >= l_0 * -2 + result_2 TRUE"
                                             (rule "concrete_and_1" (formula "81"))
                                             (rule "inEqSimp_leqRight" (formula "81"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "13"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "53"))
                                             (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "15"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "55"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "4"))
                                             (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                             (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0"))
                                             (rule "add_zero_right" (formula "7") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                             (rule "mul_literals" (formula "7") (term "1"))
                                             (rule "inEqSimp_subsumption6" (formula "7") (ifseqformula "21"))
                                             (rule "greater_literals" (formula "7") (term "0,0"))
                                             (rule "concrete_and_1" (formula "7") (term "0"))
                                             (rule "mul_literals" (formula "7") (term "1,0"))
                                             (rule "leq_literals" (formula "7") (term "0"))
                                             (rule "concrete_or_1" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "inEqSimp_exactShadow3" (formula "75") (ifseqformula "4"))
                                             (rule "mul_literals" (formula "75") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "75") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "75") (term "0,0"))
                                             (rule "add_literals" (formula "75") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "75"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1"))
                                             (rule "polySimp_rightDist" (formula "75") (term "1"))
                                             (rule "mul_literals" (formula "75") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,1"))
                                             (rule "elimGcdGeq_antec" (formula "75") (inst "elimGcdRightDiv=add(Z(neglit(4(2(8(1(4(7(3(7(0(1(#)))))))))))),
    mul(quotient_0, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "leq_literals" (formula "75") (term "0,0"))
                                             (rule "concrete_or_2" (formula "75") (term "0"))
                                             (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0"))
                                             (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "75") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "75") (term "0,0,0"))
                                             (rule "add_literals" (formula "75") (term "0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "75") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "75") (term "0,0,0"))
                                             (rule "add_literals" (formula "75") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0"))
                                             (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "75") (term "0,0"))
                                             (rule "leq_literals" (formula "75") (term "0"))
                                             (rule "concrete_or_2" (formula "75"))
                                             (rule "inEqSimp_exactShadow3" (formula "76") (ifseqformula "5"))
                                             (rule "mul_literals" (formula "76") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "76") (term "0"))
                                             (rule "add_literals" (formula "76") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "76"))
                                             (rule "mul_literals" (formula "76") (term "1"))
                                             (rule "inEqSimp_subsumption6" (formula "76") (ifseqformula "61"))
                                             (rule "times_zero_1" (formula "76") (term "1,1,0"))
                                             (rule "greater_literals" (formula "76") (term "0,0"))
                                             (rule "concrete_and_1" (formula "76") (term "0"))
                                             (rule "leq_literals" (formula "76") (term "0"))
                                             (rule "concrete_or_1" (formula "76"))
                                             (rule "true_left" (formula "76"))
                                             (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                             (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "7") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=add(add(Z(0(#)), quotient_0), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "leq_literals" (formula "7") (term "0,0"))
                                             (rule "concrete_or_2" (formula "7") (term "0"))
                                             (rule "add_zero_left" (formula "7") (term "0,1,1"))
                                             (rule "neg_literal" (formula "7") (term "0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "7") (term "0,1,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0"))
                                             (rule "qeq_literals" (formula "7") (term "0"))
                                             (rule "concrete_or_2" (formula "7"))
                                             (rule "inEqSimp_exactShadow3" (formula "77") (ifseqformula "2"))
                                             (rule "mul_literals" (formula "77") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "77") (term "0"))
                                             (rule "add_literals" (formula "77") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "77"))
                                             (rule "mul_literals" (formula "77") (term "1"))
                                             (rule "inEqSimp_subsumption6" (formula "77") (ifseqformula "66"))
                                             (rule "times_zero_1" (formula "77") (term "1,1,0"))
                                             (rule "greater_literals" (formula "77") (term "0,0"))
                                             (rule "concrete_and_1" (formula "77") (term "0"))
                                             (rule "leq_literals" (formula "77") (term "0"))
                                             (rule "concrete_or_1" (formula "77"))
                                             (rule "true_left" (formula "77"))
                                             (rule "inEqSimp_exactShadow3" (formula "77") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "77") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "77") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "77") (term "0,0"))
                                             (rule "add_literals" (formula "77") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "77"))
                                             (rule "polySimp_mulComm0" (formula "77") (term "1"))
                                             (rule "polySimp_rightDist" (formula "77") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "77") (term "1,1"))
                                             (rule "mul_literals" (formula "77") (term "0,1"))
                                             (rule "elimGcdGeq_antec" (formula "77") (inst "elimGcdRightDiv=add(Z(neglit(4(2(8(1(4(7(3(7(0(1(#)))))))))))),
    mul(quotient_0, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "77") (term "0,1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "77") (term "0,0"))
                                             (rule "concrete_or_2" (formula "77") (term "0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,0"))
                                             (rule "add_literals" (formula "77") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "77") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "77") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "77") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "77") (term "0,0,0"))
                                             (rule "add_literals" (formula "77") (term "0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "77") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "77") (term "0,0,0"))
                                             (rule "add_literals" (formula "77") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,0"))
                                             (rule "add_literals" (formula "77") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "77") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "77") (term "0,0"))
                                             (rule "leq_literals" (formula "77") (term "0"))
                                             (rule "concrete_or_2" (formula "77"))
                                             (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
                                             (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "8") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "8") (inst "elimGcdRightDiv=add(Z(3(8(3(6(1(#)))))), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "8") (term "0,0"))
                                             (rule "concrete_or_2" (formula "8") (term "0"))
                                             (rule "neg_literal" (formula "8") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0"))
                                             (rule "qeq_literals" (formula "8") (term "0"))
                                             (rule "concrete_or_2" (formula "8"))
                                             (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "7"))
                                             (rule "mul_literals" (formula "63") (term "0,0"))
                                             (rule "add_zero_left" (formula "63") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "63"))
                                             (rule "inEqSimp_subsumption1" (formula "79") (ifseqformula "63"))
                                             (rule "inEqSimp_homoInEq0" (formula "79") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "79") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "79") (term "0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "79") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "79") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "79") (term "0,0"))
                                             (rule "add_literals" (formula "79") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "79") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "79") (term "0,0"))
                                             (rule "qeq_literals" (formula "79") (term "0"))
                                             (rule "concrete_or_1" (formula "79"))
                                             (rule "true_left" (formula "79"))
                                             (rule "inEqSimp_exactShadow3" (formula "74") (ifseqformula "7"))
                                             (rule "polySimp_rightDist" (formula "74") (term "0,0"))
                                             (rule "mul_literals" (formula "74") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "74") (term "0"))
                                             (rule "polySimp_addComm1" (formula "74") (term "0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "74") (term "0"))
                                             (rule "add_literals" (formula "74") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "74") (term "1,0"))
                                             (rule "add_zero_right" (formula "74") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "74"))
                                             (rule "mul_literals" (formula "74") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "74") (ifseqformula "22"))
                                             (rule "leq_literals" (formula "74") (term "0"))
                                             (rule "concrete_or_1" (formula "74"))
                                             (rule "true_left" (formula "74"))
                                             (rule "inEqSimp_exactShadow3" (formula "64") (ifseqformula "8"))
                                             (rule "times_zero_1" (formula "64") (term "0,0"))
                                             (rule "add_zero_left" (formula "64") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "64"))
                                             (rule "mul_literals" (formula "64") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "64") (ifseqformula "69"))
                                             (rule "leq_literals" (formula "64") (term "0"))
                                             (rule "concrete_or_1" (formula "64"))
                                             (rule "true_left" (formula "64"))
                                             (rule "inEqSimp_exactShadow3" (formula "78") (ifseqformula "7"))
                                             (rule "polySimp_rightDist" (formula "78") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "78") (term "1,0,0"))
                                             (rule "mul_literals" (formula "78") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "78") (term "1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "78") (term "0"))
                                             (rule "polySimp_pullOutFactor3b" (formula "78") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "78"))
                                             (rule "polySimp_mulComm0" (formula "78") (term "1"))
                                             (rule "polySimp_rightDist" (formula "78") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "78") (term "1,1"))
                                             (rule "mul_literals" (formula "78") (term "0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "79") (ifseqformula "60"))
                                             (rule "polySimp_rightDist" (formula "79") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0"))
                                             (rule "mul_literals" (formula "79") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "79") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "79") (term "0"))
                                             (rule "add_literals" (formula "79") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "79"))
                                             (rule "mul_literals" (formula "79") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "79") (ifseqformula "22"))
                                             (rule "leq_literals" (formula "79") (term "0"))
                                             (rule "concrete_or_1" (formula "79"))
                                             (rule "true_left" (formula "79"))
                                             (rule "inEqSimp_exactShadow3" (formula "79") (ifseqformula "8"))
                                             (rule "polySimp_rightDist" (formula "79") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0"))
                                             (rule "mul_literals" (formula "79") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "79") (term "1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "79") (term "0"))
                                             (rule "polySimp_addComm1" (formula "79") (term "0,0"))
                                             (rule "add_literals" (formula "79") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "79"))
                                             (rule "polySimp_mulComm0" (formula "79") (term "1"))
                                             (rule "polySimp_rightDist" (formula "79") (term "1"))
                                             (rule "mul_literals" (formula "79") (term "0,1"))
                                             (rule "inEqSimp_subsumption1" (formula "79") (ifseqformula "63"))
                                             (rule "inEqSimp_homoInEq0" (formula "79") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "79") (term "1,0,0"))
                                             (rule "mul_literals" (formula "79") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "79") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "79") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "79") (term "0,0"))
                                             (rule "add_literals" (formula "79") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "79") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "79") (term "0,0"))
                                             (rule "qeq_literals" (formula "79") (term "0"))
                                             (rule "concrete_or_1" (formula "79"))
                                             (rule "true_left" (formula "79"))
                                             (rule "inEqSimp_exactShadow3" (formula "79") (ifseqformula "61"))
                                             (rule "polySimp_rightDist" (formula "79") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0"))
                                             (rule "mul_literals" (formula "79") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "79") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor3b" (formula "79") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "79"))
                                             (rule "mul_literals" (formula "79") (term "1"))
                                             (rule "inEqSimp_subsumption6" (formula "79") (ifseqformula "22"))
                                             (rule "mul_literals" (formula "79") (term "1,1,0"))
                                             (rule "greater_literals" (formula "79") (term "0,0"))
                                             (rule "concrete_and_1" (formula "79") (term "0"))
                                             (rule "leq_literals" (formula "79") (term "0"))
                                             (rule "concrete_or_1" (formula "79"))
                                             (rule "true_left" (formula "79"))
                                             (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "73"))
                                             (rule "polySimp_mulAssoc" (formula "63") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "63") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "63") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "63") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                             (rule "polySimp_addComm0" (formula "63") (term "0,0"))
                                             (rule "polySimp_pullOutFactor3b" (formula "63") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "63"))
                                             (rule "mul_literals" (formula "63") (term "1"))
                                             (rule "inEqSimp_subsumption6" (formula "63") (ifseqformula "22"))
                                             (rule "mul_literals" (formula "63") (term "1,1,0"))
                                             (rule "greater_literals" (formula "63") (term "0,0"))
                                             (rule "concrete_and_1" (formula "63") (term "0"))
                                             (rule "leq_literals" (formula "63") (term "0"))
                                             (rule "concrete_or_1" (formula "63"))
                                             (rule "true_left" (formula "63"))
                                             (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "72"))
                                             (rule "polySimp_mulAssoc" (formula "63") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "63") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "63") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "63") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "63") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "63"))
                                             (rule "mul_literals" (formula "63") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "63") (ifseqformula "22"))
                                             (rule "leq_literals" (formula "63") (term "0"))
                                             (rule "concrete_or_1" (formula "63"))
                                             (rule "true_left" (formula "63"))
                                             (rule "inEqSimp_exactShadow3" (formula "78") (ifseqformula "73"))
                                             (rule "polySimp_rightDist" (formula "78") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "78") (term "1,0,0"))
                                             (rule "mul_literals" (formula "78") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "78") (term "0"))
                                             (rule "polySimp_addComm1" (formula "78") (term "0,0"))
                                             (rule "add_literals" (formula "78") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "78") (term "0"))
                                             (rule "add_literals" (formula "78") (term "1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "78"))
                                             (rule "mul_literals" (formula "78") (term "1"))
                                             (rule "inEqSimp_subsumption6" (formula "78") (ifseqformula "22"))
                                             (rule "mul_literals" (formula "78") (term "1,1,0"))
                                             (rule "greater_literals" (formula "78") (term "0,0"))
                                             (rule "concrete_and_1" (formula "78") (term "0"))
                                             (rule "leq_literals" (formula "78") (term "0"))
                                             (rule "concrete_or_1" (formula "78"))
                                             (rule "true_left" (formula "78"))
                                             (rule "inEqSimp_exactShadow3" (formula "78") (ifseqformula "72"))
                                             (rule "polySimp_rightDist" (formula "78") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "78") (term "1,0,0"))
                                             (rule "mul_literals" (formula "78") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "78") (term "0"))
                                             (rule "add_literals" (formula "78") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "78"))
                                             (rule "mul_literals" (formula "78") (term "1"))
                                             (rule "inEqSimp_subsumption6" (formula "78") (ifseqformula "22"))
                                             (rule "mul_literals" (formula "78") (term "1,1,0"))
                                             (rule "greater_literals" (formula "78") (term "0,0"))
                                             (rule "concrete_and_1" (formula "78") (term "0"))
                                             (rule "leq_literals" (formula "78") (term "0"))
                                             (rule "concrete_or_1" (formula "78"))
                                             (rule "true_left" (formula "78"))
                                             (rule "commute_or_2" (formula "24") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "76") (term "0,0"))
                                             (rule "nnf_imp2or" (formula "51") (term "0"))
                                             (rule "cnf_rightDist" (formula "75") (term "0"))
                                             (rule "commute_or_2" (formula "33") (term "0"))
                                             (rule "shift_paren_or" (formula "25") (term "0,1,0"))
                                             (rule "commute_and" (formula "42") (term "0,0,1,0"))
                                             (rule "nnf_imp2or" (formula "52") (term "0"))
                                             (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "41") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "41") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                             (rule "mul_literals" (formula "41") (term "1,0,0,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "86") (term "0") (ifseqformula "11"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "86"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "nnf_notOr" (formula "41") (term "1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "41") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "41") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "41") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "41") (term "1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "41") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "41") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "41") (term "0,0,0,0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "43") (term "0"))
                                             (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "52") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "52") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "52") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "53") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "53") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "53") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "53") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                             (rule "mul_literals" (formula "53") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "53") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "53") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "53") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "52") (term "0,1,0"))
                                             (rule "double_not" (formula "52") (term "0,0,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "52") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,1,0"))
                                             (rule "add_literals" (formula "52") (term "0,0,0,1,0,1,0"))
                                             (rule "add_zero_left" (formula "52") (term "0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,1,0"))
                                             (rule "nnf_notAnd" (formula "53") (term "0,1,0"))
                                             (rule "double_not" (formula "53") (term "0,0,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "53") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,1,0"))
                                             (rule "add_literals" (formula "53") (term "0,0,0,1,0,1,0"))
                                             (rule "add_zero_left" (formula "53") (term "0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,1,0"))
                                             (rule "nnf_imp2or" (formula "52") (term "0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "53") (term "0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "43") (term "0,1,0"))
                                             (rule "nnf_notOr" (formula "41") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "41") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "nnf_notOr" (formula "41") (term "1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "41") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "41") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "41") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "41") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "41") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "41") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,0,1,0,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "52") (term "0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "52") (term "0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "52") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,1,1,0"))
                                             (rule "nnf_notOr" (formula "53") (term "0,0,1,1,0"))
                                             (rule "cut_direct" (formula "84") (term "0"))
                                             (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 TRUE"
                                                (rule "concrete_impl_1" (formula "85"))
                                                (rule "applyEq" (formula "81") (term "0") (ifseqformula "85"))
                                                (rule "qeq_literals" (formula "81"))
                                                (rule "true_left" (formula "81"))
                                                (rule "applyEq" (formula "6") (term "0") (ifseqformula "84"))
                                                (rule "inEqSimp_homoInEq0" (formula "6"))
                                                (rule "times_zero_2" (formula "6") (term "1,0"))
                                                (rule "add_zero_right" (formula "6") (term "0"))
                                                (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "84"))
                                                (rule "add_zero_right" (formula "7") (term "1"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "84"))
                                                (rule "inEqSimp_homoInEq0" (formula "3"))
                                                (rule "times_zero_2" (formula "3") (term "1,0"))
                                                (rule "add_zero_right" (formula "3") (term "0"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "84"))
                                                (rule "inEqSimp_homoInEq0" (formula "5"))
                                                (rule "times_zero_2" (formula "5") (term "1,0"))
                                                (rule "add_zero_right" (formula "5") (term "0"))
                                                (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "84"))
                                                (rule "add_zero_right" (formula "4") (term "1"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "84"))
                                                (rule "inEqSimp_commuteGeq" (formula "10"))
                                                (rule "applyEq" (formula "82") (term "0,1") (ifseqformula "84"))
                                                (rule "polySimp_homoEq" (formula "82") (term "1"))
                                                (rule "times_zero_2" (formula "82") (term "1,0,1"))
                                                (rule "add_zero_right" (formula "82") (term "0,1"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "84"))
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "times_zero_2" (formula "2") (term "1,0"))
                                                (rule "add_zero_right" (formula "2") (term "0"))
                                                (rule "applyEq" (formula "78") (term "0") (ifseqformula "84"))
                                                (rule "leq_literals" (formula "78"))
                                                (rule "true_left" (formula "78"))
                                                (rule "polySimp_sepPosMonomial" (formula "81") (term "1"))
                                                (rule "mul_literals" (formula "81") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                (rule "mul_literals" (formula "6") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                (rule "mul_literals" (formula "5") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "81") (term "0") (ifseqformula "82"))
                                                (rule "inEqSimp_homoInEq1" (formula "81") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "81") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "81") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "81") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "81") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "81") (term "0,0,0"))
                                                (rule "add_literals" (formula "81") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "81") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "81") (term "0,0,0"))
                                                (rule "leq_literals" (formula "81") (term "0,0"))
                                                (rule "concrete_and_2" (formula "81") (term "0"))
                                                (rule "concrete_impl_2" (formula "81"))
                                                (rule "true_left" (formula "81"))
                                                (rule "inEqSimp_subsumption6" (formula "3") (ifseqformula "69"))
                                                (rule "greater_literals" (formula "3") (term "0,0"))
                                                (rule "concrete_and_1" (formula "3") (term "0"))
                                                (rule "mul_literals" (formula "3") (term "1,0"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                (rule "concrete_or_1" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "inEqSimp_subsumption6" (formula "5") (ifseqformula "64"))
                                                (rule "times_zero_1" (formula "5") (term "1,1,0"))
                                                (rule "greater_literals" (formula "5") (term "0,0"))
                                                (rule "concrete_and_1" (formula "5") (term "0"))
                                                (rule "leq_literals" (formula "5") (term "0"))
                                                (rule "concrete_or_1" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "inEqSimp_subsumption6" (formula "2") (ifseqformula "62"))
                                                (rule "greater_literals" (formula "2") (term "0,0"))
                                                (rule "concrete_and_1" (formula "2") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                (rule "concrete_or_1" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(0(#)), mul(quotient_0, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "add_zero_left" (formula "3") (term "1,1"))
                                                (rule "leq_literals" (formula "3") (term "0,0"))
                                                (rule "concrete_or_2" (formula "3") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "3") (term "0,0"))
                                                (rule "polySimp_mulAssoc" (formula "3") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                (rule "concrete_or_2" (formula "3"))
                                                (rule "inEqSimp_subsumption1" (formula "76") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq0" (formula "76") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "76") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "76") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "76") (term "1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "76") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "76") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "76") (term "0,0"))
                                                (rule "add_literals" (formula "76") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "76") (term "1,0,0"))
                                                (rule "add_literals" (formula "76") (term "0,0"))
                                                (rule "qeq_literals" (formula "76") (term "0"))
                                                (rule "concrete_or_1" (formula "76"))
                                                (rule "true_left" (formula "76"))
                                                (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "7") (term "0,0"))
                                                (rule "concrete_or_2" (formula "7") (term "0"))
                                                (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                                                (rule "neg_literal" (formula "7") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0"))
                                                (rule "qeq_literals" (formula "7") (term "0"))
                                                (rule "concrete_or_2" (formula "7"))
                                                (rule "inEqSimp_subsumption0" (formula "58") (ifseqformula "7"))
                                                (rule "leq_literals" (formula "58") (term "0"))
                                                (rule "concrete_or_1" (formula "58"))
                                                (rule "true_left" (formula "58"))
                                                (rule "inEqSimp_antiSymm" (formula "61") (ifseqformula "7"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "61"))
                                                (rule "inEqSimp_commuteGeq" (formula "3"))
                                                (rule "applyEqRigid" (formula "73") (term "1,1,0,0,0,0") (ifseqformula "61"))
                                                (rule "add_zero_right" (formula "73") (term "1,0,0,0,0"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "61"))
                                                (rule "inEqSimp_homoInEq0" (formula "5"))
                                                (rule "mul_literals" (formula "5") (term "1,0"))
                                                (rule "add_zero_right" (formula "5") (term "0"))
                                                (rule "applyEqRigid" (formula "72") (term "0") (ifseqformula "61"))
                                                (rule "inEqSimp_homoInEq1" (formula "72"))
                                                (rule "mul_literals" (formula "72") (term "1,0"))
                                                (rule "add_zero_right" (formula "72") (term "0"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "61"))
                                                (rule "qeq_literals" (formula "62"))
                                                (rule "true_left" (formula "62"))
                                                (rule "applyEqRigid" (formula "72") (term "1,1,0,1,1,0") (ifseqformula "61"))
                                                (rule "add_zero_right" (formula "72") (term "1,0,1,1,0"))
                                                (rule "applyEq" (formula "7") (term "0") (ifseqformula "61"))
                                                (rule "leq_literals" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "applyEqRigid" (formula "58") (term "0,1,1") (ifseqformula "60"))
                                                (rule "mul_literals" (formula "58") (term "1,1"))
                                                (rule "add_zero_right" (formula "58") (term "1"))
                                                (rule "applyEq" (formula "57") (term "0") (ifseqformula "60"))
                                                (rule "inEqSimp_commuteLeq" (formula "57"))
                                                (rule "applyEq" (formula "6") (term "0") (ifseqformula "60"))
                                                (rule "inEqSimp_homoInEq0" (formula "6"))
                                                (rule "times_zero_2" (formula "6") (term "1,0"))
                                                (rule "add_zero_right" (formula "6") (term "0"))
                                                (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "60"))
                                                (rule "times_zero_2" (formula "4") (term "1"))
                                                (rule "applyEqRigid" (formula "53") (term "0,0,0") (ifseqformula "60"))
                                                (rule "times_zero_2" (formula "53") (term "0,0"))
                                                (rule "jdiv_axiom_inline" (formula "53") (term "0"))
                                                (rule "qeq_literals" (formula "53") (term "0,0"))
                                                (rule "ifthenelse_true" (formula "53") (term "0"))
                                                (rule "div_literals" (formula "53") (term "0"))
                                                (rule "eqSymm" (formula "53"))
                                                (rule "applyEq" (formula "52") (term "0,1") (ifseqformula "59"))
                                                (rule "times_zero_2" (formula "52") (term "1"))
                                                (rule "applyEqRigid" (formula "53") (term "0,1") (ifseqformula "59"))
                                                (rule "times_zero_2" (formula "53") (term "1"))
                                                (rule "inEqSimp_invertInEq0" (formula "3"))
                                                (rule "times_zero_2" (formula "3") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "67"))
                                                (rule "mul_literals" (formula "67") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                (rule "mul_literals" (formula "4") (term "1"))
                                                (rule "inEqSimp_subsumption0" (formula "65") (ifseqformula "67"))
                                                (rule "leq_literals" (formula "65") (term "0"))
                                                (rule "concrete_or_1" (formula "65"))
                                                (rule "true_left" (formula "65"))
                                                (rule "inEqSimp_subsumption1" (formula "55") (ifseqformula "18"))
                                                (rule "leq_literals" (formula "55") (term "0"))
                                                (rule "concrete_or_1" (formula "55"))
                                                (rule "true_left" (formula "55"))
                                                (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "17"))
                                                (rule "leq_literals" (formula "54") (term "0"))
                                                (rule "concrete_or_1" (formula "54"))
                                                (rule "true_left" (formula "54"))
                                                (rule "inEqSimp_contradInEq0" (formula "59") (ifseqformula "64"))
                                                (rule "qeq_literals" (formula "59") (term "0"))
                                                (rule "concrete_and_2" (formula "59"))
                                                (rule "closeFalse" (formula "59"))
                                             )
                                             (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 FALSE"
                                                (rule "concrete_impl_2" (formula "84"))
                                                (rule "true_left" (formula "84"))
                                                (rule "inEqSimp_leqRight" (formula "85"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "replace_known_left" (formula "84") (term "0") (ifseqformula "1"))
                                                (rule "concrete_impl_1" (formula "84"))
                                                (rule "applyEq" (formula "6") (term "0") (ifseqformula "84"))
                                                (rule "inEqSimp_homoInEq0" (formula "6"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "84"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                                (rule "polySimp_addComm0" (formula "5") (term "0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "5") (term "1"))
                                                (rule "add_literals" (formula "5") (term "1,1,1"))
                                                (rule "times_zero_1" (formula "5") (term "1,1"))
                                                (rule "add_zero_right" (formula "5") (term "1"))
                                                (rule "applyEq" (formula "11") (term "0") (ifseqformula "84"))
                                                (rule "inEqSimp_commuteGeq" (formula "11"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "84"))
                                                (rule "inEqSimp_homoInEq0" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0"))
                                                (rule "add_zero_right" (formula "3") (term "0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "84"))
                                                (rule "inEqSimp_homoInEq0" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0"))
                                                (rule "add_zero_right" (formula "4") (term "0"))
                                                (rule "qeq_literals" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "applyEq" (formula "6") (term "0") (ifseqformula "83"))
                                                (rule "inEqSimp_homoInEq0" (formula "6"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0"))
                                                (rule "applyEq" (formula "81") (term "0") (ifseqformula "83"))
                                                (rule "inEqSimp_homoInEq1" (formula "81"))
                                                (rule "polySimp_mulComm0" (formula "81") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "81") (term "1,0"))
                                                (rule "mul_literals" (formula "81") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "81") (term "0"))
                                                (rule "add_literals" (formula "81") (term "0,0"))
                                                (rule "applyEq" (formula "78") (term "0") (ifseqformula "83"))
                                                (rule "inEqSimp_homoInEq0" (formula "78"))
                                                (rule "polySimp_mulComm0" (formula "78") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "78") (term "1,0"))
                                                (rule "mul_literals" (formula "78") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "78") (term "0"))
                                                (rule "add_literals" (formula "78") (term "0,0"))
                                                (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "83"))
                                                (rule "polySimp_addComm0" (formula "7") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                (rule "mul_literals" (formula "6") (term "0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "81"))
                                                (rule "polySimp_mulLiterals" (formula "81") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "78"))
                                                (rule "polySimp_mulLiterals" (formula "78") (term "0"))
                                                (rule "inEqSimp_subsumption6" (formula "81") (ifseqformula "69"))
                                                (rule "greater_literals" (formula "81") (term "0,0"))
                                                (rule "concrete_and_1" (formula "81") (term "0"))
                                                (rule "times_zero_1" (formula "81") (term "1,0"))
                                                (rule "leq_literals" (formula "81") (term "0"))
                                                (rule "concrete_or_1" (formula "81"))
                                                (rule "true_left" (formula "81"))
                                                (rule "inEqSimp_subsumption6" (formula "6") (ifseqformula "75"))
                                                (rule "greater_literals" (formula "6") (term "0,0"))
                                                (rule "concrete_and_1" (formula "6") (term "0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0"))
                                                (rule "qeq_literals" (formula "6") (term "0"))
                                                (rule "concrete_or_1" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "inEqSimp_subsumption4" (formula "77") (ifseqformula "72"))
                                                (rule "greater_literals" (formula "77") (term "0,0"))
                                                (rule "concrete_and_1" (formula "77") (term "0"))
                                                (rule "mul_literals" (formula "77") (term "0,0"))
                                                (rule "leq_literals" (formula "77") (term "0"))
                                                (rule "concrete_or_1" (formula "77"))
                                                (rule "true_left" (formula "77"))
                                                (rule "inEqSimp_subsumption6" (formula "3") (ifseqformula "22"))
                                                (rule "mul_literals" (formula "3") (term "1,1,0"))
                                                (rule "greater_literals" (formula "3") (term "0,0"))
                                                (rule "concrete_and_1" (formula "3") (term "0"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                (rule "concrete_or_1" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "22"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                (rule "concrete_or_1" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "inEqSimp_subsumption1" (formula "67") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "67") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "67") (term "1,0,0"))
                                                (rule "mul_literals" (formula "67") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "67") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "67") (term "0,0,0"))
                                                (rule "add_literals" (formula "67") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "67") (term "0,0"))
                                                (rule "add_literals" (formula "67") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "67") (term "1,0,0"))
                                                (rule "add_literals" (formula "67") (term "0,0"))
                                                (rule "qeq_literals" (formula "67") (term "0"))
                                                (rule "concrete_or_1" (formula "67"))
                                                (rule "true_left" (formula "67"))
                                                (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=add(add(Z(1(#)), mul(quotient_0, Z(neglit(1(#))))),
    l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "3") (term "0,0"))
                                                (rule "concrete_or_2" (formula "3") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "3") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "3") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                (rule "concrete_or_2" (formula "3"))
                                                (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "leq_literals" (formula "7") (term "0,0"))
                                                (rule "concrete_or_2" (formula "7") (term "0"))
                                                (rule "neg_literal" (formula "7") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "7") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0"))
                                                (rule "qeq_literals" (formula "7") (term "0"))
                                                (rule "concrete_or_2" (formula "7"))
                                                (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "7"))
                                                (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0"))
                                                (rule "qeq_literals" (formula "6") (term "0"))
                                                (rule "concrete_or_1" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "inEqSimp_antiSymm" (formula "70") (ifseqformula "6"))
                                                (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "70"))
                                                (rule "inEqSimp_homoInEq0" (formula "6"))
                                                (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                                (rule "add_literals" (formula "6") (term "1,0"))
                                                (rule "times_zero_1" (formula "6") (term "0"))
                                                (rule "qeq_literals" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "applyEqRigid" (formula "56") (term "0") (ifseqformula "69"))
                                                (rule "inEqSimp_homoInEq0" (formula "56"))
                                                (rule "polySimp_mulComm0" (formula "56") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "56") (term "1,0"))
                                                (rule "mul_literals" (formula "56") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "56") (term "0"))
                                                (rule "add_literals" (formula "56") (term "0,0"))
                                                (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "69"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,1"))
                                                (rule "mul_literals" (formula "4") (term "0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                                                (rule "add_literals" (formula "4") (term "0,0,1"))
                                                (rule "add_zero_left" (formula "4") (term "0,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "4") (term "1"))
                                                (rule "add_literals" (formula "4") (term "1,1"))
                                                (rule "times_zero_1" (formula "4") (term "1"))
                                                (rule "applyEqRigid" (formula "74") (term "0") (ifseqformula "69"))
                                                (rule "inEqSimp_homoInEq1" (formula "74"))
                                                (rule "polySimp_mulComm0" (formula "74") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "74") (term "1,0"))
                                                (rule "mul_literals" (formula "74") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "74") (term "0"))
                                                (rule "polySimp_addComm1" (formula "74") (term "0,0"))
                                                (rule "add_literals" (formula "74") (term "0,0,0"))
                                                (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "69"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0"))
                                                (rule "polySimp_addLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "69"))
                                                (rule "inEqSimp_homoInEq0" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0"))
                                                (rule "add_zero_right" (formula "5") (term "0"))
                                                (rule "polySimp_addComm0" (formula "5") (term "0"))
                                                (rule "applyEq" (formula "70") (term "0") (ifseqformula "69"))
                                                (rule "inEqSimp_homoInEq1" (formula "70"))
                                                (rule "polySimp_pullOutFactor1" (formula "70") (term "0"))
                                                (rule "add_literals" (formula "70") (term "1,0"))
                                                (rule "times_zero_1" (formula "70") (term "0"))
                                                (rule "leq_literals" (formula "70"))
                                                (rule "true_left" (formula "70"))
                                                (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "69"))
                                                (rule "polySimp_mulComm0" (formula "52") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "52") (term "0,0"))
                                                (rule "mul_literals" (formula "52") (term "0,0,0"))
                                                (rule "applyEq" (formula "58") (term "0,1,1") (ifseqformula "69"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "58") (term "1,1"))
                                                (rule "mul_literals" (formula "58") (term "0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "58") (term "1"))
                                                (rule "add_literals" (formula "58") (term "0,1"))
                                                (rule "applyEq" (formula "69") (term "1,1,0,0,0,0") (ifseqformula "68"))
                                                (rule "polySimp_addAssoc" (formula "69") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "69") (term "0,1,0,0,0,0"))
                                                (rule "add_zero_left" (formula "69") (term "1,0,0,0,0"))
                                                (rule "applyEqRigid" (formula "69") (term "1,1,0,1,1,0") (ifseqformula "68"))
                                                (rule "polySimp_addAssoc" (formula "69") (term "1,0,1,1,0"))
                                                (rule "add_literals" (formula "69") (term "0,1,0,1,1,0"))
                                                (rule "add_zero_left" (formula "69") (term "1,0,1,1,0"))
                                                (rule "applyEq" (formula "57") (term "0") (ifseqformula "68"))
                                                (rule "inEqSimp_homoInEq0" (formula "57"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                (rule "mul_literals" (formula "57") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                (rule "polySimp_addComm0" (formula "57") (term "0,0"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "68"))
                                                (rule "applyEqRigid" (formula "52") (term "1") (ifseqformula "68"))
                                                (rule "applyEq" (formula "53") (term "0,1") (ifseqformula "68"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "1"))
                                                (rule "polySimp_rightDist" (formula "53") (term "1"))
                                                (rule "mul_literals" (formula "53") (term "0,1"))
                                                (rule "applyEq" (formula "51") (term "0,1") (ifseqformula "68"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1"))
                                                (rule "polySimp_rightDist" (formula "51") (term "1"))
                                                (rule "mul_literals" (formula "51") (term "0,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "56"))
                                                (rule "polySimp_mulLiterals" (formula "56") (term "0"))
                                                (rule "polySimp_elimOne" (formula "56") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                                                (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                                (rule "polySimp_elimOne" (formula "71") (term "0"))
                                                (rule "inEqSimp_invertInEq0" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "mul_literals" (formula "5") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "56"))
                                                (rule "polySimp_mulLiterals" (formula "56") (term "0"))
                                                (rule "polySimp_elimOne" (formula "56") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                (rule "mul_literals" (formula "57") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "19"))
                                                (rule "leq_literals" (formula "4") (term "0"))
                                                (rule "concrete_or_1" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "17"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                (rule "concrete_or_1" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "16"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                (rule "concrete_or_1" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "inEqSimp_subsumption1" (formula "67") (ifseqformula "53"))
                                                (rule "inEqSimp_homoInEq0" (formula "67") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "67") (term "1,0,0"))
                                                (rule "mul_literals" (formula "67") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "67") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "67") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "67") (term "0,0"))
                                                (rule "add_literals" (formula "67") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "67") (term "1,0,0"))
                                                (rule "add_literals" (formula "67") (term "0,0"))
                                                (rule "qeq_literals" (formula "67") (term "0"))
                                                (rule "concrete_or_1" (formula "67"))
                                                (rule "true_left" (formula "67"))
                                                (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "58"))
                                                (rule "leq_literals" (formula "54") (term "0"))
                                                (rule "concrete_or_1" (formula "54"))
                                                (rule "true_left" (formula "54"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "51"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "inEqSimp_subsumption4" (formula "1") (ifseqformula "61"))
                                                (rule "greater_literals" (formula "1") (term "0,0"))
                                                (rule "concrete_and_1" (formula "1") (term "0"))
                                                (rule "mul_literals" (formula "1") (term "0,0"))
                                                (rule "leq_literals" (formula "1") (term "0"))
                                                (rule "concrete_or_1" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "12"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "inEqSimp_subsumption4" (formula "1") (ifseqformula "62"))
                                                (rule "greater_literals" (formula "1") (term "0,0"))
                                                (rule "concrete_and_1" (formula "1") (term "0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                (rule "concrete_or_1" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "nnf_notAnd" (formula "35") (term "0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "35") (term "0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0"))
                                                (rule "nnf_notAnd" (formula "45") (term "0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "45") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "45") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "45") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "45") (term "0,0,0,1,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "45") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "45") (term "0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "45") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "45") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "45") (term "1,0,1,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "34") (term "0"))
                                                (rule "commute_or" (formula "26") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "63") (term "0"))
                                                (rule "commute_or_2" (formula "18") (term "0,0,1,0"))
                                                (rule "inEqSimp_or_weaken2" (formula "18") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "1,0,1,0,1,0"))
                                                (rule "add_literals" (formula "18") (term "0,1,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "18") (term "1,0,1,0,1,0"))
                                                (rule "eqClose" (formula "18") (term "0,1,0,1,0"))
                                                (rule "ifthenelse_true_for" (formula "18") (term "1,0,1,0"))
                                                (rule "commute_or" (formula "17") (term "0,0,1,1,0"))
                                                (rule "commute_and" (formula "33") (term "1,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "43") (term "0,1,1,0"))
                                                (rule "commute_and" (formula "33") (term "1,0,0,0,0,1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "4"))
                                                (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "43"))
                                                (rule "concrete_or_1" (formula "42"))
                                                (rule "true_left" (formula "42"))
                                                (rule "distr_forallAnd" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "distr_forallAnd" (formula "64"))
                                                (rule "andLeft" (formula "64"))
                                                (rule "commute_or_2" (formula "62") (term "0"))
                                                (rule "commute_or_2" (formula "64") (term "0"))
                                                (rule "shift_paren_or" (formula "34") (term "0,1,0"))
                                                (rule "shift_paren_or" (formula "63") (term "0"))
                                                (rule "shift_paren_or" (formula "65") (term "0"))
                                                (rule "commute_or" (formula "62") (term "0,0"))
                                                (rule "commute_or" (formula "64") (term "0,0"))
                                                (rule "commute_or" (formula "44") (term "0,1,1,0"))
                                                (rule "jdiv_axiom" (formula "48") (term "0"))
                                                (rule "eqSymm" (formula "48"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "0,0,2,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "0,0,2,0"))
                                                (rule "mul_literals" (formula "48") (term "0,0,0,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,2,0"))
                                                (rule "applyEqRigid" (formula "48") (term "1") (ifseqformula "49"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0"))
                                                (rule "mul_literals" (formula "48") (term "1,0,0"))
                                                (rule "inEqSimp_subsumption6" (formula "48") (term "0,0") (ifseqformula "57"))
                                                (rule "times_zero_1" (formula "48") (term "1,1,0,0,0"))
                                                (rule "greater_literals" (formula "48") (term "0,0,0,0"))
                                                (rule "concrete_and_1" (formula "48") (term "0,0,0"))
                                                (rule "leq_literals" (formula "48") (term "0,0,0"))
                                                (rule "concrete_or_1" (formula "48") (term "0,0"))
                                                (rule "ifthenelse_true" (formula "48") (term "0"))
                                                (rule "polyDiv_pullOut" (formula "48") (term "0") (inst "polyDivCoeff=l_1"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,2,0"))
                                                (rule "equal_literals" (formula "48") (term "0,0"))
                                                (rule "ifthenelse_false" (formula "48") (term "0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0,0"))
                                                (rule "add_literals" (formula "48") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "48") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "48") (term "0,0,0"))
                                                (rule "div_literals" (formula "48") (term "0,0"))
                                                (rule "eqClose" (formula "48"))
                                                (rule "true_left" (formula "48"))
                                                (rule "commute_or" (formula "18") (term "0,0,1,0"))
                                                (rule "commute_or_2" (formula "34") (term "0,0,1,0"))
                                                (rule "inEqSimp_or_weaken2" (formula "34") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "1,0,1,0,1,0"))
                                                (rule "add_literals" (formula "34") (term "0,1,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "34") (term "1,0,1,0,1,0"))
                                                (rule "eqClose" (formula "34") (term "0,1,0,1,0"))
                                                (rule "ifthenelse_true_for" (formula "34") (term "1,0,1,0"))
                                                (rule "commute_or" (formula "43") (term "0,0,1,1,0"))
                                                (rule "commute_or" (formula "34") (term "0,0,1,0"))
                                                (rule "commute_or_2" (formula "42") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "42") (term "0,1,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "42") (term "0,1,1,0"))
                                                (rule "commute_or_2" (formula "42") (term "1,0,1,1,0"))
                                                (rule "shift_paren_or" (formula "42") (term "0,0,1,1,0"))
                                                (rule "commute_or" (formula "42") (term "0,1,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "33") (term "0,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "33") (term "0,0,0,0,0,1,1,0"))
                                                (rule "all_pull_out3" (formula "17") (term "1,0"))
                                                (rule "shift_paren_or" (formula "17") (term "0,1,0"))
                                                (rule "shift_paren_or" (formula "17") (term "0,0,1,0"))
                                                (rule "commute_or_2" (formula "17") (term "0,0,0,1,0"))
                                                (rule "cnf_rightDist" (formula "33") (term "1,0,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "33") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "33") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "33") (term "0,0,0,0,0,1,1,0"))
                                                (rule "eq_or" (formula "33") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "33") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "all_pull_out3" (formula "18") (term "0"))
                                                (rule "shift_paren_or" (formula "18") (term "0,0"))
                                                (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "18") (term "0,0,0,0"))
                                                (rule "commute_or" (formula "18") (term "0,0,0,0,0"))
                                                (rule "all_pull_out3" (formula "42") (term "1,0"))
                                                (rule "cnf_rightDist" (formula "42") (term "0,1,0"))
                                                (rule "commute_or_2" (formula "42") (term "1,0,1,0"))
                                                (rule "shift_paren_or" (formula "42") (term "0,0,1,0"))
                                                (rule "commute_or_2" (formula "42") (term "0,1,0,1,0"))
                                                (rule "shift_paren_or" (formula "42") (term "0,0,0,1,0"))
                                                (rule "commute_or_2" (formula "42") (term "0,0,0,0,1,0"))
                                                (rule "shift_paren_or" (formula "42") (term "0,0,1,0,1,0"))
                                                (rule "commute_or" (formula "42") (term "0,0,0,1,0,1,0"))
                                                (rule "all_pull_out3" (formula "17") (term "0"))
                                                (rule "shift_paren_or" (formula "17") (term "0,0"))
                                                (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                (rule "shift_paren_or" (formula "17") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "17") (term "0,0,0,0,0"))
                                                (rule "commute_or" (formula "17") (term "0,0,0,0,0,0"))
                                                (rule "shift_paren_and" (formula "33") (term "0,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "33") (term "0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "33") (term "0,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "33") (term "1,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "33") (term "1,1,0,0,0,1,1,0"))
                                                (rule "eq_or" (formula "33") (term "0,1,1,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "33") (term "0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "33") (term "1,0,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "33") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "33") (term "0,1,0,0,0,1,1,0"))
                                                (rule "eq_or_2" (formula "33") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "33") (term "0,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "33") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "all_pull_out3" (formula "42") (term "0"))
                                                (rule "cnf_rightDist" (formula "42") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "42") (term "0"))
                                                (rule "distr_forallAnd" (formula "42"))
                                                (rule "andLeft" (formula "42"))
                                                (rule "commute_or_2" (formula "43") (term "0,0"))
                                                (rule "shift_paren_or" (formula "42") (term "0,0"))
                                                (rule "commute_or_2" (formula "43") (term "0,0,0"))
                                                (rule "shift_paren_or" (formula "42") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "43") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "42") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "42") (term "0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "43") (term "0,0,0,0,0"))
                                                (rule "commute_or" (formula "42") (term "0,0,0,0,0,0"))
                                                (rule "allLeft" (formula "26") (inst "t=i_1_2"))
                                                (rule "replace_known_left" (formula "26") (term "0,0,0,0") (ifseqformula "42"))
                                                (rule "concrete_not_1" (formula "26") (term "0,0,0"))
                                                (rule "concrete_or_2" (formula "26") (term "0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "40"))
                                                (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                (rule "concrete_and_2" (formula "26") (term "1,0"))
                                                (rule "concrete_or_4" (formula "26") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "26") (term "1") (ifseqformula "41"))
                                                (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                                (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                                (rule "leq_literals" (formula "26") (term "0,1"))
                                                (rule "concrete_and_2" (formula "26") (term "1"))
                                                (rule "concrete_or_4" (formula "26"))
                                                (rule "allLeft" (formula "27") (inst "t=i_1_0"))
                                                (rule "replace_known_left" (formula "27") (term "0,0,0,0") (ifseqformula "21"))
                                                (rule "concrete_not_1" (formula "27") (term "0,0,0"))
                                                (rule "concrete_or_2" (formula "27") (term "0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "19"))
                                                (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                (rule "concrete_and_2" (formula "27") (term "1,0"))
                                                (rule "concrete_or_4" (formula "27") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "27") (term "1") (ifseqformula "20"))
                                                (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "27") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                                                (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                                (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                                (rule "leq_literals" (formula "27") (term "0,1"))
                                                (rule "concrete_and_2" (formula "27") (term "1"))
                                                (rule "concrete_or_4" (formula "27"))
                                                (rule "allLeft" (formula "65") (inst "t=i_1_0"))
                                                (rule "replace_known_left" (formula "65") (term "0,0,0") (ifseqformula "21"))
                                                (rule "concrete_not_1" (formula "65") (term "0,0"))
                                                (rule "concrete_or_2" (formula "65") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "65") (term "0") (ifseqformula "19"))
                                                (rule "qeq_literals" (formula "65") (term "0,0"))
                                                (rule "concrete_and_2" (formula "65") (term "0"))
                                                (rule "concrete_or_2" (formula "65"))
                                                (rule "inEqSimp_exactShadow3" (formula "65") (ifseqformula "20"))
                                                (rule "polySimp_mulComm0" (formula "65") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "65") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "65"))
                                                (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                                                (rule "polySimp_elimOne" (formula "65") (term "0"))
                                                (rule "allLeft" (formula "66") (inst "t=i_1_2"))
                                                (rule "replace_known_left" (formula "66") (term "0,0,0") (ifseqformula "43"))
                                                (rule "concrete_not_1" (formula "66") (term "0,0"))
                                                (rule "concrete_or_2" (formula "66") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "66") (term "0") (ifseqformula "41"))
                                                (rule "qeq_literals" (formula "66") (term "0,0"))
                                                (rule "concrete_and_2" (formula "66") (term "0"))
                                                (rule "concrete_or_2" (formula "66"))
                                                (rule "inEqSimp_exactShadow3" (formula "66") (ifseqformula "42"))
                                                (rule "polySimp_mulComm0" (formula "66") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "66") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "66"))
                                                (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                                                (rule "polySimp_elimOne" (formula "66") (term "0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "35") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,1,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "35") (term "0,0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "shift_paren_and" (formula "35") (term "0,0,0,1,1,0"))
                                                (rule "shift_paren_and" (formula "35") (term "0,0,0,0,1,1,0"))
                                                (rule "shift_paren_and" (formula "35") (term "0,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "35") (term "0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,1,1,0"))
                                                (rule "commute_or" (formula "35") (term "0,1,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "35") (term "0,1,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "35") (term "0,0,1,0,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "35") (term "0,1,0,0,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "35") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "35") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "shift_paren_or" (formula "35") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "35") (term "0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "1,0,1,1,0"))
                                                (rule "eq_or_2" (formula "35") (term "1,1,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,1,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,1,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,1,0,1,1,0"))
                                                (rule "eq_or_2" (formula "35") (term "1,0,0,1,0,1,1,0"))
                                                (rule "eq_and_2" (formula "35") (term "0,1,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,1,0,1,1,0"))
                                                (rule "eq_and_2" (formula "35") (term "0,1,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,1,0,1,1,0"))
                                                (rule "eq_or_2" (formula "35") (term "1,0,0,1,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,0,1,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                                (rule "eq_or_2" (formula "35") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,0,0,1,0,1,1,0"))
                                                (rule "eq_or_2" (formula "35") (term "1,0,0,0,0,1,0,1,1,0"))
                                                (rule "commute_or" (formula "35") (term "0,0,0,0,0,1,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,1,0,0,0,0,1,0,1,1,0"))
                                                (rule "commute_or" (formula "35") (term "0,0,1,0,0,0,0,1,0,1,1,0"))
                                                (rule "eq_and" (formula "35") (term "0,0,0,0,1,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "eq_or_2" (formula "35") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "allLeft" (formula "63") (inst "t=i_1_2"))
                                                (rule "replace_known_left" (formula "63") (term "0,0,0") (ifseqformula "43"))
                                                (rule "concrete_not_1" (formula "63") (term "0,0"))
                                                (rule "concrete_or_2" (formula "63") (term "0"))
                                                (rule "inEqSimp_commuteGeq" (formula "63") (term "1"))
                                                (rule "allLeft" (formula "64") (inst "t=i_1_0"))
                                                (rule "replace_known_left" (formula "64") (term "0,0,0") (ifseqformula "21"))
                                                (rule "concrete_not_1" (formula "64") (term "0,0"))
                                                (rule "concrete_or_2" (formula "64") (term "0"))
                                                (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                (rule "allLeft" (formula "65") (inst "t=quotient_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                                (rule "inEqSimp_commuteLeq" (formula "65") (term "1,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "65") (term "1,0") (ifseqformula "61"))
                                                (rule "inEqSimp_homoInEq1" (formula "65") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "65") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "65") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "65") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "65") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "65") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "65") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "65") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "65") (term "0,1,0"))
                                                (rule "concrete_and_2" (formula "65") (term "1,0"))
                                                (rule "concrete_or_4" (formula "65") (term "0"))
                                                (rule "allLeft" (formula "67") (inst "t=quotient_0"))
                                                (rule "inEqSimp_commuteLeq" (formula "67") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                                (rule "inEqSimp_contradInEq0" (formula "67") (term "1,0") (ifseqformula "61"))
                                                (rule "inEqSimp_homoInEq1" (formula "67") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "67") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "67") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "67") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "67") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "67") (term "0,1,0"))
                                                (rule "concrete_and_2" (formula "67") (term "1,0"))
                                                (rule "concrete_or_4" (formula "67") (term "0"))
                                                (rule "allLeft" (formula "68") (inst "t=i_1_2"))
                                                (rule "inEqSimp_commuteGeq" (formula "68") (term "1"))
                                                (rule "applyEq" (formula "68") (term "0,0,0,0") (ifseqformula "43"))
                                                (rule "eqSymm" (formula "68") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "68") (term "0,0,0") (ifseqformula "83"))
                                                (rule "concrete_not_2" (formula "68") (term "0,0"))
                                                (rule "concrete_or_1" (formula "68") (term "0"))
                                                (rule "concrete_or_1" (formula "68"))
                                                (rule "true_left" (formula "68"))
                                                (rule "allLeft" (formula "68") (inst "t=i_1_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "68") (term "1"))
                                                (rule "applyEq" (formula "68") (term "0,0,0,0") (ifseqformula "21"))
                                                (rule "eqSymm" (formula "68") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "68") (term "0,0,0") (ifseqformula "83"))
                                                (rule "concrete_not_2" (formula "68") (term "0,0"))
                                                (rule "concrete_or_1" (formula "68") (term "0"))
                                                (rule "concrete_or_1" (formula "68"))
                                                (rule "true_left" (formula "68"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_and_2" (formula "35") (term "1,0,1,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0") (ifseqformula "4"))
                                                (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "27"))
                                                (rule "concrete_or_1" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "shift_paren_or" (formula "35") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "35") (term "0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "eq_or_2" (formula "35") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "shift_paren_and" (formula "35") (term "0,1,1,0"))
                                                (rule "shift_paren_and" (formula "35") (term "0,0,1,1,0"))
                                                (rule "shift_paren_and" (formula "35") (term "0,0,0,1,1,0"))
                                                (rule "shift_paren_and" (formula "35") (term "0,0,0,0,1,1,0"))
                                                (rule "all_pull_out3" (formula "35") (term "1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,1,0,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,0,1,0,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,1,0,0,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,0,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,0,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,1,0,0,0,1,0"))
                                                (rule "shift_paren_or" (formula "35") (term "0,0,0,1,0,1,0"))
                                                (rule "shift_paren_or" (formula "35") (term "0,0,1,0,0,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,0,1,0,0,0,1,0"))
                                                (rule "commute_or" (formula "35") (term "0,0,0,0,1,0,1,0"))
                                                (rule "commute_or" (formula "35") (term "0,0,0,1,0,0,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,0,0,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,0,0,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,1,0,0,0,0,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,0,1,0,0,0,0,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,0,0,0,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,0,0,0,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,1,0,0,0,0,0,1,0"))
                                                (rule "shift_paren_or" (formula "35") (term "0,0,0,1,0,0,0,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,0,0,1,0,0,0,0,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,0,1,0,0,0,0,0,1,0"))
                                                (rule "commute_or" (formula "35") (term "0,0,0,0,1,0,0,0,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,0,0,0,0,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,0,0,0,0,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,1,0,0,0,0,0,0,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,0,1,0,0,0,0,0,0,1,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0,0,0,0,0,0,0,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "1,0,0,0,0,0,0,0,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,1,0,0,0,0,0,0,0,1,0"))
                                                (rule "shift_paren_or" (formula "35") (term "0,0,0,0,1,0,0,0,0,1,0"))
                                                (rule "shift_paren_or" (formula "35") (term "0,0,0,1,0,0,0,0,0,1,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,0,1,0,0,0,0,0,0,0,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "4"))
                                                (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "28"))
                                                (rule "concrete_or_1" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "commute_or" (formula "35") (term "0,0,0,0,0,1,0,0,0,0,1,0"))
                                                (rule "commute_or" (formula "35") (term "0,0,0,0,1,0,0,0,0,0,1,0"))
                                                (rule "cut_direct" (formula "63") (term "0"))
                                                (branch "CUT: i_1_2 <= l_1 TRUE"
                                                   (rule "concrete_or_1" (formula "64"))
                                                   (rule "true_left" (formula "64"))
                                                   (rule "inEqSimp_antiSymm" (formula "70") (ifseqformula "63"))
                                                   (rule "applyEqRigid" (formula "43") (term "0,0,2,0") (ifseqformula "70"))
                                                   (rule "close" (formula "78") (ifseqformula "43"))
                                                )
                                                (branch "CUT: i_1_2 <= l_1 FALSE"
                                                   (rule "concrete_or_2" (formula "63"))
                                                   (rule "inEqSimp_leqRight" (formula "77"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "71") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "71") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,0"))
                                                   (rule "add_literals" (formula "71") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "71") (term "1,0,0"))
                                                   (rule "add_literals" (formula "71") (term "0,0"))
                                                   (rule "qeq_literals" (formula "71") (term "0"))
                                                   (rule "concrete_or_1" (formula "71"))
                                                   (rule "true_left" (formula "71"))
                                                   (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "64"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                                   (rule "mul_literals" (formula "33") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "44"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "64") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "64") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "64") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "64") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "64") (term "0,0,0"))
                                                   (rule "add_literals" (formula "64") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                                                   (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                                   (rule "add_literals" (formula "64") (term "0,0"))
                                                   (rule "qeq_literals" (formula "64") (term "0"))
                                                   (rule "concrete_or_1" (formula "64"))
                                                   (rule "true_left" (formula "64"))
                                                   (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "65"))
                                                   (rule "mul_literals" (formula "18") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                   (rule "mul_literals" (formula "18") (term "1"))
                                                   (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=i_1_2") (inst "elimGcd=Z(2(#))"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                                   (rule "leq_literals" (formula "18") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "18") (term "0"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0"))
                                                   (rule "leq_literals" (formula "18") (term "0"))
                                                   (rule "concrete_or_2" (formula "18"))
                                                   (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "18"))
                                                   (rule "leq_literals" (formula "45") (term "0"))
                                                   (rule "concrete_or_1" (formula "45"))
                                                   (rule "true_left" (formula "45"))
                                                   (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "65"))
                                                   (rule "polySimp_mulAssoc" (formula "13") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                                                   (rule "inEqSimp_contradInEq3" (formula "13") (ifseqformula "46"))
                                                   (rule "greater_literals" (formula "13") (term "0,0"))
                                                   (rule "concrete_impl_1" (formula "13") (term "0"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "0"))
                                                   (rule "mul_literals" (formula "13") (term "0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "13"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
                                                   (rule "add_literals" (formula "13") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "13") (term "1,0"))
                                                   (rule "add_literals" (formula "13") (term "0"))
                                                   (rule "leq_literals" (formula "13"))
                                                   (rule "closeFalse" (formula "13"))
                                                )
                                             )
                                          )
                                          (branch "CUT: pow(2, i_1_1) >= l_0 * -2 + result_2 FALSE"
                                             (rule "concrete_and_2" (formula "81"))
                                             (rule "false_right" (formula "81"))
                                             (rule "inEqSimp_geqRight" (formula "80"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                             (rule "mul_literals" (formula "1") (term "0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "16") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1"))
                                             (rule "mul_literals" (formula "16") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "16"))
                                             (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                             (rule "concrete_or_1" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_exactShadow3" (formula "61") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "61") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0"))
                                             (rule "mul_literals" (formula "61") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "61") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "61") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "61") (term "0,0,0"))
                                             (rule "add_literals" (formula "61") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "61"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1"))
                                             (rule "polySimp_rightDist" (formula "61") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "61") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "61") (term "0,1"))
                                             (rule "mul_literals" (formula "61") (term "0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "61") (term "1,0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                             (rule "mul_literals" (formula "39") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "39") (term "0,1"))
                                             (rule "mul_literals" (formula "39") (term "0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "56") (term "0,0"))
                                             (rule "mul_literals" (formula "56") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "56") (term "0"))
                                             (rule "polySimp_pullOutFactor3" (formula "56") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "56") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0"))
                                             (rule "mul_literals" (formula "56") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "56"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1"))
                                             (rule "polySimp_rightDist" (formula "56") (term "1"))
                                             (rule "mul_literals" (formula "56") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "56") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                                             (rule "polySimp_mulAssoc" (formula "10") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                                             (rule "mul_literals" (formula "10") (term "0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                             (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "31") (term "0,1"))
                                             (rule "mul_literals" (formula "31") (term "0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "74"))
                                             (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "10") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_0, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                                             (rule "neg_literal" (formula "10") (term "0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "10") (term "0,0"))
                                             (rule "concrete_or_2" (formula "10") (term "0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                             (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "10") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                             (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "10") (term "0,0"))
                                             (rule "qeq_literals" (formula "10") (term "0"))
                                             (rule "concrete_or_2" (formula "10"))
                                             (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "75"))
                                             (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "17") (term "0"))
                                             (rule "add_literals" (formula "17") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                             (rule "inEqSimp_subsumption4" (formula "17") (ifseqformula "58"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0"))
                                             (rule "greater_literals" (formula "17") (term "0,0"))
                                             (rule "concrete_and_1" (formula "17") (term "0"))
                                             (rule "leq_literals" (formula "17") (term "0"))
                                             (rule "concrete_or_1" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "75"))
                                             (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "0,0,0"))
                                             (rule "mul_literals" (formula "32") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "76"))
                                             (rule "polySimp_rightDist" (formula "43") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "61") (ifseqformula "77"))
                                             (rule "polySimp_rightDist" (formula "61") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0"))
                                             (rule "mul_literals" (formula "61") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "61") (term "0"))
                                             (rule "add_literals" (formula "61") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "61"))
                                             (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                                             (rule "inEqSimp_subsumption4" (formula "61") (ifseqformula "59"))
                                             (rule "mul_literals" (formula "61") (term "0,1,0"))
                                             (rule "greater_literals" (formula "61") (term "0,0"))
                                             (rule "concrete_and_1" (formula "61") (term "0"))
                                             (rule "leq_literals" (formula "61") (term "0"))
                                             (rule "concrete_or_1" (formula "61"))
                                             (rule "true_left" (formula "61"))
                                             (rule "inEqSimp_exactShadow3" (formula "68") (ifseqformula "77"))
                                             (rule "polySimp_rightDist" (formula "68") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "68") (term "0"))
                                             (rule "polySimp_rightDist" (formula "68") (term "0,0,0"))
                                             (rule "mul_literals" (formula "68") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "68") (term "0,0"))
                                             (rule "add_literals" (formula "68") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "68"))
                                             (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "68") (inst "elimGcdRightDiv=add(Z(2(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(l_1, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "68") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,1,0"))
                                             (rule "neg_literal" (formula "68") (term "0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "68") (term "0,0"))
                                             (rule "concrete_or_2" (formula "68") (term "0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0"))
                                             (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "68") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "68") (term "0,0,0"))
                                             (rule "add_literals" (formula "68") (term "0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "68") (term "0,0,0"))
                                             (rule "add_literals" (formula "68") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0"))
                                             (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "68") (term "0,0"))
                                             (rule "qeq_literals" (formula "68") (term "0"))
                                             (rule "concrete_or_2" (formula "68"))
                                             (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "10"))
                                             (rule "mul_literals" (formula "63") (term "0,0"))
                                             (rule "add_zero_left" (formula "63") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "63"))
                                             (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                                             (rule "polySimp_elimOne" (formula "63") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "63") (ifseqformula "9"))
                                             (rule "leq_literals" (formula "63") (term "0"))
                                             (rule "concrete_or_1" (formula "63"))
                                             (rule "true_left" (formula "63"))
                                             (rule "inEqSimp_exactShadow3" (formula "75") (ifseqformula "10"))
                                             (rule "polySimp_rightDist" (formula "75") (term "0,0"))
                                             (rule "mul_literals" (formula "75") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "75") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "75") (term "0,0"))
                                             (rule "add_literals" (formula "75") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "75"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                             (rule "polySimp_elimOne" (formula "75") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "76") (ifseqformula "68"))
                                             (rule "polySimp_rightDist" (formula "76") (term "0,0"))
                                             (rule "mul_literals" (formula "76") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "76") (term "0"))
                                             (rule "polySimp_addComm1" (formula "76") (term "0,0"))
                                             (rule "add_literals" (formula "76") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "76") (term "0"))
                                             (rule "add_literals" (formula "76") (term "1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "76"))
                                             (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                             (rule "inEqSimp_subsumption4" (formula "76") (ifseqformula "73"))
                                             (rule "mul_literals" (formula "76") (term "0,1,0"))
                                             (rule "greater_literals" (formula "76") (term "0,0"))
                                             (rule "concrete_and_1" (formula "76") (term "0"))
                                             (rule "leq_literals" (formula "76") (term "0"))
                                             (rule "concrete_or_1" (formula "76"))
                                             (rule "true_left" (formula "76"))
                                             (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "68"))
                                             (rule "mul_literals" (formula "63") (term "0,0"))
                                             (rule "add_zero_left" (formula "63") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "63"))
                                             (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                                             (rule "polySimp_elimOne" (formula "63") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "63") (ifseqformula "74"))
                                             (rule "leq_literals" (formula "63") (term "0"))
                                             (rule "concrete_or_1" (formula "63"))
                                             (rule "true_left" (formula "63"))
                                             (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "32"))
                                             (rule "times_zero_1" (formula "29") (term "0,0"))
                                             (rule "add_zero_left" (formula "29") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                             (rule "inEqSimp_subsumption4" (formula "29") (ifseqformula "60"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0"))
                                             (rule "greater_literals" (formula "29") (term "0,0"))
                                             (rule "concrete_and_1" (formula "29") (term "0"))
                                             (rule "leq_literals" (formula "29") (term "0"))
                                             (rule "concrete_or_1" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "43"))
                                             (rule "times_zero_1" (formula "40") (term "0,0"))
                                             (rule "add_zero_left" (formula "40") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                             (rule "inEqSimp_subsumption4" (formula "40") (ifseqformula "60"))
                                             (rule "greater_literals" (formula "40") (term "0,0"))
                                             (rule "concrete_and_1" (formula "40") (term "0"))
                                             (rule "mul_literals" (formula "40") (term "0,0"))
                                             (rule "leq_literals" (formula "40") (term "0"))
                                             (rule "concrete_or_1" (formula "40"))
                                             (rule "true_left" (formula "40"))
                                             (rule "inEqSimp_exactShadow3" (formula "67") (ifseqformula "75"))
                                             (rule "mul_literals" (formula "67") (term "0,0"))
                                             (rule "add_zero_left" (formula "67") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "67"))
                                             (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                             (rule "polySimp_elimOne" (formula "67") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "67") (ifseqformula "9"))
                                             (rule "leq_literals" (formula "67") (term "0"))
                                             (rule "concrete_or_1" (formula "67"))
                                             (rule "true_left" (formula "67"))
                                             (rule "commute_or_2" (formula "19") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "78") (term "0,0"))
                                             (rule "nnf_imp2or" (formula "50") (term "0"))
                                             (rule "cnf_rightDist" (formula "77") (term "0"))
                                             (rule "commute_or_2" (formula "28") (term "0"))
                                             (rule "shift_paren_or" (formula "20") (term "0,1,0"))
                                             (rule "commute_and" (formula "39") (term "0,0,1,0"))
                                             (rule "nnf_imp2or" (formula "51") (term "0"))
                                             (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                             (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "85") (term "0") (ifseqformula "3"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "86"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "nnf_notOr" (formula "38") (term "1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "38") (term "1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "38") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "38") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "38") (term "0,0,0,0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "40") (term "0"))
                                             (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "51") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                             (rule "mul_literals" (formula "51") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "51") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "51") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "52") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "52") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "52") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "51") (term "0,1,0"))
                                             (rule "double_not" (formula "51") (term "0,0,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "51") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,1,0"))
                                             (rule "add_literals" (formula "51") (term "0,0,0,1,0,1,0"))
                                             (rule "add_zero_left" (formula "51") (term "0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,1,0"))
                                             (rule "nnf_notAnd" (formula "52") (term "0,1,0"))
                                             (rule "double_not" (formula "52") (term "0,0,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "52") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,1,0"))
                                             (rule "add_literals" (formula "52") (term "0,0,0,1,0,1,0"))
                                             (rule "add_zero_left" (formula "52") (term "0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,1,0"))
                                             (rule "nnf_imp2or" (formula "51") (term "0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "52") (term "0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "40") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                             (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "40") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "40") (term "0,1,0"))
                                             (rule "nnf_notOr" (formula "38") (term "1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "38") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "38") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "38") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "38") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "38") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,0,0,1,1,0"))
                                             (rule "nnf_notOr" (formula "38") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "51") (term "0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "51") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,1,1,0"))
                                             (rule "nnf_notOr" (formula "52") (term "0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "40") (term "0,0,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,0"))
                                             (rule "distr_forallAnd" (formula "78"))
                                             (rule "andLeft" (formula "78"))
                                             (rule "nnf_notAnd" (formula "52") (term "0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "52") (term "0,0,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "52") (term "1,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "52") (term "0,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "52") (term "1,0,0,0,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "52") (term "1,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "52") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "52") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "52") (term "0,0,0,1,1,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "52") (term "0,0,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,1,1,0"))
                                             (rule "cut_direct" (formula "85") (term "0"))
                                             (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 TRUE"
                                                (rule "concrete_impl_1" (formula "86"))
                                                (rule "applyEq" (formula "45") (term "0") (ifseqformula "86"))
                                                (rule "inEqSimp_homoInEq1" (formula "45"))
                                                (rule "times_zero_2" (formula "45") (term "1,0"))
                                                (rule "add_zero_right" (formula "45") (term "0"))
                                                (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "86"))
                                                (rule "add_zero_right" (formula "2") (term "1"))
                                                (rule "applyEq" (formula "81") (term "0") (ifseqformula "86"))
                                                (rule "leq_literals" (formula "81"))
                                                (rule "true_left" (formula "81"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "85"))
                                                (rule "inEqSimp_homoInEq1" (formula "62"))
                                                (rule "times_zero_2" (formula "62") (term "1,0"))
                                                (rule "add_zero_right" (formula "62") (term "0"))
                                                (rule "applyEq" (formula "81") (term "0") (ifseqformula "85"))
                                                (rule "qeq_literals" (formula "81"))
                                                (rule "true_left" (formula "81"))
                                                (rule "applyEq" (formula "12") (term "0") (ifseqformula "84"))
                                                (rule "inEqSimp_homoInEq1" (formula "12"))
                                                (rule "times_zero_2" (formula "12") (term "1,0"))
                                                (rule "add_zero_right" (formula "12") (term "0"))
                                                (rule "applyEq" (formula "34") (term "0") (ifseqformula "84"))
                                                (rule "inEqSimp_homoInEq1" (formula "34"))
                                                (rule "times_zero_2" (formula "34") (term "1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0"))
                                                (rule "applyEq" (formula "70") (term "0") (ifseqformula "84"))
                                                (rule "inEqSimp_homoInEq1" (formula "70"))
                                                (rule "times_zero_2" (formula "70") (term "1,0"))
                                                (rule "add_zero_right" (formula "70") (term "0"))
                                                (rule "applyEq" (formula "82") (term "0,1") (ifseqformula "84"))
                                                (rule "polySimp_homoEq" (formula "82") (term "1"))
                                                (rule "times_zero_2" (formula "82") (term "1,0,1"))
                                                (rule "add_zero_right" (formula "82") (term "0,1"))
                                                (rule "applyEq" (formula "18") (term "0") (ifseqformula "84"))
                                                (rule "inEqSimp_homoInEq1" (formula "18"))
                                                (rule "times_zero_2" (formula "18") (term "1,0"))
                                                (rule "add_zero_right" (formula "18") (term "0"))
                                                (rule "polySimp_sepPosMonomial" (formula "82") (term "1"))
                                                (rule "mul_literals" (formula "82") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "45"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1"))
                                                (rule "mul_literals" (formula "45") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "62"))
                                                (rule "mul_literals" (formula "62") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                (rule "mul_literals" (formula "12") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1"))
                                                (rule "mul_literals" (formula "34") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "70"))
                                                (rule "polySimp_mulComm0" (formula "70") (term "1"))
                                                (rule "polySimp_rightDist" (formula "70") (term "1"))
                                                (rule "mul_literals" (formula "70") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "70") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                                                (rule "mul_literals" (formula "18") (term "1"))
                                                (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "34"))
                                                (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                                (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                                                (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                (rule "add_literals" (formula "33") (term "0,0"))
                                                (rule "qeq_literals" (formula "33") (term "0"))
                                                (rule "concrete_or_1" (formula "33"))
                                                (rule "true_left" (formula "33"))
                                                (rule "inEqSimp_contradInEq5" (formula "18") (ifseqformula "63"))
                                                (rule "greater_literals" (formula "18") (term "0,0"))
                                                (rule "concrete_impl_1" (formula "18") (term "0"))
                                                (rule "times_zero_1" (formula "18") (term "1,0"))
                                                (rule "qeq_literals" (formula "18") (term "0"))
                                                (rule "concrete_and_2" (formula "18"))
                                                (rule "closeFalse" (formula "18"))
                                             )
                                             (branch "CUT: pow(2, i_1_1) <= 2 + l_1 * 2 FALSE"
                                                (rule "concrete_impl_2" (formula "85"))
                                                (rule "true_left" (formula "85"))
                                                (rule "inEqSimp_leqRight" (formula "86"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "replace_known_left" (formula "85") (term "0") (ifseqformula "1"))
                                                (rule "concrete_impl_1" (formula "85"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "85"))
                                                (rule "inEqSimp_homoInEq1" (formula "35"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                                (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "35") (term "0,0,0"))
                                                (rule "applyEq" (formula "82") (term "0") (ifseqformula "85"))
                                                (rule "inEqSimp_homoInEq0" (formula "82"))
                                                (rule "polySimp_mulComm0" (formula "82") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "82") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0"))
                                                (rule "mul_literals" (formula "82") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "82") (term "0"))
                                                (rule "add_literals" (formula "82") (term "0,0"))
                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "85"))
                                                (rule "inEqSimp_homoInEq1" (formula "19"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0"))
                                                (rule "applyEq" (formula "83") (term "0") (ifseqformula "85"))
                                                (rule "inEqSimp_homoInEq1" (formula "83"))
                                                (rule "polySimp_mulComm0" (formula "83") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "83") (term "1,0"))
                                                (rule "mul_literals" (formula "83") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "83") (term "0"))
                                                (rule "add_literals" (formula "83") (term "0,0"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "85"))
                                                (rule "inEqSimp_homoInEq1" (formula "63"))
                                                (rule "polySimp_mulComm0" (formula "63") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "63") (term "1,0"))
                                                (rule "mul_literals" (formula "63") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0"))
                                                (rule "polySimp_addComm1" (formula "63") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                                                (rule "add_literals" (formula "63") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "63") (term "0,0"))
                                                (rule "applyEq" (formula "71") (term "0") (ifseqformula "85"))
                                                (rule "inEqSimp_homoInEq1" (formula "71"))
                                                (rule "polySimp_mulComm0" (formula "71") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "71") (term "1,0"))
                                                (rule "mul_literals" (formula "71") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0"))
                                                (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "71") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "71") (term "0,0,0"))
                                                (rule "add_literals" (formula "71") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "71") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "71") (term "0,0"))
                                                (rule "add_literals" (formula "71") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "71") (term "0,0"))
                                                (rule "add_zero_left" (formula "71") (term "0"))
                                                (rule "applyEq" (formula "13") (term "0") (ifseqformula "85"))
                                                (rule "inEqSimp_homoInEq1" (formula "13"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                (rule "applyEq" (formula "46") (term "0") (ifseqformula "85"))
                                                (rule "inEqSimp_homoInEq1" (formula "46"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0"))
                                                (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                                                (rule "add_literals" (formula "46") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "46") (term "0,0,0"))
                                                (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "85"))
                                                (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                (rule "add_literals" (formula "3") (term "0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "0,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "82"))
                                                (rule "polySimp_mulLiterals" (formula "82") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                (rule "mul_literals" (formula "19") (term "0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                                                (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "63"))
                                                (rule "polySimp_mulLiterals" (formula "63") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                                                (rule "mul_literals" (formula "13") (term "0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "46"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "0,1"))
                                                (rule "inEqSimp_contradInEq5" (formula "19") (ifseqformula "78"))
                                                (rule "greater_literals" (formula "19") (term "0,0"))
                                                (rule "concrete_impl_1" (formula "19") (term "0"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                (rule "mul_literals" (formula "19") (term "0,1"))
                                                (rule "inEqSimp_homoInEq1" (formula "19"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "19") (term "0"))
                                                (rule "add_literals" (formula "19") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "19") (term "1,0"))
                                                (rule "add_literals" (formula "19") (term "0"))
                                                (rule "leq_literals" (formula "19"))
                                                (rule "closeFalse" (formula "19"))
                                             )
                                          )
                                       )
                                       (branch "CUT: l_0 >= 1 + l_1 FALSE"
                                          (rule "concrete_impl_2" (formula "56"))
                                          (rule "true_left" (formula "56"))
                                          (rule "replace_known_right" (formula "68") (term "0,0,1") (ifseqformula "61"))
                                          (rule "ifthenelse_false" (formula "68") (term "0,1"))
                                          (rule "inEqSimp_geqRight" (formula "61"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "68") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "68") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "68") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "68") (term "0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "68") (term "1,0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "68") (term "0,0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "68") (term "0,0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "68") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "68") (term "0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,1"))
                                          (rule "add_literals" (formula "68") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "68") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "68") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "68") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "68") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "68") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0,1"))
                                          (rule "add_literals" (formula "68") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "68") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "68") (term "0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "68") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "68") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "68") (term "0,1"))
                                          (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq0" (formula "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,0"))
                                          (rule "times_zero_1" (formula "1") (term "0"))
                                          (rule "qeq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "48") (term "0,1,1") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,0"))
                                          (rule "times_zero_1" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEq" (formula "42") (term "0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,1") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "51") (term "0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "42") (term "1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "43") (term "0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "41") (term "0,1") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "63") (term "0,0,1,0") (ifseqformula "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "52"))
                                          (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "inEqSimp_subsumption4" (formula "2") (ifseqformula "50"))
                                          (rule "greater_literals" (formula "2") (term "0,0"))
                                          (rule "concrete_and_1" (formula "2") (term "0"))
                                          (rule "mul_literals" (formula "2") (term "0,0"))
                                          (rule "leq_literals" (formula "2") (term "0"))
                                          (rule "concrete_or_1" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "div_axiom" (formula "9") (term "1") (inst "quotient=quotient_0"))
                                          (rule "qeq_literals" (formula "9") (term "0,1,1"))
                                          (rule "ifthenelse_true_for" (formula "9") (term "1,1"))
                                          (rule "equal_literals" (formula "9") (term "0"))
                                          (rule "concrete_or_2" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1,1,1"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "polySimp_addComm1" (formula "11") (term "1"))
                                          (rule "add_literals" (formula "11") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "10"))
                                          (rule "inEqSimp_homoInEq1" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0"))
                                          (rule "applyEq" (formula "30") (term "1,1,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "38") (term "0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "38"))
                                          (rule "polySimp_addComm1" (formula "38") (term "0"))
                                          (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "41") (term "1,1,1,0,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "32") (term "1,1,1,0,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "32") (term "1,1,1,0,0,1,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "40") (term "1,1,1,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "16") (term "1,0,0,0,1,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "16") (term "1,1,0,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "18"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0"))
                                          (rule "applyEq" (formula "31") (term "1,1,1,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "15") (term "1,1,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "12") (term "1") (ifseqformula "9"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1"))
                                          (rule "mul_literals" (formula "11") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "38"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                          (rule "mul_literals" (formula "38") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "11"))
                                          (rule "polySimp_rightDist" (formula "53") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0"))
                                          (rule "mul_literals" (formula "53") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,0"))
                                          (rule "add_literals" (formula "53") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "53") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "53") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "53") (term "0,0"))
                                          (rule "concrete_or_2" (formula "53") (term "0"))
                                          (rule "neg_literal" (formula "53") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "53") (term "0,0"))
                                          (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "53") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "53") (term "0,0"))
                                          (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "53") (term "0,0"))
                                          (rule "qeq_literals" (formula "53") (term "0"))
                                          (rule "concrete_or_2" (formula "53"))
                                          (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "11"))
                                          (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "35") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                          (rule "add_literals" (formula "35") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "35") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                          (rule "polySimp_elimOne" (formula "35") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "48"))
                                          (rule "polySimp_mulAssoc" (formula "10") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "10") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "10") (term "0,0"))
                                          (rule "concrete_or_2" (formula "10") (term "0"))
                                          (rule "neg_literal" (formula "10") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0"))
                                          (rule "qeq_literals" (formula "10") (term "0"))
                                          (rule "concrete_or_2" (formula "10"))
                                          (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                                          (rule "times_zero_1" (formula "18") (term "0,0"))
                                          (rule "add_zero_left" (formula "18") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                          (rule "mul_literals" (formula "18") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "41"))
                                          (rule "times_zero_1" (formula "40") (term "0,0"))
                                          (rule "add_zero_left" (formula "40") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                          (rule "mul_literals" (formula "40") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "12"))
                                          (rule "mul_literals" (formula "15") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                          (rule "add_literals" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                          (rule "mul_literals" (formula "15") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "15") (term "0,0"))
                                          (rule "concrete_or_2" (formula "15") (term "0"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                          (rule "concrete_or_2" (formula "15"))
                                          (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "15"))
                                          (rule "leq_literals" (formula "19") (term "0"))
                                          (rule "concrete_or_1" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "12"))
                                          (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                          (rule "mul_literals" (formula "29") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "57"))
                                          (rule "times_zero_1" (formula "55") (term "0,0"))
                                          (rule "add_zero_left" (formula "55") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "55") (ifseqformula "15"))
                                          (rule "leq_literals" (formula "55") (term "0"))
                                          (rule "concrete_or_1" (formula "55"))
                                          (rule "true_left" (formula "55"))
                                          (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
                                          (rule "times_zero_1" (formula "36") (term "0,0"))
                                          (rule "add_zero_left" (formula "36") (term "0"))
                                          (rule "inEqSimp_subsumption6" (formula "36") (ifseqformula "15"))
                                          (rule "mul_literals" (formula "36") (term "1,1,0"))
                                          (rule "greater_literals" (formula "36") (term "0,0"))
                                          (rule "concrete_and_1" (formula "36") (term "0"))
                                          (rule "leq_literals" (formula "36") (term "0"))
                                          (rule "concrete_or_1" (formula "36"))
                                          (rule "true_left" (formula "36"))
                                          (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "29"))
                                          (rule "mul_literals" (formula "27") (term "0,0"))
                                          (rule "add_zero_left" (formula "27") (term "0"))
                                          (rule "inEqSimp_subsumption6" (formula "27") (ifseqformula "15"))
                                          (rule "greater_literals" (formula "27") (term "0,0"))
                                          (rule "concrete_and_1" (formula "27") (term "0"))
                                          (rule "mul_literals" (formula "27") (term "1,0"))
                                          (rule "leq_literals" (formula "27") (term "0"))
                                          (rule "concrete_or_1" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "nnf_imp2or" (formula "44") (term "1,0"))
                                          (rule "div_axiom" (formula "62") (term "0,1,1,0") (inst "quotient=quotient_1"))
                                          (rule "equal_literals" (formula "62") (term "0"))
                                          (rule "concrete_or_2" (formula "62"))
                                          (rule "mul_literals" (formula "62") (term "1,1,1,1"))
                                          (rule "qeq_literals" (formula "62") (term "0,1"))
                                          (rule "ifthenelse_true_for" (formula "62") (term "1"))
                                          (rule "andLeft" (formula "62"))
                                          (rule "andLeft" (formula "62"))
                                          (rule "polySimp_addAssoc" (formula "64") (term "0,1"))
                                          (rule "add_literals" (formula "64") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "64") (term "1"))
                                          (rule "add_literals" (formula "64") (term "0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "63"))
                                          (rule "polySimp_mulLiterals" (formula "63") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "63") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "64"))
                                          (rule "polySimp_mulLiterals" (formula "64") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "64") (term "0"))
                                          (rule "applyEqRigid" (formula "66") (term "0,1,1,0") (ifseqformula "62"))
                                          (rule "polySimp_addComm1" (formula "66") (term "1,0"))
                                          (rule "applyEqRigid" (formula "65") (term "0,1,1,0") (ifseqformula "62"))
                                          (rule "polySimp_addComm1" (formula "65") (term "1,0"))
                                          (rule "applyEqRigid" (formula "65") (term "0,1,1,1") (ifseqformula "62"))
                                          (rule "polySimp_addComm1" (formula "65") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "63"))
                                          (rule "polySimp_mulComm0" (formula "63") (term "1"))
                                          (rule "polySimp_rightDist" (formula "63") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "63") (term "1,1"))
                                          (rule "mul_literals" (formula "63") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "64"))
                                          (rule "polySimp_mulComm0" (formula "64") (term "1"))
                                          (rule "polySimp_rightDist" (formula "64") (term "1"))
                                          (rule "mul_literals" (formula "64") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "64") (term "1,1"))
                                          (rule "elimGcdLeq_antec" (formula "64") (inst "elimGcdRightDiv=add(Z(0(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "leq_literals" (formula "64") (term "0,0"))
                                          (rule "concrete_or_2" (formula "64") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0"))
                                          (rule "neg_literal" (formula "64") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,0"))
                                          (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "64") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "64") (term "0,0,0"))
                                          (rule "add_literals" (formula "64") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "64") (term "0,0,0"))
                                          (rule "add_literals" (formula "64") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,0"))
                                          (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "64") (term "0,0"))
                                          (rule "qeq_literals" (formula "64") (term "0"))
                                          (rule "concrete_or_2" (formula "64"))
                                          (rule "elimGcdGeq_antec" (formula "63") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "63") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "63") (term "0,0"))
                                          (rule "concrete_or_2" (formula "63") (term "0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "63") (term "0,0"))
                                          (rule "add_literals" (formula "63") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "63") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "63") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "63") (term "0,0,0"))
                                          (rule "add_literals" (formula "63") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "63") (term "0,0,0"))
                                          (rule "add_literals" (formula "63") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "63") (term "0,0"))
                                          (rule "add_literals" (formula "63") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "63") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "63") (term "0,0"))
                                          (rule "leq_literals" (formula "63") (term "0"))
                                          (rule "concrete_or_2" (formula "63"))
                                          (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "56"))
                                          (rule "polySimp_rightDist" (formula "63") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0"))
                                          (rule "mul_literals" (formula "63") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "63") (term "0"))
                                          (rule "add_literals" (formula "63") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "63"))
                                          (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "63") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                          (rule "neg_literal" (formula "63") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "63") (term "0,0"))
                                          (rule "concrete_or_2" (formula "63") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "63") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "63") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "63") (term "0,0"))
                                          (rule "add_literals" (formula "63") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "63") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "63") (term "0,0"))
                                          (rule "qeq_literals" (formula "63") (term "0"))
                                          (rule "concrete_or_2" (formula "63"))
                                          (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "65"))
                                          (rule "times_zero_1" (formula "55") (term "0,0"))
                                          (rule "add_zero_left" (formula "55") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "55"))
                                          (rule "mul_literals" (formula "55") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "55") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "55") (term "0,0"))
                                          (rule "concrete_or_2" (formula "55") (term "0"))
                                          (rule "mul_literals" (formula "55") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "55") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "55") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0"))
                                          (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "55") (term "0,0"))
                                          (rule "leq_literals" (formula "55") (term "0"))
                                          (rule "concrete_or_2" (formula "55"))
                                          (rule "inEqSimp_exactShadow3" (formula "65") (ifseqformula "58"))
                                          (rule "polySimp_rightDist" (formula "65") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0"))
                                          (rule "mul_literals" (formula "65") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "65"))
                                          (rule "polySimp_mulComm0" (formula "65") (term "1"))
                                          (rule "polySimp_rightDist" (formula "65") (term "1"))
                                          (rule "mul_literals" (formula "65") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "65") (term "1,1"))
                                          (rule "inEqSimp_antiSymm" (formula "55") (ifseqformula "64"))
                                          (rule "applyEqRigid" (formula "66") (term "0,1,1") (ifseqformula "55"))
                                          (rule "mul_literals" (formula "66") (term "1,1"))
                                          (rule "add_literals" (formula "66") (term "1"))
                                          (rule "applyEq" (formula "67") (term "0,1,1") (ifseqformula "55"))
                                          (rule "mul_literals" (formula "67") (term "1,1"))
                                          (rule "add_literals" (formula "67") (term "1"))
                                          (rule "applyEq" (formula "65") (term "0") (ifseqformula "55"))
                                          (rule "leq_literals" (formula "65"))
                                          (rule "true_left" (formula "65"))
                                          (rule "applyEqRigid" (formula "67") (term "0,1,1") (ifseqformula "55"))
                                          (rule "mul_literals" (formula "67") (term "1,1"))
                                          (rule "add_literals" (formula "67") (term "1"))
                                          (rule "applyEq" (formula "56") (term "0") (ifseqformula "55"))
                                          (rule "qeq_literals" (formula "56"))
                                          (rule "true_left" (formula "56"))
                                          (rule "applyEqRigid" (formula "67") (term "0,1,0,1,0") (ifseqformula "55"))
                                          (rule "mul_literals" (formula "67") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "67") (term "0,1,0"))
                                          (rule "applyEqRigid" (formula "63") (term "1") (ifseqformula "55"))
                                          (rule "applyEqRigid" (formula "68") (term "0,1,0,1,0") (ifseqformula "55"))
                                          (rule "mul_literals" (formula "68") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "68") (term "0,1,0"))
                                          (rule "applyEq" (formula "67") (term "0,1,0,1,1") (ifseqformula "55"))
                                          (rule "mul_literals" (formula "67") (term "1,0,1,1"))
                                          (rule "add_literals" (formula "67") (term "0,1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "65") (ifseqformula "56"))
                                          (rule "leq_literals" (formula "65") (term "0"))
                                          (rule "concrete_or_1" (formula "65"))
                                          (rule "true_left" (formula "65"))
                                          (rule "inEqSimp_subsumption1" (formula "64") (ifseqformula "15"))
                                          (rule "leq_literals" (formula "64") (term "0"))
                                          (rule "concrete_or_1" (formula "64"))
                                          (rule "true_left" (formula "64"))
                                          (rule "inEqSimp_subsumption0" (formula "64") (ifseqformula "57"))
                                          (rule "leq_literals" (formula "64") (term "0"))
                                          (rule "concrete_or_1" (formula "64"))
                                          (rule "true_left" (formula "64"))
                                          (rule "nnf_imp2or" (formula "45") (term "1,0"))
                                          (rule "nnf_notOr" (formula "33") (term "1,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "33") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "33") (term "0,1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "33") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "33") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "33") (term "0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "33") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,0,1,0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "33") (term "0,0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "35") (term "0,1,0,1,0"))
                                          (rule "double_not" (formula "35") (term "0,0,1,0,1,0"))
                                          (rule "nnf_imp2or" (formula "34") (term "0"))
                                          (rule "nnf_imp2or" (formula "44") (term "0"))
                                          (rule "commute_or_2" (formula "17") (term "0,1,1,0"))
                                          (rule "commute_and" (formula "73"))
                                          (rule "commute_or_2" (formula "26") (term "0"))
                                          (rule "shift_paren_or" (formula "18") (term "0,1,0"))
                                          (rule "nnf_imp2or" (formula "45") (term "0"))
                                          (rule "nnf_imp2or" (formula "35") (term "0"))
                                          (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                          (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                          (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "44") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "44") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                          (rule "mul_literals" (formula "44") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "45") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0"))
                                          (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "45") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                          (rule "mul_literals" (formula "45") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                                          (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "44") (term "0,1,0"))
                                          (rule "double_not" (formula "44") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "44") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "44") (term "0,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "44") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "45") (term "0,1,0"))
                                          (rule "double_not" (formula "45") (term "0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "45") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "45") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1,0"))
                                          (rule "nnf_imp2or" (formula "35") (term "0,1,0"))
                                          (rule "nnf_imp2or" (formula "44") (term "0,1,1,0"))
                                          (rule "nnf_imp2or" (formula "45") (term "0,1,1,0"))
                                          (rule "nnf_notOr" (formula "33") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "33") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "33") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "33") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "33") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "33") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "33") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "33") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "33") (term "0,0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "33") (term "0,0,0,0,1,1,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "4"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "nnf_notAnd" (formula "36") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "45") (term "0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,1,1,0"))
                                          (rule "nnf_notOr" (formula "46") (term "0,0,1,1,0"))
                                          (rule "nnf_notOr" (formula "34") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "nnf_notOr" (formula "34") (term "1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "34") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "34") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "34") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "34") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "34") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,0,1,0,0,0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "46") (term "1,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "46") (term "0,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "46") (term "1,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "46") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "46") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "46") (term "0,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "35") (term "0"))
                                          (rule "commute_or" (formula "27") (term "0,0"))
                                          (rule "commute_or_2" (formula "19") (term "0,0,1,0"))
                                          (rule "inEqSimp_or_weaken2" (formula "19") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "1,0,1,0,1,0"))
                                          (rule "add_literals" (formula "19") (term "0,1,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "19") (term "1,0,1,0,1,0"))
                                          (rule "eqClose" (formula "19") (term "0,1,0,1,0"))
                                          (rule "ifthenelse_true_for" (formula "19") (term "1,0,1,0"))
                                          (rule "commute_or" (formula "18") (term "0,0,1,1,0"))
                                          (rule "shift_paren_or" (formula "35") (term "0,1,0"))
                                          (rule "commute_or_2" (formula "44") (term "0,1,1,0"))
                                          (rule "commute_and" (formula "34") (term "1,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "45") (term "0,1,1,0"))
                                          (rule "commute_or" (formula "19") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "35") (term "0,0,1,0"))
                                          (rule "cut_direct" (formula "64") (term "0"))
                                          (branch "CUT: pow(2, i_1_1) >= 3 + l_1 * 2 TRUE"
                                             (rule "concrete_impl_1" (formula "65"))
                                             (rule "applyEq" (formula "61") (term "0") (ifseqformula "65"))
                                             (rule "inEqSimp_homoInEq0" (formula "61"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0"))
                                             (rule "mul_literals" (formula "61") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "61") (term "0"))
                                             (rule "add_literals" (formula "61") (term "0,0"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "65"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                             (rule "mul_literals" (formula "3") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                             (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0"))
                                             (rule "add_zero_right" (formula "3") (term "0"))
                                             (rule "leq_literals" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "applyEq" (formula "65") (term "0,1") (ifseqformula "64"))
                                             (rule "applyEq" (formula "73") (term "0,0") (ifseqformula "64"))
                                             (rule "inEqSimp_homoInEq1" (formula "73") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "73") (term "1,0,0"))
                                             (rule "mul_literals" (formula "73") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "73") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "73") (term "0,0,0"))
                                             (rule "add_literals" (formula "73") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "73") (term "0,0"))
                                             (rule "add_literals" (formula "73") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "73") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "73") (term "0,0"))
                                             (rule "leq_literals" (formula "73") (term "0"))
                                             (rule "concrete_and_1" (formula "73"))
                                             (rule "inEqSimp_geqRight" (formula "73"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "applyEq" (formula "62") (term "0") (ifseqformula "65"))
                                             (rule "inEqSimp_homoInEq1" (formula "62"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0"))
                                             (rule "mul_literals" (formula "62") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "62") (term "0"))
                                             (rule "add_literals" (formula "62") (term "0,0"))
                                             (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "65"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "66") (term "1"))
                                             (rule "mul_literals" (formula "66") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "61"))
                                             (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "17") (term "0"))
                                             (rule "concrete_and_2" (formula "17"))
                                             (rule "closeFalse" (formula "17"))
                                          )
                                          (branch "CUT: pow(2, i_1_1) >= 3 + l_1 * 2 FALSE"
                                             (rule "concrete_impl_2" (formula "64"))
                                             (rule "true_left" (formula "64"))
                                             (rule "inEqSimp_geqRight" (formula "66"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "replace_known_left" (formula "65") (term "0") (ifseqformula "1"))
                                             (rule "concrete_impl_1" (formula "65"))
                                             (rule "applyEq" (formula "73") (term "0,0") (ifseqformula "65"))
                                             (rule "inEqSimp_homoInEq1" (formula "73") (term "0"))
                                             (rule "times_zero_2" (formula "73") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "73") (term "0,0"))
                                             (rule "applyEq" (formula "63") (term "0") (ifseqformula "65"))
                                             (rule "qeq_literals" (formula "63"))
                                             (rule "true_left" (formula "63"))
                                             (rule "applyEq" (formula "62") (term "0") (ifseqformula "64"))
                                             (rule "leq_literals" (formula "62"))
                                             (rule "true_left" (formula "62"))
                                             (rule "applyEq" (formula "71") (term "1,1,1") (ifseqformula "63"))
                                             (rule "add_zero_right" (formula "71") (term "1,1"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "63"))
                                             (rule "inEqSimp_commuteGeq" (formula "4"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0"))
                                             (rule "mul_literals" (formula "71") (term "1,0"))
                                             (rule "inEqSimp_contradInEq5" (formula "71") (term "0") (ifseqformula "57"))
                                             (rule "times_zero_1" (formula "71") (term "1,1,0,0"))
                                             (rule "greater_literals" (formula "71") (term "0,0,0"))
                                             (rule "concrete_impl_1" (formula "71") (term "0,0"))
                                             (rule "qeq_literals" (formula "71") (term "0,0"))
                                             (rule "concrete_and_2" (formula "71") (term "0"))
                                             (rule "concrete_and_2" (formula "71"))
                                             (rule "false_right" (formula "71"))
                                             (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                             (rule "leq_literals" (formula "4") (term "0,0"))
                                             (rule "concrete_or_2" (formula "4") (term "0"))
                                             (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                             (rule "neg_literal" (formula "4") (term "0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                             (rule "add_literals" (formula "4") (term "0,0"))
                                             (rule "qeq_literals" (formula "4") (term "0"))
                                             (rule "concrete_or_2" (formula "4"))
                                             (rule "inEqSimp_subsumption0" (formula "58") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "58") (term "0"))
                                             (rule "concrete_or_1" (formula "58"))
                                             (rule "true_left" (formula "58"))
                                             (rule "inEqSimp_antiSymm" (formula "57") (ifseqformula "4"))
                                             (rule "applyEq" (formula "58") (term "0") (ifseqformula "57"))
                                             (rule "qeq_literals" (formula "58"))
                                             (rule "true_left" (formula "58"))
                                             (rule "applyEq" (formula "61") (term "0,1,0,0") (ifseqformula "57"))
                                             (rule "times_zero_2" (formula "61") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "61") (term "0,0"))
                                             (rule "div_literals" (formula "61") (term "0"))
                                             (rule "eqClose" (formula "61"))
                                             (rule "true_left" (formula "61"))
                                             (rule "applyEqRigid" (formula "64") (term "0,0,2,0") (ifseqformula "57"))
                                             (rule "mul_literals" (formula "64") (term "0,2,0"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "57"))
                                             (rule "leq_literals" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEqRigid" (formula "1") (term "0,1,1") (ifseqformula "56"))
                                             (rule "times_zero_2" (formula "1") (term "1,1"))
                                             (rule "add_zero_right" (formula "1") (term "1"))
                                             (rule "applyEqRigid" (formula "62") (term "0,0,2,0") (ifseqformula "56"))
                                             (rule "times_zero_2" (formula "62") (term "0,2,0"))
                                             (rule "applyEq" (formula "58") (term "0,1,1") (ifseqformula "56"))
                                             (rule "times_zero_2" (formula "58") (term "1,1"))
                                             (rule "add_zero_right" (formula "58") (term "1"))
                                             (rule "applyEqRigid" (formula "2") (term "0,0,2,1,0") (ifseqformula "56"))
                                             (rule "times_zero_2" (formula "2") (term "0,2,1,0"))
                                             (rule "applyEqRigid" (formula "49") (term "0,0,0") (ifseqformula "56"))
                                             (rule "times_zero_2" (formula "49") (term "0,0"))
                                             (rule "jdiv_axiom_inline" (formula "49") (term "0"))
                                             (rule "qeq_literals" (formula "49") (term "0,0"))
                                             (rule "ifthenelse_true" (formula "49") (term "0"))
                                             (rule "div_literals" (formula "49") (term "0"))
                                             (rule "eqSymm" (formula "49"))
                                             (rule "applyEq" (formula "56") (term "0") (ifseqformula "55"))
                                             (rule "inEqSimp_commuteLeq" (formula "56"))
                                             (rule "applyEq" (formula "58") (term "0,1") (ifseqformula "55"))
                                             (rule "times_zero_2" (formula "58") (term "1"))
                                             (rule "applyEqRigid" (formula "49") (term "0,1") (ifseqformula "55"))
                                             (rule "times_zero_2" (formula "49") (term "1"))
                                             (rule "applyEq" (formula "3") (term "1") (ifseqformula "55"))
                                             (rule "applyEq" (formula "48") (term "0,1") (ifseqformula "55"))
                                             (rule "times_zero_2" (formula "48") (term "1"))
                                             (rule "inEqSimp_subsumption0" (formula "50") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "50") (term "0"))
                                             (rule "concrete_or_1" (formula "50"))
                                             (rule "true_left" (formula "50"))
                                             (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "17") (term "0"))
                                             (rule "concrete_and_2" (formula "17"))
                                             (rule "closeFalse" (formula "17"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "Exceptional Post (nextKeyIndex)"
                           (rule "simplifyUpdate2" (formula "45"))
                           (rule "simplifyUpdate2" (formula "45") (term "1"))
                           (rule "andLeft" (formula "45"))
                           (rule "simplifyUpdate2" (formula "45"))
                           (rule "andLeft" (formula "46"))
                           (rule "simplifyUpdate2" (formula "47"))
                           (rule "andLeft" (formula "45"))
                           (rule "andLeft" (formula "47"))
                           (rule "simplifyUpdate2" (formula "48"))
                           (rule "notLeft" (formula "45"))
                           (rule "close" (formula "48") (ifseqformula "47"))
                        )
                        (branch "Pre (nextKeyIndex)"
                           (rule "expand_inShort" (formula "32"))
                           (rule "expand_inInt" (formula "52") (term "1,0,1,1,1"))
                           (rule "expand_inInt" (formula "52") (term "1,1,1,1"))
                           (rule "expand_inInt" (formula "29"))
                           (rule "expand_inInt" (formula "16"))
                           (rule "expand_inInt" (formula "15"))
                           (rule "expand_inInt" (formula "44"))
                           (rule "replace_short_MAX" (formula "32") (term "1,0"))
                           (rule "replace_short_MIN" (formula "32") (term "0,1"))
                           (rule "replace_int_MAX" (formula "52") (term "1,0,1,0,1,1,1"))
                           (rule "replace_int_MIN" (formula "52") (term "0,1,1,0,1,1,1"))
                           (rule "replace_int_MIN" (formula "52") (term "0,1,1,1,1,1"))
                           (rule "replace_int_MAX" (formula "52") (term "1,0,1,1,1,1"))
                           (rule "replace_int_MIN" (formula "29") (term "0,1"))
                           (rule "replace_int_MAX" (formula "29") (term "1,0"))
                           (rule "replace_int_MIN" (formula "16") (term "0,1"))
                           (rule "replace_int_MAX" (formula "16") (term "1,0"))
                           (rule "replace_int_MAX" (formula "15") (term "1,0"))
                           (rule "replace_int_MIN" (formula "15") (term "0,1"))
                           (rule "replace_int_MIN" (formula "44") (term "0,1"))
                           (rule "replace_int_MAX" (formula "44") (term "1,0"))
                           (rule "simplifyUpdate2" (formula "52"))
                           (rule "simplifyUpdate2" (formula "52") (term "1"))
                           (rule "andLeft" (formula "32"))
                           (rule "andLeft" (formula "29"))
                           (rule "andLeft" (formula "16"))
                           (rule "andLeft" (formula "15"))
                           (rule "andLeft" (formula "48"))
                           (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "39"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "13"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "19"))
                           (rule "mul_literals" (formula "19") (term "1,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "47") (term "0"))
                           (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_gtToGeq" (formula "10") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "22"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "25") (term "1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "25") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "46") (term "0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "44"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                           (rule "applyOnRigidFormula" (formula "57"))
                           (rule "simplifyUpdate2" (formula "57") (term "0"))
                           (rule "replace_known_left" (formula "57") (term "0") (ifseqformula "29"))
                           (rule "concrete_and_1" (formula "57"))
                           (rule "polySimp_addComm1" (formula "44") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "36"))
                           (rule "inEqSimp_commuteLeq" (formula "32"))
                           (rule "inEqSimp_commuteLeq" (formula "18"))
                           (rule "inEqSimp_commuteLeq" (formula "16"))
                           (rule "inEqSimp_commuteLeq" (formula "49"))
                           (rule "applyOnRigidFormula" (formula "57"))
                           (rule "simplifyUpdate2" (formula "57") (term "1"))
                           (rule "simplifyUpdate2" (formula "57") (term "0"))
                           (rule "applyOnRigidFormula" (formula "57") (term "1"))
                           (rule "applyOnRigidFormula" (formula "57") (term "0"))
                           (rule "simplifyUpdate2" (formula "57") (term "0,0"))
                           (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "2"))
                           (rule "concrete_and_1" (formula "57") (term "0"))
                           (rule "applyOnRigidFormula" (formula "57") (term "1,1"))
                           (rule "applyOnPV" (formula "57") (term "1,1,1"))
                           (rule "simplifyUpdate1" (formula "57") (term "0,1,1"))
                           (rule "applyOnRigidFormula" (formula "57") (term "0,1"))
                           (rule "simplifyUpdate1" (formula "57") (term "1,0,1"))
                           (rule "applyOnPV" (formula "57") (term "0,0,1"))
                           (rule "applyOnRigidFormula" (formula "57") (term "0"))
                           (rule "applyOnRigidFormula" (formula "57") (term "0,0"))
                           (rule "simplifyUpdate1" (formula "57") (term "1,0,0"))
                           (rule "applyOnPV" (formula "57") (term "0,0,0"))
                           (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "48"))
                           (rule "concrete_and_1" (formula "57") (term "0"))
                           (rule "applyOnRigidFormula" (formula "57") (term "0"))
                           (rule "applyOnPV" (formula "57") (term "1,0"))
                           (rule "simplifyUpdate1" (formula "57") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "57") (term "1,1"))
                           (rule "inEqSimp_commuteLeq" (formula "57") (term "0"))
                           (rule "replace_known_left" (formula "57") (term "0") (ifseqformula "49"))
                           (rule "concrete_and_1" (formula "57"))
                           (rule "applyEq" (formula "22") (term "0,1,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "10") (term "1,0,1,0,1,0,1,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "23"))
                           (rule "applyEq" (formula "9") (term "0") (ifseqformula "23"))
                           (rule "applyEq" (formula "51") (term "1") (ifseqformula "28"))
                           (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "25") (term "1,0,1,0,1,0,1,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "25") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "44") (term "0,1,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "47") (term "1,0,1,1,0,1,1") (ifseqformula "28"))
                           (rule "applyEq" (formula "35") (term "0") (ifseqformula "23"))
                           (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "28"))
                           (rule "applyEq" (formula "10") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "45") (term "1,0,1,1,0,1") (ifseqformula "27"))
                           (rule "applyEq" (formula "36") (term "0") (ifseqformula "23"))
                           (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "13") (term "0,0,1,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "53") (term "0") (ifseqformula "27"))
                           (rule "applyEq" (formula "38") (term "0,1,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "46") (term "1,0,1,1,0,0,1") (ifseqformula "27"))
                           (rule "applyEq" (formula "55") (term "0,1") (ifseqformula "23"))
                           (rule "applyEq" (formula "35") (term "0") (ifseqformula "23"))
                           (rule "applyEq" (formula "25") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "46") (term "0,1,0,0,0,0,0,0,1") (ifseqformula "23"))
                           (rule "applyEq" (formula "11") (term "0,0,1,0,0,0,0,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "25") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "11") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "25") (term "0,0,1,0,0,0,0,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "10") (term "0,0,1,0,0,0,0,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "25") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "20") (term "0,0,1,0,0,0,0,0") (ifseqformula "23"))
                           (rule "jmod_axiom" (formula "33") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                           (rule "jmod_axiom" (formula "44") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,0"))
                           (rule "polySimp_sepNegMonomial" (formula "33"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                           (rule "polySimp_sepNegMonomial" (formula "44"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                           (rule "mul_literals" (formula "19") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,1"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,1"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,1,1"))
                           (rule "mul_literals" (formula "46") (term "0,1,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,1,1"))
                           (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "46") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "0,1,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "43"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                           (rule "polySimp_elimOne" (formula "43") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                           (rule "polySimp_elimOne" (formula "13") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "38"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                           (rule "polySimp_elimOne" (formula "38") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,1"))
                           (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,0,1"))
                           (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                           (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "8"))
                           (rule "leq_literals" (formula "36") (term "0"))
                           (rule "concrete_or_1" (formula "36"))
                           (rule "true_left" (formula "36"))
                           (rule "inEqSimp_subsumption0" (formula "54") (term "0") (ifseqformula "9"))
                           (rule "leq_literals" (formula "54") (term "0,0"))
                           (rule "concrete_or_1" (formula "54") (term "0"))
                           (rule "concrete_and_1" (formula "54"))
                           (rule "inEqSimp_geqRight" (formula "54"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "20"))
                           (rule "leq_literals" (formula "18") (term "0"))
                           (rule "concrete_or_1" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "38"))
                           (rule "leq_literals" (formula "31") (term "0"))
                           (rule "concrete_or_1" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "40"))
                           (rule "leq_literals" (formula "46") (term "0"))
                           (rule "concrete_or_1" (formula "46"))
                           (rule "true_left" (formula "46"))
                           (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "33"))
                           (rule "leq_literals" (formula "10") (term "0"))
                           (rule "concrete_or_1" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "9"))
                           (rule "leq_literals" (formula "33") (term "0"))
                           (rule "concrete_or_1" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "9"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                           (rule "concrete_and_2" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
               )
               (branch "Null Reference (tab = null)"
                  (rule "false_right" (formula "51"))
                  (rule "expand_inShort" (formula "33"))
                  (rule "expand_inInt" (formula "30"))
                  (rule "expand_inInt" (formula "17"))
                  (rule "expand_inInt" (formula "16"))
                  (rule "expand_inInt" (formula "45"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "replace_short_MAX" (formula "33") (term "1,0"))
                  (rule "replace_short_MIN" (formula "33") (term "0,1"))
                  (rule "replace_int_MAX" (formula "30") (term "1,0"))
                  (rule "replace_int_MIN" (formula "30") (term "0,1"))
                  (rule "replace_int_MIN" (formula "17") (term "0,1"))
                  (rule "replace_int_MAX" (formula "17") (term "1,0"))
                  (rule "replace_int_MIN" (formula "16") (term "0,1"))
                  (rule "replace_int_MAX" (formula "16") (term "1,0"))
                  (rule "replace_int_MAX" (formula "45") (term "1,0"))
                  (rule "replace_int_MIN" (formula "45") (term "0,1"))
                  (rule "andLeft" (formula "33"))
                  (rule "andLeft" (formula "30"))
                  (rule "andLeft" (formula "17"))
                  (rule "andLeft" (formula "16"))
                  (rule "andLeft" (formula "49"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1"))
                  (rule "applyOnPV" (formula "1") (term "0"))
                  (rule "close" (formula "52") (ifseqformula "1"))
               )
               (branch "Index Out of Bounds (tab != null, but i Out of Bounds!)"
                  (rule "false_right" (formula "51"))
                  (rule "expand_inShort" (formula "33"))
                  (rule "expand_inInt" (formula "30"))
                  (rule "expand_inInt" (formula "17"))
                  (rule "expand_inInt" (formula "16"))
                  (rule "expand_inInt" (formula "45"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "replace_short_MAX" (formula "33") (term "1,0"))
                  (rule "replace_short_MIN" (formula "33") (term "0,1"))
                  (rule "replace_int_MAX" (formula "30") (term "1,0"))
                  (rule "replace_int_MIN" (formula "30") (term "0,1"))
                  (rule "replace_int_MIN" (formula "17") (term "0,1"))
                  (rule "replace_int_MAX" (formula "17") (term "1,0"))
                  (rule "replace_int_MIN" (formula "16") (term "0,1"))
                  (rule "replace_int_MAX" (formula "16") (term "1,0"))
                  (rule "replace_int_MAX" (formula "45") (term "1,0"))
                  (rule "replace_int_MIN" (formula "45") (term "0,1"))
                  (rule "andLeft" (formula "1"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "31"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "17"))
                  (rule "andLeft" (formula "50"))
                  (rule "notLeft" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate2" (formula "1") (term "1"))
                  (rule "inEqSimp_ltToLeq" (formula "45"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "45") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "40"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "40") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "48") (term "0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0,1,1,0"))
                  (rule "polySimp_mulAssoc" (formula "26") (term "1,0,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "20"))
                  (rule "mul_literals" (formula "20") (term "1,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "47") (term "0"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "1,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulAssoc" (formula "26") (term "1,0,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "23"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "11") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "51"))
                  (rule "applyOnPV" (formula "51") (term "0"))
                  (rule "simplifyUpdate1" (formula "51") (term "1"))
                  (rule "applyOnRigidFormula" (formula "1") (term "0"))
                  (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                  (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                  (rule "applyOnPV" (formula "1") (term "1,0"))
                  (rule "applyOnRigidFormula" (formula "1") (term "1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                  (rule "applyOnPV" (formula "1") (term "0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "37"))
                  (rule "inEqSimp_commuteLeq" (formula "33"))
                  (rule "inEqSimp_commuteLeq" (formula "19"))
                  (rule "inEqSimp_commuteLeq" (formula "17"))
                  (rule "inEqSimp_commuteLeq" (formula "50"))
                  (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                  (rule "applyOnPV" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "26") (term "1,0,1,0,1,0,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "14") (term "0,0,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "53") (term "0") (ifseqformula "29"))
                  (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "10") (term "0") (ifseqformula "24"))
                  (rule "applyEq" (formula "11") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "9") (term "0") (ifseqformula "24"))
                  (rule "applyEq" (formula "37") (term "0") (ifseqformula "24"))
                  (rule "applyEq" (formula "45") (term "0,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "11") (term "1,0,1,0,1,0,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "36") (term "0") (ifseqformula "24"))
                  (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "29"))
                  (rule "applyEq" (formula "46") (term "1,0,1,1,0,1") (ifseqformula "28"))
                  (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "47") (term "1,0,1,1,0,1,1") (ifseqformula "28"))
                  (rule "applyEq" (formula "39") (term "0,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "26") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "37") (term "0") (ifseqformula "24"))
                  (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "28"))
                  (rule "applyEq" (formula "47") (term "1,0,1,1,0,0,1") (ifseqformula "28"))
                  (rule "applyEq" (formula "26") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "21") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "26") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "12") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "47") (term "0,1,0,0,0,0,0,0,1") (ifseqformula "24"))
                  (rule "applyEq" (formula "26") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "26") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "12") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "11") (term "0,0,1,0,0,0,0,0") (ifseqformula "24"))
                  (rule "jmod_axiom" (formula "45") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "1,0"))
                  (rule "jmod_axiom" (formula "34") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "45"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "34"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "47") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "47") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                  (rule "mul_literals" (formula "20") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,1,1"))
                  (rule "mul_literals" (formula "47") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0,1,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "46") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,1,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,1"))
                  (rule "mul_literals" (formula "46") (term "0,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "0,1,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                  (rule "polySimp_elimOne" (formula "44") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                  (rule "polySimp_elimOne" (formula "23") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "39"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                  (rule "polySimp_elimOne" (formula "39") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,1"))
                  (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                  (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "37"))
                  (rule "leq_literals" (formula "36") (term "0"))
                  (rule "concrete_or_1" (formula "36"))
                  (rule "true_left" (formula "36"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "42"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                  (rule "concrete_and_2" (formula "1") (term "1"))
                  (rule "concrete_or_4" (formula "1"))
                  (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "35"))
                  (rule "leq_literals" (formula "10") (term "0"))
                  (rule "concrete_or_1" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "38"))
                  (rule "leq_literals" (formula "31") (term "0"))
                  (rule "concrete_or_1" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "9"))
                  (rule "leq_literals" (formula "34") (term "0"))
                  (rule "concrete_or_1" (formula "34"))
                  (rule "true_left" (formula "34"))
                  (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "19"))
                  (rule "leq_literals" (formula "17") (term "0"))
                  (rule "concrete_or_1" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "38"))
                  (rule "leq_literals" (formula "44") (term "0"))
                  (rule "concrete_or_1" (formula "44"))
                  (rule "true_left" (formula "44"))
                  (rule "inEqSimp_contradInEq0" (formula "39") (ifseqformula "1"))
                  (rule "andLeft" (formula "39"))
                  (rule "inEqSimp_homoInEq1" (formula "39"))
                  (rule "polySimp_pullOutFactor1b" (formula "39") (term "0"))
                  (rule "add_literals" (formula "39") (term "1,1,0"))
                  (rule "times_zero_1" (formula "39") (term "1,0"))
                  (rule "add_zero_right" (formula "39") (term "0"))
                  (rule "leq_literals" (formula "39"))
                  (rule "closeFalse" (formula "39"))
               )
            )
            (branch "if true false"
               (rule "boolean_not_equal_1" (formula "1") (term "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Use Case"
            (rule "false_to_not_true" (formula "45") (term "0,0,1,1"))
            (rule "simplifyUpdate2" (formula "39"))
            (rule "simplifyUpdate2" (formula "45"))
            (rule "simplifyUpdate2" (formula "45") (term "1"))
            (rule "sequentialToParallel2" (formula "39"))
            (rule "simplifyUpdate2" (formula "39"))
            (rule "simplifyUpdate3" (formula "39") (term "1,0"))
            (rule "andLeft" (formula "39"))
            (rule "simplifyUpdate2" (formula "40"))
            (rule "andLeft" (formula "39"))
            (rule "andLeft" (formula "39"))
            (rule "simplifyUpdate2" (formula "40"))
            (rule "simplifyUpdate2" (formula "39"))
            (rule "andLeft" (formula "39"))
            (rule "simplifyUpdate2" (formula "40"))
            (rule "andLeft" (formula "39"))
            (rule "simplifyUpdate2" (formula "39"))
            (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,1,1,1"))
            (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,0,1,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,1,1"))
            (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,1,1,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,1,1,0,1,1,1"))
            (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,0,1,0,1,1,1"))
            (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,1,1,0,1,1"))
            (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,0,1,0,1,1"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "42") (term "0,1,0,0,1,1"))
            (rule "applyOnRigidFormula" (formula "44"))
            (rule "applyOnPV" (formula "44") (term "0"))
            (rule "applyOnRigidFormula" (formula "41"))
            (rule "simplifyUpdate1" (formula "41") (term "1"))
            (rule "applyOnRigidFormula" (formula "40"))
            (rule "simplifyUpdate1" (formula "40") (term "1"))
            (rule "simplifyUpdate1" (formula "40") (term "0"))
            (rule "applyOnPV" (formula "40") (term "1"))
            (rule "applyOnPV" (formula "40") (term "0"))
            (rule "applyOnRigidFormula" (formula "39"))
            (rule "applyOnPV" (formula "39") (term "0"))
            (rule "simplifyUpdate1" (formula "39") (term "1"))
            (rule "applyOnRigidFormula" (formula "43"))
            (rule "simplifyUpdate2" (formula "43") (term "0"))
            (rule "applyOnRigidFormula" (formula "42"))
            (rule "simplifyUpdate2" (formula "42") (term "0"))
            (rule "applyOnRigidTerm" (formula "41") (term "0"))
            (rule "applyOnPV" (formula "41") (term "0,0"))
            (rule "simplifyUpdate1" (formula "41") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "43") (term "1"))
            (rule "simplifyUpdate2" (formula "43") (term "1,1"))
            (rule "simplifyUpdate2" (formula "43") (term "0,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "0"))
            (rule "simplifyUpdate1" (formula "43") (term "1,0"))
            (rule "simplifyUpdate1" (formula "43") (term "0,0"))
            (rule "applyOnPV" (formula "43") (term "1,0"))
            (rule "applyOnPV" (formula "43") (term "0,0"))
            (rule "applyOnRigidFormula" (formula "42") (term "1"))
            (rule "applyOnRigidFormula" (formula "42") (term "0"))
            (rule "simplifyUpdate1" (formula "42") (term "1,0"))
            (rule "simplifyUpdate1" (formula "42") (term "0,0"))
            (rule "applyOnPV" (formula "42") (term "1,0"))
            (rule "applyOnPV" (formula "42") (term "0,0"))
            (rule "applyOnRigidFormula" (formula "43") (term "1,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "0,1"))
            (rule "applyOnRigidFormula" (formula "42") (term "0,1"))
            (rule "simplifyUpdate2" (formula "42") (term "0,0,1"))
            (rule "simplifyUpdate2" (formula "42") (term "1,0,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "0,1,1"))
            (rule "simplifyUpdate2" (formula "43") (term "0,0,1,1"))
            (rule "simplifyUpdate2" (formula "43") (term "1,0,1,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "0,0,1"))
            (rule "simplifyUpdate2" (formula "43") (term "1,0,0,1"))
            (rule "simplifyUpdate2" (formula "43") (term "0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "42") (term "0,0,1"))
            (rule "simplifyUpdate2" (formula "42") (term "0,0,0,1"))
            (rule "simplifyUpdate2" (formula "42") (term "1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "42") (term "1,0,1"))
            (rule "simplifyUpdate2" (formula "42") (term "1,1,0,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "0,0,1,1"))
            (rule "simplifyUpdate2" (formula "43") (term "0,0,0,1,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "1,0,1,1"))
            (rule "simplifyUpdate2" (formula "43") (term "1,1,0,1,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "1,0,0,1"))
            (rule "simplifyUpdate2" (formula "43") (term "1,1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "0,0,0,1"))
            (rule "simplifyUpdate2" (formula "43") (term "0,0,0,0,1"))
            (rule "simplifyUpdate2" (formula "43") (term "1,0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "42") (term "0,0,0,1"))
            (rule "simplifyUpdate1" (formula "42") (term "1,0,0,0,1"))
            (rule "applyOnPV" (formula "42") (term "0,0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "42") (term "1,0,0,1"))
            (rule "applyOnPV" (formula "42") (term "1,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "42") (term "0,1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "42") (term "0,1,0,1"))
            (rule "applyOnRigidFormula" (formula "42") (term "1,1,0,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "1,0,0,1,1"))
            (rule "applyOnPV" (formula "43") (term "1,1,0,0,1,1"))
            (rule "simplifyUpdate1" (formula "43") (term "0,1,0,0,1,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "0,1,0,1,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "1,1,0,1,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "0,1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "1,1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "0,0,0,0,1"))
            (rule "applyOnPV" (formula "43") (term "0,0,0,0,0,1"))
            (rule "simplifyUpdate1" (formula "43") (term "1,0,0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "1,0,0,0,1"))
            (rule "simplifyUpdate1" (formula "43") (term "0,1,0,0,0,1"))
            (rule "applyOnPV" (formula "43") (term "1,1,0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "42") (term "0,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "42") (term "0,0,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "42") (term "1,0,0,1,0,1"))
            (rule "applyOnPV" (formula "42") (term "1,0,0,1,0,1"))
            (rule "applyOnRigidFormula" (formula "42") (term "0,1,1,0,1"))
            (rule "simplifyUpdate1" (formula "42") (term "1,0,1,1,0,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "0,0,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "43") (term "0,0,0,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "43") (term "1,0,0,1,0,1,1"))
            (rule "applyOnPV" (formula "43") (term "1,0,0,1,0,1,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "0,1,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "43") (term "1,0,1,1,0,1,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "0,0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "43") (term "0,0,0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "43") (term "1,0,0,1,0,0,1"))
            (rule "applyOnPV" (formula "43") (term "1,0,0,1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "43") (term "0,1,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "43") (term "1,0,1,1,0,0,1"))
            (rule "applyOnRigidTerm" (formula "42") (term "0,0,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "42") (term "2,0,0,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "42") (term "0,0,0,0,1,0,1"))
            (rule "applyOnPV" (formula "42") (term "1,0,0,0,1,0,1"))
            (rule "applyOnRigidTerm" (formula "42") (term "0,0,1,1,0,1"))
            (rule "applyOnPV" (formula "42") (term "1,0,0,1,1,0,1"))
            (rule "simplifyUpdate1" (formula "42") (term "0,0,0,1,1,0,1"))
            (rule "simplifyUpdate1" (formula "42") (term "2,0,0,1,1,0,1"))
            (rule "applyOnRigidTerm" (formula "43") (term "0,0,0,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "43") (term "2,0,0,0,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "43") (term "0,0,0,0,1,0,1,1"))
            (rule "applyOnPV" (formula "43") (term "1,0,0,0,1,0,1,1"))
            (rule "applyOnRigidTerm" (formula "43") (term "0,0,1,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "43") (term "2,0,0,1,1,0,1,1"))
            (rule "simplifyUpdate1" (formula "43") (term "0,0,0,1,1,0,1,1"))
            (rule "applyOnPV" (formula "43") (term "1,0,0,1,1,0,1,1"))
            (rule "applyOnRigidTerm" (formula "43") (term "0,0,0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "43") (term "2,0,0,0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "43") (term "0,0,0,0,1,0,0,1"))
            (rule "applyOnPV" (formula "43") (term "1,0,0,0,1,0,0,1"))
            (rule "applyOnRigidTerm" (formula "43") (term "0,0,1,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "43") (term "2,0,0,1,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "43") (term "0,0,0,1,1,0,0,1"))
            (rule "applyOnPV" (formula "43") (term "1,0,0,1,1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,1,1"))
            (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0,1"))
            (rule "variableDeclarationAssign" (formula "50") (term "1"))
            (rule "variableDeclaration" (formula "50") (term "1") (newnames "b_1"))
            (rule "assignment" (formula "50") (term "1"))
            (rule "sequentialToParallel2" (formula "50"))
            (rule "simplifyUpdate3" (formula "50") (term "1,0"))
            (rule "commute_and" (formula "42") (term "1,0,1"))
            (rule "commute_and" (formula "42") (term "0,0,1"))
            (rule "commute_and" (formula "43") (term "1,0,1,1"))
            (rule "commute_and" (formula "43") (term "1,0,0,1"))
            (rule "commute_and" (formula "43") (term "0,0,1,1"))
            (rule "commute_and" (formula "43") (term "0,0,0,1"))
            (rule "methodCallEmpty" (formula "50") (term "1"))
            (rule "emptyModality" (formula "50") (term "1"))
            (rule "impRight" (formula "50"))
            (rule "simplifyUpdate2" (formula "51"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "applyOnRigidFormula" (formula "45"))
            (rule "simplifyUpdate1" (formula "45") (term "1"))
            (rule "applyOnPV" (formula "45") (term "0"))
            (rule "boolean_equal" (formula "45"))
            (rule "closeTrue" (formula "45"))
         )
      )
      (branch "Exceptional Post (hash)"
         (rule "simplifyUpdate2" (formula "11"))
         (rule "simplifyUpdate2" (formula "11") (term "1"))
         (rule "andLeft" (formula "11"))
         (rule "simplifyUpdate2" (formula "11"))
         (rule "andLeft" (formula "12"))
         (rule "simplifyUpdate2" (formula "13"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "13"))
         (rule "simplifyUpdate2" (formula "14"))
         (rule "notLeft" (formula "11"))
         (rule "close" (formula "14") (ifseqformula "13"))
      )
      (branch "Pre (hash)"
         (rule "expand_inInt" (formula "14") (term "1,1,1,1"))
         (rule "replace_int_MIN" (formula "14") (term "0,1,1,1,1,1"))
         (rule "replace_int_MAX" (formula "14") (term "1,0,1,1,1,1"))
         (rule "simplifyUpdate2" (formula "14"))
         (rule "simplifyUpdate2" (formula "14") (term "1"))
         (rule "applyOnRigidFormula" (formula "14"))
         (rule "simplifyUpdate2" (formula "14") (term "0"))
         (rule "applyOnRigidFormula" (formula "14") (term "1"))
         (rule "simplifyUpdate2" (formula "14") (term "1,1"))
         (rule "simplifyUpdate2" (formula "14") (term "0,1"))
         (rule "applyOnRigidFormula" (formula "14") (term "0"))
         (rule "simplifyUpdate2" (formula "14") (term "0,0"))
         (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "9"))
         (rule "concrete_and_1" (formula "14") (term "0"))
         (rule "applyOnRigidFormula" (formula "14") (term "1,1"))
         (rule "applyOnRigidFormula" (formula "14") (term "0,1"))
         (rule "simplifyUpdate2" (formula "14") (term "0,0,1"))
         (rule "replace_known_left" (formula "14") (term "0,0,1") (ifseqformula "1"))
         (rule "concrete_and_1" (formula "14") (term "0,1"))
         (rule "applyOnRigidFormula" (formula "14") (term "0"))
         (rule "applyOnRigidFormula" (formula "14") (term "1,1,1"))
         (rule "simplifyUpdate1" (formula "14") (term "0,1,1,1"))
         (rule "applyOnPV" (formula "14") (term "1,1,1,1"))
         (rule "applyOnRigidFormula" (formula "14") (term "0,1,1"))
         (rule "simplifyUpdate1" (formula "14") (term "1,0,1,1"))
         (rule "applyOnPV" (formula "14") (term "0,0,1,1"))
         (rule "applyOnRigidFormula" (formula "14") (term "0,1"))
         (rule "applyOnRigidFormula" (formula "14") (term "0,0"))
         (rule "applyOnPV" (formula "14") (term "0,0,0"))
         (rule "simplifyUpdate1" (formula "14") (term "1,0,0"))
         (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "11"))
         (rule "concrete_not_2" (formula "14") (term "0"))
         (rule "concrete_and_1" (formula "14"))
         (rule "applyOnRigidFormula" (formula "14") (term "0,0"))
         (rule "simplifyUpdate1" (formula "14") (term "1,0,0"))
         (rule "applyOnPV" (formula "14") (term "0,0,0"))
         (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "11"))
         (rule "concrete_or_2" (formula "14") (term "0"))
         (rule "applyOnRigidFormula" (formula "14") (term "0"))
         (rule "simplifyUpdate1" (formula "14") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "14") (term "0,0"))
         (rule "simplifyUpdate1" (formula "14") (term "0,0,0"))
         (rule "applyOnPV" (formula "14") (term "1,0,0"))
         (rule "simplifyUpdate1" (formula "14") (term "2,0,0"))
         (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "7"))
         (rule "concrete_and_1" (formula "14"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "1"))
         (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "8"))
         (rule "applyEq" (formula "10") (term "0") (ifseqformula "7"))
         (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "8"))
         (rule "notLeft" (formula "8"))
         (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "6") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "3"))
         (rule "insert_constant_value" (formula "6") (term "1,1,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "6") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "6") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "6") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "eqClose" (formula "6") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_3" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "6") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "eqClose" (formula "6") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_3" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "insert_constant_value" (formula "6") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "eqClose" (formula "6") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "concrete_and_3" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "expand_inInt" (formula "6") (term "1,1"))
         (rule "expand_inInt" (formula "6") (term "0,1"))
         (rule "mul_literals" (formula "6") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "6") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "replace_int_MIN" (formula "6") (term "0,1,1,1"))
         (rule "replace_int_MAX" (formula "6") (term "1,0,1,1"))
         (rule "replace_int_MIN" (formula "6") (term "0,1,0,1"))
         (rule "replace_int_MAX" (formula "6") (term "1,0,0,1"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "8"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "7"))
         (rule "notLeft" (formula "6"))
         (rule "andLeft" (formula "6"))
         (rule "notLeft" (formula "6"))
         (rule "exLeft" (formula "13") (inst "sk=i_1_0"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "exLeft" (formula "12") (inst "sk=i_2_0"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "12"))
         (rule "eqSymm" (formula "11"))
         (rule "eqSymm" (formula "9") (term "1,0,1,0,1,0"))
         (rule "eqSymm" (formula "9") (term "1,1,0,1,0"))
         (rule "eqSymm" (formula "14"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,2,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,2,0,1,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,2,0,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,2,0,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "0,2,0,1,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "0,2,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "0,2,0,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "0,2,0,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "0,2,0,0,0,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "0,2,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "0,2,0,0,0,2,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "0,2,0,1,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "0,2,1,1,0,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "8") (term "0,2,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "10"))
         (rule "mul_literals" (formula "10") (term "1,0,0"))
         (rule "add_literals" (formula "10") (term "0,0"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "16"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "13"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "13") (term "0"))
         (rule "ifthenelse_negated" (formula "11") (term "2,0"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_mulAssoc" (formula "19") (term "1,0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1,1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_addComm1" (formula "19") (term "0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,1,1,0"))
         (rule "inEqSimp_gtToGeq" (formula "18") (term "1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_addComm1" (formula "18") (term "0,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "24"))
         (rule "inEqSimp_commuteLeq" (formula "22"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
         (rule "inEqSimp_commuteGeq" (formula "7"))
         (rule "inEqSimp_commuteLeq" (formula "6"))
         (rule "inEqSimp_commuteLeq" (formula "15"))
         (rule "inEqSimp_commuteLeq" (formula "12"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,1,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,1,0"))
         (rule "applyEq" (formula "19") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "14"))
         (rule "applyEq" (formula "6") (term "0") (ifseqformula "14"))
         (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "14"))
         (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "14"))
         (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "14"))
         (rule "applyEq" (formula "31") (term "0,1") (ifseqformula "14"))
         (rule "applyEq" (formula "7") (term "0") (ifseqformula "14"))
         (rule "applyEq" (formula "18") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "14"))
         (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "14"))
         (rule "applyEq" (formula "18") (term "1,0,1,0,1,0,1,0") (ifseqformula "14"))
         (rule "applyEq" (formula "19") (term "1,0,1,0,1,0,1,0") (ifseqformula "14"))
         (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
         (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
         (rule "applyEq" (formula "9") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
         (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "14"))
         (rule "applyEq" (formula "8") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
         (rule "applyEq" (formula "9") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "14"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10"))
         (rule "mul_literals" (formula "10") (term "1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "19") (term "0,1,1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,0,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "16"))
         (rule "polySimp_mulLiterals" (formula "16") (term "0"))
         (rule "polySimp_elimOne" (formula "16") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "13"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0"))
         (rule "polySimp_elimOne" (formula "13") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "18") (term "0,1,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "19") (term "0,1,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
         (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
         (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0"))
         (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "10"))
         (rule "leq_literals" (formula "23") (term "0"))
         (rule "concrete_or_1" (formula "23"))
         (rule "true_left" (formula "23"))
         (rule "inEqSimp_subsumption1" (formula "30") (term "1") (ifseqformula "6"))
         (rule "leq_literals" (formula "30") (term "0,1"))
         (rule "concrete_or_1" (formula "30") (term "1"))
         (rule "concrete_and_3" (formula "30"))
         (rule "inEqSimp_leqRight" (formula "30"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
         (rule "leq_literals" (formula "7") (term "0"))
         (rule "concrete_or_1" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "1"))
         (rule "qeq_literals" (formula "7") (term "0"))
         (rule "concrete_and_2" (formula "7"))
         (rule "closeFalse" (formula "7"))
      )
   )
   (branch "Null Reference (tab = null)"
      (rule "false_right" (formula "15"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "applyEq" (formula "12") (term "0") (ifseqformula "9"))
      (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "9"))
      (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "9"))
      (rule "notLeft" (formula "9"))
      (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "7") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "4"))
      (rule "insert_constant_value" (formula "7") (term "1,1,0,0,0,0,0,0,0"))
      (rule "insert_constant_value" (formula "7") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "insert_constant_value" (formula "7") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "insert_constant_value" (formula "7") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "eqClose" (formula "7") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "concrete_and_3" (formula "7") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "insert_constant_value" (formula "7") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "eqClose" (formula "7") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "concrete_and_3" (formula "7") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "insert_constant_value" (formula "7") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "eqClose" (formula "7") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "concrete_and_3" (formula "7") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "expand_inInt" (formula "7") (term "0,1"))
      (rule "expand_inInt" (formula "7") (term "1,1"))
      (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "replace_int_MAX" (formula "7") (term "1,0,0,1"))
      (rule "replace_int_MIN" (formula "7") (term "0,1,0,1"))
      (rule "replace_int_MAX" (formula "7") (term "1,0,1,1"))
      (rule "replace_int_MIN" (formula "7") (term "0,1,1,1"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "8"))
      (rule "notLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "notLeft" (formula "7"))
      (rule "close" (formula "24") (ifseqformula "1"))
   )
)
(branch "Exceptional Post (maskNull)"
   (rule "simplifyUpdate2" (formula "10"))
   (rule "simplifyUpdate2" (formula "7"))
   (rule "simplifyUpdate2" (formula "7") (term "1"))
   (rule "andLeft" (formula "7"))
   (rule "simplifyUpdate2" (formula "7"))
   (rule "andLeft" (formula "8"))
   (rule "simplifyUpdate2" (formula "9"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "9"))
   (rule "notLeft" (formula "7"))
   (rule "close" (formula "11") (ifseqformula "10"))
)
(branch "Pre (maskNull)"
   (rule "simplifyUpdate2" (formula "9"))
   (rule "simplifyUpdate2" (formula "9") (term "1"))
   (rule "applyOnRigidFormula" (formula "9"))
   (rule "applyOnRigidFormula" (formula "9") (term "0"))
   (rule "simplifyUpdate2" (formula "9") (term "0,0"))
   (rule "applyOnRigidFormula" (formula "9") (term "1"))
   (rule "simplifyUpdate2" (formula "9") (term "0,1"))
   (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "1"))
   (rule "concrete_and_1" (formula "9") (term "1"))
   (rule "applyOnRigidFormula" (formula "9") (term "1,0"))
   (rule "applyOnRigidFormula" (formula "9") (term "1"))
   (rule "applyOnRigidFormula" (formula "9") (term "0,1,0"))
   (rule "applyOnPV" (formula "9") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "1,0,1,0"))
   (rule "replace_known_right" (formula "9") (term "0,1,0") (ifseqformula "8"))
   (rule "concrete_not_2" (formula "9") (term "1,0"))
   (rule "concrete_and_3" (formula "9") (term "0"))
   (rule "applyOnRigidFormula" (formula "9") (term "0,1"))
   (rule "simplifyUpdate1" (formula "9") (term "1,0,1"))
   (rule "applyOnPV" (formula "9") (term "0,0,1"))
   (rule "replace_known_right" (formula "9") (term "0,1") (ifseqformula "8"))
   (rule "concrete_or_2" (formula "9") (term "1"))
   (rule "applyOnRigidFormula" (formula "9") (term "1"))
   (rule "simplifyUpdate1" (formula "9") (term "1,1"))
   (rule "applyOnRigidTerm" (formula "9") (term "0,1"))
   (rule "simplifyUpdate1" (formula "9") (term "0,0,1"))
   (rule "simplifyUpdate1" (formula "9") (term "2,0,1"))
   (rule "applyOnPV" (formula "9") (term "1,0,1"))
   (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "4"))
   (rule "concrete_and_3" (formula "9"))
   (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "9"))
   (rule "notRight" (formula "9"))
   (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "7") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "4"))
   (rule "insert_constant_value" (formula "7") (term "1,1,0,0,0,0,0,0,0"))
   (rule "insert_constant_value" (formula "7") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "insert_constant_value" (formula "7") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "eqClose" (formula "7") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_3" (formula "7") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "insert_constant_value" (formula "7") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "insert_constant_value" (formula "7") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "eqClose" (formula "7") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_3" (formula "7") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "insert_constant_value" (formula "7") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "eqClose" (formula "7") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_3" (formula "7") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "expand_inInt" (formula "7") (term "0,1"))
   (rule "expand_inInt" (formula "7") (term "1,1"))
   (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "7") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "replace_int_MAX" (formula "7") (term "1,0,0,1"))
   (rule "replace_int_MIN" (formula "7") (term "0,1,0,1"))
   (rule "replace_int_MAX" (formula "7") (term "1,0,1,1"))
   (rule "replace_int_MIN" (formula "7") (term "0,1,1,1"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "7"))
   (rule "close" (formula "22") (ifseqformula "1"))
)
)
}
